(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    202745,       4102]
NotebookOptionsPosition[    198565,       3966]
NotebookOutlinePosition[    199186,       3990]
CellTagsIndexPosition[    199106,       3985]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Slide 1", "Section"],

Cell[TextData[StyleBox["Camera pinhole main vars and fncs",
 FontSize->14,
 FontWeight->"Bold",
 FontColor->RGBColor[0., 0.7019607843137254, 0.7019607843137254]]], "Text",
 CellChangeTimes->{{3.5033495423218164`*^9, 3.5033495495602293`*^9}}],

Cell[BoxData[{
 StyleBox[
  RowBox[{"aperture", " ", "=", " ", "1.41732"}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"focus", " ", "=", " ", "1.37795"}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"xres", " ", "=", " ", "640"}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"yres", " ", "=", " ", "480"}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"aratio", " ", "=", " ", 
    RowBox[{"xres", "/", "yres"}]}], "\[IndentingNewLine]"}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"vectorDIR", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"vectorUP", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}]}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"VectorRX", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}]}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"VectorZERO", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"VectorORG", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
   "\[IndentingNewLine]"}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"radtodeg", " ", "=", "  ", 
   RowBox[{"180", "/", "\[Pi]"}]}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 
    0.34509803921568627`]], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.5033478141196036`*^9, 3.5033478438688555`*^9}, {
   3.503347899716953*^9, 3.503347913179776*^9}, {3.5033484012734275`*^9, 
   3.50334842567187*^9}, {3.5033484824091687`*^9, 3.503348514014824*^9}, {
   3.5033486615130816`*^9, 3.5033486749915047`*^9}, {3.503357419817037*^9, 
   3.503357440050273*^9}, {3.503439652717193*^9, 3.5034396678024197`*^9}, {
   3.5034397092204914`*^9, 3.5034397831442194`*^9}, {3.5034398626887584`*^9, 
   3.5034399004036236`*^9}, 3.503439944848101*^9, {3.503494187478284*^9, 
   3.503494187915084*^9}, {3.503528927060758*^9, 3.503528933222769*^9}, {
   3.5035291485967445`*^9, 3.5035291510147486`*^9}, {3.5035293116950283`*^9, 
   3.503529315985036*^9}}],

Cell[TextData[StyleBox["// Find additional AOV and vertical AOV ",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5034401684900913`*^9, 3.5034401851353207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["AOV",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"2", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"(", "aperture", ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "focus"}], ")"}]}], "]"}], " ", "*", " ", "radtodeg", 
   " "}]}]], "Input",
 CellChangeTimes->{{3.5033485815473413`*^9, 3.5033485821245427`*^9}, {
   3.503348616585003*^9, 3.503348645788254*^9}, {3.5033486790787115`*^9, 
   3.503348679328312*^9}, {3.5033500413198867`*^9, 3.5033500458906946`*^9}, {
   3.503352420634037*^9, 3.503352424378043*^9}, 3.5034396712188253`*^9, {
   3.5034401283668213`*^9, 3.503440131284026*^9}, {3.5034941994591045`*^9, 
   3.5034942047787137`*^9}}],

Cell[BoxData["54.43222311461495`"], "Output",
 CellChangeTimes->{{3.5033486139953985`*^9, 3.5033486470674562`*^9}, 
   3.5033486897803307`*^9, 3.503439792987837*^9, 3.5034401319548273`*^9, 
   3.5034506140867023`*^9, 3.5034872640960827`*^9, 3.50357746309324*^9, 
   3.503616503232526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["vAOV",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"2", 
   RowBox[{"ArcTan", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"aperture", "/", "aratio"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "focus"}], ")"}]}], "]"}], " ", "*", " ", 
   "radtodeg"}]}]], "Input",
 CellChangeTimes->{{3.5033476683217497`*^9, 3.5033477549955006`*^9}, 
   3.5033478105783978`*^9, {3.503347848829664*^9, 3.503347854539274*^9}, {
   3.5033479028057585`*^9, 3.503347927953002*^9}, {3.503348530285652*^9, 
   3.5033485500820866`*^9}, {3.5033485860713496`*^9, 3.503348609767791*^9}, 
   3.5033486830411186`*^9, 3.5033507743591647`*^9, {3.5033512168695364`*^9, 
   3.503351217914738*^9}, {3.503351268006426*^9, 3.503351280158847*^9}, 
   3.503439672154827*^9, 3.5034942062919164`*^9}],

Cell[BoxData["42.184679011655`"], "Output",
 CellChangeTimes->{
  3.503347757039104*^9, 3.5033478611380854`*^9, 3.5033478926501403`*^9, 
   3.5033479329762106`*^9, 3.503348519818034*^9, {3.5033485948229647`*^9, 
   3.5033486119985948`*^9}, 3.503348691823934*^9, {3.503351207041519*^9, 
   3.503351236759571*^9}, {3.503351269472828*^9, 3.5033512995808806`*^9}, 
   3.5034397908974333`*^9, 3.5034506141179028`*^9, 3.503487264111683*^9, 
   3.5035774631244397`*^9, 3.5036165032637258`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Find camera world position and direction from trs \
_local_ matrix",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{
  3.5034405242175117`*^9, {3.5034409917035265`*^9, 3.5034409940279303`*^9}, {
   3.503442546052636*^9, 3.5034425518870463`*^9}, {3.5034427043617125`*^9, 
   3.5034427851074533`*^9}, {3.503442822188718*^9, 3.5034428881300325`*^9}, {
   3.5034430993620014`*^9, 3.5034431474880853`*^9}, {3.5034432108865957`*^9, 
   3.5034432578114777`*^9}, {3.503443311397571*^9, 3.5034434017125263`*^9}, {
   3.503443498042694*^9, 3.5034435015527005`*^9}, {3.503447797178993*^9, 
   3.503447803247404*^9}, {3.50345134107917*^9, 3.5034513433879743`*^9}, {
   3.503451494302637*^9, 3.5034515023834515`*^9}, {3.503452240405138*^9, 
   3.5034522427763424`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["cWorldMatrix",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0.921863", ",", "0.000000", ",", "0.387516", ",", "0.000000"}],
       "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{"0.347102", ",", "0.444635", ",", 
       RowBox[{"-", "0.825724"}], ",", 
       RowBox[{"-", "0.000000"}]}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.172303"}], ",", "0.895712", ",", "0.409893", ",", 
       "0.000000"}], "}"}], ",", "\n", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "5.428909"}], ",", "20.110733", ",", "10.883512", ",", 
       "1.000000"}], "}"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5034480439714236`*^9, 3.503448107895132*^9}, {
  3.5034512236577654`*^9, 3.503451224593767*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["cLocalMatrix",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   StyleBox["{",
    FontColor->RGBColor[
     0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]], 
   RowBox[{
    RowBox[{
     StyleBox["{",
      FontColor->RGBColor[
       0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]], 
     RowBox[{"0.921863", ",", "0.347102", ",", 
      RowBox[{"-", "0.172303"}], ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.00000"}], ",", "0.444635", ",", "0.895712", ",", "0"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.387516", ",", 
      RowBox[{"-", "0.825724"}], ",", "0.409893", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0.78718", ",", "1.92922", ",", 
      RowBox[{"-", "23.4099"}], ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.503443443364599*^9, 3.503443483534669*^9}, {
   3.503443648227357*^9, 3.5034436700361958`*^9}, {3.5034480041289544`*^9, 
   3.5034480305086*^9}, {3.503450639187146*^9, 3.503450758215354*^9}, {
   3.503450794579017*^9, 3.5034509194728355`*^9}, {3.503451016817005*^9, 
   3.503451022183414*^9}, {3.5034512184005566`*^9, 3.503451218806157*^9}, 
   3.503452232433524*^9, {3.5034523941746063`*^9, 3.5034523990886145`*^9}, {
   3.503452446325497*^9, 3.5034524527059083`*^9}, {3.503452581140932*^9, 
   3.503452641684638*^9}, {3.5034526850995135`*^9, 3.503452707563553*^9}}],

Cell[TextData[StyleBox["// Transpose works only for rotation matrices, it \
converts local to global ",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.5034509576149015`*^9, 3.503451005538185*^9}, {
  3.5034511741744795`*^9, 3.503451179135288*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["cRotMatrix",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", "cLocalMatrix", "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"for", " ", "the", " ", "first", " ", "3", 
    RowBox[{"{", "}"}], " ", "take", " ", "the", " ", "first", " ", "3", " ", 
    "elements"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", "cRotMatrix", "]"}]}], "Input",
 CellChangeTimes->{{3.503451027893024*^9, 3.50345114572003*^9}, 
   3.503451230303377*^9, 3.503451316602728*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0.921863`", "0.`", "0.387516`"},
     {"0.347102`", "0.444635`", 
      RowBox[{"-", "0.825724`"}]},
     {
      RowBox[{"-", "0.172303`"}], "0.895712`", "0.409893`"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.5034512471826067`*^9, 3.503487264236483*^9, 
  3.50357746324924*^9, 3.503616503357326*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// We do use the Inverse of the local matrix and take \
last row first 3 cols for the trans vector",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.5034527168299685`*^9, 3.503452762257248*^9}, 
   3.5034528486345987`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CtransMatrix",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "=", " ", 
  RowBox[{"Take", "[", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     StyleBox["cLocalMatrix",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
     StyleBox["]",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5034527691212597`*^9, 3.5034527940657034`*^9}, {
  3.5034528614890213`*^9, 3.5034528674794316`*^9}, {3.5034530402185326`*^9, 
  3.503453043244938*^9}, {3.5034531380463033`*^9, 3.503453139091505*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "5.42890805977283`"}], ",", "20.110720139089345`", ",", 
    "10.883497638049423`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.503616503388526*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{"CtransVector", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"CtransMatrix", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", " ", 
     RowBox[{"CtransMatrix", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", " ", 
     RowBox[{"CtransMatrix", "[", 
      RowBox[{"[", 
       RowBox[{"1", ",", "3"}], "]"}], "]"}]}], "}"}]}],
  FontColor->RGBColor[
   0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]], "Input",
 CellChangeTimes->{{3.5034530449765415`*^9, 3.5034531457995167`*^9}, {
   3.503453191289196*^9, 3.5034531963124046`*^9}, 3.503487254455266*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.42890805977283`"}], ",", "20.110720139089345`", ",", 
   "10.883497638049423`"}], "}"}]], "Output",
 CellChangeTimes->{{3.5034530984534345`*^9, 3.503453148326721*^9}, {
   3.503453180181977*^9, 3.5034532004776125`*^9}, {3.5034872565612698`*^9, 
   3.5034872643300834`*^9}, 3.50357746345204*^9, 3.503616503435326*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// If camera coords are expressed with position and \
rotation vectors\n// Take care here 4x4 matrices are col/row \
swapped(transposed)",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.503428875281441*^9, 3.5034289563859825`*^9}, {
   3.5034385748177137`*^9, 3.5034385751765146`*^9}, 3.5034401073847847`*^9, {
   3.5034426433188057`*^9, 3.5034426448944087`*^9}, {3.5034520410523906`*^9, 
   3.5034520530644116`*^9}, 3.5034523445665197`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["RotMatrix",
    FontColor->RGBColor[
     0.23529411764705882`, 0.3568627450980392, 0.5686274509803921]], "[", 
   RowBox[{"a_", ",", " ", "b_"}], "]"}], ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"TransformationMatrix", "[", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{"a", ",", " ", "b"}], "]"}], "]"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["TransMatrix",
    FontColor->RGBColor[
     0.23529411764705882`, 0.3568627450980392, 0.5686274509803921]], "[", 
   "a_", "]"}], " ", ":=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"TransformationMatrix", "[", 
    RowBox[{"TranslationTransform", "[", "a", "]"}], "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.503418404224786*^9, 3.5034184748617086`*^9}, {
   3.5034185291654034`*^9, 3.5034185943111167`*^9}, {3.503418691218486*^9, 
   3.5034187117637215`*^9}, {3.5034188189515085`*^9, 3.503418841540348*^9}, {
   3.5034190455263033`*^9, 3.503419055962722*^9}, {3.5034191412792706`*^9, 
   3.503419161012105*^9}, {3.5034192012453747`*^9, 3.5034192273598204`*^9}, {
   3.503419543709173*^9, 3.503419546002377*^9}, {3.503419623721712*^9, 
   3.5034196444853487`*^9}, {3.5034198105164385`*^9, 3.503419813964044*^9}, {
   3.5034198726201468`*^9, 3.5034198772221546`*^9}, {3.503420100271343*^9, 
   3.5034201553862395`*^9}, {3.5034201876314955`*^9, 
   3.5034203796136303`*^9}, {3.5034204125608873`*^9, 
   3.5034204147604914`*^9}, {3.5034204501521525`*^9, 3.503420507341852*^9}, {
   3.5034206251376576`*^9, 3.5034206307380676`*^9}, {3.5034275110986633`*^9, 
   3.5034275265738897`*^9}, {3.50342786496968*^9, 3.503427868651286*^9}, {
   3.5034279528602333`*^9, 3.5034279556838384`*^9}, {3.50342820298267*^9, 
   3.5034282703279877`*^9}, {3.503428400822215*^9, 3.503428422506253*^9}, {
   3.5034284842139597`*^9, 3.503428510000805*^9}, {3.5034287309655895`*^9, 
   3.503428733929595*^9}, {3.503428807296523*^9, 3.5034288092933264`*^9}, 
   3.503428863893421*^9, {3.5034385244140263`*^9, 3.5034385373308487`*^9}, {
   3.5034393258342233`*^9, 3.5034393327606354`*^9}, {3.503441151479005*^9, 
   3.5034411544898105`*^9}, {3.5034519151601715`*^9, 3.503451945580224*^9}}],

Cell[BoxData[
 RowBox[{"crotin", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"-", "63.600"}], ",", " ", 
    RowBox[{"-", "22.800"}], ",", " ", "0.00"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.503441348725749*^9, 3.5034414126170597`*^9}, {
   3.503441680422727*^9, 3.503441681046728*^9}, {3.5034418908826942`*^9, 
   3.503441891303895*^9}, {3.5034419977428803`*^9, 3.503441999006482*^9}, {
   3.503442155880356*^9, 3.5034421565043573`*^9}, 3.5034428077430925`*^9, {
   3.503442943034129*^9, 3.503442971129778*^9}, 3.5034432593402805`*^9, {
   3.503451895862938*^9, 3.5034519228041844`*^9}, {3.503453226217657*^9, 
   3.503453276636945*^9}, {3.5034534982509317`*^9, 3.503453498484932*^9}, {
   3.503453532258991*^9, 3.503453533569393*^9}, {3.503453617294739*^9, 
   3.50345361784074*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["rMatrixX",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=",
    " ", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     StyleBox["RotMatrix",
      FontColor->RGBColor[
       0.23529411764705882`, 0.3568627450980392, 0.5686274509803921]], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"crotin", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", "Degree"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["rMatrixY",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=",
    " ", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     StyleBox["RotMatrix",
      FontColor->RGBColor[
       0.23529411764705882`, 0.3568627450980392, 0.5686274509803921]], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"crotin", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "Degree"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], "]"}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["rMatrixZ",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=",
    " ", 
   RowBox[{"MatrixForm", "[", 
    RowBox[{
     StyleBox["RotMatrix",
      FontColor->RGBColor[
       0.23529411764705882`, 0.3568627450980392, 0.5686274509803921]], "[", 
     RowBox[{
      RowBox[{
       RowBox[{"crotin", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "Degree"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["tMatrixXYZ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"MatrixForm", "[", 
   RowBox[{
    StyleBox["TransMatrix",
     FontColor->RGBColor[
      0.23529411764705882`, 0.3568627450980392, 0.5686274509803921]], "[", 
    StyleBox["CtransVector",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "]"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5034205224582787`*^9, 3.5034205348291*^9}, {
   3.5034206320328693`*^9, 3.503420655963311*^9}, {3.5034251289441023`*^9, 
   3.5034251739357815`*^9}, {3.5034260839689674`*^9, 
   3.5034260840469675`*^9}, {3.5034274517249594`*^9, 
   3.5034274960446367`*^9}, {3.503427610704837*^9, 3.5034276115784383`*^9}, {
   3.5034276471777*^9, 3.503427657785719*^9}, {3.503427870975691*^9, 
   3.503427872800894*^9}, {3.5034279587414436`*^9, 3.5034279734678693`*^9}, {
   3.5034280449159937`*^9, 3.503428073557644*^9}, {3.5034283376733046`*^9, 
   3.503428374536169*^9}, {3.5034284272642612`*^9, 3.503428428677064*^9}, 
   3.503428792336097*^9, {3.503428835111371*^9, 3.503428836874174*^9}, {
   3.503428979536423*^9, 3.5034290010956607`*^9}, 3.5034384382774754`*^9, {
   3.503439375052309*^9, 3.503439403834359*^9}, 3.503440410883314*^9, 
   3.5034405277431173`*^9, {3.5034406462877245`*^9, 3.5034406885169983`*^9}, {
   3.503441423708679*^9, 3.50344147568797*^9}, {3.5034416696743083`*^9, 
   3.503441670111109*^9}, 3.5034417185023937`*^9, {3.5034417661604767`*^9, 
   3.50344184263181*^9}, {3.5034419454983892`*^9, 3.503441985684059*^9}, {
   3.5034422680913515`*^9, 3.503442287903386*^9}, {3.503442983500599*^9, 
   3.503443009115844*^9}, {3.503451863524081*^9, 3.5034518803253107`*^9}, {
   3.5034519360018077`*^9, 3.5034519384042115`*^9}, {3.503452933779547*^9, 
   3.5034529883640423`*^9}, 3.503453215952839*^9, {3.5034532983677826`*^9, 
   3.503453339255454*^9}, {3.5034533807983265`*^9, 3.50345338251433*^9}, 
   3.5034534211555967`*^9, {3.5034534656156745`*^9, 3.5034534799832993`*^9}, {
   3.5034535106685534`*^9, 3.503453546080615*^9}, {3.5035267519333653`*^9, 
   3.5035267535089684`*^9}}],

Cell[TextData[StyleBox["// Apply transformations",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5034404300869474`*^9, 3.5034405063398805`*^9}, 
   3.5034412170303197`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   StyleBox["cPosition",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=",
    " ", 
   StyleBox[
    RowBox[{
     RowBox[{"MatrixForm", "[", "VectorZERO", "]"}], ".", "tMatrixXYZ"}],
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
  StyleBox["                                         ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"camera", " ", "position"}], " ", "*)"}],
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 
     0.34509803921568627`]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["cDirection",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=",
    " ", 
   RowBox[{
    RowBox[{"MatrixForm", "[", "vectorDIR", "]"}], ".", 
    StyleBox["rMatrixX",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
    StyleBox[".",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
    StyleBox["rMatrixY",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
    StyleBox[".",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
    StyleBox["rMatrixZ",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]}], 
  StyleBox["   ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"camera", " ", "rotate"}], " ", "*)"}],
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["cPos",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=",
    " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      StyleBox["cPosition",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1", ",", "4", ",", "1"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["cPosition",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1", ",", "4", ",", "2"}], "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["cPosition",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1", ",", "4", ",", "3"}], "]"}], "]"}]}], "}"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"extract", " ", "vec"}], ".."}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["cDir",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   RowBox[{
    StyleBox["Take",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
    StyleBox["[",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
    RowBox[{"vectorDIR", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ".", 
   StyleBox["cRotMatrix",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox["                                                    ",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{"rot", " ", "from", " ", "3", "x3", " ", "rot", " ", "matrix"}], 
     "*)"}],
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 
      0.34509803921568627`]]}]}]}], "Input",
 CellChangeTimes->{{3.5034259912056065`*^9, 3.5034259974700174`*^9}, {
   3.503426035669684*^9, 3.5034260578233223`*^9}, {3.5034261948695607`*^9, 
   3.5034261949475613`*^9}, {3.503427723103033*^9, 3.5034277282510414`*^9}, {
   3.5034280203771515`*^9, 3.5034280229199553`*^9}, {3.5034285516216774`*^9, 
   3.503428663729472*^9}, 3.5034287900584927`*^9, 3.5034384828779535`*^9, {
   3.50343861260098*^9, 3.503438613942582*^9}, 3.5034394583876543`*^9, {
   3.503439495328519*^9, 3.50343949613972*^9}, {3.503439617585932*^9, 
   3.5034396356039634`*^9}, 3.50343984089552*^9, {3.503440367078438*^9, 
   3.5034403710096445`*^9}, {3.503440742976693*^9, 3.503440757827919*^9}, {
   3.503440838074459*^9, 3.503440841506465*^9}, {3.503440877823328*^9, 
   3.503440884110139*^9}, {3.5034409165113955`*^9, 3.5034409595674706`*^9}, {
   3.5034410329811983`*^9, 3.503441135535777*^9}, {3.503442609154746*^9, 
   3.503442612914353*^9}, {3.5034455811483297`*^9, 3.50344558732594*^9}, {
   3.503445694981728*^9, 3.503445699583736*^9}, {3.503445737944203*^9, 
   3.5034457612194433`*^9}, {3.5034468589621572`*^9, 
   3.5034468624253635`*^9}, {3.5034516055464315`*^9, 
   3.5034518229796104`*^9}, {3.5034520841396656`*^9, 
   3.5034520890692744`*^9}, {3.503452200141468*^9, 3.503452209953885*^9}, {
   3.50348913786215*^9, 3.5034891576585846`*^9}, {3.503489226439104*^9, 
   3.503489262911968*^9}, {3.5034893256396775`*^9, 3.5034895011711836`*^9}, {
   3.5034895396564503`*^9, 3.5034895400620513`*^9}, {3.503489577642517*^9, 
   3.503489593804145*^9}, {3.5034915817000113`*^9, 3.503491589156824*^9}, {
   3.503502129817947*^9, 3.5035021347787557`*^9}, {3.5035021839188414`*^9, 
   3.5035022110160885`*^9}, {3.5035022432301445`*^9, 
   3.5035022536041627`*^9}, {3.5035023279538927`*^9, 
   3.5035024720981436`*^9}, {3.5035025222990313`*^9, 
   3.5035025914071517`*^9}, {3.503502927540938*^9, 3.5035029293661413`*^9}, 
   3.5035263740071063`*^9, {3.5035264255495963`*^9, 3.50352643902802*^9}, 
   3.5035265411145983`*^9, {3.5035266908280587`*^9, 3.5035266934332633`*^9}, 
   3.503526758516577*^9, {3.503578013899*^9, 3.5035780229002156`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.42890805977283`"}], ",", "20.110720139089345`", ",", 
   "10.883497638049423`"}], "}"}]], "Output",
 CellChangeTimes->{3.5035264581692533`*^9, 3.5035266308303547`*^9, 
  3.503526696600069*^9, 3.5035267693117957`*^9, 3.503530130493656*^9, 
  3.50357746362364*^9, 3.5036165035601263`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.172303`", ",", 
   RowBox[{"-", "0.895712`"}], ",", 
   RowBox[{"-", "0.409893`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5035264581692533`*^9, 3.5035266308303547`*^9, 
  3.503526696600069*^9, 3.5035267693117957`*^9, 3.503530130493656*^9, 
  3.50357746362364*^9, 3.5036165035757265`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Calculate UVW orthonormal basis vectors\n// we can \
either apply same transforms to UP and RX vectors as for DIR",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.503490119041461*^9, 3.503490148821913*^9}, {
  3.5034901791015654`*^9, 3.5034901808019686`*^9}, {3.5034902226412416`*^9, 
  3.5034902657597165`*^9}, {3.5034903835399218`*^9, 3.503490384429124*^9}, {
  3.503491591777629*^9, 3.503491599390442*^9}}],

Cell[BoxData[{
 RowBox[{
  StyleBox["W",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "=", " ", 
  StyleBox["cDirection",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 
     0.34509803921568627`]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["V",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox["=",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  RowBox[{"vectorUP", ".", 
   StyleBox["rMatrixX",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox[".",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox["rMatrixY",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox[".",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox["rMatrixZ",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 
      0.34509803921568627`]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["U",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox["=",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  RowBox[{"VectorRX", ".", 
   StyleBox["rMatrixX",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox[".",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox["rMatrixY",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox[".",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
   StyleBox["rMatrixZ",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 
      0.34509803921568627`]]}]}]}], "Input",
 CellChangeTimes->{{3.503490186090378*^9, 3.503490207431215*^9}, {
   3.503490303215382*^9, 3.5034903614034834`*^9}, {3.503490723495715*^9, 
   3.503490801792251*^9}, {3.50349088133679*^9, 3.5034908903848057`*^9}, {
   3.5034909532685156`*^9, 3.5034909605225277`*^9}, {3.5034910021590004`*^9, 
   3.503491070065919*^9}, 3.5034911218892097`*^9, {3.5034911914341307`*^9, 
   3.5034912360814085`*^9}, 3.503491277624281*^9}],

Cell[TextData[StyleBox["// or we can get the Cross product of DIR and UP and \
from there get RX",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.5034903908251348`*^9, 3.5034904039291573`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["cW",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "=", " ", 
  StyleBox["cDir",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 
     0.34509803921568627`]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"c", 
    StyleBox["U",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]], "=", 
  RowBox[{"Normalize", "[", 
   RowBox[{"Cross", "[", 
    RowBox[{
     StyleBox["cDir",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", 
     RowBox[{
      StyleBox["Take",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
      StyleBox["[",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
      RowBox[{
       StyleBox["vectorUP",
        FontColor->RGBColor[
         0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "3"}], "}"}]}], "]"}]}], "]"}], "]"}]}], "\n", 
 RowBox[{
  StyleBox[
   RowBox[{"c", 
    StyleBox["V",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]], 
  StyleBox["=",
   FontWeight->"Plain"], 
  RowBox[{"Cross", "[", 
   RowBox[{
    StyleBox[
     RowBox[{"c", 
      StyleBox["U",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]], 
    ",", " ", 
    StyleBox["cDir",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], " ", 
   "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "no", " ", "need", " ", "to", " ", "normalized", " ", "as", " ", "U"}], 
    ",", 
    RowBox[{"W", " ", "already", " ", "are", " ", 
     RowBox[{"u", ".", "lenght"}]}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.503490407579564*^9, 3.5034904915857105`*^9}, {
   3.503490532566982*^9, 3.503490586636676*^9}, {3.503490701936477*^9, 
   3.503490710313692*^9}, {3.503490902755627*^9, 3.5034909122404437`*^9}, {
   3.503491355016016*^9, 3.5034913649532332`*^9}, {3.503494497670638*^9, 
   3.5034945434411182`*^9}, {3.5035174666442175`*^9, 3.50351746803262*^9}, {
   3.503526551410616*^9, 3.503526556465025*^9}, 3.5035775692046247`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.172303`", ",", 
   RowBox[{"-", "0.895712`"}], ",", 
   RowBox[{"-", "0.409893`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5035266353543625`*^9, 3.503577463717241*^9, {3.5035775510149927`*^9, 
   3.5035775709518275`*^9}, 3.5036165036537266`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9218632733153759`", ",", "0.`", ",", "0.3875152968751826`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.5035266353543625`*^9, 3.503577463717241*^9, {3.5035775510149927`*^9, 
   3.5035775709518275`*^9}, 3.5036165036537266`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.34710210159466354`", ",", "0.444635350886544`", ",", 
   RowBox[{"-", "0.8257239962678619`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5035266353543625`*^9, 3.503577463717241*^9, {3.5035775510149927`*^9, 
   3.5035775709518275`*^9}, 3.5036165036537266`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["// Test ...",
  FontColor->RGBColor[
   0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]],
 "\n",
 StyleBox["// Ray.direction vectors for raster coords (0,240), (320,240 is \
cDir), (640,240) from mray state->dir,\n// ie. the full view angle on plane Z \
.. that should result the same as the above AOV \n// \
<-0.268385>,<-0.796546>,<-0.541742>\n// <0.574839>,<-0.796546>,<-0.187283>\n\
// <0.170821>,<-0.895711>,<-0.410515>     (319,240)",
  FontColor->RGBColor[
   0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5033507542195296`*^9, 3.503350941404256*^9}, {
  3.503351015800786*^9, 3.503351017579189*^9}, {3.5033521257467227`*^9, 
  3.503352142220351*^9}, {3.5034889257173805`*^9, 3.503488933111793*^9}, {
  3.5034889693662567`*^9, 3.5034889736094637`*^9}, {3.5034914871638465`*^9, 
  3.50349149491706*^9}, {3.5034940739568853`*^9, 3.5034940892917123`*^9}, {
  3.50350018690676*^9, 3.503500187249961*^9}, {3.503500253799677*^9, 
  3.5035002725197096`*^9}}],

Cell[BoxData[{
 StyleBox[
  RowBox[{"dir1", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.268385"}], ",", 
     RowBox[{"-", "0.796546"}], ",", 
     RowBox[{"-", "0.541742"}]}], "}"}]}],
  FontColor->GrayLevel[0]], "\n", 
 StyleBox[
  RowBox[{"dir3", "=", 
   RowBox[{"{", " ", 
    RowBox[{"0.574839", ",", 
     RowBox[{"-", "0.796546"}], ",", 
     RowBox[{"-", "0.187283"}]}], "}"}]}],
  FontColor->GrayLevel[0]]}], "Input",
 CellChangeTimes->{{3.503350707232248*^9, 3.503350735951898*^9}, {
   3.5033520623794117`*^9, 3.50335207272223*^9}, {3.50348963130661*^9, 
   3.503489714111555*^9}, {3.503494126856578*^9, 3.5034941588990335`*^9}, {
   3.5035010582127347`*^9, 3.503501059710337*^9}, 3.503530369330073*^9}],

Cell[TextData[StyleBox["// We know that the dot.product of two vectors is : \
dir1\[SmallCircle]di2 = \[LeftBracketingBar]dir1\[LeftBracketingBar]\
\[LeftBracketingBar]dir2\[LeftBracketingBar]cos(\[Theta])\n// as dir1 and \
dir2 are direction vectors, they come normalized (length=1) already, so\n// \
dir1\[SmallCircle]di2 = cos(\[Theta]) and finally \[Theta] = arccos(dir1\
\[SmallCircle]di2)",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.503351334790142*^9, 3.503351385973831*^9}, {
  3.50335148764321*^9, 3.503351581321373*^9}, {3.503351683298751*^9, 
  3.503351736167243*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["AOVangle",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   RowBox[{"ArcCos", "[", " ", 
    RowBox[{"Dot", "[", 
     RowBox[{
      StyleBox["dir1",
       FontColor->GrayLevel[0]], ",", 
      StyleBox["cDir",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
     "]"}], " ", "]"}], " ", "*", " ", "radtodeg"}]}]], "Input",
 CellChangeTimes->{{3.5033510318688135`*^9, 3.5033510667192745`*^9}, {
   3.503351102833338*^9, 3.503351127746581*^9}, 3.5033512004583077`*^9, {
   3.5033515976078014`*^9, 3.503351601601409*^9}, 3.50343967374603*^9, 
   3.503452173699422*^9, 3.5034896478270392`*^9, {3.503489721630768*^9, 
   3.50348973400159*^9}, 3.503494171082655*^9, 3.5034942220011435`*^9, 
   3.503526563063836*^9, 3.503577699620852*^9, 3.503578255917822*^9}],

Cell[BoxData["27.216021183304058`"], "Output",
 CellChangeTimes->{3.50360019631535*^9, 3.5036165037317266`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"0.06842517540574569`", " ", 
  RowBox[{"(*", 
   RowBox[{
   "minimal", " ", "angle", " ", "for", " ", "px1", " ", "to", " ", "px2"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.5035004102812047`*^9, 3.5035004437588634`*^9}}],

Cell[TextData[{
 StyleBox["// Eventually find the AOV plane, by cross-producting  two UVW \
directions\n// Normalizing it (aovplane = aovplane /",
  FontColor->RGBColor[
   0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]],
 " ",
 StyleBox["|aovplane|) means getting rid of magnitude/length\n// making it a \
direction vector (ie. a unit vector in the same direction of the original)",
  FontColor->RGBColor[
   0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]
}], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5033518578786554`*^9, 3.5033519310427833`*^9}, 
   3.5033520879166565`*^9, {3.5033522010324535`*^9, 3.503352352586718*^9}, {
   3.503352447809284*^9, 3.5033524648757143`*^9}, 3.5033527522390156`*^9, {
   3.5034916330085006`*^9, 3.5034916347089033`*^9}, {3.503580795149849*^9, 
   3.5035808020918617`*^9}, {3.5035832291596932`*^9, 3.5035832426849165`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["AOVHplane",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", " ", 
   RowBox[{"Cross", "[", 
    RowBox[{"cW", ",", 
     StyleBox["cU",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
    "]"}], " ", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["AOVVplane",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", " ", 
   RowBox[{"Cross", "[", 
    RowBox[{"cW", ",", 
     StyleBox["cV",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
    "]"}], " ", "]"}]}]}], "Input",
 CellChangeTimes->{{3.5033519507612176`*^9, 3.5033519884820833`*^9}, 
   3.5034897401636*^9, 3.5034897801620703`*^9, {3.5034898457289844`*^9, 
   3.503489871500229*^9}, {3.5034899083630934`*^9, 3.5034899450699577`*^9}, 
   3.5034899872992315`*^9, 3.503526564701839*^9, 3.5035805820846777`*^9, 
   3.5035831247955112`*^9, 3.503583181002409*^9, {3.5035833470178986`*^9, 
   3.5035833578287177`*^9}, 3.503584130451265*^9, {3.503584179950151*^9, 
   3.5035842026013904`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.3471020005529387`"}], ",", 
   RowBox[{"-", "0.44463522145280515`"}], ",", "0.8257237558988856`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5035831312539225`*^9, 3.503583183170813*^9, 
  3.503583358608719*^9, 3.5035834335356493`*^9, 3.5035841424476857`*^9, 
  3.5035842036777925`*^9, 3.5036165038097267`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.9218632733153758`", ",", "0.`", ",", "0.38751529687518255`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.5035831312539225`*^9, 3.503583183170813*^9, 
  3.503583358608719*^9, 3.5035834335356493`*^9, 3.5035841424476857`*^9, 
  3.5035842036777925`*^9, 3.5036165038097267`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Rotate cDir on the AOVH plane to find FOVH vectors \
(which should the same as dir1,dir2 coming from mray eval)",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.5035806782588453`*^9, 3.503580710004901*^9}, {
  3.5035838486523733`*^9, 3.5035838658904037`*^9}, {3.503584556363207*^9, 
  3.503584561199216*^9}, {3.503584630166936*^9, 3.5035846497761703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["FOVHright",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"cDir", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVHright",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   StyleBox["FOVHright",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ".", 
   RowBox[{"TransformationMatrix", "[", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{"AOV", "/", "2"}],
         FontColor->RGBColor[
          0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
        StyleBox[")",
         FontColor->RGBColor[
          0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
       " ", "Degree"}], ",", " ", 
      StyleBox["AOVHplane",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVHright",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      StyleBox["FOVHright",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVHright",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVHright",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.503580728397333*^9, 3.503580768442603*^9}, {
   3.5035808816520004`*^9, 3.5035809957037992`*^9}, 3.5035829649576325`*^9, {
   3.503583285834592*^9, 3.503583291247802*^9}, {3.5035833980455875`*^9, 
   3.5035834030219965`*^9}, {3.5035835497714524`*^9, 
   3.5035835918759255`*^9}, {3.503584071576762*^9, 3.503584079095975*^9}, 
   3.5035841347256722`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.26838542436053414`"}], ",", 
   RowBox[{"-", "0.7965455241148273`"}], ",", 
   RowBox[{"-", "0.5417420899315939`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.5035834533788843`*^9, 3.5035835667286816`*^9, 3.5035840996568108`*^9, {
   3.5035841382512784`*^9, 3.5035841440388885`*^9}, 3.503616503856527*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["FOVHleft",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox["=",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[
   RowBox[{
    StyleBox[" ",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " "}]], 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"cDir", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVHleft",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   StyleBox["FOVHleft",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ".", 
   RowBox[{"TransformationMatrix", "[", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         StyleBox[
          RowBox[{"AOV", "/", "2"}],
          
          FontColor->RGBColor[
           0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
         StyleBox[")",
          
          FontColor->RGBColor[
           0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]}],
        " ", "Degree"}], ",", " ", 
      StyleBox["AOVHplane",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVHleft",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      StyleBox["FOVHleft",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVHleft",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVHleft",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.503583601204742*^9, 3.5035836381924067`*^9}, {
   3.5035840809991784`*^9, 3.5035840876447897`*^9}, 3.5035841358176737`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5748392475571795`", ",", 
   RowBox[{"-", "0.7965455241148276`"}], ",", 
   RowBox[{"-", "0.1872833881595759`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5035836412656116`*^9, 3.503584101482014*^9, 
  3.503584145489691*^9, 3.503616503903327*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Rotate cDir on the AOVV plane to find FOVV vectors",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.50358456917083*^9, 3.503584573429637*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["FOVVright",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox["=",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[
   RowBox[{
    StyleBox[" ",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " "}]], 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"cDir", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVVright",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   StyleBox["FOVVright",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ".", 
   RowBox[{"TransformationMatrix", "[", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        StyleBox[
         RowBox[{"vAOV", "/", "2"}],
         FontColor->RGBColor[
          0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
        StyleBox[")",
         FontColor->RGBColor[
          0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
       " ", "Degree"}], ",", " ", 
      StyleBox["AOVVplane",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVVright",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      StyleBox["FOVVright",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVVright",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVVright",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5035842944387507`*^9, 3.5035843109279795`*^9}, 
   3.5035926939429035`*^9, 3.5035998203234944`*^9, {3.503599856234757*^9, 
   3.503599862427968*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.03584662311961557`", ",", 
   RowBox[{"-", "0.9957123348940463`"}], ",", 
   RowBox[{"-", "0.08527582160710313`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5036001137132063`*^9, 3.5036165039501266`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  StyleBox["FOVVleft",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[" ",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox["=",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
  StyleBox[
   RowBox[{
    StyleBox[" ",
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " "}]], 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"cDir", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
    RowBox[{"cDir", "[", 
     RowBox[{"[", "3", "]"}], "]"}], ",", " ", "1"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVVleft",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{
   StyleBox["FOVVleft",
    FontColor->RGBColor[
     0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ".", 
   RowBox[{"TransformationMatrix", "[", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         StyleBox[
          RowBox[{"vAOV", "/", "2"}],
          
          FontColor->RGBColor[
           0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], 
         StyleBox[")",
          
          FontColor->RGBColor[
           0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]}],
        " ", "Degree"}], ",", " ", 
      StyleBox["AOVVplane",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], 
     "]"}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["FOVVleft",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{
      StyleBox["FOVVleft",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVVleft",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
     RowBox[{
      StyleBox["FOVVleft",
       FontColor->RGBColor[
        0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.5035842233650265`*^9, 3.503584246624667*^9}, 
   3.5035926963765073`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.28567125276851707`", ",", 
   RowBox[{"-", "0.6756887413931422`"}], ",", 
   RowBox[{"-", "0.6795856532448411`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.5035842484030704`*^9, 3.50359269781171*^9, 
  3.503592738402981*^9, 3.5035998313839135`*^9, 3.503616503981327*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Find the focus point on the viewplane",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellChangeTimes->{{3.5035838872468405`*^9, 3.5035839009280643`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["cFOVpos",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"cPos", "+", " ", 
   RowBox[{"(", 
    RowBox[{"cW", " ", "*", " ", "focus"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.5035837495142*^9, 3.503583821305526*^9}, {
  3.5035839061852736`*^9, 3.503583914359688*^9}, {3.50358570463441*^9, 
  3.50358570499321*^9}, {3.5035857554280977`*^9, 3.5035857557088985`*^9}, {
  3.503585798140972*^9, 3.5035858911639347`*^9}, {3.503585955389247*^9, 
  3.5035859718160753`*^9}, {3.503586057319824*^9, 3.503586115117925*^9}, {
  3.503586148423983*^9, 3.503586151684389*^9}, {3.5035863857627974`*^9, 
  3.5035863876192007`*^9}, {3.5036009502022643`*^9, 3.50360095358747*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.19148314092283`"}], ",", "18.876473788689346`", ",", 
   "10.318685578699423`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.503583780605055*^9, {3.5035838138331127`*^9, 3.50358382375473*^9}, 
   3.5035857064284124`*^9, 3.5035857568633003`*^9, 3.503585801713379*^9, 
   3.503585892474337*^9, 3.5035859781184864`*^9, {3.503586102169903*^9, 
   3.503586116163127*^9}, 3.503586403078827*^9, 3.5036009545858717`*^9, 
   3.5036165040125275`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Calculate ray direction",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5035930249442806`*^9, 3.503593037190302*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"px", "=", "640"}], "\n", 
 RowBox[{
  RowBox[{"py", " ", "=", " ", "240"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"x0", "=", 
  RowBox[{"px", "/", "xres"}]}], "\n", 
 RowBox[{
  RowBox[{"y0", "=", 
   RowBox[{"py", "/", " ", "yres"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"x1", " ", "=", " ", 
  RowBox[{"x0", " ", "*", "aperture"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y1", " ", "=", " ", 
   RowBox[{"y0", " ", "*", 
    RowBox[{"(", 
     RowBox[{"aperture", "/", "aratio"}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"x2", " ", "=", " ", 
  RowBox[{"x1", " ", "-", " ", 
   RowBox[{"(", 
    RowBox[{"aperture", "/", "2"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y2", " ", "=", " ", 
   RowBox[{"y1", " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"aperture", "/", "aratio"}], ")"}], "/", "2"}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox["rayDir",
   FontColor->RGBColor[
    0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], " ", "=", 
  " ", 
  RowBox[{"Normalize", "[", 
   RowBox[{
    RowBox[{"x2", "*", 
     StyleBox["cU",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], " ", 
    "+", " ", 
    RowBox[{"y2", "*", 
     StyleBox["cV",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}], " ", 
    "+", " ", 
    RowBox[{
     StyleBox["focus",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "*", 
     StyleBox["cW",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]]}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.5035892896425676`*^9, 3.5035893331978436`*^9}, {
   3.5035893847715335`*^9, 3.5035894606500654`*^9}, {3.5035895196493683`*^9, 
   3.5035895207101707`*^9}, {3.5035896277107573`*^9, 3.503589758610585*^9}, {
   3.503589803538664*^9, 3.5035898130858803`*^9}, {3.5035898562043552`*^9, 
   3.503590010254624*^9}, {3.5035900516102962`*^9, 3.503590078177142*^9}, 
   3.503590126708827*^9, {3.503590160373686*^9, 3.5035901626668897`*^9}, {
   3.503590192806142*^9, 3.503590198812153*^9}, {3.50359031205275*^9, 
   3.5035903608028355`*^9}, {3.503590471687828*^9, 3.503590474012233*^9}, {
   3.503590596004445*^9, 3.5035905977516484`*^9}, {3.503590641899725*^9, 
   3.5035906815705943`*^9}, {3.503590715937454*^9, 3.5035907353906884`*^9}, {
   3.503590809771618*^9, 3.5035910177199807`*^9}, {3.503591062008458*^9, 
   3.5035911101501417`*^9}, {3.503591142988199*^9, 3.503591181036665*^9}, {
   3.503591221159935*^9, 3.5035912218775363`*^9}, {3.5035912531867914`*^9, 
   3.5035912537951922`*^9}, {3.503591302420477*^9, 3.5035913687361927`*^9}, {
   3.5035914133210707`*^9, 3.503591413633071*^9}, {3.5035915049868298`*^9, 
   3.5035915081224356`*^9}, {3.5035915836889677`*^9, 
   3.5035915847653694`*^9}, {3.5035916981151667`*^9, 
   3.5035916990043683`*^9}, {3.5035917587056723`*^9, 3.503591781887313*^9}, {
   3.5035918183133764`*^9, 3.503591863506655*^9}, {3.503591952614011*^9, 
   3.5035919539088125`*^9}, {3.503592013017316*^9, 3.503592094870659*^9}, {
   3.5035921250723114`*^9, 3.5035922648641553`*^9}, {3.503592309542633*^9, 
   3.5035923218666544`*^9}, {3.50359237089754*^9, 3.5035923726291428`*^9}, {
   3.5035926016843424`*^9, 3.5035926047731476`*^9}, {3.5035928058106985`*^9, 
   3.5035928071835003`*^9}, {3.5035928479931717`*^9, 3.503592853936782*^9}, {
   3.503592917428893*^9, 3.503592921094899*^9}, {3.5035929723565884`*^9, 
   3.5035930756131687`*^9}, {3.503599880274399*^9, 3.5035998851416073`*^9}, {
   3.503599945622913*^9, 3.5036000530291*^9}, {3.5036002349878173`*^9, 
   3.50360029398712*^9}, {3.503600610589672*^9, 3.503600623849695*^9}, 
   3.503600780957569*^9, {3.5036009251954207`*^9, 3.5036009301874294`*^9}, {
   3.503620627324568*^9, 3.503620689241076*^9}, {3.503620971788769*^9, 
   3.5036209735047717`*^9}, {3.5036210439076943`*^9, 3.5036210470589*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5748391598266983`", ",", 
   RowBox[{"-", "0.7965455726154907`"}], ",", 
   RowBox[{"-", "0.1872834511546496`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5035912082899127`*^9, 3.5035912227979383`*^9}, 
   3.5035912547311935`*^9, {3.503591304542081*^9, 3.503591369796994*^9}, 
   3.503591414725073*^9, 3.503591509510838*^9, 3.503591587214574*^9, 
   3.503591700330371*^9, {3.503591765335684*^9, 3.503591782636114*^9}, {
   3.5035918196549788`*^9, 3.503591864520657*^9}, 3.503591955734016*^9, 
   3.5035920185397253`*^9, {3.5035920724534197`*^9, 3.503592091532253*^9}, {
   3.5035921257275124`*^9, 3.503592138145134*^9}, {3.503592171435592*^9, 
   3.5035921771452017`*^9}, 3.503592265831357*^9, {3.5035923111182356`*^9, 
   3.5035923225062556`*^9}, 3.503592373970745*^9, 3.5035926053347487`*^9, {
   3.503592798681486*^9, 3.503592808119502*^9}, 3.503592855403185*^9, 
   3.503592922389702*^9, 3.503592979579401*^9, 3.5035930114814568`*^9, 
   3.5035930470495186`*^9, 3.5035930779219728`*^9, 3.5035998860932093`*^9, {
   3.5035999472609158`*^9, 3.503600056507906*^9}, {3.503600240572627*^9, 
   3.5036002945799212`*^9}, {3.5036006136940775`*^9, 3.5036006257840986`*^9}, 
   3.5036007861679783`*^9, {3.5036009268646235`*^9, 3.5036009307178307`*^9}, 
   3.503602227875692*^9, 3.5036165040905275`*^9, {3.503620620226556*^9, 
   3.503620690598278*^9}, 3.5036209747683735`*^9, 3.5036210486969028`*^9}]
}, Open  ]],

Cell[TextData[StyleBox["// Graphics3D routines to display camera system",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5035169493161154`*^9, 3.5035169818577724`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Plot3DVector", "[", 
    RowBox[{"dir_", ",", " ", "pos_", ",", " ", "col_"}], "]"}], ":=", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dir", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "t"}], "+", 
        RowBox[{"pos", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"dir", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "t"}], "+", 
        RowBox[{"pos", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"dir", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "t"}], "+", 
        RowBox[{"pos", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "10"}], ",", "30"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "col", "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Graph3DPoint", "[", 
    RowBox[{"p_", ",", " ", "rad_", ",", " ", "col_"}], "]"}], ":=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics3D", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         StyleBox["RGBColor", "SearchResultSummary"], 
         StyleBox[" ", "SearchResultSummary"], "[", 
         RowBox[{
          RowBox[{"col", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
          RowBox[{"col", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
          RowBox[{"col", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"PointSize", "[", "r", "]"}], ",", 
        RowBox[{"Point", "[", 
         RowBox[{"{", "p", "}"}], "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       RowBox[{"{", "rad", "}"}]}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GraphUVW", "[", 
    RowBox[{
    "U_", ",", " ", "V_", ",", " ", "W_", ",", " ", "pos_", ",", " ", 
     "col_"}], "]"}], ":=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"Plot3DVector", "[", 
      RowBox[{"U", ",", "pos", ",", " ", "col"}], "]"}], ",", " ", 
     RowBox[{"Plot3DVector", "[", 
      RowBox[{"V", ",", " ", "pos", ",", " ", "col"}], "]"}], ",", " ", 
     RowBox[{"Plot3DVector", "[", 
      RowBox[{"W", ",", " ", "pos", ",", " ", "col"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"AxesLabel", "->", 
      RowBox[{"{", 
       RowBox[{"\"\<X\>\"", ",", "\"\<Y\>\"", ",", "\"\<Z\>\""}], "}"}]}], 
     ",", " ", 
     RowBox[{"Boxed", "\[Rule]", "True"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GraphFOV", "[", 
   RowBox[{"dir1_", ",", " ", "dir2_", ",", "  ", "pos_", ",", " ", "col_"}], 
   "]"}], ":=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"Plot3DVector", "[", 
     RowBox[{"dir1", ",", " ", "pos", ",", " ", "col"}], "]"}], ",", " ", 
    RowBox[{"Plot3DVector", "[", 
     RowBox[{"dir2", ",", " ", "pos", ",", " ", "col"}], "]"}]}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{
  3.5035169532317224`*^9, {3.5035177223754635`*^9, 3.5035177239042664`*^9}, {
   3.503517985407522*^9, 3.503518011787168*^9}, {3.5035180489932327`*^9, 
   3.5035180831728926`*^9}, {3.5035181353393836`*^9, 3.503518137258187*^9}, {
   3.503518242963971*^9, 3.5035182558651934`*^9}, {3.503518395438637*^9, 
   3.5035184420515184`*^9}, {3.503524254961812*^9, 3.5035242558198133`*^9}, {
   3.5035243868288417`*^9, 3.5035243923980513`*^9}, {3.5035244348145256`*^9, 
   3.50352447166179*^9}, {3.5035246929013753`*^9, 3.5035248023199663`*^9}, {
   3.503524863768473*^9, 3.503524892878124*^9}, {3.503524934857797*^9, 
   3.5035249476654196`*^9}, {3.503525253129552*^9, 3.5035253025504384`*^9}, {
   3.503525385230582*^9, 3.503525390191391*^9}, {3.5035259912136393`*^9, 
   3.503526025596099*^9}, {3.5035268617263565`*^9, 3.5035269209440603`*^9}, 
   3.5035270512978873`*^9, {3.5035272515866365`*^9, 3.5035273378391867`*^9}, 
   3.5035275687195897`*^9, {3.503527721147455*^9, 3.5035277292594695`*^9}, {
   3.503527764499931*^9, 3.5035277866207695`*^9}, {3.503527856274891*^9, 
   3.503527902622572*^9}, {3.5035279703266897`*^9, 3.503527975771099*^9}, {
   3.503528057499642*^9, 3.503528067280859*^9}, {3.5035281067489276`*^9, 
   3.5035281468409977`*^9}, {3.5035281910202746`*^9, 3.50352828579044*^9}, {
   3.5035285929705753`*^9, 3.503528612236609*^9}, {3.5035288131961594`*^9, 
   3.503528817127366*^9}, {3.503528849669023*^9, 3.50352887097866*^9}, {
   3.5035289989768834`*^9, 3.503529083825431*^9}, {3.503529194024023*^9, 
   3.5035292125100555`*^9}, {3.5035293964343767`*^9, 3.503529397448378*^9}, 
   3.5035294498332696`*^9, {3.503529492889344*^9, 3.50352950187496*^9}, {
   3.5035304007017274`*^9, 3.503530401575329*^9}, {3.5035304558790236`*^9, 
   3.503530466346642*^9}, 3.503601193437888*^9}],

Cell[TextData[StyleBox["// Display camera system",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5036004149809313`*^9, 3.5036004313609595`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CameraRays", "[", 
   RowBox[{"xxres_", ",", " ", "yyres_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"listRayDirs", ",", " ", "listRayPos"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"initAr", "[", 
       RowBox[{"y_", ",", "j_"}], "]"}], ":=", "0"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listRayDirs", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"initAr", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xxres", "*", "yyres"}], ",", "3"}], "}"}]}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", 
     RowBox[{"listRayPos", "=", 
      RowBox[{"Array", "[", 
       RowBox[{"initAr", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xxres", "*", "yyres"}], ",", "3"}], "}"}]}], "]"}]}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"CastRays", "[", 
       RowBox[{"wres_", ",", "hres_"}], "]"}], ":=", " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", "=", "1"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"px", "=", "0"}], ",", " ", 
          RowBox[{"px", "\[LessEqual]", 
           RowBox[{"wres", "-", "1"}]}], ",", " ", 
          RowBox[{"px", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"x0", "=", 
            RowBox[{"px", "/", "xres"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"x1", " ", "=", " ", 
            RowBox[{"x0", " ", "*", "aperture"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"py", "=", "0"}], ",", " ", 
             RowBox[{"py", "\[LessEqual]", 
              RowBox[{"hres", "-", "1"}]}], ",", " ", 
             RowBox[{"py", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"y0", "=", 
               RowBox[{"py", "/", " ", "yres"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"y1", " ", "=", " ", 
               RowBox[{"y0", " ", "*", 
                RowBox[{"(", 
                 RowBox[{"aperture", "/", "aratio"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"x2", " ", "=", " ", 
               RowBox[{"x1", " ", "-", " ", 
                RowBox[{"(", 
                 RowBox[{"aperture", "/", "2"}], ")"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"y2", " ", "=", " ", 
               RowBox[{"y1", " ", "-", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"aperture", "/", "aratio"}], ")"}], "/", "2"}], 
                 ")"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               StyleBox["rDir",
                
                FontColor->RGBColor[
                 0.2627450980392157, 0.5372549019607843, 
                  0.34509803921568627`]], " ", "=", " ", 
               RowBox[{"Normalize", "[", 
                RowBox[{
                 RowBox[{"x2", "*", 
                  StyleBox["cU",
                   
                   FontColor->RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]]}], " ", "+", " ", 
                 RowBox[{"y2", "*", 
                  StyleBox["cV",
                   
                   FontColor->RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]]}], " ", "+", " ", 
                 RowBox[{
                  StyleBox["focus",
                   
                   FontColor->RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], "*", 
                  StyleBox["cW",
                   
                   FontColor->RGBColor[
                    0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]]}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"rPos", " ", "=", " ", 
               RowBox[{"cPos", " ", "+", " ", 
                RowBox[{"Normalize", "[", 
                 StyleBox["rDir",
                  
                  FontColor->RGBColor[
                   0.2627450980392157, 0.5372549019607843, 
                    0.34509803921568627`]], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"listRayDirs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
               StyleBox["rDir",
                
                FontColor->RGBColor[
                 0.2627450980392157, 0.5372549019607843, 
                  0.34509803921568627`]]}], ";", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"listRayPos", "[", 
                RowBox[{"[", "i", "]"}], "]"}], " ", "=", " ", 
               StyleBox["rDir",
                
                FontColor->RGBColor[
                 0.2627450980392157, 0.5372549019607843, 
                  0.34509803921568627`]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
         "]"}]}], "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PrintVecs", "[", 
       RowBox[{"wwres_", ",", "hhres_", ",", " ", "listx_"}], "]"}], ":=", 
      " ", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"f", "=", "0"}], "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"px", "=", "0"}], ",", " ", 
          RowBox[{"px", "\[LessEqual]", 
           RowBox[{"wwres", "-", "1"}]}], ",", " ", 
          RowBox[{"px", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"py", "=", "0"}], ",", " ", 
            RowBox[{"py", "\[LessEqual]", 
             RowBox[{"hhres", "-", "1"}]}], ",", " ", 
            RowBox[{"py", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Print", "[", 
             RowBox[{"listx", "[", 
              RowBox[{"[", 
               RowBox[{"++", "f"}], "]"}], "]"}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"CastRays", "[", 
      RowBox[{"xxres", ",", " ", "yyres"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{"{", "listRayPos", "}"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5036018083753605`*^9, 3.5036018642234583`*^9}, {
   3.5036018995731196`*^9, 3.503601902053524*^9}, {3.503601937543586*^9, 
   3.5036019515368104`*^9}, {3.5036019854200697`*^9, 
   3.5036019894136763`*^9}, {3.5036020239209366`*^9, 
   3.5036020383821616`*^9}, {3.50360212321511*^9, 3.503602137270734*^9}, {
   3.5036120824192166`*^9, 3.503612098518445*^9}, {3.503612225767866*^9, 
   3.5036122309782753`*^9}, {3.503612261133128*^9, 3.5036122656415358`*^9}, {
   3.5036122979959927`*^9, 3.5036122985575933`*^9}, {3.503612971105966*^9, 
   3.503613144281868*^9}, {3.5036133034957457`*^9, 3.503613318830572*^9}, {
   3.5036133896702957`*^9, 3.503613572019014*^9}, {3.5036136434827385`*^9, 
   3.503613670018385*^9}, {3.5036137426989117`*^9, 3.503613759687341*^9}, {
   3.5036139324576426`*^9, 3.5036140032349653`*^9}, {3.503614044200637*^9, 
   3.5036140464314413`*^9}, {3.503614121685972*^9, 3.50361412613198*^9}, {
   3.5036143014450855`*^9, 3.5036143475119658`*^9}, {3.503614415028884*^9, 
   3.5036144625777664`*^9}, {3.5036144937154207`*^9, 3.503614498192629*^9}, 
   3.5036145668951483`*^9, {3.5036146023384104`*^9, 3.503614645659686*^9}, {
   3.503614708683796*^9, 3.5036147114450006`*^9}, {3.503614987549882*^9, 
   3.5036150308555574`*^9}, {3.503615098185275*^9, 3.503615131023332*^9}, {
   3.5036151789310155`*^9, 3.5036152544507475`*^9}, {3.5036152880688057`*^9, 
   3.503615418563033*^9}, {3.503615462133909*^9, 3.5036154806199417`*^9}, {
   3.5036157153295517`*^9, 3.503615738495592*^9}, {3.503615805029708*^9, 
   3.503615819007332*^9}, {3.5036159140270977`*^9, 3.5036159415143456`*^9}, {
   3.5036159734476013`*^9, 3.5036159840088196`*^9}, {3.5036160186252804`*^9, 
   3.50361605879535*^9}, {3.5036161866531734`*^9, 3.503616205435606*^9}, {
   3.503616369469892*^9, 3.503616384321118*^9}, {3.5036164542560396`*^9, 
   3.503616457376045*^9}, {3.5036165627778296`*^9, 3.5036166008886957`*^9}, {
   3.5036167156580963`*^9, 3.5036167168280983`*^9}, {3.5036167662957845`*^9, 
   3.5036168232982836`*^9}, {3.5036168909556017`*^9, 3.503616902312422*^9}, {
   3.503617013868216*^9, 3.5036170787175293`*^9}, {3.503617129682818*^9, 
   3.5036171305408196`*^9}, {3.503617178932104*^9, 3.5036172576030407`*^9}, {
   3.5036173430911903`*^9, 3.5036174231193295`*^9}, {3.5036174730706167`*^9, 
   3.503617490215047*^9}, {3.5036175569363627`*^9, 3.5036175578411646`*^9}, {
   3.5036176169184675`*^9, 3.503617672860165*^9}, {3.503617731329067*^9, 
   3.5036177581611137`*^9}, {3.5036180023795395`*^9, 
   3.5036180055307455`*^9}, {3.5036181439965863`*^9, 3.503618148707795*^9}, {
   3.503618193604673*^9, 3.5036184406155033`*^9}, {3.503618477025967*^9, 
   3.503618580781748*^9}, {3.5036187233035965`*^9, 3.5036187284672055`*^9}, {
   3.503618766468872*^9, 3.503618820850567*^9}, {3.503618881784273*^9, 
   3.5036189441531816`*^9}, {3.5036190206089153`*^9, 
   3.5036190259597244`*^9}, {3.5036190900134363`*^9, 3.503619177030388*^9}, {
   3.503619274468158*^9, 3.5036193285690517`*^9}, {3.5036193926539636`*^9, 
   3.503619452074467*^9}, {3.5036196769644594`*^9, 3.5036197081021137`*^9}, {
   3.5036197553701963`*^9, 3.503619758131401*^9}, {3.503619831279928*^9, 
   3.5036199004816494`*^9}, {3.5036199561113462`*^9, 3.503620003161028*^9}, {
   3.50362005579552*^9, 3.503620062191531*^9}, {3.503620093219985*^9, 
   3.503620099475596*^9}, {3.5036202738371*^9, 3.5036203002167463`*^9}, {
   3.5036205978093166`*^9, 3.503620606342531*^9}, {3.503620725495539*^9, 
   3.50362073170435*^9}, {3.5036208664729853`*^9, 3.503620924551886*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CameraRays", "[", 
  RowBox[{"64", ",", "48"}], "]"}]], "Input",
 CellChangeTimes->{{3.5036018747378764`*^9, 3.5036018852678947`*^9}, 
   3.5036021345875297`*^9, {3.5036121567845464`*^9, 3.5036121578765483`*^9}, {
   3.5036122681843405`*^9, 3.5036122729423485`*^9}, {3.503612332690453*^9, 
   3.503612344187673*^9}, {3.503612999123615*^9, 3.5036129998100157`*^9}, {
   3.503613586573839*^9, 3.5036135965422564`*^9}, 3.5036136961796303`*^9, 
   3.5036152757447844`*^9, {3.5036160944414124`*^9, 3.50361613882349*^9}, 
   3.503616266946513*^9, {3.5036163192378044`*^9, 3.503616320610607*^9}, 
   3.50361639148153*^9, {3.503616426831192*^9, 3.503616462914055*^9}, {
   3.503616608517109*^9, 3.503616610560713*^9}, {3.5036166962984624`*^9, 
   3.5036167031000743`*^9}, 3.5036168207866793`*^9, {3.503616872282369*^9, 
   3.5036168781323795`*^9}, {3.5036170286570415`*^9, 
   3.5036170336334505`*^9}, {3.5036181223125486`*^9, 3.5036181233265505`*^9}, 
   3.5036183473429413`*^9, {3.5036184445155106`*^9, 3.503618454639928*^9}, 
   3.5036185361032705`*^9, {3.5036194778145123`*^9, 3.5036194792029147`*^9}, {
   3.5036195902751083`*^9, 3.5036195934107137`*^9}, {3.5036199808061895`*^9, 
   3.503620016187051*^9}, {3.5036201139836216`*^9, 3.5036201219552355`*^9}, {
   3.5036204460478516`*^9, 3.5036204469838533`*^9}, {3.503620493830735*^9, 
   3.5036204957183385`*^9}}],

Cell[BoxData[
 Graphics3DBox[
  {Hue[0.67, 0.6, 0.6], Point3DBox[CompressedData["
1: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
a6eeOgJiXxJT0QX4PKyy2bP8ulaZTZ2GOZ2AT0LbnRbzSNhmf7PtOO5E9wn/
q63fCPAc+CJ/IZuEh7SuJ47L1z+cqdmlP0fAQudHk757eD9zH9JOo1exUmX2
b3hpIByxhmqYRgJDzV3PHb0aPRP1WXczDXh2+D4rTsS9U3Zv6czy9VqeFq/f
7qRBJZ/gNwF0o/NI+QoX9KrGauv0IRMa6HF/D/K5RoLlgtZhG/Sq46DSJYoz
dss0qxclhITByizGEfRK3+TYXqtL6NXF07Wy6Ebi6Qs52ujVaFr2wcFYGgSu
lXYLuoi7YHBriTx6VXxkQ/j5LBosKht6tXvi84fXbYnvA57fy578WnxBg5dS
v2gi6MZT6oO4afSqQ/lA3M1mGshJaya7ohuaAuctO9CrQs3WQ5t7acBluaM4
356EDZ1O1steBYVISVX/QseofArjJ3BvanDfikevng6KrzVfSQfurB9LiugG
6bCK2wW9uhGUyjm+EbuiYUb9DLpx5OlUpTp6pZ97lCt6Kx20955szNQnYTTV
I30FevV2QZBLVo8OSitNy2g6JKi1cpe2oVefQrOWGq3pECe+YgUrumGuED6X
hF6FBucPu3nSYVfU8wJVdONHq/clS/RKJHewck04HQaP3iuzQjfIlVHSgujV
FP/02ZJbdNC9ySJ2Bd0oC7gw975yHN7ZXJu1LqBD4AWFwfub8Pm/eoA1Er26
HKViy1pPh91Kjpx1Yrgff8Vq7kSvmpWjrhcysNP4J+I612MP1yqkDZeMg4mH
tL/tKB34mW/kpNd0wFD4SPoaQSZ0EDCbs58Cehek/Adwj/CqsAqf4WdCoV+v
rKwHOlN7XS6DpQM+XeZhq+PFntn+z7A4iQJN3Fk7LedI6JY5ZMeHjokmZ1vs
q6aALs/6p1x/SODTH5Fw4mbC8UXj3R8GKeD+NT2oaoKEaXO1I8+wu7Y3u094
rqHC721Dz858R38UnD7/Rq8eqFl68GhQQVvw0V6+b+gqb03PLuwuG2/7O2X2
VAhSzlApH8DzBVzXDsLu6mqsv+AUSQXB/GvB1p9IKHBbs1SJXj32LfnKX0SF
1v3Sin9JvJ/lKZum0KvBrqNjzR1U4NTW0kwmSPjbey5PAbvr+9ki78glKsz7
J2YrtJFw5/a3SPvF5ffXuFfICBHQ898f97pGEupVLN7E4U489/34f1HyBMzJ
aSea1JPQd5XTpmLZqxaBNqY2AZOuGoLd1dj5XHaG/eiVQNHqDyfMCHh1ufy3
y0s87oYeJ7Bhd9GZD4LenCaA4pGpPlJMQnankeJm7C77+B2v1AIJkBppono8
JWGnea6ILu5EV13R1AcJBGidEG4ZfkgCR4CgnS3uxKiQB3+EcgnY0e4r6ZKF
Pxd/qfPolaofb39sBQGvRZvoXXdJuL+C9j4MvboglmfA1k6AAGN+0DiVBLrL
xFwierVbK102ZIAAQp/zWE0C9ltQm9899MrXVuby3G8CVkR9EpGLIWHBkL7r
wfLrWlNuGkGraPDzks/+xAh83ub4Gzxc9sok3nJBnAacb5rfTl0hQXvPtnu5
6NW5e89oYdtpcO9rX67lZfTtib96FnpV96f3IdchGrxRrxoo8UFv/3vHdxu9
4vZRbUqyo4FYp2PgGnTjMDNdLQ69OrYub5v4BRpc6+i74OxGwu60gKTl9yH+
GtXtfXqNBnRhg4YXziQYwZdt7ugVybL4ZvddGsS75/uyohuJLc58ZuhVVkDb
p/ZCGlz3lwo3QTfuCYcoLb9/529MmpTzGxrEDr4bTz1Ggo34u7AN6NXitf2x
fztoMKJRW9ZlhM9P21b+Za/eD+bz3/xOA/5xmW5hdKP8nEQ3Bb1SNXxSrMhC
h/VBW04eRzferbH5uLwHzRPWnGwSwj4xHd+bsIsEqXVCPP7o1avWDIEzCvh1
yuPgt+okGCaOX9JHr/ZZSbSs3EeHGdc4kWkVElSehwvwoVf83cYB+eZ06Ayi
CMmgG8ODAf0db8dB0LRb1NSNDlPRz7xM0I3o95d77qJXm9dczv8dRIc0rtNy
vuhGxwkFLhv0Ko7SvjHzJh0iIvfo3EY31j3b6SyEXt16G+B+KI8Oqun+5eV8
2IcGVt/aqrF740XipqrowDV76gZ9NQkikztvXUWv/h7eH/SAgh112qJhjB33
KS31/Fb0KvNR0DazL3RwKaiFdNwjKXeqD+/YwATd2rGUNHUKmN+Lemz9G/e+
5ZWQm+uYoBmbmCBuT4EA1XcT/D+x99QXpUbQK8pcQnjBNQqw921KbxrF89Rx
v63aAkzgvHfBVaeQAiopxo8ChvB+aog/iedjQt3rZ5s/khS48fwXv3w/CV7P
tsd8RK9WP3tWdXmRAmHrWnvpH0k4s/Cb2ITdNXKpdZ2EHBVsN91YFcgg4Qkj
74o7dteSiplyy1Eq1NT+SRWnYp+Yxdx4it1V9CF4IuAyFUiLd1frWrCX1nxb
HEGvzP4LPK72gAp5Q69abBpwF2zgIGSwu+oX3EzHW6ggv/jIZ/IV/ly+7Uu2
2F0rCi0phZNUSGs0DFx+/fOvSE1sAu5EflupU9VrCQj95z0gXIZ7fGTiwiv0
SrMm4bbUJuyTuamHj4pI2NMk+3wMvfJo+BYYo0kAT3Nuk1o+CbUZpQaC2F1K
Dsmc00YErFtla1iRi8//yfHtO7G7rgr91nR1JCCVb0p2930SPP6pXbTBnegm
5sbKuEgAs9/UteoOCSdTezj80atQGx3XQ9EEBCqZLWik4PnL8tjoTfSq1bXF
vC6DgCiHz7+f3SAhOfan6GP0yvuGUeuOEgIcssYOS0eTUKInlVGFXlFGWN4+
byRg+we7+aRwEnKsjd2b0avLpjKaqt14P3PkuJeC8Xnu3hPyAb3ycf0sVvQD
eylQL8DdnwSnYd2+bvTKL8v1ghobdsWtZwcp3vi82sS81ode2Vq0KbzcgPtl
8eRZtXMkOOuZe/ehV0+Ktx/QVqZBdZztRMIZPD/ajTzoRq8U2p6VNu6ngdTP
x/RRJxK2OCus+/Bl+fMM9X3NjtNg/YujArp2eJzuS25pQq94D7KG9nvQ4KGO
Y3HqcexAWk5dJXpFjxmgnA+hgWbfcP7QUTxf/On9mYde3ffptGFNoYFu3eKK
beiGX2yLQyJ6tXOuQ+T2Y/RzqrYiQI+ESO8fXH7o1ei2Zk7VWvQwUqft1T58
XO53jZ9Ar4a1b4g1ETSQP/NYmwXd2LZhw6od6NWg8wozl680WBMswr0P3Tgz
t8eeF716vnY2c2mWBk55r3ZdRjdGY3qGvqJX/D268/d56HCv+m1jkRwJjbJJ
DyrRq6SsnFP7ZeignGzz/LM07lzn6ZvLr7cneHyiftGiwzTby1k+dOPdzOMS
c/TKIjlPM+YIHfLGeXK00Y2QISPWjeiV1esXSWrOdBDf9jD/FLpxwioirLcR
b3+65ONHPzrUv37JF4NuFL6bVclEryZv6HNGxtKhOTO6Mx/d+PnTZqUNevXP
bK3g9iw6hHacXny3yIAjfear+NGrU4EPpgde0OFa8r3IgRkGREzc2tFYi/u9
KuVxUjMdJvgue/6ZZMCdvk8xfuiVn8F5ab1eOkTbCgrxjpCg6pCgclKUCf1s
nLZhstg/rKnJLbhH7ncLilaJMGExYEGc5ygFDsX/9gntxX52kfHjF2ZC7vun
/dn+FMh5NlCm3kXC0cCpXWfWMyEwJiV5VzbuuHhO6y907JDFWrcKISbwrFBR
7GpG3whR+8T3eDyq1syzo2MiNr13g39RwOHOh/rl1zEEniv9NcXukr45x5Dd
SIXe6JHInjckSKaZHk/D7joRRaV0HKDCifYNBVfqSNjnemZdF3oVuSY5MP4s
FfSFN6mJVuLjKFy5YwN2l2ffubZDqVQwL2kTellKwtL2uDJz7C7p+sAyrjoq
3DrfY21cSIJJmcLNWOyuzstN8tSvVGh4Izm//PqnjOLAu1folfWvxzdMOAmw
Lj+1eC4HzwsvFk78RK/+zYbqlIsSANNXHGcySOhnZ+wTw+4qOeWQK62GPhC6
kqG3SbjoUxGsj93lYP2kNFEPu2Vf7F72ZDy/Ty7ynMWd+OEunGGxIWB0UKP6
Wjz2jAz773j06mjSQuVFTwK6BWTSVkSRsNdSRrEAvZI4VpYzGkbAk45dlMAw
EiCmprgRvbK+pSrucosA25/OpyeC8PcNV43oQa8qu4qle58ScKw7ytblEgm0
+oGcn+hVkoFvvi0QsJ9MLyQukPBf3K61S+jVMPV5YfcHAsQHkxz2nEU3ZnLq
V+NOTFZKkTs5QsCqNmfPnNMkVE/E1AjgTrzdq8s3OI+OyXJ2c6Ab3ZoO8+t/
jEPM3h4nD34aFNuEPTxtS0L8ueSwDePY/1cCBaa20MA860P7a0sSZoUzDguN
jcOzIhWJq7tp4M3FYbER3cgpmjJfOzIO8u1LwWuP0qA8TErr/GES7JKEMli/
jUN73ZTcfVcaMDo0AuoPknBA7IrMb/RKxZlDeNtldKbcUoQH3Sh8XDT8Gb0y
valg8C6eBoNltzZY70THElWG29CrD/KmBScf4O2brfO9v52EXVphUqXolY2g
7f6/L2ngO/tD9bMyHheCGsmp6NUXI5XF5FYabF5tYCiFbnx/9mH3RfTKfSi7
V62fho/L/no7dCPh0YSwKXp1ZX1UJzFFA9Onq26niJJQ0SChtAW9ktItGPLh
ooN+O6W9aR06P/n7/Ax9HO5O0xbWi9NBNOKN8wwvCVoGa781oVfXFitF67bR
QVZY9MQWdMNrNUd8Cno17LZB67QBHSa7BZ6aoht364Odlq9nCInKNOS1o0Pq
5pGTvuhGsLywiyR6tZpj2rDmPB3Y7Hq9b6EbT/VDEvubxqFtsF7N4xod3H/v
/FaGblicthlOR6/Er2fOCN+lg12gfg11nAGrNlu5W6JX8vVSd1sL8X7eMPv1
7RsDrl6U51+FXj3t+Lg65A0dWr8VR/8bYIBddthA1atx+B1vZqDeSQdjExHZ
oA4SDNL59CIkmRA+/dH4jAgFsoXv7FKnkSAf4D3WL47H0cphxl9dCoyeOlU8
jHuEq1x+fqcY7q+PnE6J/1HggaxS1J13JFzROuufsJEJtIW6AeUUCqxryajX
f01C2L4LtgPoVcjrICOihgJvt3va/awhIcLTO1cVu+u/nQ9vBgxRoLjFwiqt
nIRwytNjAdhdRvpxj+TXUuGJ/5oyrRISOD/aOtWjV3Y5fld7d1DhbpG5d0cB
7uXLbwg27C7fsTs8dxyo8Obc9wTvR/j84d+SfRC7SytH9JB1FBVW6KZzr3qA
Pze6uf0qdtcd3XViEs+pwHpUaSwjnYQXhtOWlehVxN6E0NEuKvhZuMup3MKe
MfyjyUSv+rnq1XtZCNj1ZFND1U0SonhFvCWwu2LyxpwN1xEQY6hafyCOhFVQ
uOIIdhejWUOvXIEAIdJFtDkSd+I6zmE/3IlvPrIzZPcRsPlOOnk4FPvKN1Ay
A72q6axafc8cPYmp+NEUiMfjmGP+K/Rq0bHgM68bAeYWd88c8MN9qiEQ0Yte
HX6hYB4dREC8pdzeqvMkfG348XQGvUqruXKc7SYByY+MfZT/I2FD+3FJPtyJ
3/lHh0IfEuAo9Zsj4xQJ+tpP+2RwJ55kfzTLUkVArq3ADKcjCfyE2bA67sQN
GcPxEe9xJ75IN7xgQ0Im30ut/X/GITH3422uQQLuWcT8ZVjg39NOh2L4G4/f
Z9mCN/8QcHtrF7umKQlDIw75JujVrw22syJraODKE3MhxRB7gHatyRS9ChER
O/BIkgatcdm7mQfw8RLaIncEvdr7evqbhgbuIDE514N7SRDOLH+nj171sPwc
aDSkAZuAwliaFgm6Ri8e7hlbfv8dl4LNSRpI3C+nDm0jIXDyNqigVxcfaFf+
8KZBZ8cXQTV0Y8XZoXVi6NWHG1eirl+nAUd1c7m/LAk3b4g+Wjk0DhpaFYlS
6TSYUQurrJHC29/31ouJXu13obTUFuPuE1IRmd+Ivep9yotAr64OZKvaNdDg
hupE105048D2uNxi9OrLbY6KuS70R3fyrze6ceLxO+645dfbY9vt7jPx+7kc
Lz1eRcKISP6T5eve1fterTvISocne85YfmQjYfNck58metU8dL93dD12S+qe
ZE50Q2KsxmclevVGRv5ZshIddlHXq21HN6qrpO7T0at0e97Avfvp0FWirmqD
boReSvtzD71aTGXdP2ZJh4Y19PhgdCPiXG2gI3q1RTL/zx0POqyo2XEkA91Q
UtmjIIVeWebk3jocQgeZ4kfnKtGN1WnVLMvXt3vKxAvPJ+MuG7/wg+hmwDPa
t6U09Kp47R/f54+xZxKHaF8ZDDjldn6LMXoVvsfr4ZlaOjRSj2/4S0GvtDgv
zL/Bnl8KzJKg0cHniMLfftwju96OxzyWYcInn60eetwUyG36kZkG2J9p+0fZ
NzHB8rrAi24NCtQ2XHh8qBrP79cqSh2kmJD+9Qyb/0l0Juik4J+yZR+uDZVJ
4PGoUGAich076t6Zz9nFJLze0RfMiY5VZJpGvi6igK+pLr/hUzy+sucCTmB3
DRqWZJ7vpMArvUc53x+S8D56Q/cD7K7AaZlYGRYqeBabpcVl4d5p8UofRa+8
do/s7ZWngqER26jcveVu2V+rgt2leE3tWYYZFfocQjLrU0lgFaLu9sLu+igu
1ewcSIWq5pjS44m4CzQc1hWgV927264p51Lh3uxPueEYEjxHNIyG0Kv/WLTI
+TYqlC2ELPheI+FVQkanCHZXdKLNM/pvKjRe5VJfCiEhQORzjTF2VzTnjcUO
HgJOvHdujgwgIVjQbDoAd6KQnfzJQzIEtHe71nH54i54tDf8IXplfdb1bLUW
AdcPfeeP9iKh+cE/pzb0Ssg3fZPaEQKmnbsa2TxI+BfSl/gDvbI4LBv8xImA
MiXej0GueHx5HFjLg93FfdLcW8aPgOCT/sYTJ0loORjeqYA7sb/hzFx2DAE6
Z+fFnK1JoBTOj+viThzTyRWUvo97MPqGCcWchA+rBY+cwJ1Yr73/RW4pATJP
xXu1TEjIi1KYOoNehfd7fZBvwq5LyG3LPITncanHAxfRK1YuG8/nnwgQeyUi
woJu+D6eFriCXm20lg7cPUGAaWJIo4M2etgSFr38OvyG3V8m37HTQESZQVRp
ksC9oUbnGnqlNVxKHBehQUuq1B5+dIPCIaQVjl7ZeGVyD6vQYDrXk/20Eu6L
fys8g9Grl9VPsgIP0MBKoEX55RYSzEwX+n3Qq3f3PoTzWdHAK1CvbAW6cdU8
LOE0erWnaV3xk7M0MLafvmeEbsjbcPtboleiY47iB0NpoCE9PZAoRMLHKsk7
OujVn7z0d/2pNDgs6XydxoP91qkzIYte6WQW5Ibk02Brpm0cL7ohKf/7ymr0
CgLOFkq+okEauXLiMLqhq9WkM4ZeSf0u7vn/ddT/EspCFxjgXWyg8Q69yvpk
oOg+vPx5jFIfX/xlgJsDm+199Kpb/G8C7zwNDtR/P/nlFwNM9iQV+6BXRZRQ
tio+OnRXyx7kRTeen4tSP4heHVXLDD21hQ4dJ1fHaKEbNqahQ7zolVXN4iL/
7uX/D+jDVnt044C/yOsuBnaynJn/a1M6rMpo0LqCbnjAVFMmerXGZ9egjysd
3nZJP7iHbjzRf/HXAb3iGzu+U/YyHVI4d5wrQzcy/JZMxdCrozv2+XyKp4PA
U+O7rc0MOLc2op1sw/60jYhOfkCHvXYV8r1vGJAtM+4Vh17pthVfNC6nw336
+43jtQwYVx7XWH6/s/B/h5RXttFBIetR9N4XJIj/a59rkcM++fexRHTpPeQH
zdVP4B5h11MUkpdlwqHxI5XlchQY23vFPvsJekX6p4VvZoLkicQWq2Polcsn
2yO5JJy2Gr7yEb1y6BX7uHiZAmoDzTW/M/HxJZ61KUszQZDq3F3wgAI/FedD
7t4hoebpYnAwdtcF+Zp6h1YKRO7a+nB3CvZDxbqbzejVzqxLVzdMUWBvjKRS
1w08TjVV2Pixuwqf0ld1iFLh4KYEQZ9oEoQGwhnHsbv84hfN7+lRYSRd5yRX
BPbq0AnW29hdH2w2mp7ypMJPqXnO9CskDEx/j2WgV3s4tH6o36JC8cVEQcXL
eDtHo87xYHdR3E7IrgIqWE02X33pg8dXxYU8PewuB+Ozo1+GqSCQHnRkryfu
oNhJdX/cifuqlde5cBGgzhcS8NqNhHO1NusfoVdeHf+YDDECLDOerjzgQkLf
4LQRbfl1rW/hl422EXBJs3/qlT0JbjtFiBn06tZpqaI3+gSsvr6wf6cVCV9y
hR+KYXcJOcpF77UlYMPwGLPQjATXV8aN2rgTHS8PLVV7EaDgdfOf5BES1D5y
b7fBnRj9O4NnTwQBZ8a7zyQYkDDBVjXijV7FVScU1t0m4NpU9fbZ/STUCTwf
vo5eHbKbIA88I6Dm42YHpz3Y/w8tVe6gVykbfoW21hNQW8c3+nYHdpccd2Ue
enX2W+VjS5KApNjADzJqJAQN7rtejF7tC3I/+HkUb3/OWTxUkYRPf61uvUSv
rI6ImFxYRFezWt91bSaBxbPxWwV6dfZub90KQTyu+2uoKpIkqKrN+JWjVxo+
9QlpcjTYNr9/51URPF9InDpQgl5p1zVWKmnTwE/Eg+W9IPbk6lCjJ+hV5b4x
jYZjuO+0D8lvQDdO1TfGp6NXN7Jk5h1O0yDIfLL4JBcJczylnHHolbOvE+d8
AA0EtkfezmYlYVNbQ9Ul9KpXL/poegINvmdL9PfPM2CqI/SBA3q1kBz0XjuX
BvYnPl8XRTeuyZ2rO4BexQwKBg5U0EB5aSrBAt0Ya+XllkGv7tfLmF5vp4Gs
btjfqO8MUP/xN24J9+DZtksHVD/TIONVRX3lVwac+PJiTxd69buKdrRrmgZD
Iq1jX/sZoCDXIVLYv/z/CE96XVuN+2Xmhx8vumHm9ntzCHrF35p4Z7skHdi5
nF12oBsq0Y/tjNGrMnHbxkF1OiQvOjy3QjfePo2rFUKv0lv+MVMN6bDugZLT
JXQje/t+g+6OceANFFpz+CQdNjeu9UlCN2rb3P4uf26D15aD65a80Q3LY9+e
oBsnLzyh2KBXzUJiHBXX6dB57EBdbTkDRrwKWgXRq6xxlQ8X0ukwTGr+bX/O
gMbz4mMt78eh/CXLZeXndADxyNSPTxmwMahIKRi94vq2bny0gQ7aggufUnCP
PBSxvTWmhHvheemW8V/vwVNJ8aFeBgnSJh1uhxXx+Un3GIrbSIH6iWnqL9wj
yY58Dx7KM+HvjqOl2w5S4L0cv2N6EgnH7Hfun0evXJI+hfeepcAePjUz3Xjs
kGehB49twX2heflwYioFeDxWP/pyHbtio0R+NnaXtvjVWYM6CnD72Z0MDyNh
a9+h80z0qmR093X2bxSYWfx8STyYhNJ0rVRN7C6jv98Gm3ioMHDSabLsEgnn
vRTWB2N3XXMqZk3SosK5gAyqoTcJ8Uy7qTr0yoerpMvRiQpcFEeej2dJ0N7O
pziPXkk/nLXSiKGCord/0ekzJPzojanUxO4ybYi6yFNKhdh1ZcU/nPD2pXgz
PbG7dvcbSfzopsJu3jF+Xzt8PteNkNno1anCpLzRFQT0WP1iTB/HPb7OxZlA
rzyNvf84rCegLTlv5uIxdEa2Ze88evU9aMtchyLuL/5vwT+MSLC57eWxGbur
eoaz0EyHgC9kmvPp5X83qckbNMSd2Mt1loNqQcDC3fRHXTq4j+41PPbAnShz
/e6CqTv6Rnw2NtyNf7dJmYrr6FXHYEcCLZiA9/knzMo0SFA/KMmbvfzviVsd
S08kEbBfZLxcbCsJJTShopfoVZC0m3NfHgHenbeDwxRIaC88ndyEXsEGsTT3
agJWuFnkDMqQYFnlV02iV/abHhpMUwg4Iiwmv1+CBFphweYB9EqUS+L8tS8E
2K6dWntPmITnm7yp39ArYZMHnOtnCHi6t9diQgB3X8r2qtFlr3btW/WUmwZr
Ar/MHlhL4r53HBhBryb6Fs7tl6bB6QsCLMmc2NVMj4ND6BVVelDp4w4ahBUH
nuldgV75Nw18Qq/u1H3d52tEg9dP1VS2oBtbjCfKqejVFpP5+/yONGDUHbH0
+MOAb6WODYBeRZgJ6JdcpMF/at8/5U8wAFhSOZffN621a62iRTQNiF3KDd/G
GHAwjefq8nVZMW5tBn8zaHCLXWOtFLrh+NVCIQC94tDenJpZgrusVLHiOLpx
OPQ7uy16tSgystrgHfrjoP0m6iMD7q1z4lv+XBrLCwO5E900cNx0V7X8AwOU
g3SM+NArtddUq8yfeD9F/OYH3jNA9cXGkq/o1Wy+t+QRdjp4nuJS5kI3uCYj
D1agVy7fA6fmhelwVDGxTgndsHwozBKJXoV7320vVqGDYdbhEmN0o9nX86sp
eqVi75t76gAd5FcGc7qjG8rmmyaF0KsjnM8uiC5/7lmZV30ouqHt17W5swtv
X7BbmXGWDlWCXj1p6EbsGY3gNPRK0SuJSAilQ82TVrvHDxngwt735yh6dcLO
wdI4jQ7lAh/3vbzPgKzo0JSV6JXblXfPVz2lQxLfZCTcYUBaQuuxKuo4FPQZ
9rW8osMpjgeTg7hH+Mv3nFilxgR2j7sNL4feg6PTT8OkWBIubv8+4K6Kx1fY
QS3btRRYmXqUTTuSBMFUWXqDMhMWdYLq2DUpcKL4ovSXqyS8OSQmL46OyXiV
G710wD21lz/3+vJ148ILA94KTGg7Y0c/G0WBAOPPUbJ+JBzXmP/3BrtrXOL1
IfnnFOj3yKa+OY/nox1HffnQsRWqW++PdVGg+gVPoN1/JIhsVjW2xe4iOnqb
S1dQIZz28/rEKRL2hH24ko3dZc/3pzpUkQoFC6v/hDlipx0OXv0FvZJKTHKz
tKBCP5dSE68t7os5t5/S2F1RlOrXKsFU2OEg8e+uJfbegy7Fk9hdQRs9a7nz
qODGWZEgdZSENTSBmlTciRZ3U41+vafC/PPWa7mHsR8qT95vRq9+HOdx/PSH
Cj5F23s26aHPUmwfZtAr9i2Wl77yEnBysS31/j4S7vsctdqC3WVXxjfluJmA
MFP/ovW70Jn6JAVT3In3GUKSvTsJYC4JK8Spk5DRKmp4EXfiqlUlU/YmBKxR
uss+r4L9z36gJBW9WuWi+l+/MwG3cr/s95AnQTPdzrUUvZoNpwSduoTdMj/c
S99Ewr6QN/bt6BXLkzbp8VgCZuLvftopTsJf5w/pg+jVnwLr45eyCNji83NX
+gb0p4kpMY1eJfM84GUrQ9/ShmZm+Ukg2HyH2HAnBv1rPpzcTEBjkb/wcW4S
5g+0jfHgTiwyZs7L9BJQebjgzrOV6GGSndp6NiZ0pclsqvxFgBWuUxZ0w7k/
8YXICiZ2cGCp6UoaBLvx1xybw32xqsNHZGkcWqVnHg1vpEHgAfuTmdMM8O+9
f27dwjiM2GfOhG+lwa8Tl52+/WTAeUmHrLVz42Cb5JItpYddFB3UoIRulCfF
rmKdHYcqk123661pYPHwaoznEAOYs5n5k+iVwQruDhdPGqicziku6GPAHrl1
If3o1Sa2V8c5w2lQcolD61sXA07NnI9sRq+K7yrxFt3C7w+gSIqjG4TztleF
6NXSCsW5EwU0EOeQ++8YunHzYr9sInp12j9KgLUePSzSXh/ahDvLke3VOfRq
+541psUMGjxcpbv52WsGvA9RCDdAr0Iy/B45jNKA+5lHKqOGAd+tP3uLoVfr
WUKF+Bbx77B94szsSwbcfVIX9+PrOMSN9Nx8K0AHjoMCGRvRDVMXS0otemW5
qCUUIEcH+k1+jZ3ohlz1vp1R6JWMsOZtNW06OParbzVHNygKIs0m6NX+g34C
Y8foQOV4e8Md3XC9FBHMh17xtceH5J2mw8FJ7mNB6MaFcilLajf2lcFahksg
dleh66XYZAY0Wd02iUWv3t8OXbMpkQ6EnfiKW/EM8N2S5KaLXtkveIh/yaXD
d73UiczrDAg3qcn+/WEcCjcYsD6qpMMlD16KYggevzLCO2U1mDBc6JtwufM9
0Pc1P+/APfJcnSf4+nYmcMxVP5dmocD2K5wzIRdJSM1y2PIFvWIb+TFGyFPg
UmhorozX8nVWmtu1tzKh+HiE2nUzCp4nx0ob3PG8KdWQnaTChICCT766gRTo
eLW4xcWVBMWpXee/oFct/cYFrLkUOLkzeH7uJAmF+W3p27C7PEOFm1raKKA9
L6OZbI3HV0nx5mDsrks1l2pu/UavVtbQN1vg8/mHBNdb9ErCPT7IQ5wKfCOr
6C9M8Lz/1lJvJXbXHO+Ff7oGVNBo6lHXMSTBeF1ipz52138z8kpS56mQ4MY2
8+4ACWKWPPVh2F3GysUs7HeocFrZTMJ4L+6Fq+vmq9Cr4sjvnsx6KuwRz3zU
pkVCiNJYzA/0SqKy4nTPKBWGRl/fNNyO+yiO4SaJ3eWmct7TfRUBDT8ye14r
YwdelEw9gt2VGbDW6as4Ae07BWO15Eg44ii89hLuxJ9L3OyntxOQHcN5N18a
3QvmpaWjV9lhtebDBgTk2J1aJSxGwsqnVn116FXKIVf9c3YEzH9d/yl8Pe6m
SAP1nmWv5HXJqfMEZErx8YzxYWf+p0H5g155xyfMXblGwK5mvRyTNXh+uRpc
uBZ34in/4JLVd7GLXApvF3KQ8ORlMFUKd2JlrMbE3UIC6vcb/FjFQkLgh7Tt
argT89d+fK70Bl29zvvI5R8D/l1WIvesYoLa1LXx5YvIpBXXQsVvPJ/KPnx5
EL06NWCcceI7Aa5zBrtWoRvxuh70Q+gVn/ruqp9LBCTmNQtZjTIgQnxYwRC9
MuU6rh0nRIOJFw/MHnxhwOal+Go99OrYwXsSCgq4p9K+/hzuZcCizPvwvejV
gVQWm5a9NIjILvipiG4caBYL245eGV31HzprTgPf9bxm/9EZMKD8+4UMevXU
dbiKz40G3nJbhR61MyA5kyLCj179DN9GrwjCHvujuqvvHf5elxRL/qFXtlxq
ss43aUC9t6NeAN0oVI65PIBeHeUrL+LOo8GgnFf+QXTj4NHzXm/Qq/HixFPV
VTSIfMY5fQHdcE4+lZSNXtXNh+3/j0KD3J07cu8VY3fRp/oD0asbQsZ7xL7Q
QHdApaw+H/eaWIG1GXp1YkuOCfGXBrOvlOW/5DKgoFj0nwx6ZeqndeE6Nx1O
z11YWoFu7FnV/WZyGL06W5a+T5oO/q17d4ujGyzfrpTUoVf/0mqaZ3bQocen
u0sD3dhqlNNwDb1yLx/5WWaEvXQs+ZMhusEa9fX/n+/n8Y5YddGRDi87yg7Y
oBsZ+0fNOdErPVZWXnVfOpSkpfGcCWXAKl/ztjc943DsF9vM72g6XNsTr3M+
kAHiV1pcAtGrei+ruspMdO/Ob9LXlwEWYv82qKJXBaWXrEJK6RBJf3/+7DkS
EgNSd+ruZMKn1m0RGq3vYUfC7l4hNxIaLL7syNFkAmVF5bHByfeQ+yS3uNoZ
++GC3e0l9KrCNX73LVEKSL+v+2Zvj8fRkpydjToTcsYlNI7pUUBHVjd87gQJ
szcuXS3exgQVIUKNz5MCyi6jYbfMSLDm82dlRcf6yAmZjjQKcFb4fVU5QkLO
V7vBY9hdt6resOS8ooDs8JNnrw1I6OyzEc/A7nLu8a++OEyBc/qHO810Sfil
96TkC3rlNLtdz5iPCiFVUqf79pDA0x+aKYfd9duHM0l+FxX4G+aPu2ni7piR
7HfD7tptP5uyxoUK3BFF+eNqJHx1a/B9iF7dCV/Q+R1LhY6Xq528lNCZlGL7
XvTqof9s1OALKpx9PXp5fAsJ+wO2pAlgd21Pf+vQ0YN7rUzu9xkpEjaUnRPT
w+76mJz0aZiVgG/GD2m9G0kwCadMeONOtBAZ0XXbgL3x5wC/2TrclW23+DLQ
q9qvVXajSgSs7RorrecloUdOKPANerVz1mKT134CrhPXy5VXk2AwdFvpK3r1
t2MuYdqSgMfBHGJp7CQkrL4kw47dNRnz895VDwJe7LH5MrvIgPtnOJwkcSfW
PT2twx1CwEb1y9x2swzojs/q18SdGHr6hl96MgH/mdvfrpxiwLGB7Gwj3Inc
oQmaKo8J2GfFdk3gBwM+33F/YItecTjFBL2uQWdoXnT3EQacbbEeOINebeO/
vdeaIODilofhNYMM+Hu6w+48ejVm3OL3a4gAnZRnqavRja7DhwV80asHQYri
N2ax67TSuE504v3ZK8bqh15FNtYpK/FgJ/Cc78ukMcBpsVbBB70y5r2a2baJ
BgPzpusH2xgQqZsRdRa94lvp6u6lRQOr9ybPN6EbB+tUNjqjV9ZbrK4LHqHB
hp3RzxzrGRCtMtJvvrT8OYG6E9VONDj+VWLN3WoG2Nnqd+5Hr1wXV2Sd8qPB
Sm/NdkoZA36Kv1lURK+G/p6P44ulQbjX358s6EbZf32Wy16pP7EvenWfBsLn
Ei5tRTeCzcS7ptArDpZklvMvaJD8R8nJFt0I5uSIoqNXP8bogdLNNHiTwV4Y
lok7blzCqRC92mn1aV1HDw2mJo+dzLvNAOubf52vTSx/3pRTa/wvGpy6ZeLd
mMSATdUScVbo1bmnvEn6K+nwWG3P6Oc4dMBTrlsWvYp5e9OFRZQO3EEOjf8i
GTD847HJ5Og4fKVHaNVtpcOkLstKPnRDnrJrqAq9Ik3CuYL16LDe3bNAGt14
PRyQcQW9aumVoGjb0KFv9M/LreiGvCeX3170at79a+iSJx1uDvzastuLAbpj
0edmB/DvIGon0hBOh9jIirn97gw4aZwTVtI3Drlei4mxt+lwZkeelp4LA9Z+
WSw9jV6NahzqNX9Gh8XA/z4+xD2yJ93S0labCc8ZDTmjte9B9DWDanychA8n
166p3c2Ea5sUNmR8fQ+vXpcq/cQ9Ul77avPGXUwofaH9zJIHfQisHk8wIoFy
KDnLVwuPx9xzxwW1KKDnniegpI9u/HgR0LaDCUnB61d2OVKAI1Et860OCTc5
zUsk0DEFveiSnGgKVASKxVvvJuGPRaaeF3bX06ssxhdLKHBYX6V/VAMd4GrZ
Vo1ede4rajzcTYFb9xRv+W8l4RB9tT8rdteFzSVCsmxUKKntf75CEfdd7z2B
Q9hdp86LKHEpU0E4WnRr9GYSWrtfsEZjd2mwj8z9tKTChP9zvjWSuGs4U/Qb
0ausSzyBvVeosO+p7/FYERJs1S5/XESvXATP3yEeUYFjSHeBQ4gEvdq8Wg3s
LoexnsMtVHQvbZozhAd9K3JinsGd+KdLNKxphgpKfRf8JrlIyC6e8EhDrzSM
Ltz5ykfAws07+q5sJETzZ6vVo1fOtiNb/ttCgMvO45eJBQZc76zRGUavhhx1
XX7tIsB0Y8ra3TMMiKtJSVuN3cWzEQyCTHEfaR/gyJ5kwGONQDVF3IkXWjPb
OV1xl7mdcGRlMkDhSgOPAe7Ee7sFmLf8CWhWbhJ1HmbAlzutqg7olcSbww/k
49HDkcTdtZ8ZcNRuOMEHvco68t9gbTYBto3FNYI9uBc8L6tEoFdLjsn5Fi8J
cH+rkOXWwYDW431cN9Gr55s+/hxvISChkv1rBcGA2cBgybvolYSLaVF0HwGC
J4xvsKMb51Wqzt9Hr3bd/dcrO0WAgjL3HZNG3B0FC3+z0CvJv33+TZw0yC60
4UgBBvQqlJdnolddp6d9/xOjQY26Ecmowg4hzZ7eRq8OJ6lReLfRYGjFDKcg
usHoO0C7gV4p/AgKrtCngc3hsEyTIvQwaFEhFL3a/LrmsrMtDXqVuW5de8KA
jb/mS73Qqw2y72vWnsfvbyj9VZHDgNK0qv9s0CvvDdf31UZgd0kVPB/OYEB7
d+nRZa8K/F7OnruD3WIq+UEQ3ZAw+89pua+6eWS+SRbSIMZW10Yb3dhSfCp9
eQ96PkqcZ7xGl44fOuiMbmzrVFjqRa8W5st2xHfgfjxxNikc3Qjr1Yt9iV7p
dOnH6n+nwe2Q7wezrzLAhEdvTwx6Jb7mxyQLCx34FlbZVQfg4zJVyWeDXnVd
MXd/JYRfF1jbSVxkgL79zlXLn1Pqosn/5YoCHRQFdCq/eDJgpZOtDPP7OLxy
em2ns48OpR4/FifdGHDJrfpkCXp1x2qqldWCDn+yPAsWnRnAtu1vuTd61f9M
TaHZjQ7BtoKvVtozQLqzVEUVvbq1fd4rMZgOmk67tdacYMDujuT6b4Pj8JyN
nmqdRIeiDN0N3Mfw8RLY75WOXknckEuReUSHF0eCuTtxj6jvmovy3s8Ej1J5
5u3i93B2QSU26CAJvmMqMx/2MYG1jo39aNd7EFBq9xTbh7ueQ6F1+17sjWc/
dbhXUMBJjqeiaid2SIDQ/I092DmvTqRSFSig8K7otIU6CbV3N8Z/Ra+y0lJ+
3zGnwFPncwGjKiRoiblf3oXdVXTwl4V7EAW+9nFNBsmTwNyiDDHYXUlHC/L2
PqTAcMlh6moZ3H2mdxw60KvrwOwRfk+BdYN/+W6Jk7D78YClJHbXU2lyfHaa
An48A+XiwiTcqt+TfQq7a2eaV/OABBV6vOn1DwRI2FYyuO8RetX1ocLl/SHc
ZcM5qpvWklAhyr91CL2y3pNVBBeoUMSUZ8nixN93B8d5Ceyu051sWRV3cWc9
09khzIp/t7aleUvsruKzL2VfvqEC52zj+xvzDNAy0uuMwp24M8R3Z+V39Mrq
fsvSHwa8eis8X45efVELcHVajT6wFMt7/WJA7u9Gj0H0yjHb3WVYggDHkc9j
Xd/RAePbEquxu9YImQt4qxMwXbeZb/83Bkwzu4VVcSfqxvifWzhEwPgv9zu5
Awyg1n8+YSq5fL2o4H/x9gQQVbkRbJ8YYHNuqeM/9Kpo0JpdwhuPdyEKzZHE
HeQaezsCvZI3vKhRGon90z4UXkllwLqxT7fuoFdQd33K8B4Bn0JGbq1tZcCN
jcc+5C9f//C9ePdgEQHXMnrXOjbgcTqub1yBXikLsbOFvCWA63z78LNXDLi9
R3Jh+XotM7EkfbEuAsLEXm/+W8mAnrb9w+/QK+WbJ+dqxwkwKWhr2PsC+8pM
gKsFvUp/6i7utIIGdA6W5tBCBvzwXzzZhF59snv6cPn9rUcW/VTrHzPAbchn
+DV6de6YYGyhIg38zQ/PzD1gwB+dgZxK9Ip7Jv6dlQ52TvHdLf/j6L7jqfzf
OI4XskIiI4miomGT7N2wkj0iVBoSkaQUoSQjkhHfaFopZZSKLqOM4pxzn/um
zCYJx05E/C6/fz08ODnnfn7eL845qaMboPMq8RF69SN+xpbDnoB3ZdeeH03D
6y49pCATvaqQUJcvPUrA5hmTR7eS8N8rd2PsMnplfkXQ4NAFAlbwj7E3XKNg
f+eVw37oVedNtySxGwQUX6ypHo2mYEddK/s+9OrVRMeqllzswe7+r6LoRqYo
2wdl9IrN0Opd9GvcP1XZR7TQDUXtGy/50KsAgeOZ+gwCPr2WsnVGN8beraAt
/r7dZuJr/N8fBHSF598NQjfM47i4XqJXmdc8UitmcC9VhzvGoRvCWTwHY9Gr
NRGRRWcF8HrfPRSQg27kWhR8cUCv6tN/vdeWZcKRKa2xYjcKJvQvXJRCr+Sf
y/+a18Ruqq34WOlAwbmj0jrfWUMw2N+y8NaSCXU1lRvq91JgL6wg8gC9ivT3
5ErwYoK/fPanD3uw4/p3LvdCr/7WeU47nmFCutXLiRYTvJ0TgpIS6NXH+7s/
yMQxQenJyTPNehQEFKrupP9AP1fHnR3NYUJH/z1eNs1WiPq0mXHFlAWbNh3w
NrjXApYb+vgfqLRC+6HemV/GLODhNxWbxS6z40wKMd7WCnn/aUXvMWLBr/ms
35UTLfBE02VX9ybcLQxLv4cGLBg8QBuNlqTBrR//wk6vxx1Vuqv0H3pVOKw6
Z2tGA8UaPXFuSewsDwd7W9xdMc0rl8udpMEj/i7xDNFWsHG+b30fdxf3lfuC
S9Np0JyZc3HDylb4L8vrzih6lbtm5ZKvQAMemu2ex8ux427X7tLG3ZXHe7q5
vp8GXx7WnVXlbIVi21njCNxdVo5tR0tWYn+9qeMrW9IKvpomSbXo1Y5k1cb7
2thZdvLLVGfx52lPKSzF3cX+M6g78yAdVpm/9yr6TUGT6eBqXdxdyzedyUqP
p0OswhUZ2VE8x/UbbIOwE282Lft9q5wOYzt0d6UNUDAvUtiWi15xcnzputtD
h20uDPqyXgosdn6634ZevTrUfu8jO+4ZlS2Vpz7j3p7KqGDD3aXoJ7DSS5wB
r6Q0+DraKbi7oCG8FXeX7U9HVdY2BmzX+wL6FD7+J2ef7cVOPC44sXDeiAFf
jkt9zKFhF2zUTglAr6r/WxPE78gAE8u+ff8a0ZNC4/IE9Cqsaunlu8fx4zaq
yk51FBw8eFw0D71K30RX3BHOgNVlSwIfV1Ggt4ynvBK9mlqVe4xIYYBOjJ3Y
EnTDYE3odRp6lWh/V9EvnwG6xcrr9pbgvloh/qALvSrZSZ1ZXsWA14N34zOL
8POVdo71oVeJ/eY6RQQD5DvK9n/LpcCjzCeYhV49aOcJ3tvHgJyZc0mb0A2L
xs+Ko+hVsLfA2t9/sSuf8MgfycIui5OQHEGvzM9bb7u9ggD2XedkH6RSoL42
SmdgcV+RFVm7NmB//fsV2X0dr6/bV+O+olepbeqHJnfgLpoL3SmMbhzSus3b
il5tenHv4n0rAnYc3nvSDN0o3rL9xVv0yiWw87v94v8TZJXyN+gi3o+1H64/
Ra9k2p/Gc4cQcKwpcDD7LAX5/u03MtCrA+msU2/iCNAdkDKqD8ROrO5+E4Ze
ndJxiD9zhwDqbfPsrxO4W/xchdzRqxm9B5RyOQG/gsrX8KIbW92pOC30qoAn
yYTVREDTGtG7m9CN04/IzULolQF7A/Goh4A6llK8Abrh9+T7QN/fIUhNHg05
MUHA9a27u+3RjZ3/brQsPp+hbeNjRSVu3DNb8m/6oBsKZ4IY0egV0yRteEKS
CW+dbpecRjfsTSXGrdArn2v6T1+pMIHQCtUMRzdW9UmrCKNXIpUqJ6J2MiE+
OFn2CrrxWXVd/OL7wOc2TEpYuzEhhmEQEqtJgaXXq6U30Ks5xrJyiQAmBKt/
U41VoWATf3KSBXr1T6tL9Vc0E3RLOhwvb8Wu1zPXXIpepTzqj395iwkLxVda
N25shVMfIzZn7mYB1RrA9uVmC2zueLj/HfYIvyDJN7+TBWvUWDZ3qlrgiG6e
uZdEK2wpStzrYcaCtcYGLT59LcDdbpozgz2y3v3TyCsTFpgmfziutoIGxpq6
rokrWqFX4+OgMDrmNd8nybmDBolHrM9L87bCwWdlRsdwd7FBW1uPJw3+cRmy
PeZohdcV/428wt31/igjriqWBqG724e3L2DvF1RNcKNj6n9nFO+V0GDdSK9h
1Qw+/vfvtrTD3XXh+7HS+E4ahO3XmDaYxF29JeDPLdxdlSvk+C5w0OHN9cxV
MIx7ePL4RBd6ZTEsvy1IgQ5zW4ZStX/hPpE/pS+Ju+tQmBOnvyMdDodwhJV8
x/v3fVWbE+6ur9ZxCQHhdDh4rKZ+Uw/+PIMTX11Hr1z+SygLyadD8wOOM+mf
KJj1ke2vQ68CdomfjCbosORSaSwHibczCtwn0SuDX61FaX/p8I/vxdKTLRS0
uuavXo+7S3z4qcrHlQwIFZ7rJhvwcaK6ScIcOzFQdkPt4U0MYEkFSW2vxXON
K9rdH716Jcy+9I82A+5cEKy7WYk7JGPFtyT0yr84+ue1vXhdmzV/GHlOQeqx
1blP0CtHj08n1x9iQJXzvR27nlHQ934yrxG9Cli2KenVWQZcPXqDJ+sR3v7P
f3p7Fp+vxZ9o6pjAAMW/OfqDDynY9vC8xxh6xX9k8+XJuwzwOc78qHkHz9+p
zhVLsBNnbvJYpD5nwN4x9daITAqIlJBpXkncXU92XN/xgQHGuW3b62/i+bj1
qaiQBAveHn1p3vOZAQVR7+e40I1jbgNHRcRZYLIm5syVSXT4uJzczlgKbF8n
sFaJYuc2pi5X4SHAQo77eUQUOvCF477gKnRYlsnWs5aAgKC4ghcXKHh+uCqG
W4gFLenrHRJUCdg5Sy4dDMGPj8hlzqFXqjbes/q7CIj35AYJdGNWveLTEHr1
Rs93eNwNP1/f7utOdEOGvdeoHb0KlOaTKwggwHXb96P+PhQYmclTNehVXix/
ttdlAtbVDTjc9KRgHe9CQi56VcxStpTMJOBb9p38clcK9lz75ReDXl2+q7yl
/QkBJw4aeJH2eP0q+gYeQq9Kf4JyRh3eflgWwbKm4MNN3kw99Er7zzVnl08E
cAZsX8aBbjzO2PddCL16wa6ZKclCh03Fx0TRjS1OLZY/5oYg1sx7+OtSJnhL
T5lsQjfGNQRan6FXSmwPrApEmZA8LzWvgm4Y/co7dx69en4z/mngViZUz/RK
a6MbrFAVXaPFvw+eebhC35AJkrvvFeijG2EWZuLs6FXrzlMHlzswYYVJcZbB
RnRG5hJ/zdgQjLf6Pug4xoTAYyemdKUpGJC/InEevXq+lffDo4tMuOOt92r7
agrC/0zrqaBXkPyKfjGFCV+bPp00Fm6FhsCcpEeWLJi182sJjWmBm4lSZz9j
j2jwpSoIWuB+0ON5pv+0BSwu1/Wf5W6F0B3v5E/twV09213P094CAXxR1QLs
rcDNYxdB28WCS+ZWbJ3YZW+5JRfu/KMgZ+ygqjw6Vr+1wLFkC+6cXzYPlBZf
p0aT1ruIuytrSO3FdTsaJD3+WfxqHM+7gafZDPQqQ2mdWFAYDTb1Faw3ZuEO
5zR1kMbdxf876dj+hzR4Xnlo5t1PCmI8uA8cx901df/WXQsaDbyn+rfv/EaB
RrHSq2folbCwfonhHxocmObtqO2i4Lb+8KHf6JXVjcBEnXV0UG6+903nI3b9
l3PuGri7dk2u2ay7hw6fZONtnhHo3rzAvVO4u+QzVgQbB9KBzSNXVnbx7yZZ
fcqF6NWzIOHD1ll02HKNckuup2CluyH3Z/Tq8tqewQNv6VB34t/0bDV+/evu
mwQXfz//UXTuDIsOhlHLZ71fUxCiGBmLdwysaNnyds9y3BXcLK/6ctwt/ZNK
R7ATxa4n13RIo0t/UhQ2PcWdtmlBLAG9unM6zP+kOvbXyin3yELsPmGWQTF6
tadoXQPHHgZUfuWb6HhAwds7/Lkt6JVz26Oa2+64Z960DinloD8JJbv70asq
XlNnrUAGfKLvs7h0C89ZP+VNC+jV+s9c0R+vMGDFqisC9BQKtIp6dIWwE0X9
BPTPZjHAzOv89tWJ+PhMF4tbL4M97nwkfM1TBjw5rl934CoFSw/uWKGwjgVH
WyWMat4yYO3bz2X3IvF8V7rboI5evS3eHHasnQFUb9Dyb2EUPBQsL1l8XU+P
TcLmVcMMsFQWbliLbnwQ7qDtQK+q6jWNa9gImBlp/+lwioI6s1AJDfSK9V4Y
AsQI+OPZ73fNlwLrl/Mpi8+Hj2jiuCWzDXunxNvl9WHcVwntWjLolVJ/X2Ob
IQFfl58q7D+AO2f8PK8wenWX//quBAcCwhIMvITQDRV1N44lgiyo63/Pv/M4
AX8d5y/sQDdCXo5s/IVeWU17rloaTkBa7NclbuiGj2C5Hw29cr8haP8mhYB2
i/UDobtxl45t7ihGr7YNJb+7kI991zKjlWpMQdAuxrEE9Or3+jQvgyoClPY8
Gi3Sxe+rprDmCHrVo9+wjp1JwN7l5wRqtqOHq5qGdNGrtWaNs4192IOBT1II
Zez0BKVuAfRKbrvGYNIs7rTxmxE9WyjIjhsZ6JofgmVr7v90FWTC5jUXW39u
oIDLMmtVHnrVwnfn16aNTNiS8eYGS4qCLK9GZz/0arNe6a9JLSY81CiuGBGn
4P7rFc+V0CvBhf1f3lozwfN70a5hIfT8Ef/W4d9DcJsuWp92kAk9L8QNf/FR
UDHo9Tx/AjvOwy7l+FkmhE843fvCScGv+8WOB9ArhVsXDQ0TmLBXwe6T0+Lz
uD7Isr22wd0r71vHd64F1kfzeo9jjwy6NTqv24v7RLlAsw27bMo/xy52igJX
uVC+SCv89+ZFfXv4oQU6H9OKJMfQz2ynNV/QK5MwlxfnJ1vgYaSzX9EgBZNp
MVHa5iyQ/Bha4LSWBrqwJHVHHwWjlkomybi7uNdvKNLaSYOht4myNV8o+OgX
4vwDvdrHf7VkvT8N6mJbxHd2UnBFMq5GDXfXsnvvildkoG//xZ1uaKXg75/0
sHDcXc8MWWnsNfj1t2RtN2PgebGeFtOAXqUUL7j++0WDsQXCA97j9zXx/Loc
d9eEzPDwnBAdvJN5WBrvsDsyomIscXe92plpxqZLh7+zUl/zgYJElv/ZWOxE
5d1t+/gP00F9+YS2+CsKip4cKKlFr1Z9OcQplYjO6B7/G1VGQXz/dbVp9Or7
/hkH9Rd0eP32hPTQEwrybAz/bsbdZf5YU83mCx2yk/sKbAqwUyxKOZyxE89o
uDZWcDDgjE3DrWf3sfvGFPZFoldPAs8pW67GzgpgGxHIpkB59XR3PnqVk6Zp
8U2BAas2Xy84mkGBqvP+gg/o1a8V71aeN2bA99CjTW9uUPCEP//ZAHpl+tL6
gqgT+qCaYL0ygYI/Plt/L8NODP48faXMlwFuvxd2eMbg49xHK3AtdqLPri9y
DhEM0NduuProEnZfv5ycijwLrNUlXBbfd4jdnqU3cR6dL9orZLQJe/NkmXB2
AQMuBkU4a57Bc9CJT9UKvfLfVW6z8w0Drj+68SkkgILS8MpoB/Rq2cM1PGNM
Bvyc1HpTdhzdLqrhdkWvwtk/a2T/ZMAHlSSe4UMU8HhGVLqiV5kXR+hWcwz4
plL6ShbdCJP2zHZCrzg+aTAWBAnoLn9LOLhQ4B78ocgGvXK7mKJUtpEA5aAB
62g7Cpb8VeozQ69sb37rO65NwBMxa9ViK9y3LvO7NdGr0T+/h2X3EqBttTas
bRcFU86F5Ab06u+eW4afDxJgXRW77a8RBV97CqMF0Cuf30nUf2cJSFrVZCKB
bqz/E+o6iftqYXvm/f0JuJc4RWq3oxvOHTft2tAr2Y2+uVL3CNhu8yhvL7rR
NnH+ZBl69d+LktZvzwlwqGqZPIRuUD9LChLRq0y6+JaCDwTMbq4tOINuZN6q
Zj+MXrUY6P936gv6eYVZH41uPFJROq+5bPH5Y5UbdH8TkNxlaXkd3eiVjRfg
RK8u7Jer5OZlQqV1lHbaohsaRysZi++r/JTH7aMU+iDdnHwL3dgU7RSVvvj8
9sr+mTw1JmSXXLK9hW7MxY55uaJXB64aJ5/bzYSGJLYLqUso6NxIOK5Gr94Y
Jq7e686E0uPPVib+JWH3HVyDf4YgxkA3bmMgE2wkfwtGTZLQ/Kz7Qhx65Sby
vOffFSb8yKsQ9hnBXTRQeK7RngXr2mN+ZJxoAa1P2yTnsUf++8Udp2iH55RA
7w+f1BbYcnw+/sYPfDyYmf1J2seCoFrjdTpvWmBJ2OBh2c8UCNHCq0bQKzvx
f7EiP1tApbw892k7BedednSaW+P16O0pMoVdVmIus1eboqDl4Tmbe7i7Nmwt
KO/CLrNi/+tRTaOg6u6V1VPoFYcWh0eTFw1GdXjajJsoiFCV19iJu0vkv8Sl
lddoMDIoXVZTh7vXNe7uDdxdDmUOKWWlNNhbsHJG9w0F32737O9Er7x1nDhL
u7DvisoflFVQkMZnd3gd7q4aq0tWL5bRgf1j33P5UnTJVPKlF+6uwNMlbjWK
dKgviVK69ZiC6fMBjjnoFTx5KUs40WHd+ZMCnPl4nkZd1WlHr4zDHDP6IuiQ
LpVg53+Pglh6js8K3F2KP3cULS2kg69J0zz1H54jFydbjXB3PU9caitD0qHa
QlBQM50CY4+GmADsxIFnRmG75+hw18UuJjWZAvFxt3NZ6NWu21UCr4QYIGUX
c2g0DvfzuelHteiV0iHBm7ZyDDDoe5C36woFKTO9En3olU6PeQNLB11KyLfJ
iqCAQzfg3TLsxIsy6XfjbLDLkm8cGDxHwe+u3oL12InhZWKS2w4zgLnyCKUZ
TEGCVUa9Fnai87WfSvRQBgSwKxZH+OP929m52hq9YgpJtJ1OZMCk5sTIu2O4
i8q57nmgV291XnOtvc8AP8/6NC50I2Qy2N0XvQo8S69qeMEAl5Wv75t5UOB5
J8r8NHq1tdFu7HQzAw7X94tGOOP9VZ50JBS96qzUy9rwFd3rOz763JaCBwpL
Ss+hV98vnS9r+82A3fWeygOWFJix7dh6Fr2a+TahEcdLwIEnrLbV6MbL7Xdp
i89zULO7Im4sTcC5rh0/zNCNi115WUfQqw2TvA6zagTYXfVzPqmD5/Lq10ku
6JX0bdsfz3cTsOrnK7UUDQqCla2KdqFXud82wWl3AloV7c+UKVEwFEkOqaBX
zLXmPeqBBBhlBqxjbsbHbVa9jTh6xXs6RPvPFQL4T1ioDsniXlW71/Z3JZ6P
Pd7Nr7MIuDAuW8SGbqRo9Ia1o1c8ai/jI58SQF7TSxRBN642rTQuQ68Utqw7
bfGOAHjw+dMGdGOj4+MNceiV0rHt50U7CHjzziFeGd3YHGso67H4vn+xKZnf
h/Hrx4/k70A3FN2ddBXQK9N1je9L2JkgUbZESQ/daJK+dHKaA3/Oje4c0eJM
CBX7KqWPbpSH2FQAGwu8tn40cFJgQlTZ0FkddGP6uJt4FHoVxPk0eJsxelIc
pacxTMLMIZ0EY/SqSdM9m92JCfsdeP229pOQqZsgMj87BPLvLEu6fJmQv+4X
l9Q3Ely1x4rLZ4YgpLe34EUEE973UjJ+3RRoNzGmSGcWXB//qSx1oAVo1/bl
s33C3okfq9Z2YkHvj86KUewy/caitJtMCjL21PXedsD9wFSPaMIuU1yXy5Jp
wceh8qGD/9CrKAnLc/nYZTtzljx+3EDB59ZJTRdbFjzS9c1MYKOB+NdISr0W
zyPtDK9nuLumez+QZ7fS4OKqPwcrKin42RzUswwd65lKX33cngbtC1vcdrzA
Tg8uLnLE3WUb/8vD6wINPJaNvix7hud+ZvD7+7i7HnF/SPPIXfx73JoIhSIK
TshMaLDQK5DULPOi0yCC7/Lje7kUEJecWKq4u5QJ8cLj0+gbO6/xqrsUqFdS
w6dxd3EnWfiGrqdDBs81vcgsCk6dyNlRil4dUswaSDCng/X7/pyhVDy/3g83
stCrO1N1EvlBdBjL4z9ml0RBaOnc7Q24uyJKAocb/qPD9arvGc+v4XVUtOy5
E3ZiYbmpM+sdHc5+d1ESvYx7hrV7RQx6daq/wVx8hA4Opd7bAsPx/PLmzi9B
r/Yf09u/gY8BGvGT19+HUvCp4urFDvQq2a5vD6xjQGwaj6v0aQqY7iuT5xd/
r5WX+HO/BgNUG3OuBZzE3XVtqFsKO/HHSw/Ff9hlR/sr1r85SkHq7iMHdbAT
M3aFiN3xwF5LcZXmPogdFEJI26NXmaFjWWZBDBg3SIyydsf7q/XCymPolfZQ
TxkrhgEsAy/rZCcKrJbWbj+HXmmV73HL+I8B8Q0/whn7KBCImUqIQa/Ujqtf
NXuG/TiiIM6Hbgx/OSOSjF6pyGWq/36HjlU4iJnupEAi4u6HNPTKJPWkS14H
A+6uDL1w1hA7gvnxSQZ65T52e8RtBL39WGFeoE1B4Z6LVWno1TZh/lEhDvSn
Uyu8TZ2CsQNzv5PQq82nb9k1i2On/NywZgm68SOn0jEGvSrZvlr4qgIBMW9y
pTZtXvz9/LaeUPTKRcFNbqcxATUbRmN3oxv+OlXXjqJXet82xXI6EbDys4b7
kbXY42rfXO3Qq+RsXZUmXwKeVTzNiBTD+yVTyEobvdIOdBBPjECXrtzWzVyJ
bhc0HliLXsXpyGo6pBKwb7PenifLsRM/XEqeE0aHi22uSBUSUJ9CvXmzjALb
wjdfPqJXPJ6X5n+9IcD8Q9HtDwskgDK7ZTF6db5hX8YLkoDSIaE+aoYEt+Q2
IhK9CrdysozpJ8BeyTmjY4KEbVZ1AbboFf++dcIu//D79hNlXSwSXms5yS2+
b0OKsnrvNiEmfElo1+n8iZ8fIzvZy4m301b4NZscE9JeNSu0fSXhUn1lawF6
paWomdChw4QYZf64lk4S7o28en8MvQq1F7Ivs2Gi70vsa1pJiD/yktiIXr08
K8iddJgJ4u0rY5/RSTjJ6fSr+98QLD+XdtfvHBOcQ8O4/D5QMGKnHNS9nwX3
BV/k/7evBQSuWHEvqcdzWVDyj6kbPh5opaVB2GUfmsMDr1fj/dITR+W7sEA8
4Bzbvvst8FeDMlvzmgL+vf/x8KBjZ5K9rqo3twD/9hWR98ux15xO3DzsyILJ
3uIdUr9boImY3iT/lIJbTmuD3uDuSjX6j1NAigZ37+1XLyjEc2o9eV8YHdt2
16qXfRcN2Dp5Cjc9xHNhvnTDYdxdbGqdDQvYZenmZMydHPThef9ECXpVcMDy
7tJbNLjhfb1FNBOvr9T/VvxDryTJjEM8tTTo0RI/H3uTgl1B/4JNcHfNX87n
EBukwcFki6TpROzoCp2NV3B3GTbYnd6yig5bP/HyH4rFn8Pha2veoVfvzQ7m
mujRIVlJZ+xDFPapuLTTEtxdqRJJCd4+dPDzf6erfBH3rahqmyburl5mlGTM
dTrIbUkbSTqLe8ZqPs0XO/HFuU9mzyro8OnpbZ7hQDxP3WrSs9Crq3nic1++
0sFRjHFtlx/ugczXbQ3o1e2az+Jxyxiwa8fGoNtH0GdpZdtR9Crf978T8hIM
WPMyo3bEC39u7w5xi2AnyscHBDYqMmC1wJZQ/f0UqKjc+7P4e63nFZGyvia4
Hy52pcU6ogPtalJ22Inb+8fOCjozwEfuxRrChoKjAkfPnUCv+s62+lacYAC5
9B2XiAXuz9nrvJHoVcJ2vd/elxhw6scqNwczCu6WLDSnoFctnioCgmnYX1df
itwwoEBSWaD6Lnp19VlJMRTizklo0vygRUG0l8i3R+jVqYOvmKeAAWlhB2qW
oBurtwWqlKBXz3doB2yiGKDTcqtEVRG7LCi6qAy9qr8keam7nwFL+jOXe8lj
P64t3leKXuluMJ1P+8eAui2xzXEyFLBLO0s/Qa8+343/YitEgMFQ4u8SSTyP
QvuFH6JXNOn361bKEVAR3nGlTZSCyl3NChnoVbVf0wtCh4CbO7IjpgQp2FAb
6Lvo1Ul+m+ybNgQM+gl+F0I3XplafwhEr7i0JVtcDhMgddH3yVZ0o92BsnBF
r76N/NBdf44AGybrmyG64V50YVAPvVKZdOkbSCSg/2t7hC268VOjPn8tejXQ
JVv7/D4BCxpnrnqiGzJrFSJnRFjwSvxHY3QF7qIT/H+PoxuCDPUzBHql9kd9
wr6FABG94dZT6IYc58Goh+jV5NMCLblvBF7XvpLB6EZhvWF+8IrF65R2c3YK
b49wV8tpdIN20vW7EXr10Fn+H7GcCZLSWQMB6MbwCwM1XvRqa7KGb+E6Jlxu
4wo6hm68rIpKo3Gz4KyF38doDSZs/O/yEY8m3DMcVcuvo1dnWwy0vcyZUDB/
vnFvHQmPL15OtkCvNp8TjTc4wATitWOaXhUJZjfPbeJArx512L2TPo299i2+
7vBLCqoDDg798FzsBTnLVaYtwJE7rzeFPbJ++/otVgfw57lwq3UEu8z+qYNM
1BMK3t7fXv3MnQUVFjp5BHbZrK19AF8BXncFb4qE0LHAvANlL7HL6k5Uy924
j319u43l78oC4X/mo3nYZZonD+5elU2Bt0H2pSb06p+FivV/gthH7rzMGxkU
LK/T9JHG3WX3bHtNmhYN1nVffsufgruabLh1CndXdoC/bro3DRy2FkpfTsA9
mRUsUY1eZcx9LrkdRwPDrXu/T8cs/n3neB8v7i6TJRfECsto8NTHZsWxSOzB
/8jZfbi79I5uda/spkGrUML91jA8B3t6nFOxE3edqD5DcdIhYFV/jn4I7rff
VbMUevUvY6nTuBIdFth3czw4RcHSXw++Lf5+/lf7g1ERFzp8VUlnLDuB14v3
++V7cHdVRNlsN4ikw6nCOo5DPhREvjgSfAG9yvPIkjj5CF3ShjtvPPH7jles
fYJe2T/jS7pH0eG/U+EPRNxw15FzbJ3o1TULydiuf3TIK/i34pgDBUGdp2U5
cHc17V49lyDMgD1cmt8r9lLQb3P4wmbsxBoT6oiyPAPeh2+TWmZOQZGZyAoL
7MSLw98jWnUZcKPrW7WVKe72bFrbUfTqQthhwwv7GLAZvD/c0Mc+FethRqJX
7FEnc+R8GCD5sEKP2kGBk3XK0lvoleECXzp1jgE/BifFhNQo8H1r6PUIvSra
v2td9HUGPKO2uloqUFD3U2f0JXrlfV5SffsDBtheDeaIkqOgVLy76C169eZ5
1IeBCgaMSAyLPl9Pgc3T8NQP6NWfwROf77Yw4OP18uTeNRQ0c0bm09CrsYjq
o27fGKDePXJ6JbrRHmr2owW92uB7wFPsDwPqR95Wa6EbS4MUdzWhV9nbZaF1
OQHXn3gGe/Di+XjyAb0avVLh77mQto6AU/PjN8I5KDBfWBlWhl49qXJNddEg
gP6uePXteRLG23+YP0Cv7Or2z0uZE7BhlMbzYpqEwLYE7cV9tcfqzrM+DwKi
TsUfbBknoWY6Ys9iDxrv7Mh7GoSfby4v92WIhOIzGmf2o1em+yvaw64S0BPb
Zz/SR4LSm42gi15Fcn81sLhNQJLdCtbfLyTknKfLrEavPNInmGtKCEj7MjzC
hm4I3SnNGRPDfaJ8NW64noDV0a3uXOjG1SOO6vXolfFnJe+6TgJCnohpcqMb
2gcMPqehV48yT+/NHCXg6ih/2DJ0g/CdyT6IXjlat1sELWNCz/wqhYVa7Ca6
UOA29IrxrX2vtQQTOMsTzH9XkvBcea3TGB8LDu4ctNuqxIQK8W7q53PcXTmP
LRf/34qp4PM2vKZMYHM/0dz2lISJrP37/NGrhctjeoPOTDjcm69SW0iC5dr6
g/Lo1Z1Hj1fR/JiwL33I2SmPggkO9gMDh1hw2fz0msvbW2BjtYVFL/bItzcZ
jnYHWZDDqJU6jF3WnS+S7/8fBTu2uz6s8MLzQjv3pMVVdElAwH8qjYKDrzz3
SKBjKx/5z2s+awEj3bmc0GQK7i1pNDzrwYJBM8+aLR0tcG3lI+2ZOApCtjyJ
ZaJXHNoFhbLsNMjm+KUffIUCwWY1mc24u6oafR/LbKPBC7mrRawIPKfGz3OH
4e5qsX5ZKedAAwUFjyjv8xQc2Fqk/QG94rVK+aB6EZ3xNa0jgyn4eHXouSju
ruBTg80meTS48k3shFEABWGFR8574O5KvnO/1JWx+DrZlxceHacgodb8yj3b
xec1JQSGzNDgeAff9MrDFPz337vWb+hV5d8Tc7dk6FD5/m/H6QPo5APeo9K4
u0QdJ0xqLeig3nFyE+VCwfkBax1n3F3sKm91Rk/TAZKdO5TsKdBTfG+VgF7N
CQe1yWbToVbn0VSMNQW1X57ffoNe3f0bxeneQIcd/e7nu3ZTsErBdvMQelXo
4fsma5QOFQG+RxVMKDCZ7xwWwU68sn7X9Ah2WWgYs+qcHgXksvQhHezEF9J3
G26uZ8De6NTzbzUp0KxtXOeBXv1457NTdzsD7rS9usurSoHa5ZexYeiV9JVS
vz5zBthnWSpbbcP9f65sYzp6VaiYtT3lAAMaPjrLxW/CHfuYa+IxeiU9ujnT
+DQDkgLHrjSso3A3c4xWo1eVBw8lTy6+H6zmtr0LEthNUf8kGOhVW/IukYLb
DDDplIlQE6FAvt08sBO9OjjdKOVZgj24ML760AoK/nWbTX5Dr3KS23JXNzBg
VOONZDIPBVIHLHL60KuuDsfc1k4GrF1WePUVOwWKyq9P9aFX3p3yojdHGaA4
+Nn9yz8SfqhMH/uGXl3ZumHEfhkBU14J/7GhG07OR690oFevZsW3iEsQcOPb
d9P16MbJZ6ff0dCr3jUM6FYkYKZf3EkX3dD0jd0I6FUt2/KChyYEZPw5TNqh
G/odIg8foVeHWqN6/J0JIDK5Xx1BN3rD441volfUSZazrh8Bl04YLz/bQUK5
4MG5s+hV55EJweWRBFwWc2mIpkioPSdEuKBXvVLaC51pBIi6pQ0n0Ej4PCgK
29GrP+AhWfyIAH2B3ZdSGkmY+TjydgV69cnyj2d0NQE7ZKvDU9ENnwXprz9W
s8Dh4Y13bq0EvCq0H0hBN8SCFYSeo1fJ1yuMNQYIsP54oCYR3Rh8cNcxCr1K
q/7FEFwgIGGJ4bIr6MZXF57HlujVlx85R4eFmbA/1+l5KLrh9XZSWAi92lxg
xUaTZ8K60/ytxx6QcCjiTywpwAKzOo+0Yj0mtJs0ezlmk/AoK58/Gb0SmNVc
m2LLhD3r2d0NMkgYzbp32xy9SlLTvH72CBPCeeKajFKxZ//mNrCOsoB7R7fo
iHwLtBVuUG25TsH2k6tDnY7g/VVz7DqJXXZ6rHiZwzUKTqrHR1QdZsFXvTHn
N9hle7nHTdqj8fydFe2SRscWxGp9irHLcgpLh1zCKXjdTsZe9MbHZ4lEUS52
mZ58zUJbKO6KvZ9j2tEr0YDNkg+wy8aPDYTZnMYus3OmlHF33X/JV5iHXdbw
m+1Q/Ul00s7TLxp3lzEPufsZdpnFxNeyHcfwdhqu2UehV5/Gzg1WB9CApuTt
n3eQAvfE4gvrcHd5yU9Et2GXPZDxThHyoOCa0c6xo7i7tBMkuMexy9zG6tad
c8aPj/IWPkavijWqjwgP0eBnkJ9Yjy0Fhs1bc4fRq9vB99O0RejwfsfuEH0r
Cjbmtn/firvr+q+gmCP6dDCKNTLM2kXBm6ldXoud2BtBbMs8QgdnP/PASSPc
OT+KJLPQq51XLUOZSXTgfOrEb66LO2e30aoW9Mq17PABwVfoz3evlf9tpyDp
heHOWfSqdFsiYfedDgMHD18cUKYgK+bX043YiRc+CHtZczJA2MPbXmMrBWtb
w2wtsRO3rqxN/o1dVsHYnxK2kYKqa/qb/Re92jMRlKOEPZW8X6damoLAI8Fq
ieiVplzNEktT7DtbP8slEovnka9/AXp1plRPZRa7jHY3u153FTrW49tZjV4Z
2QfNF/nh3hhnLwwWoIDh0BBMoVfZzENeXpEMkMkumyrkRocr6bo/0CthL347
8XTcVz8/FHWx4X5z6lAcRa+U7nk2E48YYLFwtJkX3fjtY2C++HdDxWLz+oRq
BrTzFDto/CHh1jbXhDn0ql7qqZZlK94e6Xe794+RQB+7OjWHXonxnZTmH2BA
kF3bw/BBEgwEFKJn0Ku8ta4BjHkGCJSt9MvpJWHrcKH6OHqVFG+8MU2YgPh9
hdmvP5PQI36c86fi4vNDhrd7yBMgaPhRm2ongUez9c9H9CrUXzJbXo+Aa1mk
0S+SBOnVrlzv0Kvbpy/b/d5HwM64ntK/LSS8qTqm9gS9Subu2PvWh4ADZjrJ
3OjGvNPZcynoVcfTurjU8wSYCal0CKEbzQ7/Ok6jVwKlPxaOJuFesll+fTW6
sdMnyM4WvWJKfnqg/xDdOLP6qSS6sTTC+dtW9OrfB5Ug0VcEpIsX60miG4d+
KlxZil51nrl4cJRGQMGA7A5xdKNf/aweuQb3c5nJyebvBDjWkTmC6IafG3Au
vr9fxLIl8YXTBDTnSAUvQzdOPUn8chy92tC1pfwaPxM6c49WTKWj2/2nm5TR
q4SH6t9OyDBBYpvE8R/JJDxU5qgeF2KBL/PK8n2a+PHSnGu0OBIMZZi1TwXx
dn6O2qxpyYQT48ckyi+TcIMIYRxHr+S9YtSlvZgAxZ5iG6MoeG/WJzNyAu+v
nkJ92zUtQJpGTj6+QEG9oFaiiy8L/GIIOR3ssofEWj21sxQ8NvWyrj6GX+ea
i88WvxZgjs2MlgVScGTktJcsOpafk8iSTmuBZ8wvK9T8KKAux7+L9MHr8UTR
0zXQAnc179x6fAS7bKD2bA96JRbXc29tfwv4XORJ3OBNAUeQRuh23F0CSYYv
Nq6kgc/9saH0/RSUjbK/u4a7q16054uaNg0WzFSeczlRMF5m49qJXqk1lgjt
PkiD2qIHv4L2LT4fz1BTHnfXnkOFBt7xNCho2hrTZUFBC9usyyncXfof7rhG
ltPAXr8w0WgnBeHDBdXP0au1XN6O+T000PTkWnLfkILOsdBj0+iVl0PhRoqL
DlW6ip1LdCjYa5ppux13F4/KptfLVOhw5jb/OjcNChTe6Z4LwE4k9wfy6LnS
QYkvg/ZMCf1hS+vJRa+SWGvYz0XRgeNjXR/HFgqi9LovtKNX4/Z3MiuL6BC6
Ku6o/Qb8+QRbOnLj7jp0wq+Wo40OIXmDdnekKJg9us5HDTtRO+LrCdsFOnib
/MzvF6cg5U7GI1fsxOTHG+ttVzHgn3/UEQVhCt4F/tlwEb36JB/Ms4BdFprQ
dP0kPwWpyyMZt9ErBbmQmcd66MCn+vVFXBTUBEYUvUSv3g3rXD9gi574xa/t
W0qB8Q29FwR6NSPZXCd8hAF1lkpRknMkNOhyjfSiV7eL5JPen2dAz4FG271T
JGxRV7SdQq8Oz5mzopIY8P3c6fiLoyR0K3F+ZjNgQUjrBsrgIe4rL3vlwgG8
Lr73pizXw/s98I7e/EsGNH6I12f+IOEXh5y/oA4LzKPvyACNAVuO7Hwx1YP7
326T/0otPL/0loRFfsft0vU4UwzdULhtckNAkwXKdinGu6cZoElN9KujGw/q
v7ZxaeBO4N3kL8hPwJUpy3vW6IYuw0fnH3oVqX3hb8d6AkrHx+oPNZAg0a3z
Zhi92u/k2J23nQBGhLRTSA0J/lot7l3o1cuQI4IhFgTcPSxqd+U1OuZ5Tbwe
vTJ1PxC/25MAiTNrXieXk/CJo2/oEXqlF9a7RzKYACoz5PqtYtwzQo7tCeiV
J3um0Xgs7iIyhHG7APvutV2XL3o1/F3kxPtsAty0/S5m3ydhb4jbpBl69b59
oOZBKQGuXI9vZd0mgSnAkpZEr14F3de51EjA85QkmVR040NOnPuwNPbUmjri
QDcBIu7Bq+PQje77VY8Wn9/eL10fZjiOt4e76uIFdKNlio8nBr3a82q9hiwX
E3SOtNieQDeaujhPW6FXPhKmE1ySTCg7I5jmFE7CM27dwRXoVaPfzeJhZSZ0
+0zuNgglweSeoR9t8XkL/YHeH82YUJ416CsbhDvTsmj6Knr1hrGDo9aVCdv4
/E2XnqJAZtDRbziABc5521Ke8ONuCfO5GeNLwdSl+Bsu/vg4WWnan4Vd9uWB
lw2vDwXpEn7La/xYkJksm34du4yRIn821pMCLhn+tg3oWI/KqpRY7LLzg1eW
L3PDTj8RNRp9nAWx3db0WOwy714L3gsOFBTq/XL+il6JHpvTT8IuIx3NT4/t
peCOhSu/Nu6uyEyN1v+wy7TKnfd4m+N11zi5/DrurmkV9svF2GX2Evti6aYU
RBxrt/2CXgWPuxs1YpfF716prmVAAd+xrV8UcHf9KFT814ddtr743J4cLQpE
bwiWhODuOmhg/Wh5Pg1cTwY2LVWnQM70WX0VelVScll/O0GDD25fSz0VKfA/
t0NyCe6uKaXEAp+/NDjIWcZdKY97gEk+1cfd9XjVys//ydIh51VHg7AsBaHJ
pZGh2Imsv3nEJ0s6PLiyZ2zx7yY2j3mTnqJXFXVdQRJn6OCgPx1dIUbBdYbA
x+/oFXF3c4VXDh3cw79FLhPCPvKedhDG3RW+YSbpSSMd9Mu5Bq35KJiMY1tu
gJ3YbJw7umScDk5rfatuclLw1tB30ge9Oqv25lARPwMY74X/ti2hYLdJkGAc
ejVU2cnpJsOAu4V8d0VmSTixzcN98XmnSX9qnPg0GXAq5lCJzW/cFacC2xvQ
q9Sj4TbVFgyI4VdUvDpCgv2Jmcgv6NXrPomBM54MyKaFr6r8RUKKh4Hzb/Qq
+07KWuVg3EVmpw8PfSfB83yKE6cZC+Rkv34fjMU+6ty8fjW6YTS0K1zYhAUi
nhMahdkMGPtZu8v4EwkDH5+1SBqx4EFZCZ9vKQOIl4fbjzBJeHF0s5EMenVg
dMFTsZEB42m6bbHNJKwleT7JolcLbmVbJ7sYkFwTrJ9fT4Li/mdJ69GryOq7
hyvH8HaeNxGqqyZh/MClY2vQK8OTN7hiOAk4ydu1r+MVCdNOPZ4r0Ssz0z28
9mtwn7wK/ccqI6Hgq1IwO3r1+MUlH1llAka/uorMPyGh/u2XB2PolXLnyKrf
pgSY9NXc4kU36mY8hjvRq1ofQ4EmF3RJ7/c1YXTD6Okam1r0ygvELXJOEuAb
ZPBLHN044BDX+AC9mpwXfRsSRcCprSNlEuiGfOZGxyj0ymaOOGWbQYD9Rqdh
cXSDFXr4jzt6ddCu3VLpMQFfDWipwujGHcOmwsXXQQf4lVsJ1BJwLKz4ES+6
sS2ZeZILvTob+/PESBsBS9hclecv4u7y5TRuW8+Cqre/7jEHCahdp7Jh+CwJ
juosmbvo1WFZpf4XS5iwzOG/mI5AEuIrhASPoleat2Q1ckSYkGzO5VZ3ggTf
7ZzcWxdfjyO0LfLqFiYUf/6ane+D97u3K8+AOAt2XchtCDJggr38HbtrniTk
+D0UeijKggni1z9PeyZUllbbtmGPFHEk3h88zYI4vZerOJa0QLVTl7CrCwU3
n+VFOgWxICVFiPiNXfb+6xWjDjsKfoQZl8EpvI6WZw2ysMuy22I7Ha0peKZ6
avuGgMXn899yGsIuS9xb8pW+G69rrj1cl0/i7XluzD2GXdY+z7AzM8FeuP11
wzf0ilP1zegsdtlftVcqL/QoSOZzSNDB3fUzcD0H/1QLsD6bnd+4gwKNX6Cf
jLtL1ztQY4M0DUJv7VVOUqVgZLeR5nf0SvxrbojRbhqE3H1u82cbBQHv/55W
wd3lTzyoOnSKBhw/3btc5SjsU8Gp87i79KWN/yZk0qBk+Tby1XoKTkQUVNSi
VyLvTddV1WH3HVmuISZJQcen4VfLcHfVDHvLjGOXOQoMLA0QpYAnn2/WFHeX
FWE8sU2UDj7ES613ghRcyFQJiUCv1H6eu+xnQAeRnQFdostxv/FdV6hAr158
Tf5QehS9auQcOLQMP77SRXIIvXpUMf9iIZkO4RHnvIsXSEgLrTeSxN1lXi6v
t+81HQ4eajabmiGB65Pgf7uxE/dfOGKV/4MOpvpLb2pNktB+7fTmU+iVw/VL
fmxcDLAuXm8VOkxCbLVyfyp6tZNf4kTpGuwaNe1T5f0k1FyMaXuOXvVWJK85
oswALzm3JcPfcLfnV42T6NVx59+n15oxwLkx469MNz5+ONfosBafJ/9vz6k2
FwaI6i73tP9IgrX5wGM27EQ+gQSeGycZkHODphxJkPCfWOieVYu/hzcr224T
xYAr79n8ij6QMMcjziezC6+jmsdjghn4+dSHVeQ7Eja8lpjcil5ZsXuqUUUM
aEnfJz8FJKQ2fVxQQa8C/hZM3qphwItJyBNBNwQ+5yuoo1fuPAcVvdtw1zXt
TFFBN8ReDJxXNVh8/qpb+7ZBBhj8Xj24B93w2Pivfxt6teew6/DMAgPm3E4V
e+STsE/SJEgWvfKZWe/TtIqAgV9Xv/jfI+FsqcxqUfRK19hXK2szAVvT71y8
8B8JkwrL2jnQq2M2/Z7++sTi+2zHxqThTlvi9GwEe1CDMmk1syMgMeIHW2IS
CcPtMXfaVBffD2T9damjBHRxPfyVdI2EiIe8D1+iV0PmkjEzYdhNFon6SdEk
2KY6VGWgV/vZ35e3JRPwoHRyaTy6Qdv07WcQevWw+YXw81wCphuU1aPRjQOb
FWQt0KvLQ7630l8TkK+e03oW3eh9+9xPCr2aOHvY4DyDgA/Nd/qOoRu/w9nq
WRvxfPGUnPfsJaAtIfOIE7phvTN9y0tZFgQFLaXt/ktAzb3fzkbohpD/wq0I
9KrQ92Ke6gommByRfi3nSsL6ukYh00Wvpn5HSm1gQt/x2ERee3QpKjqFHb0i
K+uc+bSYIHe6gPxlhbvUv0ECJFhg76e7fs6KCbEOx0wfWFKwqlG6tu8snoPp
T+psx5tB9O+f0xt3UZBTsNbNLoQFfxJSv+3GLru1/p7QfSMKlC2CzCqD8Xqf
Fzpkhl22p0l17VpdCj5+VAlfj45V3zmusxu77HD02Zsp2ymw+36CMyqQBV0z
dLd92GWREWZnOVUoeBCg3f4lYPF9U30qPLHLOmP9G4O3UhAzXfJbG3eXJpeR
6RnssnsrGNFfN+LtDBhzScbdFc5xcDwZu0xP3vTxnnWL7/skzPEDvcpwg/JS
7LLU1CKjJxIUXEzfMa6KuytqmdalTuwy7SaW0QoRCmQ7omQu4u5S/HtvF08C
DZ70jzw+sQK7yUAi5R16xa9dPav7nAbRRPbleh4K8uJkjXlwd93/aJJ05jMN
EtYONEpy4J6Rf6+wB3fXjaXEn3JuOsxtehfiP0/CRnkd+8voFYNvdsMsdlk4
n9yNN9MkDFnnllahVyMXzXh3utHBtpxXnHeChEYxffNx9Oqn+IbMtGg62LWe
5LFl4Tn1WlNUFjtx/Ovf+qHHdGAfc/BJ+0nClR0fRGywE5+oSkXt/kiHRK96
xY9fSbjqqLYrFL0y9jz2xX4JA944v/de1UXCsqeP87PRq3vUJi1uEQb8/uHP
Zt2G192Lczuq0atLBh2mbxb/n47fjfzRDBLOVHVPdqNXMoWJc2f0GXBw/2D0
8/ckvJqW7PqDXq0/tMtF1Y4BR9pGj/S+xfM67tIQ/17sYp4l9qPYZTW8f54L
ohvrYp02rLPCXXqtqPdpGANmk6QDd7wk4csC65IierVdSYvrdDIDdk1ev7W/
lIT52TR2LfTqwN1rz7RyGWD24pTChcck/L2el2eAXnmMXehe+poBlU7jCpl5
JFR2hJwwRq9yb/dHNdMZoGtrklV6F68XgYM2RovPc7iVcfvWDwZQGzODm7JI
2B7csE8XvdrpYC97bIYBj5yUqzpTSTA/z+mvhl5drevg1xEgIP6MSeDAdeyO
Z9G5m9CrVO/vDitkCbgqJZL6O5YE/o8FUyLo1Yyx1GSvJgHH5wY2/osiAbq+
uC9FrxxXqH99Y0nADkJg41J0w3I4vaN/++L7A9SLZHoRUBRMu7EU3bAOMfRt
Rq9qdp28FnKGgMzu8/7zp0jg27JXoAi9UrAFTac4AmzW+L3+44uPh2W6tTHo
1dlUU1GtOwRMec+dYR3GXeoeefkAejWkESm1tpwAJv/Ve58PkKDZfcdRDb0K
kPm9m/09AVm3A/VpLiTsvrFanR29klwrnDjYQ8ATkLF4aUfC6MgpSbocCz7W
mfe1ThCgb8PedAfdiG5TFUhHr6RusZvXcjPhqntURfQuPI9u9XO5oVejfNnP
nq5lwsAWUYnDRvj44ZTlXoNeEZeDRO6qMmFWTW3YSIcE2ePB/B+lWDB2rM0v
ZRcTftZcXuOrTYFrfM67z2H4deZP3cn80Qy/i9pe/sIeWX8zQtzqPHZu67a1
qdhlm+SId4eUKGiKSnr9PJQFDW97l6RhlzXkGxl0babAqbenSBIdc/jWrX8b
uyzdaHqjzQYKlhddGLh4hgXlHDvfF2KXSd9uDK2WomBO+1JgN3rl9V4/7Q12
2V/Oa9oKqyl46LvEZAfuLo17n1I/YZdt8Rc7miaMHXRzlet13F1LKeHKaewy
h5N72eb4Kdh7vb38G3qlFftlVkqBBjzmq3g8uPHfVe1nr4q7i61NareFIw0m
pi3CKtnw8yXH1S7i7nKozU65EE4DMbkvbmL/SNBSumZbj17dsFtHlGOXzWi9
yTv5Bx//Mvuf8OLu4k+zm5jALmu0/3igdgx3wrskMwvcXVJ5n4Y0Zxdf97ou
WmgIz6NkO9Gr6JUuGDy9tIEOU7PJqw70keDylClVg14d1+VRJqzoIJgvvzL/
CwkcnAbuU+jV56KHHptC6JB3/0coq4MEK/Vmuhx2Ym97sOKlO3QoYX9vrbT4
/K57T087YCdyk++TvzbRQaH0y3U/OgkLURvNw9GrgJnec7sm6CAboq6X30TC
qR4f64fo1ZvLc34uAgzIGKccP9eR8C6pNLwBvbIVTyFXyjLgTGFrl9AbEmJc
rLp60atmNsOfzdhlp3ms6cYVJFzuPuu9BDvRguK4d82SAQMHXRT9S0hwenJB
UMyOBfPenXPmXgx4Oiv6N70Iz1mb3B+b97EgnVk+yn+GAf3shapVudgjpobd
O9Cr1syLZ8hrDIAHWp967pCQzvXftAl6tTlRPCYrhwFKC6MDc5m4B9bza1ig
VzFfPNb4lDHglfLCcbHUxT0zkGSNXu1V3LhNrYkBy53SnRXRjfLX8bzW6JVd
lGYJWw8D8lJGS43QjeHcfXf2LL5+x9s1lxpnQOyKnRf2LbrxPuP/XsF786UF
XAQ8nm8rc79AQqDqu9Ua6NUWkzevwyXxOr3f5+oTQkKwmN7fDehVc7c3zVmF
AC27Sn9fdKPl57FRQfSqwOizivpOAm6E3J84gW4kWFb8nV58nU4Js2elGwGc
Nwf7jqMbTsoZYt07sC9EW1vG/NGZ3f17DqMb796FmVWhV7/YQv6Q0QT8sxuT
3I9ufEnoirylvvi4MrKvuEVA3S1vz73oRrKHCu0UenXY5kVX9hMCaDL/rTJA
N+aPTm/ciV5ZRtjGxtTh95Vh096KbrAZllwVRa/C+67YBn4iwPzPHEMY3bjW
823y21YWMEerlQ+wsB9VZ9qntUkYfLzy2KPNLNgwdFjSmo0JB9KPOHSo4+Mz
vum7P3rlyE/xG4gxwVq6yqRCEb8vM+OgMnq185z3P5VtTCj7F/jwhjwJ1ftX
/hySwf1s6/V9kxETYsZ0OrbIYzfRcwrbItBh8YBHnW3NYNuX/SNXBvuixuuF
aTgL1G8bXOpYaAbVPm136bUU3NqzRbj4AgtoEsG1n7HL5H92m9wUw51jy1Up
go5Z8ez1HsQuEz7rkrH4e4xxBZ6nZ8/hOZs6a/cPu4z3XaRrEB8Ft3OMWR/R
q/0FGddEHrRAYZbqtW5OCgK/Np5Sw921aVJtRq2lBQ74m8mZLqVg66NSnTjc
XYIT7284Y5cVumep5M2S8GjH2j2f0atvM+bmUdhlPqriBZxTJDywkclQwt01
rZMsVIZdNu17P8F7FB22+LYpDHfX6dbjPQPYZZcM5D+/GsDzUTx84i169Zq6
eUcuiwYSt1Nvr+glIWrn2jke3F0CppUWx9/SYFitp9HzMwk/eX7oW+DuuqF2
kVnCooHbmWnPJ+14Phr/e3kVvTped0RuqRgdhLJ7Dk+TJPBeSvWtRa9EFKd0
HQzpsPlp4kd9GvbIyq590+iVPJm2rPgYHeQu8T6/1EhC7gKb7xbsxM3GeUEC
KXTgfem0tKYW+2uNQbkzdmKuWXBoUCUdzD+Gv5yrJGFqaaNiFHqVO6zP09NL
hw/bk3rUX+BO2PiptQC9krS5xZuHXda6MjPg2DMSnhJF+c3oVX7CiwYvSQbM
Xy7xz3yE15HKlYeD6NW5d0s1pFUYwJ0x3tnwEM9Nl7z3nNiJeo0hFp+xy+o0
Q8rHckhQ2uMoKuXEgrX5KznuuWLfmXjNiaEbo1OdV1TQq40ATkf8GfAgofWp
9k3899pGSxihVz3lxw2Uohkw2DXHdEnEnbA3m26JXv2InSidwS57MMF+MPgq
CUv7zj+wR6+qb6o9qX/MgPzkNV4JkdgX0oHpi89zaLkxtylt8f1gz55tuRuG
19ea9lznxdchFoqLHf2IHz9pl19yhoQtK/kI+8V9FWgeojvEACGTX2MQQEK4
x7FVVuhV8V9LQ+GlBOxhnitsOk7CvxhbfyP0KoxJHh8SIaCWy4pJP4TOG237
stiDDoJxIw1bCHj0Lf8Y0wOvrzMeh6XQq6cuYg0PDQiQCe0MIJxJ6LS0/8eJ
Xr0dEBm4bE/AnVmN/mZb3FcKYbmDuizwzpbcd/QYAYcr+BlvLUlwbt51oBm9
4pp6OWl5kYBPUpXyL3fi7d+6bVMBesUjE9yiloLdVJs9XmBIwtr7d2cuoVef
eGikZD4BfJ5iiunoxodfsp8c0asAe70l3FXYj91xnRHoRp+YarUcevU1QN3i
N4Ef3+sz64NuPCm2fjqphL2Wvfbxjz4CLs6tStyDbrjeX8itUsDz5Y+bVNss
AYqevDflZRb/jka7F4levQ+xSG8SZMK/bVX8HJIkSFTtumeCXt1aZiQIG5kQ
apM/2ymC16Py3P0l6JXLhWuXnmszIZrvdeR37BF/vRK/D9H49VmSvSJNzdCw
N+LPfkEKhIr2qWtH4T4J012xGrvs4LUVnUxeCrgG6LsfXmJBssyWAhnssgLV
HQpmyyjYYKBVwIeOfa9an6uKXabh0sIqXfw9hvt/dgEXWVDVaj2z2GWWjx9K
Sv8lIfYo704GenX/fnPqYewy+UtZL69MklDzN+3iNtxdvmtyT17FLjOmxb8d
GCZBTcF5Nhp3V81E65ln2GVpWm56Fr9IKLjt86odvWp/svPuF+yyfrH/dXTn
4VD9bRzHUaFUWihJlpAlpJBQochW2Sl7FFGWSKFsKWtKtuwRIYpQ1rhDRRlm
zjmSpJ8lSTJRskV6bs+/XS4xzry+n/eMGWOihZ8pcPb9VCONu+tcLtnPq9YB
Py9I+rH+R0GlZ8/MZdxdPSu0JI1Pd0Am518Vy268ffoDvRvRq9qfZm7x2GW7
Tlq5PiRxf9aNSnDg7jLzKU39gF3mnqPIPktD91KPbNLD3VV9h1m4o78Dmj+H
rTvcgr3TWKMWgV71nEiN9l+JPfX9cGR0I57L0p7JjehV/2eZ3eQeOqwxuuje
UYdfT1Si2Cx61euy4ba8DR0ggO/F2krcG8ZWQ9LYiY8O5iUn3qDD5ofKIQZP
0JPnk9RJ7ESuXzKqiyV0yPnZ+/h6EQXlVPLP6+gVm87Xc+7ddHips1mvNo+C
rT5X1R6hV7Vi/9b+xC4rDp4zHsuioNSkv5SOXv0rPiJSgl2mZJLWyp9KQTUX
67Fx9IqLj/HFXRq9cuB5rJ1AwWsh4fVc2Inyganm8uoMOK8S/u98LAVK/0L/
bLdmwr2dqa5T2GWCVhtexEVQ0MvtwaGMXn18Vs9ff5YBAkp9P56E4s6pkNur
g14dmmGeigjEjlPcfLP9Cp6zx9ffMEWvyvlX7jOLZ0Bc/cjdYV+8fgydf1mj
V9Y5w0miBQw4qxS+YcGTAlmF0KsO6FWhq8XFKeyykmU7FtagGwWx1SKn0Cvd
SmHaGwbusWQ2cwF04we3c78temWpxJ6c/YUB35yttkmgGwG3histll6/w/Hi
rf8fBsT/8TSXQzcIjrRcA/RKo/Wfozk3Abu/Rf3djW5sK/6ctx+9ggRPSwUx
Anj6fvHuQTce/ydVI4VeSa0rz96oQsCb7LksOXQj6EjXfxvQq5yLjsrTxwhI
XfszRQLdqHtrzjOrgefvHR6ej44EfJGQX74N3TDI4jux9LrCwvdmu5ouExC2
dsPAWnRDSTu+sBK9Wu9YGFp8k4Ctq6Z3/ZXFf09XWR6HXtUt3Fx2N4cAjxj1
n18lKNjeE+l6Br0CWf/H1ysJSNxlIU4XocA1+2/XXvSq+UDv5YttBKg2P6CV
b6XAb4bPYDl6laYhaO3cjx2nnfU1Ht2Qt7J/2b6bCVsFsw2tpnAfjlVc8uSm
QKfuhGYCesWRXnfMaBUJkjvsA3RX4vUTE/fCDL0ScGw+pitEwqMMgcltyyhY
35iksQG92rtmme4hRRL0LqhtTlqG+6TChashEv2fnDymV0eDxPaK31yLFDSx
9cfIRuC57J/aYoRdZhoUqRk8i+fXIPfJ1BtM2O3h+8wOu+zF1ei/P35hh86z
XmBFxxhbGlf5YJf12N6StGZScM62mThzDX8ujg9qY7HLyizONzV/RT9vOvm/
Rq88O1WrS7DLnmuwtEkO4tcf9vuMKO4u0cdR0++wy4SzpA5F91LgXx+ddBV3
1+3+qLPLPmKvZbZJjHShzyoH2En06qqoKKvy8g6IE26/coigQCRMvFIUd9fW
3zIVXthlSXV8B1PbKDCtsc+9gLtLJdfjwhPsMpuGDI+xV3guJKyi1aFXNbb3
5Kaxy/4oGazZ/wLvR246cmy4u/j3On/SfNgB3j+38EfWUjC+X7VVC3dXoJyV
VwLZAT032JIYTynYX7kyJQy9ajvE1jOKXeZswhbEW0rB57196Q3o1Yz3u9W6
4nSIus7/zuIhBU8/DBNT6FVTu+p80XE6/NpqlJaYSwEjwHCfFHbitStRdzf6
0eHhj+L2jkwKHBr0209gJ5q94ewMzaHD+CNVzxUpFEhsXnP7Onrlpjhxf+ot
HfS+rA7eF0/B7vb2K4/Qqwe+LtMev+ngzqn81+UmBYHLW+4wTi+93v9w/zR2
mbg78S0hnILMZiX6BHr152vRXDV2mZLZrNbzEArM/5zcswY7MXXW+UXgPgYo
jrWtHQigQC/yUo24PROYnOdltY8xwMbcS4cN3Ug8TDiqolesw/kq3I4MsHqw
ZlwI3fD4Vy5jgF4JZy98+ohdxvWdvkLVlYLWeBfeE+jVtTv6G4tjGKC252uM
kRMFzP8ObD2FXvGecSavZjPAPCIi1MmWgi1dEfud0SvXbYI8xs8YsHZ+ZNjb
koIN19Iuu6BXtVv3ERJvGbAmX+d5kDEFtFUdb0+jV4ISPmysfQy4+ugza4QB
BaPPAxXtlh6/8gnP7p1kQLYma3WMNgUu6zgrTNEr/yKRvFpOAhyLR/67qU4B
b2mHljZ6tX5ibEX6NgLatYcvRatQoHpl78ge9GonM7IhcA8BEeH6IdcVKNic
XJAugF7Nvrv12lGHADUWt/kAdMPFOdaWDb0S8I7bpG+Du8U5c8Qd3WC5ZyEz
dAj7ToyvQOECAYO3NHVt0Q1VbV/2JvRq9Hehl1A4AS/9qvj10I3AKrvRdPTq
ZFLDuTXpBOw4etphN7rRXBHTdQG9OufeHve3lABx+7Itm9CNlXZ+bw6jV545
h7rHXxLwbN9qnRlOPPeP5DWuR6/Mtl5XHfpAwNeE4ZFONtxjF+LrPyoxITJh
orTnBwHjjpX/ShZIiLN6U5ejwIRPqX3y1DISzMmpmBvTJPxeJGud0KukrJxn
7XwkzBmI3joxQcLhgf01IuhV6nzw3reyJITULaaq/6Tgkb5RSMlNJuzZ6Dfs
+5gGoTeu/FfxnQKbovRawRgmpHN3FoVil7l7j8SLDeO5MHJZIyYKO5GD/jUB
u2wVK1/VnaXfG+f6wf0bvXr65F7cI+wy02P9+vM9FFBhKyVOhuNuNz2f0oZd
1syz9fipd3h9KnaH1aJXvp36vyawy6pqH7xoplPQ4+8mxoe7q6xe444Adtm9
o6fub39LAecuit0bdxe79uGzx7HLjofvmQx8SUH6Mwmp1uClv4Oj7BaOXabR
xVrxroGCT/PBUfy4u46k/Yx6iV1Wf6puQKqGgtCwaXFX3F3uYXtrOfU6QHCl
YXBABQWnzhYuVKBXYFrLNPHGzjr3JKblMQXCLs+45tErAUmRzbnYZeuYXezr
C/H7+qxufBB31xfWf5Jz2GXDlfUTFvcpeDlxvi0QvdpBvOc1/4FdBk56qRno
ttlpvxr0qi1IiFGJXbac1rauOxmv5wQji5/olc+Mir6gJh1ELi0c2XiHgo5x
Oydxr6X3dblyKcaNDnlyLGP6MbhD/CDTHDsx0lBCZxG7bPehL/+CblAgyPVg
2TX0akegd8mlejqs+1R/rTSYAjkr7YQi9IpXKjTr9zAdBLmzL/b6UyAz3a1P
R6+GFiqW7+dkQBX9wbsVFyl4Z5IuOYFe8Y0nebFswz3Aynyw0wN3VMdb6TXY
iSxrBmJasMvuXbr75dhZCuiVhYY7nJggKxVpeOcIA6jJt4nnHSk4aOqfpIZe
GRy79NTWmgGzimUVETYUDH0N+3MUvXry4laFjBfumYnLh+5ZYJ82bAi0Qq+W
cz/WXsQua+sx0qwwwvNL2mfrafRqDfcDJzIV/73owpNmfQq6E6YoV/Qq69sh
9oclDKgU4IljaKHb/sy8c+hVmrDBjmvNDJCY9u3/cJACqStlN13RK7HkgOe2
3QzIWPkhp28fdq5NepQTesVMCG9UYzJguWpY58AeCm5yc6ad/P/jVwJyAmwE
GAY1+PXLUHCk2vK5AXp1LPTzn8VNBHwe6r71cQeeR0+ZP1TQK6dj/sJDOwnY
fFdsMyVMwbdceXkx9ErazfdumwYB+b0z61v40WG36KBV6NWnFJcTz8wJWCH0
OLiKh4JName7x45gR8t3W+e4EUAfu++QtxZ3S4bq/jYt7Kwdumm3gwng+qv2
LBbdcPb0LXyAXilu3r06JJEAvz19gT7oxp+p21uXfr/d8uiKIu+HBDCyZmrN
0Y34D8sTj6NXJq27zrs0EDBz4/d5RXQjerfJum3olfExHgM7igDpU3qJ3OjG
o6i5W19V8Fxz5la3HCFAZNB999dvJOSOBK8tUUZPvC5pmPxF96Y/adV9JsGt
yz3WC71qyL2rY7iBBPE3W+gxn0hocjRctQu9+ry19uhxCRI+vzVc8xl7RPTE
fGtGHHZxuUJp+j0aNH3ZXmX2Ae8vrzbUr7nNBC3VCzXFrTQYcLpCNFEUXB5L
nA+Ixd3uX6nR9JMGCkdlbWQ70FX5qGtD6JVnivK+Pv52MNZaZ5nYSsHOU3OG
+tG4W7T5Etiwy9oS/zXONKEnzT9PPcLd5dl0TksGu8xbtifDsh6/ng2hlavQ
MfNviuo22GWlD699raiigC+m2uAM7i6Tvc6X4rHLqs36claXU6D2s1joOXrV
Qh/o7cAua5ftaTv1iAL9pAvy3Li7HG/7n1m/oQP8xxzOVORjR9tsv2qHu0uP
a5zNCrusYfkZD9YcCu68+sBShF4F35ssKMQu0yj+OGyQTkHNr2fPf6JXly9L
6vzFLjvzob4jPomCjY/fP1bC3bUyRZCyrOqAUGPOHV23KWBzdyR9sRPjv1kc
rMYue3+/bow3Gvebw1XJcvRK/tChK4Kr6PBKtne7yXU8ly8cLxlFr+K9NK9G
K9ChSsK7NTqIguPHlzsKYScWHXmgsIBdpnYv6hP4UcDuTtM0wk6k8koSfMJx
LwXvcfzpTYEbb7dBIHqlfOPWrYlSOtxODrEQcqeA29k6KB+9MuVw3uTzgQ41
iTG1ei4UHLOOfd+GXo0cyL0VyMoANl7PW16n8PN3FZgz0asT1Sn6WpsYUJ+l
TyZY4865/3V66XH413arq9fsZAD9oWZ4hTkF04E3a8RcmLBJd5z+Abss7v6V
IrohBZFCH9JV0atnz6VjCs0YEMUUVR/Rw17evzHjKHolciB70N+VAQrfXbX+
HqagLy6s2gq9io2Uoh8LYkDNfEjtWnRDZ8h3/DR6VZOboieWwID717JzBNAN
uQ0q6ufQq86+Kv2/2GUBo8v+7EA3KrmF8t3Rq4gBvbbu5wzwLRxtlkU3rv+6
uv08eiVWuPJlJcEAVo2Uf/LoxomZonJn9Go8sUj27jAD7I+YPZZHN2oil5vb
olfx3t0sAfMMEHJ2a5dBN4K1RziM0Ku0q8p77dcRUOgo7SCObkRzVL85iF4p
uZx+fUScgLytI2f40Q2N0e4UKfTql/Pvh/KqBPjEzf/HhW4oGlf4rEOvavf5
fhAwJCDq84u2OVYKyn6Un5jUx+9Lyv0Y12kC2mxTZIbmSTj29sgRUhfPQWHr
xXk/AnovDLO2TZFwSWdA9TF6pX+/cuhHLAFusPFoyTgJsztnFa+jV27947Of
7xPgsimW6xa6EZu/XMESvTr/3FPhYxX2V0Czhhu6YWIeprADvaKRd2920giY
FJMZO4RumB79rfjzABM8wpoW6AO4A6M11vK9J4FV4KNStRoTbv05dLV9moBd
1kEF3xgk3H/foHgFvaKpnFnWzkXCWIRLddVbEqit0vJL75N8VsQjukMYd9Kb
az7BNLze/GYGIhOx3+uqC2vv0KC0eDHkx2vcM8/J23/isVMC/k521NLAPjf5
38lGCq6ITIafvcME+vvyF98+06DlkPB4Yx0FU652r0j0yu3CKjYu7LLGuouG
Oyop+P1KQE/lFnafo3jxHuyy20NewhFPKHjQvW9dBu4uHwOeUgfsMvH9U6eG
itAfAL559CrR5j1LEnZZ6I8vGw8+wK7Z3OhggbuLYW2XQMcue98tvTfxHgU8
7IbDj9Gr7JLIk+uwy/6LLW0dTsVz52BQASvurheO4kcssctYrZzalBJx5690
vm+Mu0tXedIgD7vsjo7KwdBbFBzSF36XiV6J5mfbzmCXjW6XFHkTiV9P+JsD
w+jVDWabu1FIB2QHSV9cE4bXz1hIjzTurvktyzxLsctSqw4qHw+kYMTq7MNz
2InO616a8lAdIDDn7BZzGfeJS15hIXpln3J1bfBCB3zXeLjm1QUKSEebrgH0
qsM5+s44dtkxJ26R+XMUfHGqld+Mu4uSVKOfMaTDKu6CPFlnCl7of3+mi50I
t2g1A9hlrkRoio0DBTveCJ6+hF4lWp4/7HSfDlL8zxYirPDzn41QyUavvGz2
2Y220eGsuhVRakbB4XgrxdfoVUjGwYVLU3SIDb21qfM4dkECw2QEvbqR1xBx
nRv3A7cP7bcuBZb5Ygns2IlDZ39qGYkxoIFTdnI9urF8NnFS+Bz6MJtfIqjC
gMfXv0TvPEDBfImjtzJ6ZfTpdf04dll//JsETWUKWH8Ra/TRK09S/lwzdlmK
xqq1Zrsp6Pwh9fIEejVPe16aepkBIhm9c447cQ/3P01wQq9aWdWue99kQES1
v6WHOO7AzS8C3NCra2M+A8dysBPLBCUuCaGri+mX3dGr5xaSL3ZWMiD18WrX
gC3ovHBG5Hn0is9+/ZbVbejbUOS2Kxsp+KGw+ZELehUX0j/0A7vsVXavlt8a
3P9bXfrt0KvxVHWBzt8MSD5k3neBgwKziRFRE/TKeIpRVbeSAHltLaYLumHG
+feiJnr13nDXkweC+O+a/zys0I2n8+ykDHp1cYD5944CARoTfaf10A3tR+4q
POjVf6dTUkN0CfCU16IrohsjBukPZ47jrhCquHLBloAYjlslAuiGmNNf4fdH
cUeN1mac9ibgcr7oMlZ048X75Vnl6JXzPvGpkxEEnDvv2T7QS4LOpLhQNHo1
LOIQaJxBwM7RvjXQRUKWa/d9W/Qq2Y2UNSgjQPvL15cp6EaM/V0JWfTqXMzH
xaW/36pgvfjLA93Ye2GgeFaTCbvqqBGtj7ivrmelaL4kobp6n9wLdSaEzXAN
aU0QUPNep3JdAwlhndsfh6FXn9d0jBxZQULz6qCjvVUkMJmSEofRqy95NuP6
/CQ8U5zq4KnF6+oO2eKdgvs8P5siw2gQOHr+YOhTvD3Vz+76kswEm77V1t8f
0YD8mCI0WoIdulywzzSJCZKvTM6uwi77LmHkbfiQAiO22c6GBCYMeOT82IVd
dv22+96yXPSndWHtDnSM12XzgDV2mYI//Rx3FgUW1koxUbi7XCqa9tzCLquZ
stzglkLBbuXHOt/Qq2e92V2vscu0Xo5JNcZTEGbtfUgbd1fUTBaswC6rsLhc
zhOL57Jhkn8m7q4nj1L79bHL3r0bKj4dQYG6pNT3n+jVzkO2MsnYZSniOzaV
hVKQcudw0iHcXUfyHiR9xS47/G3Xz7kr2Mvkgu9t9IrdU5BbHbssOeLPfvVL
FAh1ecZ0o1fFM44xGdhlP+WuzYV4UdC0q5bahrvrgcXiwj/sMq8Pr3eAGwVK
YgtH7bETH1w4Z+H6qgM4jGkv506jV6UnpjLQq/EVvNHd2GXhCmmUvD3uluip
t13o1Vy5efQxPjqUTKuZnj6Jt7PifNtq3F1HVvjptWKXyYy9OJxoirt9OnH6
IHaia2hlje45OsRp73/w4hjer5kTuu7olXepWntHIh2O8726/E2Hgg+rNRrv
oldeO7ZfsmqgQ8apS3VrD1EQJV1p24BeHUu5mP/9Kx0cVnl6ye/H84g1WmAA
vZr8sUmykXPp8Rki+fheCs7um5r/h14Vh2bsuY1d5k5/JecqT0HuecU//J74
dRZVf7ffgz4E+O4LkcZOUYzg3YNe8SgZH1XQYYBJEffTBDHsPgn5o9ro1ZGt
WsdW2jDAb2tLTq4g3j5fLmaYoVcJUS5fB7DL1saSrE/4KFgUyFrugF6t/hq1
sf4GA3Renu+s3kBBavzMNRf0irX3wtu0NAZwx3VuaVhNgfwOBu859Gr1yf+W
XyllQDXtKAnsFLT3+NcteXUkK7zO9iUDrrsILNazUDDXq+ftjF5FH+L/eugD
A2Qdb2VW/yHBPiplnx16NaiqGSL9gwHBXT+flP4mIdGncbXJ0uNXg+nBPMsI
qJ1L3Zf7A+/X50WZmuhVIEvzJxY+AjYK/6eYMEJCWZRwtyx6dYnSSRiXIUDg
xZb84EESGqUFabzo1RPepyn9mtg1lx7dPItuKLDeaJkzwduNI3qYsiDgCsef
kWPoxulNja0fjPDnclHLd+l9h0bPuNXtYiw97qLZ8Qy9OtNkcaAxhID2ctfl
a9ENVbaArlj06umEjHJdEgH2h86+HGnGm6Kvr+8UesUs2GldVUTAeFbPPNST
sIaHObIbvbqn/iTnGRDwL0alOAHdCHglOPFXmwm5LeuWVXYS4LCSjXIqI2E4
eWry1WEmCK7PuFz9jYBjFs985ItJ6Cyb+hWFXt2qSp15voiu/u6OncsjQYWW
/10PvVoprX+leSMJ6n1rtucWUBDTu+WyVQZ2buBN+SFfGnxe/+7n6vsU2Bra
p7Sn4Xm9Tm2cBbts/ZZRBZ8MCjgcslkOpKIzQTL7xLDL1uWJj7xLxnP5dt/j
wrtM2Ggfu3gMu0xqxem1SnewW9tFstahY2Kl/kpB2GU/lG7kx8VQoHnVg34R
d5fFpwX608PtcOPj+ScjNyjIDqCrv0OvhBnrG3+eb4e/+mwyB0LQB0lj5m7c
XQU/7s8rYpeFxcpvuRVAwTVPtq5o3F16UtHeQdhlWaeHL3+8iB3d8numD726
wXaHb6nL3I9v0hX3xF1xYL/xbtxdwile/aLYZe1RlVHnXNG94PG+INxdlx8R
z4OxyyL4G/eXOGFffJC434pebXpyNHsAu8y7XeEU05aCNB3W5LW4uzLbXAP1
bnVA9P51M5InKHjmnVZjhJ3Y9i37SBV22RrKetHBhIL+eh6u2+jVu8aTP6QH
8OMJoctJR7HL9BMj36BXawa/O+dhl/Uau556fYQCq3/q8iy4u1Jqs+6LKtJh
v4Fe/aQG7sbbmiwK2IlxhQ8TCm3pIJfcGb1NjYLE0FfTp9ArN1ZFGYUIOoRM
iL49rETBLqX59bHolZuguV3zEzpIsppdcd5FwYbvPEZP0atrZ3kETvbg57G5
kXVDCm+HNp3S9+iVcvnTnX+wy+6E9yrkiOLP5Xub7Ax6FdS3LfQtdtnqP6Fq
NdvQf8veNxt8cJc+2h2RiV02Lnn/WftmCp7yVIVKX2BC/s7OvT4aDBgMdb//
33q8TmQyTQ+iV82JA5EG5gy458PHNsaFu6uMPHAcvfpwXO7SDjfcUV4fO6dW
UHDpZdZBK/TKZip8ZlkwA1ZO/uJf+If7IcvAzBG9crZ/smIIu4wWfK9zcY4E
38Qdgc7o1dt8l9TXhQxoKRJnW5wkIVs4pMoZvVLe5VhcXM8Afv6O3DkmCRu/
FrMu7avYx8cUE0jszagvNT+/knC9nsXKGr3S38WQCfzKgOX051rDAyRUlnU3
GKJXvNsjY10XGMDTW6j1/iMJu9bdkdNAr85brzY8sZ4A62a22pfvSBhyiy6Q
Qa/8hcdc9XYQMFsr8aCETsLne5KSvOjVMrnSrv1qBKwX9mdPekPCzz6yZG7p
fRtevIvdY0TA7gCb/y6jG3ueTar0mDFBKKM7QvoMAbeD1GQt0Y23K+daKtGr
q7xS9WIBBFhuvD65Z8kNOTPL2+hV2ZbdO0RuE9BtUribC91QGPAfdkKv+JVN
64TyCKi/JTjSV0TCE9NBH0X0ii1/9KJwDfaU6anNZegG156Viyzo1RVjAwPR
DgKYruMQlEWC1kP3sDc62On9jXslPxNw5pPBoG4K+uMez3YLvdJsSNi1a5aA
svm/QdzxJOxo+ut/HL0aFfsnu28NCZoL+z2lk7BHvp0cU8/GvTEq9uKHCw3S
fxdk3rlNgY/W4ZaKLCZ8MtlZxo1dZt0xf3Dp9z/dzJePiGYyoXfwk7wydllY
2wZT8+vYOwuZR+PSmeBX4bznDHZZJPn2Q1kQ9nXUxslZ9Oqpal9h6up2SPNe
Qa3yp4C7we2DLe6uMlOjiE6ldpj6WnDQwYeC9T3FfxvQq6Yj5S94scukhNMF
yt0p6MsasBXA3TVKjOnYYpcZN7SdZzlLwR7LLbO+uLvMdr/nLsYusxOS3mXg
SAH9k+PbNvTqqOQ+rn897aBhV+QUb0OBbh6D3Ia7S2fVa5mT2GU8J7RWdVlQ
8KbmMvd53F0mL3e41GCXmT6Z3L7JmIJPhGdQJXoVMjz+SMgS909n1WMTA+wX
A2rbX/Tqx+P8iRjsMk+2xKKl500K9sJ3ddxdFWtfiC1il3Hq3t7SqE7BdVvT
4SD06lhDttol7LJ7MU///FLBvtAt56pFrwQOZkr8xi4biN1wXEQRnddltfqJ
XukMz/Vc3kEHpR91G4/KURB5+SxdDDvxxcSoDqsRHRrkWgx8JPF8b9ngZoZe
Pb6e6BDnTwft6uPTydspmFkmJxmCXjEaV20Wz6WD9H9eG6sEKHjcPcpRiF4F
0YxtgUYHnUHDXGoTBZ97rnLQApb+Po6tuP00HV7Ors8fW0dB0i1+8TH0KiIz
Sp5tHQOmDQa2sqEbee5/7TgvM4Fjr2joe+wyYZax5TzoRuSPUxXCvvh9cdsF
lmKXaSufPrUd3RCOiRBWQq90c3kEo48zoJMnZLcsuuHd8iRPG706nbTFxsWJ
Aa6N/r6K6IbHPtGDJuiVV5WyvI4fA3w9bsvuQzceR0t8t0KvrqzfkyAVy4C+
k8us9qEb8lEri+yXenCkOXDtfQY8ILbOK6IbQmJ8/g7o1f3X2SNT2GVnlEXX
y6EbgZcfWNiiV1ohF2l92GUzy85miKIbEwS7pgV6VX3gswitHz//2/2ZvOjG
6brEvQZOSzswaqB2igHtB2Y3Lkc32ueLlPajV1y7F5Y9WkXAKvkplvEmEsic
wv1S6FVfWmvoPSECBlPjT3c9x/935YTehqXX6YRcNE1SJGAxXUG9thI7ZXDY
esaKCTICQRdi9Qh4ek39TtoTEib3TXt1L71vg4xNZ4QdAbZvRKwvoxuvLkdH
PEOvvGYDL173wV7bpp9phG7c9dmYdQu9mrI20A+LJEDTUebEDnTjgOfyCif0
Krtd7Pj1TAJkKzRuzt4lgdje+VIRvSo66+QXUU5Apcsy1ZY7JCg1LRCs6NWN
qRONN1uw4zZNnYqPwe5bttD91gC/r1+GIom9BLxKTltudYME2GHafVsPr/+s
mLjMnwSUswduFwwmgeNPeIcRenXjnw7HQ3YSrokuVBddo2B7gaCYaB72gip/
2K+TNPjWYa/FHYhdT2VV373PBLuEyJzN2GU/enUPe11GfxyoO5w5TBD3W216
GLtsRizhWfsFvJ5v1T32vceEnsj2aN93NNATE0yXOI+dznVyVR96lVg1qFay
SANbtvbJQGfslPnSB1pLu8vI5CRToh3EksKB4YD7YeF1YD7uLlu2DV17sMss
zygtCllTsE6hIG45Orb4hf1BEHbZk/KW0nPm2Hf6Nr12uLveRqyoYeS2g6Tf
rs4KQwrKQ3/bPUOvNk8Qy6WwyyS8HM/N6lHA9yhkEyfuLsdHQlcisMuq+Kx8
VbQoUDnAw2qJuyuv+87aMeyywqqNvy4dpEDr2CuB++jVe8m6MgvsshK7uIEn
+/Dcz37kstSJnb+2WbZgl10f7zz8dQ9+/sdf+mRwd7ntk/l5IKMD/giN8vHL
UrAy71bY+aXnE8t0vGuxy9iCeh30JCho8201KkSvNN830vaPd0CFz/OtvkvP
t/ZUavejV+3Mj79eYpdZGGTpZW7FvrAMceDBTrRb19JlcogO+gppo428FBjq
HL+nhZ3Iuz/PbRi7bNUh2uIgNwW9/UdZLqBX96yvZwcn0WFZgFk4yyr0cH9x
aCp6tWhy1k0Q6HCt3SKUfzkFO23SRRrQqwdcmrVNI3S4tX1+XH6RhNbdJv/9
h16dfjGjsXclA/vXnTw8S8LWfI7KefTqx5n7H9YIMuD9oU+Spr9ISLg3nc/j
j+cIH6vwCHbZbEPQpN0YCWwrbUul0CuDu2OrX2GXfX0QtcdlGHdL95V2VfSq
okkpNQ+7bL5bZfhcPwlzvHf/6aBXNQ8e1IdfYMCLw/S17j0kWA1OHTZGr+5c
+et9LpwBiX2xj9w68eMDB1Ms0KuFyukyk3QGHK6qh9MdJPgbFi1YolcuKw/7
7H/CgLujRbrWrSTEjGa6m6NXh91ulkq+YsBI2QOd4+hGzab1o8fRKx9BX/vN
PQyIP8VWfwDdWNVl5aWFXr2Hu1c4xxlw0X3LQyl0gzr3blFp6flB7YiFeewy
k/M6qzegGyec/ksQRa8WOOk9P7HLjLcyh6cfkpCe3CW79PsMJtSvtaOyBOw7
5anSnUvCguL2tl922I/9HneGDhHQaay8vDKThO9vJN06bbDfv1ZZDVjix+8u
14lDN9IPm68sR686JdWc+s8TwHbZeLkLupE9x1sQg17xetjlDoQSEEdEq6qi
Gw8qejVPoVcKW0I2fkkmQFSqe3QlurFYKti9B726Jj1TPFqMeyy3ircriASj
IrOzLOgVp/7GM79eENCWV1yX5UeC9OCfiTeGuLsYAsoL7wiY61L95OSN7onc
8bp9DPcqw4yf8zsBvpITAeLn8fZsTvtihF7JCE2xb2IhYd+JDlYxLwrGnCf5
lxcuPW4vFjBuQIPfR0NGbrhhF2xYOOufz4T97isa+bDLzqSZHx46jdezXfKf
UfRq7NKZe7pZ+PGlOzeo21NwYxTaT+QywaPUlTO4hQYOeZ/Nkk9SINDs19+U
s/T3OneM103QgFvVkWvUdOn11M3yUri7uF/fO/JvSzuYf76tpHocHRvOex6D
u6shqJVVD7us6vUJKlyXAqNKsWuj6FXnzrCNqdhlCs2PhuiH8Lz+djRYG3cX
R0mOx3hSO/hdDHblPUCBuYh0eQZ6tdbyy4qj2GXrlVtPWSpTUJvYxjeBXtX+
WmwrWfo9Rplr7Um70Y2th8vUcXfpMG5VbMYu+6j+6BFjJwXaux/4x6BXfW1i
peHYZcuk9P5x7KCgkmWlF4Ve+Z3QKJvHLsu+YP9KTZgCG+fI+M24u75EGT26
hF1G85tbPMePHTGn3meJnbhW6Gn8DHaZ+GXxRyk8FDhtMDRLRK9u36yxCMIu
G7o2RWtci11MvB+noVdRHPdGV3HRgUwIPvWVE8+LHf9KWXF3ZcXFa2Ril2lE
fHJduYwC9ndj8XuwE43/lekr2dFhSlR2WOIvXg/Bbcn26NW1NVzzJHaZgGBc
16EZEm4VtdZEolcGTumHL5XRQWSrjJrVTzxPX/L8eYxercg12iT0kQ63n0nz
eHwnQUzuszkdvSJUr5c7s+FuCak5FfSFBMODbm1j6FWiQWucxmYGbF+zSiym
j4R8g88n2AOZQL9ACW6TYYDAd2PrxA8k/CiLXti69Lxh+VXzBeyy1NK3HGkU
9sWHe09l0asJ2QTZ/7DLrGbKpDLaScjYfyZYDb1S2PnfvSbssodueo1pLbjn
Lwhba6NX1vzbHjzELmNr7OpIasRdIcN/xAC9+pbJsTchkQFFL3NNYutIaDbI
OngMvfK9c8wg+CED9lssHg19hvevnvlDBugV2/q7n9wbGLDXa1/DhVISQvhu
GGujVxdCrn+xoxjgI12Yb4dueF+7fXbp9dGrEkqsTUYYkFtfwK6LbrR2+YTL
oldypvn7dP8y4Gl40n+y6MapbbcebkWv5KSnLmpsIODAqk65deiGeMkBxoql
1+mMCKxUkyCgY+bNzI84EnKVv8x+d8Reo91lKu8nQFd2UOVtNAn/vRoV6XDA
+2lsN7+yMQHba2Omcq6TMNNapfcIvVJ30I/a50xAwaDKzkvoxvutNR7h6JXd
MuPd+68QICV6+uMRdOPzKvvbNugV86Uu16E4AmQUwtl50I1cq21FcieW3h8p
nFv/AQHXOYUffzpHguPxc/UL5kzgGbLca1ZLgFfPM3ruGfz8Jc0tr03x/s6y
zM+BTkCOGMPD2Z6EOkZey01jJlBvX9M8hghQLZqPFj+Jt0N6XN1x9Gr2W49M
8BwBNtwaR5Nt8VwedmwfLGZCiuCy/C8HaLDzTvLNKUsKSsKGOk8UMeHRHpt1
G7HL+N6XahqbUADJ7wTb0KtrjMxNOnE0UPnudu7hUQqGBPY8VClgwkD5aHFo
DQ28QopWLh6hIDxs9kLeAybMMcyamwZpUDltJmCoSUFqidRlLnRM3PmT4Srs
Mhd7s9wMNbyf/mut9MDdteLPRa0T2GU3QpOzhpUoqLbulevIXnr+ZT7hkV07
zH1avVZWnoLViuc/SeHukh9T382BXUarePTTU5qCNTFhL0Jxd5mKsnKfxS6z
XO6pVypGgcjCrq536FWzAFOIjl3mcdeI97sg+tYUKrBjaXfZ51jsX/o9xn/G
5qJbKBCDmDtLj88Tk0UPSrHLpjMvrzyxkYLgUCeFOvQqziP8nyR2WU3+m91R
aygIOirCwoK7q3nunkUhdlmfmFlHJQcFxwT7pzSwE1PtTTNlizrAdXFHXz8r
9mZV/YYg9OoDz9irauwy01nz0xwLJFTe6zGrQq/yDz9o0vvbAfG1s7bS0/hz
l7eqHVt6HL7r4Y1+7DLuTmma3gQJcamOmoLYia/DeFgDscviG7hKz4yS4Dos
MGKAXvV1j+8QCqDDw8EG9qAhEkQ5nz3yRa8cjuz99hq7LDz9HBX/H+6WnpOx
6ejV2E5S5WI7HYZUD/DmdZNwZ+eByHr0Kn0oc5XEDB2aVzvRykgSyhsT0j+i
V1XfyvI9scvUrdfN1dFI2OuU9GoKvdqyb9z/uDgDzLyvpje9JqGv9+ry1cHY
odK9M7tUGRCeO1jx6gUJzzgjLQQDl35P+8gWHkMG3Ne7duhVLXZH50zN0u/D
yxf96vqDXeZAy9JpfIpO6q+TVUavWh3vSQ1hl7HlBTfXlKCTSXwlB9Cr6e1s
qxjYZd9tvCpLCvH+xWGtpoFelf1q9WrALpNPfyGcfR97RFycOoheveFJsyit
QicFX7LdyiBhW0GLjwp6ZbiW5+l9GgOeNJM2fskknAtL3iqPXkmXtIemDDBg
003dXfboBu/vkdbt6FULj0V13DQD2DNvBBxCN6ICtwSsR6/G6hSNYrgI2KP9
4+B2dCN06obswlns5aBvmpHCBKT8G726GIhdE3V7YNAZuzhn7EaEEgHEpRHF
95dJaHmdlvjqNN7fe0p4ovQJsIq0dHl0gYSULG7tPPTq6snU4Zv2BDB0HvME
LbnhefJnEHq1jljzO/4iAfxsTgeOohtqq77eXXr9YGqQs1J6FAGZGtMDm9CN
lhppZUn0Skth+v6DLALMaCNs/50gYVw3rX36JBN6bTiVyisI+PzkRXaOCQkB
K0tPNloyoW3twOcXrQQ8UOd8fuoo7pyeLx8i0KvdXPUFxCcCHm44bi54BPeS
PBzVR6/20Ai/oV8EfFT6msZqgOe1yYwylOL+bAvkeLeLBh6qKgp22hQobx6Y
VSpBZ34fj2PHLjMb+qFRpU5B7nO++cJHTNBT9q45eI0Gf3pGmlerUpBxL2U/
HzpmOshxKbAYd44X13M7RQpOxtrWhT3En4uvUE1TJw1e5x6UeixHgdxbZ9/v
6NWa4irftdhlclIeXLOSFNjyVZ41xN3VdbUhywG77LxblKO6KAVsYJhQil5d
3bVeosaoHf7eDJML20bBcJzqJBfurqCTV1n5sMumfU09mzdT4DwZHH4ad9fJ
sTrhQOwykY5JMZYNFBz5stOgBr26ceDK5RFaO6ixOxmqrKbg/opj6qtwd3Vx
m8+exC7bZJ37w4Odgua03w6WuLuGMqgkArus/EMtWw4LBVype0uy0avpLK9D
hthlJk4VMfQ/JLQ9lBIfRq+mrJImSOyyzLK0qD+/SZDf87VZAndXeVFavA12
WarVtQWRcTwHrWIiz6BX4Rxv+Mewy8o6g4e0v5Gwc6PShXvo1WziiSuh2GVV
AY80nT+TYCDEfvXd0r7aeSFfYAsd3t0W5wn7RAJzs2gBB3Zi9RnpW/XYZVcO
r7bJeE/C84sVE0rYib8LYsROn6eDzrMbW8oJ9CR+wMIBveKQv2m9Lhmdma09
+rKNhCO1Pe/D0SsLoY3iTdhln7Z8mCJf4c6XoF94iF75R8x4+3+jg6fQet7/
gASBdb+2t6JXXmohW9Oxy8zXpRR9qcEOeuj/bRC9enPNe/dV7LKw6fzKbxUk
fNlzr3kOvZLYveO3vQL22mCAyuhjEkans0pXhzLh87izzRFdBnRPmCl8LSDB
wrK6eCt6JRE667jLFh3TD8jrzyEhnJCt3IFedb5OZtnqzYAZacXYrnQSqldo
t8uiV5FvpmRXRjDg12c6szUJd0L9kXF59KoHGj/PYZdd6st6XXUbu+l3EL88
enWX9x4/E7tMN296c24UCbq9+4/tRK/UfaTbBrHL9n6QH4wOI+HGEHljO3qV
/GqW2YNdFq5bLO6JbjxtSm7iRa90te9eeYdd5vK5ZdAQ3ei8PMC6Ar1iBMWc
J5fjnnk1tkUW3XCx5D40cR7POyvTGmIL7gTl623s6IbZ2pDQ9264A0XPWFFy
2FkVCzO9p0nIfJjcUIteJSfs0n1/mACnr633Su1I4M6smUlFr56+23Ll0wkC
jtfYNwehG/xvTXb6oleJCWHfv7gTIKC330kf3bgYTrc8il79mn95Z+IaARW/
PwVvQDfe3c++IoRe1bfJOf+9i91n1bpl6f3DKi6oJv2wxU63WHVq9WMCZO3C
dqeok9DdzpNbY80E2p3UgG1NBDhIpreYq5AgIlKcG4JeXdyyuVj+PQHsstm9
3Ap4nZy7mnQYvao/UDmqPYYdt9dp4sw+CiSNVS1TK5hQkO50r16EBkfdOPtg
DwX/KQQQ68qZwBVdoDmpT4OstIrDm2QpEP8zHHP9Cfq5oyBy10XcS9w6gq4S
FFg6+F//jV4dORHi4p1JA966Qo9qEXQpQabG4THuBBkNou41DXw1mxSXXqdW
uW9R4g16pdo3WM2FXVYzF+J1dBMFE94/OmRxdzkNmq53xC4jJt+J3FlHwcLo
v+JbuLuoYff2hkPtELzwTJdcRUHXO+X67+hVwNCfPhHsstCcLV+4V1BQMJ/J
oo27S030qVoMdlmr0t9pvX8kPG7YfzENvZo6fIj609AO+e8cgkLm8P6+XWTT
GHr1Ue9Aqhd22bCb7pWKSexUwmpIBXfX21yZkLH1HTD/pI45yMQ9L77QG4Ze
ae+NCPDALluu8vrd2hHcG7v4F9+gV3ZnKgKmscuY7pcVlAdJsK+laa/G3fVT
kMPnOnaZZ8ogu00vCc4WcuX62IlHv7SY81V3wKbPgkaBXdgvtjaaN9Crzg/S
vOXYZYp2OtzpDHRg/tLPOvRqY6tZrjF22ddlV7SevSVhuWLOix/oFc9uq1/T
2GUTdb3jbS9JaPrG8ngbdmK7hfrvHOyyIvuE9X0NeN59aXiqi17N68ymmUSi
M/VvHv6oJuH3J/YuT/RKeuxsN2c5HdKzSqr/lJOw6ioHdwJ69Yf7TNZL7DKO
losHl6EbUad/2ZajV937Tow3YZcJ/TVR40Q37hxYeNGOXrG6BGvnY5cFc10v
XYlu0J/Z7P2CXqVO++vfxC5b8+pIOge6cSLm+PNZ9Eqie/3MRU0GlHH+t8iK
bsTEcxtzhjHBnXulloMFA6ZexvXM3sKv83n/r43olX7tFunj57CD5h/KjUXi
/hFmz17yirZ5OudgCANOvvKb/3iNhNiF1xZC6JXVbd283UkM4DU30my9il3w
0p1XCL1ir66QkihiQN18BEvZJfy5bNft4Uev5u1JaSFgQOzOKyrJXiS8ZSnI
3YBerUtUzt7SyYC0K1Fjl91I+Hv7P0929MqvwOPapm8MEC/exG+Bblw+duTA
tDd+v2rzb3iX3g/2QXSTPLoRv0pl1aAXE5bpnvTcvJEAvjDjYQ50w2CS590b
DyYEb//rtlWSAPU7H298NEZnktQyHqNXphGmz0QOEDBvlJlTbIC3/5f1drHo
VVJO4xFpEwI8rnKr+qEbR/VYtriiV3kbH2xWciEge2WpoSa6UZLm3aaBXnX8
MxU+dJWAVNm/g+zohrd8tw8PesWxfttJ4zsEXLMP/t26B50fyl03dApvzzCd
Wsd8Asqs4XqEDO5e/qPZpfb489q1cf+lOgIqdxgkHtpBgnGLvshl9IoRW90V
wyDAaN0z0T9C6L/vtnhV9Opiy9lruV8IOMtqa9gsTkHsimcSF6qWXncc43Fv
Iw3WtD2O5xdGl+qVrb89Y8L7FGXxD/tpUGdfeNSDnwL736/bbZ/i+TLKeWOL
Mw3CH8oHNvBQwNtyMrADvQpj2xrqcJsGxepyYlzcFPg2fXNRK2PCZLDf6pJq
Gnxwu6lptpKCd9+9Y/Jwd50U38rPhl0WKKX6LnUZBSktk19WomMp/d8zbLja
gUNRuu/jXxKEHdx9z+Hu0qeaIuoVcc+wmtrzz6LPRz8rv0Gv5Kxd2sWwy4bf
lJib/yLhdLX1TlHcXXP8cQ7xEe3Ad0ut6ebS45+ufcf8cXeZL/uswL70Pvl8
83kvhklYfOWf2YZe7baZUgnBLutjnfw70U+CQ98+Pn7cXWIdBmdYsMv8q2Ta
t33E2/+i7PPT2IkW560Kw7HLXlx9tkHnHe7VebeIYvTKteH61AbsshivrI7z
dDzvCjn8fqBXNW+3qT/ALpuKW2C5/YYEuCBwUxY78Zfw2csHsMvMYOTh42Y8
j/hfNZ5Fr14PJcV9xC6Texn8prWehKJ9wpuz0avh7tarwdhlKqaD9v1VJDip
GEZT6JWX2wY5KQk67OdWcv9dRoLguUtblmEnHnzuk9yNXTYdm/1z+SMSptjq
m+QS0bfyTwWx2GWL1sbM9fkk9Iseu26BXtmz7DbTzcOOY/Fz2JpNwv0vpjYB
6NWs/MFYzg46uLDqGYikYSdas+qloVdKVa+0OrDLLg4vPBZNJOFwRqTu0vOG
QQtqlTTssuwDjMjt6MaP10InO9ArnZI/f55il0VmLevdhm70crH4D6JX36Rd
vt3DLhMs+VjAi25ElZ/J/4VezdVoBsRil1lszxlbiW6UCsf1LaJXd6sO5Qee
ZsDzV9lFf3xJ2DXQuJ0Dvbqazu/s5Y++Xdk5+NUTv98iDQ8u9EqSxbv8zC0G
1GokJxCuJNBczF9woVcyRd/CbHMZ4KWoClVOuAPVjm7mRK/u3eanLKvRn+SL
Z9JsSbgbdfECC3pV3peUYtbOgDvt+eH+lnjuLAq3//bD63nVF5rpIANCXPeK
mqMb1QkFkl8uMWFXa9RZ8xncVxKxarLoRm7KqWvERezf7YtOJ1cTwP2bj8GK
buhWF3fXoFctAU+r7EUI8JswGCAPknCVZVgqC73anrjZ5uxeAsZ8Mjyz95Hw
ZMTnYhB65ZMWredjQEAH940rbuhG4YnnlVbo1dWdrn4hDgTkx19fsfR+GPql
UuNL74tlZ88xcNuXAC0uwbW/xUmweiMlwIFeGRFlV3KiCehr606qQDcOcMrt
f3+GCbcLH2s8u0fARneNTM8teB2eKD6W64TXf84+ybanBLASQ2KSG9ExFX7D
c+jVmk1R0p/fECC9w0r202rcP03TB3ehVzc4O9T//keAIHdE7ZaNFKzfPPHg
SB3uB6dO34AVuEOSeo081lDwdktOPNTg9ZzRrVYth90kE2oHHBRcIw/WK1Yz
4VXBudIFSxo8crL6vJqNgobnDaL5lXg+Psxv1gmlgZefcZ/FAu7bV3wvN6Jj
ut13zqUW0fA6NzXJnMYuMNXJCKxYen8SsbSfFA38Ko3290/g13lUp+gzerV5
nfYho7/Yg98PZAp9x/vRVr4xbdxd3oJvLJ7taAdRwY2+1l9I8Kyts89Dr6x8
fN8KY5eBEq05oQ93YPXeZf/Qq5p1i7fj/dvhysDZqNYPJDw8ENdpXrzUC+xp
q7DL2jPGXs1ReB1uIolC9Cr9uvDHSOyyqAo7f4kOPH+rOedm0KtpskN76f0Y
2Y+8zTVuJUFG97DuYdxdz89fo93FLhM8dlDbr4mEDfcT6qPRqyTWjFOS2GWW
We226c9JaHVYa9mBXjGenptpwC4jxm8xl55v/fz57Ya1uLu+S+wOscYus+rN
+N31hITVlp9/6GEn2tzY+uMvdpnVV16f8SISPlVf/Lb0uFZAjJ5CPnZZe4iA
6/IHJIwMZLFUolef7r7RNMMuk175vov3Hgk5Mdf3DKNX9PJULs7DdNB65/lc
NHWpawwCN2Anrk8vuNaIXSa7h5dfLgGdf7e1TxW9miAYKSHYZSyuc+OKsbi3
o0Us7NGrawWD6tov6FDWZHJwXwQJrPPR/cHolaxOmiv3KB3IGOsV+0JJeF0c
dXXpdT0ajmTYOHbZcT4TbcUr6IysieQz9Eokkb6iB7tMoMVvUQbd8BMVGHyD
XnUfjFFowS77tmLT7u3oxkGd7YU96BXvRPOKKuyyerOLnzaiGyI+9/2+olcB
WvK+D7HLkvUGl7GhG7YFn4wn0KuKH0EBWdhlkwnleWM2JBiu59szhV7FN1is
TcYuc2HZ/4KyIOHshtTN09iDFwotpOIyGMB99YNFlREJXDrFLJMhuFtovC9v
ljFgA9/o2bv6JLjHZnz/HsSEd0Gi72NeM4BzDTHto0VC4OqGrv6ruAeOc1jH
fmSAfcMUyzF045nq6RdEABMyV2vq3plgANQ3R2xHN1Z8Gc5vQK/03+vevbuC
gGMdRTG/d6NvSjmRBejVScHbGtn8BLCNCK5p3omfp/an0030yvDx1f3FuwgY
UE1ZfQvdSHRXVXZHr5wqvMOqtbCP9iREm6MbQjX9LPro1Xzb2zWtJwlIvhwX
sQXdaAs5BtvRK0OO99QHDwKsp3mW92zA/SnB9Jo5xwSpyYF2ZhgBJ/57yHIX
3bibtIun1ZUJzblyv5elEiBW0BtoxE7CHs3IgkQXJvQ+nz0oUIL+bFS/ys5C
grWCh5QtetUWcDF/bzMBPbtdFqrnCIjhtkkRQa/Iuo7tpt0E/A/VO9s5
    "]]},
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{399.3967807327034, 315.67932312699355`},
  ImageSizeRaw->Automatic,
  PlotRange->{{-0.3664848468364472, -0.28086685799351374`}, \
{-0.9291108361219093, -0.886100609078772}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  ViewPoint->{1.2619055255179672`, -2.335235338592901, 2.098635356143158},
  ViewVertical->{0.0018076346116615433`, 0.0424048426981858, 
   2.497747187182948}]], "Output",
 CellChangeTimes->{3.5036209271882906`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"GraphUVW", "[", 
    RowBox[{"cU", ",", " ", "cV", ",", " ", "cW", ",", " ", 
     StyleBox["cPos",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", "Blue"}], "]"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{"Graph3DPoint", "[", 
    RowBox[{
     StyleBox["cPos",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", "0.03", ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"GraphFOV", "[", " ", 
    RowBox[{
     StyleBox["FOVHright",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     StyleBox["FOVHleft",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", 
     StyleBox["cPos",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", "Green"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GraphFOV", "[", " ", 
    RowBox[{
     StyleBox["FOVVright",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     StyleBox["FOVVleft",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", 
     StyleBox["cPos",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", "Green"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Graph3DPoint", "[", 
    RowBox[{
     StyleBox["cFOVpos",
      FontColor->RGBColor[
       0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], ",", 
     " ", "0.02", ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "1"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot3DVector", "[", 
    StyleBox[
     RowBox[{"rayDir", ",", " ", "cPos", ",", " ", "Red"}],
     FontColor->RGBColor[
      0.2627450980392157, 0.5372549019607843, 0.34509803921568627`]], "]"}]}],
   "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.503527068067917*^9, 3.503527137566038*^9}, {
   3.5035272872482986`*^9, 3.503527288449501*^9}, 3.503527342175995*^9, {
   3.503528460151944*^9, 3.503528488091593*^9}, {3.503528618960221*^9, 
   3.503528623577829*^9}, {3.503529104292667*^9, 3.5035291354771214`*^9}, {
   3.503529227704482*^9, 3.5035292633505445`*^9}, 3.5035292947377987`*^9, {
   3.5035293534563017`*^9, 3.5035293574811087`*^9}, {3.503529779805045*^9, 
   3.503529890549638*^9}, {3.5035299263517003`*^9, 3.5035299590649576`*^9}, {
   3.5035299930418167`*^9, 3.503530012838251*^9}, {3.503530045941509*^9, 
   3.503530091150388*^9}, 3.5035301730817304`*^9, 3.5035306767754087`*^9, {
   3.503530804617632*^9, 3.5035308182832556`*^9}, {3.503577808587042*^9, 
   3.50357781322025*^9}, {3.5035778689435472`*^9, 3.5035778803783674`*^9}, {
   3.5035779214688387`*^9, 3.503577942762876*^9}, {3.5035784017156763`*^9, 
   3.5035784328065305`*^9}, 3.503579107008506*^9, 3.5035791388793616`*^9, 
   3.503579278624405*^9, 3.503580776398617*^9, 3.5035833123858385`*^9, 
   3.5035835702230883`*^9, {3.5035836478332233`*^9, 3.5035836679728584`*^9}, {
   3.5035840923559985`*^9, 3.5035840946960025`*^9}, {3.5035842580906873`*^9, 
   3.5035842760931187`*^9}, {3.5035843488984456`*^9, 
   3.5035843572756605`*^9}, {3.5035843913929195`*^9, 
   3.5035843976953306`*^9}, {3.5035845036819153`*^9, 
   3.5035845082215233`*^9}, {3.503584686685835*^9, 3.5035846979334545`*^9}, {
   3.503586163384409*^9, 3.5035861776896343`*^9}, {3.5035862154105*^9, 
   3.5035862662977886`*^9}, {3.503586352550339*^9, 3.5035863532211404`*^9}, {
   3.503586626174816*^9, 3.503586630199623*^9}, {3.503586883949731*^9, 
   3.503586885041733*^9}, {3.5035870551756296`*^9, 3.503587057250433*^9}, {
   3.50359004246868*^9, 3.503590043623082*^9}, {3.5035926456920195`*^9, 
   3.503592647252022*^9}, 3.5035997327137413`*^9, 3.503599983062978*^9, 
   3.5036003961204987`*^9, {3.503600802969208*^9, 3.5036008236080437`*^9}, {
   3.503600870392525*^9, 3.5036008741053314`*^9}, {3.503601339298143*^9, 
   3.5036013688445945`*^9}, {3.503619515348178*^9, 3.5036195555650473`*^9}}],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     {RGBColor[0, 0, 1], Line3DBox[CompressedData["
1:eJxFyGtQEwQcAHAYm9BN14Dc5RrQYGNjY+w9PBzjn+V1yTF0MGF6LSUGNWBQ
JKOoxgh5RfK4iejtsgfko2kouugBCtjhNImHCjaImZA3zYpAcxxCfuHPh9+X
HzOrUGMg+Pn5yZ4IeIJgB31dsuCC09DByWTIIN1mbfk4iAE7VXP2pOZY/CnL
GCmtjQGdnnb3/Dgf35gn2EuHMNjsDimSvszD78rUKn5rCoeA4qOO4CEuvtLB
mUm6GgGVJJ0zeTcHf9vQEe9G6/PwR0rImG6Yjf/pde/2P7lMKJXOHQl8lYUf
SHnqtOknJngH3ZZaVyR+/fYcK7kwEuiGW7G5iUx8qyHnrcb1UbAoCiO6Dkbg
Nzs2ZU53RIE1oHoir4SB372k7tDoWPAGFUjqug34pMr45YaHLBgJkV6646Dh
/3izr+BcIxt85fLvYppC8RsT6lMexEdDZUz1wokTVPwPB3ks4rVoOFQ2NHqM
TMavKQjMF3zAAUHDmjvGKSI+YbJqVBXFBYrQKc/YtHR+5VstbnFEDxe6/rJr
3+2ZxX9FYPKn58TAhdcI7qyd4/jrKTcGbhN4UJ5Uet7O+zVp5R/7ypYHHDw4
dst2Mmj2X3yt8+IOWxofpl2Uu/kVS/iu9t/bhH/zwWZlx7dWkWDlMz5TZc8c
jIWimPbMsj1kfMJgId0oF0B08fgX5gYqPuPnF/+58YsARmbUebWOUHzNdW28
3hwH4eElt3fZaPhtwYl7z4YKwXH3E0HV9xvwg3VZLHa3ELp68yYfDTPwzRsP
+HrEItitX1DGno3An598fUJjEcFXA8pvdxmZ+Es1w/8Vj4rgXt+1o/6eSPyW
q8f3LzLFUNCfeiVZzcI3vJcm95nEQKX0j/W62fj9sfZnPuoTQ8UPFGWrmoN/
qjS18B2qBGidmtrDHi4+5/LnhLlsCZSuK4x7nMHDjzunD77ZKQF6gWkN8RIf
Pz/ovlDqL4UJWs6AIkOAn7CHXk3XSiE/SuFxXYnDt6Wd0b35pRSeTlwuuigU
4b+f7M3e8kgKQffSyQ8frL7961nLgWQZ5F5uGR47Jcbf2p5NSzkkg/HB9PpU
swR/X1vJTNN9GXxDXH7bLJHiqxPnhCqlHKK76cWz3tXfpnqhTl8rh5OHz+T6
n5bhT70UF7Z2Ug7244qaXqMcf3F6H5/JV0CP5dle08jqq9atpTp3KMCjXfA9
l6DAL5c3z2+tUMD/jgACIA==
       "]]}}, {{}, {}, 
     {RGBColor[0, 0, 1], Line3DBox[CompressedData["
1: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
       "]]}}, {{}, {}, 
     {RGBColor[0, 0, 1], Line3DBox[CompressedData["
1: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
H0O8jKc=
       "]]}}}, 
   {RGBColor[0, 0, 1], PointSize[0.03], 
    Point3DBox[{{-5.42890805977283, 20.110720139089345`, 
     10.883497638049423`}}]}, {{{}, {}, 
     {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1: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
       "]]}}, {{}, {}, 
     {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1: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
iMx3n35VyCAwwMhVa40h+WN+EL15PoX/A5YoKOk=
       "]]}}}, {{{}, {}, 
     {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1: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
OIWilFIS/g9WZ1Q4
       "]]}}, {{}, {}, 
     {RGBColor[0, 1, 0], Line3DBox[CompressedData["
1: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
       "]]}}}, 
   {RGBColor[0, 1, 1], PointSize[0.02], 
    Point3DBox[{{-5.19148314092283, 18.876473788689346`, 
     10.318685578699423`}}]}, {{}, {}, 
    {RGBColor[1, 0, 0], Line3DBox[CompressedData["
1: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
      "]]}}},
  Axes->True,
  AxesLabel->{
    FormBox["\"X\"", TraditionalForm], 
    FormBox["\"Y\"", TraditionalForm], 
    FormBox["\"Z\"", TraditionalForm]},
  Boxed->True,
  ImageSize->{290.2293747388969, 391.82732074962195`},
  ImageSizeRaw->Automatic,
  PlotRange->{{-14.647540040385142`, 22.226989387147}, {0., 
   40.22144027817869}, {7.008344985636615, 22.508956227965882`}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{-1.5437779504051785`, -2.4492987226301244`, 1.75148091829892},
  ViewVertical->{-0.8393649299040463, 0.0012501790384353562`, 
   1.6571149917356265`}]], "Input",
 CellChangeTimes->{3.5036211010505943`*^9}],

Cell[TextData[StyleBox["// Yakee !!!",
 FontColor->RGBColor[
  0.8274509803921568, 0.3803921568627451, 0.18823529411764706`]]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.5035002021011868`*^9, 3.5035002022259865`*^9}, {
  3.5035002432228584`*^9, 3.5035002455160627`*^9}, {3.503500287620536*^9, 
  3.5035003191637907`*^9}, {3.503500367367875*^9, 3.503500388581567*^9}, {
  3.5035004913857465`*^9, 3.5035005488718467`*^9}, {3.503500584595909*^9, 
  3.503500587809514*^9}, {3.503500686854087*^9, 3.503500778363847*^9}, {
  3.503500824477527*^9, 3.5035008467387657`*^9}, {3.503500927812107*^9, 
  3.5035009313377132`*^9}, {3.5035010289314833`*^9, 3.503501094139597*^9}, {
  3.5035014660153866`*^9, 3.5035014676689897`*^9}, {3.503600491296264*^9, 
  3.5036004972554746`*^9}, {3.503620951165533*^9, 3.5036209519143343`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Slide2", "Section",
 CellChangeTimes->{
  3.503351789628536*^9, {3.503439999666597*^9, 3.5034400200090322`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.503440034751058*^9, 3.5034400386978645`*^9}}]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"Working",
WindowSize->{819, 1382},
WindowMargins->{{552, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[579, 22, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[198233, 3952, 64, 1, 76, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 198905, 3977}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[668, 27, 26, 0, 63, "Section"],
Cell[697, 29, 241, 4, 30, "Text"],
Cell[941, 35, 3146, 81, 278, "Input"],
Cell[4090, 118, 265, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[4380, 126, 773, 18, 30, "Input"],
Cell[5156, 146, 288, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5481, 155, 895, 20, 30, "Input"],
Cell[6379, 177, 486, 7, 30, "Output"]
}, Open  ]],
Cell[6880, 187, 884, 14, 38, "Text"],
Cell[7767, 203, 941, 25, 88, "Input"],
Cell[8711, 230, 1512, 34, 50, "Input"],
Cell[10226, 266, 319, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[10570, 275, 810, 19, 69, "Input"],
Cell[11383, 296, 839, 22, 63, "Output"]
}, Open  ]],
Cell[12237, 321, 317, 5, 30, "Text"],
Cell[CellGroupData[{
Cell[12579, 330, 831, 20, 30, "Input"],
Cell[13413, 352, 226, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13676, 363, 681, 17, 30, "Input"],
Cell[14360, 382, 375, 7, 30, "Output"]
}, Open  ]],
Cell[14750, 392, 569, 9, 57, "Text"],
Cell[15322, 403, 2214, 40, 50, "Input"],
Cell[17539, 445, 801, 14, 30, "Input"],
Cell[18343, 461, 3941, 92, 107, "Input"],
Cell[22287, 555, 277, 5, 38, "Text"],
Cell[CellGroupData[{
Cell[22589, 564, 6080, 140, 126, "Input"],
Cell[28672, 706, 345, 7, 30, "Output"],
Cell[29020, 715, 332, 7, 30, "Output"]
}, Open  ]],
Cell[29367, 725, 540, 8, 57, "Text"],
Cell[29910, 735, 2987, 77, 69, "Input"],
Cell[32900, 814, 265, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[33190, 822, 2499, 70, 69, "Input"],
Cell[35692, 894, 292, 7, 30, "Output"],
Cell[35987, 903, 271, 6, 30, "Output"],
Cell[36261, 911, 303, 6, 30, "Output"]
}, Open  ]],
Cell[36579, 920, 1082, 20, 133, "Text"],
Cell[37664, 942, 728, 19, 50, "Input"],
Cell[38395, 963, 656, 10, 68, "Text"],
Cell[CellGroupData[{
Cell[39076, 977, 924, 21, 30, "Input"],
Cell[40003, 1000, 111, 1, 30, "Output"]
}, Open  ]],
Cell[40129, 1004, 252, 6, 30, "Input"],
Cell[40384, 1012, 909, 16, 76, "Text"],
Cell[CellGroupData[{
Cell[41318, 1032, 1271, 31, 50, "Input"],
Cell[42592, 1065, 369, 8, 30, "Output"],
Cell[42964, 1075, 315, 6, 30, "Output"]
}, Open  ]],
Cell[43294, 1084, 455, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[43774, 1094, 2558, 69, 69, "Input"],
Cell[46335, 1165, 366, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46738, 1178, 2721, 78, 69, "Input"],
Cell[49462, 1258, 288, 6, 30, "Output"]
}, Open  ]],
Cell[49765, 1267, 241, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[50031, 1274, 2702, 76, 69, "Input"],
Cell[52736, 1352, 245, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53018, 1362, 2672, 78, 69, "Input"],
Cell[55693, 1442, 312, 6, 30, "Output"]
}, Open  ]],
Cell[56020, 1451, 233, 3, 30, "Text"],
Cell[CellGroupData[{
Cell[56278, 1458, 776, 15, 30, "Input"],
Cell[57057, 1475, 498, 10, 30, "Output"]
}, Open  ]],
Cell[57570, 1488, 249, 4, 38, "Text"],
Cell[CellGroupData[{
Cell[57844, 1496, 4126, 86, 259, "Input"],
Cell[61973, 1584, 1437, 21, 30, "Output"]
}, Open  ]],
Cell[63425, 1608, 272, 4, 38, "Text"],
Cell[63700, 1614, 5043, 116, 278, "Input"],
Cell[68746, 1732, 249, 4, 38, "Text"],
Cell[68998, 1738, 10299, 211, 639, "Input"],
Cell[CellGroupData[{
Cell[79322, 1953, 1384, 20, 30, "Input"],
Cell[80709, 1975, 91991, 1515, 331, "Output"]
}, Open  ]],
Cell[172715, 3493, 4387, 87, 202, "Input"],
Cell[177105, 3582, 20239, 350, 407, "Input"],
Cell[197347, 3934, 837, 12, 38, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[198233, 3952, 64, 1, 76, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[198322, 3957, 118, 2, 63, "Section"],
Cell[198443, 3961, 94, 1, 30, "Input"]
}, Open  ]]
}, Open  ]]
}
]
*)

