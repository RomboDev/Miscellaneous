(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    918653,      17886]
NotebookOptionsPosition[    895590,      17569]
NotebookOutlinePosition[    895935,      17584]
CellTagsIndexPosition[    895892,      17581]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Sampling (Distributions)", "Title",
 CellChangeTimes->{{3.813927992506651*^9, 3.813927998940215*^9}, {
  3.8140205277699747`*^9, 
  3.814020537083385*^9}},ExpressionUUID->"62b707ab-eccc-49f9-a975-\
73757bfc9e93"],

Cell[TextData[{
 "So what is a distribution in statistics and probability theory ? \nA \
distribution is a function that shows the possible values for a variable and \
how often they occur or in other words, \na distribution is the complete \
picture of the long run pattern of variability of random variable.\n\nLet\
\[CloseCurlyQuote]s first clear up a little misconception. A \
\[OpenCurlyQuote]probability function\[CloseCurlyQuote] as it is, it\
\[CloseCurlyQuote]s not well defined. \nGenerally speaking in statistics and \
PT when we refer to a \[OpenCurlyQuote]probability function\[CloseCurlyQuote] \
we generally mean a Probability Mass Function for discrete distributions and \
a Probability Density Function for continuous distributions. So the term \
arises when speaking generally about distributions. \n\n",
 StyleBox["A distribution can be characterized by 5 probability functions :",
  FontWeight->"Bold"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.813928632134993*^9, 3.813928709006806*^9}, {
   3.8139287443200293`*^9, 3.813928852026896*^9}, {3.81392897238282*^9, 
   3.813928975109857*^9}, {3.813929049625828*^9, 3.813929049827927*^9}, 
   3.8139290826996603`*^9, {3.813929114805587*^9, 3.813929247556847*^9}, {
   3.813929293954431*^9, 3.813929389126601*^9}, {3.813929566111897*^9, 
   3.813929572704402*^9}, {3.813931479720705*^9, 3.8139314850279217`*^9}, {
   3.814533015177682*^9, 
   3.814533045148353*^9}},ExpressionUUID->"999e1d97-0f09-41fb-b291-\
2fbe9a68d28b"],

Cell[TextData[{
 "- the ",
 StyleBox["probability density function (",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["pdf",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[")",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 ", f(t) is defined as the probability of observing an event within a small \
time interval [t, t + \[Laplacian]t], as \[Laplacian]t tends to zero. The pdf \
is a nonnegative function, f(t) \[GreaterEqual] 0 for all t, provides \
information about the proportion of the events in any time interval (the \
frequency of failures in relation to time), and the area between the pdf and \
the time axes is defined to be unity. Related to space instead of time it \
gives the probability that x is between two points a and b :"
}], "Text",
 CellChangeTimes->{
  3.813929727807754*^9, {3.813929757817647*^9, 3.813929781799543*^9}, {
   3.813929836474627*^9, 3.813929950884356*^9}, {3.813929985112712*^9, 
   3.813930011793838*^9}, {3.8139302622646837`*^9, 3.813930331476017*^9}, {
   3.813930506811982*^9, 3.813930522777878*^9}, {3.813930563490067*^9, 
   3.813930563490725*^9}, 3.813931857425477*^9, {3.814032653282097*^9, 
   3.8140326556496696`*^9}},ExpressionUUID->"07acadeb-bc12-47e0-97bd-\
dc1b3a0c1622"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   StyleBox[
    RowBox[{"p", "[", 
     RowBox[{"a", "\[LessEqual]", "x", "\[LessEqual]", "b"}], "]"}],
    FontSize->24], 
   StyleBox["=",
    FontSize->24], 
   StyleBox[
    FormBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"f", "(", "x", ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}],
     TraditionalForm],
    FontSize->18]}],
  FontColor->RGBColor[1, 0.5, 0]], "\n", 
 StyleBox[
  RowBox[{
   StyleBox[
    FormBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{
       RowBox[{"f", "(", "x", ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}],
     TraditionalForm],
    FontSize->18], 
   StyleBox["=",
    FontSize->24], 
   StyleBox["1",
    FontSize->24]}],
  FontColor->RGBColor[1, 0.5, 0]], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{"\[ForAll]", 
    RowBox[{"x", " ", "\[Element]", " ", "\[DoubleStruckCapitalR]"}]}], " ", 
   "\[Implies]", " ", 
   RowBox[{
    RowBox[{"p", 
     RowBox[{"(", "x", ")"}]}], " ", "\[GreaterEqual]", " ", "0"}]}],
  FontSize->24,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.8140326358803062`*^9, 
  3.8140326775828953`*^9}},ExpressionUUID->"2a7b5d70-06c6-49af-b53a-\
b3c837464b48"],

Cell[TextData[{
 "\n- the ",
 StyleBox["cumulative distribution function (",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["cdf",
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" )",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 ", F(t), is defined as the integral of the pdf over the interval [0, t] and \
represents the probability that a unit\[CloseCurlyQuote]s lifetime does not \
exceed time t or the proportion of units whose lifetimes do not exceed time \
t. It is denoted by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "X"], "(", "x", ")"}], TraditionalForm]],
  ExpressionUUID->"21af877d-18e5-4e02-84b2-d16825313cb9"],
 ", where the random variable is the subscript and the realization is the \
argument. Let look a the properties of the ",
 StyleBox["cdf",
  FontSlant->"Italic"],
 " : "
}], "Text",
 CellChangeTimes->{{3.81393018566131*^9, 3.813930189364326*^9}, {
  3.813930338133803*^9, 3.8139304173341713`*^9}, {3.813930455739636*^9, 
  3.813930621587538*^9}, {3.8139306572297993`*^9, 3.8139307773114777`*^9}, {
  3.813931433455493*^9, 3.8139314356894407`*^9}, {3.813931860979116*^9, 
  3.813931861063307*^9}, {3.814032737882554*^9, 
  3.814032738354106*^9}},ExpressionUUID->"d88fdcb7-539f-4613-955c-\
be1928657087"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{
      StyleBox[
       FormBox[
        RowBox[{"0", "\[LessEqual]", 
         SubscriptBox["F", "x"]}],
        TraditionalForm],
       FontSize->18], 
      StyleBox[
       RowBox[{"(", "x", ")"}],
       FontSize->24]}], 
     StyleBox["\[LessEqual]",
      FontSize->24], 
     StyleBox[" ",
      FontSize->24], 
     StyleBox["1",
      FontSize->24]}],
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox["\n",
    FontSize->24,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{
     RowBox[{
      StyleBox[
       FormBox[
        SubscriptBox["x", "1"],
        TraditionalForm],
       FontSize->18], 
      StyleBox[" ",
       FontSize->18], 
      StyleBox["\[GreaterEqual]",
       FontSize->24], 
      StyleBox[" ",
       FontSize->24], 
      StyleBox[
       FormBox[
        SubscriptBox["x", "2"],
        TraditionalForm],
       FontSize->18]}], 
     StyleBox[" ",
      FontSize->24], 
     StyleBox["\[Implies]",
      FontSize->24], 
     StyleBox[" ",
      FontSize->24], 
     StyleBox[
      FormBox[
       RowBox[{
        RowBox[{
         SubscriptBox["F", "X"], "(", 
         SubscriptBox["x", "1"], ")"}], " ", "\[GreaterEqual]", " ", 
        RowBox[{
         SubscriptBox["F", "X"], "(", 
         SubscriptBox["x", "2"], ")"}]}],
       TraditionalForm],
      FontSize->18]}],
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{"ie", ".", "monotonically"}], " ", "non"}], "-", 
      RowBox[{"decreasing", " ", "function"}]}], "*)"}],
    FontColor->GrayLevel[0.5]], 
   StyleBox["\n",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    FormBox[
     RowBox[{
      RowBox[{
       SubscriptBox["lim", 
        RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
       RowBox[{
        SubscriptBox["F", "X"], "(", "x", ")"}]}], " ", "=", " ", "1"}],
     TraditionalForm],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox["\[LineSeparator]",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    FormBox[
     RowBox[{
      RowBox[{
       SubscriptBox["lim", 
        RowBox[{"n", "\[Rule]", 
         RowBox[{"-", "\[Infinity]"}]}]], 
       RowBox[{
        SubscriptBox["F", "X"], "(", "x", ")"}]}], " ", "=", " ", "0"}],
     TraditionalForm],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]]}]}]], "DisplayFormula",
 CellChangeTimes->{{3.8140326946709223`*^9, 3.8140327179471827`*^9}, {
  3.814032758016881*^9, 
  3.814032765082388*^9}},ExpressionUUID->"ab2369aa-436f-4fc1-82c5-\
9b2f45809643"],

Cell[TextData[{
 "\n- the ",
 StyleBox["reliability function R(t)",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 ", often also referred to as the survival function, is defined as the \
complement of the ",
 StyleBox["cdf ",
  FontSlant->"Italic"],
 "and corresponds to the probability of a unit to survive up to time t, or \
the proportion of units that survive up to time t. The reliability function \
is a nonnegative strictly decreasing function defined as one for t = 0 (the \
probability of a unit surviving at least to time zero is one) and zero for t \
= +\[Infinity] (the probability of a unit surviving to infinite time is zero)."
}], "Text",
 CellChangeTimes->{{3.813930920057852*^9, 3.8139309562987432`*^9}, {
  3.813931007260302*^9, 3.813931008834815*^9}, {3.813931449545762*^9, 
  3.813931455495085*^9}, {3.813931867280019*^9, 3.8139318673611727`*^9}, {
  3.814032790327652*^9, 
  3.8140327919294*^9}},ExpressionUUID->"7eac9f45-943b-47b3-81e5-057f766d2f15"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"R", 
    RowBox[{"(", "t", ")"}]}], "=", 
   RowBox[{"1", "-", 
    RowBox[{"F", 
     RowBox[{"(", "t", ")"}]}]}]}],
  FontSize->24,
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8140327975523987`*^9, 
  3.814032801580818*^9}},ExpressionUUID->"efaab0d7-f0eb-438d-9215-\
98d0aa57b9d1"],

Cell[TextData[{
 "\n- the",
 StyleBox[" hazard function (",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["hf",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["),",
  FontColor->RGBColor[1, 0.5, 0]],
 " is defined as the conditional probability of an item to fail within the \
time interval [t, t + \[Laplacian]t], having survived to time t. The hazard \
function models which periods have the highest or lowest chances of an event. \
The function is defined as the instantaneous risk that the event of interest \
happens, within a very narrow time frame. It may be increasing, decreasing, \
or constant through time and is derived through the following equation: "
}], "Text",
 CellChangeTimes->{{3.813931062767434*^9, 3.813931107253579*^9}, {
  3.8139311931108093`*^9, 3.8139312499712143`*^9}, {3.813931310224942*^9, 
  3.813931317740685*^9}, {3.813931870564151*^9, 3.8139318706311398`*^9}, {
  3.8140328051353416`*^9, 
  3.814032807001031*^9}},ExpressionUUID->"68d3dabd-437a-43c6-8091-\
8e8affb4f175"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"h", 
    RowBox[{"(", "t", ")"}]}], "=", 
   RowBox[{"f", 
    RowBox[{
     RowBox[{"(", "t", ")"}], "/", "R"}], 
    RowBox[{"(", "t", ")"}]}]}],
  FontSize->24,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8140328119787703`*^9, 
  3.814032815350297*^9}},ExpressionUUID->"57013fda-1ef5-4b47-85b8-\
f802c1769032"],

Cell[TextData[{
 "\n- the ",
 StyleBox["cumulative hazard function (",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["chf",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" )",
  FontColor->RGBColor[1, 0.5, 0]],
 ", is defined as the integral of h(t) over the interval [0,t]. The chf is a \
nonnegative strictly increasing function defined to be zero at t = 0 and + \
\[Infinity]."
}], "Text",
 CellChangeTimes->{{3.813931290332712*^9, 3.8139312945408983`*^9}, 
   3.8139313313988028`*^9, {3.8139313652833567`*^9, 3.813931416453693*^9}, {
   3.813931875177367*^9, 3.813931875244025*^9}, {3.814032821130949*^9, 
   3.814032822438806*^9}},ExpressionUUID->"3b0a8926-4326-438d-a679-\
5f04298ccbc2"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"H", 
    RowBox[{"(", "t", ")"}]}], " ", "=", " ", 
   FormBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "1"], 
     RowBox[{
      RowBox[{"h", "(", "u", ")"}], 
      RowBox[{"\[DifferentialD]", "u"}]}]}],
    TraditionalForm]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.8140328273311787`*^9},ExpressionUUID->"6dbe4e74-00db-48c4-b8f5-\
a9ec20854821"],

Cell[TextData[{
 "\n",
 StyleBox["The pdf is the most common function used to define a distribution",
  
  FontWeight->"Bold"],
 ", for two reasons :\n- the first is that it gives the shape of the density \
curve, which is the easiest way to recognize and review a distribution.\n- \
the second is that the pdf is always in a useful form, whereas the cdf \
frequently doesn\[CloseCurlyQuote]t have a closed form.\n\nHowever take care \
that every distribution has a cdf (in closed or not closed form) while it\
\[CloseCurlyQuote]s not always true for the pdf (ie Cantor distribution). "
}], "Text",
 CellChangeTimes->{{3.813936088859707*^9, 3.813936123274302*^9}, {
   3.813936355206016*^9, 3.813936418431037*^9}, {3.8139365042428827`*^9, 
   3.813936560316743*^9}, {3.813936626870079*^9, 3.81393662795321*^9}, 
   3.814462115330686*^9},ExpressionUUID->"ffcee1a1-4f9b-4bd8-bd84-\
264ea1118ac0"],

Cell[TextData[{
 "\n",
 StyleBox["All the five probability functions are mathematically equivalent \
and if one of them is known, all five can be derived.",
  FontVariations->{"Underline"->True}],
 "\n\n- ",
 StyleBox["if we have a pdf we can get a cdf, by integration",
  FontColor->RGBColor[1, 0.5, 0]],
 "\n\nFor example, let\[CloseCurlyQuote]s take the Rayleigh distribution. It\
\[CloseCurlyQuote]s characterized by the pdf :"
}], "Text",
 CellChangeTimes->{{3.813931495537466*^9, 3.813931574082616*^9}, {
   3.813931803538321*^9, 3.8139318499539948`*^9}, 3.813933247547361*^9, {
   3.813933997449893*^9, 3.8139340697430058`*^9}, {3.813936640571563*^9, 
   3.813936654139044*^9}, {3.813948484066238*^9, 
   3.81394848865777*^9}},ExpressionUUID->"e978336e-1cf3-4db4-8e38-\
af2bab448e54"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"for", " ", "piecewise", " ", "fncs", " ", "use"}], " ", "->", 
    " ", 
    RowBox[{"esc", " ", "pw", " ", "ese", " ", "to", " ", "enter", " ", 
     RowBox[{"{", " ", 
      RowBox[{
       RowBox[{"and", " ", "ctrl"}], "-", 
       RowBox[{"comma", " ", "and", " ", "then", " ", "ctrl"}], "-", 
       RowBox[{
       "enter", " ", "for", " ", "additional", " ", "piecewise", " ", 
        "cases"}]}], " "}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"pdf", ",", "\[Sigma]", ",", "pw"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pw", "=", 
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {"0", 
            RowBox[{"x", "<", "0"}]},
           {
            RowBox[{
             FractionBox["x", 
              SuperscriptBox["\[Sigma]", "2"]], 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"(", 
               RowBox[{"-", 
                FractionBox[
                 SuperscriptBox["x", "2"], 
                 RowBox[{"2", 
                  SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]]}], 
            RowBox[{"x", "\[GreaterEqual]", "0"}]}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "[", "x_", "]"}], ":=", 
     RowBox[{
      FractionBox["x", 
       SuperscriptBox["\[Sigma]", "2"]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"(", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["x", "2"], 
          RowBox[{"2", 
           SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]]}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8138589797297363`*^9, 3.8138589825387497`*^9}, {
   3.813859014718689*^9, 3.813859113239141*^9}, {3.8138608371901827`*^9, 
   3.813860847611011*^9}, {3.813864990046328*^9, 3.813865007256638*^9}, {
   3.813933501029933*^9, 3.813933526703068*^9}, {3.81393408988099*^9, 
   3.8139341666504173`*^9}, {3.813934206437509*^9, 3.813934379118782*^9}, {
   3.813934647459766*^9, 3.813934723325103*^9}, {3.813934764231091*^9, 
   3.813934778559985*^9}, {3.813934814672847*^9, 3.813934820144021*^9}, {
   3.81393486199562*^9, 3.813934878932159*^9}, {3.813934934261106*^9, 
   3.813934981558646*^9}, {3.813935088482695*^9, 3.813935117637826*^9}, {
   3.8139351672520638`*^9, 3.813935197126795*^9}, {3.813937480861837*^9, 
   3.8139375336680517`*^9}, {3.813938113358243*^9, 3.813938122246779*^9}, {
   3.813938335003561*^9, 3.813938357188271*^9}, {3.8139384705701427`*^9, 
   3.8139385400470457`*^9}, {3.8139386470351677`*^9, 3.81393869597661*^9}, 
   3.813938729216132*^9, {3.8139388139001637`*^9, 3.8139388465482187`*^9}, 
   3.8139389080601683`*^9, {3.8139399782728558`*^9, 3.813940106297845*^9}, {
   3.813945484909477*^9, 
   3.813945489630587*^9}},ExpressionUUID->"beac6028-7d3b-4735-96ef-\
15ac722fea7d"],

Cell["\<\
Now, let\[CloseCurlyQuote]s integrate the pdf to get the cdf (all are \
equivalent ways to do that) :\
\>", "Text",
 CellChangeTimes->{{3.8139343953405113`*^9, 3.813934410011066*^9}, {
  3.813935057493478*^9, 3.813935066493389*^9}, {3.813935208357629*^9, 
  3.813935210223577*^9}},ExpressionUUID->"d7e31401-4419-4dfc-89b5-\
edb5332c6af5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "x"], 
   RowBox[{
    FractionBox["x", 
     SuperscriptBox["\[Sigma]", "2"]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", 
         SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}]], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "x"], 
   RowBox[{
    RowBox[{"pdf", "[", "x", "]"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"pdf", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "x"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"definite", " ", "integral", " ", "form"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8138589797297363`*^9, 3.8138589825387497`*^9}, {
   3.813859014718689*^9, 3.813859113239141*^9}, {3.8138608371901827`*^9, 
   3.813860847611011*^9}, {3.813864990046328*^9, 3.813865007256638*^9}, {
   3.813933501029933*^9, 3.813933526703068*^9}, {3.81393408988099*^9, 
   3.8139341666504173`*^9}, 3.813934206437509*^9, {3.813934417459526*^9, 
   3.8139344236662292`*^9}, {3.813935029552239*^9, 3.8139350485169363`*^9}, {
   3.813935123582275*^9, 3.813935128643271*^9}, {3.8139352947799883`*^9, 
   3.8139353513438873`*^9}, {3.8139371160205708`*^9, 3.813937117482108*^9}, {
   3.813945513956184*^9, 3.813945577650868*^9}, {3.8140418627977867`*^9, 
   3.814041871322719*^9}},ExpressionUUID->"9bda0c55-e3de-46fc-a54b-\
3b07412574b0"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{
  3.813933422339987*^9, 3.813933527766871*^9, 3.813934424672559*^9, {
   3.8139350365222816`*^9, 3.813935049096195*^9}, 3.813935129213253*^9, 
   3.813935213527371*^9, {3.813935306088478*^9, 3.813935327755436*^9}, {
   3.8139371196145763`*^9, 3.813937131082801*^9}, 3.813938555070031*^9, 
   3.813938707929573*^9, 3.813938852682041*^9, 3.813938912688592*^9, 
   3.813939128833227*^9, 3.813945286103479*^9, {3.8139455167566843`*^9, 
   3.813945578351022*^9}, 3.8139530610146933`*^9, 3.813955663779112*^9, 
   3.813957241008416*^9, 3.813957483898243*^9, 3.81400488137183*^9, 
   3.814020545600555*^9, 3.814021448435253*^9, {3.814041828261998*^9, 
   3.8140418722186613`*^9}, 
   3.81404191603386*^9},ExpressionUUID->"8410bdec-2340-46b7-8499-\
b30830b2d0c2"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{
  3.813933422339987*^9, 3.813933527766871*^9, 3.813934424672559*^9, {
   3.8139350365222816`*^9, 3.813935049096195*^9}, 3.813935129213253*^9, 
   3.813935213527371*^9, {3.813935306088478*^9, 3.813935327755436*^9}, {
   3.8139371196145763`*^9, 3.813937131082801*^9}, 3.813938555070031*^9, 
   3.813938707929573*^9, 3.813938852682041*^9, 3.813938912688592*^9, 
   3.813939128833227*^9, 3.813945286103479*^9, {3.8139455167566843`*^9, 
   3.813945578351022*^9}, 3.8139530610146933`*^9, 3.813955663779112*^9, 
   3.813957241008416*^9, 3.813957483898243*^9, 3.81400488137183*^9, 
   3.814020545600555*^9, 3.814021448435253*^9, {3.814041828261998*^9, 
   3.8140418722186613`*^9}, 
   3.8140419160594273`*^9},ExpressionUUID->"b82a1a80-9cf6-4381-83a4-\
ede32b951c09"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     RowBox[{"2", " ", 
      SuperscriptBox["\[Sigma]", "2"]}]]}]]}]], "Output",
 CellChangeTimes->{
  3.813933422339987*^9, 3.813933527766871*^9, 3.813934424672559*^9, {
   3.8139350365222816`*^9, 3.813935049096195*^9}, 3.813935129213253*^9, 
   3.813935213527371*^9, {3.813935306088478*^9, 3.813935327755436*^9}, {
   3.8139371196145763`*^9, 3.813937131082801*^9}, 3.813938555070031*^9, 
   3.813938707929573*^9, 3.813938852682041*^9, 3.813938912688592*^9, 
   3.813939128833227*^9, 3.813945286103479*^9, {3.8139455167566843`*^9, 
   3.813945578351022*^9}, 3.8139530610146933`*^9, 3.813955663779112*^9, 
   3.813957241008416*^9, 3.813957483898243*^9, 3.81400488137183*^9, 
   3.814020545600555*^9, 3.814021448435253*^9, {3.814041828261998*^9, 
   3.8140418722186613`*^9}, 
   3.814041916070438*^9},ExpressionUUID->"7edc7b73-052c-42cc-913d-\
259e0bb5b637"]
}, Open  ]],

Cell[TextData[{
 "\n- ",
 StyleBox["if we have a cdf we can get a pdf, by differentiation",
  FontColor->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.813938919780243*^9, 3.813938969549947*^9}, 
   3.8139458313173037`*^9},ExpressionUUID->"ecd64bbd-ffe3-4258-b3e6-\
c37c6f8faa4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], 
        RowBox[{"2", " ", 
         SuperscriptBox["\[Sigma]", "2"]}]]}]]}], ",", "x"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "D", " ", "is", " ", "mathematica", " ", "simbol", " ", "for", " ", 
    "differentiation"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.813934445402163*^9, 3.813934480972966*^9}, {
   3.8139345282469463`*^9, 3.813934533249114*^9}, {3.8139353821459417`*^9, 
   3.813935394429772*^9}, {3.813935543312439*^9, 3.813935563543173*^9}, {
   3.813937147951892*^9, 3.813937151301469*^9}, 3.8139387680005617`*^9, {
   3.813939066052898*^9, 3.813939121175349*^9}, {3.814041889994252*^9, 
   3.8140419059679728`*^9}},ExpressionUUID->"b69c847e-2d97-48fd-9998-\
de55c3736d19"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]], " ", "x"}], 
  SuperscriptBox["\[Sigma]", "2"]]], "Output",
 CellChangeTimes->{
  3.81393448235598*^9, 3.8139345340670156`*^9, {3.813935385974041*^9, 
   3.8139353951589937`*^9}, {3.813935544903824*^9, 3.813935564206257*^9}, {
   3.813937131119169*^9, 3.813937152168635*^9}, {3.813938750910452*^9, 
   3.8139387691150627`*^9}, 3.81393886973209*^9, 3.8139389373890953`*^9, {
   3.8139391044279947`*^9, 3.813939128859597*^9}, 3.813953063105177*^9, 
   3.8139556638162947`*^9, 3.813957241041009*^9, 3.8139574839393997`*^9, 
   3.814004881405909*^9, 3.814020545624157*^9, 3.814021448583583*^9, 
   3.814041828286538*^9, {3.8140418799512463`*^9, 
   3.814041916075457*^9}},ExpressionUUID->"3af4e281-f6a0-4c22-b57d-\
8f437cf9bcea"]
}, Open  ]],

Cell["\<\
We can use also a custom ProbabilityDistribution build over a cdf and then \
get its pdf with Mathematica buld-ins\
\>", "Text",
 CellChangeTimes->{{3.813945848414544*^9, 
  3.813945886418483*^9}},ExpressionUUID->"08aa4327-d3e5-48ca-9477-\
360d3b69fb63"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalD]", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<CDF\>\"", ",", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         FractionBox[
          SuperscriptBox["x", "2"], 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Sigma]", "2"]}]]}]]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PDF", "[", "\[ScriptCapitalD]", "]"}]}], "Input",
 CellChangeTimes->{{3.813944981962538*^9, 3.813945078014792*^9}, {
  3.813945110613035*^9, 3.813945213178207*^9}, {3.814041911574703*^9, 
  3.81404191173013*^9}},ExpressionUUID->"81582563-c4fc-428a-9907-\
00d574d17014"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"\[FormalX]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[FormalX]", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
           SuperscriptBox["\[Sigma]", "2"]], 
          RowBox[{"\[FormalX]", ">", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.8139450421072206`*^9, 3.8139450787630777`*^9}, 
   3.813945121347413*^9, {3.81394518619088*^9, 3.813945216524308*^9}, 
   3.813945903292419*^9, 3.813947839529245*^9, 3.8139530656155577`*^9, 
   3.813955663848598*^9, 3.813957241071445*^9, 3.813957483969267*^9, 
   3.814004881436069*^9, 3.8140205457685947`*^9, 3.814021448729135*^9, 
   3.814041828348693*^9, {3.8140418830149107`*^9, 
   3.814041916125923*^9}},ExpressionUUID->"02039e26-7d9b-45ce-bb80-\
0e6c77e09c7a"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"\[FormalX]", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", 
              FractionBox[
               SuperscriptBox["\[FormalX]", "2"], 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Sigma]", "2"]}]]}]]}], 
           SuperscriptBox["\[Sigma]", "2"]], 
          RowBox[{"\[FormalX]", ">", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "Listable"}], "]"}]], "Output",
 CellChangeTimes->{{3.8139450421072206`*^9, 3.8139450787630777`*^9}, 
   3.813945121347413*^9, {3.81394518619088*^9, 3.813945216524308*^9}, 
   3.813945903292419*^9, 3.813947839529245*^9, 3.8139530656155577`*^9, 
   3.813955663848598*^9, 3.813957241071445*^9, 3.813957483969267*^9, 
   3.814004881436069*^9, 3.8140205457685947`*^9, 3.814021448729135*^9, 
   3.814041828348693*^9, {3.8140418830149107`*^9, 
   3.8140419161293993`*^9}},ExpressionUUID->"a761dd25-44da-4c68-b107-\
b85d6e80ce25"]
}, Open  ]],

Cell["\<\
The derivation of the remaing probability functions is easy and left as an \
exercise.\
\>", "Text",
 CellChangeTimes->{{3.8139391772021313`*^9, 3.813939202627965*^9}, 
   3.8139393582369013`*^9, {3.813947514066991*^9, 3.81394758769057*^9}, {
   3.813947631497554*^9, 3.813947689095518*^9}, 
   3.813947745592977*^9},ExpressionUUID->"77d5665c-9b1b-4a18-b02e-\
f69e0a6ee515"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nLet\[CloseCurlyQuote]s see some simple ",
 StyleBox["practical examples",
  FontVariations->{"Underline"->True}],
 ".\n\n\nLet U be a random variable with a Uniform(0, 1) distribution, and \
let  X=-Log[1-U]\nThe goal is to find the pdf of  X.\n\n",
 StyleBox["-",
  FontColor->RGBColor[1, 0.5, 0]],
 " First start by identifing the range of possible values of X.\nWhen \nu=0 \
\[Rule] -Log[1-u] = -Log[1] = 0\nu=1 \[Rule] -Log[1-u] = -Log[0] = \
\[Infinity]\nso X ~ [0,\[Infinity]]"
}], "Text",
 CellChangeTimes->{{3.8145281704711514`*^9, 3.814528238952507*^9}, {
   3.814528268965893*^9, 3.81452847126368*^9}, {3.814528659814775*^9, 
   3.81452869056938*^9}, {3.814528905825408*^9, 3.81452890990107*^9}, {
   3.8145299145395603`*^9, 3.814529918745257*^9}, {3.814531964539255*^9, 
   3.814531965033894*^9}, {3.814532721103141*^9, 3.814532750598392*^9}, 
   3.8145345025903*^9, {3.81453936066368*^9, 
   3.814539376073544*^9}},ExpressionUUID->"bb455d0f-1e6b-4233-a035-\
3b052d1e08dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"\"\<Range\>\"", ",", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "u"}], "]"}]}], ",", 
     RowBox[{"u", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "u"}], "]"}]}], ",", 
     RowBox[{"u", "\[Rule]", "1"}]}], "]"}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "-", "u"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<-Log[1-u]\>\""}], "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Pink", ",", "Bold"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.814528695523711*^9, 3.8145287510526667`*^9}, {
   3.814531901111888*^9, 3.8145319049838123`*^9}, {3.814531952885323*^9, 
   3.8145320038959017`*^9}, {3.8145320354157963`*^9, 3.814532063651309*^9}, 
   3.814537682752034*^9, 3.814537728800909*^9, {3.8145377638354483`*^9, 
   3.814537914744911*^9}, {3.814890193464611*^9, 
   3.8148902600423098`*^9}},ExpressionUUID->"8ed7a0a8-c0a1-491c-8b2a-\
9567d40eb4e3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Range\"\>", ",", "0", ",", "\[Infinity]"}], "}"}]], "Output",
 CellChangeTimes->{{3.814528726669742*^9, 3.814528752571926*^9}, {
   3.814531999250893*^9, 3.814532004832046*^9}, 3.814532064745284*^9, {
   3.814537711129524*^9, 3.814537729337365*^9}, {3.814537798884948*^9, 
   3.814537915406374*^9}, {3.814890218810585*^9, 
   3.814890260581057*^9}},ExpressionUUID->"038e4d4e-bbcd-4658-ba87-\
bee36f7f6e85"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
vd3wCToKGbj4YGu/ECR8w/VC3OjobyE7Tas=
       "]]},
     Annotation[#, "Charting`Private`Tag$18841#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"-Log[1-u]\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    RGBColor[1, 0.5, 0.5], Bold],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 3.6686748301261836`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814528726669742*^9, 3.814528752571926*^9}, {
   3.814531999250893*^9, 3.814532004832046*^9}, 3.814532064745284*^9, {
   3.814537711129524*^9, 3.814537729337365*^9}, {3.814537798884948*^9, 
   3.814537915406374*^9}, {3.814890218810585*^9, 
   3.8148902606076393`*^9}},ExpressionUUID->"221a3405-4c65-4485-a255-\
8acabfc890cb"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n-",
  FontColor->RGBColor[1, 0.5, 0]],
 " Then find the cdf, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "X"], "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a9f04127-6561-4a83-97be-ef18243a8c07"],
 "\n\nNow by the definition of the cdf we know that "
}], "Text",
 CellChangeTimes->{{3.814528867058161*^9, 3.814528885442771*^9}, {
   3.8145289184248343`*^9, 3.8145289210350723`*^9}, 3.814529631215211*^9, {
   3.814536148151931*^9, 3.814536150830016*^9}, {3.814536249627018*^9, 
   3.814536249860161*^9}, 
   3.8145394050773163`*^9},ExpressionUUID->"2debc4d9-3fb5-4fa7-9db4-\
960bd7614dba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["F", "X"], 
    RowBox[{"(", "x", ")"}]}], "=", 
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{"X", "\[LessEqual]", "x"}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"So", " ", "just", " ", "plugin", " ", "the", " ", "original", " ", 
  "eq", " ", "for", " ", "X"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"P", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "U"}], "]"}]}], "\[LessEqual]", "x"}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"and", " ", "solve", " ", "for", " ", "U"}]}], "Text",
 CellChangeTimes->{{3.814528955235216*^9, 3.8145290220613337`*^9}, 
   3.814529057570162*^9, {3.814536157646649*^9, 3.814536262857131*^9}, {
   3.814539421996593*^9, 3.814539425259852*^9}, 3.814539504864661*^9, 
   3.814539538705291*^9},ExpressionUUID->"c78d8250-680f-431f-bc3f-\
a2b4816927bf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"U", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "-", "U"}], "]"}]}], "==", "x"}], ",", "U"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.814529068372177*^9, 3.814529074150691*^9}, {
  3.8145291097478333`*^9, 3.814529124463662*^9}, {3.8145291652556677`*^9, 
  3.8145291777233143`*^9}, {3.8145292504663887`*^9, 3.8145292593365498`*^9}, {
  3.814529294992524*^9, 3.814529607702878*^9}, {3.814539506915085*^9, 
  3.8145395091157846`*^9}},ExpressionUUID->"7255db1e-e163-4c46-a10b-\
a4c208c9a0ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"U", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"1", "-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]]}], ",", 
      RowBox[{
       RowBox[{"-", "\[Pi]"}], "\[LessEqual]", 
       RowBox[{"Im", "[", "x", "]"}], "<", "\[Pi]"}]}], "]"}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814529576004328*^9, 3.814529608369773*^9}, 
   3.814539539757745*^9},ExpressionUUID->"9538d3a9-f921-4f4d-9d65-\
c1d5bbfd9c79"]
}, Open  ]],

Cell[TextData[{
 "So ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["F", "X"], " ", "=", " ", 
    RowBox[{
     RowBox[{"1", "-", 
      SuperscriptBox["e", 
       RowBox[{"-", "x"}]]}], " ", "=", " ", 
     RowBox[{"1", "-", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", "x"}], "]"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "6949df55-0e84-4fd3-8010-7262089e8995"]
}], "Text",
 CellChangeTimes->{{3.8145297303968067`*^9, 3.814529810496904*^9}, {
   3.814530030838318*^9, 3.814530097439642*^9}, {3.814530580968734*^9, 
   3.8145305909798613`*^9}, 3.814531038156633*^9, {3.8145312386634293`*^9, 
   3.814531247461289*^9}},ExpressionUUID->"9e274ca2-52be-48c1-ba36-\
015f83890f0f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"1", "-", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"RandomReal", "[", "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "10000"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"%", ",", "48", ",", " ", "\"\<CDF\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "u"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.814530673373518*^9, 3.8145307502120533`*^9}, {
   3.814530781756311*^9, 3.814530804888774*^9}, {3.8145308367696457`*^9, 
   3.814530893131852*^9}, {3.814530933430359*^9, 3.814531013824275*^9}, {
   3.81453105169108*^9, 3.8145311210571203`*^9}, {3.8145311649095488`*^9, 
   3.814531225905608*^9}, {3.814531385232977*^9, 3.814531420077468*^9}, {
   3.8145321169577723`*^9, 3.8145321894295387`*^9}, 3.814532222233076*^9, {
   3.814532256366507*^9, 
   3.8145323250576153`*^9}},ExpressionUUID->"fe3f80bf-caaa-4339-850e-\
8af7012d3dc1"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.238], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.238], Thickness[Small]}], 
      RectangleBox[{0., 0}, {0.01, 0.009000000000000001},
       RoundingRadius->0], 
      RectangleBox[{0.01, 0}, {0.02, 0.018600000000000002},
       RoundingRadius->0], RectangleBox[{0.02, 0}, {0.03, 0.0292},
       RoundingRadius->0], RectangleBox[{0.03, 0}, {0.04, 0.0391},
       RoundingRadius->0], RectangleBox[{0.04, 0}, {0.05, 0.0511},
       RoundingRadius->0], 
      RectangleBox[{0.05, 0}, {0.06, 0.061900000000000004},
       RoundingRadius->0], 
      RectangleBox[{0.06, 0}, {0.07, 0.07250000000000001},
       RoundingRadius->0], 
      RectangleBox[{0.07, 0}, {0.08, 0.08420000000000001},
       RoundingRadius->0], RectangleBox[{0.08, 0}, {0.09, 0.094},
       RoundingRadius->0], 
      RectangleBox[{0.09, 0}, {0.1, 0.10350000000000001},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.11, 0.1139},
       RoundingRadius->0], 
      RectangleBox[{0.11, 0}, {0.12, 0.12480000000000001},
       RoundingRadius->0], RectangleBox[{0.12, 0}, {0.13, 0.138},
       RoundingRadius->0], RectangleBox[{0.13, 0}, {0.14, 0.15},
       RoundingRadius->0], RectangleBox[{0.14, 0}, {0.15, 0.1618},
       RoundingRadius->0], RectangleBox[{0.15, 0}, {0.16, 0.1743},
       RoundingRadius->0], RectangleBox[{0.16, 0}, {0.17, 0.1867},
       RoundingRadius->0], 
      RectangleBox[{0.17, 0}, {0.18, 0.19870000000000002},
       RoundingRadius->0], 
      RectangleBox[{0.18, 0}, {0.19, 0.21050000000000002},
       RoundingRadius->0], RectangleBox[{0.19, 0}, {0.2, 0.2218},
       RoundingRadius->0], 
      RectangleBox[{0.2, 0}, {0.21, 0.23620000000000002},
       RoundingRadius->0], 
      RectangleBox[{0.21, 0}, {0.22, 0.24880000000000002},
       RoundingRadius->0], RectangleBox[{0.22, 0}, {0.23, 0.2617},
       RoundingRadius->0], 
      RectangleBox[{0.23, 0}, {0.24, 0.27440000000000003},
       RoundingRadius->0], 
      RectangleBox[{0.24, 0}, {0.25, 0.28700000000000003},
       RoundingRadius->0], RectangleBox[{0.25, 0}, {0.26, 0.2997},
       RoundingRadius->0], RectangleBox[{0.26, 0}, {0.27, 0.3136},
       RoundingRadius->0], RectangleBox[{0.27, 0}, {0.28, 0.3255},
       RoundingRadius->0], RectangleBox[{0.28, 0}, {0.29, 0.3403},
       RoundingRadius->0], RectangleBox[{0.29, 0}, {0.3, 0.3546},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.31, 0.367},
       RoundingRadius->0], RectangleBox[{0.31, 0}, {0.32, 0.3805},
       RoundingRadius->0], RectangleBox[{0.32, 0}, {0.33, 0.3952},
       RoundingRadius->0], RectangleBox[{0.33, 0}, {0.34, 0.4091},
       RoundingRadius->0], RectangleBox[{0.34, 0}, {0.35, 0.4257},
       RoundingRadius->0], RectangleBox[{0.35, 0}, {0.36, 0.4424},
       RoundingRadius->0], RectangleBox[{0.36, 0}, {0.37, 0.4597},
       RoundingRadius->0], RectangleBox[{0.37, 0}, {0.38, 0.4746},
       RoundingRadius->0], RectangleBox[{0.38, 0}, {0.39, 0.4919},
       RoundingRadius->0], RectangleBox[{0.39, 0}, {0.4, 0.5108},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.41, 0.5268},
       RoundingRadius->0], RectangleBox[{0.41, 0}, {0.42, 0.5441},
       RoundingRadius->0], RectangleBox[{0.42, 0}, {0.43, 0.5635},
       RoundingRadius->0], RectangleBox[{0.43, 0}, {0.44, 0.5815},
       RoundingRadius->0], RectangleBox[{0.44, 0}, {0.45, 0.5978},
       RoundingRadius->0], RectangleBox[{0.45, 0}, {0.46, 0.6168},
       RoundingRadius->0], RectangleBox[{0.46, 0}, {0.47, 0.634},
       RoundingRadius->0], RectangleBox[{0.47, 0}, {0.48, 0.6509},
       RoundingRadius->0], RectangleBox[{0.48, 0}, {0.49, 0.6704},
       RoundingRadius->0], RectangleBox[{0.49, 0}, {0.5, 0.6893},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.51, 0.7084},
       RoundingRadius->0], RectangleBox[{0.51, 0}, {0.52, 0.7298},
       RoundingRadius->0], 
      RectangleBox[{0.52, 0}, {0.53, 0.7513000000000001},
       RoundingRadius->0], RectangleBox[{0.53, 0}, {0.54, 0.7728},
       RoundingRadius->0], 
      RectangleBox[{0.54, 0}, {0.55, 0.7966000000000001},
       RoundingRadius->0], 
      RectangleBox[{0.55, 0}, {0.56, 0.8199000000000001},
       RoundingRadius->0], RectangleBox[{0.56, 0}, {0.57, 0.8403},
       RoundingRadius->0], RectangleBox[{0.57, 0}, {0.58, 0.8668},
       RoundingRadius->0], 
      RectangleBox[{0.58, 0}, {0.59, 0.8906000000000001},
       RoundingRadius->0], RectangleBox[{0.59, 0}, {0.6, 0.9142},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.61, 0.9395},
       RoundingRadius->0], RectangleBox[{0.61, 0}, {0.62, 0.9665},
       RoundingRadius->0], 
      RectangleBox[{0.62, 0}, {0.63, 0.9941000000000001},
       RoundingRadius->0], RectangleBox[{0.63, 0}, {0.64, 1.},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJwBcQKO/SFib1JlAgAAACYAAAACAAAASmXo0cDpVT4nXsDVwOlVPgRDGnDf
GTQ/J6FxgakaND8zn5icsxlEP2HCjs1HG0Q/S83Xsp0ZVD/3N5ZixhxUP1dk
972SGWQ/nEbaaeUfZD/dL4dDjRl0P06TTeU3JnQ/oBVPhooZhD9kqNAk9TKE
P4EIsyeJGZQ/IHf52rRMlD9YWaGv8PGkP9qIMECzYqU/C/+BXEcerz9qMKmB
Ug2wPyVR7ujDi7Q/PqmwbtpqtT93zjk/mPS5P8vpWg4XXrs/F7QR3gEBvz9R
7Z1oK4bAP7biQ8zPPMI/LqojiNOswz/Cap0bWezEPyWmaHCS2MY/9SY9D61t
xz9FDEgnVODJPwL5qxAbJco/bsvl0dA+zT82/2C2U67MPyoaw6OBPNA/zIQ0
zsYqzz/Bgmrk2NvRPx+Q6/mp7tA/3qd4jLuq0z/r99/e1TDSPzmECBrEZtU/
pOq7yg6O0z/z0GFzE1bXPw4dp+/k5NQ/Gcg3DFhL2T+MabVmoCTWP1lc3o8R
Lds/9kCr5Gh/1z88g2V/E0jdP3QyxLQWw9g/GX6jbrFP3z/frsSL0SHaP+MQ
KSf+yuA/+2rUmyl62z9YrsWhRfPhPytBB/5mu9w/LFScDK4R4z9HoiFnsRfe
PwTD61j0U+Q/dx1fIuFc3z/1G4VyvozlPyzsVQvXTeA/jHS9pHDL5j8TD/AI
xPrgP4wUYXDNM+g/BL+bryOc4T8h3DolBZPpP2s0u9kJS+I/rt6yBn0h6z+r
SWKgvvbiPwT/mhh+vOw/9esaEOaW4z/BeyTvXk/uP5N8bVoOOuQ/AAAAAAAA
8D9xdylI
        "]]},
      Annotation[#, "Charting`Private`Tag$21343#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.0128, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 0.64}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8145323077852783`*^9, 3.814532325625292*^9}, 
   3.814539541231511*^9},ExpressionUUID->"f5442028-d390-4357-8953-\
fbd581db0524"]
}, Open  ]],

Cell[TextData[{
 "\nFinally, find the pdf by differentiating the cdf with respect to x\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", "X"], "(", "x", ")"}], "=", 
    RowBox[{
     RowBox[{
      SuperscriptBox["F", "'"], "(", "x", ")"}], "=", 
     RowBox[{
      FractionBox["d", "dx"], 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "x"}]]}], ")"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "795e1c92-b72d-451a-a381-dc3101c7cd84"],
 "="
}], "Text",
 CellChangeTimes->{{3.8145297303968067`*^9, 3.814529810496904*^9}, {
  3.814530030838318*^9, 3.814530097439642*^9}, {3.814530580968734*^9, 
  3.8145305909798613`*^9}, {3.814532878873087*^9, 
  3.814532890008809*^9}},ExpressionUUID->"a7d8b293-db93-490e-b548-\
8b3b61471bad"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.814529815336294*^9, 3.814529877410812*^9}, {
  3.814529938476742*^9, 3.814529938993237*^9}, {3.814529993152853*^9, 
  3.8145300128155317`*^9}, {3.814530533402506*^9, 3.8145305433905067`*^9}, {
  3.814532427948908*^9, 3.814532433078847*^9}, {3.814532511019388*^9, 
  3.814532512866384*^9}, {3.8145326024405622`*^9, 3.81453263002542*^9}, {
  3.8145326619528217`*^9, 3.814532662692874*^9}, {3.814539656428318*^9, 
  3.814539738012567*^9}},ExpressionUUID->"029c06aa-3362-49bd-8c99-\
02bb85b59042"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", "x"}]]], "Output",
 CellChangeTimes->{{3.814529834240532*^9, 3.814529878912112*^9}, 
   3.814529939955599*^9, {3.814530004707507*^9, 3.814530013611741*^9}, 
   3.814530546735063*^9, 3.814532434426605*^9, 3.81453251389524*^9, {
   3.814532603396846*^9, 3.814532608817298*^9}, 3.814532664011097*^9, 
   3.814539542585472*^9, {3.814539657070513*^9, 
   3.814539740884554*^9}},ExpressionUUID->"b01bd05a-e04f-4ef7-9a2b-\
b1e54556a026"]
}, Open  ]],

Cell[TextData[{
 "So our pdf ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "X"], "=", 
    SuperscriptBox["e", 
     RowBox[{"-", "x"}]]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "d01f5614-f2ad-480e-a803-f584da4a29bd"],
 "\n\nWe could have used also this "
}], "Text",
 CellChangeTimes->{{3.8145306182023067`*^9, 3.8145306359325237`*^9}, {
  3.8145339565354548`*^9, 
  3.814533963330575*^9}},ExpressionUUID->"ab13ffef-837b-4fb5-8bef-\
0d504cda417a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CDF\>\"", ",", 
       RowBox[{"1", "-", 
        RowBox[{"Exp", "[", 
         RowBox[{"-", "x"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDF", "[", "\[ScriptCapitalD]", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.81453383335226*^9, 
  3.814533890546112*^9}},ExpressionUUID->"9a239e70-6fcc-4b4c-897e-\
ba5f7baa7abb"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"-", "\[FormalX]"}]], 
          RowBox[{"\[FormalX]", ">", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "Listable"}], "]"}]], "Output",
 CellChangeTimes->{
  3.814533891498621*^9},ExpressionUUID->"b9527276-6d1c-405e-8309-\
bbdbbc0c363a"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
==========\n",
  FontColor->GrayLevel[0.5]],
 "Let X be a random variable so that X~\[ScriptCapitalU](-1,1) and let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"Y", "=", 
    SuperscriptBox["X", "2"]}], TraditionalForm]],ExpressionUUID->
  "adea1ef1-1a36-45a6-b265-0af3ac2950ce"],
 ", find the distribution of Y."
}], "Text",
 CellChangeTimes->{{3.814534065640897*^9, 3.814534158878581*^9}, {
  3.8145345115219717`*^9, 3.8145345129831343`*^9}, {3.814538141949456*^9, 
  3.814538153151544*^9}, {3.814540798596027*^9, 
  3.8145408066983633`*^9}},ExpressionUUID->"f3059c56-ffd1-4ac3-953f-\
297fd1123db9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", "1"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"x", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<x\>\"", ",", "\"\<\!\(\*SuperscriptBox[\(X\), \(2\)]\)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"LabelStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Pink", ",", "Bold"}], "]"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.81453426316782*^9, 3.814534276236957*^9}, {
  3.8145343453123198`*^9, 3.8145343764308987`*^9}, {3.814534736006572*^9, 
  3.814534775672154*^9}, {3.8145348214884987`*^9, 3.814534844587701*^9}, {
  3.8145349294377337`*^9, 3.8145349563469133`*^9}, {3.814538055121447*^9, 
  3.814538071948197*^9}, {3.81453810554678*^9, 3.814538107476668*^9}, {
  3.8145384435413437`*^9, 
  3.814538452273327*^9}},ExpressionUUID->"220090c6-9284-4047-b680-\
a02b07a81746"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.81453427696459*^9, {3.814534357564332*^9, 3.814534377502078*^9}, {
   3.81453475370229*^9, 3.814534777305773*^9}, {3.814534822170302*^9, 
   3.814534845301148*^9}, {3.814534929938651*^9, 3.814534956946288*^9}, 
   3.814538074145356*^9, 3.814538108707664*^9, {3.814538444265699*^9, 
   3.8145384529595413`*^9}},ExpressionUUID->"8893ea43-8cce-4184-9b6b-\
45307eecaafe"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.81453427696459*^9, {3.814534357564332*^9, 3.814534377502078*^9}, {
   3.81453475370229*^9, 3.814534777305773*^9}, {3.814534822170302*^9, 
   3.814534845301148*^9}, {3.814534929938651*^9, 3.814534956946288*^9}, 
   3.814538074145356*^9, 3.814538108707664*^9, {3.814538444265699*^9, 
   3.814538452961857*^9}},ExpressionUUID->"6c7810af-8bfd-4740-821c-\
3c0ac8dd801a"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.81453427696459*^9, {3.814534357564332*^9, 3.814534377502078*^9}, {
   3.81453475370229*^9, 3.814534777305773*^9}, {3.814534822170302*^9, 
   3.814534845301148*^9}, {3.814534929938651*^9, 3.814534956946288*^9}, 
   3.814538074145356*^9, 3.814538108707664*^9, {3.814538444265699*^9, 
   3.814538452962981*^9}},ExpressionUUID->"28f21dac-e4ed-4af1-ad4b-\
dce4ca33a0b7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
btNA7NjTdy279//bQ+D/95D/ATgbkOg=
       "]]},
     Annotation[#, "Charting`Private`Tag$20833#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox[
    "\"\\!\\(\\*SuperscriptBox[\\(X\\), \\(2\\)]\\)\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->Directive[
    RGBColor[1, 0.5, 0.5], Bold],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-1, 1}, {0., 0.9999999183673486}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.81453427696459*^9, {3.814534357564332*^9, 3.814534377502078*^9}, {
   3.81453475370229*^9, 3.814534777305773*^9}, {3.814534822170302*^9, 
   3.814534845301148*^9}, {3.814534929938651*^9, 3.814534956946288*^9}, 
   3.814538074145356*^9, 3.814538108707664*^9, {3.814538444265699*^9, 
   3.814538452995243*^9}},ExpressionUUID->"1b26a507-cbb7-4979-8577-\
5465ec7a7169"]
}, Open  ]],

Cell["So our range of possible values for Y is (0,1)", "Text",
 CellChangeTimes->{{3.81453497661913*^9, 3.814534991986826*^9}, {
  3.814535135198254*^9, 
  3.8145351360308743`*^9}},ExpressionUUID->"c24cbcc2-81a2-48bb-96f3-\
eab5c13d19f9"],

Cell["Now by the definition of the cdf, we know that ", "Text",
 CellChangeTimes->{{3.814536113907485*^9, 3.814536125762508*^9}, 
   3.81453818694877*^9},ExpressionUUID->"c086559c-abbe-4ed6-9624-\
722760731b3e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["F", "Y"], 
   RowBox[{"(", "y", ")"}]}], "=", 
  RowBox[{"P", 
   RowBox[{"(", 
    RowBox[{"Y", "\[LessEqual]", "y"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Rule]", 
  RowBox[{"P", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["X", "2"], "\[LessEqual]", "y"}], 
    ")"}]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.814536301939887*^9, 3.8145363397833033`*^9}, 
   3.814536370246744*^9, {3.814536547233076*^9, 3.8145365496875477`*^9}, 
   3.814539180820785*^9},ExpressionUUID->"6ca3b689-7b22-43f8-8d8f-\
ff4182dfff35"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "\[Equal]", "y"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8145363806890697`*^9, 3.814536439663011*^9}, 
   3.814536497491294*^9, {3.814537969081579*^9, 
   3.814537982986382*^9}},ExpressionUUID->"dd366685-3682-4f14-bc95-\
8cc1188c8932"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", 
      SqrtBox["y"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     SqrtBox["y"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814536405125498*^9, 3.814536440280035*^9}, 
   3.814536499008882*^9, 
   3.814537983899645*^9},ExpressionUUID->"00c46709-5ee0-4043-ad37-\
b1e4de4981da"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["F", "Y"], "(", "y", ")"}], " ", "=", " ", 
    RowBox[{"P", "(", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox["y"]}], "\[LessEqual]", "X", "\[LessEqual]", 
      SqrtBox["y"]}], ")"}]}], TraditionalForm]],ExpressionUUID->
  "63dec271-a14a-458f-929c-eb7125a60339"],
 " ",
 StyleBox[" (* now, what is the probability that X is between those two \
values ? *)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n= ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["F", "X"], "(", 
     SqrtBox["y"], ")"}], " ", "-", " ", 
    RowBox[{
     SubscriptBox["F", "X"], "(", 
     RowBox[{"-", 
      SqrtBox["y"]}], ")"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "39158edd-5203-4165-9af7-e3373bdb0d9d"],
 "        ",
 StyleBox["(* it\[CloseCurlyQuote]s the  difference of the CDFs evaluated at \
those two end points *)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nNow, we know that the cdf of a uniform distribution in (-1,1) is"
}], "Text",
 CellChangeTimes->{{3.814536633744507*^9, 3.814536737855011*^9}, {
  3.8145385544841423`*^9, 3.814538577706427*^9}, {3.814538683681306*^9, 
  3.814538684063583*^9}, {3.8145389500351667`*^9, 3.814538980433959*^9}, {
  3.814539025255658*^9, 
  3.814539075022738*^9}},ExpressionUUID->"ae6722af-8df1-4af6-9ccf-\
889cad68cc18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"UniformDistribution", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CDF", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.814538278387664*^9, 3.814538327728931*^9}, 
   3.814538551339254*^9, {3.814538584838952*^9, 3.8145385907766333`*^9}, 
   3.814538687303871*^9},ExpressionUUID->"e3aeb1be-1ab2-441e-a2df-\
4fdda6daaa6e"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"1", "+", "\[FormalX]"}], "2"], 
          RowBox[{
           RowBox[{"-", "1"}], "\[LessEqual]", "\[FormalX]", "\[LessEqual]", 
           "1"}]},
         {"1", 
          RowBox[{"\[FormalX]", ">", "1"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "Listable"}], "]"}]], "Output",
 CellChangeTimes->{{3.814538305021105*^9, 3.814538328120761*^9}, {
   3.814538581431333*^9, 3.814538591358906*^9}, 
   3.814538687920562*^9},ExpressionUUID->"da0564f1-e212-4612-983e-\
f82d4ce4a587"]
}, Open  ]],

Cell[TextData[{
 "So using that and pluging in our ",
 Cell[BoxData[
  FormBox[
   SqrtBox["y"], TraditionalForm]],ExpressionUUID->
  "bbd59466-c88a-4576-bad3-3c4e9a42f68d"],
 ", we get"
}], "Text",
 CellChangeTimes->{{3.81453871016326*^9, 
  3.814538760607148*^9}},ExpressionUUID->"b18f0b43-cb79-480d-9953-\
7d39cd91dffb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], "=", 
   FractionBox[
    RowBox[{"1", "+", "x"}], "2"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{" ", 
  RowBox[{
   FormBox[
    RowBox[{
     RowBox[{"F", "[", 
      SqrtBox["y"], "]"}], " ", "-", " ", 
     RowBox[{"F", "[", 
      RowBox[{"-", 
       SqrtBox["y"]}], "]"}]}],
    TraditionalForm], "//", "Simplify"}]}]}], "Input",
 CellChangeTimes->{{3.81453835657874*^9, 3.814538368229247*^9}, {
  3.814538398292118*^9, 3.814538404545532*^9}, {3.814538469458502*^9, 
  3.8145385008945827`*^9}, {3.8145386096788807`*^9, 3.814538677200078*^9}, {
  3.814538796293727*^9, 
  3.814538796381818*^9}},ExpressionUUID->"8b39cc35-773b-41bf-b6ec-\
b190410d2c67"],

Cell[BoxData[
 SqrtBox["y"]], "Output",
 CellChangeTimes->{
  3.8145383697488613`*^9, 3.814538405291518*^9, {3.814538481644916*^9, 
   3.814538501781242*^9}, 3.8145386312606707`*^9, {3.8145386660746326`*^9, 
   3.814538695611034*^9}, 
   3.81453879720786*^9},ExpressionUUID->"5d6685b6-b4b5-4968-b263-\
5d33af3cb5a9"]
}, Open  ]],

Cell[TextData[{
 "That is the cdf of Y, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["F", "Y"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ca703c76-77d7-4748-ac69-c65ab1e49727"],
 "=",
 Cell[BoxData[
  FormBox[
   SqrtBox["y"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "b476e294-615d-4823-95ab-892590288e79"],
 "\nFinally, differentiate to find the pdf"
}], "Text",
 CellChangeTimes->{{3.814538810716444*^9, 
  3.814538862353375*^9}},ExpressionUUID->"012a6dcb-9900-429e-a6b0-\
a4145d88d695"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   SqrtBox["y"], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.814538866677071*^9, 
  3.814538888589046*^9}},ExpressionUUID->"59774946-4983-402f-b26e-\
3ed443aa3ac6"],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"2", " ", 
   SqrtBox["y"]}]]], "Output",
 CellChangeTimes->{
  3.814543806834093*^9},ExpressionUUID->"e0a88955-2fdc-496c-9181-\
9c4702dcd872"]
}, Open  ]],

Cell["Let's check it integrates to 1", "Text",
 CellChangeTimes->{{3.8145438391814938`*^9, 
  3.814543846020576*^9}},ExpressionUUID->"6e22375c-cd92-4f67-9517-\
0ff9fe3dc0ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SqrtBox["y"]}]], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.814543803742187*^9, 
  3.814543823969754*^9}},ExpressionUUID->"97dd523d-6f94-4f14-803d-\
819f84fe315d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.8145438248144827`*^9},ExpressionUUID->"34dc070a-5841-4876-8f19-\
9497d747b607"]
}, Open  ]],

Cell["\<\

We can also fully use just Mathematica buildins\
\>", "Text",
 CellChangeTimes->{{3.814542082041671*^9, 
  3.814542092864533*^9}},ExpressionUUID->"f3506f95-36cf-4a4a-8da0-\
33ff99a2dbf0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", "x", ",", "y"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalD]", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Normalize\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"PDF", "[", "%", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], 
      SuperscriptBox["x", "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}], "//", "N"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"\[ScriptCapitalD]", ",", 
       RowBox[{"10", "^", "5"}]}], "]"}], ",", "48", ",", "PDF", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], 
      SuperscriptBox["x", "2"]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["3", "2"], 
      SuperscriptBox["x", "2"]}], "\[Equal]", "y"}], ",", "x"}], "]"}], "//", 
  "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.814541349755377*^9, 3.814541349824648*^9}, {
  3.81454139183772*^9, 3.814541391988677*^9}, {3.814541483546801*^9, 
  3.814541506491775*^9}, {3.8145416260363607`*^9, 3.814541627746079*^9}, {
  3.8145417490651903`*^9, 3.814541759819318*^9}, {3.8145418827415323`*^9, 
  3.814541891420928*^9}, {3.814541933408001*^9, 3.814542060673354*^9}, {
  3.814542165475523*^9, 3.8145422193854437`*^9}, {3.8145422589200478`*^9, 
  3.814542275837667*^9}, {3.814542317962029*^9, 3.814542357779543*^9}, {
  3.81454240368307*^9, 3.8145424194528513`*^9}, {3.814542625513275*^9, 
  3.814542656020157*^9}, {3.814542686577031*^9, 3.814542730047494*^9}, {
  3.814542818268251*^9, 3.814542837007354*^9}, {3.8145434392256517`*^9, 
  3.814543439310361*^9}, {3.81454348224478*^9, 
  3.814543572106112*^9}},ExpressionUUID->"e23ea585-d4fe-437c-bef8-\
d662c45dae75"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"3", " ", 
     SuperscriptBox["\[FormalX]", "2"]}], "2"], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.814541352067088*^9, 3.814541392636533*^9, {3.81454149080371*^9, 
   3.814541507429335*^9}, 3.814541628393696*^9, {3.814541756282941*^9, 
   3.814541760356367*^9}, {3.814541884239931*^9, 3.8145418921091347`*^9}, {
   3.8145419518940907`*^9, 3.8145420396014223`*^9}, 3.814542096412551*^9, {
   3.814542168974156*^9, 3.814542182594198*^9}, {3.814542235440318*^9, 
   3.8145422606653557`*^9}, 3.814542320398347*^9, 3.814542358381155*^9, 
   3.814542419871531*^9, {3.814542628068934*^9, 3.814542656502266*^9}, {
   3.814542687585984*^9, 3.814542737448646*^9}, {3.814542821795906*^9, 
   3.8145428380353527`*^9}, {3.814543423920052*^9, 3.814543440838665*^9}, {
   3.814543494528254*^9, 3.814543517386681*^9}, {3.814543550553163*^9, 
   3.814543572777772*^9}},ExpressionUUID->"1b8afa2a-0631-47a8-b867-\
2a68aeb8a060"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["\[FormalX]", "2"]}], "2"], 
          RowBox[{
           RowBox[{"-", "1"}], "<", "\[FormalX]", "<", "1"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", "Listable"}], "]"}]], "Output",
 CellChangeTimes->{
  3.814541352067088*^9, 3.814541392636533*^9, {3.81454149080371*^9, 
   3.814541507429335*^9}, 3.814541628393696*^9, {3.814541756282941*^9, 
   3.814541760356367*^9}, {3.814541884239931*^9, 3.8145418921091347`*^9}, {
   3.8145419518940907`*^9, 3.8145420396014223`*^9}, 3.814542096412551*^9, {
   3.814542168974156*^9, 3.814542182594198*^9}, {3.814542235440318*^9, 
   3.8145422606653557`*^9}, 3.814542320398347*^9, 3.814542358381155*^9, 
   3.814542419871531*^9, {3.814542628068934*^9, 3.814542656502266*^9}, {
   3.814542687585984*^9, 3.814542737448646*^9}, {3.814542821795906*^9, 
   3.8145428380353527`*^9}, {3.814543423920052*^9, 3.814543440838665*^9}, {
   3.814543494528254*^9, 3.814543517386681*^9}, {3.814543550553163*^9, 
   3.814543572783894*^9}},ExpressionUUID->"bf8b4289-f479-4339-a846-\
8f69e9a8a4de"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.814541352067088*^9, 3.814541392636533*^9, {3.81454149080371*^9, 
   3.814541507429335*^9}, 3.814541628393696*^9, {3.814541756282941*^9, 
   3.814541760356367*^9}, {3.814541884239931*^9, 3.8145418921091347`*^9}, {
   3.8145419518940907`*^9, 3.8145420396014223`*^9}, 3.814542096412551*^9, {
   3.814542168974156*^9, 3.814542182594198*^9}, {3.814542235440318*^9, 
   3.8145422606653557`*^9}, 3.814542320398347*^9, 3.814542358381155*^9, 
   3.814542419871531*^9, {3.814542628068934*^9, 3.814542656502266*^9}, {
   3.814542687585984*^9, 3.814542737448646*^9}, {3.814542821795906*^9, 
   3.8145428380353527`*^9}, {3.814543423920052*^9, 3.814543440838665*^9}, {
   3.814543494528254*^9, 3.814543517386681*^9}, {3.814543550553163*^9, 
   3.814543572785591*^9}},ExpressionUUID->"98075b7d-097f-47f5-bda6-\
bd597360b21d"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.40599999999999997`], 
     Thickness[Small]}], {}, 
     {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.40599999999999997`], 
      Thickness[Small]}], RectangleBox[{-1., 0}, {-0.95, 1.4352},
       RoundingRadius->0], RectangleBox[{-0.95, 0}, {-0.9, 1.263},
       RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.85, 1.1408},
       RoundingRadius->0], RectangleBox[{-0.85, 0}, {-0.8, 1.0206},
       RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.75, 0.9062},
       RoundingRadius->0], RectangleBox[{-0.75, 0}, {-0.7, 0.789},
       RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.65, 0.6886},
       RoundingRadius->0], RectangleBox[{-0.65, 0}, {-0.6, 0.58},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.55, 0.499},
       RoundingRadius->0], RectangleBox[{-0.55, 0}, {-0.5, 0.4134},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.45, 0.3476},
       RoundingRadius->0], RectangleBox[{-0.45, 0}, {-0.4, 0.2702},
       RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.35, 0.2168},
       RoundingRadius->0], RectangleBox[{-0.35, 0}, {-0.3, 0.1528},
       RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.25, 0.1176},
       RoundingRadius->0], RectangleBox[{-0.25, 0}, {-0.2, 0.0754},
       RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.15, 0.0486},
       RoundingRadius->0], RectangleBox[{-0.15, 0}, {-0.1, 0.0234},
       RoundingRadius->0], RectangleBox[{-0.1, 0}, {-0.05, 0.007},
       RoundingRadius->0], RectangleBox[{-0.05, 0}, {0., 0.0006},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.05, 0.0012},
       RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 0.0098},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 0.0268},
       RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 0.0498},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 0.0802},
       RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 0.1148},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 0.168},
       RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 0.2066},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 0.2576},
       RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 0.3424},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 0.4122},
       RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 0.5032},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 0.59},
       RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 0.662},
       RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 0.7798},
       RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 0.9016},
       RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 1.0202},
       RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 1.1506},
       RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 1.2874},
       RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 1.44},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
       LineBox[CompressedData["
1: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
ieUce8Rg4L8/BP/7If8HNCSaaw==
        "]]},
      Annotation[#, "Charting`Private`Tag$34407#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-1.04, 0},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0}, {0}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  LabelStyle->{FontFamily -> "Times"},
  PlotRange->{{-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814541352067088*^9, 3.814541392636533*^9, {3.81454149080371*^9, 
   3.814541507429335*^9}, 3.814541628393696*^9, {3.814541756282941*^9, 
   3.814541760356367*^9}, {3.814541884239931*^9, 3.8145418921091347`*^9}, {
   3.8145419518940907`*^9, 3.8145420396014223`*^9}, 3.814542096412551*^9, {
   3.814542168974156*^9, 3.814542182594198*^9}, {3.814542235440318*^9, 
   3.8145422606653557`*^9}, 3.814542320398347*^9, 3.814542358381155*^9, 
   3.814542419871531*^9, {3.814542628068934*^9, 3.814542656502266*^9}, {
   3.814542687585984*^9, 3.814542737448646*^9}, {3.814542821795906*^9, 
   3.8145428380353527`*^9}, {3.814543423920052*^9, 3.814543440838665*^9}, {
   3.814543494528254*^9, 3.814543517386681*^9}, {3.814543550553163*^9, 
   3.814543572851753*^9}},ExpressionUUID->"83b9ed8c-2c97-4dd8-a075-\
a91d77fce3fb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      RowBox[{"-", 
       SqrtBox[
        FractionBox["2", "3"]]}], " ", 
      SqrtBox["y"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{
      SqrtBox[
       FractionBox["2", "3"]], " ", 
      SqrtBox["y"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.814541352067088*^9, 3.814541392636533*^9, {3.81454149080371*^9, 
   3.814541507429335*^9}, 3.814541628393696*^9, {3.814541756282941*^9, 
   3.814541760356367*^9}, {3.814541884239931*^9, 3.8145418921091347`*^9}, {
   3.8145419518940907`*^9, 3.8145420396014223`*^9}, 3.814542096412551*^9, {
   3.814542168974156*^9, 3.814542182594198*^9}, {3.814542235440318*^9, 
   3.8145422606653557`*^9}, 3.814542320398347*^9, 3.814542358381155*^9, 
   3.814542419871531*^9, {3.814542628068934*^9, 3.814542656502266*^9}, {
   3.814542687585984*^9, 3.814542737448646*^9}, {3.814542821795906*^9, 
   3.8145428380353527`*^9}, {3.814543423920052*^9, 3.814543440838665*^9}, {
   3.814543494528254*^9, 3.814543517386681*^9}, {3.814543550553163*^9, 
   3.8145435728540897`*^9}},ExpressionUUID->"324ecb11-03f3-4c57-a5eb-\
e75c8e3e4ce3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SqrtBox[
      FractionBox["2", "3"]], " ", 
     SqrtBox["y"]}], "==", "1"}], ",", "y"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8145429145914392`*^9, 3.814542979498734*^9}, {
  3.814543657722938*^9, 
  3.814543674076858*^9}},ExpressionUUID->"e002fd87-0499-4f38-9ac4-\
408b7954d3e7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"y", "\[Rule]", 
    FractionBox["3", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.814542932019587*^9, 3.8145429801443453`*^9}, {
  3.814543666228567*^9, 
  3.8145436747660303`*^9}},ExpressionUUID->"f859b83f-e6a2-4213-94fe-\
ad3d64c1fc00"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "\n\nNow, let\[CloseCurlyQuote]s say ",
 StyleBox["we wanna \[OpenCurlyQuote]sample the \
distribution\[CloseCurlyQuote]",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 ", aka get variates that belongs to a distribution (sometimes it\
\[CloseCurlyQuote]s referred as simulating a random number with a certain \
distribution). We can\[CloseCurlyQuote]t use the above Rayleigh distribution \
because we should have parameterazed it with also the constant ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], " ", "but", " ", "we", " "}], 
   TraditionalForm]],ExpressionUUID->"3350e742-2b95-4a20-89a4-622972f48ea5"],
 "did not for clarity. So we use a buildin gaussian distribution :"
}], "Text",
 CellChangeTimes->{{3.8139477582606163`*^9, 3.813947803690208*^9}, 
   3.813948059695587*^9, {3.8139482061478777`*^9, 3.813948307981513*^9}, {
   3.814017740574911*^9, 3.814017777343335*^9}, {3.814021501074499*^9, 
   3.814021502133992*^9}},ExpressionUUID->"113a710a-d272-479b-9524-\
e8d3b3dc02f3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "data", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"1", ",", "3"}], "]"}], ",", 
     RowBox[{"10", "^", "5"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "64", ",", "\"\<ProbabilityDensity\>\""}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1", ",", "3"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], " ", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.8139478378459253`*^9, {3.813947891489623*^9, 3.813947923682651*^9}, {
   3.813947973022954*^9, 3.813947973902649*^9}, {3.813948024595606*^9, 
   3.8139481817158737`*^9}},ExpressionUUID->"3f477cb1-a721-4f28-a849-\
36ae73391656"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.33599999999999997`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.33599999999999997`], Thickness[Small]}], 
      RectangleBox[{-11.5, 0}, {-11., 0.00002},
       RoundingRadius->0], RectangleBox[{-11., 0}, {-10.5, 0.00006},
       RoundingRadius->0], RectangleBox[{-10.5, 0}, {-10., 0.00006},
       RoundingRadius->0], RectangleBox[{-10., 0}, {-9.5, 0.00024},
       RoundingRadius->0], RectangleBox[{-9.5, 0}, {-9., 0.00038},
       RoundingRadius->0], RectangleBox[{-9., 0}, {-8.5, 0.00058},
       RoundingRadius->0], RectangleBox[{-8.5, 0}, {-8., 0.0011},
       RoundingRadius->0], RectangleBox[{-8., 0}, {-7.5, 0.00194},
       RoundingRadius->0], RectangleBox[{-7.5, 0}, {-7., 0.00288},
       RoundingRadius->0], RectangleBox[{-7., 0}, {-6.5, 0.00502},
       RoundingRadius->0], RectangleBox[{-6.5, 0}, {-6., 0.00706},
       RoundingRadius->0], RectangleBox[{-6., 0}, {-5.5, 0.01118},
       RoundingRadius->0], RectangleBox[{-5.5, 0}, {-5., 0.01474},
       RoundingRadius->0], RectangleBox[{-5., 0}, {-4.5, 0.02176},
       RoundingRadius->0], RectangleBox[{-4.5, 0}, {-4., 0.02942},
       RoundingRadius->0], RectangleBox[{-4., 0}, {-3.5, 0.03826},
       RoundingRadius->0], RectangleBox[{-3.5, 0}, {-3., 0.04854},
       RoundingRadius->0], RectangleBox[{-3., 0}, {-2.5, 0.06008},
       RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2., 0.07658},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1.5, 0.08798},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1., 0.09888},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.5, 0.113},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {0., 0.1213},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.5, 0.1284},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 0.1341},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 0.13202},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 0.13022},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 0.11858},
       RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 0.1119},
       RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 0.10082},
       RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 0.08662},
       RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 0.07526},
       RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 0.0603},
       RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 0.04932},
       RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 0.03664},
       RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 0.02914},
       RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 0.02116},
       RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 0.0152},
       RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 0.00994},
       RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 0.00754},
       RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 0.00422},
       RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 0.00322},
       RoundingRadius->0], RectangleBox[{9.5, 0}, {10., 0.00186},
       RoundingRadius->0], RectangleBox[{10., 0}, {10.5, 0.001},
       RoundingRadius->0], RectangleBox[{10.5, 0}, {11., 0.00054},
       RoundingRadius->0], RectangleBox[{11., 0}, {11.5, 0.00036},
       RoundingRadius->0], RectangleBox[{11.5, 0}, {12., 0.00022},
       RoundingRadius->0], RectangleBox[{12., 0}, {12.5, 0.00026},
       RoundingRadius->0], RectangleBox[{12.5, 0}, {13., 0.00008},
       RoundingRadius->0], RectangleBox[{13., 0}, {13.5, 0.00002},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1: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
o/J5N/j//+9YRqv7ZxshN/gfephJfQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$105441#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-12., 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-11.5, 13.5}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813947841267548*^9, 3.8139478946412573`*^9, 3.813947926895596*^9, 
   3.813947974555291*^9, {3.813948052420183*^9, 3.8139481825735683`*^9}, 
   3.813955663927092*^9, 3.813957241152269*^9, 3.813957484058518*^9, 
   3.8140048815259027`*^9, 3.8140205459614573`*^9, 3.814021448932164*^9, 
   3.814041828474465*^9, 
   3.814041916240983*^9},ExpressionUUID->"55986121-6fc6-4be2-8be9-\
62d81721e8f3"]
}, Open  ]],

Cell[TextData[{
 "What we did here? We drawn samples from a normal distribution. Effectively \
our samples resemble a gaussian distribution (blue line). Another way to put \
is that we sampled the area under the curve as it is apparent in the graph \
above.  This may look like a statistical exercise until we use a normal \
distribution but what if we use a Rayleigh distribution that appears \
frequently in the equations of rarefied gas dynamics and beam physics ? ",
 StyleBox["We\[CloseCurlyQuote]re approaching those dynamics with a \
stochastic process",
  FontVariations->{"Underline"->True}],
 ".\n\n\nWhat exactly do we need to be able to sample a certain distribution \
? There\[CloseCurlyQuote]re various approaches. Let\[CloseCurlyQuote]s see \
one.\nThe method of the inverse cumulative distribution function also called \
the ",
 StyleBox["inversion method",
  FontColor->RGBColor[1, 0.5, 0]],
 " (or the method of inverse functions also known as ",
 StyleBox["Inversion Sampling",
  FontSize->18,
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 ", the ",
 StyleBox["inverse probability integral transform",
  FontColor->RGBColor[1, 0.5, 0]],
 ", the ",
 StyleBox["inverse transformation method",
  FontColor->RGBColor[1, 0.5, 0]],
 ", Smirnov transform, or the golden rule).",
 StyleBox["\n\n",
  FontColor->RGBColor[1, 0.5, 0]],
 "Effectively we saw in part1 that a cdf gives us the probability a random \
variable X is found at a value equal to or less than a certain x.. ie. how \
much area is under the curve on the left of a certain point. The inverse cdf \
gives us the x that bound that area.\n\nWe already know how to get the cdf. \
All we are left to do is to equal the cdf to a random variable and solve for ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["F", 
     RowBox[{"-", "1"}]], "("}], TraditionalForm]],ExpressionUUID->
  "f6fea7fe-34ef-46cc-bafb-016964f22f70"],
 "x).\n\n",
 StyleBox["\[Xi]",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["=F(x)\n\ny=",
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  RowBox[{"1", "-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Sigma]", "2"]}]]}]]}]], "Output",
  CellChangeTimes->{
   3.813933422339987*^9, 3.813933527766871*^9, 3.813934424672559*^9, {
    3.8139350365222816`*^9, 3.813935049096195*^9}, 3.813935129213253*^9, 
    3.813935213527371*^9, {3.813935306088478*^9, 3.813935327755436*^9}, {
    3.8139371196145763`*^9, 3.813937131082801*^9}, 3.813938555070031*^9, 
    3.813938707929573*^9, 3.813938852682041*^9, 3.813938912688592*^9, 
    3.813939128833227*^9, 3.813945286103479*^9, {3.8139455167566843`*^9, 
    3.813945578396266*^9}},
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "78aaf38f-e295-4f67-86b6-bebae9d0fff7"],
 StyleBox["\n\n",
  FontSize->16],
 Cell[BoxData[
  FormBox[
   RowBox[{"Exp", "(", 
    RowBox[{"-", 
     FractionBox[
      SuperscriptBox["x", "2"], 
      RowBox[{"2", 
       SuperscriptBox["\[Sigma]", "2"]}]]}], ")"}], TraditionalForm]],
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "51e200b4-07b4-4718-814c-6b298995296c"],
 StyleBox[" ",
  FontSize->16],
 StyleBox["= 1-\[Xi]\n\n",
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{"-", 
    FractionBox[
     SuperscriptBox["x", "2"], 
     RowBox[{"2", 
      SuperscriptBox["\[Sigma]", "2"]}]]}], TraditionalForm]],
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "043d52e1-3399-4520-9f71-dc9d2f4f4a36"],
 StyleBox[" ",
  FontSize->16],
 StyleBox["= Log(1-\[Xi])\n\nx = \[Sigma]",
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], 
     RowBox[{"Log", "(", 
      RowBox[{"1", "-", "\[Xi]"}], ")"}]}]], TraditionalForm]],
  FontSize->16,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "96fa380e-b099-4e83-9445-9b758a4a8792"],
 "\n\nSince \[Xi] is uniformly distributed in the interval (0, 1) and because \
its value has not yet been determined, we can further simplify this \
expression by noting that \[Xi] and 1 \[Dash] \[Xi] follow exactly the same \
probability distribution function. In the sense, it will still be a uniform \
random number in 0-1. \nHowever ",
 StyleBox["in the realm of floating point numbers",
  FontVariations->{"Underline"->True}],
 " it\[CloseCurlyQuote]s better to leave it as 1-\[Xi] because \[Xi] could \
turn out to be 0 and so we\[CloseCurlyQuote]d take the Log[0] which is \
undefined while it\[CloseCurlyQuote]s not for Log[1].\n\nAnyway, we arrive at \
the final expression for the sampling value of x :\n\n",
 StyleBox["x = \[Sigma]",
  FontSize->24,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], "Log\[Xi]"}]], TraditionalForm]],
  FontSize->24,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "2efacf6d-d4bd-4365-8e69-9e9779305c76"],
 "\n\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontColor->RGBColor[1, 0, 1]],
 "\n",
 StyleBox["Let see another example :",
  FontVariations->{"Underline"->True}],
 "\n\nThe probability that a neutron has an interaction in dx after having \
travelled a distance x is given by :\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"p", "(", "x", ")"}], "dx"}], "=", 
    RowBox[{
     SuperscriptBox["s\[ExponentialE]", 
      RowBox[{"-", "sx"}]], "dx"}]}], TraditionalForm]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "c57fdf0e-7cdf-4ff7-9b02-ffaf6143eae1"]
}], "Text",
 CellChangeTimes->{{3.813948321639462*^9, 3.81394846736939*^9}, {
   3.813948499794208*^9, 3.8139485633110228`*^9}, {3.813948648295641*^9, 
   3.813948678060491*^9}, {3.813948727336348*^9, 3.813948738136932*^9}, {
   3.81394883952344*^9, 3.81394888947115*^9}, {3.8139489450696774`*^9, 
   3.813948954944783*^9}, {3.813948994118442*^9, 3.813948995693873*^9}, {
   3.813950148504766*^9, 3.81395027124487*^9}, {3.813950333860804*^9, 
   3.8139503692638807`*^9}, {3.813950546198699*^9, 3.813950547724854*^9}, {
   3.813950584761642*^9, 3.8139507888171387`*^9}, {3.813950897444838*^9, 
   3.813950954761632*^9}, {3.81395101588801*^9, 3.813951026187293*^9}, {
   3.8139515935340147`*^9, 3.813951606257366*^9}, {3.813951887152597*^9, 
   3.81395188933825*^9}, {3.813952424772403*^9, 3.8139524261197433`*^9}, {
   3.813953282809265*^9, 3.813953299305567*^9}, {3.81395333005768*^9, 
   3.8139534431020823`*^9}, {3.81395723045012*^9, 3.81395723201656*^9}, {
   3.814004359497488*^9, 3.8140043683913717`*^9}, {3.814007132403528*^9, 
   3.814007133533022*^9}, {3.814007646731935*^9, 3.814007665921463*^9}, 
   3.814007698570445*^9, {3.8140123476147327`*^9, 3.814012405710079*^9}, {
   3.814017059567816*^9, 3.81401706760807*^9}, {3.8140193382615423`*^9, 
   3.814019341439468*^9}, {3.814098446384039*^9, 3.8140986208008127`*^9}, {
   3.814451406380061*^9, 3.814451410314328*^9}, {3.814889591667591*^9, 
   3.8148895916679*^9}, {3.8148897326878557`*^9, 
   3.814889732688183*^9}},ExpressionUUID->"6fc80af7-9fdd-478c-8ea4-\
8a4709683986"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
   "s", " ", "is", " ", "the", " ", "total", " ", "interaction", " ", "cross",
     " ", 
    RowBox[{"section", ".", " ", "The"}], " ", "pdf", " ", "is", " ", 
    "then"}], TraditionalForm]],ExpressionUUID->
  "42a3bb7f-efe9-40d7-ad70-77e6a068caa6"],
 "\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"p", " ", 
     RowBox[{"(", "x", ")"}]}], " ", "=", " ", 
    SuperscriptBox["s\[ExponentialE]", 
     RowBox[{"-", "sx"}]]}], TraditionalForm]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "f8fa050e-a611-4a3a-a361-26bb905a5784"],
 "\n\nand the cdf is"
}], "Text",
 CellChangeTimes->{{3.8139391772021313`*^9, 3.813939202627965*^9}, 
   3.8139393582369013`*^9, {3.813947514066991*^9, 3.81394758769057*^9}, {
   3.813947631497554*^9, 3.813947689095518*^9}, {3.813953460983967*^9, 
   3.813953581021721*^9}, {3.813953852577567*^9, 3.8139538583125257`*^9}, {
   3.814889589207589*^9, 3.814889594630252*^9}, {3.814889736196697*^9, 
   3.814889736196767*^9}},ExpressionUUID->"12a02bf3-9dbe-4cbe-83a2-\
7dd8e8c2789d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "s", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  FormBox[
   RowBox[{"fx", " ", "=", " ", 
    RowBox[{"s", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "s"}], "*", "x"}], "]"}]}]}],
   TraditionalForm], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "x"], 
  RowBox[{"fx", 
   RowBox[{"\[DifferentialD]", "x", " "}]}]}]}], "Input",
 CellChangeTimes->{{3.813953585975349*^9, 3.813953689684265*^9}, {
   3.8139537307437363`*^9, 3.813953736748474*^9}, {3.813953781363459*^9, 
   3.8139538104599543`*^9}, 3.81395386526832*^9, {3.8140050043298817`*^9, 
   3.814005018930243*^9}, {3.814889424774756*^9, 3.814889481948802*^9}, 
   3.8148895976413403`*^9},ExpressionUUID->"046cd5cb-1e84-450d-a403-\
4c5fe7e7b6f3"],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "s"}], " ", "x"}]]}]], "Output",
 CellChangeTimes->{{3.813953603360341*^9, 3.813953616790572*^9}, {
   3.813953651529017*^9, 3.813953666694306*^9}, 3.813953738155569*^9, 
   3.813953783017579*^9, 3.813953813309812*^9, 3.8139538663180027`*^9, 
   3.813955663966929*^9, 3.813957241190352*^9, 3.813957484097505*^9, 
   3.814004823961939*^9, 3.814004881565426*^9, {3.814005009241728*^9, 
   3.814005019868478*^9}, 3.814020545997714*^9, 3.8140214489707537`*^9, 
   3.814041828524282*^9, 3.814041916278439*^9, 3.814889401944623*^9, {
   3.814889444693717*^9, 
   3.814889483037779*^9}},ExpressionUUID->"2eed67f9-9b09-45b5-af89-\
dea6a651a373"]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"1", "-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "s"}], " ", "x"}]]}]], "Output",
  CellChangeTimes->{{3.813953603360341*^9, 3.813953616790572*^9}, {
    3.813953651529017*^9, 3.813953666694306*^9}, 3.813953738155569*^9, 
    3.813953783017579*^9, 3.813953813309812*^9, 3.8139538663180027`*^9, 
    3.813955663966929*^9, 3.813957241190352*^9, 3.813957484097505*^9, 
    3.814004823961939*^9, 3.814004881565426*^9, {3.814005009241728*^9, 
    3.814005019868478*^9}, 3.814020545997714*^9, 3.8140214489707537`*^9, 
    3.814041828524282*^9, 3.814041916278439*^9, 3.814889401944623*^9, {
    3.814889444693717*^9, 3.814889483037779*^9}},
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "09e75ca1-5a2f-4d8a-a5ed-6d2c59cc1ec8"],
 "\n\nWe can now sample the path length x by equating the CDF to a random \
number \[Xi], uniformly generated between 0 and 1, and solve for x:"
}], "Text",
 CellChangeTimes->{{3.813953887484228*^9, 3.813953895869967*^9}, {
  3.813953949572147*^9, 3.8139539531507807`*^9}, {3.814527807692759*^9, 
  3.8145278082565327`*^9}, {3.8148894928442087`*^9, 
  3.8148895040468397`*^9}},ExpressionUUID->"b2b6ed60-adee-4b08-a4c3-\
6d7393b460bb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"\[Xi]", "==", 
    RowBox[{"1", "-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "s"}], " ", "x"}]]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.813953976510112*^9, 3.8139539879382772`*^9}, 
   3.814889528143556*^9},ExpressionUUID->"6e3382b4-ec04-4606-9310-\
73d67ff4b0d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Pi]", " ", 
         RowBox[{"C", "[", "1", "]"}]}], "+", 
        RowBox[{"Log", "[", 
         FractionBox["1", 
          RowBox[{"1", "-", "\[Xi]"}]], "]"}]}], "s"], ",", 
      RowBox[{
       RowBox[{"C", "[", "1", "]"}], "\[Element]", 
       TemplateBox[{},
        "Integers"]}]}], "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.813953989189301*^9, 3.8139556639808607`*^9, 
  3.8139572412036457`*^9, 3.8139574841183443`*^9, 3.814004881595386*^9, 
  3.814020546126576*^9, 3.814021449105604*^9, 3.8140418285825567`*^9, 
  3.814041916312228*^9, 3.8148894045348577`*^9, 
  3.814889532179493*^9},ExpressionUUID->"ada50e60-14be-41e2-ae4c-\
88704605e07d"]
}, Open  ]],

Cell[TextData[{
 "Which is \n",
 StyleBox["\[Xi]=",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  RowBox[{"1", "-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "x"}], " ", 
     SubscriptBox["s", "t"]}]]}]], "Output",
  CellChangeTimes->{{3.813953603360341*^9, 3.813953616790572*^9}, {
    3.813953651529017*^9, 3.813953666694306*^9}, 3.813953738155569*^9, 
    3.813953783017579*^9, 3.813953813309812*^9, 3.8139538663180027`*^9},
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "e22a6e8c-c270-4b1a-acf3-46f1cea8a736"],
 StyleBox[" \[Rule] x = ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"Ln", " ", 
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", "\[Xi]"}], ")"}]}], "s"], TraditionalForm]],
  
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "3af8091d-d754-4590-b9a0-abf432c7d7fe"],
 StyleBox["=",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   FractionBox[
    RowBox[{"Ln", " ", 
     RowBox[{"(", 
      SuperscriptBox["\[Xi]", "'"], ")"}]}], "s"], TraditionalForm]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "b05bdbad-fd22-404f-9407-d980aff3bbc1"]
}], "Text",
 CellChangeTimes->{{3.813954075595858*^9, 3.8139542435591507`*^9}, {
  3.813954334256809*^9, 3.813954341102676*^9}, {3.8139572151802597`*^9, 
  3.8139572164282084`*^9}, {3.81445116011206*^9, 3.81445116042701*^9}, {
  3.81488960092871*^9, 
  3.814889602733556*^9}},ExpressionUUID->"55a3a642-4da1-472a-be24-\
eaa81d27d1d0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"nPathLength", "[", 
    RowBox[{"x_", ",", 
     RowBox[{"s_:", "0.1"}]}], "]"}], ":=", 
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "/", "s"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dddt", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"nPathLength", "[", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"{", 
        RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", "4"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dddt", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Histogram", "[", "dddt", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ed", "=", 
  RowBox[{"FindDistribution", "[", "dddt", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"ed", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "10"}], ",", "100"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813954307660858*^9, 3.813954313424515*^9}, {
   3.813954344270618*^9, 3.813954345012557*^9}, {3.813954395570751*^9, 
   3.81395443499056*^9}, {3.8139546455660343`*^9, 3.813954703484374*^9}, {
   3.8139552250775537`*^9, 3.81395531647445*^9}, 3.813955348292721*^9, {
   3.813955383911664*^9, 3.8139553841538553`*^9}, {3.813955586433473*^9, 
   3.813955587629801*^9}, 3.813955641695887*^9, {3.8139556879090633`*^9, 
   3.813955763642055*^9}, {3.813955828987567*^9, 3.813955909895664*^9}, {
   3.813955977506056*^9, 3.813956009719776*^9}, {3.81395607382823*^9, 
   3.8139561538599367`*^9}, {3.81395621364233*^9, 3.813956230898231*^9}, 
   3.813956323175202*^9, {3.81395645518342*^9, 3.8139564864361477`*^9}, {
   3.8139565342259808`*^9, 3.813956534806567*^9}, {3.813956632892613*^9, 
   3.813956690716824*^9}, {3.813956779903363*^9, 3.813956860205337*^9}, {
   3.8139569509723883`*^9, 3.813956991040852*^9}, {3.813957049902389*^9, 
   3.813957069026194*^9}, {3.81395719275463*^9, 3.813957195071312*^9}, 
   3.813957258431481*^9, {3.814889606913328*^9, 3.814889609724264*^9}, {
   3.814890362823213*^9, 3.814890386109715*^9}, {3.814890602877221*^9, 
   3.814890606408399*^9}, {3.814890811022434*^9, 
   3.8148908399119596`*^9}},ExpressionUUID->"c9e3df14-286c-4377-b911-\
ff77aad7a475"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.002777777777777778], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw8XHlcjN/bTkgISRFSyZYUIYRwCUmKoZCEaFEJ057Wad9rmn0ShXyFEEII
2bNV9hYUQiFFIfs778d9fv7pc5x5zjn3dt3LuZ9n+MZty92VlZSU1McoKf3/
33//2uacFU2blaHzaQ79B5b+99/43Ju/aKwK2zerxh5bMhP/xuoImJnSeWnM
CBpr4sZ3jRnfP3Pp99pY/PvJ01WFw2heB82Ph3FrPU1prA9tX0HgqntjaGyA
ox3r60eOb6TnR2K77eCqVdVqND8aM4+NqC0dDxob4v5KByX9ZAn93gh+dpMj
LZu/0dgYqRrv//4umk+/Hw/L0dvbZeONaWwKY71hl7TSRtN4IgI5d2fn1Uyk
8SQ0b34dOcqenXcy7FcOvfOc04XGZmg8btXzuvAj7TcFL81Wpzbz2fNTcc6k
/dq4IyNpPA3zTFdMnzXyBf3eHB/n31095yhbfzr2ZLVkj6kwovEMzBvpev+4
2jgaz8ST6T+e6h/oTWMLlM/O2NVQw9afhZmjq2fsnv+F1p+N/W6pw70EY2l+
Di4tPnHg2bHhNAa29vu1O+AnjXmAz6GiM+6N6jQ/F7ljZyufbRxC83NR8qd+
/vF1TB6WSFt1xk3Xh9bnWWK4ZqeGS0g/mp+Hl6MmZ23eo03z86B8ZLJKUk8T
mp8PI5+Y4uT0ATQ/H63KB2tuf2L0LUBNF8vg/dF0Ht4CXH53ROO91k+izwr9
Mjvq1qwm/eNZoapQo8f6DRPo+YXY2T7+6atl/Wl+Ido2C/dVp3SleWtYyP9I
X/6k8/Cs0bwr/MLIyUxfF+Hskinf1cZa0fwirBHm7lxgoUTzNjgrrrCv26dF
8zYo0ZU6nDiqQfOLMW2/tbwxmfSBtxhLni9JnX6wJ83bwq3q3vrCahWat4Xc
apvloWnMHuzwoceIMyNryP54dlhYaqC3LP8R0b8E1Z0XffZzSX94S1DiujVn
mQPTn6XI0NTj/akm/eAtxWReRFiuKpM/B7wD6662FpB8wMGCP8mrr5ro0u85
uF+x+Ms5D/p9GQcpGnY/7jax8y3Dh/h+6jY/yH6wDJpTsnP/8gfT88tgs2Vs
XwcPM3p+GSRd4kY8/sTksxwb846t6h/K9l+OHUdqjp5KpPV4y5FnqT5h9kmS
b9lyhF4ofrzi5gOi3x7Dmu+b+g96928MezxX+v6W86Od+GUPbw/OszHZpJ9l
9rC2LNT98XMU7e+ATw6VN+5VzKb9HXBoaEngMGeyZ54DypT393KYQvpR5gDT
hD2T9P2H0vMrYCpdfpq7hvQdK2AXZn2mMeY3Pb8CQ6o5cvUHhvT8CrQpr1s/
XGBHz6/E0LKOR/abCZ+wEj0uC+47zxlE9K+EWqnj41y3s//WK1uJktzUw96O
V4n+Vcj682L52aFfif5V6K+2u+b+AR16fhWGCuTmi6+00POrsGFNl5B3bUw/
HbHkQ+EwFTXGP0es0k8evuMo4Q3PEQ+EUssr5uz8jlh3yfpkaiHT39Ww8q7L
PLOF9AWr0dIpmd/nALP31dA8PGD4f8Mt6fnVOLTkdOnBnwzfncBz+FrbuUaT
nnfCe8d96pxyOh/PCeHznO2NBpO+lDnB+Pr9voa3auj5NahP3BJrso3wGGuw
qrtz/ediZg9rcPN6wRa9Lar0/Bo4/kxM+ppK+yk5w6jy8I8BK5j+OWP9qMsa
59bReXnOaEntuudkNul7mTPGVJlX7TnC8GktPC1+843ryJ9gLdQWRHqsimN4
tRZVN+dM/6VK82VrUaI/+8nyI8x/rsM8SZcNbtHvif/rcPL1gj4nHzB7XYet
0OPMDWH8X4dfOkl9JghIvkrrsanUvuWh5STafz3O9i9bs3kByYe3Hkb2c3QX
hhM/ytaj8ZL1rBcZ9HslFwT8HGz6XwHZl74LKlUuXr0/nvgPF7xbv+g4l0v7
u7igd1v4qJf9p9D6LrDXH1Y1/jnJM88F6o+/fhj58jPpmwviHOz9+wYTvje4
YOXo27nR0dNo/w3I656d8vd2d9p/A2b/1dm1xYWexwZM3ZZwYMyJZ//GLhsw
121tut5Jkh9vA/6k9p3WexD507wNGFiwJUn6x4Do3QD+N62DZdbEz4YNqFs+
Racjk9n/Rqje5KVYhk6m/TfCxrvqRlEurYeNsL+f324YSedx2Qj9MQP+Wg9j
9rkRd/vv//DsP/IveRsRtTB5Q20q4UnZRuSYa9gecyV+NSier8prdyskf6Hk
Cl2nTN2gFYSP+q6IDVpTqDaX7A+uODi6oeJkIumniysOqF0279qd8Ifnimad
GWe+cSjeyXPF50f/qWazeKDMFfvj8ie8biN9bHDFG1fz3IkPv5P9uOFeoM+x
6APED3039OzXZWSK5DbR74Y7MeVN+1y70f5uEBUHevO6EV7x3NC4Rm3K9WJa
P88Npyx/mmXeYvbqhifO1YNL+syg/d0waupQpRW9mP67Y2uvVo3fJqSP+u6w
cNMO6HhJ+gZ3zG7p/YqrSfbm4o4/91/dGPaQ7JHnjvgdL9qOjSH/mueOsR53
PXvt/0v6546KRluVGPvxtL87bnq0ftIKZfGhByZzl6muTCH80vfAt5SQignr
iL/wwEmB376Zh+tI/h5Yvmlm79rDU2l/D3h9O897n07+Ls8Dc/clz/F4SvpQ
5oEH82/1D/MwoP094JYrSLz0zZLo34QmLe9TFSUd/9bX34SbQ61No3hkD9gE
+TWdROWvZJ8um2C9n1OWuUGf9leMk3Me1/ygeD1vE176bvSN3NeX9t+Esla/
iv0/KJ5p2ITAcNnQXfaviH5PvHIqvGyzm+Sn74lBy1pHrvxO9MATvk2fOPtS
6XkXT+hE1EyxeUr6wvOEcf7zV943SF/zPKH6+b8pNskM7zyxkF88vPIw4UmD
J2wm7e9npjuQ6PdCkbv1Ld5F8vf6XuAbdzhIjpK/hReeb3o0+NXnl8R/Lwi3
dOszN5HiG54XTg2/e0nIIf3K80JmG39aZxDhY5kXStuH2ZeEkn40eOG89aTb
O1opnlXyxschanO+TSD71PfGjqTAB/+ZEX/hjT1DG0tv6fQg+r3RY+ksp1Wl
FP/xvGH5YloN15nsI88bE3s9HJzdm/CkzBu1Ma+6jGLxS4M39H3f3vK9QfxV
2ozQ9ycmm+ymeEV/M7Sq3WYPX8jiqc1odVww6PFAmnfZjNTHCzIGlBMe8Tbj
mpVwxWFd8v95m7Fw9t8t3IWEt2WbMfnT2cevTyvT/pvx7ef1MK9L5A+VfOAm
+mFzI/8x7e8D608Hn4k2zKX9faAbcfPA068kbxcfTODpjmrTY/G2D3yOHpBV
yPSIfh/0GpY/J+Ml6VOZDzbu1DmMMYT3DT442bp69YEQC9p/C3Y4jz0zopz8
k/4WrPxspy+cR/thC/66uoziFRGeuWzBm7YNgpuJbP8tSNCozrnhRufP24IP
kVoJPy6T/Mq2wGX0Hiftocz/bMG6sz13r8hi+29F/agGldOppF/6W6Fx8HjC
yiCGP1tx4Gf7W8766bT/VrhfcLxk1N+A9t+KzK+LnlUtofPnbUW5c0SjQQzh
WdlWNGU6G+2xpPi5YSviA5aaRc9m+d42vPdJHhLxiuxDfxt802bFb/YhfMM2
TKwNu29sS/x12QY9Sf7FDV1YfLENrg3nhghsyN7ytmH7Kc/+qxtn0f7bsGTf
1v652gz/tsHz89wmqxekr0pcvNe4sq5DRvahzkXp9kMG/kMpftDnIs4oatD3
HMJTUy6KXfb07qJP/h5cbD/v0D+kiuJfDhep3jnmCQOJ/y5cVITVX7XQJHvl
crFBc+nD6PksvuEi7YjO2mIjwg8+F+VhpZG7dr8leXLRNPzj20NNxP8iLqq5
OXJ/6wVEHxdj10ScGnad6K/iQsTr+t/83uSfG7g4+2h77vdQ0qc2Lh733PTD
3YzlH74YNfkZ57sO6YO6L1KefT9xVcr8sS9CHh2b3l5H9mXqi1k7xrj57rMk
+fhC4G/gqX6O9IXjiylNK89O+DOH6PfFNMs2H4H2PKJfMR7fXvftMIuffOE3
9uXFK/vJH/N9oetm1NbDnOSV54uis06GWq7kb4t8kbEg5dOpJKbfvlAO4ZWa
elN+U+WLeM/IL3Irwr8GXyx/tab6TxPxv80XgxZ085+aTP5JyQ99k8S7SrqT
P1P3Q6PgVI+sG3QefT/Uf0rop3uc+Gnqh3sTdEfV/aL8GX6AmtmKoy9onuOH
4cG8Zw19mb36gdtuVVIXQ/Ea1w8rpzfmBMex+NQPPBe3/I4ppP98xfxAZfeJ
GoTPeX6owxLj1ATSryI/vItdiPeLa8m/+0E1ZvfoIrWT/8ZVfpBOFg21+0m/
b/DD9fXuFRv2U/7c5gdjn+IH8lWsnuIPpVWDxh4/T/iu7o/hjvZbh/Zn8Yg/
FpVL7Rx30PlN/ZHS/23y6gc/SP/9keYtvnB3Lp2X448BUz9/+7iV7NvFH8m8
U4dvyshfcP2xa/rxqksOpG88f9zhLDvemsch+v2htvlW+Xht8rd5/ujh1f1b
nRHhXZE/nIViL/Fnqn+U+SNnktHfwvOU/1T5o+z70lvGP0kfGvzRuvu9adQe
2r/NH7MNIirn/K++EoBnnyPKmipJH9UDsOD54NHdgpj8A7B31874X+dJn0wD
oHPS4bnnPYbPAfg66LugoJnyF04A+v5y7FqqQfGTSwA2vOd/mhJB8Qg3AIVu
DtX7VlP9jheAdKN5Qt9n5I/4Afhvs8Do3kjSn7wA+Lnv2XHOh+yhKABeTwcp
Kz1m+q9Yb+PATW77Wkn+AYioaxzQqy/FUw0BWLNy/NbOpaQvbQGY1tD/lH1v
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
Xqd1FhD+NSTijHu8xtgjhA9NiQhp2ZBl8o7i67ZEKBlVNrfPJXvuTMS40c//
Lihj/etJaJist7qwjvRXNQmWJR27x5VQfVs9CXoqelL76yRf7SR4//1mWaZk
S/JPwoyYMbMmTKbnDZOw+o1L60lPsnfTJNxafPZW00zij3kSdh1wepKcTf4S
SVB5YKN3+Qjpg3USKgcFJK5n9wecJJT83jd/gpTuSxyTkFRTV/tiObtfSEKr
iWDTJNb/7JmEy9eSgubVsPumJAydZKt5rRfhTUgSbm/8ojMxgPWzJ+FoZvdd
A4eQPiclYVB98c3nIRQ/8ZOw9sqAw1oFDP+T8N3V+NHnFlafT4LNqu9W/F0s
/ksCzzh+599Smi9KgjU3/eubmVT/K0mC8pWJy7dE0f1fWRIezzAqmtWb/EF5
Et659jHk3iV/VJUE4y/NAXn2FE9UJ+FrgP2IB95UH2hIQv2t+W0jNhJ/mpLg
evdn1eJrdN62JIwUztVdqUX7dyah+45v3PpAWl8pGfyZwoaoCaQvqsnYWhW8
I8yf1QOTUc7/ZtsRRPUJ7WTofRk6esVpZv/JOPQ7NuSkFtmHYTIcFmsJ16TT
/bFpMo5PvblvVBLZr3kyNi7ReukTQushGbI3bzozVpE8rJNxxulh9egM4icn
GWv2V98wK6H8zjEZV0/2KEj1Jf/lkgzzST5b/twm+Xom42LSHf21jmTP3GS8
m6l+wPk5s/9kPL9tV7DOl+TLS8b9jtEnvDopPkhS8OPnugCjJoof+Mnoff5g
zI8VFJ/JkpF0edDOt61UD8tLRuW4S87jMijfK0hG+r6zvje+E34WJePIveaJ
50KoXluSjGV9s46nysk/lSn2m+QwfONk2q88Gb9/NrZWHWDxfzJamnTXtD+j
enB1MnZPlWWcrmf3m8noTBtvnFzE/H8y/iwwVzEZTOdpS4Zt70VXjo8gvOlM
xsJdaj0lr6l/QSkFzwf/tYpeQvmgagr23ju+tJ8JjdVTkPuz+duaDxS/a6fg
hejI0/NNrD6cgmW+m3QCZpP8DFNQxm16IcslfTZNwfIfc4bcUSH5mafg82Kv
IWMHUP6FFISbWG0wG9qL5J8Cj7q0+kRV2p+TgpHnTzTajKKxYwoWx1VeU3Wm
+32XFGx8FDBpRh/CR88UWKhe/qJ9jfpBuCmo9ZLe159G8ghJwQLv6RlNv1j9
PQXKXwuNvpyjekxSCrQf6Tr03sH6EVKwMwYxPb9S/VmWgrt3vUdUTWP4n4J+
B/Prc+LIfxWkYEh88wJZBuF5UQoqPo5/4q9J9lWSgiYH8/FLr5E9lCnoOVV5
r7sm8ac8BXYjDrzWYv6xKgVTzrSv3sHqp9UpeBdxf7fSCNbPpljfJ+2SXjnZ
Y1MKqsqfRVkcYfF/ChIP1+09F0360pkCnffhBso89v5TKmbbWFk1a9BYNRWe
QoP14VlEj3oq/Bb5BU84TPGrdirSl3S1PPKM6k36qSie9DvMcDOd1zAVyq7S
8SXLSP9MFetNrnczlrP8PxUTqraL3xWz/uZUOF1eJTLuQ3hhrfj91KuDIKZ4
hZOKxrWNq38MI31yTMX4afaCjGrlf2OXVKhLXhW+/E3n9UyFeUt70o0cZv+p
SLEdrjtkAfmnkFT4zP5c7WFO9UZeKl6X7xllJ6F4ISkVXx59HD6o0pLkn4qr
fQQ+69UY/qeCa7y3z87/iJ95qegjKPn15xLZc0EqvPvpTho/kfKholTs6Bul
fFVIvy9Jhe/XtC16v6g+WJaKyisVmdoVpH/lqcg35HTaebH77FTM1/HcoptK
9Z3qVIxxvmQYIqZ+hoZUTJcGao47RPlUUyrsTIwuK3UQv9tS4fHlTtxIC/If
nalo4a0bLCth9z9pmCRRq67tIP+hmobGw/GpJ2YRveppcL7naZxRQfinnYZT
N3ovm9VA/kE/Das5I01falB8Z5iGQW/GNfw6cZPwPw0fvim9StIivDdPQ5A0
YErO6UKq/6bByK45pjmb6g3WaWjqqTX49B3yV5w0HA72ELVcJHoc0/DnV5+A
jWKKr13SMKRAI+H1ITqfZxpc6iKHNL4m/8tNw9dzyi592ineCElDX53JQvVi
1n+YhsyFeaNlOaz+m4aj1tGSLBfWj6Wgt3FEwfZIZv9puJvwpmrhV4ov8tKg
llfhbTKe5FGQBq6894Vj0+j9oaI0lAVH7Vi7gvxZSRryTvV6cqb8Hvn/NChX
2Yu2aZP/Kk/DHsmU+FmR1O9RlQaVRYVn7ulQPlCdhu/JI/mmXUnfG9JwqOzn
+9LjLP5T/P5aXZz+UZb/pSHq3ODRB45TvNCZhk321u/PDqHnldKBt0NV37xg
+X86CnzujhvrRb9XT8fNLbcXTrEmfdROx+f26I891pK/0k/HxrkFDrzjhB+G
6XjIPVyjr0L9j6bpcL45dd/lDjq/eTqabjflakjY/XE63s46nVnXjfyBtWL/
FpXRrcw/ctLhZL5ffeJj8teO6SjPmjZ69RYW/6VjZWXHlPx7pA+e6YgVrR2S
O4z1m6RjlqnbbG4Ly//TYV3bdNFsKOEZL12Rr16SbBlfTvlfOuTjW0J3i4le
fjqG9CmxrckkPJOl49qtuplNr4m+vHToTBnll6tL9luQDu+r4btW/iD9LVKc
v8Lj2JQBZG8l6fhtFvBnxl/yd2Xp4BkUyK0/kv8qT0fxmoQ6SQOr/6fDh9tt
X9AHwsdqBf9Hrbhy+CPDf8X+0kV19fzXFP+l48sU39uOXVm/TzqGWnadtyaP
8K0zHd1Kh1plF7H+7ww8zzCsnexF/aWqGRDZVHy+lkt4pZ6BoMJ7lrbtrP6b
AYsTA+rtl5L+6GfAJn5c+0o+nd8wA3ZTWpzPh9P9jmkGHpzNHRV31oDkn4H1
H8eEzo5m+X8GNm08/yllx32y/ww8Lp5ysLMX8ZOTgQmu6g1eG8h/OmbgYb9h
3BIu8dMlAzOc39nyxhIeeWYgQMb9LE6h/I2bgQU3Lj8K+Uz5ckgGxs08sfhi
LesfV9C3NvazdyLxKykDrhNcBvcvIHr5GTAVHVubLqb4R5aBivxx9Rcus/6U
DAw/0u6ytILV/zPwW79X74e+ZI9FGZj4t49pFNP3kgxsnayzSjuG1X8zEH95
XcUFV7KPcsV5Hh+0+mxOz1cp+Cc+tkweXEHyz8DugCWWN3NYP30GDBZk9uqr
xfy/Qn5ftcJmHyb/1paBR5+32Y0uZvU/BT9fJQamTGL9H5mQaatHBqgTPqpm
wnzR/kffPluS/DOR7natb6wl2bt2Jnixa68f+o/4oZ+J40aV2prplO8bZuLJ
pGW3vwUQPppmwsSsqnNKC9mDeSaSoscsNDrJ+gczYTR0TfXdPiz+y4Q480X3
e+Es/8vEoRgjr9xs4odjJtZv7mLDuc7ufzJxctHx3eEr6DyemRifZ/WpbwC7
/8mEcFKx56xMFv9nwuN3b6PJOwnPeZlY13l265hSuu9NyoRSl5iHpjNYP2Im
Jo97+918N/P/mbjo1KfN3JzsJy8Tq6xeV96uYv4/E1stbiTY6bL4PxNLj/Zd
MvAt8aMkE/op/V5u60f+vCxTgTfzhcu3UX2oPBMDr6VwC33p91WZaN3AO31r
G+FZtYK/jrL1i06z/t5MLEx6Up10je4rmjLRS378YBmrV7VlonPDY47VR8LP
zkwIHL5U1r1j/a98NC502W2ZQ+ftxsfoX6+q9asJ/1X5WJd2bIeI0avGx/fz
U2MzzOn86nz02DY0ri2L9FeTj8zAzdybXdl9IR/H7M//HtZA9qfDxz3Y3Pcd
RufX52Nl390tJuy+bSQf9tLplq4nKF4x5KNfua7f9layH2M+OOuOfj4wh/TF
lA+tQAu7zf9RPmLGxzcvswmDL7F8gw/vp5IVF62Jfgs+Hk86Vby5nvgDPva8
2Tt4wCj6/Xw+1tYaZkSWEr3WfLidtNm24x3hoS0f3LJs/w3diR4OHzP9XlS7
jzrx77wOfAh6r37nWsfyVcX5Tqtfz91K99XOfKgF936x8hjJ14UP5XkVpzd1
p3qvGx9v/J03fjEh/+PJxxQrZy/ZPKLXh4+6heEfKwopXuPyoesEg3urSF8D
+LhWt3PYt9XUrxei4FdcjNfXQ1TvCedjyDcjvrw71aN4fHQ/Mbx24lyqB8bx
MWjM1yvpHYR/SXxc/vl0xPaTtH4aH2O+52ZWRNF5+XzEmby/uMuN+CniI/qn
X9F0D9JnGR8PcyITr7gTPTl8/JzS8XypJ62Xx0d+WtdPWW8N/o3z+TDKyynw
CKb4v4CP5oqpGPSY9K2Qj8SBMznNHWT/RXxYD/TcEtKd8rFiPny+1O1yPUzx
dwkfkytPr608Q/hXyodX8YPJEw5Qf2YZHydkw+z3cOn90qt8aDqOGtW6ivhd
zodn+elNQcdI/+7wITePzrW7yvpt+Nh98czCLhMon3uo0NelFyabfyf8reYj
vbSj4uQgwr+nfGx9XFC0bBKdt4EP18cxaermhK+NfDyKeONtEEX8auLDJnHu
TLdkspcPfFjGLSgf7cL6+fkY+26b6ZgFFH92KPT5ZM3XsN7Er04+ntbv+fn5
EenbLz52DUs/uesDnU8pCwcX9LV6YkzxTbcsGIS7zZU8YvWgLPzZOri0dgbp
v1oWlE6pDV16l/UHZcFMylUt2kXra2ahYlzcxij2PoR2FprNLAfPPUT3+zpZ
GPel19YZZhTv6WdhqcBpcsEB0oeRWYhs/flWjb2vb5gFzpTc6rSdhC/GWUjd
Od2rayXx0zQLAy4p660rJHmbZcHm7szY15OIP+ZZuH1Ob6VUl+Ijiyw4lnaN
+niM+mORhYAi93iTfYQ/87OgHV706vxmdh+ZhbvHZl5ff5ziGdssrJi2MNfo
P3Y/nQWLma+2jfag988csmB1NeOmNI78j2MWOhJMuk4ZSvJ1zsLn/Umafa3o
fQmXLEj1d9Q+NSV8d8tCtw1mFy8fJ/vzzMLFU+5dSnvR9x58FPQ9Pn/WqJTu
K7iK3+txOkseUL0oIAvf8jiF+xPIPkKyIDv7WNlWQv4hPAsFfJ9Ftvms/p2F
lubGK1m96P4tLgvlnM7c1MGE/0lZeLkfDX+TSd/TspD/+83zl0pv6H48C/wp
C63T1pE8RAr5rnmUvfE51Y9lWSg6k33tC+snzcnC9BGXDy5+R/iVl4U1i/rF
3BhD8Vx+Fl4XflXPucfsX8H/47XTU2rJnxRmYePQ5Ds3fhHeFGWh9/nXW66t
L/i3XnEWJj3YpG4loN+XZKEz6OyqlTtIP0uzEH9BN+jaNFZ/y4JQ2OVms5Ti
t6tZ6OukP33EInYfq9DnvHVDPFOo3ndHoc+cmMvu/Vl9VnH+FFw6rknPP8yC
pmFjtb8Zy9cU62ecu63Xg/j3NAsTNHcYZZ1h/jsLOpf7te1No/irMQu+m601
p84l/9GUhdkXvNvnbiV/8yELLlqmpRcaDf6N27IwpZqn6RpE63VkYfjTfmei
ppG+dGah7oQ876k50fMrCzPsilVu9qb4R0kAS60fu5Wl5D+7CaCxVn/8o4Hs
PlCAtP4llwSehFdqAnw5NXGanSPV39QFmPZiRdy6XhR/awpgc+mOtlI8yxcE
CM2Kv5LDp/tRHQEMD6tmBX1h7xcK4PSxtvuxrqSvIwU4GXJ1RZM+yycFGPRw
dZaHPuGNsQAhXircoYZUvzQVQCeC89LKjOIFMwGsN0VVROyl+0dzAXhKO8uO
HCc8shDA81d192PlVE+DAFsGiyYsZ/ej8wUI4I9a7FfI7iME+DN1xCFvfZKv
rQC1p2qdTbbQ/hwBJih/twk2o/qkgwCNlet9dnhSfukoQMy3eQ3DfEk+zorz
Pe5f4WJM8YWLYjxa7cy9BrIfNwHqb+3uG8HuAzwFWFr4utOtlepZPgLsPP5W
lmhH8TZXwR+h/eegSspHAxT0dD89+4QP4VuIAF3+rKxam0j4Gi5A1Ym5GT+G
sPenBZgsz7q3aqv1v3GcAAOHBVy/0ZvsI0mAIybFg3bsIn+QJsCdMR2XWm5R
/Z0vwC2D6jnefFpPpJDHr11b772l+zmZAH0nbnST7aX7jhwBijOnZM+9yfJn
AVZu0I89+IDwIl+A5Ki50zr3k34VCGBVMLVb+DzSl0IB2oYfa123gfVDK+QT
kZsgVCJ/XSyA3uKR0nPvKF4vEeDdpD7VN34Q3pUK8MlcVjZrOfUPlQlQtm5z
15Z9hN9XBZAIhn1rW2j57/flAqRbJDqGbST8viPAh7Uz3D17kD5WCeA9X8l2
7VLqX34oQOrGB4uzGuh81Yr9jj7ZsTCC9PupAHYhLTeT/vd+pgDLF9Vw6iIJ
vxsV9lGWNyOIy/q5BLgaM2fAtbvM/gX4rWy6XeMU7d8mwGtfk8ZX6aTfHQJs
r945frc/2XenAKZq468kr6T86ZfCHjO9myYZsO8vCbFtetqDUA/Cx25CNKqG
9c1axPJBITgLruQZvCd9VBMitdywpOwVe19OiKTfuyRFrF6hKURau+zIc1vS
b20hMlS+jK0PpXqxjhAnj5e/eBBB+qkvRGjnS69MF/JnI4XYr2NmF+zP+omF
4Er37o9yIzwyFuLjtOVXKwbT+UyF+MFRHuP7hPy7mRD+LSbbInfQvLkQ3YQa
p/qx/NhCCOMlU+2uD6J6CoRoKTgy0PGHwb/5+UJM18/oMYpH/LMWItI1Pu8h
n8X/Qsy3OaG9q4n0lSPECm1saJ9t+W/sIMTb0jNvdCzYfbUQs5rvWw5i8buz
EIVNq6yPn2PvBwphMdSy7rUX5btuCnq1Mu8GLWH9rEIY2H1c01OT+OkjxLHn
8xPmT2b9DULsED+yazej9QOE0PnoyOl4Tv4xRIgnE3ssfszqh+FCOH1JPKN/
n8X/Qtw1mZ0v9qLfxwnxxb96y+oqlg8LMbV3mu67h5Q/pAlRe39xY3Iy2RNf
CF5Zd+u2foR/IiEW7/ULfhzE+qWEeP3+Xf4F1s+SI0S+mZtjygvWPyFEtffP
oJDuhE/5QsTlfvIVjmX9FEK4q3Td7/+R4rtCIcZWhZ73f0HyKhLCamgs79sD
2q9YCBWTSQ+SXlB8WSKE6sb60E+hxL9ShTyihBPeLyE8KRNCuKEheFMn4dFV
IUQznlsNkJL/KBeil/Kx9j0yOs8dIZ5r7M278YPyiSqF/DJuJ98zIHk8FKI0
qyD63lTCx2ohrp4t23tSk/Krp0KUDEnd6feCft+g0M8FLdbN/W78+32jEG+a
h5YMfUX5W5MQ/OROTb9dVN//IIQ8Iu7LrodkD21CZBe6/X7wiPbrEAIao7vE
se+3dQox7GuLz6gFhN+/hAi/ZnFjRyD1jymJULPpzm6naPLv3URYWLxJWWMO
uw8SIcp0Q68AL/KPaiK8fdOiWi1k3wsQQa3e6XwU67/RVDx//EL6wRekL9oi
uFpfKi/sTfmTjgiDOkL7XhhA9q0vwjSjv/OWPqL9R4oU8dQelYomyk8MRbjf
O25BV2/CT2MRNnqVfnxTQvIzFWF48pueumvJHs1ECPm7pYvjeZb/izDq2Pi0
W9cJfyxEeG+XdtYnkuIdiPCy4OXD1nkUz88XwUTjdG3kGMIzaxF69Xrcb5gh
rWcrQreaHlv1TlK+xREhf6zqu7Qw6n9yEOHJseQmnfXsvlIE3o23d1r5RL+z
CPqSXr1X9mfvh4ggu32Dm+9L8Zqbgl/DeINvhF+ieqYIp9p+Fg/pQfL0ESE1
OvrMwh3sfSIRwlSmbz1wl+wxQITy2j+LHc6KyP+LsPoOL8PAlPxLuAilwtop
UwbfJfsXoc3jQ4u7E503ToRXYz8VftCw/DdOEmGS/6+xm06S/0lTnG+HrjR5
Pns/QoSv/BiVMV0If0UiGExsOJgyh/gnE+HbpZc4xN7Xy1Gc/0iLyWBH4mee
CCv1V43t5kz+JV+E7TFR0wXBJO8ChTyqHs3KNiJ+FSr04TeWv1Rn9VURiidJ
Ii13kj0Vi8Cp07JrnkPxbokIv277TLG6RvIuFcHHxea4/zTSzzKFflyfxdn0
hfT3qmI93m6lXdPYfYwIoWllV/5eIHy5I8Lj72bDB6SR/6wSYXes9VHTMooH
HyrorzFqjWHvV1WLcCR50gzrw8r/xk9FUKnJTk9uJ/tuEMHwwvA/dSrknxpF
yDPwqL3UTPQ0ibC8vaj7gkDS9w8K/a8f6/KlL+vvF8Eiu/3jFFN6vkOEfTpO
3mfY++2dIpz1Mdr1SJfk+0uxf+j1b/W/2feXxNCezue8XUX9Cd3E6NXsnhdp
SvmpqhitOmkuKYcpHlMTo7Y+9tXh3RQPqYsx8vrdsUO/UP1EUwyXAzoDX31i
+b8YavMfrf1zm8Y6YiycWtjw4jx7v1wM6XEjNPlY/psfKUb5wQMWQULyZ4Zi
HK/dfTNUh/DIWIw/NSe0Li8jeZmK0e23zFHVnvDDTIypZ23mnGxg/WZi5O8o
VCttI/yzUJzHLkpqqcW+ryJG4v5I/rzqW//OM18Mg/OWXwbZ0PrWYvQ8Mqu3
SjzZm60YozL+cDXmsPsJMYqL7ldGdKV830EMa6XW+DetVP9yFOMAZ8jw5GGU
jzqL0Www9ZYv+56Bixg33i5aOXYv5cduYpxR7vdjAY/Gngp67KuMv04nefmI
cXnbTMsr31h/sxhL165WPXaR7CVAjC1LJcqjVKjeEiKG/kBVr6wvzP8r+Lns
wtjOZrIPnhgO5RPvB7Lvi8aJMXfp8sV+kYQnSWIkvxFpqoXQ+mli3PeIa5OM
I/zmi9FZfbN5jhXpj0iMoCYr29SrJE+ZGOdj+tro8Mjf54ix92VpZc+F7P0+
MWZePn7ChPXH5ovxI7RH9z2adJ4CMUzQ0eXJTLK/QjFO+QesKohR/jcuEmOa
yKuSb0b4WCzG20d6249qLPs3LlHIO95ov+pFg3/jUjFKPSb1W3Wefc9PjI//
peXz95B8r4rxqatSvdFo8m/lCv4WTttibUTnvSNG5ne/rUucWH+GGF0CN+b1
KaZ4+KEY81/38UwzoXy3Woyal8fPR66n/uynYjyNmpuZzGf392IMupwU/yyZ
7osbxRgjWntkNusXaxJjxCKZidCO7OeDGL99+ePiQ5j9i3FhSZ9eA1eTfXSI
oasx7aPbI9bvI1b8PWYzrJPW/yWGBv/VxSAh+/6fBI7B5yZo2VK82k2Ctv/+
XJ50h+7vVSXgOBbsW+9L9qomQc6S25rv/eh5dQlii1w2yHpRfKUpQcqpkl1X
QPajLcF7E08/x/UU3+lI0PB9UOIJ5s/0JShLTHbftJTkPVKCpEt1vg8c2fsk
EkwefTnaqI78ibEEDqN2rR3A7tdMJdB5tk2Ld5LkaybBrZAS9SHXKJ41lyAh
dHnO1Abil4UENa4PGqpnMfuXwHao36qizxRfzZcg7opB1uFK0n9rCUS5sbdv
MbyzlcB4VR+Xi+mExxwJ5s6Kao/WoPjWQQKlzbkz06Jpf0cJusyKfRW5g/jr
LIGzyc9zo20uUP1PAt+5fSevkFD85yaB5trViUdElH94SvC4uN+F0T60vo8E
hQ5pYvFNyle5EugtbGnR6aD4JkACN7vRVd3Z+7khEux6tSZfKZz4HS7Bprbc
P5fOW/4b8xTrd87bUTCG8vc4CYqyL3OF2awfRoJvNSduDA2kfClNghBX+aSe
30m/+BJkP0/mzdUn+Ykk8N519LTtJ8InmQS9ddMP2c0j+eVI0NT88FnOVKpH
5klwU+lxs/dJWi9fgsgXV2+mc6mfsEChPxNNZnzrSfhdKMG27V8MQgtJ/4oU
8uo8WD5jDqv/S2B98saKu4uI/yUS/Bx8W0eqRPhVKkFfl+eDrDzZ90MkWNJ9
6ZVvCXT/fVXB/4d7R/bvS/F0uUKf3Arc7fh0vjsSLMrx/WGiR/6+SoIXI9fs
XNaV+PlQYS9PY8MyK8keqiUIvKo77eMkss+nEvzFji8pMax/V4I1euJdukLK
9xslSE+fOipkhsG/cZMEct3cvy+MKH75IIFBD9OxpxrZ/Z4EQ4zc1YfNIXvr
kGBd0xPD/tOZ/Usw+s6Rx0sf0PsyvyT470HhiguV5K+VpLAoHxS4dQvlM92k
OHThQXqZDt0HqErh9yiu59mFhIdqUmg+DS69fIbydXUprN4+b9TTovhAU4oy
gxkaytkkX20prswLX3eA2auOFLfuWU3Mu3GZ/L8UaxO4dv41JM+RUjzscjpI
VYPsz1CKJwOHqPrfp/MZS+EmK/06ewb5W1MpFvy60f35eIrXzKTwdkZet07W
byTFs+FPdt9i9XULKSaMXx589zWr/yvO8+L95p4N5L/mSzFRxf9wgymd11qx
30DzpdeySb9spRiree/srFXUD82RIsmucMRlO9rPQXHepYuvT11cRv5figaj
2/O1ulK86SyFqs2PA9x35E9cpNiZnOvztz/FZ25SFFbOn1DZleoNnlIM+653
TtBI/sBHCvXXqRdzP1O/FFeK+4n7hKEp5I8CpJD6772gF7Pi3zhECr7Srdyt
GhSPhEuRwhlYPj6EfX9Litb9SdqnOVSvi5NCdn7549ij1G+aJMVxmTC26yaD
f/NpCv3w9p6cvILyAb4UwYYz/xroEb6IpLANc7+1dxPFKzIpknctn/mgG+Fn
jhSeWY+1Yhew7+VJcXhcsEfbCZJ/vhRLU3aFzDxK/qZAwV/Rkye/5hD/CqUQ
zA53/B1F9lAkRZqqa3zgK1qvWIood1v1HW8JP0sU5x/zqXuXGIonS6X4OLCH
8rgTpM9lCvkY/66/M53891UFfza1Rxb/IbwulyJ08WgJhLTfHSkGPnY+tzuG
fW9HMZ/Ya66DB+nnQynKP1hGdaml9aul8Ji58Yf+VzrfUyn6+hnvLPFn36eT
oo/x9BzLScS/RilWHf97TtOF/FOTFFvq7uhklxAef1Doz75rce3HWH+3FE0q
NSa5dRQvdkhRYXHoo/F71u8hxeaoIWv3hNHzv6R4Lpp0zDiH9X/IMDhF02PH
Mct/424yxAWXOPK6U/1DVQaXjsfa39j3+NRkULHUTxi/g93/y1AkfDtxKPs+
j6YMvHV3+v2ZSPaoLcPGnCK+pozsQ0cGu9mfLIbbU36jL0OxuvWARwHk70cq
5hv0+j62ovs2Qxn2VL7odVRO+auxDKMOVOZMMiZ/YCqD9YqEbs/Z/YGZDJeu
JfsKw0nfzGXotsng/rM99L1oCxmW67XVZ5iR/CBDqk3nthMisp/5Mjg7PlL+
3E7xmbWC3oWecV0sqN5uK0NpmvRv219W/5Ph4RLLwzHKFD84yPDnZ7X7+Fzi
t6PifCPWjUqQk392luHHMN15gmHs/TUZ9PZdWH3yLOmfm4L/fpz5lispv/aU
wVBtcu7fT+TPfWSYc95g99u+RC9XhvF+XqHVRSSvABnGiH827u8k/QuRwXXV
wOpDz4lf4Qp+BE3VXj6RfZ9bwS/tn4VWx8ie42R4Nqvqy1tVen8vSYae7yL7
KKXY/JtPU/DLM+kDvyfhFV+hH9WhLTY7KB4RyRD7qKhQOZrkLZPBZK4693U5
8TNHBo+yJWMfhxF+5smwzNdpdtgPlv/LkGR8YGvCHdZPL4PjqM2v65upXl+o
4G+XjN8v7lA9rUiGqKjTp7SVKX8olqHvCr2TcQ3M/mVYoX0uerc21TtKZQh5
9Dzu2K9Eqv/L8LSLi07NW/LXV2WYUvzh2uyFyv/G5TKs6dH0vW4s2csdGaSC
rLc5E9n7OTK8LLq0yWEbxZcPZZjsOOX+7fVEX7WCnj4Z53M+0vfbn8pwtuZt
r1vsfbMGGSa9sRkg8iC8aVTYzx3L4ta9VE9qkuHnikXXOSeW/5v/oJBH4V3N
J55kD20yIL9l4Kxgwo8OGbZaHbprGU/y6ZRB0yF9p3wtq//JoP/ESqeDxXtK
chS56q0/4kfxRDc5Mi8g45Yd4YmqHE1jt0mzbcnfqsmRZqxkUcDyH3U5DNcP
qrWMIn3XlCMhU3fI2y2s/0eOufe8WhubyH/pyLGUE7vs4GrSN305/gxMvDvk
HN2vjpRjY/v7czVi8geGcsgLx63d2YXOZyyH+M+bTsFo9j1GOXQGbC7U+o9+
byaHSpeGQZ265O/M5egRoXvhVyqdz0KOQZbzjry5QvKBHMc+KJnxVxPezpcj
29Uw87cR1d+s5Vh3YmPNhQrin60cGpYnMi01iD6OHLceSeLijGh/BzlCi/3j
R8yk+y5HOc6f6N/SGknnd5bjo2nCbiclg39jFzkWnNyT7XGI4gE3Oap8A2RP
gyi/9pTjtb8gceozwhsfOYyexbRoSWk/rhzTu0Q4b4sjfxAgx6g59x3v/aDz
hchxbnT93fM5xN9wOTyennun5sK+PynHQb1ZCe6/CF/i5AgelvZiXR3hU5Ic
fVRGPHK6R/aZJseArB99B9yg3/PlcPx8RcmKff9apFjv1LV4lRrSF5kcykM2
BLdvI/nnyBGfo7vb/CrJP08Ol1iNRTdqyd7z5fAekDrYLYjwsECOU7PrAzdV
sfq/HOGXgi5mB7H6nxyHXNdKgh5T/FIsxwz9NXM0cynfLZHjff91D4JfUv21
VI6yJT2NvR2Jn2UK+Wr5/vp7le6Pr8rxLD7EJrEf+x6HHPqq2R+WPGD2L0fe
qydZIU8oPqmSY0yw/dgbe+l7CA/lMJ7w4rcji1erFfxQLxWNOEPx0FM5POe8
rsk/T/6nQY498dCXs/dBGuXgts+e51XI3ueRY/bT3I25JqR/H+SwDnjUpPWN
5NEmh3vzC1mPVVRP6pBjwjgfL/lNkn+nYn7iy8LL78mf/pIj9bXWk717WP9f
NpJeF3FahpJ/6paNyOPrHPzTSL6q2Tj6ZMR1rKZ4US0bNVM/D54TSvalno3T
z50G6Vyj+xPNbBxyKNzY7Efy087G9oLTRVF6ZF862djfV+dPZRbFY/rZOPnW
pN6V9Z+MzIZ5Af+jqSHlX4bZkGyv/u/gCtIv42zo9H/cZHuW7Nc0GxNP9zNd
tYzq92bZOPhp1niDTva+oYKe8uXLHXeR/C2yUdLSp1H8gPwjsiHeyPsvmH2/
Y3421DustV4ZULxjnY1zLx0n1Ayi/Ns2GyPNZ8/u/pZ97zEbP5rP97t2iPIJ
h2xc9VutPyeR8i/HbIgKjc5MPEHncc6G3eguvz8fofqKSzYWW5W0pt8iebtl
I8HVMkH9D9W7PLMx55CgxnoR8dsnG7Unvhxa+Z3W4yrkd35kqESH/FdANt5F
LcDO+ex952xUV70a9sGG8Do8G1+nJ1v+H0/XHk/V97SRipJKun4lSUIqCUlo
koSkQrq4FElIkiQhIUkUQiXn4txv3SRJhSQkSZJKqCSJkoRQSe9+P2b9/lyf
fc7ea80888zMusy64kvqr2VCgaSxJjkT9RWbCUHG16wefif7/zJhiLFR8UAj
2tOZTEgrGeOxOwTxnpIJ4wKSv4bKIx+nZ4J5mw3bdSvZL5sJv6KLV7scJPk/
JQ+dQfNF/mhPrEx4VhIyuvWyzEiblwnFo8Pl7umjPESZsHxuQeGn/RjvXMmE
v2sCa7duJvWgM+GR/didAZfQPnKp8WuqDZd/RHvOp+QXvKLuYSXGbwWZ4ND1
oVHfNQf9fyas3J9ju8CY7P+h8FS21CXiLtpvRSbc2Zm3YjgC8VuVCQ+mV6z+
pEr2/2TC2ObtfYUEX3WZMIeVHbKY1J+tz4SwN65bbpN68k2ZUDPlnLnEC/mx
mervulWXv5/HeK+V6l9o+m+nOsRbeyZcuT1fb8kOlG8n1Q4c679xMtpbdyas
VW0/7+qE/qAvE+jDXhq7vyK/DVL22e/VyHREvAxlwmt+kXOVEan/QYNpztJl
8Vy0J1karNU7m9dN7EeOBh0nj7oozsX+K9Cga8aHlRO3knp5NAj6R+umr0a+
UKaBd67nr3/jMD+dQYMLHjtf7OxFfajQ4NTFr6+2j0Y+UqOB7+u8ePtX2F8N
GqjxfCfn2eF+Ci0aWGgz9i8/j/rVpcGUufXLdqwm9fhoUNnuucdrAvKdAQ2c
yqTC1g6jfRvT4Gfej6M/pdkY/9OgMWv0LWsyvwg0mLF3//trGVhPy5IGm0wu
/WcTiPG8NQ2q5U7mZkdgvGlHg20D6YemqJH8nwbPZwYlpP4v/6fe76Hd/bMY
+7eNBv5/VKXr36O+XWkg7fDLe+VGUh+dBr0hLLs+L5mRthcN+v/mbIleS86z
0mCcd8EEn0L8vT8Ndhe+NHTRw+eBNEiaGmTWORPxEkwDeFLFj5+N+XIoDcae
NrtlcAv5JIIGfzot1kWk4fpTFA3mDpsZXWlUH3keS4PCMSy/zcfJeWhKfssd
UrOXI17O0ODSupLY0fOQT1JosGVUWOoCD/x/Og2W3X99uYfML2fQIFOqKZ02
6Tbu/6GB/scjW7Ybov9k0cA46N6x9DKy/4cG803HrVQ9ifYtosHUzdwbm/dj
vHCFBulet8f6nMb4NpuS78tLN7rJ+e9cGpitfWV81gv1m0/hzbtiitJo5OMC
GtDH0BJGTyP7/2hw0emyB18R31dKgxsZcqKrz8j+Pxp8P8b4cioe8/UqGiwd
v2LoSB/iv4YGKtcGpeQN8HkdDV417n0ddwX9az0Nxo+1PFgbjr9vosGtq3Ro
2Ybn55tpYKdwxF8UhfMtrZT+BzP3lhxA/mmnQS3zFLulGPmnkwbD/upqxuXo
D7ppcNhNU+Qpg+dn+mhwX7Kn/fQAymOQBsc69ZKNtqA+hmjA+rbXpE0f8SRF
Bw/60sQ/dzF/kaXDtt5kDb4Smf+jg23MZf7GGvRvCnTw2VgXOHMhzu9NosMC
ne3X3gWiP1emQxKNe6R/LfrHGXS48Unm+o6FeD5LhQ4H1SL+zb5GR/ung1ei
cuaObpwf1aDDqJln6ntoqB8tOtCY7odtX5D5fzqYnrph82EWqUdNh+uJScnc
H8gPBnS4qnJ4wahaxL8xHSY98LnwKgDfZ0qHMotXFoXW5L4rOtxV8LHL77cY
eW5Jh1xvO7XC1WT+jxpvlfULX3Ie144Oyj8P7ROuxvhgEx1cvI5+ur9RfeS5
Ex3qGu5Nv3+X5P90iGiY6Wl0D+NfVzrMVY1qSlLG3++iQ62+uzV3NJn/o0Ps
0q+B3fHYXx86ZCim8EfdQDz706FidmPw59cYLwXSoePfvn3fT6L/CaaDZ+W7
FUV8ct6FDkbiXpeDpiivCDo81C19sWcRqX9Ih4Zd0bc01iCfxdLhqE3C94Fn
2I6nw9q87mZpJ7SfM3RgNR6+YdOB/i+FDqX0lFR1fTL/T4ezzweCN7ejPjPo
8HPzhezA22gfdDo4b9GWzy4i56fpYPH0i0y1O/IZj5LfZ4NyrQX4fhEd0kxu
G+wg51eu0CFQ0+/5TnW0j2w66Jiw0lTJ/uhcOhgc3XFeq4Cct6bD1Oj5Xkek
UH4FlLwjS68xNDAfKqbwaL3ttBS5L6yUks9An9Wep6i/Cmq8JzgKge3o36ro
sOtx/leJA6nPQ4emTKe2uET0D3V0OHSDF6y1hsz/0WF/S03IQybOlzXRYUCu
wGd/GMZnzXTIu641Z6kN8l0rHe7MShvYTPLfdmr8cc3xS+diftBJB1Vn28gP
eWT9jxqPm/2zsHbsbx8l72JNEUOK1PuiQ9tLnb87k1HfQ3SYz1o4ZQqpNyPF
gLgzuwL/zSP+nwGe+WvyZ9ajfcsxIHuM8XxGLepPgQHhC1Tj+pPQf0xiUHza
eF3dHPGtzADR26Trk2jkvDD1/1eH/+XXo/9RYcDZ5kfn+5chHtUY0Efzrb+Z
gd/TYMDLIA/jdzrkPDkDHma1uCV/xfxPlwHlF1b5xZiR/f8MmFu1KuTwfoxf
DRiwLemo3/Kb5LwZ9Xvrt1HHF+L8kCkDSpKW7uiZQe57Y0DudPtzuvMQb5YM
Kh79YNp4m+z/Z8CXwYWM1jpcv7VjQJlgFJ8HpN4vA0b/PUOXhKF+nah2jVSm
zV60z20MMEroKZ1jjvG5KwOEmz13R63GeGMXAyYmS0x2PCLr/wzYl5LTobMC
/a0PA1ZGd+m1TUc+9WeAVewon1Qb3N8WyIDIuFlaDt8xnw9mwK7YoG/33yBf
hjJAWWODeXY42lsEA+4971Gq/0bu12OAPb/5e+VfnE+KZcDpl+cEmwMw/4pn
ABhaVEjZo7zOMKDtW9Lwn0fI9ykMYOquHpOyHu0tnWq/0NRbeQrxmUHJI1tl
3rwBlA+dAcbaVkssBeT8JKX/4YZp4Xn4fx4D0stVolpMUF4iBhgYlrQq+KO9
X6Her/l+7ngWfj+bAb0NT4yPAeo7lwE3bz91DT9K9v8ygK8nE3/nDa6fFzDA
lOE0sOQwuc+SAa13CwriiL8pZYDhpI6d+cnIdxUMuFp4+6iOG8q7igGbjdlT
MrQxH6lhQGXWtuV3WhDvdQxwOLJ0sfUPfF89A7SbZpjYt6A+mhigUbBXf1Qd
xofNDLixTjrZ4DXx/5T8P4yO3zeB5P8MqB1cqtOyE/1xJwM0N19Qu++P/qub
0m+hRDpZnuT/DNBbafJGpwX1OcgAaQ2fpJzxyEdD1PtUNM3O5JL5PyaYybSr
xvqjvGSZcHHDLc+rhxAvckyQnclI/qOL8boCEyzndsv8+EH2/zBhWNO/8Xk3
ykOZCbWXHHQeuKM+ZzDBWmqt1utinO9UYcKXMvGXFY5oX2pMuDRNa2mUK/KX
BhPoHrNsGmvJ/B8TOk93OT44hfapywTRHrfgDUL073pMaPvk0Cu/APnbgAm/
K16YdwiQ742Z4CXDoolU8byKKROs7r6+9ceZ1B9iwq60bNi7FedbLZmw1/zc
Lhmm+shzayb4mPXsHquCbTsmDBV6hNzVI/E/E24XrtY5tgzH78SEj4yqD9Nt
Sb1i6vnZddEfRIhfVybIp8kv4umQ/f/U+xVsjkRtx7YXE+DYj4lff6F+fZjQ
3iL9cls4+hd/JkSWl71j5WH/A5kgtF+0xXM96ieYCQl31vLvKJN6J0wYVGj2
Lt2A8XwENX7hv9XrQ8n5ZyYY7DbbOKMH48tYJgQOZy73uo18FM8ElqL5gg5b
xPcZJsQs3cbNvYfz/SlM4Hw4tS35G8n/maApN1ljdQHG9xlMuDsp4RSTxBN0
JricWPBBfkk9xv9MsPX91uy9Cb/Po/SpZLg3sYrUU2ZCYeWaxB8H0f9cYUJP
WqLcCSkS/zOh/7zA7JIfjieXCad/xjT13UK+zGcCj3fNiZ+C8UUBNf49qfuW
15H6S0x4mfLn3GRp/H8pE5p6xkcrluP+qQomLFnx9V59Ns4fVDHhatGceQ/L
yPwfE84nKr+/pozvq2PCwce/Din1oj+vZ0KNqfmEkq8YLzQxIWjBd9PlN8l9
iBRe0p7pbST7NVqZ8HfOppfB/9BftjPhRXhidFsq2ksnE2IVdk+Wc0R76maC
BJS+3nJBe+tjgpT3mWXuQ4j/QSbcMC9oONyA8eEQE374z5LL7iD7/7Pgau6s
sf8ssX6vbBbAVdvbKxJJPdgsOC7jk52wDf2xQhaolRaKOV9QH5OyIMMoI9Wr
H/GinAW/F3o45XXi92ZkwbTDex+mvEC+VskCW3dFtwxy/6paFlwSfGUyLmM8
oJEF6ucMA7/ewf0BWlmQ0mJ2act5sv6XBW6PTi97TdaL9LLAbkq9qRazZuT3
BlmgtGuMsIrs3zfOgv9+PciLI/cDmWaBlFly/ulGUn8oCzIXuNsFhKJ9WGaB
96N3n4sScb7TOgsMfD9p941CfrbLgvfsDgdWGalPScnLWK4h84LMSNspCyJ+
HRhI3onv25YFIRGqGh3/kM9cs0D+5oMlR8vQP+7KApn4K7EcV7RXryx4N3nX
bZt7qG+fLNh96mBElAX6a/8sGKh9kmB8h9wnQsmPZRC8bi3mV8FZUF/ftvTJ
G8xPQrPgjtr37o5lKK+ILDD3zV/4XpncP0PJ4zMt8HIn7leLzYJiZ7XmkjPq
I7+Pz4I1f31kGaWIzzNZ0MX9r/0/N5wfSckCvePr/3tchfyWngXd906WZuei
/WZkgVfszcTpYdh/OqXfLL+fHDlSPyULEhzmPvhJ/DWPwk/tlJxpxzGeF2VB
/MWKstuknsuVLKhrP7j4/AVSXzcL5vdOHxwnJPl/FgTx566fpYH4ys+C8Cdh
R6M2Yv8LsuBHxJOqR6dJ/cUsqLRyPjT0DPVXmgXbpnVGiA9gfFKRBeWFjead
ExAPVVkwcWAD/64u6rcmC75um162jdyPWZcFG1baqCZ8RT6oz4K3pjk2rEWI
36YsOKnqliYtRP00Z8GXqpJ/Hl5k/w8ln9dL/Wbb4nxrexZo7ngd/DLtxki7
MwtMluZv/8Um99lQeIHxB9cW4HxjXxaIvF1qA/fhevBgFgjaGHmeCWifQ1kQ
EFd85Gw/xtNSLBD8TpB85mM8IMOCvIGJTxl5iD9ZFthxnsv296F8xrBg/l/d
s45ZJD9gwc2wUXadGRgvjWNBpL/+8ChjjHcUWPBhSse+Hak4fkUWVDoGjJIn
9cwnsaCCJ1pZV47z0UosmEor1xlVgnyjzAJZK4cdF+YgP0xjwcuvvO8qOWR9
gQWjT83c82IB8s0sFgwr/DLPJfdfqrBAQUo/kH4df6/KgoZfyz4ob8T+qLHA
PmrL0cFhbKuz4LGSJHGzG+JZgwW/yiqOngtDf6fJggl75OQ0tuN6gxYLUpc/
cBlrhP5Rh/r96Ho9x04yX0F9L3x17m6y/rmYBbG/M9TPV5L7VFjA4a9Y3umB
8ten5NOrFvh6FTnPyIJsJ/E22fXIF0YsMJm0k76K3I9hzAL36bvhxWXEvwkL
riw85bBfiux3or5fv3jTgQyUtzkL1NqH5s2wIfdXsECi6WHSNQ7X+y1YsDHh
0n33QpIPsSDzZ2LmTXJ/rxUL0hOnJFR243itWVBv3zVjy0/0j7ZUf06WLaiL
RTzYsWByZEbZxasYr9mzwIyxKvVIL9r7JhYcPbeou534JwcWvFr/QTOd1Gd3
YoHRs9ea1ffw984s2LPctEP7Lba3sSB0ibrXnzHIbztY8HvnljTvTNz/60rJ
N3zlrGTCF+4s6JqgLaY9J/dHsGBJyeiIoHDMnzxZ8KU3JXxHDNqzF4Xvhxed
2g7g+UhvFmTs4zz7VE3qM7Ag7k3joiX5qE8/6v3D+spKZD+APwsUn/+4ONkO
9RvAAsuwWD2fmbifMpAFMN56eMNSxGcQC3T4nP7jQSSfY8ENHXmzmaUYP4Ww
oHWXy6QH17F/oSxw/rOT/3EWri+GsaDU8lfFl3/IBxEskDPb8s9oLH4/kgV9
rpn9X/xwPi+KBQ8nFa61PI18F8MCpe6gsXd1yHkQFqSMZrRPv4/4jWPBlipZ
/uYM5Pd4Sj73FlQ3vcL4KoEFxk7GHz+sQPmeYcElFc/yi+Ow/kUSC3ZbFm58
9h/un0xhQe3iMyezZyBfp7Jg29Xk76wExGs6C7rD2ovjjVCeF1iws1W5O9sc
f5/BAr+n8V+vT8H5lEwWqCTvttXxRTzRKfyzswpqd+N4mCxwsw9wmNiA8QGL
BT8WbT15YBj9M4fiQ3andtxWko+yoOfl+tefhYgvAQs2fZ0cv7EG4wcRC3x8
PuWuJfUfJCyYGTbPbM09Eq+yQFff6fI8Ui/lGqX/lZtOWFeQ+2xYcOQAJ12o
jfFcDguEg2f8O/ajveSywPDA7ZBR+/B8TR4LIh7UDnrM3jjyPJ8FJUE3Dvsc
x/mGuywIWad5cXcm6ruABTNknxTY+qN8iljgkv91b+oycn8UC3Ysdv606jjy
SQnFl5GeW0+S8yOlLNiV+npPny7yWTnV/5nNg7HTUP8VFH9bP7z13UN9pF1J
fS9bOmh1NNpvFQtirkR6XibnH6opeZ3v+H1SA/mzhgXJzw0mH2zC+ZBaFiTt
W7ZNzh3jgzoW8F6UTLvzAfn4FQuCjDoY11hl6F9ZEKWaftDiN8azDSzQ2JfA
bonG9ewmFiy4newUNRvjm3cUnmNeh2ToWIz8vpkFfxQiWn07cTwtFF+oTQv9
S/aztbJAL/kg67gF8k0bC/R/Xb+cwsX1t3YWtPUntQYbId9+YUHx0tX7rpwh
83UsaI5st7V8i3joYkF5zaDnaz1yHxEL5n6NdwvqxPimh7LPt/c2i9xlRtp9
LDil+uR2Pdkv38+Ci8Nr+8PJ+dNBFrxbLdM2XI7+8jcLGL8+ebHl0T8PseDE
A5/Hf90Rv8Ms+Lm1ty5Rj9x/zYaaA/p2afGOI20ZNiiEfnr+zBL1I8sGibql
WmAi4mkMG5Z+sdVeV0bqBbLhgerLjKs9GN+PY8Nnee1OdpH6SFuBDcy7Y13D
fVF/imzY6N8hPrkMvz+JDRd8u/efuIDPldgwQ3HVudp0Uk+IDcONCmXj6nF8
09jwJXlLzroWch8NG3gv53/TsMP3zWJDXY6L3ok2xJsKG46c7lALvYn7/1TZ
kDzTtD5Hm9xfxIbupwWeOY3o39TZkC83Z6BCgvrWYMPuyJCoq2/RfjXZoOG4
f4mWPMa/Wmxo6Fxm8rwZ+UOHDUkSNXPLr2S9kg3THs6fr/0Z24vZwJ/VnRs6
G/27HhtOzLls5qCA/K/Phh0LRcvSWvH+HQNq/JyrRZ93oL6N2KB7fM3VBEPi
/yn9CYOP5tngfJ0JG8zHRJ0eb4H2YMqG//LoVQmKGF+Zs4H2Q0Gwn9x3AZS8
PK9y/5H6oBZsMPr06KOfE8rTkg2no99pXHTE/MqKDRXJMqYt+xEP1mzwCd+q
3aaM9Y9s2bCqTXHq7TTkazs2HDXcUHqW3E9oz4ZTz+KiXixF+W9iQ/WJrkLv
JsS/Axuix7Z43LYg66nU+KKf2xa7IR86U/jSfTraa1h9pL2NDV1tJuPopJ70
Djb4/uKpvTiM/3dlQ8ZP1XephSgvdzak+IcmnnFB/7mLDfZVSj1pOxAvnmxY
9P3n4g2A9uLFhhdfTi+/5ID99WaD6y2/8o4cxIsPG8q1pN5MT8P5DD8KL/M/
HDiUycP9Gmywito/Y/4s9D8BbLhfPd6Z9Rb9XyAbyn7Fze8m9beD2OB106jv
wF/8XjAbhgQPpHiT0J+FUHinT1eLW478HErp6+SftGfF2P8wNqTmPTgu3Yb6
j2DDYfHn2LOuKP9Iqr+pbt+/OJP612y4te7YlgnlKM8YNuiMrp672xn/H0vZ
96pSf+8E/H8cG7h6kYbBrvj7eAqfpZqm9dcxv0hgw9PcAAVvaXz/GTb0OCV2
nAvB8Sex4dMm2SOfDiH/pVD41/pUruSNfJ3Khu/nMh93pZF6UmwQJK39/P4v
4uMCG9SMfmn16OP8WAYbvPueJvxJwf5mUnziEN8p0sb5GzrFP3bZwQHkfhsm
JR/Nq1tz5cn9omzYt6HBPZjYE4cND5smljiNwviCR/XvyE/p8EVonwI23Cyt
n7wV8Py8iA2mNS3LL3zG/knY4Hh8tP5Osr/oChu+XXIYPPUN8XaNDccKpBp4
09Ces9kwVSklRzoC4+kcij987C9Kkfg2lw3jzdJcikk9ojw2GKyJnXnoD/qn
fAqvMiGTZqqj/O+ywYHWFD37NPJ/ARvEH7vkfceiPy5iw49RbRGDXeT+KTbU
b3kdHOKB3yuh7GH9sSnlV5F/StkwS+IrE0KTGXlezoYij6zrrV2kXjUbLBck
n7xqZz/SrmSD36wrEcelEJ9VbEg/fMVr6Ubc31JNyU8Ye63cDv1HDWWvlRNj
st7h92vZoN/roqn0Efm+juK77oMf3Feg/3vFhvZFnTZ/Usn6OhsKK8Z8ci/D
fKaBDaJ5KXt++KM9NbEhot5+dpcV8sE7NgzOS7GcKMJ6n83U+7pSC2d7ofxb
2KD4pMQhSQPtqZUNud+Sd0UycfxtFN+lWWZ+IvXM2yn7NDCZNfUmzgd+oeSj
eV1/ciHG951sWOazbEKEDD7vYsO55y2rZtiiv+um8Ht505/Ta3A+oIcNo8bs
45qS/WJ9bFDaqGvbeBXXn/rZEBO1WKhVjv5mkPLPnxinG5pwfvE3G+K3zNUu
UcD1riE2PHEq67PMR381zIYmhSnyi6PQHqQ44JWXrbxuI/KrDAemzNcWPH6F
+JXlgHqLxpfTB1EfYzjQ86h3S/9rHJ8cB24Z0ku5c7NH2uM40FenPH71Y5SP
Agfing9lt6zH9UJFDkw3LVuyW0j8PwciWjsag6dj/qLEAd/tO/bmfUC8KnOg
Zeh4wBN9zCencaDwa8jxZdfw9zM4oJDZe7y9Evs3iwOyC/6cZreTemPU/8ui
En9q4vydKgc2NZcFqmwg5w85EO7fvM+hH/lVnQP2qxbXR/vfwfVIDpjt8crY
EYTzRZocmGX/ZGHiJ7QvLQ7o3PftM3iD39fhQKi3a59aAc4X6XIg3ujgJpcS
kv9zwLntxmXtDpzv1+MAPe2Ssu4v9Df6HJjW1zP5Hjm/a8CB76Undn9MwPl9
Iw5MGHzvMoacxzbmwPLbv3ce00X/bsKB6MlM46CXuD5pyoGcXqn7TTTsrzkH
zHcfFyeS+3WAA28/59VsysN4z4IDYzKtsnV10F4sObBZBBpTT6M9WHFgcEX1
XKMsXO+w5sDG38WuF+8gH9lyILfU3iv0MbbtqN8r6MaO6cD42p4D/XkKYvMY
PG+1iQO/rbTUbByQfx04sOHKo3dyz1EfThxoc2yJFZHzv86Ufnr0n9yNYOL6
Kges9i0ozyP1SHdwoFTFTib5GfKtKweOHixZT1+E/ODOgabmwIBgJ+TLXdT7
3nM9XixG/vGk2mv9Rg8vRvx5caAhO3Sw8gfyrzcHar7FZKel43lxHw6M9yx7
r+OJ/fPjwEfw2yvVgfNJ/pT8jUqDfx/C9ZsASv/XEt8vc0L9B3KgauLM6L9r
kB+DKHsYeAIHpmM+GMyB0aXbKz4OI1+HcKBTLsdCag7acygHpirL6f/owPGF
ccBTeHKLuQpZ7+VApGHd+j2knnIkB9Ljd/ry/pL716nnUsvui8uQD2I4cL3e
b359FsZTsRSe4qbz5+7D53EcWLntkEX+NMR7PAc4tyb27PTF8SZw4E/u75z5
rpiPnqH0EaN6Ms8J50OTOBDU/Wli6W+yfswB6euXpe5sVx9pp1L4jKpeuFFa
ZqSdzoEu91XSrasRbxc4ELbrfvcTDsn/OTCxs1Q75zXKM5MDFt8lC8cOYb5M
50CjXYbc5esYvzM54H3Bav7bPFJ/jsJ3Q6BiDxvzYw71/VNT/ikcxPOSPA6s
Lwke9a8R8SvggIf89h/dK9A+RNT4hd9d2hpw/kPCAXfxLZfKa5hvXOGA7vCv
aF8DjE+uccBpXfc9mUWIl2wODBQe0FFdjfrI4UClWqLz0mPkPDsHAqKrsxsD
0d/mcUAYZjx4mUH2t3Ggu9LF6bky8vVdDrwP/TR02orUu+SA9jJT/4PkPGMR
Bx4NaeRdIfVoizkg6kv3Eujg+0oo+flJ697VQzyWckDN1O6n1zjMX8opfm6I
sX73g9xXw4HTrIfCnBOIj0oOSOXFt8c4Yn37Kg7EXN9T/akB8VRN2b+1RnFn
E8431nCA6336ls00jC9rOVAw8ceHRCD76TiQ0fJf/6Of+P9XlP9wuL9CLhj5
rp4De08NnFlTgvbeQOFhlZJ6pgf6pybKnpdtidRbh/M17zjwjd4gozlOfaTd
TPmDvTvH/yT1+Vuo8ffycrxHof9s5UBFteXgs+M4/9ZG8cG+shOOLqjPdko/
6YudPFnIn184oN80pjFQDvmtk8JvbeW2DQVon10cOOGlwHm5G/XVTY0vI8jG
KRHl28OBXpO1wd8GUH99HChrMMvKKUD+7ufAk9Vn7t49ietZgxQeVzx22BmN
ePnNgZ83amzWJKO9DVH+aGnmxi9H0T6HKT5d52+zwJ7M/3Mhf+DyJJtDWO9D
hgt1QX69XadIPSAuqOvG68dtQnmN4UKe+eRfu8oQ73JckBs1Z3hhOfq7cVz4
ekemVu+WzEhbgQt7x+3flleL812KXGjY3Htq1F7MfyZxodPm0Mvrh1HfSlwY
mv3KZtc55CtlLjy/fFap/i72dxoX3CStuX45yH8zuGDM+Cpwv47+chYXjtmd
gzXkfKAKFyZdlJJnuiCfq3Lhzsknxd0RZP8BFxb+PKrDHMbxqHNh3n/Om26Q
86waXHj2WcNVswrjK00u2PrT39svxvxEiwttXVoMQxcy/8+FpVOnR16Owfhe
lwuWevf+84lAfC2m+hfXnbDCC8ejx4XRW9xCXjLQPvW54G/xQpa5FeMNA+p7
ym3xOaRerhEXZOk176s9yf4GLnjIaM8KJvdTm3DhhWr3Vd4oxL8pFw773nrd
cAHjYXMu9P/eU+gzBvkJuKA5f1TSi+uoXwsuGOju9y+bjfi05IJSccGdH4R/
rbjwt8v3wAE3nG+w5kKcYK2c0gaUpy0XUiUHRXqkvogdF9rrfBbc3Ir5nz0X
GhdNWupwC/O9TVw4M75xSWkgjs+BC4YGX6rbmKhPJ+r/azzFluR+Fmcu2Hz7
GHlWhdwHzIXAmHEzZ49FfezgwrTaN7NUYlG+rly4u1Bh+UVjxL87F3bfdJMJ
HUL/tIsL2wS7PysswnzCkwv/uO71XBHykxcXilvmiC4NFoy0vbngEB8itlqO
8vXhQkTO1xW+VqgvPy68vPE7IX4/Wa/lQopUt8EOMfqfAC4MVulabrxJ7ifm
gl9IBs+U1BcK4sKHKTaT7VTRPoK5sPnWycLdpF5lCBf6NuhfVExFfxDKBRf3
mzn533B9KowLoffo3/sHyHkPLphMM++NtML1mUjKftcmSK3Qwvg5igvHO699
0tmC+I/hgnu7W8U8cp9rLBeue437lPgf4jmOCzDpM8dsLfJxPBdKCrISrEbh
9xK44PhQ628qD+dbz3Bhxhwm970F4imJC/qb+JtOkP1QKVwY5yKfM38d4imV
C5OFn/fJhWJ8kE7xi5vUEMsQz59e4IL16EPmHRGorwyKnziyzx+Q+2kzKT5o
/RCmbYj/p3OhXN3Z/lkAPmdyIffESpnkyaT+NCUfhRkW8kY4H8bhgvOPKs1E
cv8xjwtMibWLphzmKwIuvOpLaauXxuciLvisnm/x4SnKX8KF+Ilr5rnWI19c
4cKu85tGOZF6sNe44MrTkFdfj/jL5oLonuvNXSqXcf6f+n/CjYlPViJec7mg
UVj+V9UZ5xvyKD74467/YS3yWT4XDk2sjj1uRfw/F1p1g10a3pP5fy40+1cs
ORuMeC3iwtVFMzYHPsR2McUX4pV9nuNR/iVcmC33bz6tE88/llLyOlZJd1FH
eyrngtTBhJNPJ5P7yij+4xxe9J802nslxSdfwzcGvMX7l6oo/ak8OcGvRLxX
c+HhzkqzYiecv6nhwuKHLht6VRDPtVwwO+sp2rse8VNH8ZGWbkDBe/zeK+r3
v4duNQ2j/ddz4U9nyMsTF1A/DVzQ6xo60p2J8X0TF+rTozYN/EJ+eEfhdbWB
wdXppP4uhdfn/e/HkPXfFsr/zGQ5vlhN6nFT/VFQTT8nwv+3ceG/2DubJMEY
H7VzoaXEpmcMOX//hQs7s/v+ZLGRLzu5cJAZGfJWBfmxiwsdGctE+Ycxv+zm
gpOC6rrizRj/9HBBpeXd6OnLST0vLjx6w4w5tQDzk36KbyvGqvsuxPEOUvgp
euDfS/Zj/OYC71+7YRgN44chLlRr/dneVIv+bJjij096j5Z7Ip9I8aC25PpD
R7J/ToYHls8PXX0fgudvZHkQKFf5cvwYtLcxPPgVtrAn/Rqux8vxwKNb/rAw
Hcc3jgeL+34lDVafH/m/Ag9iq1KFdcMYTyjywNno4uvwT+jfJ/GACUWPL5H6
3Uo8aFgTUfpuHsZryjwI8ph69NVBfP80HuxRSV8zvpfUF+PBgSaPjP59yF+z
eBAVG7b1Jgv5VoUHrCexDY6xqB9VHlw6kpG6haxnqPFgasSdQqm1KG91HqTK
LU/nbyDnkXhQGKFbnPKQ+H8eKHWvKxpN/q/FgyLbndw11mT+nwcxG3o/aMuT
eoU8EKZzvfyKEa+LeWBfe3Do3W5yfpkH0R/GvbqzAPGkzwN/0JXsJftvDHgQ
fr1DX4bcl2XEg2s26eN9MzE+NeYB1/fKkvnrEc8mPFAvkz92Pg/nB0x58HdA
vNz9NK6/mvNAcc8hFeO35P4tHtha0VqtpDCetuDB9r83+NEWyJ+WPODnKnsz
v6B/s+LB0AXhe8MT5H4EHkz+G96YTeaTbXkg11jdrXcK9WfHg0lSS/87eBT9
gz0PlJuyykSppH4aD047e+26UI185sCDtrGJT95ykI+cKHmkWkv7VGC87cwD
U8uJLisvk/1VFD62PzhYokTm/3mgPWZX9oVDpN46hZcbe2qvuuD8izsP+lmt
2UDDfHwXD45tW1Kzvh314Un1v2J4yuWtKF8vHqQnvt574xrytTcPPhqFR65Y
jePz4YHa492K43Yi//rxwPxW7dPmINS/Pw8yM98tvLAd88sAHiSXjw58JY18
E8iDcw4Hd/hOS8T8nwcy33YWySihPoJ5oKEhs+AJyfdCeFCQZXR2egTKK5Tq
7/jlk4vqsf9hPNC69S2LS+rBRPAAasVWjh+RnyN58O+oSJbzF/EaxYPyJ+EF
8pUozxgeHJ8ZoH+/EfUdS+l/XtHiPdvx/3E8cHeiC4/UoD+Lp+y7PyV+sAvj
/wQezHd7MZDzGfOxM9R4avTvnQ/B/WlJPHilOKDKiEN7T+HBuEuxSbrzEI+p
PFghyn6uTEN7TudB00thsIYJvu8ChacD7+9tz8b50gweGB81srr9BOWfyYO0
eeE/hzXxfXQezC1WGWu9BfmDyYOVQ94nuNpk/Z/6XlWgq1I5zs9yqPfvbgjb
o4+/5/Fgt771W8dulJeA4gczX4HvNFKfhgdOdJufRQPoHyQ8YMDC6ClPEG9X
eJDf/XmNCamXfI0HPXPZyuMiyPw/D9bVaMg+0cD1pBwe3PmXaHCXrAfm/j9+
NC4lN6P/zKP4xLpDoraPnG/hgVFTlTipGvF2lwez9vgMP1+I/y/gwb6AVQfS
diBfFfFAh5ckyp+F7yvmQd3eV0em/0D8lPDgxvt9bu8/kfNwPGgeJ/LuWo32
V86Di8cXHd5O7juq4EFo5/fFn+PQnip5YMO5eOJpBvqHKh7k8Trs5LdhvlrN
A7P5U0Kt56B8anggmnvzml8kfr+W4sM/95Pt36G863hQs0vn6Nc9mL+84sFR
f4/V68biebd6yv5mvLPUiEZ+buDBtCdTTy8bg/lQE8UfbhFf75H1vXc8CEuZ
uzb1JuKpmfJ3p6f5X3+nPtJu4cHqU+YuhTsR76086HUYEy5bg+Nv48GM5VYu
X8h52nZqPB2NWs3kPNQXSv8VR144miF/dFL6PchieKxAfuyinj/peJ4yCutD
dfOg+6Fwamk58kEPpR/BgbwoT5R/Hw+WxfzSZBzH/vTzIFjLLW1uKO4PHKTw
eEjxKH8Czk/8pvSRrP411B7zjyEeJG3ZeWf2P/T3wzwYkDZUPSxG/EjxoUhP
9XnxKIwvZPhQPS9j8gIl9J+yfDjbo2y0x5z4fz6EdBgVBM9Pw/l/PmxawHWI
voH4H8cH1aVuMefmyIy0FfjgX9tq4cJDPlPkw5RsR+GBf8T/8+FhRZrpgm+o
PyU+ZBfkef6biP1V5sOVm3mTenYgH03jw+TpojGPJuJ+kRl8qPoR82r6PLTH
WXxwt111as8uxKcKH0o+yyvHpmFblQ8XGlWfl5/D+F2ND9vnrKz8zcd8QJ0P
X4+/n3OnAddDNPgQY91+f3sI/l6TD9Hr0+pGc8h9h3zY9u1Bq+Fpi5G2DiUP
23mlHlvIfQV8GGe0OezMSvR3i/lwTvrB8S4O7u/S48PK/sybA6GYn+nzQTfc
Ts5ti/pI24AP1n8qPnuuR/kb8eGW8BKzwh/53ZgPnyZMtHHYiPZhwod02a3S
l6rRnkz5IOuSv2ufLcn/+dDuf/1kiwy5/4gPBv/EoTaOyIcWfMg/WlEoEeJ6
vyUflKVnD+Y04PqNFR/0m1PXFqVjPGHNh5wW/cisxcgvtnzYVTCjINMC55Ps
+KB3cvpf0xiy/k/h7fuF81mj0X428QGUEgZOu2O84sAHx551sgYOaC9OfLh0
InJJrRXarzMf3kz4qXK8mNRX5MMLJSXDhJvIdzv4wNLv37TbEPnQlQ+Fd44b
p9Lxfe582M83vOS/Be1rFx8EkT+k1rbheoknhe9c2/PuFzCe8OLDzn9nfiyP
Q/vw5kNK1jd9o17Uvw8fBu+cv3R/DerLjw8ztA74buOhP/XnwzfVY84uw2T9
n8KXLz21JA7tK5DSr/vVgPqjiP8gPnjX/kz5W07qufDhceFBz/ofuN83hA98
M4P8X6/we6F8aLsT3eyrhfwRxodD0ztuBP+v3gMfFKPu5Zzm4Psj+WBy+tqw
qAPxHcUHhZe7G+a44P9j+DDnUFBejyn651g+xN95U33f3WKkHccHlXNVKyo/
kPvy+PBe1jjE8DrqO4GSd9/XoPNm5LwIJa/852OGnHE+PonCR4Pw4EEO5icp
fDiuffjFqVfIZ6l88B3rkHqYhnhPp+wn8V5v1Vr83gU+qFXe/btoBjlfyoeI
+0p+jnZNI//P5MOKnl3PFtwh9ab5oFXe+yygGOMvJh80ph1p3NuF/Mziww7B
VgdlWewPhw8uJ4t+3zuFbR7V1n+yJr+K+H8+dJ4XXX0/B+NLER9Gn49rv22O
/kTCB+10S8fGh4jvK3yomzJGT0kD/dU1PkxsUvF2L8T8N5sP7CuR/zHdsb85
fDgZ7HFjcwbyRS4fLG2+X99ejHyZxwdnbmroJBNS35IPa1/eqtpuhP29y4dT
t3e8/t6L/Sug7CPb5NNlf8R/ER+KZyQtOXID/UUxJa9XtkkfWMhHJXyYynO4
WBOO/FVK8cPHr/JLbyB/lPMhtya99WEoqY9D8Z1X+60pMuhvKyn8aLD/FpmS
evl8ONNoKZdZivFzNR+OHT9ZubAT48UaPjQtyKulMuqR57V8kN/M/E/Hw2Lk
eR2l74UTbgb0YXzxiuKfZCvzjXTkm3o+BFzUXNtIzi83UP/vGaUX8xbl1UTx
z7ObRqIZOD/zjg/q8k8PNcZi/NVMPY/qz9g9H/m9hQ+L17xI6H+I9tpK2efj
ScoXl+B+szY+XLdfc9ymi9Tno/Ap5XyhuhDnK77wYVnP39vuH9F+Oyn5S837
aHEB7b2L0me+1XXaPDL/z4erx/Y8+3Af+a2HD5FbNII3F2E90j4+VPb4ZzmS
eLifklfEz4QfTPz/IB9qTz3u2xaN+v7NB8ZfunrEBbLfn/JXrVEvw79hvjJM
vW/7ed89oxBfUgKQn1y4bmsZ5nMyArgf2bw53ZnM/wvg4sB97yAjnJ8cI4C0
jqaim4XkvlgBnKN52tx8jd8fJ4CFthv+6m7H+FJBAAZxo9zPMDC/VRSAgt2R
+8EvyPq/ABjRdc/iP6J9KQkgbPOvv6/NkX+VqXb2leMrtuJ89TQBbDlr665t
jPqbIYBr3eoqCi9w/mOWADbUXpxvtA71ryKA61P3fqhegfyhKoDJ68RV73aR
+wcEkPCfzl7rPYhHdQEE6rzUTyD1XzQEkHJR2sGkB+MlTQEc1XPihb9VH2lr
CWDBUsOxotWIdx1qPB8l7NwqxKeuAHyv6YqMtqN/WywA3qz1N56vwed6Aso/
b330yxrxoi+A3+OU/LWE2H8DAcgNrxeHzsb4xkgAVey59O/7yP0mAkgtnnhZ
6QDqw0QA+VefKvJ18femAqgzYsYcTUd9m1PyYnxrmRuL/gsEsCS0vXm/OsrH
QgDSRsWbX6zE/lgKQHf/0ktyB/C5lQCWibrjL7bQ0P8LQDBjtwfvMPKprQCY
UX/WnAsk9VIpfZ+OG81WwPVyewHcYQXYfViP/LJJALvPRzBWu2B85iAAtzGv
+mM0MR5xEoBn0kfL+Eocj7MABm5+kjmcRs5XCsC1bHP68GrMh3dQeHEYe6D+
IerDVQD23o+k3ISIX3cB9J10O+E8lqz/C4C9bkKVL1nP8RSAurRq1bKt6M+8
BCDZasZqyZcZee4tgMGlk7NOv0B+9xHAic7Ws8kRaJ9+AjD3/NiukIXj96f6
N/dNzf/uhw4QQGLiTeeVImwHCsCvjnOneD3iLUgAqxoCvSYArt8FC8BK/dPe
MdHIByEU/ifaWyTXoz5CBaD/5mCV81zcDx1G4Vt62QHPvbkj7QgBbFPcoWje
jPFNJNVf72tx2V7or6IEMHPIK6ZNgvFAjAAOZd0+60r4MZaSX7dzyUMuyjtO
AM6fDe872iLfxVP9e6qZZuKN+WuCAEzFdbE1ZP7qDKX/4IHJbsvwe0kCiP7w
0WdyGOaDKQIQPTs1VVUW6zGlCsD2wSvvvlmov3QBDGdMmtK+CeV7QQDFefOP
fZiJ/ckQgLsaM/rreIy3MgVg8jpb/bgcrhfQBTBqj+t45wTsD1MA3+5pjnLf
jPzEor5n19lxuQDlyRHAx5v14X0/iP8XQHnT87w3CSgPAWVvNfWbDJYgPkQC
+D7Zb1/cJuRvCcUnD1sP1amQ++oE8LrldFh0CfLHNQHMDoubCUsxHsum+v9X
svrsbexfjgD+tbEPaTuhv8ul8F57e86Gm7hekycAp/g3er+WYvyQT/HJ6Kv7
A5ah/7srgOYbExTNKpAPCgRgHGGtFdmCfFEkgNzFv6rrtiLfFlP4iTgt/u82
2mMJxX/nG1cdcUS+KqXwmLksMdwQ/Uc59f3ODbMXamO+WyEANSurnTmexP9T
+pFv7njaju0qAUx/nJN9YirKt5rSJ/+M/7YTWD+sRgARkl0l+QPIx7UUfuJT
L35yJfv/KXymLXlsVY76fUXxr0/flKolOJ56AdwbVSKxHIPr7Q0CWCw3+tqL
UaTergBqp2+VHnyO+cE7AbxMWuhgdwDH0yyAk1EJkRqkHk6LALKu7XmmO5/U
4xWAzZ8ph/x+IL+1CcCne22MoAnj63YBtCatvlpbgfMZXwRgGVUrcvuA/e8U
gFfnkdJlLRhPdAng8ubVhRqkPmw3ha+4IPlJW/E8QY8ADkYdDZ7DRHn0CaCo
Sd3/+XLcL94vgDMHtH80qpP6HhR+W5pybrHQf/8WgMtcmy/VfWT+XwCRO6N7
dvzD+lPDAui8lHeKI0L8SwkhZkxSmz4b98fJCOGkc3bAgyGy/18ITrfbz090
wP6NEcJ+b4/lDbvx+3JCkBROdZAVIl7HCcG291rGQ0+cP1YQwjrDl6B0CfNr
RSFoWh0pOvEW138nCWFb7KpQWjjGh0pCmDN+heTZZ8SLshBAs4PeOkzW/4Vg
XOYi0NFC/cwQQjH8jG05S/J/ITwYfWT+JE1Sb1gIejes5kcvw++pCiF1krs6
ywH1qSaEg7Gfzh0g5w/UhbDpMW32FJrFSFuDaq+aEXlRgvrUFMLgi/ytqQ4Y
/2kJQeduwXL1TtxPpEP9PqP2+IAUnqfQFYKFgcqcVSeQXxcLwfCrYW7yMXI/
NiWfhH9LD65H/6UvhGS/7XIZpB6ogRBufakpMaAhXxgJ4cURh/nJHsi3xkI4
nfXZedgR95ubUO/b/21agyLyrakQYq0yP8cqYn/NKf1MkAu8QPajghC879n4
CKVxfdFCCM9arIa0+Zg/WwrBx2JYWYqcp7ISgvnMzlWaDti2FoKa5oZuEQ/x
YUvhp+6c1Fl9HK+dELSfyz8+dhD5xl4Iw7Gnbpe+RX+/SQjVHaOf7o9GvDkI
4c+5Uk3uIlJPVQiJmlprPtuS/X9CSMqzvpl0DvO/bUJIOFXjdGIa4m+HEKLf
JxafJevVrkJoBuX936XI+r8QvrRyu6EB8btLCLnjVLbvKUN8egpB5cqMmIbZ
yAdeQuAqxT7+G4/5gTc13qt/R282RP/tI4SvRyuG0yPxuZ8QKo4dsL9N6kv7
C0FRLIyyC8P8KkAI9mlK+zb+RvkECkFrGzvrPhP5O0gIjTu3BteT+eRgIeSF
R73424/6CBHCf45Do/LCkX9DhWB1T7w1rRnfFyaEjmV+T4+7I/9HCIFtwms/
bYz7KSKF0OvRft+gAuUTJYSlAU/r9xdifBAjhLp18sZlkzH+iBXC+un7a+Te
4HxcHCW/vhTDr9vwfHa8EK5pTH/WuBjjywQhlMSsMAubgfZ0RghmO6x6a05j
PJQkhDOvDD+JZmK+nyKE0GDv344yuN8xVQhu9zf+ZU/F+C+d6o9rHl/NEfnq
ghDaOt87em4l90tT4+lq6VC2xPggk+IDo6Heznhy/o+Sd8XuB8w6fM4UwqNo
lkWyPfIvSwjjpnZdn7Ab4w2OECYYWB2TkPs7eEKYt3b526V++D6BELZsuzyQ
9ER9pC0Swu+QStfrf9FeJUKYblltl7QH8XuFkp+se/eZJ4ina0KYYs8PMvBA
fWULYcMzTRF/MvqrHCH4XfsjnSNAPs8VQkCaj4UOqR+QJwSPhFuRBstR3vlC
+HiEd8pWB/F7Vwj1p52tjz4j910I4aL8FZ+OvajvIiEccn+4yqaD7P8TQsHJ
EwmrXyFflFD6m5H0SWsb6r9UCNZy7w5oj0L5lQuhvL9c/HoMOf9H6SMoPz1w
APm2UgiXQPPlLTmy/18IgabPZqdcxHipWggTY+5ods5Evqih+NHqyNCFddif
Wmq86pe7o5mknoYQQmq6Km+ResGvhKB7eJuavRnJ/4Xg6fvj9ocY1EcDZe+M
Uzfuv8d8rkkInZ09A44hmE+9E8JOBeeSmeQ+4GaKzzUUrYqEmA+1UPaUNS9C
6wjisZXCw9BHocd/GL+1CcHk3c9LGT9JfS4hzF2V/OPZHdTvF+q5KGbjoeVk
/p+SF1vafulPlEeXEMKM9yZMPYTj6RZCU7XP+AhH1E8P5R/1B29eckW89Qkh
jVn1bGcn8l2/EDZ+uN+aZ4r6H6T0937r+PXuqP/fFN9+PNj1+r3FSHtICPrG
Ur9W8VA+w0LQ2Dtz8bAEn0uJYPKKApnrFohfGRF4hamppBqhfmRF0JnE82ya
gHwzRgSZ835VSB4jX8uJQHrJlrIz/Ti+cSJI2hVml7QI8ysFEbh1N/U9EeJ4
FEWgLztf+Kg5E/2/CB7ktnr69uB+FCURPO3yTJO4of0pi2Bc4iFZ6Qz8/jQR
+GdtN1qymKz/i8Bg47ry953In7NE8HMVbev9ieT8vwg2XjkcLOOD8aKqCJ7o
rU3x34r9UxNBx89pAdLuZP2fel/f61tG5L4NDRH8mbh1nKsl8oOmCOJ+XP9W
tQ/nE7VE8Lz8PcPMEeMLHRFkTHl2bnU7+nNdEczV/rjV7S7ia7EIbgmXqK1s
QnnpiSBhx0et8e1k/V8E92JSRjvSyX1mItg159+Din7M74xEUBwuI/eC7Ncw
FkGek2H+6E7Et4kIrL7N3jdhDtqnqQh2/ChpuFGLbXMR/Nru9urmaORPEEHy
sZpd5j3oryxEsODduDIPIeLTUgQLJ7VWchwR31YimD1bm3ttJcaT1pQ+400G
/v7E8dmKwHDrSrOMePQ/diIInDyeoc3C/tlT+v1WacfZReb/KX3WKbM9TiBf
OYhg6svvsvYTUJ5OItBUKq4zJPfFO4ugq+jjY9VcXP/dJoLtlhHZCywwvt4h
AgvdbMlWYn+uImCG+GwPDEV/5S6CqF5nKd5Ukv+LwP7UkGHQJNSnpwgalHv/
TWWrj7S9RJCop+BTsRjnl7xFcM46Umd+B67X+Ijgyp1KBalCXB/xE8H+Ov2z
c8h9Sf6Uvu/9cvfdhfYbIIKDIU7xA+LGkeeB1P81Y+iXjBFvQSJ4+MCI47MS
7TmY6p9ubH//J7TPEBGYHk/tOHcJ5REqgkg3aeYVO8R3GKXvR9LG91eQ+95E
EEoveuoZgeOJFEHrj9ujneORP6JEoHvsZElyOX4vRgSVDE25ugyZkXYshfeZ
E9/Pn4H7j+NE8LZoI889AJ/Hi2DGMs+oG/1ojwkiCPc+p10ji/Z0RgSL1D9U
KVrhfqIkEfQ6tW51d0X9pojgy7mZK2+cRT5NFYHezhh+6gFST04E/0xHBw/m
oH4uiOCZ+/mJAUmI/wzKHl4eSY8zxHgyUwT8o1fPPWnA53QRiFPFEz/fxfEx
RRCkdf7Xyi6S/1N8Zfao5bQI40eOCNrbe4KyhxCPPBFMSzTJOFaC+BGIwG9C
SUNDDo5PJIJ1C098fvoZ+UFCvT/rTHrwY1yfvCKCUaZyLov3Yfx+TQTDejXa
02PJ/VUiUPkS5byfiePLEUGNqlHnTBbm+7kiGHvyQMSYBsRrHiUvBd+JLrk4
f5IvApZhy83sNOS7uyKIqA3+83QNjqdABEez3cxuHyPn/yl9Kp1jrmtC+y8W
wWGbSwlpkzGfKKHw8sYoLtUT49lSEZQ91doTSuo7lYugJP76BF1pzBcrRPCx
pyfBQIjzHZWUvJ0zw3Kuk/V/EVRVX91leors/xNByLnp4+3Syfy/CBhT3n6I
/I75dK0IfExWmuc2of7qKHmuDGWt1Mbzeq9E4JjfEfOuCfFfT/FlpY1x4yj0
Fw2UvuDARjDD+jdNIqC//NoZ+Abt4R0lr6EvPrP2YvzfLAKtWzp7Mki93hYR
jD+hGxbgh3hupfDx95xbghPycZsI7q4XfTm0Gtez20WwvMhRdtw53K/0hcJP
nv2ErC/Yn06qv4pNcnfvIf91Uf4l/u7lwGqS/4vA5fYrtvJ95M8earyD/PNv
I8l9XpQ+rpbLWClhPNIvgnT+PScDLupvUARGs6cevK+J8eRvyl7mXJRrJPn5
kAha/NZ8WLwZ8/FhEbyZl2m9dCHiRUoM+ZmXKqAX2zJiUItWX6ijjXwnK4aF
16KyM5OxPUYM0/6uPnr+DcYrcmLYmcM6YmWB+h8nhrdP7xzY5YnnPxTEMFk3
cB59I9n/Lwa5/W8u5u7H+HaSGFKcxItkxqF8lcQw/kZdW1Qj2quyGDzXTRD6
kPNK08SgU/f9xGpXzEdmiMFeTcdqWSTy2Szq98rjH1TYoP9SEcOmL0XNt9oQ
X6pi6HrrP3NxGa7HqYnByezSNxqpp6NO9a/Of9hCF+WhIQbT9/XzH29G+9EU
Q/Msg+HfiqgfLTH4T3I5HpCK8aiOGDh2W+XmpOBzXTGMmpzeafAW+WSxGBqG
tESdDPRPemIw9pUf2E7yNX0xzIrd+ZgxRO4zo9p2tKU3iD8wEoPy19l/zsWj
fzEWQ8mtH7a3pNH/mYhBOPmdiUM6xh+mYkhdcvLAXnL+21wMh1a8tH03H/ef
gBiU7l04P+RD9v+JIWN41aK7mrheZSmG7lmPtM6q4XyvlRhEmZqXWsqR36zF
MCYyZPNgN1n/F8P1UxOuycbhfi87MTy2GjAbfxn9n70YMnfSDMNPkfP/Yijt
l1la8Iic/xdD7mDG8X3VyBdOYoh+pKxiMR3x5yyGHzkJR2VNSP0fMey/kHBu
Cbk/awfVH9Wx0seSMJ5xFcPBzu3XdXpw/O5iqEwrSIsdJvXXxWBx05vvuRP/
70nJ93C0QnOd+kjbSww5b2fSJ/rj+7zF8GWnvFXobRyPjxiOiuSXdWtgfSA/
MTxbNsqOeQ351F8MLg9cPN6/wfmHAKr/DPP9fSZ16P/FcL9cY7RJB57vDBJD
cT/r+p4q5MdgMVyOD73xow/P/4aI4YH55dvlb8n5PzF8zRXua/5K1v/FwOuU
Xh5ugnwQQf3+psvpR0Hk/L8Yfru71T4aQD6IEsPmpYeK4TbaR4wYZE+YNURE
kv3/1HhNA+70tiL+4yg85VSemO6A/ideDNOFo31KazD+SRCDwpG/ffp30d7P
iKHmmSRGNhXHl0ThVUFe+yCp95wiBkUVp4CXZL43VQwB6+29rcn6c7oYzsyx
sPCyQLxfEANr5+rtE0l98wzqeWaNYXcUyiNTDHPWrzijb494oovhvWhZ2Evi
75kUfp/Ol5noi/hkUb+3SPi67ASOnyOGFcunTxVOJfdRisGv8HySdgr6P4EY
Dk/nlVSZI1+IxNB/dtL9K0G4PiwRg9Vx37O1Kug/r1DyCXQto5P70a9R/4/k
3XexwP5mi+H2j2bFJ72Y7+aIIeHVpYrfTfEj7VwxPH+s/FdyHN+fJ4a97qtu
Xe7B8yH5YuAOnchfNYns/xeD1I3CvbNWk3q3Yqien3R8lh32p4jS91v5uGwt
5LdiMfTmzzgyntSbKBHDWTvrk+k7kE9LxSD2/Vu2cjzZ/y8GjQi3B8wAcj8u
ZS+Osay1pZi/VFL2P9/b8JkVjreKkn+AuaamBsq3WgxmAxs/ypH68DWUv2lb
XPwknMz/U/Z773BHyn20xzox2C12X8S4i/z5SgxTcsLXVrai/uvFsK9Gp+qx
D64HNVD81ySSW07uS2gSw7mym9vM5yF/vhPDXbXfRRnr0H6bKf6dKnv+rgri
sUUMjtclo9S0Mb9tpfzdI1iQQO5Xb6PGH9mm/egdyqNdDE9vJotPGqA//ELh
uzlx7BEP9D+dYmg5NX2q5T60zy7K350Oadn3AuP1bjGMnahX9qcD4+EeMbz0
qhz8tRHzqz4xfDjw38u8I/j9fopfdItG3yxEfQ6KIc2g7fPlWbi+8VsMRTW6
gzr1GB8MUf7d8Hrb8cnIT8NU/8dvvHflNubTUhIo2Nl2ZGcxyf8loLnWuqFq
N7kPTAKceR4dmfXoz8dIILxXUBt4AO1HTgJTfrL0PimjPsdJ4NDsY0aD41Ff
ChJwznV8uXcP4kVRAt43qyVfesj9wRJ4N7u+1XQf5u9KElBYP449pgj1pywB
n+1zxk29j+OdJoG4WHd1B1I/a4YE9HqXeIc5YPw1SwLdTg26puoYn6pIwFbT
76TXdlw/UZWArCT57QIW4lFNAjPHeIVL1RP/LwHezqvG75QR/xoSOBqWvm7g
PX5PUwIfV14oa1NA+9OSwD5bs7BbhYgfHQlczjCOySD18nWp/t41/PrFjZz/
k0CzafW7D4eR3/QkkHQ4y/zZFNS3vgSyXb2ehU/H9RADCTzbfnJwyiSy/08C
ARu07G/sQXwZS0BlHH//q1qy/k/JS/7g4nkJGI+ZSsBF0zRINw/5wFwCHy5x
f2e3Y39BAgvvLo/SC8N8y0ICzJ4xjo2T0T4sJVC/Mjl6Ehf530oC/1Z3bYmU
QXuzlsDhfZG2pvL43JbSr+V39QdTMT6wk0DqzbcTissx/7GXgP7OG7/VtMn5
PwkEnzWNktNE/DhIoMTqd8zOdcgHThKo0du45uAtcv5PAi25kcKolYifbRLw
26M89j9yv/UOCRilNawzUET/6SqBX6X3lgtDSf0fCTxe2xnJPiMz0t4lgW1+
8995pqN8PCXA94yvmhyJ8vCSgFTBxaXN8cgH3pS+pBfZbD+DePSRgEel7IQl
lugv/SQwI/j8+bRR6iNtfwr/12350TX4/gBq/DnXgxKOIb4DJbBlipvjdnX0
n0ES2Dx5jWnoA9RfsAQMxsbCYlJPPEQCjXTRPxkH5JNQCXQyre6Y7EH+CZPA
9zd+AmOy/yhCAilmS1R0bmK8GSmBoOVmVpvfIT6jJCBJF7812oV4jqHsL1A7
1e4X9j9WAumbdVRmpeP44qj3K5b9zSHnC+IlEKL+cmPTb4wXEyh5frPzsXBA
f3VGAnN5r74bpiF/JUlgXXhQTYUv8kMKZR8Vdp/olqivVAmstemlSS3H8aVL
4FK2p+OFSLSPCxK48Pb2ftvt5Py/BDa9cPmx8gXGI5kUXhbfqbtI7oOmS+DY
Wq3gmvk4XiZl//6XltiT8/osCXT5RrneuYby4lDydGxI/Pwa4wWeBLTf7Tnn
dxbxKZBA6/mYcD8Gro+LJGBuvWfmdFL/XCKBFWaH5W+Q/WpXKPmnXrJLeILy
vSaB0+lSG2dlIp6zJZDHCNHZ+BrnE3Ik8HzlpCNXQ7BeeS7FN8vkE52zcb9t
ngQUg/wvjzPF+C5fAkJb5cu/ZdFe70qgYfyj1O2TiP+XgODZS+1HHhi/F0lg
g2/+j4TlmB8US8Bmx+jgX9oojxIJLHiz/k9tKbkPl8L7+HWqXDec/ymXwGCG
OhRsQvuskMDA3LDiKwys/1JJ8ek9j1HzF5D7siSQfBdmOIViPedqik9qXpyb
Tc4b1lDynpcUdaYD/VWtBNTDXb5ZapP6PxIYtZpxr46ct3slgXlW0+8e8MT5
snoJXEtkTZ87HuXbQPFDp82ywv/j6crjsfyedpYkhKQSZUsRrdJC2yRJERKS
pZBUIiqFikooa6hsLUpZ8mz38iRFO4UoIW2SSqikkq8i6XfeT3O/f96feztn
5pprZs4ypw7PV2sqhMiKF+GXL2D/mguhKTphy5MwjOdaCF/UbD+93Rzt610h
iDYOS8qoQb5oLQTv082L9uYjv7UVAiOwOLzYD+2/g/DnbdfvBuoon09E3vdL
h4zoRn7sLISz6qfj7p9Ee+4qhLWOS+rsRuH44bdCiCgedbVGiO3rLoSraYI3
qroo/x4i/5FStyO3Yz2K3kIwuzWOWXgDv/+rEKrzChq+BaP99ReC8q78TJkj
2J8Bwkff650iufnmwUIwkI+5dqMZ46shPOhxGnX46Vz055I8yPOzXGDOnW8h
zQPznSW3bshg+2R4YHWkZKHRVLQHWR4cGXr0XaY1js/I8eCg1KotG/dz54Xx
4NtP38QY7nlFHgQqs//96kM+UOaBy50rbR2yqA8VHiy6qCpL5XPnCfFgVL1v
gpir3zyGB3Ng7qojAzj+o8aDp+oj1pf2o/2p82DuoTjtxXHc+D8PNsfP9Sk1
R7xq8mCDRP55RTOc/9bmgcq2EycuL0V/qsuD0X9v9M9N5Or/8eDPOKmr5Xcw
fpjMg3jV2nwqCe3PgAftA2cCc6fo/rs25IGsbIZEyyq8nsqDd2emdb03Qz6b
zoP+SsZn+TCufjkPpnruy15F4XypMQ921UyRr9HkzjPgwfA/a+8E7UH8z+WB
a2/7JtsZyOfzebDmy9A/NsMQj2akPWsnVNadQv0u5MHJtpRFh7j6zIt5YLa3
6NYcDZQX8MC3a4+nszS3/o8HYW2lgSXc/KgFD+QcEutHq+B6HUsenMoJ69y7
HfnFigfsrbCCCm58eRUPAsb2tE1XQ76x4YHUx8hHPgaIZ1sezOqfO7VvFtbL
s+eBX9+IoPuv8HsOPLAYM2jy//P1jjwo3hBpU9GG+nMm7V0XMzA0BeXvQuR3
R0qmugrl5Urw+7TLfnAKzl+58yBp2LD4/0Yi/jbw4O64eXqvzmD84cmDVKnD
tTGKmN9788BwMCzgtRvK24cHq4pmOKa54PibLw8uJqc2G/SjvW/lwcwE71Fr
65Cv/Uj78+YnBQ7ifX8ebDmr+S5NiPLeQfT3Um5ncz/aYxAPPJJt+4YM4vu7
eKCcHndxUz3KK5gHhRdeUl3eGO/s5UGajdY1LUmUdygPJjQFxP0yxnh3Hw/2
ezlvEnLrFw4Qe/W+us83Fv1xBA+eRw/lb7HE/x/iwY5pnu4OPTh+E8mDz18L
n0wKQn8SRfBkqa0lfIjrF2J4sCAmrMrYDuVxjAfdR2WPPxuD6wvieMA8j+rk
f8HzihN40Fn+nN33DMfPk3jww4tpTC3A+CqZBzt76+wPH0T5pPLgb+YdtTlN
3P4/Hhgkpt30LcH4OY0HlyXjflw1QD7I4MEZbX/DD6X4fhYPcifOvqG+DOV1
hgeWV5e3KHsi/57jgd2kh5358Vz9Px5M3hQxe7IZ9j+H9N/8q5t/KvLDJSKv
WTtynJ9ie/OIfM/pHXgqz51PSfjp3c2VdvO48X+C9zWTXmxbg+s1+YTfro38
eloB7VFI+GemRdjrTSg/igfrK4vezDbE9jM8yOgfNnF+B/KNmAfvhxnqjJ34
BP0/aV98q7puGX6vmHzvg/aoiR/Rfq7zIOViZM8LMX6/lNj/9SmvJVcXof8n
+L8X+/e/5cgHtwkfrb9/EV5w9X8If834On7va8RHGeG7K9qa033w+fuEv8Nt
6q3noX4qeOD0X5f+3b/In1XE3sxS3Ur98f1qHoSKPn/7aYDyfsSDTZuVh17K
xnyllgdayYlD5m7E79WR++HaYRLHMZ5vIPbke3xPzTGu/h9pz2BmyQ0btI/n
PNATrp35sQ+//5LwlbaH9/TxqM8mHvy03S/Ua8T5iGYeqH6Y+NKtAMc7W3gg
9ng6Y8Yq5L93hH/nvn6uIY3xRysPHi3ReDNBiPFKG+GbIyHZxu2Yr3bwwF+p
raEknFv/z4N0a7uFERn4/U4e5Fy1Ec+dh/jt4oFkTbfV+RSMT7/x4PDRTJnl
W7C93TwwtS7aHeqH/ruH6DOhUD82lsv/eSCRdeqM/yHufD8ePN5uVpN1l6v/
x4Oy1zaav9xxPHiABzIvPs2I5NZPDRI+CfQp2b4I+XQIH+58WL36WwnyoSQf
XCo/5i5K5vb/8aHnxvna4HzMV2X40CEp/fBhJH5Plg8HlWSqSiVxPF+OD29f
fnhrwtVjUeCD8vKW2MYlGE8p8mGt3f7CXBfMp5T5kEY1JO3bh99T4cPpGDcj
6Vr8nyofJONFd+OP5f1r3xg+bPU74ZzG1QdW48PzHM2DtvNQnup8WGDPFl3l
5tvG84EdMahW1YZ8rsmHUdMuHDgzFvWtzYeYZaPfXz6N/dflwzD3z8bVXP6g
x4c9BiHfVLjx48l8UMuXtW0/h+0z4MPA2PCpt/diPG3Ih8gvI00OfsLnp5Jr
lZrJay248X8+8H50X8ovRn8/kw/F6qskOxYgfxjzwaKueBX1ijvPkLxfemnz
40fI73P5MCdIuefYBm7+nw+bW4yVg++ivM34cPOs8uiaBTi/vJAPKx7IffBf
jvy9mA86ekqKAXloz8AH7ffdS9eFYvxgzgfTZMGctUvxvgUfjvz0cy7k6llb
8iFo863S6iTEjxUfJKIkVqQ8RX2s4kPO9M9DTxmhPdvwQfoYL6ZJDfnBlg+L
ojzPDXTheIo9H/TlxrzkNWD7HUh7L1f295nj84588NMZlxvHrT9w5sO8Y3XG
SmOQz1348H1GQmxjOvKtK+mftteiPCmMX9z54B6aLFgzmRv/58PoicvG2Ysw
f/Dkw16xfuhLGvXhTfSxjr/P2ZWr/8uHF+a17/i7UP6+fBjq/4f3Mxj5eSvB
f7Oi2rSPaL9+BB9jT9Fv3nHntfEhPfxi//idiP8d5PkTx0S5Spg/BvGhMIox
WMitF9vFh77BM66JC3E9aTAfImS7DR/wMN7fywc44vh6ogjHD0P5sLTZ+eS8
fcj/+/iw7/sOpY25iMcDfLiw8s9vRW6/dQQfhq/JhC1eyJ+H+GCQ/NPkQoDu
v+tIPjwIGEi6eQDjvSg+PFKwHFjSgN+P4cOhVnHygh6Mv4/xoS5MxqX5CNpT
HLle2Box3QPzsQQ+CE8tNvSJRnkl8cHq8OS5HlmIr2SC50SPXUWaiL9UPjjG
xpcXxKD8T/JhSUBRR+dB/H8aH4wfl5/ak8aN//PBa1jg3gW3MH7K4sOqE3Vb
5vO586b50Hztcc7eLyivc3wwj2eG/Kzk9v8TvP5M+LCCW8+TQ/CWNGLWonc4
Pn+JD3nVgTW3uPoseXz4NuLUuv9M0B8U8EEzemz5CS4/KSR8uenlh1g1bv8f
H5Sm7I4qzkZ8C/nwTEc7wLoT8yWK4KkzTfn1ePQPDB9Cve5OPZbA1f/jg4f6
E7vVScgHRaT90q9Vzs7H8YliIj95WPreAvF3neh7hNqSLh7eLyV8aOG5Z2wT
6vsmH3xPq46vv4jfv034WenWIysR8s9dPqy20Oe/yUT7LuPDe+nBIs2p6K/v
86Fz1pMvGz/ifp4KPtQnV7dM4+ojV/EhwyJEqOaDfFfNB/ETT7uQLTj/84j0
Z7bjG72jGF/W8qEydaJ3K4P4r+NDkVtQ0WnOHhr40FTUfGNgAtZHauTD0+wA
bztZtNfnfFg8Z5Lsnlmov5d8kJorsad+PuKxiQ+9r4dVqhpjPtlM5DOr4MKE
ayivFj68Ftbx70tjf9+R/8XXv7ZbivpoJXiq0FP9PRPb20bsMyA57OdkyX/X
HXyojrihZsHNP34ifFGTKf/6E9YL6+SDUdfNgNmD+L8uPjwZ9s1vdAfy2Tc+
fJL2nS57G+Pnbj5kiZ2uHeHqOfXw4Revdv7VALTfXsIvvBlrk1+hf/9F3l8i
0/wumfP/fJDVkO9YKon5zAAfzlzzfKoQgONLg3xwzTocWOqC+hkigCmXWsJn
5iJfSgrgwxU7I1VTrv6vAL54nFqazOWjMgIQjxslFBzCfF1WAKOF9o+MMjBe
kBPA9qzDAYHceiIFAWifN8pXyUZ7URRAzJTwgtuA/1MWgMaGU5lNjeifVASg
ZWO2wVcV+VFVAFtkL+Xp9OP43xgB6KT7+1xNQ32qCeD3ncX3axVx/FNdAKv2
m5wamYL2OF4Aqq425pcfIx9oCuDqZh0lXy5+0SbfB6miax+xPboCUJEQSv8Z
ivrVE0DChIjICnuu/o8ATKA+6JUUxnsGRF5imV+R3P4uQwEEnCsR7nDG/HSq
ACo3TO3eug35Z7oAWt8/Ep8ZhvYwUwDjYsZNS0xD/2AsgHYdcyNDCYynTASw
zLpkQe5Ezv8LYH765PSf5tz+fwHseqVAy/Lxe2YCiJQ9HV96EPG1UAD7uiOY
7WsRz4sFsClt2Nuys1z9XwHkzSqRjsrA580FoK5ruM9uCzf/L4Bbgnc5MS4Y
j1oKYKnWJ62rDdg/KwEYzmtQyR6O+F8lgL7nWS/KtyDf2whA73fgBE9f7J+t
AMwTvvh9584LtheApumQHc2ZiE8HAdzZsGuP/EjMvxwFcFf2iPHRh2jPzgIo
cC7ZelaLq/8nALsrLuuVJ6A+XQneZufUJ3xA/+QugOx03pPNK3T/XW8QgHDa
kFh3rp6WpwCqAguvFAShv/YWgFVLusxELcxXfQRQG2KZOyka95P5CkBR075r
+l5u/l8A45d8f32PW5/oJ4B3pzYePLMN8eovgCH7fs7pv4Xx5A4B1Ncvq1ry
Ge0vSABmDn98tRpxPHCXAA58DqANi/H5YAF8GrZt69qhXP0fARRP96ukXyD+
QgXQGWa+q0AV5b1PABYti4+MvoXzCQeIPKp3eFeaor1ECODBt7eXcxYh3x8S
wBkdc1tTaZRPJMFfYKdkriX62ygBeGxuL6O5eu8xAphoXcPQXeb/ro8J4G1x
v+btyejf4gTQaKolI6+P30sg+Nqvnng2GOWTJAC1PxZdXYFc/V8BGOiXLpml
jO1PJfrfNjTEThvfPykAm/FBS9d4YLyQRuQ74PMgqQf/n0H0lz3h2+VzyHdZ
ArCd+VdtwhPMH88I4FGUpN+bMtz/fU4AR1V2iTqM0b+cF4C0bc7TtA70XzlE
X6XOJk/2IR4vEbxNOkl9Kcd4Ko/w5T0NUY4+8mOBAKKkMt5dDUJ9FxJ+ktSq
8NVAe+QLgL/Vy99/MVf/TwALZK1044rRfikB+HltmXGkAPc3MwLIn9Xq+WgA
422xAFo+zDR2W8it/yPXTPiG1UNxfq1YADJ6w2ZULED+uy6A2abxZyYMIF+V
CsD9vrTls4PIhzcFkGmQpm2liP7ztgB6lT/qDorRv9wVQBjV7XaAO0+8TACu
OQ8uTw7h6v8KIDF4dNW2KBy/qyD2sWr0/oV8/H6VAGJte5KzJ2O+VU3s3/Nl
WNhG5LNHArhoRF+V4OqR1gog8O6EkTfnoz3VEfx9Dzq49C93ni7Br/nckvJR
2J5GAcj2Wc78fQnx8pzwg6TBzrXf8f5Lwv/NnpMSP6G+mgRQyD8x40UR8l2z
AM5OfnRp+G/O/xN+Wxi4+qEe+qt3AnDLUlmf/JCr/0/aE9Wj4OiP8mwjeFoh
qXExAeXRQfBSafN0qwK3/p/4B3kr0LGX/HfdSfB7zlWndSy3/k8ALlFSQ29w
5319I3w0+OXhVT62r1sAPRulf36tQz7rEcC2rfNMegLwupfgfRgz5vQHxM8v
AZyXPlZsOwPx0U/80RGDF7mLkF8GBOC8bFFGlS13/g/h/3aomjSOy/+FkODY
5fL+DO6flBRCqjC6b5805m/SQrhYHdYO15GfZISgXrqw3zGcq/8vhA+RYa82
H0Z7kBPC19sb1/lvx/xTQQhlUqaX+wWoX0UhqNS/vhh9Du1TWQihesWd+c/R
/6oIwfDupZ5KL2yfqhBOJPW/PzWP2/8nBJcU5+pJJzE/VBPCr8KwqT6T8L66
EFZJnlRauQ35a7wQFhaeLr6WhXyjKYTDExdY3qu6h+P/QrApDrH5oMSN/wvB
ean/BIsVyGd6QvhkqGzh+B75dLIQfr8wX7kgFfFnIIQRIar1ddGIH0Pyfvub
x4nhyJdThZD1xC1gczhX/0cIILU5MuwD8sFMIUSohe5RPYf5q7EQSj0au3T7
0L+aCOHRNvkLQ05iPZ65RF9hDVq939He5wth7M1dIxdy9arNhCSfVz6wT5vz
/0LwlbPMk1+B+FhM3nerWz11+MN/3wNyv+KGch233sKc6HfNpbIAI1xvZiEE
80PZqS3pGL9ZCqHli2vefwtw/b2VEM5GTNS6UYL53iohCFTmxH+5jPZlIwTN
1+E1uvLoz22FUH12oe7UNrRveyE0Jq4KH1GC8buDEGRqZdYp7cL1D45CuLBn
0pSUt1z9PyEUb3L/EZON/OUihHBB1fzuu1z9HyE85mWYXbyK40vuQmDOnI02
nsXl/0Kw7zfLsohHfvcUwp++iXfdO3X/XXsLYY6LBNX4Gb/vI4Ty3taZ2efQ
fn2F0LRv0bPwGG78n+j7LK9d8zHi208I0s1ipzvc/J+/EG4Zhr7enYp42iEE
pZ1vLYd+Rn8WJAR9Q7+M/zLw/i4hZD+Xmey5BfERLIQQ66QIdV30J3uFMHyC
FX+MNHe+uxCm7SnWNMtCe9knhP8+bTBSP4jyPiAEib/efZ8+4/cihNBtuu6U
wV6M7w4J4ah/zAqNU/i9SGKvDhWlqx2x/1FCuAnV5lu4/XQxQtj7TUnW8Dzi
5ZgQkhVHN7/0RPuJI/Zxd7e6F3f+TYIQggcnqCtoIv8kCeHgiSD6xFCc708W
Qk/HoY0pQ9D/pAph/6T3bX9NufN/hDD9FCXj1Yf7x9KIvc7I+vDiKo6vZggh
Q+VLn+Ax2l+WEMZvWLRC88BN9P9COL5kRNIIrv7IOSF0PpU7P4ur53deCO/W
XzSJ+ojxSY4QFHgFQxtKEC+XyPNv573aE4b8mycEx6PK2mVVKO8CIazznvdS
TYD8XSiEKStmFdnuQf7lC0HjjXzQm8lo/0IhRH6Pf5ungXxFEXuc6n1sClf/
nhGC+73X+qqH8b5YCLprIoyOLUD5FwlhzO8xmwx2ceP/Qtj0FajzX3E847oQ
Sky6Z884b/7vulQIKTKDiifHIZ/cFMKNPxEjlP7D9ae3hSBn6xi9JZXL/4XQ
nv/7vYCbny0j/bd/sc/a+jzO/xO8nvYp6ObmFyuEkG4rueGnBsY/VUIQD7u9
qbIE6wdXC8Hy8bD57h34/0dC8P9g6ZZ+B/1pLbnOUtGy7sb8qI7wg8vsH+eE
kv+uG4TQ9q19sfocrv4P6X9R8KHck4i/50S/kp5nDweivb8Ugk6+srf/CfQn
TULYLZW7lb8Or5uFsHhGydrIDNzv3CKEQdc7Ne+sufr/QqhnJc8kFyKftAoh
zqemnf6D8m0TwjCvHfMfcvVvOoSw4O1FnVfSiKdPQrDacIQOzefq/whhl4FN
0tUheL9LCMJLzuHPunG86psQ5uWVytk+4Nb/E77s2PPFdRvyeY8QJAM72lPa
Md/vJfh3nPKdOoz2+Yvwxdf6KxeskI/7hfDk5Ok5P7j53gEhfElzeCAbiO0f
FELXbZtj162Rz4aI4N7deJPZr9A+JUXwsup+e3YI8re0CC6VSkh//KX771pG
BMqpgzXPp6K9yYpgdIkB83o18oecCHqSQ0f7LEZ/oSCCZ9mTJRN0UJ6KIvg7
s9Aw0APjF2UR2Du9dzhZjPhWEUGouXrW8jQ8j1xVBJ25FaYqg9z5fyKokerb
9DoN7V9NBGcs9s6btQP5Q10E7n3zzljuQDyNF8Enx9BxEfKIP00RiCRf5hfo
oTy0SXtovV2/pFGfuiKYbnYw14nF9Q96IrhzdLyxF1fvbLIIXlDZnv3xOL5m
IIJ84yk33G5ifGEogpJB72kt/tz4vwj2VPQpHhqG6yumk/7ut5nkmYj6nEn6
V2Alnz6fG/8Xgd3lzxFTdiGeTUTg8+Paq9AotLe5Ijg9+HXcMXeU73wRdESV
O7WdRb4wE0Hf1q8LqEXI9wtFkJy74tBtVfN/14tFIK1ln/1+KPIXiODbxe+1
qs+Rb81F4Byjd6/GC+eLLUTwvOIW9InQn1mKYEXWdaNXnYhnKxFILgwILDmH
+lglArrO/9bietzvZSMC3sMzV9+Mwfl8W9I/u+Vv+Om4v8leBG5pfy81TBb+
e95BBJdrxvplnMT401EE6wt8jqSrcev/RXB9TOAXtRfc+n8RNEUkbokeiu1x
FUFib2jA6C70z+4isDUass5jMY6vbRDB+09OicOCUF6eIpiVMC3wwmXka2+C
B8/Rq7YDts9HBJOSJqqsAa7+nwhWnq6QV/iK+t0qgnDVdZMfPuLq/4jAa1Dr
/iRd7vxfEZhsXDROux/xuEMEiyruuFy4guP7QSJwGKalP1f/MM7/iyBPPrS3
vBXHk4KJfDtCT6hfxXhprwjUy/6ELx5EvIeKYKdEiq1TEbZvnwiO/dHaGj8B
/fsBEfAjLzVMPYPtixCBo1PeNM9byNeHSH9ObZCK5er5R4ogVSC352zYLRz/
F0HYxmNLd6ZgvBtD8HVdzT40DfFyTARR5TtGTXqN8VScCOYPq0h/3Yx4SBDB
I5cyuRuW3Pl/Iog7NsGCzcX+JYvgYlCG1rpf+L1UEShIbavf/ALxcFIEpXt5
C9gw5Kc0EZzM0etRu4LPZxC8fayzM7bG72cRftp4OKV7JvrbMyK4e5sVXal6
jf5fBL1W1ry93P6H8yLw0DbMsB+DfJZD2ld79kLuRvzeJREsc7R+FvIf8nGe
CPrvuo8pUsZ4uoDYR8C1du9IjB8KRWBWtq7rWh43/i+Cic8qN1B8jG+FIhAU
5UpI7sH7lAhOSUmlHDPC/zEiaHk//rF8NPKTWARlyvtXXluI61mKCJ+Jy+em
paA/LBZBcU3VfZUPOD54XQTHn8z89mEq4rOU8Nm7B8ZNhxAvN0Vwe0PclkAJ
9Ie3RRAIj+JfFGC+dFcEBceHyiVy61nLRDAOVksnNGC+cZ/Y2112r9df5MMK
ESzoemXZvpWb/xeB5YGiT+ej0f9Uk/Y0OU2R60E+eyQCxZhbVcWJKO9aEZwv
75VQfYvz6XUi0FP41jihEP1jgwgmx17V9P+GzzeKYJ5r3bR781Efz0VgIXNj
6C8Prv6fCDSM1mfsrsH8vEkEmopzgo0+c/V/iX/SzNxlOID+qEUEZ6fE7lki
hXz5jviXL9dEfm24f6dVBOlWzwvmXcPx6Tain9Bmjx1X0J46RKC6WdPd5BrK
45MI3sY2/uweRHx0Ej5tTkxNKMDztruIPOQCx/NXojy/kf4H7VphXYL66Cb2
pBtPyclhPNAjgsPT1Gy+nkS894rAJrZLu5bjs18iEMro3L25G/XXT/zVb/OM
am78bEAEN7XC9rTFId8PkvbstHtcdwfxMoSC97H6VXl+ON4kQcEVxcQeEzeU
jyQFdVUauo1rkL+lKDiXbHhhtwn2T5qCM9uo7sJKxOdQCoxDZDXrK1B+MhQ0
Tl6rPIGrxzuMgkc63azMSeQzWQq0XlQqWOUifw+noKDwgUZTN443yJH3C4J7
rkegfOQpmFbR8GDWH2yPAmn/oNDp3D0cDx1BwXIJy4f3r2C8rkhBmULqpEqn
mn/3lShQ9A4TO3Dn3ShT8LPLWGEbN781koJhbuPU/e0RDyoUfP405uccVYy3
RlHwffUD7+2haK+qFKzPCg/R/2b+73o0Bb5OHicj6hEfYyiYX18jV+SD+hxL
QYPfjB98L4wv1Cgwi3LJNc1EeY2j4O3zaX8ajdB+1Sn4apxw9zp3PpQGBQ+W
3khpCsbx4fEUJPf4/dfsgPnUBAr2Nporqi9DPGhSoORQ2bT+AspXi7Qn9cnF
JltsvzYFH5XURhR4Iv/rEPl0Wi9XF6H96lJw0z3Bzfod4mMiaf8UqY8r1PBa
j4LjO754XuxBfE6iYHyPcvrl9WgvkylIMj06b40Xtk+fyCvAJ/V6B7d+goIE
6yPmIY4YT00h1xWj4rMUuXpKFJy87beloxz1aUTur6AMqWnI71OJvAvr+P7J
KO9pFByxG/e3zQr5eDoF7QZZqbHXUN8zKHj9QeecsRza30zSnsG4nbMozAdm
UdA2oeMYMwrjDWOij+CSYO121MdsCrZ8XOD6dgbGoyYU9KXefF9cgv+fQ+TX
fMdurRHKcy4Fs62vJ809ivKYR8H0+g0Xq7Tx+fkUjP7lNKt4BuZDphTsy97w
pkAB4xczCnruX9Bot0c+XEDBfeVdj7tm4/cXUtAx48tyq1c4HryIgq0Dbqzi
Txz/XExBhs3KY5tOoT9ZQkHTsNHze1WLcfyHgl8aI7eb2KF+llJwSX3zjvD9
aK/mFNxh5Jdlzkd5LiP24vr0xJqRKD8Lgs9C6k03V192OQXpgfsVj2xDfrCk
4MU4ky6lKejvVlBwW1dTK98f22dFgWFiw/huX5TvSgoSpw63+i+G209KwV/5
u5n5Njb/rq0peFJnHe3hjvZkQ8Hp2KIrwTzk39UUaD4/fvQCdx6SLeGTj7J/
R+qjPO0okL67anZNJ7bfnoJTA3t/zxRjfeU1FCx5duiCMB751YHcNw08J+GA
+cNaCuKfndz4WQ75wZGC6M6MoW5d6I+dKHjuse3x+TL0986Ef761XDrH1c9a
R8Ghme+X/05Ef+hCvt/gxN/2Dt9fT+x5avu1Y6uRb1wpCBn/X+dJX/QfbhRk
9qSn0nfQHtyJflZLbv3C7f/2oMBqQeWHdbvw/xso+DFeZZhLD/5/I5G3mWHs
QCDix5O87zuKzrVAe/Qi/M1TLarZgPLxpuBoXtfvYbqIz00UrPU/ufwLdx63
D7GXdtW1d5YjPjZTsLm2rkbRBO/7UtB8XTh8exK2dwsFLmuqjvl9RPxvJfg5
Nlsv8Ru+v42CrCe5btMPY/zsR/jx7S0lBWXMP7YTfI3fdHr4bpSPPwUpHiVH
fe+g/wkg/7/QcX/5Bm69Del/jHDv5u1of4HEXgIYN7dDWD8xiIKVlX8339qB
+N9J/NPTztmzOhF/u4i8QzJDXbn1dLuJv5q39qIed95FMAVU2uGhA/swf9hD
/NOZQ9M9ozAe3ktB3siCFZLrMD4KoWDUtu2aDln4fCgF/UvHOC2Zieszwyhw
f3byZyd3vvo+CgaaZwecyUV97Sd8V933J2Y+8vkBCnaNTnx3bhPKI5yCoT9a
LPd+5s77Inzf/ln72iTMZw5SUDPp51HhL7SfQxTcHVjkpsKiPzlM8Hwbzhvd
wPHGSAok5vS/sdqN+jxC+FKRqdOahePRUUT+jamO1g0o72gKvGYWSRUekPx3
HUPwkxF9SG4D+oejxB5C13fMfoL8foyCiuPLJl//iPW7Yym4mOO/qec6xgdx
FIywHlmnchTzj3gKfKqsNCTLMJ5LoCDu/VDB9SLkj0TC/7G+y3K+Y36TRMGz
11V58dcx3jlOgfBozIs9ZYivZGIvqxtSV5vg91MoiHkwbn/IAtxvkUrB1OFU
4fYQzK9OEHmvFlb6myOeT1JgYNRqmt+J+jlFgd4qd/44bj9uGgW5Lkz/kQCU
RzqJHzzLQe0Pfi+Dgno31aFL4nF+IZMC2YTS3qO3Mf7KIvJsXGp95Cbi5zQF
3dMPGX0bw61voqC1/sokry6Mj85SINIeH7n/ITfeScF5HxmFC4dwf3E2BakZ
U154vMf5uPMEry+X1ZWVoL4vUBARNCGKJ0T/n0PBvWMdLjWXsf7QRQr4o2ca
KH1H/rtEgaWtvMuP38gPuaR9fw9LzByL8zt5xF9tyt0ctwH9ST7B/0BzlLYI
45kCwu8uF71VP+H7lym4nmQU9xwQ34UUBDIrQh5poL54xB+ar1r/33zUN5/E
n74v35hEoHwEFASVVT16m8ett6LA/OCFoV+dsb0iCpxbbax845APKILfnYES
NitxPoumoKp57OvhaqgfhthbU9w3eg36K5YCnm1b8pHyZ/+eFxN/oCuxW/Im
4u0KiYesvk0duQPbW0T8TWCy8xp1HG+7SvAS1B9y2Artr5j4070HVjU9RPu9
RoH+prQI82rU/3UKfp+wKBNuwesSCjYu+BU93RjnG0qJP1lSvfCEHeLhBumv
pcsgjND9d32T+A9+AFwqwP7fouCT7EnZKH20r9sU+CkPL3eegfHOHQoWrltq
aPMX8627FFydrrfLJADjs3sUyJ+39Th1kasPS/DbtHu/iKsXXU7w/+DH/XOA
7b1P4ou157NsTTFeekDii37TtMEUbvyYglU+x9yEwzF/q6RgrKZUSdRZtK8q
CkJ9/4SvL8H2PKTg1dEp7cG3sb/VJB5Y6fVjoTHiuYbED1tDkpSeIj8/omCp
1cI1re0oj8eEj3P2rji3Hfm1lgKHhVPNDhZhvPKE+EcjhYyF69Gf1FGwTTN4
uasO5hv1FBQLRJNWRyC+Ggi/Hd725f1r9K9P/6/9S8tGJqC/aiT87bnLVv8p
+vdnRD9Zn6iI32hfz0n8N3FwUstzlN8Lgs/4509cu3A/3UtiH2mHe16GYPtf
UfDneA9IcvptIvyyleEfbcXx9tckf3G1OBt5DPmsmcT/P054+wVie98QfF8x
Cbumg/JrIf7wZ4npNm6/1lsSD8yr7TSPQzy/I/H/hcaNCWvQXt5TUGvaNObA
CcxfWgkfv5jrtpc7b+MDsXcJQd6eUtRHG4mXr8ivW7cK+bqdggNtTKYZd/5X
BwVO5cYpixrx/x8pmJQUXX2giNtPR4Ft8vVVLWbIT5+JPTbLLhBtRf11Evv6
ulB+pALGL18o8Pz80L4jEfHaRYHahyJ/X67e71cKLusf79KSRH19o2DD3hh3
NXeU53fij5Zo9vzhYXu6Sf6nnhFjwo2H/6Ag8vq0UVUr0d/1ELzk9lQue432
/B8FFpLhSZe5eKyXyLeoPTByA/7vJwVT9HRl/tJ4vugvCtKcYyb17MP5hz7i
z4JdvCN08bqf6OP2sKGlWtie3wTvBsZTL1ZhvjhAvld8wT/3qeS/6z+E7w0f
7JiYz833Ez4eavrihRPa919yzf9b534K468hNJgpNVc/kMDxaQkabn/sie2Z
gvwrScPztvGXzAbw/1I0zD+kkh2zAP2NNA2Tkz6r9HH1tIfSsG1aaEjKARxv
kqHB/sqDtCJ9rB8wjIbky1t+/uLq68rSEF2TUV28DfsznIbL8aPC4i6gP5Cj
4YXd99jPX/FangaZ45PHtt5GfSnQwI5rufFWC/U/goaCrx2m8T/R/yjSMPPQ
hTbzE2jPSjTkBLfPf1yA+lOmYa8wzOjXHtTfSNIfCQudIen4PRUaFN63PfCm
UX6jaDBWWn8/ntuvpErDnc/Zh5fMRXyPpkF9zJy2l5+5/J+GN3da+AfLED9j
aZDtu3o6/QnqS43Iu7rsy7iF6M/Gkf7VxjeUFWL8oE4DUP8NvWGF+tSg4djs
J5oxXH358TQUS83zyLyGeJlAw65Nfy6nD0d9atKQdlZy4g4r7I8WDV9lJkRV
ZHL7H2loPfpm1hkJ9G86NAxWG0c5ZKI+dWmYEv26L+od+ouJNKSfmiI8zp3/
rEfD8c7mN5PiMJ+ZRMM734NHK3u49ZLkvkX6/CFGKG99Gn7HW9ak9uD/DGji
v0wDFJ4gXqYQ+arnJieqojwMyfNTkjIGWfy+EQ27w+4J58Xgfu+pNBz4O90q
OBH5bBoNt1Qdxic849Zbku9VvnLrH4L+ZgZpv2lG5Z/PyM8zCX627fK/GYzx
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
rg1FfD1leK3u8iMxEPP1n7H8959+Xf0I+Ps/xh+aX4d+4TFel8/y385e/UJV
wGcB4381G6sjSfj/cwV13um5116eP1yooE4jFdKQNOi9FyzfhN7NitiH65fM
/lEH983sivgrYvjIMvM+JvPPK4ZP6w+DM85Af71WUFKMjafJU/n7P8v/0Qs/
NDWFPihW0Lrvse+v+AJPJYxf9wQd/G8z8nOpgm7/9h/S9iPy+1vm74vzb+o/
BX7KFPTbSbjQvTf89Y7F46VDLtw0xPd7xs8XD946OB/12wcFfe1jlh1/Fvng
I/NHnxL9Pi9w/ycWDzd9Vt4IxPs/K6jdfzqDOfl8kXLGH4P69/aphD6vUNDz
2Pf3unVDfysVZO5/rdthef3WF6aHxtWeLZbj76uCMmZpHIp7Ip+/o6B5ttn+
T8qhd74raK+yy/E1kdDLVQr6kf1mzo8wjOdUs/9/3tjMshr4+8Hy1S8udOxp
2Ocn41uTBSOcjoJfa5i+aTc79N548Fst85+6Xf+6tsiXvxQUdMy6yKXdFXz/
V5DlnLrMzqWwbx2zv5+4ffAD6I0/7H7/vl/ylsJe9Qp6GXcjKV7Ozw1MD186
3WqaXL81svotcm7e+iJ5/T/TTx9TYo/U4TxJNY6mDOljt03+3tGEI11Dh/c+
c6E/1Tnq7LrTKKEP8KrBkXimeEyQPL+oKUd3E1zVrsv7zTfjaO8ZS0Nta4x3
Nefo+pfhOrYN4FtNjha+Wf64Z7lc/3M0bM2cTg6XYP+WHB3fkjKCWyufJ8hR
m50zky3NoG+1OKoqvnzoehvkU232/4957b36g/9acxRSdiCsIgPxq8PRmuBF
JRs6wJ5tOHr1Y/VTYxfES1uOUm1Pv9n6FfHXjqOv+U7N0u5Cr7Xn6JSZqsmf
0VjvqMvRp+MLXW/K54F04MjCKLhmbxLap8dR777PBpYvgj06cqS/6v7F6OPw
XyeONpi5Lf7kiPykz5HqcUobvym4vzNHr3UfJw2Vzw/twtEDtRGh3k+h17py
dOeuVml7bfi7G0f3pjhExR6HHu7OUfrE/LXhVojnHhwtn6nxUVPez6AnRyN9
o+2HDUf9asBRuMOF1F264LdeHNU4TtPaOgbjnYas/UELW9nK9UJv5t/FGVZR
uw3/Xffh6Nau9fdmjYP/+nJU/+1LhGco4qEfRxfX3zy4tg739+eo7NncbZn9
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
1woFHz1jem9Qn6dDM2DP/1j+mjTDYucA8Fs+Ry3abA0e+xb8UcDR4qqTy9Pn
QF8+Z3ic92FHrpf8/Z+1r9o64147tOcFyzcf+o34tBrjfy856tbtwvHJP6Fn
izhSmFZ+3Cnvn/uK6dMmAwrGHYLees3ipemGkp3z4Y83LP++mB031Abjl8Uc
9TybXu1vj3xfwvLplu59Trth/8FSjlrzonfbuejfW44WOJSujuiB9pcxfbSo
ScO2dujfO46WHkg8v1feT+M940PvXn+fGU/+d/2Bo5UF1p12dJLPz2H9sTL8
HJmJ/PCJ6ZmIJxktTZEfP3NUNDZ4h9tM4Kuc4dOlb+zB7ajXKjgyzK3d53YF
eqaSo0U3V/Yf0R7rCb4wfJctntF6MfD6leUb/10X0o6gvv3G9FlAbK93TfH8
7yxfDDl4ZJox5kdWcfRm5rqaJs2Q36pZf0wSt7f0AZ/9YO+PeH1ivwf2h/rJ
+Ec/p7iT/L25hqPIP7/sb9igP7XMn1mB3wYthz1/sXxy+PKSIG3oy98cvd15
b65TLPafrWP156DnUc1b4Pc/HBU0+1EWqYX21jM9vMQ3kl8Evm1geFQLyAm0
QTw1cjQqac0vA2Pop7+M3+7Zjo7og/pDTUlpC3vv906FP5ooSVpVY3pE3s9O
XUkG1sV+r3XBBxpK+iYemGCwC/1pqqQ307esGn0M+8M2U5L+/RuPJzQHnzRX
0ofQtsr77eAfTSUd+jN+yufOaH8LJWn2LpuTZ4v53y2VZNJlpvihEnhvpaRp
hd6vrxeBz7SUFHFonuHw78iX2kpKclZeCRwA/dZaSUuOC4dvZ9r9u9ZRUmpm
zc3xscBjGyX1K6n89Wwt7NNWSaHdK/3UHYGXdkqG799jnJdhPKm9kqJPHvPZ
XoH6TZf9brR825r/ML7YQUndd5W+fdcB/tRT0udBPXVGfYY9Oyrp/VGjmPxe
wEsnJfnv3Hcj1hB8oq+kVyOdm6+Nht7prCThER8f+AHjG12UlNlO/8SgDtB7
XVl70yOvFrSUzzdm9jJ97XPTBf7srqRu36xPPh2S/q99PZSk86DaZVhbxGdP
Jc3mJ6yvfgn+M1BS1GaPm9n/wV69lBTgMMuWl79PGCqJenfae0Iy/HfdW0kj
581YVW2N7xt9lORhcc4kbhXm3/ZVUtN20Xodd4Nf+ilpi6/ejMPe0DP9lbSm
S/7OxZOgr42UtEy5+8++RuTTAQxf/i02qpWjHhrI7HfLeNKnvni/sZKOH+w9
WRCAZxMl2ZFgk2OA60FKmjdotptbM8S3qZJm7Iv+NOUG8oWZkvbYOe7YGAj7
DmbPe7X6dXMJemmIktpu3NGsfjXWd5sz++14EqpeDz4eqqRta4r1n+6U9/9X
0rqrbvEfOgKvw5Xk3Dhp3osAxL+FkhxPVj9/cQ/9HaGkazMq3CL///wmJRlP
31douhL4tmL9Hb9llsYM1EfWSjItHTR3cCfUDyOVNCTd4f1FK/n7v5J+7jW8
vF0eHx2tpJd/fhUd3AG9MkZJhh73mvl2w/wrGyUtOu9T8Ww/9AgpySmxwjtd
nh9mq6SlbctNEjIwPmfH7PlmicvqD8g3Y5m/Z03KHeCK549j/alWe/lZno8+
Xkl9bse3O9IX8WWvpJWrrSX7cOS3CUrSHvrqkz8hPhyUNKvbhmc+reB/RyWt
Wh/VmJWH8fmJSsrOmLv/6n/Av5OSnvWxjCm6Av86K2nK7znOXvcQP5OU1Pqa
Vgo3Gvl/MsPX3Q1zi+X5E1MYXhK3Z/Rqifw1VUljtL3Vp4to7zTGX2/fOswe
gfuns/8/DtQqnwY94KKkUZ3t/tsSCn50VdLY3lO0BgTB/jOUlLdVnxvRyvDf
9UwldY675Tj6oLz/P7PnYsu/Q2+jP25KGjdrwLpn+vD3bCWJZ1YZPKqAP+Yw
PjsWObt1FOJhrpJKE5J72E4DfuYp6e8b/frQlhhfnq+k/CZDrw6ohH8WKKn9
8vlbreXziNwZX3xI7X/+J/azXMj4UJx3dJsO+u+hpAEnzmw8vhfv82T2G/9x
/70Q6ONFDE8mxzSqI5EPvJT0MNB+uu5j7Ae/WEnq1s8Uxfng+yVKKs6u+hoY
j/hfqqSW5yPCP/eEfZYpydWz5sSrVPx/uZL2B+d8eamF9q5Q0uDRLw7OX4r1
IiuVtHBH0oHNu5E/vJW0OeJ52sIixP8qJen1aOL9Yy/yw2olTf5u8e6SXO+t
YXjZ9GLSo2PAz1pmj00ZNMwC+nmdkspWflG7MAd6xEdJttN2dDooz9dZz/B8
8OKUtkkYf9nA8BNn5Rt0BvG5kfnXtnOLhQXon6+Stk/8tkJzAfT6JiVdzz7R
+6cmxqP8lLRryrbIXW9RT/ozvrzr6aIvn28foKS6mZv2FrlD3wUq6Whz/zM9
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
+l/E+GJ/ngKKnP0uTgY+jHhq57K5YMVR5KsBPJX8l/jxcCjsPZCn6fqO654f
Rvwb89TW+8b65g6IBxPmv4CZa7jhiLdBPL3Uv//lUjjWA5gy/23XaBV/FfFp
xlPGZ5/QA3L9O5inxLnNXhvrAO9DePpxad/ezqHgR3OeTkesyhneAvXZUPa7
W5+QdeuQL4bx9Mu1qkPoWfDXcGb/yO5xUip+t+Dp86WLaZ+MsR/bCJ6afZke
tWihfP4fT69GevUbo416xYrZ90ptXHEj/GfNk5rjvJEt4jC+M5LhfXtSz+9X
EU+jePL2C3Lv+BTjSaN50q7sFvDNCfluDE+OpTaWj2zk8/8YXuxabZ+eCzwS
T1P9j/jH2mA9mC1PQZsK9oz3A//a8fTWZnWTq47Qz2MZnr6WjPUKAb+MY/bN
nvugtg/4cDxPVh3qghbvgH635yn2zVC97B6G/64n8PTh5Jrq0R3BNw48ad5s
cmVPDPaDcuRJ3eeX6+4L8NdEnsK2LvsrbIM/nHhaUWEw7mMD1kM589Tf+fqt
sh/gw0msv9MGpC5wxXjLZJ4OBD+fqZOD/k7hqcWl53qjt4HPpvK08K5lo7QF
9p/G04TlKz2qtNDe6ez+hBRr/8XorwtPzu/sLX/vxPNdWfsCtq5NIaz/mMHT
hu0X6dFr5LuZLL7XfemaPRnXs3g6H3Yq+dZ15G83nixuXF1x6CrW381mfLG6
U82g48ivc3jye1ifVLAM/5/L4uly34oDa9GfeTwJfnVdTqehffN5OqGsmPL/
+3kt4On7wpbDd2shPt15WvI3NoqX92NYyOLnWGx7B22MD3nw1CeyurfXauRP
T+b/uX/2+VVCny1iz9vvu/FaM8x/9GL4M+lm7XYM8bSYp23DrHykLOSbJTxF
G54yuaGF/i3l6SxTl6bqeP4ynt6kdAhThYNPlvP0aWnw6feFeN4KnvITf8V8
uIH/r2T81DG5aHwI/OPNU1O1rXqNafh9FU/Sn8Wuvjz4dTVPlSUlVprTUT+u
Yfkj/138SguM763lKdB8gwPfF3hcx9OWXr77O8nrUX146vi5ndmPzhgvWc/T
Odo+Mrkf9gPYwJNv7zGrHu2HvTfytLrzxR8l8viRL0+Gi08s6d4PeNvE06Zn
fqPuyuvL/Zh/az9n7x2C9vnzNE64qcc9QP4J4On37ZGqhBFYPxfI8uPADu8H
7oVeCeJppN5yh4EFuH8zT8ErBibaGoEvtvCUrSf2rX8GvAYze38bH+7rCX+E
8NTDvnSnkznidSvL779d0oLl82NDeRq+7PXYe4/A12EMb+FbvmuMAR9sY+9X
nFZbVwj7b+cp3GnXpZ9x4OMdrH+Dwj/tmAa9vZP9/36Hdcd/Ybw8nOXD5kIv
nd+Iv108nexuZfKrDfgkgvnH+F6fW5PR391ML2ifcjOWz9fYw1PockW1nby/
2l6G3wlRR1c+RP0ZydOXFpYNIeOR7/bxNEp9Yc+BzzEeGMXy+fXhh9Ofo7/7
Gd5fnUzo3xr8F82ThoZOxq9Kuf7nqX2Hq+lVG8C/B3maM3Obc1kzjA8e4um9
tPDc8kC8P4anB9qV711+4ftQLE9VnePVnp0E/x9m8e7TMGniJ7TnCMu3XeZ0
/a2CvY/yVOywMlh5AO2J42niyriHHf8i/8czvm8waKbRDOM1x1h8F24a4xAK
+x7nqflY1caLgxDvCTzFacdmRVzA+a+J7PdrG/47lAN7n2D8tSDo+L5T8N9J
nmwbQ9v3Wo56JInh5f2E/xZNAD6TWb5N49vXtkb7U3g69G0vOdwC/lMZ3jwn
7Jo/Tz7/j6ehhWenDRmD9p3maa743/68TOT/NJ6uXOued1Yl7//H4mHO8W1L
NZAPzzJ/fpK+XZgFe6fzlFMbNS39AZ5/jqdvsT51ig6w33meJvXb6evdEvx4
gSfLqc7L18j75V1k/N9qdnmvB/D/JZa/Q188LN2C/HOZp1mPNSsmfgffZvB0
NPH5qrFqGJ9Q8FQUNCMp/zv+zzF9MKwoK+gR9IqS6ZnDC5za5qv/u+ZZPHQa
ttR9F/orsPz5RzjScB76VWT2zlqVrS6vr5ZYvPTYuHlyFfqj4skoeo6ULJ+/
nMnwO/WXsl0V+O4Ki7/YN/yHDXL9z9PlG0O2bIwF31xlet765c3wddDD2czf
e4b5HirD+shrPHWtO/Ox7hPGl68zvvr1oc9LeT/+G+z/pem3vyyT639WL7wf
cy3WAfF9k+HveEHdkWew1y2eDo4uWvDhGfTJbZYPz7ZQ234L/rrD8s/WVQON
mhv+u77L076y6laddkOP3mN8N0X8vcIP/rnP+OnvHKNXSjz/Acs3+4bq9/MD
H+QyfDoHj+5tDP88ZPaX7G+31II9HrH4Hx3ZuaQv4ucxT8c9nmp4LEb783hq
TOu7oUdHjJ8/4el5Ny/T8d7g+6c8rbIsfeaTK+//x/Ax5Pxwp37g1/9YvnJb
27rOBfGWz/BSOmPG9AWIlwKeErg+LwfJ9fBznrz6FS84uRvxVsjsI05bvOsh
vve+YPHe/EDy3nDUBy8ZPz1oe/KDN/xfxPBkuOn0ix3Ix694KtXvZ5VsDTy8
ZnrzY2zjjg3w1xvW/isRLS1mwt7FPD31aBzctgT8WMLw59HlhOVj3F/Kfm9o
0vblR1y/ZfnP7Nu7+cV4fxlPOumVBTpyffOO3a9qFjCnCebrvv9fPins4nId
7//AU2e7P1Uz9kDff2T58mTINY154I9PDE9GEZ9/NkE++sz839zfJi4afFvO
4m3YW93sJMRDBU/rbxjUZ37E/ZWsfUd3/Ek8gvd9YfXTqVMhNlvgj688rZ0f
GTJqJvLjN4YP8/EnVwRAr3xn9v2mVr64F95fxerHqQmKiSfl7/88OQyz1J0c
i/f/YPlm3bWBw9pC3//k6eKUlsYpPbAev4anqCfSA4MMef9/hr+B0caedhgP
+MXwy6xV8gj13m+WD9avvddtFvi+juklo/hryfL5tH94ut7qYeHzW9Bz9Qyv
X7WSQzXk/f9Y/B7vcmZrMMZHGnnqKQY6b/QGH/1l8bmy7muYOuaDqAmUv9xg
sKoL4rOJQJlPm2l62CNfqQsUP7hxebMi5CsNgdS33l8U0Bz5oKlA3YIs+BkD
Uc83E+jeQIOXR87gPMrmAj14XebpK4/HaQpUeDKqsUUr4L2FQDf1fkw5VAJ8
tRSoz5CijNby/JJWAn21b7706Q3gTUugrjtL9r/ehnjUFqjVzTM7k1Khj1sL
9DTz4+qN8vkvOgJZaWl+yA2Sz/9j7fmZ/2zWTXn/f4H63dGcaNEN/28n0Lfu
pTaZI6An2gt0o/feP7FWmL+iK5CnXkhGxWbYp4NAAbNOCNN1J/271hPI51vO
GPUVsGdHgfr290husgzt7yRQ9ye7Y7x/yfv/CzQ0yHJxmbw/Y2eBZi6tzV4h
r7/rIpD1Fvfkpr6ov7sKNHy91oyqg8hn3QQKnlhfEd7a7t91d4Gy0qWbOd+B
px4CddCr7NC+B+rXngINi6ys+NgIvBsIpF2mPKX+Cvmml0Drg+85Xrh5FfW/
QO3Lz/7eLJ9H3VugJWuT+W0D0b8+Au29P66bWy/k877s/swVuZMvyPW/QFv2
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
xpPyGL/lRU7LVcjr/wUa9OHDmkdX0f+nLJ8c/lz4RYB9n7F65utlo/sHoF/+
Y/542ftZs2Lks3z2/IDEXlcMkL8KBNoZuannU3vY47lAq/e8MW03E/FTKNB2
x4bsST54/wumX3OMv1iE4LzYl4zfioPGvM7C70UCBTXm6U9pAN5fCWS0KefN
7Zfoz2umt/xCdO8XwJ9vGJ9xj8+Zu2P9YzHTSyuLfgpb0f4Sgeyu9pvlkgk+
LGV8Mn/m15d3wS9vGT/dsXV5J49/lrF4+TgofNU88Ps7Vg/u0Rt3RZ5f9F6g
yRE9/B+0QP76INBUbtuUuS2A14+MT6epj12qhvkmnwSy7/Ri89Ew6N/PTF/M
uf0+/Inhv/+XM34pef2x7QOMB1awfF1Zrvb7jbz+n7VncdjDTgbQx19YfH+0
Wl6RBT78KtDDs2euJ/dDvfiN+e9Df+XMyXj+d6YvThSb1X9B/6pY/Vk13Pji
TOSbavb+T1N/NufA9z8YH0QdKM/6CX//ZPYcOvjOihR5/b9AqlHepreGoZ6s
ZfXCsJeDv9Sh/b+Y3kv67L10J/D+m+nvyJpnP2bJ+/+x51uUxP+1ktf//w8f
1vG3b2A+VT2rf08YT3jqB35oYPazX6V7RZ5f2cjidVJDjauI7yt/GZ8FdrN1
k/e7VxOptkOfnVZxuG4iUuTSYSseT0F9ri7S9v6Dr7YZhv5osGu3wt91M4D/
piKdSHquutqI/NBMpC+tCwerHiCem4s0Wbt3oF01+EdTpLcvu2u8cJPP/xPJ
0tJjrK68f0NLkbi/zwekXYU+aiVSWZ+g211bgO+0RHp6UCegaSrWt2iL9FE1
YFV2FfimtUjZb36/y7khr/8X6XH/i0v3bwIe2oi0zaTit8lTjPe1FWlg/Ien
3T3l8/9E+vF+VHhnB/BFe5FSi9ybRSTI+/+LFGShtTRgBvzVQSRh6u1lfWdg
/E1PpN69cuYvdASfdhRJY9y8O2OmIB47iaTccO/EmjWoD/RFsnqSe4AI/N9Z
pIcGPo+/rUM91kWkNPuiS2v6y+v/RUoI6RDZZibGW7qJdOzKrU95hPZ2F8lz
05PUnvJ+FD1Esqg9mK5qi+ueIvXb0r3LvUDoIwOR7upe0f3dG/VgL5EuL46q
DlqL8StD5p+ROcX6LZCve4vU3uOWl2SF+q2PSGY325cN7mb477qvSHp3zF4f
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
/b+L9lO70bD2GZ1/fk8M59mD1QfnUX1wXwx/tV7HntpJ/l6O+aJQmW89SPz2
QAxOaXHH/t2j/FYhhugR3/+MekP+Won1w+R05VPjSK88xPhZx5ToxtP8ahXq
w5mX/Ppo0PMeieFjw83nlmbkD4+RD+Ma7XO86Ho15qOhzVvzfgnf/xMD9839
fZM/rXc8FUP8tJBMpSJh/R/jrYTZNaaN2l8jhuwF7dZeHylen6MeUqnz1xpD
9f4LrCfM5g/xq6Lv970Ug7Ol3o0rjykf1GJ+qtJObPWk+HiFesL1ibn6Zur/
fxi/zyUHL9+k9YY6MdSsUHvZPp/4rF4Miw4YPLlWIbz/j/2LDlpvm0f+0Yj+
ZKfx2bQ78WETxnfC48NjvImvX4shJcIo5OpU8r83+PvpQxc7rCL+aBbD5fFR
Vnts9GX4rRjULyzOXriY4uGdGMbxvfoo2hM/vsd8cDzEy8+Y8AfM16/ftgSr
0v0fxVCZfcVtizrp6xaMr5PHztRVE9+3Yr691a3dZyfxR5sYpis+PtevntYf
PmG+brt6RncS2eOzGLLYCN+9hWS/Lzj+p5axw58I+/+RP0c0xxatpt+3Yz7S
8Ni64Bv1/xv6a8zM+ePOkH7rwHi8e0u9ahn563cx/GkaWO3XnfznB9ZjCedb
gkOIT36KYaPxjMElF+j+X2K4FfnJhVGjfPVbDFM/X/hy0o/0byfyndHF7h8s
6f//iMH67rP00PFUT/xFfaJ5Ysj5PaTH/iF/mmxpXpJL+0e7xKBkt/zv6Eiq
n+QY+B3zRGn2B+Ljbgycjpum9lnYnyLPQKnjJMWNYylfdmcgPXloXXiFcP4/
A/4Bnmd0LCh+FRnwm/B8Q/ghGj8lBvRelW1ZnCi8/8/AdvvZvX1ViG+VGfD1
62ey4jXpoZ4MVPfoXW8y5bjs+b0YqLixbFnoO9IPKgzMnTpjcdYx0peqDAxh
swwzS6xlWI2Bg0s++ThkkT7ozYCq9tQxv+cfkeE+DHyJ3XxlunBeoToDEYbn
vxWdI37QYOBqzYiPv26S/2gyUGJm3Hkyjt7H6svAU4M+XR2+lO/6MbDT2ri7
3U/Kp1oMTNes4KO65GW4PwM75FzPqL0mPT6AAYWBbWcWHaf7BzKQ+3zv+R5R
ND7aDBwP1i8y+kn21mHgzi+7h3kx5A+DGHg9SHl5VSzhwQykTrqSWTyWxl8X
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
+xDLt6xaYfaX1q9N8HmxlfwRd+JXxLdS8tQjqmm/2AwJ/PcvfIDWC/IvxO8O
jnZfw1L/TSUwonaZdhmdDytCnKB+QDm8O9U/MyWwTeOD4uN91D7EulzmqdnC
fOEsCYB0npqOBfEn4rMTRyeeqaH2mUlgy2+VsFJjWT0jQmzqeuophAvf90R7
3juvMGIF+QfiBRuDcm8+zZPdP0cCVazx87kxsnwgQvyjSO9n3VSKf5CAf4h7
rtcDsi/i0vtvVrVokn/MxXxmV3mpVyTFD+JEv8kv6zpp/M2xf8c0tt9MJv/6
H37JnlwgrMfNw/zT51Oi+SaKH8TSqX4634V6zUICfMzJyI0msvczRIhVb8mN
Fj0n/W2J+TrP18ZxhUxviBDnbfqAZQ3p/fkSWNXXW1L8W8YXIsTHfc+k5MUI
7xtJ4ILdl7bsyTI9JULs1+Bk6imsf1lJIMqz44RopqyeFiF+NOvuyVdaxD8L
JXDF8uvuE5myfC1C7KW4NPKWMo2PtQTStiYnJ82j/I149rqSgU+zKb8vkoCZ
9ur9M4MpvyAeGaU+Vf81re/bYL7+uu74ndkyPSJCfFulh8uuYuF9JmyPSU/b
E6tlekKEuKik7+i3wvftl0jgYpj/8wd1Mn0rQrzgWtnoVgXKf0slkPT3W4/f
4yk/Iv4mnrH7wQSaj1uG/jXg8q2OErIvYoeM7R0OTRT/yyXQzyN+TR8z8i/E
D1O5CU6W5L8r0F9umf93vlbG9yLEqUWfP8rFy8uur5RA9smXX6ebyuwlQvz9
ZN78PmLSX7aYL1wqTzipyvKlCLH6hoBPWh5UD9hJYJF/tvvkNoo/xCNmuX/4
G0HzDaswPitNncxUZfM1IsRecWnxPrWk71dLwOrgoqMpNN8gQmzpPtOq91Ma
X3sJqJiOnNMniOILcZl131XB26n9DsgP61/u97cj/ka8w9hyYrNw3v4a1HeG
9xukEbJ6SISY11kpPalB+cNRArm2bjdtM2X5QoRYYeud1NHZlD+d0B6Km+r1
T1P+RXzN+0WzhnB+oLME9Ao2+O9zJX2B2GVp2dKeQ2h+wwX1yvMCuzXv6Tri
2WseRzUL57WulcCUp99XPpIj/0K83eGJ7SoJ/b8r8lFfj4GWtJ9DhLjeJeOj
PkP8vA79e9rrz0uaZfWpCLGX9bGl14spv6+XQC8NefetahSfiG3/1DztCKf4
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
Q0zcskzD/UwB5k9yKf5HXre40wvji/jPmjVfvXyxfjaP9LzMzJ/PeqD+STzX
c8lMhUr8fT7H2JHG7u7fEH+I23YFblZeBP/HUf6hvLetcjbqq8RWZ2sS+Sz0
D0/9teNcbuya55j/59iGgSUPmhZI7wuj9r+QoeuB+0bFxD/C7KzO7sf+nwKO
6Ymrr80bhvhOPPRNlcwMLejTuzS+T5tovMf5gmLiqmCHqBdu8H/3OFbcK61z
mizy0/+zpr6H4RT4j0Lyh7cORKiooz5CfL+hwPV5AeZfiige2VplPVuE+TNi
VlcZ+Hoq8uv7HJtmUPPMMRbtQywcOuW/sQ72U0zjN+HmxvyDsG/ijklDTeqq
oU8ecKz2+BGTwk94f+L83P6J+xsQPx6Snii3XPlwMeybeKLKo6dbt2J8lFB/
VWeYc7poP2Id49JSpzfwv4/IP/x3cd2U77Bv4lUyX9d3SM8/KuXYmZfNzVFr
ob+II/3cI3uI4B8fE29x4fbG4Tmx+pf03hWB0BdPOFbu93H1kvmozxA3GBsF
71KB/3xK+kP0xiLLB/klseHIJ3YZOWjfMmpP7fVFh5ZK7EVMXHrl+wPVTXhe
TvYdbzxa3Rn6jVgc+vvfopPQ78/+r0ccZLgI5N/E6oMGh0+4AP1SQf7gaG1f
QwH/P/GezofZdRstJX9fSeMtPv5i+HToI+LVdhHrCxWQnzyneDFiXmMr7jsS
E+vHK5hyPtDvVfR8n6bnwyT4b+I1oVE1D1qhf6o5tm5gr+wPNeh/YlnXXirL
FsA+X3Ds0bkcmayvyK+JzcIUbbWuIn+s4djA3rl3BbHkfcXEumPL+XcxGD+1
HPuqruqbaYT9DcTsaegPx2DJ94pecmyM8aRLr6/BfxCfMDi1SpQA/faK8qd5
EXtsu6I+QjygWDTFXRHzf3WUf85SaFt7Gf6XeNbub0lLs6Xz/9Qelqfqw0Ix
P0o85NjCFcs5tP8b8kdrDJ5drcb/T9yZWnxCaTzs+y3Hxn4OHDP1PfJXYq+n
sZOHKiA+1nNsadGmLiOWoH5HbDls8JVi6X2f70hv6TQ9relE/xPz6wwvRtrh
vuP3HBv1rdor9zTmV4iLxXYxY/vBf3zg2Aizvx/X1qK+TrxYIVjc8wb6/yPH
VnjkKu8XSeo1YmLd6A3tEUcwP/WJY0fchkQ8DIL/Ji4TKySenwJ90MCx267z
Jn7/DX1CfOJ2dkimHMbvZ449jB17VdYJ45+4z8JHZ6N7wP4bKV7d7FuzH+e5
iol/d+OfmI2RnmfPsexrsveHbkd9lXhoq5lGynDotybKfyOnJbb3wfgn1tGQ
m7IsC/r3K8ecBmrkZf0HfUL875hmr/ilGL/NpDeWxr947436GDFXLSd3XhHx
5xvZu1qZruAjOa9dTDz+rWN19SLp/Xg0XvvkBi53gH8kDn3VmRn4Be3fSvnB
/bqQha3oH+LbF2cOX1CAv/9O+tDog8kGMeIX8USN2zc8pPHnB8XTjxvVhyTB
/xCPi7uysskB+uQnx5Ls5gQPWYb6C/Faa483smel5+3ReBlrPXPNXdTPiHdN
TBr25wHy2zaObS26auobgfFFfDsoXdsmEvWl3/T7PSuDA7OxvodYz8a9fdFg
rM/7Q/4p69K0VFfUd4iDBrl+85mG8fOXY67zH7v7z8T+KOK5Wwf8bjkM/9zO
sW7bNVcfYPC/xAGOn89PfAz7+cexxyXMY1g7/A9xfbXc0dNvoK86OJZ5297j
+iTob+INFUUha6X3VXdy7ILpE99pEzD+iHvkedXpb0L9X8SznM9F6m0/0L7E
3xqLouIqUJ+T4Vnq5pvZS+9ify8x8yuYErQB9WtZniV/Xx7w/RXGP3GIf8+O
mnj0bxeevTh5IDXkM/QjcWLfd5Gm9thfKcezfvWTdV67QL8TD/HNU+jTH/qo
K8+yuj2+1K8K8YH4/b6YoY9z8VyeZ0HKw+dsTMX6FWL1tw/2fhHh97vxbNq4
kJzuWcgfiQe76UerqUjvH+TZ2Bv32lbIor5JnHdN3r8uGvq+B8+eym05eXwH
2pc4/9Ed7yn5aJ+ePGsobd+cgvN6xMSzDkf6xRlBPyrwbMDQva9OaclKnhP7
HV+87LwY79eLZ5vKdFInq2J9FfGpzE/jFgiY/1Xkmbso6aO/9VXJ+xFntI8b
FakF+1Di2cV1OvN9W2DfxOXWFd1qG3Ukz3vzzC3DpcG0FfOnxBc7lB5URuJ+
lT48s7v9w74xCPP3xHEL3mtuCIL/7cuz2aEjr7RK1x8S6/j63htigt/vx7OJ
uoF940Ogn4m50E2O3/ZifW1/ni3ped5apI31UcTPauJ6VTyC/SrzrLjgzddK
3EciJn5hWJRm5wv/psKzO8PzCgqW4PeJWezeYyM/wb8N4Flhs1Wv1ijM3xL3
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
4zSepj09rvka7Ue8W2VS1od66IsTlM9dy/Y1EqN9iHUtDuQc2Iz5nySyr9nb
nBpxnryYOD18ScuQeIz/k5SP2nervz0Y+v7//DCwc1gt1ickk37SbvogYw79
QByhpeP9IRnj7xTP9n1/rvhIE/qHeFiur+/FlZaS56cpPi/Y1avfY+hnYu7x
iOBy7McSpZA9+ifLTXSVrEcUE1fUhBuscMD+0jOUv1//3WgXifkv4h6JflMe
J8D/neWZqN3unF4XjE9ic+sOhS3lWJ+fSvZspZidYIDvI9aqn/fCezf82zme
5T9bnueXBH1F/F9Ztffrh3h+nv7/BgcrlzDkl8TJ79ZsviHd/5tGerDx+a1Z
ZZhfJh65W7x6N9bTitJ51tbH4P3HCPhX4j6fUosNpiP+XCB/4Z69ugR6V0x8
dUxgnEIczjvP4NmFLvZOJr0Rn4nHeFb3myFdH3SRxqPSjJygYNQviP9OHv+t
ZC78wyWe5YTMaYu5i/hIbLilMLLnbuw/ukz+SOXgjWvDUX8j1np0+5fccaz/
z+SZddv7M9Ei9C/x206zaoOXaJ//KB9fbhB46wfWRxHrlTbadklF/nWFZ8s8
Xsv2M0L8IT7tLdKsvgd9e5X0aM3TObsuo32I063rNyiHwf6u8czecMzF8fck
9yeJiTMftRjuq4R/us4z0/jH/5JnQT8SL00eerpgPfRJFunTsnu/3x7H+jPi
QZ2bG2MisX/3Bs/m5GZ3VfkF/0b8zljFt+gU8pNs0kvaH79Pi8D4JFbpseRi
fxPop5s8C97yp8rNUUfynLjnpKjwQ/Ow/juH9FDqhD9PovGc2M+5vNQiVsKi
WzxLUQlLUZuP+jPxLrWpUQsTZSXPb1N+O6Bj9gBNfB+xgv+H8IRs9O8dyv9S
9KflxOL9iVN7ZJ51jUD+n0v6fcn48Oot+HviRYpDzeRaoL/zaHxU6aSd00b7
E++IqTU3vo36az7p5ayQH9vWwv8Qb+3QND4zE/k/x7OhG1W6FUvPPyNO31Ti
7rYa/p/nWb9Ywb8tGvGFeFBokUmJKdpPIP/3YnKGzFqcH0C8LGmYn3EN/HsB
jS/PaT6TGPw7ce6Dksbge7i/7S7lg55VH9MxHyomtjH+0PVHAOL7PcpXGyoP
Faqg/Ym3JikeqC3G+C0k//WiLCTdS3J+uphY7PE1+no54mcR6cOAdYVXDiJ/
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
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10000.}, {0, 41.556361377440986`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.81395468098028*^9, {3.8139552660226097`*^9, 3.813955317935651*^9}, 
   3.8139553498510523`*^9, 3.813955384867634*^9, {3.813955643225254*^9, 
   3.8139556640095*^9}, {3.813955694428248*^9, 3.813955714479246*^9}, {
   3.8139557497606773`*^9, 3.813955764542697*^9}, {3.813955829700242*^9, 
   3.813955912138094*^9}, {3.8139559869697323`*^9, 3.813956010428968*^9}, 
   3.81395636405507*^9, 3.813956741194694*^9, 3.813956788482582*^9, {
   3.81395683078743*^9, 3.813956861416498*^9}, {3.8139569552444363`*^9, 
   3.813956991529398*^9}, 3.8139571957496653`*^9, {3.8139572413101883`*^9, 
   3.813957260650711*^9}, 3.813957484239913*^9, 3.814004881723568*^9, 
   3.814020546343458*^9, 3.814021449317109*^9, 3.814041828714505*^9, 
   3.814041916436681*^9, 3.814889612091263*^9, {3.8148903713918657`*^9, 
   3.814890386910613*^9}, 3.8148906073114243`*^9, 
   3.8148908431851377`*^9},ExpressionUUID->"5386e403-d8e2-4239-9833-\
22c0208052d0"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5389999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.5389999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {2., 1797.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{34.10068054443555, 
          49.72134850737733}, {-99.52881138501606, 91.08529685368633}}],
        StatusArea[#, 1797]& ,
        TagBoxNote->"1797"],
       StyleBox["1797", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1797, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{2., 0}, {4., 1485.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{49.22134850737733, 
          64.84201647031911}, {-66.52068574757858, 91.08529685368633}}],
        StatusArea[#, 1485]& ,
        TagBoxNote->"1485"],
       StyleBox["1485", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1485, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{4., 0}, {6., 1191.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{64.34201647031911, 
          79.96268443326089}, {-35.416875050762485`, 91.08529685368633}}],
        StatusArea[#, 1191]& ,
        TagBoxNote->"1191"],
       StyleBox["1191", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1191, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{6., 0}, {8., 977.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{79.46268443326089, 
          95.08335239620267}, {-12.776686312263706`, 91.08529685368633}}],
        StatusArea[#, 977]& ,
        TagBoxNote->"977"],
       StyleBox["977", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[977, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{8., 0}, {10., 793.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{94.58335239620267, 110.20402035914445`}, {
          6.68964419186608, 91.08529685368633}}],
        StatusArea[#, 793]& ,
        TagBoxNote->"793"],
       StyleBox["793", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[793, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {12., 676.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{109.70402035914445`, 125.32468832208623`}, {
          19.06769130590513, 91.08529685368633}}],
        StatusArea[#, 676]& ,
        TagBoxNote->"676"],
       StyleBox["676", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[676, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{12., 0}, {14., 542.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{124.82468832208623`, 140.44535628502803`}, {
          33.24425808608662, 91.08529685368633}}],
        StatusArea[#, 542]& ,
        TagBoxNote->"542"],
       StyleBox["542", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[542, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{14., 0}, {16., 439.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{139.94535628502803`, 155.56602424796978`}, {
          44.14117135742014, 91.08529685368633}}],
        StatusArea[#, 439]& ,
        TagBoxNote->"439"],
       StyleBox["439", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[439, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{16., 0}, {18., 386.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{155.06602424796978`, 170.6866922109116}, {
          49.748320904805354`, 91.08529685368633}}],
        StatusArea[#, 386]& ,
        TagBoxNote->"386"],
       StyleBox["386", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[386, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{18., 0}, {20., 295.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{170.1866922109116, 185.80736017385334`}, {
          59.37569088239128, 91.08529685368633}}],
        StatusArea[#, 295]& ,
        TagBoxNote->"295"],
       StyleBox["295", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[295, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {22., 247.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{185.30736017385334`, 200.92802813679515`}, {
          64.45386405738167, 91.08529685368633}}],
        StatusArea[#, 247]& ,
        TagBoxNote->"247"],
       StyleBox["247", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[247, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{22., 0}, {24., 214.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{200.42802813679515`, 216.0486960997369}, {
          67.94510811518755, 91.08529685368633}}],
        StatusArea[#, 214]& ,
        TagBoxNote->"214"],
       StyleBox["214", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[214, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{24., 0}, {26., 164.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{215.5486960997369, 231.1693640626787}, {
          73.23487183913586, 91.08529685368633}}],
        StatusArea[#, 164]& ,
        TagBoxNote->"164"],
       StyleBox["164", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[164, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{26., 0}, {28., 134.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{230.6693640626787, 246.29003202562046`}, {
          76.40873007350486, 91.08529685368633}}],
        StatusArea[#, 134]& ,
        TagBoxNote->"134"],
       StyleBox["134", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[134, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{28., 0}, {30., 122.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{245.79003202562046`, 261.41069998856227`}, {
          77.67827336725244, 91.08529685368633}}],
        StatusArea[#, 122]& ,
        TagBoxNote->"122"],
       StyleBox["122", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[122, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{30., 0}, {32., 99.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{260.91069998856227`, 276.531367951504}, {
          80.11156468026867, 91.08529685368633}}],
        StatusArea[#, 99]& ,
        TagBoxNote->"99"],
       StyleBox["99", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[99, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{32., 0}, {34., 87.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{276.031367951504, 291.6520359144458}, {
          81.38110797401626, 91.08529685368633}}],
        StatusArea[#, 87]& ,
        TagBoxNote->"87"],
       StyleBox["87", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[87, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{34., 0}, {36., 63.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{291.1520359144458, 306.7727038773876}, {
          83.92019456151145, 91.08529685368633}}],
        StatusArea[#, 63]& ,
        TagBoxNote->"63"],
       StyleBox["63", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[63, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{36., 0}, {38., 57.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{306.2727038773876, 321.8933718403294}, {
          84.55496620838525, 91.08529685368633}}],
        StatusArea[#, 57]& ,
        TagBoxNote->"57"],
       StyleBox["57", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[57, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{38., 0}, {40., 44.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{321.3933718403294, 337.01403980327115`}, {
          85.93030477661182, 91.08529685368633}}],
        StatusArea[#, 44]& ,
        TagBoxNote->"44"],
       StyleBox["44", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[44, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{40., 0}, {42., 30.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{336.51403980327115`, 352.1347077662129}, {
          87.41143861931734, 91.08529685368633}}],
        StatusArea[#, 30]& ,
        TagBoxNote->"30"],
       StyleBox["30", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[30, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{42., 0}, {44., 32.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{351.6347077662129, 367.2553757291547}, {
          87.19984807035941, 91.08529685368633}}],
        StatusArea[#, 32]& ,
        TagBoxNote->"32"],
       StyleBox["32", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[32, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{44., 0}, {46., 24.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{366.7553757291547, 382.3760436920965}, {
          88.04621026619114, 91.08529685368633}}],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{46., 0}, {48., 24.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{381.8760436920965, 397.49671165503827`}, {
          88.04621026619114, 91.08529685368633}}],
        StatusArea[#, 24]& ,
        TagBoxNote->"24"],
       StyleBox["24", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[24, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{48., 0}, {50., 12.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{396.99671165503827`, 412.61737961798}, {
          89.31575355993874, 91.08529685368633}}],
        StatusArea[#, 12]& ,
        TagBoxNote->"12"],
       StyleBox["12", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[12, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{50., 0}, {52., 14.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{412.11737961798, 427.73804758092183`}, {
          89.1041630109808, 91.08529685368633}}],
        StatusArea[#, 14]& ,
        TagBoxNote->"14"],
       StyleBox["14", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[14, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{52., 0}, {54., 11.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{427.23804758092183`, 442.85871554386364`}, {
          89.4215488344177, 91.08529685368633}}],
        StatusArea[#, 11]& ,
        TagBoxNote->"11"],
       StyleBox["11", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[11, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{54., 0}, {56., 6.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{442.35871554386364`, 457.9793835068054}, {
          89.95052520681253, 91.08529685368633}}],
        StatusArea[#, 6]& ,
        TagBoxNote->"6"],
       StyleBox["6", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[6, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{56., 0}, {58., 5.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{457.4793835068054, 473.10005146974714`}, {
          90.0563204812915, 91.08529685368633}}],
        StatusArea[#, 5]& ,
        TagBoxNote->"5"],
       StyleBox["5", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[5, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{58., 0}, {60., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{472.60005146974714`, 488.22071943268895`}, {
          90.16211575577047, 91.08529685368633}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{60., 0}, {62., 8.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{487.72071943268895`, 503.34138739563076`}, {
          89.7389346578546, 91.08529685368633}}],
        StatusArea[#, 8]& ,
        TagBoxNote->"8"],
       StyleBox["8", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[8, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{62., 0}, {64., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{502.84138739563076`, 518.4620553585726}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{64., 0}, {66., 4.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{517.9620553585726, 533.5827233215143}, {
          90.16211575577047, 91.08529685368633}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{66., 0}, {68., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{533.0827233215143, 548.7033912844561}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{68., 0}, {70., 3.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{548.2033912844561, 563.8240592473979}, {
          90.26791103024944, 91.08529685368633}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{70., 0}, {72., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{563.3240592473979, 578.9447272103397}, {
          90.3737063047284, 91.08529685368633}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{74., 0}, {76., 2.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{593.5653951732814, 609.1860631362233}, {
          90.3737063047284, 91.08529685368633}}],
        StatusArea[#, 2]& ,
        TagBoxNote->"2"],
       StyleBox["2", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{76., 0}, {78., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{608.6860631362233, 624.3067310991651}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{78., 0}, {80., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{623.8067310991651, 639.4273990621068}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{80., 0}, {82., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{638.9273990621068, 654.5480670250486}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{82., 0}, {84., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{654.0480670250486, 669.6687349879903}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{86., 0}, {88., 1.}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{684.2894029509322, 699.9100709138739}, {
          90.47950157920737, 91.08529685368633}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.84, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0, 42}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.81395468098028*^9, {3.8139552660226097`*^9, 3.813955317935651*^9}, 
   3.8139553498510523`*^9, 3.813955384867634*^9, {3.813955643225254*^9, 
   3.8139556640095*^9}, {3.813955694428248*^9, 3.813955714479246*^9}, {
   3.8139557497606773`*^9, 3.813955764542697*^9}, {3.813955829700242*^9, 
   3.813955912138094*^9}, {3.8139559869697323`*^9, 3.813956010428968*^9}, 
   3.81395636405507*^9, 3.813956741194694*^9, 3.813956788482582*^9, {
   3.81395683078743*^9, 3.813956861416498*^9}, {3.8139569552444363`*^9, 
   3.813956991529398*^9}, 3.8139571957496653`*^9, {3.8139572413101883`*^9, 
   3.813957260650711*^9}, 3.813957484239913*^9, 3.814004881723568*^9, 
   3.814020546343458*^9, 3.814021449317109*^9, 3.814041828714505*^9, 
   3.814041916436681*^9, 3.814889612091263*^9, {3.8148903713918657`*^9, 
   3.814890386910613*^9}, 3.8148906073114243`*^9, 
   3.8148908432810707`*^9},ExpressionUUID->"acd9f656-469f-49b1-b912-\
1df55b55af70"],

Cell[BoxData[
 RowBox[{"ExponentialDistribution", "[", "0.09832469219983013`", 
  "]"}]], "Output",
 CellChangeTimes->{
  3.81395468098028*^9, {3.8139552660226097`*^9, 3.813955317935651*^9}, 
   3.8139553498510523`*^9, 3.813955384867634*^9, {3.813955643225254*^9, 
   3.8139556640095*^9}, {3.813955694428248*^9, 3.813955714479246*^9}, {
   3.8139557497606773`*^9, 3.813955764542697*^9}, {3.813955829700242*^9, 
   3.813955912138094*^9}, {3.8139559869697323`*^9, 3.813956010428968*^9}, 
   3.81395636405507*^9, 3.813956741194694*^9, 3.813956788482582*^9, {
   3.81395683078743*^9, 3.813956861416498*^9}, {3.8139569552444363`*^9, 
   3.813956991529398*^9}, 3.8139571957496653`*^9, {3.8139572413101883`*^9, 
   3.813957260650711*^9}, 3.813957484239913*^9, 3.814004881723568*^9, 
   3.814020546343458*^9, 3.814021449317109*^9, 3.814041828714505*^9, 
   3.814041916436681*^9, 3.814889612091263*^9, {3.8148903713918657`*^9, 
   3.814890386910613*^9}, 3.8148906073114243`*^9, 
   3.814890843933195*^9},ExpressionUUID->"63ee218c-50b3-4f3a-b161-\
a2fbc4e5d725"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGCQBmIQrVe5Zsv//8oHGKAgb+XvwzvfIfjrbnpdLr6L4OtZ
vfz4fBcS/7eq/oVSJH7t/JULXivB+bqNk+Y5XleE8yOEPgqwx8rD+Rbhgpqi
DGJw/uKJDJFfm7ngfKVJM+Vk93/aD+PrlIX4R2kh+GZR/A3Tp36E8z2VWh8K
5nyA8++nPPTgNXoD51ct7Q958PQRnN+by7otas9DOH+BabX41UkP4Py+7rNb
JtffgfM1z1QfSDO+DOcHxKQ3Rz+4AOe/ubG0Z4HUWTi/XTJkRvG5w3D+iuIw
m10B++B85y0sHr0sW+H83S9Tlx8oWA7n12as4e/9uhDOBwBcDHSK
        "]], 
       LineBox[CompressedData["
1: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
ZdoLxHSFjb4HBTdkLatrPfjBfbCKVq2GgrHxkdWXvHlAkot76lQtBRcYjELj
qTxb/86F3ow6Cl78r5mUq8kD4Z06Ob8fUTBHr6/2Hz4euF0/pPa4jYK21s/Z
itq5oTOFIUilj4I6EcmZ0oe44aiZ9ZzSLwpuAk8SzfwemOui2XK9KXKqlJkF
13DCFG9Op626KZ56U0EznssJk+5QF65pupWfw/m2iZwwQheW+ELXFKtK6/L8
znHCS5UNPQfyFp8mX9ZQihOK7i/XRp8wxUme3wmXKznA6crU9XdRphiqwWs7
2sgO7w3eafp0mGJk333b6O+s0OH/oeK/F6ZIdnwVd+IlKzTmDvLzdpviJb96
M2oFK2Stj/581muK1yybrZPPs4JHyUwey5ApGj7uuWJAxwob2/+hL54xxRi9
5PoE4V1woFOp7ROHGRbzHt7b488M3rrZWkb2Zshu8U9ggPN2eJDdvh543AzL
L1KevzXaDr9X5yrzT5jhAmrEaChuh/gi3Pvb1QxrDTUFrFi2Q+H2z8slp7dw
29gPm3omGO06eI8p3Ayv/BjOfMbOBGbkku1tuWbIYPKI61YvIyhZ1/YofzND
2csiZ/Qi6cH/ujpd8pQZBv8cfGR1hh4e/NetMDdthvHDrjGBdvQgdWwyJ29h
a36Dt/msPD0c3snty7xhht58dzmLp+mA50kg9wiLOe5nKNY3sqWDNUFVxwgZ
c4xvU/o0rkULdd9aFtrDzHFmVFZIUIcGjkjHiXNHmCMRIV7ioECz5T8Td7co
c7zAKJ9UcpgGLu0YHqaPNUeHG3RUr500YCq+3K5+0xxH1QTr2PI2idkzolmP
8syRVtHvpXvTX0Jk9YpBRYc5fjJJEJtn+UMkMVjkpXBYYLAr21rG3C/CLhgP
P91tgUUp8j6lA7+Ig3NHyya4LFCV51xIT+sv4kE/bZ0svwVy2rv81r/9i3h/
v/LFG2ELLDu+SLdX4xfBbcq8uEvOAvlP8laL3Fkj0rNa8bKVBbrFlJ6hmq8S
eQrHRgIyLHDSKIVB+PcS4RQfMdadZYH3Yko0x78tEUIfX48L37VAA1nmw3Xv
l4icyDM/XhVYYMvsP3k3K5aIjO7SNdEKCwyRMcrhdlkibjmLcvY3W2Dqo1ND
1q9/EpeuC+gpfrVAq+5ue1LtIuH6lbF6TdoSzUi/OyrK5olAt5DNQ7KW+LaL
VOyePU8kTMwZWshbYnOwZdvRm/PEgy/9X6uULfERTWt4v988QT9asvekpiX2
+i7NtajOE7n9xnEfzS3xILOcdUHmHDHameLYEmCJHOYevP+uzhC2pYdYE55Y
YqsIWUHzxxSRr/beqeKZJbIKi7KWvJsiZnuiHr5ptkQr/eRPwk+niPCFUXve
55a4ceTGEfLNKaJQPr20sMcSV1RsyuMUp4j5JlaD5k+WOOZm3uoT/52Ieb92
aWWbFUoOzAdVq3wjKv++WHfUscLckvX4R68niHnvjy+r9azwcseeoo+PJwip
j3NZ9CQrbBR6McxePEFUPtqtWWRihQ5/RUiVERNEVaDDlTmqFS7W0fm0ykwQ
1YsL/GEnrXBJLq9LNn2cqJnkUUu/YYUdnb+fvff/Qjzscbv4ftAK/TQd8nrs
xwiSV1b65rAV7tg/qcZsMkaMMvTViX2yws3b6c5bqokdatrzoV+skJ1hSYRN
eIxwuC984tC0FR5r3O3A832UYIgd1Qj4Y4WqNfIBPgGjhLm6DSOvIBU1sgW/
7FT+RCzUGF21c6XiWX/T4D2cw4TD20W+dncq8ttXaPmtDREvFlOLpL2oOMBy
kjL9cYjIl/7cyniGii6S8Ea0eIigVvivVwZSsY2Zvb8Th4inJdnuDAlUzM4I
8S3wGyQS7i6ol1dT8VZErAP/bD/xqynlFU8tFe0/3qs939dPuI2q2EfVUdH9
1Xjw5NN+AvbHBFIfUzFTqWp9x41+YjGDr4L2ORWdTveE28v0E9a3t3JmgIp/
3+3z4Qr7QDyv+1bcPETFH16ZH7vdPxDHPlxVEB+h4gghcCqN8oFg5uo33faF
ilnRG3d9RD4QTUmn4u5PU5F+4IrW3p4+QqKGnZtrjopL13rTQur7iLQ3D/PD
F6j4trf1/GxuH+HLvq3JYoWKF5i/nmQP7CNGpQqNmta29OY4OTY79RGGZNLQ
kQ0qLvftT4g26iMazsx7JP+h4krbwpC9Yh9x6Hryyubm1j4qnqgaCPcR/wOO
ZMmg
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$31798#1"]& ], {}}, {{}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 100}, {0., 0.09798616534935049}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.81395468098028*^9, {3.8139552660226097`*^9, 3.813955317935651*^9}, 
   3.8139553498510523`*^9, 3.813955384867634*^9, {3.813955643225254*^9, 
   3.8139556640095*^9}, {3.813955694428248*^9, 3.813955714479246*^9}, {
   3.8139557497606773`*^9, 3.813955764542697*^9}, {3.813955829700242*^9, 
   3.813955912138094*^9}, {3.8139559869697323`*^9, 3.813956010428968*^9}, 
   3.81395636405507*^9, 3.813956741194694*^9, 3.813956788482582*^9, {
   3.81395683078743*^9, 3.813956861416498*^9}, {3.8139569552444363`*^9, 
   3.813956991529398*^9}, 3.8139571957496653`*^9, {3.8139572413101883`*^9, 
   3.813957260650711*^9}, 3.813957484239913*^9, 3.814004881723568*^9, 
   3.814020546343458*^9, 3.814021449317109*^9, 3.814041828714505*^9, 
   3.814041916436681*^9, 3.814889612091263*^9, {3.8148903713918657`*^9, 
   3.814890386910613*^9}, 3.8148906073114243`*^9, 
   3.814890843965912*^9},ExpressionUUID->"20de0584-9754-484a-b453-\
112fa6b3f598"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n\n",
 StyleBox["Another example :",
  FontVariations->{"Underline"->True}],
 "\nthe Cauchy distribution is defined through its density function, get the \
cdf by integrating the pdf and eventually the inverse cdf :"
}], "Text",
 CellChangeTimes->{{3.814005506189171*^9, 3.814005544729992*^9}, {
  3.8140057692367*^9, 3.814005785212447*^9}, {3.8140071860407553`*^9, 
  3.814007186582489*^9}, {3.814007688959299*^9, 3.814007694562168*^9}, {
  3.814011297943726*^9, 
  3.814011305726962*^9}},ExpressionUUID->"1b32d12f-6b8f-46e3-b31c-\
f3cee8c32685"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"fx", ",", "x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fx", "=", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    FractionBox["1", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["x", "2"]}], ")"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "x"], 
  RowBox[{"fx", 
   RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"%", "\[Equal]", "y"}], ",", "x"}], "]"}]}], "Input",
 CellChangeTimes->{{3.814004471258184*^9, 3.8140045990535297`*^9}, {
   3.8140046455897627`*^9, 3.814004648758133*^9}, {3.814004693000038*^9, 
   3.814004697293707*^9}, 3.814004734487527*^9, {3.814004812429345*^9, 
   3.8140048371297293`*^9}, {3.814004908660383*^9, 3.8140049222480907`*^9}, {
   3.814004971863221*^9, 3.814004984246828*^9}, {3.814005035221755*^9, 
   3.814005111180773*^9}, {3.814005155889524*^9, 3.8140051913024387`*^9}, {
   3.814005288167378*^9, 3.81400537447705*^9}, {3.814005406086031*^9, 
   3.814005406379796*^9}, {3.8140055702039833`*^9, 3.814005583746676*^9}, {
   3.814005736724798*^9, 
   3.814005736813223*^9}},ExpressionUUID->"56898702-3033-40a3-881e-\
2b9de2a5b804"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], "+", 
  FractionBox[
   RowBox[{"ArcTan", "[", "x", "]"}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{
  3.814004601013208*^9, 3.8140046513775587`*^9, 3.814004700452078*^9, 
   3.814004735597199*^9, 3.814004840928937*^9, 3.8140048817407312`*^9, {
   3.814004912929204*^9, 3.814004924100051*^9}, {3.814004979923958*^9, 
   3.8140049869705963`*^9}, {3.8140050429199467`*^9, 3.8140050961392393`*^9}, 
   3.814005126533595*^9, 3.814005195861905*^9, {3.814005353301426*^9, 
   3.814005376593008*^9}, 3.8140054081885223`*^9, 3.81400558501447*^9, 
   3.814005738217461*^9, 3.814020547068678*^9, 3.814021449962566*^9, 
   3.81404182929368*^9, 
   3.814041917021966*^9},ExpressionUUID->"eed1a942-b2c6-40d5-80d5-\
18f5184173c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"ConditionalExpression", "[", 
     RowBox[{
      RowBox[{"Tan", "[", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{"2", " ", "y"}]}], ")"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "\[LessEqual]", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"Re", "[", "y", "]"}]}]}], "<", "\[Pi]"}], "&&", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Im", "[", "y", "]"}]}], "<", "0"}]}], ")"}], "||", 
       RowBox[{
        RowBox[{"-", "\[Pi]"}], "<", 
        RowBox[{
         RowBox[{"-", "\[Pi]"}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", 
          RowBox[{"Re", "[", "y", "]"}]}]}], "<", "\[Pi]"}], "||", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "<", 
          RowBox[{
           RowBox[{"-", "\[Pi]"}], "+", 
           RowBox[{"2", " ", "\[Pi]", " ", 
            RowBox[{"Re", "[", "y", "]"}]}]}], "\[LessEqual]", "\[Pi]"}], "&&", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"Im", "[", "y", "]"}]}], ">", "0"}]}], ")"}]}]}], "]"}]}], 
   "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.814004601013208*^9, 3.8140046513775587`*^9, 3.814004700452078*^9, 
   3.814004735597199*^9, 3.814004840928937*^9, 3.8140048817407312`*^9, {
   3.814004912929204*^9, 3.814004924100051*^9}, {3.814004979923958*^9, 
   3.8140049869705963`*^9}, {3.8140050429199467`*^9, 3.8140050961392393`*^9}, 
   3.814005126533595*^9, 3.814005195861905*^9, {3.814005353301426*^9, 
   3.814005376593008*^9}, 3.8140054081885223`*^9, 3.81400558501447*^9, 
   3.814005738217461*^9, 3.814020547068678*^9, 3.814021449962566*^9, 
   3.81404182929368*^9, 
   3.814041917025473*^9},ExpressionUUID->"5db12b02-7652-48c0-bab6-\
a3e7395b4932"]
}, Open  ]],

Cell[TextData[{
 "So our cdf is \n\n",
 Cell[BoxData[
  RowBox[{
   FractionBox["1", "2"], "+", 
   FractionBox[
    RowBox[{"ArcTan", "[", "x", "]"}], "\[Pi]"]}]], "Output",
  CellChangeTimes->{
   3.814004601013208*^9, 3.8140046513775587`*^9, 3.814004700452078*^9, 
    3.814004735597199*^9, 3.814004840928937*^9, 3.8140048817407312`*^9, {
    3.814004912929204*^9, 3.814004924100051*^9}, {3.814004979923958*^9, 
    3.8140049869705963`*^9}, {3.8140050429199467`*^9, 3.8140050961392393`*^9},
     3.814005126533595*^9, 3.814005195861905*^9, {3.814005353301426*^9, 
    3.814005376593008*^9}, 3.8140054081885223`*^9, 3.81400558501447*^9, 
    3.814005738217461*^9},
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "eb13c3dc-b6bf-4446-8d16-a784f7c67511"],
 "\n\nand our inverted cdf is\n\n",
 Cell[BoxData[
  RowBox[{"Tan", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "y"}]}], ")"}]}], "]"}]], "Output",
  CellChangeTimes->{
   3.814004601013208*^9, 3.8140046513775587`*^9, 3.814004700452078*^9, 
    3.814004735597199*^9, 3.814004840928937*^9, 3.8140048817407312`*^9, {
    3.814004912929204*^9, 3.814004924100051*^9}, {3.814004979923958*^9, 
    3.8140049869705963`*^9}, {3.8140050429199467`*^9, 3.8140050961392393`*^9},
     3.814005126533595*^9, 3.814005195861905*^9, {3.814005353301426*^9, 
    3.814005376593008*^9}, 3.8140054081885223`*^9, 3.81400558501447*^9, 
    3.814005738219926*^9},
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "55fbdf7c-46e4-4a44-8c9a-44149454011f"],
 "\n\nthat simplified will be \n\n",
 StyleBox["-Cot[\[Pi] y]\n\n",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 "that is our transformation fnc for the Cauchy random variable; where y will \
be our random number \[Xi]"
}], "Text",
 CellChangeTimes->{{3.814006393071203*^9, 3.814006427204927*^9}, {
  3.8140065526661167`*^9, 3.814006608915173*^9}, {3.814007235114317*^9, 
  3.8140072352025347`*^9}, {3.814007924060692*^9, 
  3.814007975068821*^9}},ExpressionUUID->"9d5d020f-1421-482f-ab13-\
e841bdebc833"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{"Tan", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "\[Pi]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      RowBox[{"2", " ", "y"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.814006521280074*^9, 
  3.8140065376385727`*^9}},ExpressionUUID->"ce2027f5-02f1-428f-855e-\
540368924d8c"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cot", "[", 
   RowBox[{"\[Pi]", " ", "y"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.8140065307075357`*^9, 3.8140065381665154`*^9}, 
   3.814020547327854*^9, 3.81402145015182*^9, 3.81404182937379*^9, 
   3.8140419170877438`*^9},ExpressionUUID->"4309317e-9124-415a-91e8-\
d047578d25fe"]
}, Open  ]],

Cell["\<\
Btw, if we have to compare two expression to see if they are the same :\
\>", "Text",
 CellChangeTimes->{{3.81400668701264*^9, 
  3.814006701369245*^9}},ExpressionUUID->"fe344cd2-9be8-4f04-9960-\
6794a6c57aa4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"Tan", "[", 
    RowBox[{
     FractionBox["1", "2"], " ", "\[Pi]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"2", " ", "y"}]}], ")"}]}], "]"}], "\[Equal]", 
   RowBox[{"Tan", "[", 
    RowBox[{"\[Pi]", 
     RowBox[{"(", 
      RowBox[{"y", "-", 
       RowBox[{"1", "/", "2"}]}], ")"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.814005462991378*^9, 3.8140054650136967`*^9}, {
  3.8140056251047792`*^9, 3.814005656870646*^9}, {3.814005712742466*^9, 
  3.814005718725621*^9}, {3.814005976281777*^9, 3.814005979750197*^9}, {
  3.814006366662159*^9, 
  3.814006368800428*^9}},ExpressionUUID->"8af2a2c1-58f7-44ae-9da2-\
6d77f3a45c13"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.814005659584342*^9, {3.814005719407016*^9, 3.814005741621953*^9}, 
   3.814005981041819*^9, 3.81400636991218*^9, 3.8140205474552307`*^9, 
   3.814021450284923*^9, 3.814041829420409*^9, 
   3.814041917135161*^9},ExpressionUUID->"be52154b-8935-4481-9701-\
b7a3c84f864b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "\[ScriptCapitalD]", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "check", " ", "we", " ", "get", " ", "back", " ", "our", " ", "original", 
    " ", "pdf", " ", "from", " ", "the", " ", "derived", " ", "cdf"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CDF\>\"", ",", 
       RowBox[{
        FractionBox["1", "2"], "+", 
        FractionBox[
         RowBox[{"ArcTan", "[", "x", "]"}], "\[Pi]"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDF", "[", "\[ScriptCapitalD]", "]"}], " "}]}], "Input",
 CellChangeTimes->{{3.814005693141438*^9, 3.814005695506241*^9}, {
   3.814005830373602*^9, 3.81400592581607*^9}, {3.814005987960507*^9, 
   3.814006021348255*^9}, {3.814006052917322*^9, 3.8140060827317944`*^9}, {
   3.814006737300194*^9, 3.814006780885882*^9}, {3.814007257073357*^9, 
   3.814007282162867*^9}, 
   3.8140081758385267`*^9},ExpressionUUID->"19ce2e3e-9ab9-4d1a-9ae8-\
b123c8a64fd4"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   FractionBox["1", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["\[FormalX]", "2"]}], ")"}], " ", "\[Pi]"}]]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.814005843616757*^9, 3.814005860329646*^9}, 
   3.814005926660108*^9, 3.8140059842186413`*^9, 3.814006022470337*^9, {
   3.814006060017273*^9, 3.8140060838476963`*^9}, 3.81400678160185*^9, 
   3.814007284947269*^9, 3.814008176883515*^9, 3.8140205475842*^9, 
   3.814021450417788*^9, 3.814041829482048*^9, 
   3.8140419171676598`*^9},ExpressionUUID->"a092499e-72ae-4e27-b307-\
cba630d6b47c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"let", "'"}], "s", " ", "do", " ", "all", " ", "with", " ", 
    "mathematica", " ", "symbols"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalD]", "=", 
     RowBox[{"ProbabilityDistribution", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "\[Pi]"], 
        FractionBox["1", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["x", "2"]}], ")"}]]}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"CDF", "[", "\[ScriptCapitalD]", "]"}], "\[IndentingNewLine]", 
   RowBox[{"InverseCDF", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", "y"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", "%", "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.81400816477079*^9},ExpressionUUID->"57ee9025-a6a5-476b-973f-c27a2e4e4dfb"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   FractionBox[
    RowBox[{"\[Pi]", "+", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", "\[FormalX]", "]"}]}]}], 
    RowBox[{"2", " ", "\[Pi]"}]]}], "]"}]], "Output",
 CellChangeTimes->{3.814007290406157*^9, 3.814008179225774*^9, 
  3.814020547875827*^9, 3.8140214507168293`*^9, 3.814041829699655*^9, 
  3.814041917383645*^9},ExpressionUUID->"473dceda-f097-4a16-b091-\
add03a77af6b"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"-", "\[Infinity]"}], 
          RowBox[{"y", "\[LessEqual]", "0"}]},
         {"\[Infinity]", 
          RowBox[{"y", "\[GreaterEqual]", "1"}]},
         {
          RowBox[{"Tan", "[", 
           RowBox[{
            FractionBox["1", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Pi]"}], "+", 
              RowBox[{"2", " ", "\[Pi]", " ", "y"}]}], ")"}]}], "]"}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.814007290406157*^9, 3.814008179225774*^9, 
  3.814020547875827*^9, 3.8140214507168293`*^9, 3.814041829699655*^9, 
  3.814041917398529*^9},ExpressionUUID->"381d7b1d-518f-4500-8ab2-\
61b62e49777e"],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          RowBox[{"-", "\[Infinity]"}], 
          RowBox[{"y", "\[LessEqual]", "0"}]},
         {"\[Infinity]", 
          RowBox[{"y", "\[GreaterEqual]", "1"}]},
         {
          RowBox[{"-", 
           RowBox[{"Cot", "[", 
            RowBox[{"\[Pi]", " ", "y"}], "]"}]}], 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}},
           "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}},
        Selectable->True]}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   RowBox[{"0", "\[LessEqual]", "y", "\[LessEqual]", "1"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.814007290406157*^9, 3.814008179225774*^9, 
  3.814020547875827*^9, 3.8140214507168293`*^9, 3.814041829699655*^9, 
  3.81404191740012*^9},ExpressionUUID->"64a40ed3-6ef0-4f43-b5f3-f0fcffb9837a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "visually", " ", "compare", " ", "ours", " ", "vs", " ", "buildin", " ", 
    "random", " ", "variate", " ", "outcome"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"cauchyOur", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Cot", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", 
           RowBox[{"{", 
            RowBox[{"0", ",", "1"}], "}"}], "]"}], "*", "\[Pi]"}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"10", "^", "4"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cauchyBuildin", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{"CauchyDistribution", "[", 
         RowBox[{"0", ",", "1"}], "]"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"10", "^", "4"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ListPlot", "[", 
        RowBox[{"cauchyOur", ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Derived\>\""}]}], "]"}], ",", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"cauchyBuildin", ",", 
         RowBox[{"PlotLabel", "\[Rule]", "\"\<Build-in\>\""}]}], "]"}]}], 
      "}"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Framed", "[", 
         RowBox[{"\"\<Compare\>\"", ",", 
          RowBox[{"RoundingRadius", "\[Rule]", "5"}], ",", 
          RowBox[{"FrameStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"Brown", ",", "Dotted"}], "]"}]}]}], "]"}], ",", "12", 
        ",", 
        RowBox[{"RGBColor", "[", 
         RowBox[{"0.5", ",", "0.68", ",", "0.91"}], "]"}]}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.814007410726028*^9, 3.814007470914246*^9}, {
   3.8140075037434807`*^9, 3.814007631406601*^9}, {3.814008934562676*^9, 
   3.814009012117454*^9}, 3.814009180492174*^9, {3.814009220357094*^9, 
   3.814009228565689*^9}, 3.8140092788664837`*^9, {3.814009381725031*^9, 
   3.814009395360564*^9}, {3.814009445898439*^9, 3.81400946360419*^9}, {
   3.8140094971970463`*^9, 3.814009509550358*^9}, {3.814009581394843*^9, 
   3.814009754731523*^9}, {3.814009795329219*^9, 3.814009857672765*^9}, {
   3.814009909671892*^9, 3.814009948357931*^9}, {3.814010011078478*^9, 
   3.814010114037828*^9}, {3.814010203723572*^9, 3.8140102063301687`*^9}, {
   3.814010281616459*^9, 3.814010300588225*^9}, {3.814011274545117*^9, 
   3.814011275892613*^9}, 
   3.8145516240236263`*^9},ExpressionUUID->"5c2cc20a-cf19-496b-85b0-\
e6d658c37790"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJw8XXlczN33r4iQhFCyREUqhBCV3hGyF6FU2qmUpn2vqaZ9m2ZrohJCEZLq
KetIyBIhRCFLlDWEKPzm95oz3+ef53Xd+XzuPfv7nHPvpymufhs95GRkZJSn
y8j8//8l/3WbJdr/6tlQPB30D9DLr2p3eSJLYwWw78QfWv7nlZlkrAyZ++n9
ref0aV4FiYav3pql9NO8KhjpERV/Ip7ReAJ8Q3Y6zNx1n8YaGDRM1o+trkXP
T8XQfW6B0zMf0rwWHCv392ppt1yUjKfh0yrzzv6Y1zSvg10rfH3eXJHuRxcn
4rxELqZfaKyPN8/2uHNUf9B4FlZEbprV92gUrWeARRFf/1mpfKX3z4G+l/Ey
1Yj/6PdzUTSr2zTUcrZIMp6HbQYes9hhT2neEKecD9sX77hPz8+H9chsF9kF
HTS/AIafmI5XjdppvBDCXQVVu4N76PdGyEx4Xp5e8p3mFyHhQVf8xfP1NF6M
+0eM/pW5/aSxMdZq9+903dRBz5sgyXFm8NKrL2lsitFqR499VlWj/S6BhyD7
z+W2oTQ2w7hE+VZNmef0eyD1+Zfq+sNjJfNM4IXS7yHjnC7TvDmerzSdnDHn
hmR9pjkmPXuRNunnU5pfCldbT82eoD80vxToy/K3ymui+WWYpCpX8qTkp2TM
XIZb2nnqA+fJE/8t4FS75X7/1Gm0vgXs5zy8FvNUKt/laFs/4mxf2Et6/3L8
jHM/2DX+Ac2vgNu99xubOJfo/SvgpyLzZNW7w0TvSkTk95YYbJxK71+JwJ5I
m9mK32l/lsDLSVs7lihI9sO0hM52mw0jMq7R/CqMmt2oYvGc9Ie5CmWVzxc7
xXXR+quRZvvE2s1dSPOrEaH8aVFpmyqtvwaLNxSPVekifWGuwTy7Jq5D7x96
/1q0ndp6XelZPe1/LT7q14X9GSzV33UYv+xtQJ76SNr/OhwuG7TygWM3za+H
iU4fKz1jDO1/PR6UXtNu2vmP5jdApeykDVP0htYXjyfI1arvENG8Fcp+Howo
3k/vgxX+XfzDP7dmAL3PCo51Q038b76TzIus0G82Lk2m+hXt3xo1g97NuadG
+g5reJV48d7+fUz0WKNgYZvpsDiyN5E14r02dtmOnUby34i+1k1ug9apSOjD
RlgM9nl60eAbPb8Rbbqynr8tv0jGoo3Yd2n486//9dP6m6BjYtZ17YSc5H3Y
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
LgqWrS95o0j8S+GC4b/jntch8q8ZXOipHjETvKPzaWwuFD36Er4MqiX752Lj
sZaAqiNkL0IuHotkJhwdT/W/fLH89a+UrDpO+lLExbDom/ZqZVSvKebC/Hvr
zVd6R8j+ueh60mGdaUr97zIu7mR8D9MzJTxXzoVgi15BwVyqN1ZyYfpgZ+2y
n7T/Gi7Ktj8rCDQl+zsn5tf2SfvqF5F/EXHxn9qfppEZVA+v58LBRd493ITq
Jw1cNBk7BMTEkf3d4sLVb7RayQU6n9LEhbdzRevKForHzWJ9slQo9z9D/riF
i+UK/422u075exsX3SGzW0p3Ed5p50JltdIC31ji72suLm3mr8ttIvzaycX5
VtM5Z1XJH3zgQm6Zw44jSWTP3Vxst1EKk9tN+tDDhULm+6OKG8n/93IR8M21
IGU/5f/9XGgduXT692QjyfMyPPhUjxIt30L+aiAP+ec/NXjyB0nmFXjgzlD5
dOYlnb9W5OHZWLXxQ10oHivzYFZasOTrc8IbKjwkFX/l5I+geKDKQ5pRxz8r
IeX3E3iYNsn+zp4I6f0BHr71337+2ZT8iRYPbxK8lp9yXib5vQ4P8cal5vyx
dP5En4di05mRpjJUDzPg4QNEnO6nlH8a8qBx9eDJMc10fsaIh3878juNF1F9
zISHHe1frEVOlM+BB/eamx2eLXKSeQseLjxoWb6kNVzyvCUPd951KRuYk/9Y
y0O5i6bhlTtkT1Y8ZGV1a8VcIP214cE5ZWd8qqG0X8XDoLI9i37WUPx14OGt
vrrt5s10HseZB1l3r7vOpeRf3HlY+O2YwyxDaf7Pg9zHLy2RzWSvPjxoqT40
NRNRPZXBA890yYH+bXTeP4iH+Vtkp8+cJsX/PJz9KuPVtpTwchQPI3WL9t4q
oPjO5KGrd9qWeWGk3ywe5jme27D5CdXXU3joPJxcF+JN9ZwMHqoyclWqXek+
BVtM/5U27oI+Og/N42HFhrWvlJuk9yXE9HxyWtj0gvafL6Z3co8Cb6e0fspD
za6b7WabyN8Wi+Wjcn7FtU/kv0p40P/+zT9ej/S9jIfJGtPWnQuh9cp5MH12
MuWuOeHJSh5OBaX67c4m/ajhwemUTOWSUbSfc+L1nizcfrdAen+Gh6b1S+tS
eFTvq+fBfI73uy02dH6wgYdDEX9s5EOI37d40H3SwTB2Jvk38TDkesLP+gH0
fYZmHg5vuPP5ejHhzRYervsO8XO+R/GijYfQF4uq53AoP28X82eK0biqDuLv
ax7Ul8o961xO98k7xfwu+2y+pI/85Qce2gpWK2w+Qv6smweZ1XfLGtdTfaOH
B23XgIVhL8m+esXrZYv8jsTQuJ+HDN1I+YfRpK8yfOjsi/436BbxayAfq7cZ
ZRUMkZ4H4MPKV+uYbDHd/1PkQ/ln8tvkHun9AD769jyZk1ZG+qPCx6Y7I75v
y6X8QZWP1vFpl+NmkX+awMfhrtN3VxwnPKjBh6u9l1eVL/FDi48dtkmOz0X0
PQUdPqZfN9vrO4vqPfp8lJ446fa1lvI9Az4eFcZMLNGkfpghH04Tti4efZj8
uREfk0v01jkXUL/BhI8OGX3ridbS77uI52+x/iuNovzKgo8fO7tvJN6jfNaS
j+TwShvZSopva/mo9rT4rqomvZ/Eh3uuVf6o73Re0IYPXcVO92o/6v/b8nH2
v/xYpfWEDx348On51GR3m/jhzEdE/sU1ZlMpv3fnQ0XlyRi1KsI7nnzEt/k8
dWFSfuDDB7NOValzHsVXBh/XBwaWGxiTfQXx0e3Fq7JoI36G8fHz6m2zQi86
fx3Fh2fblYRLLtL7l+L9NuppL75L/TMWH0/+Y7T52ErPQ/ExKiz7g+cy+n5N
Bh/sp9OC20ZJz8fxYZJvNXl+A9UzeXyceDd/roUyfa9NyIdtmoFo1R3qf+bz
kVhksG1HHcW/Ij7srivbX/Ki3xfzseRp37uXCvR9wBI+/DZkLEscRPf/yvj4
I+efuWMg7a9crL/uMR9sbSn+VPJR5s58tCWb4mUNH9Ffot8Z+dP913N8bNnw
bkD6GOKPiA8563nDsidRf76ej/elpgpz9krP4/Px2qJi/vAGwl+3+AiXf5ux
IYPqvU18vFP76WpwjuojzWL9Cq4KHzqYvjfTIuafafRO9Z5osn8xf5K+iFpn
kX9u5+NtyNgEuZ/Uv3ot1kdxCB87kuoVneL3bWKFeziRv/og1m+1P7VxTMq/
u/l4E7o7Ze5pOj/eI7a3c6wS2S1Uv+sV8/N6c0IBk+7n9/OhVatpLDwj/d6s
AOEl/2UrVFC8GSjAzLW3iktiqf6iIICSqtn9o5qERxQFmLzr8W7b2XRfTFmA
q1tTx5ko0PkWFQF4E/szzSrsJM+rCmD+dY33xoXkTycIkMoOiD96is43aghQ
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
UX3Yy02MvKZszPyhjP5PoWLqabt5xsWVyK9uYeT/ub6bjgnGv01Mc+3XVZts
UPh/MZlNHT7wNE9xvkNMf32PD+2VCj5uFyNPpieKFz1SnPcSk6nmzUnlp1Df
FSmmwXeb14T7AT9EienJ5euRIXawzzFi0no6qvcJLfAt+5n5n7y8PfUs8t2x
zHzLB7y+b4N8QJyY2H83uer0A98bL6Z41Yf5TprwP0fEFDbzUOA4Rf+zBDHt
2DBMtGc68Foio88VX+tGlgMfJompMuX9jcYG4IlkMX39XPkldx/wWyqz/wfO
SYelYP6nxHS983NP4TPYU5aY/iW6uDith/9ii2lEVeBkg92p3Z85YjJaar06
qR/sIU9Mh3vWKF/OQ/2sQExtbRm5Tho4HykSk0td0EafSVg/iZiGp88I2j0E
9c0yMc06r6271gX+MUNMpysCe6xMwPjPMvboY7Ihyxv9qTLF9HnDwreW7uj3
eUFMNSFD7u15i3xMlpg4YS89cu/j/9liurn1U+/3xxPg/xn5PS20utYX+pMr
pjkx/1Tyc7jdn/OY939MCzFzg77kM/qx8X1W3y7Uw9xg9m/PgbTs3tjfAjEd
2Pej9Hk44r/bjP1YPLbPS03UnxYy8tLT+dfu78iXFjH72bQpNuYG5K1ETD/P
7RjuewL7USqm0mzlmX0Po56ojNmv37bJQztgz8oZebQYKAowRb+oCub5y3fb
phYCX1eJyXCnr+3metTDVzP2c82R8PJhQ7vHWyOmhhOL+ySaI76tFZP34S7n
5Pmwz8/E5Nz47EX0Y/izOjHpvIl4NHQb8hX1Yrq19LXplkvQp1diSrnbmZP2
EviqQUxOV36pqtdDvxvFNKhz7kqzh8Af78T01LM65sQ5RX9eRn5O2q2d6wj9
+cTY06NrnzeuBJ5pEtMnVnpGz+v43Mys34joFlUTxfldMY0ZmOU9SIj9+C6m
g5cNhu5uAl/VKqblSr8GWGVO717PNjEt5tXk6ytBv9vFFLB7rE3Ua/Dzv8V0
yvPff1cc4B//MvI1L9XM+hTm28msD3vqavkLRf9vCU0f5bExZRL8ibKETmU9
4c5QAX+lIiHeonsvOOMxXjUJ1fXO1rs1Dv5BXULKrnpmqWHAIxoSunog3074
wrb7e00JTTrf2lv8Gv62H/P8Ar9t6a93dL9fS0Kvwm/MbfLGfAdK6LuDzrFL
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
H3ykNKti1tYwV9x35yelwXaxJ4+fxnmYAClVVfc7bqGHfGSglGKoxvrqDOhn
kJTKuh7fdlXC74OZ9f3V0P99HvLJIVIK+D54TMJ2zHcTs95HZ+T/LAc/Hiol
I79yXvRnrOcWRp4nzs3qjFD0c5JSZV2rwfp94LfDpLT4r9bV7aOg3+FSCg9a
NP+pjaL+X0qNI37PL/uJ83YRUopO7bo3aij4+0gpTdDausyjGPIaJaWie34T
9N6P6v4+RkrrkjRXZGyEfu2X0o3GInWbtYhvYqX0pcHQ4tAW2OM4Rt56+tAv
XdR/xEvp7mbL5QGGsJ9HpGQ8cblfnBHmmyAlKr88JI41o3t/EqVk296jY+RL
yH+SlILmvkjK+Y16tmQpqb63aZj8HvNLZdbTxS5m7yKM75SU3H/NWL9nFeST
JaWo2NO1uYr75dhSKp6uc9jgK/JXHMa+HLCKcXVBfQFPSjP6Nzkr+eA8jkBK
WinvTGaYAh+IpLSg7XJx+3XIk0RKr6JasowHoF5Yxsj7PpdQ8of8ZUgpt0X7
VrEO4pWzUrq9XqXWwwrynyklw5jzQw+8gjxfkNLEG/NXHeqL83RZUmpbGi89
lAN+NZuxn7yTUcElqKfIYdbv2VlBzi3Ex7lSGhpsZ+dQC/40T0rTns2/OOcx
6j/ypfSyYVDvM06n4f+lxNu+9cDOk4hPCpj/a+kv+9wF+bwtpbNZvc7y16C/
SqGUBv35NmDFRtijIikNWB8+tqfiPFCJlNacEs68oAL7WCqla7um9VhfjOeV
Mfan1TXLefO17s/lUpK8DdZd7AO+tYKxz1e2VPw5g99XSWnr2xdeThchr9WM
PrxvHzPBFfJXIyXnOdzmgiLEH7VSurTm9Pkr1rDnz6TUFLPB3yRT0W9TSk8j
1u7p/Ra/r5fS9RlBT/48VvTfktLsx3sjHZvAtzRIaYws3ieml4L/l9L7NFlS
hcsx+H8prfq7SFO3F/zdBynVet1zLPkFefwkpfXDCsYbDEc9VZOUTnRevRi6
EvxOM+PvYmLN4zUQj7dI6Yl9iZbwEeLL71K6UPPh6LKXwButzHz9/ArXzgOf
0SYlvqjkS3M8xtsuJRNWXFPwL8j7byn5ey9csPEY/M9fKW03OWu58zru++yU
0pZVqz6/u4z+r0oy0hz0a7CTDuy1soy+L79ycV4v4GUVGS1vfWK5MR/7oyaj
yIkqT6YtAh+jLqO97z4ktxrDf2rIqOZIQL1TpOK+EBmtnhrmmDsf8XI/5vOy
oZUJMahv0JLRjl0aSn+58LcDZRR36uRRdQHepy2jr0vM1qfUoj5JR0aerkWj
Pij6O+jKKO33C+WZq+BP9WVUXPx+36xt0DcDGe3fMHHUq4eI3wxllLD1TODF
jXifkYw+dv7KDV8A+2Eso/DOtQGmq2BvTWQk6Wc8PstPufv5pjIqOfC6fkEp
8utmMjoX4358VBXiaQsZpX6aoW52AfjYUkaOA+Z3jV+M/Rkno7Fv1b7b1Cvu
L5fR7Wsx/b/7gw+2lpH5qs9lx0dgf21kNEJpmNuHIujPZBm1iHWn3aqF/NjJ
yEym/2zLVdSr2MtonbLBiOGZsMcOMiZesgy8eQXx1TQZuSboWM+6CT6UZNSR
GSzOVoL9cGLWf1SxpkMe5NVZRsuWqJf63IR/ni2jNyffJcX3x/xdZGTweHwf
1iDYT1cZ7bwU+fzgWeR75stosK3FgrnLsT9uMsq5HGZfOQLxpzvz/D3a4StW
AZ8tlpFNsWD9hS7wUUtldOd949CBtuAvPWQ06Ms6750q8LcrZHQ0e6RZyB/I
oyfz/N63KjrKUD/rJaOU4AIPcxvwF94y+nzKetu7Opw/8mHevyLQ9sUZte7f
+zH7Ncbv8Oan8I8BMpoarVpZtA6fA2WklT70ncbKWd3jCWL0xZkzbYg6/FWw
jMp21/mMcAAeCpFR+te+m+pF8H+bZDSmxWPQ8rs4DxUqoy+R2tarJ4H/3iKj
Rve156ragE+2yShwf+Byr4uwB2EyWvCFuz1oNviAcGb/Rx3KDGgEPtklo9MW
O8Tv+iO/FiGjd31jvvxKhL+JlFFreF1U5R3wd1EyOrO//02DIAX/L6OqQ1nN
Y4ZD//bL6KZxwCDPHajfj5VRaf5uo4cbEH/HyejJaOWq5f6IX+KZ8Uw7sDHD
C3j0iIxqC0xzwr+gni1BRk3zE23GFyjq/2T09IRVv7gW5O+SZHRgz2hZ6Ur0
O0iWkaw6+PfsIeCzUmV0nF24dshq2PNTMjLpcjGMZMM/smT0KK+mtkkA/WbL
aOWnhx/N18KfcGQ0U2/S3EWmyK/yZDRpy5drg/3Rv1zA6Ef7x3d+ivuzRDKa
9vPv7ojvTt3/lzD2boztL90L8H8yGTk4ZpmUd4G/yZDR1oX7Xd6F4f6Vs8z6
/en7+Vcl8GCmjKo7/zZE10GeL8jIJ3L/zFRL8GFZMro1/I1z5hzoQ7aMvC/t
vZgVO6P7/TmMPqi2DNz0DfFtroyS/KL0/T9hf/Jk9E1N9/jWXqjHy5eRevyO
4zos5OduMPb3yJfcmT8xvwIZ7Ta4rjerL87L3JZRwUOjHaMGYP0KZTS9aYvH
ZMV9r0WMfvtdHpCQAbxYwqzH34LGeT9Rj1Mqo/cB6eW3g5D/LZPRNS3TIz2/
4LxjOfO+C/qRHx4Db1fIqEHff+D10Yi/q5j5PnygckOI/p7VMlJet3bWj8Ho
f1/D+KPUDxOylZDPq2X235K78FUA6tmfyeie6gHhRRnyW3WMvo0aHu2s6939
/noZue83XdGwCevzSkb2ole2XYr9bpDR2bAbl0STwIc0yohbEzDPajfs9Ttm
fnJRcfvAqd3j+cB87214Jy4J548/yUiun74gdAPySU0y8up76XxVK+S9WUZG
l/Ia/SwRv7TIaNOIyuaZP5Bf+i6j65Vf1LWmwl+1yui1W+pYFWPoexvj7wJT
Vr4dAnzdLiPRrR+TLiv6Lf6W0dWyobnzD4Dv+Ssjpx4WWRaK/uudMjpZ//yP
ezDsuZKcivaMHdPcH/dnKMtp3jqVozUdWA8VOe25tt/s003gGzU5bY54ue9p
F/y9upycas2GygxwX6+GnCSty92MYiHvmnJasqB14bMwnA/rJ6ctOVkmfaTA
R1pyejC1o6uqDfI8UE71eqrOZkrol6ktp4dr05pvZmC8OnLq6zOxZHYr6hl1
5WTYsfX1nGSF/5dT77sDJv9ZAjxlIKeW8JWZ28TwV4ZyWrqDPyFoLOTHSE7H
PyRdPSSBvzeW08hz9YdMpsEemchJMHHi2MYa9LMzlVP+lISEsSPA95jJybYx
cYTsDuIDCzkddJwnCVECX2EpJ+WBqj7R9yGP4+Tk/jTfa6ayWvfzrOQ0p0us
raGPeMNaTmedPy/0KJzV/b0Ns74J04/FKurHJstpecT+HakWCv8vp2WryO3a
NeRj7eUU9dR/+7QU4CMHOe07fWrIuPHIb02TE3/6zeFpy7HfJCfrgFz/ygcK
/y+n5DnGvqwXkCdnZnxZjUXfNyv6/8ipWX0HW3cs+CwXOb2+pbwvKAn+1lVO
ZX4vXmSux37Nl9OlYSo2KwT4v5ucxIOM2bPvA3+6y2lQYMwszU70E1osp3Gr
rR21moH3lsrpWM+Jx+U/Uf/qwcij1qfZ7V3AsyvkpPYjaMSDVYiHPeWkd7M+
KmY68I+XnGLae98JPAp98pbTbTOtJ1EDFP3X5XTyzYx5K+Lgr/zktDH44xpW
NfinADnN+FK87pYW5D9QTh/e+9xJmYn4IEhOsyx/njrrAH8QzIwn0G6Duj/w
QIicbp2JaMgvRv3pJjkN2aLUp/oo8FionHxiNlhrvoc93MLst06hU3YK+PZt
cppdtvVYXJOi/l9Obz/+2KTZCT4oXE4TN4hujDTHfTG75BSak6AkbACfECGn
bVcO9fjWgngoUk5jvs27dXQN8GmUnNSfR0T+OQF9jmHWd8ou2/XN0P/9clLp
vz95hhL40lg5/bj3+YmVIl6IY/bb0tWtTRv6ES+nnqOXOsXcAN96hFm/mjX6
JbeBfxPkxN6f/KXrH/xBIiPvdv90Ryr6wyfJqcK8knVXDfqQLCcDpf06S7yQ
30uV00Xno4LnfbH+p+SUVmjqfIoP+WXJybLY8esCMfabLaeZ8bbzVGqhPxw5
XchcOspkEfA2T06txdnFRtfBTwuY91u/jxgmBP4RySmyL9d7xA4F/y+nKRVu
p+8+Bz6XyWnxyvvxi3rhfRmMflTlDfpwDut/lrF/P1R1OrUx/0zG3nZMsPR0
Qz7jgpwC92hEdhD8ZxZjD084+zxZCPuXLadEpQr7HBfUl+bIqWObrX9knoL/
l9PQyJH3V2vjPE2enPzG/SsO8IY85zP6tPNI9dVP07r/f0NO18UfduaLEY8V
yMnBadUXvSWQv9vM/r/46ND86Tj8v5x2bvQumZwI+1zEjNf+ULv8KephSuSk
lOY5N1TRr7VUTqmstxbrN+I8a5mcNiyRWk8X4PxxOWO/k95/rjuK+VTIKf5s
tN4mNeh/lZw0v+awxSbAO9WMfe3MSaqfCD6jRk7mj1yODp+D87O1cuqVXD4o
txh86DM5XTPf3r9jPfiIOjmN7ru6OFwd/qheTpdXPdNzssL5qVdyYjk3lUXO
UdT/y2lhk9XVof4YfyOj359Gn5y+ScH/y2nVZs//VgxCfvaDnO4OVm4v+wx+
/BNjT2ZzNT/KoF9NzHo09NIbK8F9e83MfJyvW/+6jnrMFjlpCWNLr95BvfV3
OQ07aF6//x/4kVY5lfYo1Rk2E/a4TU5ffEZqX5oJe9gupwWT7O6YzQL/9JuR
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
N9T2X05bj9pc+GsMPmkuJ4+Pdg0azrhvyb5fFbD4VzDqkYbKqXvI2/fG3sCb
4XJaYVPUNDUB8j9CTvcv2f0a3Rz9Hyknw0/v3mt7Ih5iJ6c0u68em1PU+//L
aUnCFLspo1F/NUZOMV+1o27thz0hOXV+uUF5rxbrt8bLqfZhv/5DHdT+v5xO
arWsbLcN4z9JTre+zBwZoV6P4iSn08EpaRk3MP5T5NSubMqyg+7gS9PkVLBm
cuvKPpAfFzn1fHPuZzt9xI9nyOmbrNmrtZVYT+0qpwbXxDGhcxG/n83mb0Sy
w0f1eVVz2Xj+yPQNilfbfzkFr84ZPjkW8Sh3Ob09OWDi0o7wxz3kdK5TaK/i
bHxvoZwmWd0877YY8S8vOa0pmvrJbjDiZT5yOhY5bVX/SbB3fnK6tNu9csI1
9f4/cmq9bDW9mIn6tyVyWltQMP2SHtbLLpPThLxOp2aVIp67Qk4XbP/qpY7H
/1fKyfv3wIVJN9Xr/+TUrC5vnY0ZznsLlNNtoztrX4QiXxbE+mdveG7xDvDR
9XK6881s2/wcnFezUU4bC/5d+fUX4xcspy9FORoBi4HvW+Q0wHWnRd/b6vN/
WH/2Df55bCL8o+1yij8zZPqYhZjfUDZ/oevs9BeA34bJSfvL6Lm+GmtU70cw
vGjR37tRfV5glJzivpX5H7EGv4+R04iPF7c8V+/nHisnv7Yt8sJdEX+Kk9O0
Di19L16Cvdsrp95GCedyv2qpno+XU2mEXfd6Q9i7RDm5Xe7Uv+vWM6rnD8hJ
pkxPk2zbobp/iLV/U2DP63ngy0lyWpj37mv/h+AjyXJq3GkwqMuJY6rnU+W0
fpJT3/NuwN90Oe31z9l1KwfyeIzpz5u+X4Z4on8n5JTnY5nooz6vKkNOFind
RhUMUdt/Oa0+9+tPilrfJXL6sanR62M6/BOZnIystg/yMAYeK1h7vjkmFQSp
1//JqWjAgqKn6viTICeDtBzHUFPUT2fJKVNaFzUgHXwwW06TM15mZQYBL8+y
+fXadsfkIfQ5V07NdXcp7G6ZqPqfx/C6T4frpgaaqvHJl1NlX529bgPwfgGT
zzfeB5RjYe8uy2nUoymv7KaCXxTK6eXNbyktu0H+ipj+9xzyYn8czpctltO6
L1Vjv3TB+q4S1n7Du64d/qn9fzltGPX4xIxaT9Xzt5j8PB523ucN4i935HRv
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
FU/1tjljh29C/GEoTxfK/j5+PAv4NIynDJutyScaMD/DeSq6IFu5PgXxMWue
Xl4fWWE5Te3/89TR5FnF3YFYb27DU8rArQ1t/yK/PJInbR+Nzxd7Yz2WLU/7
Vz5LfHkJ8TQ7ntZcjfY7ZITzUUfx1GKN44PSjbDH9ux7n++3JTfIw2iefnLJ
VrPaw98fw1Pgk8rpgi/Ws43l6dSO5OL19XifeKqo23P9y1bM/zjWf8UWzzaF
mI/xPC1y35aUug3+zgTW3udnvK/vhn5MZO2zfzBxrHp/AQeeZpXYpLV+Af92
Ek9GHbfM1rCHfXXk6WP5oLR3pai3ceLJwMUufNYZ8PnJTH63Xeyu3RL4M4Xp
+0n9m1uTMP5TedKbeP7jwulo7zTW30zzvUZ5aK8zT3c+dX49wRr5JxemL//i
87TV+8tN56nNrIk6Pv/hegZPcSXbLVy8wCdn8jT6xv2xYxdAn12ZPAYs6jcj
Fv7NLJ4SvPObTtShHmU2T6UPrcLmukOf5/A07JLThKrx4M9zGX4cWarYyqGe
wY3p2z/PzmujId/zWP/ajHyzcjzkZT5PByeM/RRtD//Enad7Pq0/n/CCvv3H
U1blimD/5eB/HjytjvMc9iYZ+aAFPEVd6PR1+irwh4U8WZue5zb2Rv7Dk6e5
3R9LZz1FPMCLp10xud+HB8B+e/PU40VHx+256I8PTwM8K5q5zcN+dr48GZuH
NR82HPEIP57uz46PWRQIfVnEk0fS/Oh1T9T5Mp4c1idVepRgvbU/w/uBo3WS
LsAeLeHp2M5plj2MIB9Leer3jq+N10C8bRlPj6wiHTMWIT6znKetwfNbT7WG
P7eCp+KOd77sigI/DGDz2e9MRelmfG8lT0czu3yautNE9b9VPCU7e5S9G4p6
nNU85U9t3q+hCvXWa5i9iS0InrEf5x0H8nR62dkZc4dA3tfydKvcbF/bd5iv
IJ5C/c8eKxiF+VjH5vek3g3t5tiPaD1Po15v1/0zAPmaDczerB7r8PIc+MVG
nl6M2DPMahT48iaediz3u7df9FW1N5gnWfmDt6NagL9t5km4VPxz4s1Zqv9t
4Ukyr6Qscg7wLYTN916rgINRaP9Wnlq12l6etgn1/9t4yoyfqTSwRn3Wdp5S
zTnTbyOAXzt42nCs5dWKvpjfUJ7WLx48ufwW+NxOhu++IziPYuBlGE89DfVb
D+OAN+E8vTKxS8/NRjwsgs3HTcV44989VfcjmTyZrCspcLJQ9SeKJ7sxXXJa
miJeGM3mP9PB3GQg8CaGzffNI3m/DsI/3MXTTJ/9U+aHYr5jedrrEdbQEAp7
tpunvjIX6b9U6EMcT32cy+JDBB/V9R72vXFW019nxqi+t5fp69vC9SnXES/f
x/Bss/vp8beQD4/n6Uor7wItf/hPCUzf48vbW0VAHxLZ/H1dre8yE/uP7ufJ
Z/rZAbO91OeVsPbssK9d2g7xl4NMX++b+s+Ow3qYQ2w8b6078HgYxvMwT66n
fZ0fe2L8kniyFMMTm/SwHvIIG8/RI25WNwC/knmad/Z+mZ8+8CWF4fePvvft
HcDXUnky7Z/Y6BWKerk0niLPfrUxagt7nM7sw50U35BPmL+jTF+qwp7UTEU8
/xhPf+rumYRXgX8dZ/J1zsL0TxnquU4we9WsfmTJOuDZSZ6aas7EHnDF/zOY
vEp1du+aoPb/eYoWxoy9koP9GE6z9sb32X+8PfyjTGZvx9mmJ4eCr0l4Mgkw
9JxyF/xXylOZ4ZseD5MwHjKemg2a8rplFfBMzvTPr916txaIpyl44vVMDK7p
IR+mZPZuwZq2Oh1Rj83x1Hh747P5AtrH8zSodtMV488YH4G1Jz3drNNL2BeR
4bls+Qu734jnZ/E0bkzEsuoGrBc4w5NSsK0MWQf7kc3Tj6jEXw98wQdzeHIX
NvbvEo35OMvTzabPysE3gc/nWPuDhqUcMIU/m8v45durb98UjFfdP89TxF6j
HEd/8ME81v8ZZTv7GwJfLvC0W9i/pLumqer5fCZPlQFKx8nAh4vs/9viOkod
wJ8K2Pu2J6u/XYc/cImngW5h+p6rYQ8uM35mU9PW5hvw4QpPv8/Oeu0yDuf5
FDL5WJ1993QcxucqT2/mDhk6/CL4dRGzn2f8Qyv/Q33gNZ4s9g6bmTgWfKSY
pzrRbs4zb8QPrvMUayJrXKKF85tLeFo1vesZfW3sp1HK08W8jZtmz4e9ucH4
bUzc+fhETdX7N1l/bUtaPh2J+PMtnuJd50UZWwMPbzP7139m+pLL4Kd3GH80
/lramIr5vsvm7+SC8n2B0Md7PDnKldU1X9G++0yeZfEDLjQgf/OA2Y8qnfzZ
4chPPWT4mWqaVP0Q7Svj6fKQcy9dl8AePWL99Usa0+0n1vc/5unrr2LjhBMY
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
K1IW7kY+6QbzL5t7xTefqdovjvHRq4+f3+y9seH3OczfV0yYUXoJ/SK3mH88
07PC0R58JJfh3d84k6RBqv1kmX2MDC7Rr0P8foejR3VR/nbR4A93mX+O7DTu
6BLY6z2OXiW93PAtAPmz+xxF1PzzfecBf/+Ao8bdV95vX3ix4fohs49GVXHG
/shnP+JI/Ur7nsf00N+Vx/xjmfHAaZ2wX+Vj5l//LBmebY31Mk/YeFILTGZo
Yz6fcuT0sl/QvVv4nmeMLwR4x0WeRn7xOcPPiXXnzCdjPC8Y/3jg7nTSE/Xk
fBaPdW+3cMB3xGsFjI/00b5sMgzxTiHzNxPVYh0vYHxFHL3ctat5jZYq/ufo
7Y+3R8u8IY9i9vxWR0yirZH/L+HoyqWcr2bPgEevODpgcfikqzPWJ79m/K7c
oNwtD/ytlKM1rZfqm7WDvb7hyGh2szSvEzivs4zp779nPe4eg/96y+zryuSI
SZtgv+UMz+60773LEHj4jvFl4Xnfxj3A59+zeEDrmuVBf+QfK5g/Xrmq9f67
0J8PHFVZvOi29Tjy1R85mqb35ZllDPxxJdP3nws7lByC/D5x5OHi83GeD+q1
nzlKP9/YzbcQ9YIqjl730H/tnQM++YWNf93yvLQXsP+vLF5qappSp4V8xDfG
B5b/qvI+A77wnY1vt8mbc97wlz+YfdYZ2OVYQF7VHHnNnHt4+U/M10+Oxvjb
Djit2l/8F9OPUQfcT85EfbKGfW+Hg75GppBnLfMPn8Kab0jB/gK/mf5ll9hq
Z6M++Yfhy4bO30MvAN//Mn3KTXNfXQ1+UcfRCL2KaUFH0X9Xz9H97zZ3V7QE
3v1jzxt/c7Jfsl3D9zbiqc+xQfv+mUFfGvOUntquz7YS4J8aT4fEokoT56iG
/6vz1GpDk32zI4E3TXjqmF+ka1mI8WvwFOOX2KZnIfanbspTYZfqkbUpyE80
46nR9oiBsZXgC815+tD83WD9masarlvwZGX29JjjWORrNHmKmF33mj+A8bTk
SXPg1ZDk9uhXasXTu3CHv9J2xMNaPH1qqp9WloB4RpunJc+vfh/3BfWl1jx9
rDJIdG8BPvIfTwbOWj2NVPrThqeDl/p7l2wG/23LU8Wc0xPv2gKf2vE05+5A
+xhr8NP2PDUZ0jyBdqPe3YEn29tnFj6xjmu47sjTpkJfj/5dwec78fTE5uPX
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
U0+P/rzLBPCHDDbeEEtX9bXgY5kMP18OmWx7DvXPLJ5cB91KO6UBPMlm8tr2
3f/FN9SvrvPk0fvwYN2uwMMbPJXL4ysiN0E+N9n3fJ7Ux+UOzqvIYfbc/l+F
moD+n1vMPq2HlFQ6IJ7L5emno47gfEvV/8/sZ2B77+UPEC/cYfz7SmVGuAHW
+93l6fq3uNbfluF993jqNiD8bbIT8hf3edIPLvr4ZDzs7QFPGWL5HOcvwN+H
TN8+Pm7zwQbz84jxbYdv6bqr0K+Sx5Nz/Ppep083bXjeY57uX7bQ8xqOePIJ
k29w7ATbMOj/UzbfHa6+71SC8T1jeB/r/Wv9d+SDnvM0d3fs4YRQ9KO+YP78
fLN/3wNxvkY+Tz2O6lBQKfpdCph+3J+bXheLeLCQp806gbtzSnAeWxFPUavK
/f+/P+MlT13tdv1rVIb94Yt5+uLOpFiF8y1KeLrSLrOj12GsJ3jFk41n4sN4
CXz7NYunnlv7VLwEPy5l/ig948IIP8Srbxj+9/6n+24U9KuMp91FPbjZVuCr
b5l+7BAdj/5GvrqcxUPjpx+q3yE2vO8dT6tLuS2b/6o1fM97hueWc87MeoL1
SBU8zTa8Oan9a9V++jxNXLj7iqIFPP7I0wHOQi2+CnymkqfQ/0wMPr2f1vD7
T4y/7E0YsCtFdd4Os3fpwp/SwbDvKma/vUZUvzoDvP7C5Ls6Pt5iNvDoK8On
cPXjlpsg72881U5LLHrhC372nadnjT9/26eG9Xo/ePrnmt7m5lnwr2o2XqPS
9xra8Gc/eWo9ZcNQ3RSM5xdPcbq3ZttcRL24hqfRlzIPj7MDPtXydGbfpAUx
iw80vO83i88H35vSpiv09Q+LV/as2jDPH/74L4sP/oYX9XgGf1PHU4GJl1GJ
an+Cep4Sby2a33QW6iv/eNrQzC4oxRP8rZFA31pEDPfThf00Fuj5zrlhbz3X
NNxXE8jBI1mrdBr0RV2gc/2/z6kYB/7URKCP3faP/lUGvqMhUGbC18Nf3mG+
mgq0yWTKuETV+rRmAvnm7h0X9gx43VygDsJ/Pyf9RD6mBfu99iqlMB7y1hSo
eZLHrJPLwAdaCnR/4vl/JWnIt7YSaNKBwYb7hyNfpyXQHe0TySY7wWe1BSrN
/20Xp4b5aC3QQ4/Xm791AZ79J9AnW7fDCUegH20EWmK1rc+W9+CrbQUaJ4cV
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
M3q2fBv0ubVI+p3LjDYmIR75T6Sa/bsem8Ug39ZGpHVN96c+8YY82opkHTxn
4lw72H87kdybN5MO3Ue9q71IRVsXaA0qRL6wg0iNPrUMu6iBfF5HkYynjPZa
vhJ8spNIZNHHJ8YMeKgj0t7iplW/vFT7/4m0x33OlcLuqCd3Eckj9m3KVtV+
Droi7S9tonlDtX66q0hm69YcXeoPftlNJBc9x/13/TEfeiINq1hmcOIR7Ftf
pE3D9eO81HE+a3d2HWpifmAU1nf0YM+3iJrU+gnww4CNV6d7koE98LenSI9M
+32q9QD+9hLpi96ss6M1MD+92f/ljf9258OfGorU9pil0fp+iHf7MP26Z7rt
Sppq/3+RfM52yKvdin6fvmw+mt5OKcsEfhuLdOrNE36Hqt5iIlLttBpBtzn0
u59IeslfvvSdg3xGf5HOuVbfG6oLfDYVydMjXS+uFudFm4nUdODQsdO64P8D
RKp7v2iu/3PgwUCR0te3+PY4AfIfJNLBymQd3VGovwwW6V7brLLX6qifmLPv
12h58scy4L2FSLdMI2pbVCFeGyJS6+qf0wb2A18YKlL1UIcTjSaBzw8Tif+w
r5mxvLjh+4eL5D1S7WfQQ6zXGMHm20sMuzkI/GKkSNpVLlGXq7C+z1KkEdl/
9w3ogvXko0S6uGD+3ZYFqvhfJL82aqN2PkJ9fYxI34oHmx4UkX8kkbb8shc3
/ES8ZCVS/z8j/RLskU8bK5LpdX5RbTD0aRwbX7seEUPbY73meJGcFgVkR82G
/k0QyX77+dcvZMh3okhfV+Uu3/8J6x8nseebXzx9KQ3x6mSRwqOLzTfoIJ89
RSSN9VKsTj7w0lqksv9Ox4ZrYP3zVJGONbu1qtYH+DtNpG6Deq3t0xv1IxuR
pn1wi+tZjfrJdCa/9RFL27Vs2jAeW5H6LhriODgQ+Vo7kXZWzkoYFIHx24u0
y2EWGUeg/jFDpIU+Bi0i5KCG9zmIFGQ+Qc7vB32ZKZJD0PGZLySsP5nF9G/W
e8fN8/G+2QyfxHWNbqjOm5vD9CvxbnGeI+pnjiIdCvzgzMUgvp0rUvJjs7pK
LcRjTiJt/Lee294NfM6ZzWffI73fhyFensee/37SzNgs5MNcRPqQ/cHsQCX2
O3Jl+G5nNHirC/R5vkjzIyqi9/6CvS5g7zO6se1mJuJ9N5HavYx6XHpQdR62
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
AZ67MPs36rRk9mHcd2XyPdfXq1EZ+O98iT7+K7I03KuK/yXyCGvVd8Eb5Dvc
mP075E8r9MD8LJRo2/TSnQ9uQ7/cJcrK0xDnxmK8Hkw/qtyrNe/ieZ4SRVfa
rDRbie/3ksgwJq9pt5WoT3hLNHD7yPV7PzZteL4Ps393h/pn+chXLJLoft/p
Tb2GRTU8b7FEr3W/jDtehfV2vgwfkqVuf3jwXT+JjEfXxE6sgL4tkWh1Qm23
dRHIjy5l+KZ/d+s31fmfy5g+XpusY9EW8ak/e19yl8JYY/DT5Uz/UlsMfLpt
Z8P9AOZ/LFafNVadr7dCosXDP0z1VPHrlRJVyuunHD+HeHIVm79p5p8/XQZf
CmT+7MLui1tPqDU8fzX73tV5HYsj4A/XMHw4eGxYrBr6kday+XxeVr7JDvmG
dRJ1cr9l9ucS8lvr2fwe6FHa0x3+KkiipDldVyW5IL7fINGpa1F/LXNU/f/M
ny3Y8mIyh3zHJmZ/H4MTbuXCv26WaHPhu56Jqn7CLRK9u581dfIMXG+V6KTl
jO4aWci/BUu0aXu567xT8F/bJGrfsmXRgmHIB21n/iKgxZLoNZj/EIZH6zpe
Th6uWv/P/t+j0CK7B+w7jPGDB6MK9EzBV3Yw/33/er+6VdCPcInGLnWYExCJ
fqWdErW7Xts57g3OR49g/nXU5x3HQ1DfiWT2zS16nO4FvNglkdvagxp+ntCX
3RKlVYf/p+8FPhMlUUHNtyovK/iXPcweo5Out02BPe5l+vPKa2r7j8CvfRKt
r1HL6q6HfPp+Jo+bBg47N6K/IJrhn8+a3YFuyOcdYPqVE6Nztxz+OkaiayXG
CdJhrNc6yPRZa1HZSVPUw2LZtfn29RUBGH8ck8/oIV8+ngP+x0uUu3Hg+xOz
8PxDEkX6B/nft4a9Hmb4Yt2r/dPFwOcjEmkev5JnReCvRyXK/23X1DkF+YUE
Nt8/kz6unNep4foY0x+LGOlTE+DzcWZ/G0LNI1X9lokSzdKfOn9/BvjyCYm2
ewf3q6kCvz8pkeli42Xd1yN+PyVRRu97i8fwExt+n8T0aUcPh3wNyDtZoti7
0/uV6KN+dprZx6Aq9ZXJqv5/iT4suHnBohD856xEJRcyXy5OhHzPSVRxxGVT
oiHyESkSpdx2Klq7HvznPJvPRqMcDC6hvzFVomSfvreTWqj6/yWSqtPWnTdF
/eCiRMq1HrOrVsHe09j/NX4/6jwH15ckWrSxuXuWCr85pt+uw288y4E+8RK5
0/jHNl6ojwsMP3tO8ix+ivyyKNGOHUnzuqrOQ5XYeC/rlFSrzmuXJep1bmPi
1YP4XoXp+x/j0PpJwNfLEnXvsy6qdxj4/BWJ1FIH9ru5AvnUqxL9dXDWuDIU
+J8ukev+0otW1pD/Neb/E4UOB3up1v9LVNxj+76cKPCDTImOb6z3dzHG/SyJ
yrTq2gSsu9RwP5vh0Tij+lEuqvq/RE7rZL0oT5z3dkOix9qzf/evR7/iTeYP
T94aGXYP+8HnMH290eNN7n3U428x/zDx9qTcPOSjcpl/MFY2h0xAfHebje91
xRJ+CeR5h+FjarMPaw9AHnclGubTwqydgH7fe4z/PZrlveIS+hHuS/RncMsN
i6/ieQ8kmht70mWWK+zxoUTH3OY+b+4Jf/+I8YE5n75oJKH/Ok+ilqlhjYXF
4EeP2fc+dgm65oF82ROJ0j/c9NDtgHjpKeNzhecr5pxFfP9MopDg528zHIGn
zxkf0DX7dacS9vuC+WOLbuMdx6B/Pp/5j5qpLsJ15AsKmP0bNj20ZwT8S6FE
zTy/Tml1HPIsYv7qRNvMwaawj5eM33NlA3e0A/4Ws3guwG5S7VXYZ4lEhVva
Wo2wB399xeK5Sq1pHVXrN14ze5ig+dcoV7X/P/veppM1jKcCb99ItO74kGGX
QpA/KJNoWav5t/vGoZ/mLbNnWd824jrmq5zhUcfn+VtV9fF3Ek3dHHFz6Vvo
x3vGb3o069tcgTwrGF5EBl0weob68AeJrhSozUneBH/6kcnPrlszj46I9yol
Cij06JZ+Ff1CnyQyD16qs3Is4rPPDL+3+LtNbYvvqWL6WXzSw6gK9vKF8SnD
8sy2I4c2PO8r06/qHXOHD8X4v0l0I+jk5S92kO93xg8zbhVU1iJ+/MHivcdT
a2Qb9BdXs+dtHxrkuwj+/SeLD653i+xfi/V6vyT6auHXe94Z1ItrJDr7OPqC
1keMp5bF2+GD5u1rC3n+luj7bmeNBar8zh+JGgfP+fR+EPjLXxa/FDxc+NsG
z6uTaHLAq4RmC1Gvr2f4tfrpvJNB0O9/Et2NVU8Zuh143kimpzsLm2QmQl8b
y+R+s99px7vgd2oyZVCLob+GgU+ryxRzrYXllNY4/66JTPoWgT/8B4HvacgU
9XD1IwMH8O2mMk13/JDD16j2/5fpmkbwues78D3NZbrifL289TzUM1rI9EZ9
5oMfqv0sNWU6bDbsw4LeyKe3lCks89DttzaYn1YyLW0+Uq2Vql9VSybb37mZ
q32An9oy7asc6K9tBv7RWqa+etp1X5oh3/ofG9/HwH3nPbD+pI1MYkfNyQOS
Ef+1lUk9ylgaq47vbSfTaS6j1DsQ/SftZQq49Hf/E15V/5ep+ujxPVYR6Pfq
KNOn9Yv/uzzBp+F+J5lK+9tkmCxDfVxHpqJbe1/rmoIfd5aJ236kIGVPfMP9
LjIN0vGw6pCPeF1XppzljY6HuQMPuso0xrjXqIAZ8IfdZNr8Mq/RwnZ4vp5M
7Wdt1VvaZXjD9+jLZHO4ydqTMvC+u0wt0qbtXn8c9tlDpq1OTz7k9jZpuDaQ
6a9SMmK7Kfb76ynTCsPB/XPe4PyhXmy83bfutJuKeKy3TNqtnt5/ck8V/8s0
b8Owp6XTkK/uw95nOsQ+fBP4tpFMFuXNv2TFqDVc95Wp/6H66knTUR83lum/
/f9arVXlF0xk+jLi6657n+H/+smUGZPew11bdf6fTCk9l3mpD0U8YCpTuxOX
fNwvg7+ZydTTcUzHLTdgjwOYvptMmzp7DurdA2Uy7j413bcIfGgQe55Brc+1
/ZD/YKa/m3cWjDsMvmgu041p7bytOkIfLNj8yYuyhg3H/nlDZLJrvPmq8E11
/p9MgW/OPupbg/Ovh8lUUa+hXUjQ3+Ey6X3e7xpxHvYyQqZecd2KPVcAT0Yy
/ZiqM2GEOuq/ljIpL6zsPrsjPh8lk2bGLcPwfZiP0TId9/5XEaKa7zFMPpqr
f/UsRD8ayfSw8OORjVnAHyuZtmTMCfwzC/HkWJnFg64XdE/g/+OYPU7/dHpr
CvYzGs/078fZ+dvHID8yQSZXw7Or/kZivetEmY59dlKPvAT/MUmmmYu5gHwv
8IHJMu359jTxkQ7y+1OYfrVuPWbnC/B5ayYvynAdr9pfYapMv7b8qH+QC747
TaZxI5vuTnqq6v+XKaHUs9KmL+x/Oruf/Ui990LwYVuZXNSterbNBl7ZMXvp
cLpDpwDk6+1l2jj2R+acn8ivzGB4M59b47wM/MJBplWhBS6PB6JeMlMm6aLD
poVfsD5/lkz2a86b75gMvj5bpudVyaVcLPBnjkz843rrRVawD0c2v21/HYmv
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
BbJ8hSML55yTtHdfIz7nxML5k2UPNPvuFP8/iQW5+EfRX3QoPzEZ19ffoLBs
dqCIp7Bg77YvpVKX6p/OLDw+dS1fZ1SS+PtUFrrefxl3bSrJ5zQWyn6Puj7f
n/jWdBaSzY85/KdF8uGC75P9xMmsP8n/DBYqXE2jAtTIXs5kwXN6/x6PdtL6
u7Jwet+MHfmJtD/HjYV1r2sXRA2Tnf+H9u7KFL8UjvTRA/U9ac53/XvUf+rJ
woYFX45HfaJ6jRcLC1UPa3R5I4v/cf0f39ySuJnmfxa+/+rAe4VzKB8+m4Xo
YotXoZ/Pic+fw8L7OUePqV+i589lYUJMhPTqVLJv8xA3yt+d40X+2YeFZ+Ne
HNR9S/mX+SxMHzim7vkHqlf7svBoc2trnCLF836Ic2KiJz8he7OABZPFNVsH
y86nXMjCX8sjJj9ny/b/szDmyC6tz1+7idcvRntmM1Vu4BnK9y5hYdXdpPO9
X5C++KP8Xen6UN6O/PNSFqaZ+V9oXEL/X8ZCVoxwQXET6fdyFvgHv0bYJ9N4
A3C+f/XM0ZaXF++3ggU28tLjxgt03tNKlK+rK34mm5M+r0J9+vBkksUT2o+5
mgVjw337sj/R9/wCWdh5cmLE32uUn1nDQhffgyefd9ki4rUsXD6j8/VyENmf
dSy8GxPid+UqvX8QC/l1l1TzagkHs+C491j8rl603utR/+0+bPSvI/uwgYWn
q3ZbN9+g7ylsZEGv3v/wj5/UTxaC+uxYqLMzkupdoSzAffhWVpcg4jBcf9WQ
pH6u1P+6CefHeOT2hUeovrj5f+u10d8pkPK3W1jY+HTlG9cIyldtZaF1UrLz
zjEUP27D+42xvTEimfIx4Sw4Dc6a0/iA7EUEyuOWJv0HN+j6SBYk5y26Os4n
+ZWw0L2hvchf9r3X7Sxcm/C5fvBs4j87WKgvvrXDYgD9fycLsUkGCt9k8fcu
FtSCet5QPUT1zd0sLAnUyfCrle3/Z+G6Sm6L+lfis9HID1SKB+fvoXxpDPqj
lKfp5+MoP7CHhV3m8l+1R9H3R/eycCfcxdvMlvjjPhb8R1XK9yil+YpF/6Y3
ZkfeN4qP96P8Tux+r+k7+YsDLHjINZ248pK+73cQ7evkBS8yvlH97BDqr/aZ
2y6WjuL941jgAli/S9ZR4vXxLFiq7jWdP5Pye4dZOGGdtCornuLvI+gP8rIy
tPpRfe4oC795/eRHGwgfY2H2KefKjBuXRXychdpV0atcv9D5CQksmFfp6Kht
oXjzBPrTBvZt2xCqJ55E/auwvdVRRPn7RJzPk6c8zTdT/fYUzl/9Zq1xqWR/
T7OwQuVcy60bO8T7nUH9cLHTC/tJ9Z4kFma+K3zEPyB9SMb1HGw5Rq6N8Fm8
fm6KUKpC/XYp6B/N7sGdkVSPO8dCmNQjzdCB9nOksnBzlGWLmjfxyfPoX7Tm
WI1+R/HPBRb8Mt0Urw2j/NJFtE8KZu+6nCZ5uIT2J+5A7xVqJM+XWfg5/HBz
7E+yH2nIN7q7rEito37fK3j95/iiHWbEL9NZGPphskdoDcXbGehPtq7MehU6
XXzfqyy4jFfidxWR/ctk4dhI3dF8G/nbLBbCuxX5TThL9ukaC1tvGb3w2Ggs
4uuoz0eer313h/Kv2Sxk/3xkEOpD/Rk3kK9ElqqkLaB81U0Wkl4cmRtsnibi
HBZqCg8ejBhP5y3nsqCjNyetfADJ7y0WmvNrNe3fU/yRx8JR76X1yboUr+ej
ffBqkUTZkv9lWEiT/NtgFUX1cBbl+bz1C8lhej6HfFx97B7fKJJ/noW+40J3
P/x1XMQCPu8X/5+pQOstZUHZj8lKXUL+9zYLk1WThj/aS+vzHwtn+seMyjtE
8eYd9O8XTvTJSKT6211cj4h+3ux2stf3kB87Xzf3XkT26D4LTKveYmXZeZoF
KO/LTirtBIovHiB/WVtiliPLBz1Ef3Jljt2Og8SHH6E83BvcPuor+efHLJz6
mDdqs+z8skLUjxgF653yZH+eoD2P+14Q+YD6WZ4if3yQf2VmPfGBZ/g+F4bM
O5yfIOLnLHg97nh6ci3ZsxcoL4bq7ZGjqP5QhP4+t3XI+OuUL36J/HDCh2NT
j5I/Lkb+2tyQUPldFv+z0LvxTOQiY+KHJSyY+ZhocLrTxPl5jXzfZbT3+Uo6
D7WUBfdpTalRI2l/3hv0f0mzNcddIP/2FvlzUMgKqR/FS+9Qv26fv1b8k/hb
Gernoi6Gkwwo31WO9v9NuPuGCOI775GPf+p+cuofqr9VsDCuj0vfFDWKtz/g
er2WDCySfX/rIwvSw9+ta9zpfIdKjKdqpz7ev5zs2ScW1s6KWWxzkvjiZxYM
ult3uEymeLuKhdU1tRHOiyif/4WFbT46p0zXkz/6iny0+73vxVqUP6tmYd6W
9LS/8+j9vyE/+2/YFrWxpI/f0V8vi9Df6EL5uRoWGnP3VlRH03hqka/OFdrm
K1J8+YMFO8+N9pX7KF/5k4UW55spbsXUb/iLhdSvN9SHhdB8/mbhSbeR+36E
0/3q0J9vPncw66CV+P96FnZ72ETY3iF/3YD+f2fk64hgkr9GFr4W91j8NZP2
9zVhvHTx8toOc6oPNCNfLZlR4OFK9rIF5yNpU83f0VRvamXBod/VqZOXkn1v
w/iur++B0yZkT9vRX5Zujl5yjPh4Bwujlz3UOnSZ4qs/OJ/9hzX0OEj+4C8L
tpeWvrxylPjwP5T3Nfv7pPSbI+JO1OeOi+mh4RTPyHGgMrvOoj9P/KALB16X
tNhpO8i+ynMw573irC6XST8VODhe/11h4mjiB4ocZAeNZLNCaX27cmBr/CBd
e8UW8X26cTBeu6DnaNn3G5Q4sDh6snFcOuVzunNgf+dRdP1PfRErc7C00UVz
IZD+9eCgM+DnRqt4Wq+e+L7vvbK65tD3nFTwffP5OcG/6Hs5vTiI333Z9OkN
ytf35qBJfoLV4v/If6hyMGKN/KeTE6nercZB3+XFP4clE3/tw8GKgOtDcoqp
vtGXg/fya/oEvaZ8qToHC439TZ5Gkv704+CQ6ua+abLzaftzcKnni1NxS+g8
Kw0OohQ9u5hVkr5qcrDJUM/+yWqafy0Ogr9V+Uo2yfb/c7C8Y2XpptHkr3U4
mDK9TEVrN/Wn6XKQ6VX0tD2c8rt6HOz+3rqi5DTZ4wEcDIWLe38pUv5+IAd2
s62mSqRkn/U5+Nwv65R2KtnfQTgenZYn7xdxIh7MQc20064lTZRvH8LBp9Jh
2VNs6XsGBhz007w0OUid+KkhB8x5d7OZBvR+RhwU6GbVfRokq/9zMHXADtsu
T+j+JhxYx1QUG8VMF6835WBkfp3fiwNk3804KNX8MPnFAZIXcw6M374OSygk
/2PBwc3Y1HjVKbS+Qzl483V3tzdFxOeGcbC+m25DsKO8eD9LDgJWZrfdMyd/
b8XBJNuHk5JUiX8Nx+tNLm35+YH4nTUHVWrKAYHMKfF5IzgYM9/4RZEl5c9G
ojyHaqxKs6Z6yygO7m3/78raeDq/fDTOR2DRX7V1VE+04WCGa7RffC+yZ2M4
+DN2uJdnIun7WA50Rp/I/FNK+m6L8mA72mf+g1vi7+Nw/apfpu/YSPzbjoO1
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
tEX/I0G8NsS/60c18o+aUtiX+Wap3mzxPBIJ4rWeZ0/u8SF915KCp13s3Kpv
Yr1GgtilvEv0Hdn3qrWl0DH83VwnSzE+lyAuTjloMOEaxTs6Uiiti8jLLBf1
WYJ4Z/YejbFLDorX60pBx6Nz2JulYrwtQZzqkJ3c4yblZ/SksLCtW4jKfjEf
IEF8sTRm+shD1O80QArj34Zla52LFp+P2H5CrpPiXOJXA6XAlqjOrrUQ6++S
/+GqEwO3/ab51Ud9nnht+nFdkU9IEFv6DQr2HUv6O0gKGeONqi8HivIqQXxq
RlZ3eEj+cTCON9lp6pVVov+VINYMPxuue5T0d4gUNAITH/j3FM+XkyD2U17L
Lawm/mAgBX2/DNt3RaK9lSD+4N3dLuM48V1DKVQ9lRPevRLzkxLEp46c/2Yc
RflEI5zPvbnzBurQ/CJe3rrO6dUrig+MUd5amq+vaRDPy5Ig/qF8k1V6Tfkr
E9SPbiuU3ei8IQniF1//Jnh1Un7JFPXl71lT6yoxfyJBHJ7n9mewL9lnMymk
Va88qhQm2l8J4k/LMg6H1VL/ijnq08YZMxXdRX2WIL4s12zSbwTlTy2ksPrs
9DxHI1FfJYh3Tf89brXs++1DpVD3zuaWybyj4u+Ie+XUnzvmSvtLhknhwvLj
f58cF/27BPG+xc4VGWaUf7dE+brXKk37K8YDEsTrjspdOjaF9MNKCrNfLvq3
0120ZxLEVyLGGEU/ou8RDJdC3uY444F6ZN8RH5eWtRYOIH5qLYWpiRdmt64h
/UWssf+6Gy/73sMIKQyq2FUVc1qMJyWIlSN0poyPIP45UgotL9odDK3EeFeC
uPcahYXz9Kg/dZQU7heqvQo3FccrQayau85gsgHxmdFSaD13rqVpAPkHxOej
ltyCr7Q/xAbtbX/Y/2i/WI+TILbwHNzNeyPxtzE4/oqJIfe+M+LzERts3b75
ynTZ9zdwPtN1d0wYOEq8P2I2tvTvhE/UP2iL/jHNU+3BRVo/xM2M6p/mMIrf
x0kh82PEL++ZYn1agrjitubywh/EJ+1Qn1nf2Ws2iuOVIP6lfyfE8RjFf+Ol
8LTsceTmJLGeJkE8curB/Uf6UP5ughQ23oz3TDkl9pNIEPuP/60yrZDiXXsp
fH6U0vSoVswPSxC/M+hfM7ma7JuDFLi9wQccHMX8kgSx4DIld+VGsj8ghf1O
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
NNQH8W3iuvzeUmZfIZ9MeeY277OSWy9xfzZHHDt80UvrbMzfaSTfb/krDZ4q
5hs54uBpuhnnH8M+MiP98HGckvU+5A+JT0Vqxd36ivnBSP7klrEaOcgP4oGK
pdeU3FG/as6zuRs1l1W4IP9N3DBomZXhXsRPLWg8jzRudX+D/ATx0yyvgxMT
8f0teVb748aExGzkp4l7v95v4GiD+I4V6fd9y68uDUB8h3jx8N0F87tB/1mT
vFSOmdhxGfKdOGXjouDC86jXt+GZ9WbHdx2zxHoIjvhZjX+xnT30w3SeeS8x
efxuIeq3iEfnHlweOh79tmxJnlTd+d79CPxz4ha9xYMMzyI/NINnqrcNc5Rr
MX+IM6ZobOj3CvFvO5KPpwZxxb/FekSO2GuhT9K3JdA/9vT83NqqIe7IfxPL
qpa0rjBB/ZEDra+N7RkyJWK/NY545sSYSN1gxDdm0vuZb4geZ4T8PfGzg4HR
WYPh/znyTCiLchG2ov6SWL3ngIHmPxCfcyL9dSqlT29r+J/E8r6TdJzqET9y
Jv157PuM5nbIH+KL6yP/JqRgfrjwzEJGJ0zvhlivxBHfv7lBmMnQ33AWz8b4
ekT+9w/XE99oW3jvGuItUq4034y+at18C/1CrFr1VLnnb+gnN9J3Zv/2bHFC
fpxYR9bujlk4vu9snsXfiXca3AX6lbhv/d6MND/kV+bQ91PX8piriPEhDg8b
WL8hEPN/Ltkbhxc+bfuC+BVx+W+TvuESxGfdeTZrt6neqj2wL4mrJK7XR6rD
/57HMzut8xacRIzncMQaSkl+JmUu4vN58KzXrqatEl/RX+WIDbLjdmy/APtq
Pq2/6ikTn0fqifOLuFonVXqgEfqnL+BZ3KkuI4Nvwf4kDu2nGhL/C/a5J8mL
LYebj58U6+E5Yl0TW69eang+L55NcdpVuW0V4m/E0/rPePfvPOyvhWSvx7sN
OnNXnK8c8SXzrOUqfVB/5s0zFmjR9OvTBPF34orhXpxOF9Fel1pE9rHigZqp
dcj/EJ/ss+ej5C7sTx+yh5JMuvI/4B8Q5508uaNtEfZX+JL+t799crgZ4qvE
e7rM290tFv7nYp6t23+z+6Bo+KfEVd6ZC+SX4/cltN6MV2ce1Rb3G3LE/Sef
1rR/iPijH8mjjj4BDe+hP4g3J/ZRfNmCfohLSf7LR6TF3hXjARzx2bHmvs5z
EV9fRvJohZq8+i/UXxDHPD0vXzwD+Sl/mp9PnIZ7tcM+JH5uFO7wuQLyfTnP
Hkybfl2DR/yJWD0t6JrvVaz/FTx7uNtK168B+vH/vFH3X0kw5m8Az341zPmd
oCn2J+aIpxodXpiWZC8+30qyp52qcmrOoD6JOG7wxnXHbqA+bhWNf3/ZW8pX
4X8SV91UPbnqDOKHgWSvjagb7TAD/g+x8GHo29uR0B9BPCu4Etp1jxfsW+ID
XudWtvPoJ7iaZxeyiks5B/xOHOjB3zm3Saynkgrmmcr9gFGOsog/EF/Xc3S/
V4j86xqeSavuye+/HPEB4oJJfYxLM6D/1tL8kB8/5Wgi7BNis9bExGqG/H0I
zSf5vOXGnsgvEa++8Se2/1F8n3X0/reTXw32F/sNcsS1426sY6uwXyuUZyU5
g/6+eI76JOL6I1Nbqv2wvzWM5OvgLQHnFiN/QLxufNvIOdmd5/HQfHUJcLiv
gPwXsfL+lDE9lsH/DSd/tsN4gGehON854kmzp4a59IN9EkHyujWtWSEQ9XHE
ZbaLbp/PRv1OJNnbzinHu7aK+0k54i+cs/eUbegfHMWzrtUHFmQKqI8j1sgf
nX9xE+JL0TyzTJt5YU4y5gex9T5+zaRd6JcRw7MN1xJGbFkv7sfhiFleVrvc
WdS3cTxb714es0pX9Oc44kuJb0YEDUR+cAN9n7AJS33HiPFSjjgkbGGW7hv4
vxt5tlRD6cqSKPgvxBrjL03Y1QfrYxP5i7W/Ptj8RH6M2OiPXciU9bCvN/Ps
8bW6XG9rzE/i1ttHzqjloX4rlmeHZQbE6WiL/dA54psaqw6HdJ7fsoXsn7w1
1Zu7dub/yZ56cGrZktPQz3FkX5+/MKyuF/IzxLy9a1zjasTPt9J6jq6oWOIs
1pNyxE9UsgfOKEV+PJ78iWcvF6wswvgQ27lsTDoyH/3Et5F+f3UsJeE6/Fvi
++PCwt7sQH3odpq/abo9ZrwT85kcsebkx6amt6AfE3jW9Gx6dUm66O9xxOM/
h8Wt3o78wQ6e/XDLuSPXC/KJ+Ny/wKa6YYhf7uTZsl8fB0xcLOp7jjhb0WDQ
+n+d+X/S314/T0e/xv2Jw7ov+9pXHfVViTzTllGo8wyHfU5ctTo43a4J47Ob
9HVXyzvBPcT+cNzu/8eHri9S/o7vn0TrYXN20kU95JeJAyuOdrXgYb/toetH
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
          
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Derived\"", TraditionalForm],
      PlotRange->{{0., 10000.}, {-6.554746509791586, 6.427991438458159}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.002777777777777778], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
989iiV/hgu0JYy8y/Gj/ji5omx0l66D0mNYXj5d5zc8LLqb1XZD0tP7fQTtZ
yX7LXDDjt8lmM115or8LuLleqV8+Su3bboz4Na+j+lgnrb8bUVE1r5wvDZF8
j90oPxYoKz+kke5/Nz4WfWGJjtN9M3bj387AJXfkiB45uzHp7rJRY6aS/inb
jQHPtue8nFdG9N+Njb25tTamLcT/rlB2fjMi6NUn4n9XJHzPdrK+QfgG4v6o
OX7hUybS/btigkuS9ZUowncMVzg9v8o94Uf2LccV+6z0RraV3ST+c8Xk7nnG
uEH81eAKdvVNnS9rpPbfDbnFatEVDaR/NdygK5rlvHsv6Ru44fr0m6azftF9
ObrBtMfE6IziQMl+GG7o2G6p7vfjLZ3fDRom2rOszKhd5oaV7wPeTa+7QOd3
Q6rJ0ryf+0keZNzB3OpwY9V8wlca7uieGPJ14T6pPXOH5THXvbd/DKPzu2PF
PqNFPx0VJPtluOPqs3F/R465SOu7I3b35QtLVlSQ/Luj3/H6jt3niV4N7jh3
cMlP0Qqp/fSAQZB/QVvAA6K/B4xXKVmlDb1D5/fA3JR9q1s+9ZH8e2B03LEd
BQel+t0D/ofcE/6ZE3/keOCOqkBHN7SA1vfA59jTZ9u2kz1r8IAOe7CeTK4U
b++Bmr/35xJPwpsae1DXeWUZ7wDJE/ZAEB0+95CI7LnjHqQOd4685C3V73vw
X31qxq0LRN+cPcibPTu3+NIbuv89+DrDb01/KtG7YQ/MtRe9j3QtofX3QpGR
/bK0leynxl6UJM/U7PlE/hD2IlJ7617XG920/l4Mk4tnyY8jf4KxF6uNk8+W
jiR9m7MXi9piRIPmNtP598L6hKzPaiH1N+yF35aI1+0KhAdkPMHLOvLeO/Mh
0d8TI0YNb43gE3/DE8vin2bfHUL61tETp3keb212VJD8eeJMiMGWqkmdtL4n
9uepaEZ20/2VeaJmytifCwadpvN7Iif/5dYR7SRvMl5YPUJ19K1PdD4NL/x8
Psr2uPMMCb3ghQ2Hn77bneguuQ9HL9wd91z/5HGp/vXC+K+vim7pEP1yvLDE
9r+JdU79tL4XphgP8pMJJXo1eOGQwsB1+z+qSOaX8cbtoz/KzIfHSdoa3jCt
VfWJUSf+hDfGa3l1H35B9tPRGwOOTc7esPEare8t9t90llRpEB7O8caYZ5Pj
h0jvs8wbV+WmpWteHifZf4M3nLYuXdnv8obOvw8mD7QmfDcje6ixDzm3H5b1
bpPSfx8q8k8cD/Amf9VxHxz1blbXDZD6C/tQnOGVvG4M2eucfRBsu1i/7g3h
qbJ9YLN6F01tI7zUsA/vLjO99rlK/UEfJDup+Q69RHhU2Qf2W3vGL1YlvKTh
g+Yzc2/zHoyU9Ov7wCz755Mf3lK844ORnWGqNc9oPQsfFBiVRX0fTed19MHi
H5V9OgWDJON9fHC6vuh94Qzy3xk+8J5fenTKSbJXLB8MnH/i7CEdLp3HB0GP
FFwdftyVfF/ogzy9wzfst9P5y3zg+GK/p28A4cVKH2xSOzwhMpr8nwYfOPEV
fWcdeyTp7/LBva4dJovGGUv6ZXwRdEdvwfYX1K/sizevd1ozOKSvNHwRcqHg
SHQbyZO+L9a4zMxr1Sd/F75INJixa0Up8beFL+SUlKr9i6T84gv16yZ15ZZE
Tx/xfLbX34y9pCppM3zxq2hu8aQV5C+xfFG09RRT+yTh/Rxf7LYMreHZ9tH5
ffF+xuwJlkt/En/5ouK/hMWPXCg+UOmLIZ+/t5st/E309sUutnuS6DbZ1y5f
VHkOGnKpvJT4zw9L7p4+fSCyns7vhxfd2xQPbCd8pOGHsEV6c6duNJDsV98P
FzfWfml+MFbSFnvPruzj3U/eSenvh7cBf/a3CglPOPrhwTvBSLdg6fn9YG/p
1DP0GsWDGH5I+9v2vW/HO8n3LD9c9uRMyimW6jM/RGfsum5mTvGlQj/8vWW0
ospJiof9UBc0cydDfo6kv9IPR763zJztEEX6xg8eVW0nRR50311++MHQyiyX
eUr874/5c+d0/7Ei/Kjsj21Xl6qIEsn/1PBHzEZOp1c1yau+P3Smz+98oNtO
+sEfOy+GecqfIX/fwh/F83JTnD9PldDD0R/ljZeXmHNk6fz+6NQx5FclvqDz
++NL7Zfd9/IIj7D84dLZ+m/3cOKvHH+oKan+/dBA9r/QHzKaCQFhQVJ8548t
FSovTB/rE/398feD8aG2/UTPBn+ocplBj/LriP7+MHn9c6TPHfKXZALAMG2t
M9N8T+cPQFtC6XiH5svE/wGYnvLk3fw1hE/1A9B83zhYazrhcQTAPqc/YtlL
4keLAHR1ueo/KSJ74BiAf1Gd6d0fyd/yCYDVn94LS8/ReowAxEce+9tzgr5n
BWDtYlnXfypS+gfglsH0GZFdFN8pDMCqDit+Ue5t4v8ADP9wLDx2DuGZSnF7
UcdD+ehWOn8ATFebuS8J+Sz5visApw/cWM21oPlkAnHdOcNV4QjZU+VA9E/M
HdvdRPZRIxCpm61nNC6n8fqB8GzmT16qSvoYgQjdrJS2d8B94v9AJNeNbSn4
QvzsKP4+Q134Y+QECX18AvFyjbm6TS7JByMQ8m4Xxswqov2zAhGi3zo8+tww
yf5yArH1WUPctFFEj8JAlOWsfqdkSfHVskBsLvcbqeRM9qMyEJe2/L02YDHh
m4ZAVGslTtygQvG+LvH5RtxQv5ugR+cPwpAlTmO3faui8wdBp/KV3dwdFO/U
CMKlvMyuFdY0Xj8Ixr6X+I2txL8IQty8hgXTMmg/FkGwqXr75fayK3T+IGza
NH+SfjrhI58gfBZ0fLK/R/LMCIL73X0l9VI8zApCalXxVjeZu8T/QXil9C7y
3STyXwqDoPWYsznIX1bSLgvCCyZDvieP/JnKIBx/Pqz5ZyDh1YYg1CwJvRmY
SvfbFQRO8OzU+weV6PzBOLLVLjIxX0nyvXKwGF/d9dp8kPSdRjAG9a1tD24k
f0A/GEzhQHOMofMgGAMG/nqsYknyahGMUr/F3Fnxd4j/g7F2csTRlCLCJz7B
+J367XLQFbKfjGC0b105e9gMit+ygnH9qduC017kX+UEo67B+Wa17FmifzCO
Leu9031FGk8LhuxkzRjuKMJTlcG4cW3h+sAXZC8aguHYv3fZuY7Bkv12BaN2
uLPWMwdp/CMEW3lJB/p6qa0cgg/mynBZQPpGIwTskDGLdUeSPOmHIOq4zhvL
xFiiv3h8ZsveyjqK11uE4OcbZqSdEcWnHEPwu2/JPzAp3uYTgnnNvioZq6T+
ewjsxi1b6m5O/iUrBIOf3O0YcZX0V04Ius8Ocdk7gvyjwhD8Un7+VPk56aOy
ELSX2peW8Si+WRmCQQ8FXCefWOL/EHROnxUSN4ryDV0huFIQMXnQatLfMqH4
Hv3AJVVA9lo5FMpqNmcOq5B90QjFvBLBTVfPY3T+UES4me12niKNl4VCQcE+
ufwS7cciFDMD1OOHXyX/1TEUnsOTY9vX6EraPqG4Gd5YPnUd6RNGKOIKB4pq
mn8Q/4di4z6lstkxpK9zQvHr5FruzxK6v8JQXNtQUTCt+R6dXzxf7pulNUtN
JPupDMWc+/075/yZJWk3hOLGu9xL7tvu0/lDMY2zuM/mAsmXTBhmyjp8PVf9
l+Q/DM+bTAfbqpC/qBGGDwVJN8Lvk3+iH4ZddtcjPi0k/Yww6Hhs2pHoSvS0
CIOmlcWIHdsJnzuGwe2I5i7lQ3Q+nzB8b9EaXzWW5IMRBlu5KyNkhlK8gRUG
vb5Z93RsCE/lhGHLs+pxgRWE3wvDsHJTLmN6DuHHsjDkRXoddvCk+6wMg4a6
zYI5M8dJ7rshDAcD3xXYXyB93hWGsgTB4e5Ssj8y4TD5Od1nvyrhO+Vw9LE4
mhGnSN9ohENt8sDC/+QIr+iH44CfgtWrjO9k/8LR+fi2os0vuh+LcMT6Tkgr
lSd/wDEcWk9FQ5b2kT/lE46Cb/eXch9L8wXh+HgxakjCNYrns8LxQ8fmXukB
ivfkhGPboAWV6eVykv0UhiMuTbE80+g6nT8cA0pCs/YZEj6pDMeFwp+XV54d
RfQPh498178lKnQfXeK2glLYZXtaXyYCnG6luEOjx0j6lSMwUbldP2pZB8l/
BIrSrzsNtyf/Xj8CI1TnBqbOIX8YEWi+u/Va0XqazyICvtfiY1ank750jEBX
W3bo8y1kn3wi4KTn0jvjkoZkPUYELnwIqNiaRuuxIrDg2ewTQ54QvsmJgO6L
gVnDg+h+CyOgf1W1pfEC4aWyCPDaF2/9M5/iDZURMNe0+nlfSPasIQIN6ntj
B9eRv9AVgciiAXlL1WUl88tEQs+oaPL9zRTPVI5Ea83fKLPvQ4n+kWiU+fl7
xjqKt+hHYqN77vnXHyi+hUisVRv9cmLmNEnbIhI5p7+XjGH8ofNHwv9z6K6V
N6T6PxJnPt88/vO0NF8TiS/VJxp8+GeI/yMxcLHz+JB1hC9yIvFGgVt2g0n8
WRgJq5DmFd6/KP5RFomT0813cgpVJetXRqLjc0bVk2eknxrE7WNuIcsOkX7v
ikRTrmebownlG2SixP7jVPlr+8hfVY7CDNPPRdxwyn9oROG508qIoTNIH+pH
YU23+zPfk0RPRGHATIUcpjW1LaIwMMRvZ+xAKf2jMGTV48FzuoiffaLww2jY
B6bTJTp/FM7cHP8hpYzyQawonDdR9rH8vZ/kPwoNeRMvMmvJfy2Mws0TL2N6
hkr92yj8m/x8wZFFxD+VUZh2+N2zDRtoPw1R2F++LP5iLd1HVxSsmWudqzUJ
n8lEI1BHqF4nS/tTjkazqM3rOwgfa0RDNJ4z6NJesi/60biuZFr1wl+q/6Ix
hm/l8s+EQ/wfDfPW7NpzOWQPHaOxiNk8LdB6OJ0/Gio+Qd6b06X50mhEvEDR
o+xpdP5oFHGbGyMNc+n80ZhU1xtyd+RB4v9odAkOTNpaR/dbFo0bDHb4/ClS
/y8a2nPW/zfbgPBNQzTe1Sx98l818UtXNLbu8f7v+lVp/paBRZxvG+8E6ki+
V2QAL6wVd36meIIyAw4no4xnzaf4rRoDKjtNmFeUSR9pMHA9UDB9oBLFb3QZ
MPG4tePtSbJf+gysP+8QYRRF8UxDBva+bwpstKLxYCApeuzZVl2yF+YMbHyb
Mnac5hPiJwb21c6KPHlyh2R9WwYeVFiJlgaT/XJkYPAg12PX+8i/dGdgya/1
zRfu0334MJDld2Jq1y6SnxAGIv/esjXnk3/MYEBv0IjlX+xIfyUxcNgp8q/B
vaVEDwZiWrw6jdIIHwrF3/+nc8TfdqmkncNAQM3se/mWFC/NF3//8P4JwREp
vzLgPkR3ZE0f2a8SBvJLr0xS7VCXjC9jYPGd+l9z1ej7CgZ2ZWxZlbySvq9k
wHNs3YePywkf1TIw2/rFnkh3kpcGBqplXt1e5Ux4tIUBGfb3inOZCyTzdzGg
us7531d9okcfA7/uKYbm59F9yMSAceb3tKdGxB+KMTB53jvsMIvwn3IMdvef
/8aMJP9YLQZHzQQvd+U9JPmIQdY5v7Z5MnTfujHw9o7+faOV5FE/BnYPhRNG
rSZ/wjAGvT6Rlm77KB+LGPTHrwvIsCN5MI/B9T1frqscofUtYhCxZAPL+AXF
c2xj8Pj76AkGD6X+ZQxWRV//6LKP8Jt7DJra2qzc+ggP+8Sg3lXphrU34bOQ
GHi0Pjc3vEj4mRGDSV6nBqtol0vaSTHoeG/fpmVLeIsVg6f8psXO98k/FMbg
/KSVSH2iQPSPgUH3vMdjb5I/lx+DbF+P192+hJcLYzDCzum027zbknZJDP5M
HMm5nCDNp8bA9FtWXIo/5VMrYnDnW2NuuDn5B5UxUEhMUZ2md0nSXyumz7QV
4571kP5riIEo1mBEcg3pp5YYPBsh3z9KGn/uisHzje6hMgHkn/XFwNnfNHmR
ySTJfcrE4lb0+MsLR1F+WzEWctnuhr1npf5wLKpPD3FUH0b6Xy0Wyxynb+w4
TfF2jVi0NeYV7JtL8qobi+MbLZrdAsnf0o/F4VsJgZMfUPzPMBZ+DMXjlsk8
on8s2MsW2zg3U3zGPBZBNcOH6b+g/IVFLJbuv942bzLxh20sGs8139wWfJLk
PxZMTePSqcUson8sbqc7vVtVQPkEn1jcaVVwiFeg/YXEYu+aL5cNygjvMmIx
6MAmn4O7yB4nxcJux/TcdzqU72PFIgAqOtnVhN+EseDWpMm8/pdP+jkWbxIn
Xb+iRPgzPxYd2aOFu4eR/1kovo93BSpJEyhfUiLuv3pDt+YZ+Tdl4vMN8PFW
ZdL4iljUrz4fM6mW+LsyFk+WzL+/hU36sjYWTuaxcrLriR4NsXjkWS83sYv8
8ZZY3P/10e51E9VDdcVCMGXXvb1nB0v20xeLy9Ve+5dOpPyYTByUDwxOGuAs
1f9xUHnzTb79lpvke+U4VPvuLYw4S/hLLQ5p2Sc27nImfa0Rh3Ch7nGt5LNE
/zjEBcZNXhd1j+Q/Dn0Xj+a/tSf/wDAOqsGdF1/ZU3wZcTjTdGPN9Tl0HvM4
NE3zbbvbTf6rRRyGb7mUd8iU7LNtHCbVPOLMWiO1r3EI3KR7ZUI76U/3OAzk
mkXZeipIvveJw5jVX/srSkZJ2iFx2HY/wia3Xpq/jsOpbcy1C70oP5QUh0MV
Oiv/e03yxIrD4NvqV9sTCW8K42CwxmXAjkayZzlxEBYrvGvNp3hGfhzYgWv3
JF6k+y2MQ86F9/Zht6hdEgdDY71zKsMp/l4Wh++TGnVCrEk/V8Sh+UP+3OcH
CJ9VxqHiS6PHgI+k/2rjoLRNlHleheSzIQ6jBGaPNkWRP9MSh8/H68ZXVNB6
XXFYZf7Y5PB5wpN9cfhkc6p97FniNxkmnjOXXnGoJH9BkYlZ3hfmLF9M8VFl
Jg5P6D6g+mKqpF+NifadD3yV3pH/pcGE9mLzHTr/pPafib0zu76c/0vxZX0m
zq8eLyMaQfFnQybOJsRMd+6V5peY+Hx6SNLsrfS9OROqew8/CFpK/o0FE+sa
yv2V5YjetkyIqtb3jHlL8XlHJkZ/XF3/Ro/wrzsTTeFuBd6jyb74MBG//+5r
mUXEHyFMrL7mHhNvP0LyPYOJY1cyjzeJiJ+TmPCoPPc0voP0EYsJ090fmYld
ZF+ETJS/SFFUOE7jc8T3YbTe7ZIBxdvymbg/aL6xnRHpq0ImLtxytddJofho
CRNvsrcMrM9VkIwvYyKEX6PMnzVasl4FE3V/p29Zc365pF3JxPiIA+3VrqRP
aplIDMq0s7AjeWpgwvrV2CchmwiPtjDxQX22iqc+xdO6mFhrHOCltZ30TR8T
9+YKFsfdI/skE48dx/e9WxBA/oxiPNJWp18/KyL/Vjkepx+evMGvJ32kFg92
Gzflkow0XxePp80/828wiV9143Gs0mj2liKqF9GPxwCZhaPOf5Pq/3i8Ob/+
k0Y+4UnE45LF3KpzVpT/MI/H2SuGKSI9itdYxGPUfus/aReIP2zjYS6bl6da
SPLqGI/pnCn/Rof/R/o/HpmfizN0ppC+9IlHwOD2TqOdhOdD4sGcNe3t6nVb
JP2MeJy7Gmv29inZh6R4zNWYGrAqn/LNrHjwcp642YTNk3wvjMfJioyqVzXE
vznxeHZp8asn6zZK+vPjkXB1w4nUeU+I/vF43rH3e9lnyg+UiPc/NzB0tJlU
/uOhy38fd0mJ9lcRj0Omg/qHBBNeqoxHlJMiZ+JTqkeqjYfs5uGjY3kDJP0N
4v0EVa3aVELnb4lH00xTjdY5hCe64vG60OnocguyD33xWPmhfnncZWn+PwGT
m1bsar+lJdm/YgKG5qaYuO2l8ysnINnS9Z1+RiXp/wQMeGIwbYsxxWc0EnC0
ZvCZwxWEN3QT8JUzK4ShSvTUT0BMZqNm0kKKnxkmIOqYU8ujq9J6wwRcS3v9
pLiA4jPmCSgfc3Nqs7Se1yIBY4f21qeoUj2FbQIsfuYGrWmkfJ1jArTrDE/f
bQiSzOeegClJrkEyRoR/fRLE9u3F8z8cwj8hCVAP9nDIVpXmj8XnvauUcq5p
uuT7JHG/ak/GXEean5UAD671K9E1sk/CBNxUdT32OID0WU4Czo4pCnjVa070
T8AE74n83QxpvCoBy/xtHsxPofqKkgRMH2x1xpZFeLosAR2D5T5aDfpL9E/A
xPpF2Y9ekPxVJkAhVqNMdyzRu1Z8nsM8k6wzZJ8aEnBAZe2iusPEXy3i7/3v
vdS6T/n5rgTkJW10d6ijeEZfAuoeL7m6MUxaX50IA82htjk7Ce8qJuI5b4BS
eTPpA+VEjCm4Ebrdn+L5aokw6u/2Oq0u9Y8TUXTjjlWPCtln3UQs+bRpyzA+
4Sv9RBTcYVSwihUk/YaJaK0acPWZOvEXEqHZkiX7S4vqBcwTsXhv0abCdro/
i0SY5J1Z8slVTTLeNhFPbqf5/RdN9+eYiIjti+q4N6iewj0Rt1q4bhO+Ez/5
JGLzSp+2Slep/yfev9X7l/EzyR4wEqHcLRe19TrZ86REnC0YviXrjTQek4hL
AYbT/uRTvkmYCHW2jfcTC8qf5CRCUFhbeTeY8Hp+Itq3TMq0leZbChNx++Td
f72uVI9Xkogel+PTfrSS/1mWiKPV8o+Orab8TkUiVv/RGnHnPuHXykR0s31H
9Jyk+65NhHyfgqpdN52vIRGeIrbv+e1kD1oSMVhryria06SfuxIx74koSL6E
1utLxPbIsdpDVkrrn5MQceXHfc2ox0T/JOR0xI8dv0caD0/CE4WEP+rBxF9q
STDbNGFh1HDiP40kXLl0TrBvHdFbNwmllqkTP0dK42VJaLlx13PsX7p/wyRc
MLiecVCZ6Isk3NQamfVVm+yXeRLs3XnaP3WI/yzE/YWaw01b/yP9n4T9f/e/
0yycILlPxyTMXmjhPUeb4pPuSXA7KAiYZ0D+o08Szm4ZrFG/luYPScK4RXre
31Ok9eJJGFxcs05Pjs6blIS00fzG0GuEr1hJMK3xFV37QfFZYRIU7wdPNu+m
+umcJEyDPkdxOOnf/CTUjwkIHjmR8FRhEnbsixm/Xp/4uyQJNw40bGa4Sut5
k8BfZ/M4WpfkoSIJ3b2K5g2NFH+pTMKxqqAO00VUf1Er/v5l18JFZUVEf/H+
2NnBwz5QvqUlCQMecIunc6jdlQTZTFfdtd+IXn1JeCNqYWhsl74XSMYJ20KZ
6acJLykmY8S3TOaVVqn/n4zIcE+rWYeJX9SScXz+PM+oWWSfNZIR8Cr3U9M3
8qd1k/HQ6ezjzV9IvvSTseJDv2rXUbJHhslQCQgPGuBA8UYkY0JD2guTBWR/
zZORrKsheveN5MkiGd1Lty9eVUb8a5uMfVmLinZL61Mck2E5M3wAO532456M
k86ecdOekb70SQbqKvYURxA+DEmG3Pm2HoX90vriZOit39mZHET1Zkni+e6d
cOt8WUj0T8ammqMWL0/T/QmTwTc2PaCUSv5UTjLqrNdodxoRPfOTwWSU7NDd
S/aiUNyO3PHt7J960v/J6O86NELlmrQePRkfdw7vHHJ2N9E/GalTws/fvE7+
RmUy8gv8Oa7DiR61yXCZ0GU9SY3wQ0MyNn+b9PWILvkHLclIeXy4mnOfzteV
jBJvh4fG06meoS8ZG0eYLMyZQfkpmRRYui93MFpI/pBiCpKPRSdkaVC+UDkF
V98HNln9IP9CLQUHXvk+KxhmSPo/BRf2zfe8I42v64q/P7Vjk/Ax1Ufpp6Dq
8RhX+UdkXwxTsGLAfvStHydZHyl4W8aMDHk+R9I2T0Hh+JRbOxNJH1qkIP7t
w1+z55O82aZAd79T56eflP9yTIHPgkkfO5rJX3FPwcAczZQxT0nf+KSg9A77
oux30ichKUiFb6tVkfR9gfh7o8TU3E+Ub0hKQYp9aMLDIMpvsFJw863CVEUz
8p+EKeAl2ww585nwbk4KZMrjPx8vI/7JT8GwqFEu9UNJ/xWmINyCJ/euk+IL
JSn4ME8mWuWxrGS9shTM1Nqd4K9C+f6KFKjKj9VbHkP+TWUKGKt6Hz2ZT/qh
NgU5ShlMre2UT2tIQeb91NC1Syge1JKCy79yd/3kkT3rSkF+0Or612+l8Z8U
9O2eV9nzg/plUjHI56lyVn8RyX8qYk8tTvnvOMXvlFNxcXPCKj0h4V+1VAhq
5/M7o0l/a6RCtzHIvyOF+E83FVcclDy8PQnf66diaPb3KYdv0XsZw1RYiVg8
h4PS+HkqvtY//KynSvxjnopxapOfjuQS3rdIRUtjfU/FO+I/21TUjf8klxtE
53FMhcFglTVz5ck+uadidjqnesIZspc+qWC8vvx9Q4EC0T8VDaWHdSfOpfcE
jFTMOD/9HcuH5CEpFa4F16acyCX6slLRwXQccE9lrqRfKD4ftycnp4P0WU4q
njtMmXGwdbrkfPmpWGgZnvLdlN6HFaZiwsVQtUFRVJ9Tkoq7aaVjHoQRPctS
UXTkeyO66f4qxPf52+DUU9Pzkvkrxfu5Ny/0YocU/4vnS/HN+c6jepOGVFQP
mf3VI6OU6J+KwY83lY2/JLX/qbil/Fo1ZwfxU18qCua0mh+bLH1flQazNem4
XEnxc8U06Ch1+1+/RPpFOQ0PHd4+Vgok+VVLw73ESSc7Guj+NdJgemXo+Tv1
mpLz6abB3eTlVoXZpM/103Ai4tCdF/akfw3TUD1X98YNb+JfpEHm2zbXu7cp
nmyehuGNT/suyBB+skjDtO6yCSsfqEn2Z5uGNRX7Duh0U9sxDSb57ztvTie8
7J6GqTP/JCWOovdhPmloMVeZ7VpP/npIGrLOBxgUBJK/wkjDo5rGqx3fKH+a
lIYFqaofX20mf56VhsTtDZmqGaS/hWlQKsgzu6pJ8p2ThgHX/+aPLiT8m5+G
l7L73v7bQfnNwjTcP7Go7H0Y3VdJGm6phU6fbEnx6bI0jJ189PyppxR/r0jD
qS9L/8s4TfajUnyfvJDmyvfS+F8acs7v8l6USfRtSMOQU5rXjSKIXi1pWPcj
bva2EMoXdaXh8NyEZUvaKP7Ql4ZfRRseB3dTvEEmHbePhQxXiA0m/Z+Ois8j
ZbWUaX7ldHS8sKot0ab8hlo6Mv4zk5n7H/GDRjpKG07dY92keLBuOlQ1n58s
O0T+hn46TjWctWnmj5e0DdPRWrZ5gA6X8ikQf/94Snp/gjT+l47pZTtdtesJ
31uko/vFZYVhthSvsk1HykB/3nie9D1KOuJ0tE+umUD85J6OpqDbysk/yL/x
Scf5vysHFPFoPyHpuPF+0rHcf5T/YqQj8MGzQeVdmyX9Sen4dfr4ydaZ0nqs
dCw8FhZ1oI/8KWE6Pq9Kq/JWJXySk45xOf3e1tfo/WB+OqZ+vXPphTvVHxem
Y3XXYGvtNCn902ETdVHGKlhav5iOx5WHr7ECpP5/Oh6VlgzfKK33rkzH/Gy5
Z+Ok9U+16XhprLdt00ppfjcd56b+i7xeRe+rWtJx1+0Vw8OB6g+60qEUNHXD
ihrCk33pSBi+ibHZWvp+KwPDdLSN+2x5RP8MePbvn5fkTPkK5Qx8j9oe/9aQ
7KlaBn7cNlJa3kz6UiMD84593nJFg+RVNwOXGRfqil2k9bIZUBlgxB8+K4fs
fwaenpv39wtL+r4hA0kPJ6XvzSH7bZ6BB2MMztxcKK2ny8D87zemjveeKtm/
rXj+aqM1UeWkvxwzkFvx9WTRDKpXcc/Ac+2C4Z/XSestMrD0Ukv4JCPyD0Iy
8FnJ86FnPskzIwOuhR3vS2XJHiVloNVnWjbTitqsDOg8a3gx8SvxtzADx4ZH
aidFkvzkZGCd860ZDWWkz/Mz8OlIfNhuFtG7MANGKtmmDVGnCP9l4LjdNs17
Cwkfl4nP4/ltpaUv6ceKDLy4ez7nrgvFzyszIPKQf3qplPy92gy4tFutKtGe
SfTPQLy8/ZkLVXOJ/hkYeTf22ucfpL+6MqBrfMyvfBP5N30ZKG87c2SUkvT9
byb2/FAa8vgHxZsUM1Hg7HIwZQjF65QzMeKpqQunnPIXapnYkRmmzciT1kdm
4jGn79XZezReNxOpRxyNdsuT/6GfifqgqNzn2ykeZJiJV4PulPtbEn8iE6Nf
RTRzB9D+zTMxYMHKrdvfkb2yyMT4qRWeowwofmKbiajumtMfsqX530w4P5pp
t3eXNP+XiYGhHyaVWdH8PpmImedib/GK+CUkE7O4G/pfL5a+p81E0vTTdX9H
Ubw0KRMmscuzTV5RPysTh/6O7+36TfpamIk1e2Z8TK+leqqcTBiFFE0610ry
m5+JG/u3Nr7+j/y9wkxMMLS08zGm+sSSTAx5u/7c136p/5+JL6Wjnhqcou8r
MpGcdv6CcIA0/yu+z3cXFMOGUT1DbSbOjBtV6zFKWt8rHj8/0GGpkOSlJRPT
mKc6nbqpvysT8W8aVt4sJ37oy8Qu8yvD7LUpXyzDQqFx47bDfd6SthwLlpst
R7/PIv9KkYUfoSmGRtNHSPqHsfCp/sKKYYtIfymz0Mto6W9dSfEZFRayVhd1
X7lBeFeNhbdXCs8vWk36TJ2FqMTU5xGq5H9rsPD3+kW/H8epXlqLhRU5msfW
fyB7qMtC2c9TUz5tIP2kx8I4/sPhczYtl4zXZ8F4JbNc+ZCdZLwBCw72vVZv
3xK/GLLwNFXljZsJtY1ZcOlZmrFpnjT/xIL3wSONJ6OoPsaMhcGOqqueXCB+
MhfPh9eTfu8mfLSehds2a7fVPZDmp1iw3nhp9MYEkidr8f2EGtgNDKXxtixM
XVystLqJ8K09C3V//q6b5asg2a+jeLyDgoutDdHfhYXOnbx/mzXJPrmzkGGq
XHM2gvSFJwujp2nc7PlC9UY+LPgnlpQ/UFwiaQewsHzmqV9rl5H9C2EhPvS4
TKcG5UsjxPdXFCOocpfW37IwZ/Kr+fZJNyT9TBYYv9YH7h5O9i9JTP/vzx6U
qZM+S2NBu+KWwuoRdH4WC46Vn/z0B5E88MT89KfHbcJQWl/IQvaP+hirzWQP
s1k45bJQOFRRWt/Owq9tVxNG/KH581g4wd7E7XxO9Wj54vtzC766Rofu4wwL
Xc5ycr5fyH8uZEHvlPwSvyrCR8UsfPj9ZkW4Hdn7Eha2sePWZSdQPKCUhUOb
xiv7HiZ+LGOhbdvFeeVBhN9vsxDxonF8Q0QO4TEWHnq+e2s8g+ztI/H+Yqfc
f6Iljc+xMPDX5FW/W0keqll4s7j8im2kVF7F9AlkHu1aQt+/ZiGnraIv5CzF
2xpYULp6fpHdHeKHJhYCMma8efKZ7FkLC1aK6ovev6d8XjsL5kdaP2w5Tvi6
i4UaW+34ClW6z16xPJjEXw7dTPa3jwUV3ve4oHU0fz8LRz7bO9q1SH9/g43A
8PoNgn7Cw3JsFCbWs9tTpPEgNmwvMNkn5Y9J2sPYeDytRXFsPfGzMhsdU05V
GR2k+kgVNp4ciylxMCb+UWPj6arR2afSib7qbEz+y4vYo0H+tgYbyYuPrex6
Tv6rFhsXKlYGyieOk+xXl43uQde46sF0f3ri9dt1l2gVSd9jsLHtkp35NSXC
gwZsCCIqH+etIDxkyMbP/LuP3hkRHjBm4/fAi+tiVpD9Ahtn54RXj5lF9DVj
IzXilZ//P3r/Zc5Gu3ny9Fn9hB/Ws9EwKYU7TYnwsAUbre/NwzOaKB9qLf7e
5JoBO4vif7bi+/X1dli8nfCNPRs1ld/GWWVTPMKRjQFq4cUOirR/FzYMdvwd
ZfyV9uvORtrfMb8vhlD9mCcbveEpHXtGUfzChw3Dw8aDh6qSvxrAxmaRqqL8
T9LHIWxMjVQ50sim+F0EGzlLVacfnEz0YbBRnVyVbudP/hSTjeO7f+w/9Lmf
8BAbpQfsOlp/kv1LE99PQunOskDKv7HY+DrcaPCKN5S/5rHh/unskMTFhI+F
bAxdlPSJI0P4PZsNudpHK2cHSutb2XAdPvkHpPXseWwonG3QcD5E8d58Mb0X
+fe1jSZ+O8PGtIXKw2ZXSOth2WiZbvogzZj4p5gNu+k3hjw0oXxKCRvjWZM0
dkjjy6Vieu9/a1/+mX6fpIwNHHgRbj+V8qG32XCWPeZTuYDeB1awcSRxUfPR
J5Q/e8TGfeM6z8FjyJ5WshHblPUf8yr5M9Vs5Hf3rH1QR/a+lo1R3KqD57ZQ
fOI1GzrbLzsH36f9N7Ch+f2258UQ4r8mNpYYXNlk+4/sSQsb+pfme76tIHvS
zsbH/o2uHtL64S421DJHvR3PNJKs38tGiMlnvzsRtF6feD7DsiVHP5J897Nx
8OnezRN9pPX/HAy/bDT6ehnpLzkO/tzf8PycPNWvKnJwv7PV2dSZ9MswDnZ3
vA467UznV+bgiU6CDvMWxQtVOLCuUtbVDCJ9rcbB/k1HY6/aEx5Q52BSw0Dd
Gx91Jd9rcDB9i/Uav0XE/1ocpAQefXBmIcWHdTm4xJqnqtRO/KzHwfuMXu0Z
/URPfQ6mjpxyKmwlxUsNOJjv3bNO/Sn5w4YcuDtqGs6rIvxqzEGtyLmwc6u0
fpuDiOax065lUL2kGQfJC96ZR40i/9Ocg5PDZ6wYZ0D6fD0HkcU7ZidYSev9
Odjro//H6pCtZH/WHKjJvNfQ+UTvzW05sLxixm5cQPrLngNGhlMxN5v42VF8
v9lrU3ceoHyiCwfv3iw7HfiF8g/uHCyV6/WYl1dC9p+Dhq9nZNSmUL7FhwPm
lDMx3fWElwI4WGfdemiiF+03hAP7+5/WPl1E+fsIDnapfOc1G1M+lcGBcvwu
xTs6VE/I5KA0/7P62bdUj5/EQQezc5jpUtK3aRz4OcRMGy99L88S03ffe4XZ
+XSfPPH4VLUO2RJ6PyjkgO19y75rAc2fzcGF2jHvv6dI34tzUPlP5aPsXeKP
PA7unb+wPXAM2a98Dm4m2FULO0mfnOHAOS5s+4pj0vg6B0Lln4ZLDpP8FXOw
4Pcaw6axFE8t4WB2zHYvVgvRv5SD9fcCBjYbS/PvHJz4l3a6oZvqxW9zIPLq
7BupQfut4OCO5fyV639QfvwRB9evrLixVJo/qeRgzlzZUztb6H1ONQeb/NPD
QkfQfdRy8G9SLvNnKOm/1xyY/3dJ/pg86b8GMT//yVt4roXkvYmDN14bvMxc
SP5aOHhUMKVSdwj57+0cWO24d3ncDsIPXRz89uINnjmI4ju9Ynrx2C/eD5b6
e2J+XnbkQokJ6Zd+Dm5/tkuJ8qL8hQwXTpZlXXO06L7lxG3VmKWD42Ul3yty
UfK0JKl7ILWHcbGjqt7ExUZaH8jF+deWrb5s0g8qXBwwLdb4Zkv2SY2L0led
eh7vyJ9S52JBQWdh0dpVkvU1uCibWx3q94LyZ1pcWIV+qx3OktaTidc333Og
XZP4TY+LcR12VQraVK+oz4Vbn0Pn6VqSLwMuYiysCnZcIn/IkIt+l+T+zdL6
SmMuBLlXjP1eEP+AC2XjYZc3B5J/byZuXx2U8caD8JY5F2oFCiaGV8hfW8+F
fYh77qEvRH8LLnRfj2IJlEj/WHOxckD9kceryX7achG8oCCsqpvwpr24rWCq
Ynma8LAjF411s6Yb2BF/u4jXuyuTOGeeVP65UMwUmWm2kb/iyUWKTYCcwR7y
r324sP7q+lTWjPzrAPH8djoPZuiR/xjChfqK+MxV9qSvI7hg7dCv+uBB8WwG
F3O94jvHnSX6MbnYae+iOdaU6J3ExeTWILMRbeRvpHHxI6d9e4Ea8TOLi4MD
EdM9mfAAT8wf8xdn2fvT+1shFx5j2zyHuBOeyeZCw2HB6eiDlM/K4SLadpKv
bNhyyXp5XDhrmhZeMiX+zefCxS7QbsBQmv8MF3prBl5N/SB9DyrmFxeWxrd8
2m8xFzrRew4+GkT3UcKFmeHZwWPNaXwpF6/e3tAuf03+SxkXt6JmjJ8+m/jz
Nhcme975VC2h+6gQ349dagn3AN3nIy62zBh3Jrqa+KWSC/2hba4vO6hdzUWQ
x6uV3ts0Jfup5aJazvPN3zmEb15z8S02pc5GjfBSAxdVtVNW6TsQvZvE/eH6
Np93kz5s4YLfltEWuJfkvZ0Lw3uGx3zb6D1pFxdva/8dGfGB5u/l4lO++Wk9
Br1v7+OCmS6XPHUy3Uc/F3e+hvvjF8WrZHhIrp86xGYU4SE5Hmz1Lj+IMyH7
ociDU9G4KcJwqi8YxgMr9/Ki2l0U/1bmYSuzJHCVEsVrVHhY+s/W1Z1/iuw/
D1dbnRUZ20kfqvOwK+lGkM4AqmfW4EHv9zZuQZzU/vOwuue+9dEt5E/q8nBn
+1EV1kLCy3o8RB4dr3PwKulPfR7OFq97IpdP/qYBDwNHWbit8aPfMzLkYXRd
59gMFtXPGfPQUbr0x3YNsg/goaUw+qXvSKr3NeNBy22PtpoZ2TtzHjYXjdrI
Vaf3Ret5mDtg/57K52S/LXho/nD31w8TBcn81jzIiax/PJH+/pEtD2vUZg2z
b6X6FHseyt8bBj+V/n6WIw/PhCOu7rElfeTCw4nz3wZ9WUD6wJ2HGQZr9S7y
Kf7gycNhjwlzrj8n++TDQ2qe+W+3KsoXBfDw6OfFnV4RFP8K4WGF2v35zJfk
P0TwcGArY8VuRfLHGDzcizNu2LWR6MfkIWhuzOEaFdI3STwMPfbVa4YTyUsa
Dz0r11W+ukTyy+JhXuiuha6DCH/weIDK98flzXQ/QjF9tOW/TnQk/szm4ceK
qbkz1cj/yuHhyXbtv1vrqN47j4dXWtzda+sovprPQ1PG0/174ygeeYaHlzf3
+h+QofqtQjH9XpYOHWZJ/Fgs7j/A2nNBmfJJJTyMUB+oNCZOWzJfKQ95P382
cbv8Je0yHvQh1zl8INV73hbzY9f1n6tNKJ9bwUNa8N3yRbIUP3jEw/MFOjmD
EudJ2pU8qLzQTD0+gn4/pFpM38fG112cyX+p5WFbqbz7scM032selhlo+M8N
I3+sQUwvlv5ol73kjzfxYPfE4dCkMLLHLTx8eafXpj6A4kPt4vW+XdUKeUn+
QxcPFzzeHigJITzfy8ORHrN1V2ZQfL2PBxunpiIvqb/cL+bvizvXuaqRvyTD
x+5FW7zs/2hJ9i/HR/Ij646RpeQ/KPLxUuvW7aNZ5P8M4yOg6uvFwx/p91mU
+bjrOqtt+VPKz6rwYTF/5CyfZZSvUOMj/1ad0eTJZL/V+YhpSh+8P474X4OP
RXn3Dvflkr7R4mPh+yxjXQbJsy4fk81j/uxeQP61Hh+398nO3XaI7IM+H+2F
s3SNm6hey4CPJ8xUM4stspL1Dfmo60i++fgc4R9jPqyWrZx9SZ/yOeDj7chs
g3BFwo9mfOTl/NrCjab8tzkfdjEv/SpvEf5az4dp9IjR3vrEfxZ8qNrOkLsW
T/Vh1nycMBDJqqpL89V89LHaXj66SvXM9nxYervPHR5N/o0jH+Wt+jM/qpO/
6sLHzakdXw4+ovi2Ox8qs+f/NFEkf8OTj0N5p/Qr20hf+PBh9MrnjuZ6ek8b
wMdVdwtB9XmKX4TwobFwgjvDj+xvBB8f6uouday6Kmkz+FC8OmvY+ZkuJP98
XA5vmfX8LeHPJD4uJvrtHw56r5fGR5dSbMM1E1qfJaZ3Rmpl6rvjJP983Boz
IaApgvCRkI+vuiu/y84hfZ3NR8OQ9aOMTck/zOFDW3HUzVNhdJ95fExxO5Y6
kLlHct/5fPznPcVpRq/U/vMxWKejp8+A5LWQjysDVxz+40Xxp2Lx/m6v/tBg
T/xawke6ckqQboe+5PtSPs6W9m6YIq0fLuNDxjBuQKsmyddtPuKa16lapJN/
VcGHz4ldyzLUiX8fic+rdG+3+hap/8/H0raDB+YLF0rmq+ZjpfXlUdzOAkl/
LR9pIzZl72givPaaj+gRrIagGOLvBj7OrSv4+1uO/OcmPs7E+Swde1zq//Px
ZWDd5KZz5I+281H8w3vqYjvKp3aJ5W/rnUlJ0vhDLx/DTxyafpNN9Ovjo5E7
0kO3kuxDPx9bjp/sX2BG8VUZAd65hvu4xpM/ICeAUeon9c2OhN8VBTDz+TZ9
vh+97xomQFBVkNoDJtWjKQtg1V00ty+J9JmKAKu/la+cGyrNFwmw6Ww5a8Aa
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
OwxpZ3MD/MhJStV73dau7Yr8pbOU1mV2W3o2Fv6CpHQk+s7v3fWQ52gp5aer
tY29AD41VkrPIrbs6b8I+a5xUjKln4cO/0E+2I19v4vRYg9Ovfn97lLqc+bw
pcR5kP9EKQ1aOGmIZ1/Erx5Suv3sx/5Yu4jm6ylSKl+Qc7d7KPi3p5Qsrnwf
UBcDf+Ulpecdc2KpDPHlDCm1MKjyGpWBfiRvKd1fe/Zq1kDUu32k9GPZJ8cN
Suw3NofJb5zTwzZ5B+D/pfQ7tn6q32LsJ79ASi8u6zYNs8b4F7HnNaXviffD
+5ZIaead86HZ7WGPy6TkfS/mpjIW5+P5Samr05OjOu74/gApWfvGbXXupjqv
SUpPHbb5tB6F+Q6SEpU/COujOq87REqpiRGjhxwDH18lpUf5sWefBqK/ZDWT
b3TQlJFJiPfWSKmQ3vWanIz65joplb6+VRasOi82gumXvb7JZj/w5Q1SKjg/
e+Y9X1X/v5Sujkm9bZtq2XwdJaWU360SdvaEf9sipTMl6jGv/wMeRf//fW5W
S54Db7ZLae1/3utvZoA/xEppUl3Hiieu0K+dDE/273WeuRn4ESclzcVhVjat
oM8JUrr2/njGa1V/c6KUlgeETn11tEfz9+xl+ll06ujh96gfJUnJ8JVpss0n
1GsOSElqpLfu6Dv4i4NS4lYuKs36C75+SEpLnJoiXfqiHpbKnlfiG+nbBf9P
l9Js9z27g21gr0ek5PJj9nbbOMxnppRWjymOHH5SdR69lPw9LmcdOQg+ny2l
KYlmDeIzyOsEw6OSs/xF7aXNv5dIqa7PuNNTOyH+kEnp8YMjfxtXIB5VSCnE
6vymRY3wj5yUTjvd3RPsA/4kMPntOmhaa4d+/DwpNfg+nr1jNfaTyJfS+z1P
Jqen3Yb/Z/q6cYJQvB7jOyMluxl1XzfeAb88K6VLX12fez2APZ+XUtQO66+5
ruALRVK6rP0u3cAV/SYXpbQxa4Y0zR/7JxVLyUQvUUhXnfd0RUpFvFmEcyPy
k1cZXpZsd3Yi1LeuM33V+vzt+g30k5Wy8WYsat2lCfpzS0rTBn/IdxqCfMQd
KTnnrH/CTcH9e1I6O250+ZOQVc33y5i+/uuzKuwz9Lmc2dPwBXzHHOD1I6ZP
L/a27GcIfK5g8vgVMcg3GfXUSindCw3b8bWXqv4vpY9trOo3LFX1/0mp1TDl
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
L9ZxqM9cUVK+r+YWXzXo61Ul+a2tm+nmCnleZ/h6Z2dodTTkX6qka/tv6k1R
gt/dUtKiLnMNjOWIT+4oaXZu4oSs/WbN33tPSRVdKy5Ofgp7LFPSex29ufvG
RzdflzP77xDc76rKPzxi+FYZmH7KG/pWweY344rMMR/53kolVUuaXPsVAQ+e
KWnGsoB933yQb3yhpKiIlv6jViMerVLS1pA/8R4bBzZfVyvJ1HRDt+Em8B9v
lDShY/hJs67Tmu+/U1LIwbKwN/2Qf/ygpFGGXp+Tj+F9n5Tkk9v+T2AovreG
2VP61MGJqv7dWoYP3fr5DGoDPPympPTcwyvNYoCXP5g/m1toVVWOemudkha+
rj5dcgb+8zfzryWbu3QoAh/5o6Rpt9NHjliJ721Q0n/b136qvAA+1si+v7es
/8pq1LfUOBq0NfZel0bk+1twpOY6qP7jEaxXUudouFuniP5fkK/U4Khp8lfH
rfMRD2tyVHr/wc2jqvNpWnL0cldK/Qor5Eu1OJJVxToNXwW+0IqjM5fu/O4Z
i/ltzdHt4HR3n0fgH204ulMSt7hpEvieNkfJpUNGCJOhX205umJhXLTkEeTR
jqPF0+O/GATifTocdZpUNzvlKOTZniNry6gVSwtQT9PlqPpxoLl2IearA/u+
uyMNfE/DX+txFPky/OmprahX6HPU8nfOseJuqN935Oiyg1r7HkuBZwYcrfj2
5ZmvDP6xE0fqKzp9nzgG+NyZo9Mf9H4tD13YfL8LR+L5mepjVyKf25U9b3X2
YeNg+E9DjnonjW5z6CziOyOOwuxpq8cj8JNuHKVNi/RfnYL6QneO7Pqk7Dg8
BfncHhz1/L3QdXAK+teNOVqjLuoPMAB/7MmRn84NnXVuqP/24uhX+Y5Lx1ag
/tCbI007J0ej3YhnTDiqi3QcoCNHfsqUI8ejx3IOJQ1sfr4ZR4e1LZ2nX4b9
9OFI2O+wMbgG9mjOxvuGT0pPQP7fgqP3n2OaUjQQz1py5NVu45fQsVg/2pej
pZbKE9btUG/vx9G8Hm7V3ieA//05uvXpXN6I8fCvVhz1uOeyRXQAfxnA3r/o
/PvKvsATa47Gu9kEq7/H/pcDmb5qzUsw+KvKv3CUp3/iQLJqPyQbjr6Gdup4
fSr4z2CO3Fv2cQm8jv16hnBkqHXghTcHf2nL0akOb+8s/Qh+PJSjSt9/867E
4jwuO45C5jzalak6T8yeo1bOS1Z3+YD3DWPyfEJbPoaC7zhw5GJvc1DNCvPn
yJGv47eb1yTA/+Hse1JuDy5PBT904qjYfN/2b6r6yAj2PVud/kwcpqr3cDRU
4hCTGwl/MJKjjZPmB8+aDv9JHIVbdn9u4wH9G8VRfJzzSd3+iDdHc7Tdbk3k
qY/I743haMz3cs/wa4ifx7L52evltaMdzjd14WhuXZNusaA6L5qj5fctXT+q
zjNy5ci+MWetmup8ODeOFnx/0qZ3Z+TrxjP7Wdhy6Hd/xJfuHG2rDIvIsMB+
kBPY9++U7J98Fvo8kdlXfvXHtemY/0kcxTodOrkhGv7Og6O7rb8HT3qDesBk
pv9f9Dq2vYV+wSlsfob31t65FfHjVI6CpvjnpmXjezw5qqoKnzXFDuuxpnG0
5W/On9MuqvwURzkdcg7P6o186HSODIIO6rlZ4Pkz2PsKAnPej0R8NpOj7sez
k3MO4743R6M757eJPY369yyOpu54o6nQBv74cDQrJLdnp9fA79kcPXlYs6+o
DPY6h6Ox5gNqfztCH+dyJGnd8cPlAcCzeRw9/pjUPiQG9jyf4Yf5qBVpEuD5
Ao7icpNLNyqQr1/I5j/K8p1Le/jnRRz9jeEKrpkBzxaz+2aRyeNjsJ/ZEo7a
zeu1/8gpfN9SjoyWvpl18hTqScs46rB99dpZccADX46uTZ7V1rsS9u/H0cor
M2a+0MT//Tk63zdrsVYR+i0DOLLsey6uiwL2u5yjCwfqc+d6A+8DmT3NnJOk
8AMeruDo34b6u07rwfeDmD84HWSVkofvCeaoxch996OaEpr/H8KRdqeaJ1Za
yDetZP5i6Lo0fS+MfxWzd/+FprPfIN8QytHsAEVWYTnGs5qjb8Umnxboor4T
xtFbhy/xXTVgr2s4sukvO7X9PvjZWo5ej+veqm8R+Ns65t/yB7fq9gv9I+Hs
/vK6rgsz4L8iOLLt2uHqYg3Ud9ez8fiNDNTfiPrqBo6UuU62Iy8hHtzI5O+l
fzM2EfwhkiPzNj27pXwDnm3iaNLbNqd394Z+RzF5x2/zNv2MfM9mhs+Xuo7a
I8F4tjB5uVm09P2NeHsrR5t8LQuMR2H/kGgmfxf1hE0d8b5tHCkO/wo8kYN4
aDtHndv0KYxtjGi+jmH+7KfFwX2p2H87lqPMNs+mmPzCeq8dHE2b2OanVyz2
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
Z7azxf44g3nSDVrRuctx/H4IT08fP59fskl1PgNPB5RTBqldQDw3lKfiwKiY
8b/RD2jHk+HIv5ujRiK/Yc/T/qyYGyGq/oZhPG1doe19U7UfoQNPJ6VtxM26
WK/iyJPzELeY6zsh7+HMHi22t6/uj3qeE09Oc89/meMLfjKCvf9TZU5qlGHz
8515aujcJTb/OuK3kTwVqj8uHOkG/khMnpXq82PegV+M4umRnWfwR2/UT0cz
/b9rESnrh3zBGJ5Ofbqqo1UDvB3LU6u8uIDif9gPx4Un96Qlx09uRX5rHE+p
P4Y+jHgMPu/K0+VjBh/+qYOfuzF5Sgd0+3kG9j+ep1UOS4/0vIb1K+483Wtx
h3sRj/mcwNOSLC2bg5PgLycy+66c31T4BPxlEk+312yqdj+AepkHT3FDG18P
Xod+0slsfIZtxzlsBN+ewlNszsmPYSPQrzCVPb9Jre2tponNv/dk+nzfQm+M
iP6UaTwdib254p8O+g+9eGq7dNHwYf/gr6fzpOwfVjXLUb35/zN4GusaH79q
POQ3k6cZg//22zBcq/l53jxlP11x5OR96McsnrqlF99ZtwX468NT/VX/R4NG
YTyzGb7OTyszvAY+NIensqPcKa0RyIfM5WnpcYcZpfeRr5jH9OFrbKriB/br
mc9TkP/CP4Y3kR9awFNYwu7hljmoTyzk6USH3dIjo881Xy/iae/1cT90F2F/
zsU8zRsy0W9NNfRvCZOv8Hd+jQPwZCnDi39Hh9UnLm5+/zKeNkvXnNXn0a/j
y9PalMfionzUT/146u1V8FjzOdan+jM8zLuWvHkv5BPA0626ynMdXwNflzP7
LF/7u19P5McCeao562jeuQHx0gqenpWOM/6tDr4fxNPZZ69zVg1G/BjMk/n0
6BujZMCDEJ4ehK/JK2zA/gYreTpTraPoZrqr+XtX8TTo6VZHjUXAz1A2/oVP
n/9zgr2u5mmHXtriTZ7YzymMp2X/HPaPigKfWsP0M32CZJvqPN61PA1rl909
YB7i1XU83d1TrZM6HvMRztOIG5kpRwehHy2Cpx/Fynut4hAPrOfp3TrN2mx1
5Pc3sPGeW5M8f6Z68+83svk6di7GbBv+H8lT3jWvqV4O6PfcxFPCwS4WBlux
v3wU+z6//3T6GWP/4c08beltWhmwB+vLtvC06Ou9h0tstjTf38qTz5L7Y+1N
/ZufH83TyqmSjmMuIn7fxlOy5t+KS4XA4+0M/15OmGW/AfYbw5PON9vje/th
PXQsT2Su2y5uMPB/B0+9zOuDNm0Enu5k/nrlyK02AvBmF08dCsr5n6rzz+J4
Gu40v6yqK/x7PMPPDM1Ss45Dm78vgaed5eO3z3XBfO9m9v2o9PluLdSHEnma
2yNfMX4LnreH8Y3i3TYXx6J+vpfhl7758SX6eP4+5v/XS2uvNSL/msT81fAX
TjmL8L37mTy3BOo2xCJffoDZkzR5h3kT9DGZp6KBiSVb7dFfdZCnQzW7P7/R
hn9LYf5wwZKKN4mQ1yGmT4a/TG5cR37qMJvfDmZZky5Dn1OZ/rvK19/sgvg9
jfGn1sJZiTXWj6fz5GJzrOdbCfolM3j6uTOv/ZgKxNdHeNLLz9uen4L+lKM8
VXQeXxq4Uqv5fZmMz2j4HzTgEX8cY/44af6v8y0xv1k8TfSoETp+Qr7yOOOP
elt3SF2BR9lMXh4WQwP7IT+Qw/CqYOyEj5tU+6czeS/y1xwy53Dz/Vzm3/o7
zzm5E/ksCU+WJa3eR7shnpHy9MS+x92MfSub78t4+i+lU5jFOOQL5Tz5dZqm
FxwO/61g/DAhebFDV/ATJeM7c1/lhw1Uxf88tRsyquMlY/hHnvHR3Tp9v95H
fCGw+/PXLLsjxfyJPN1osAxYvRTyzGPPDz2Z9uUf/MtJnnzPeSXsWYLrfJ7S
xg2ZNDQV+HaK8dPbq3dm/AJ/O82Tlr9evZ4mzvcoYPIam5YoGwj+eoanVzuO
B02ainivkKejOmuN6grQ73CW8eHJbv4z1mM+zvGUP3nbBclu1PfP82TPP245
uBb48h9PH/TnPCwdiPxLEU+aF0q8ZC/Qj3WB2d+NhocnVedfXOTpnBioNyEZ
v7/Ek/7kJXvDDNBvVsz4wKmZ3RxU/bWXmfyfZBoss0H94wpPM1sE1J6XIH4o
Ye8bu8XC4A385VXmD/0VvZZcQv3kGvveR4rzOs7w79d5Ck7b0e5GNb7nBk+h
rxfqLJiN+KCU6c+HTl73nZGfu8n8y/OQibunwv5u8TTpfoqR/SD4w9uMH3x6
fancE/Nxh/nTSY5WPadgfcRdnoYMOuV/syfOg7zH+Ir+1ufZpeBj93mq/bei
7MZpxO9ljJ8cn9N7/l+T5t8/4Mm16NTk1fNU+9UyvJpQWhRebd18/yGzR9tn
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
MTYA/X9XmHzdvHU8P2M96lWmL/nTcyvfo58rm6fzjX+MlnZEP3wOT/q303fc
e4/1Gtd4ulAQatfGC/LPZXjftcrZaj36BfIYX0qevyLTH/Wh6zw9edP/5Jg4
PP8G+31pq6DBi2BvN5k+amcdbV7ipry+xfh776D8Af/A92/z9HFNzoNrvTH/
d5g/K8lJbdcM/eR3mXz900ad+wN8ucf0YXeBsNUG/vg+m69Tk3fZpSFey+ep
0W/FqGjV+QwPeNp70DR6Xx342kPGH4u8b/7thXzzI572H53dz9lcdR49T4c1
pLhzI9FfW8Dmy+t6lfAC5ys/YfPVZZDuwBDYy1OeNt1ucL/ngH7+Qp5C9/U0
KahG/vsZT7WaRfMSncAXnjN/dy70i9ZsfP8LxrcbG44p1mE8L5m97OoZar8E
fOUVs9dNaR/kMvT7vebJ/0REZulnM+X9b5g9xnwMKHmK87je8tTJs8kDM3fk
M4qYP3TaNmtIHvYXKuapvaHLsnmn0V/7jvHLgnM6qQ2oP5bwpHVj0IOCa8j/
ljL/GRXZd0kQ/Ml7nrZOucW3T0X884H5q5gfl8quAw8/8nRxUKLBjlng12VM
XlnTc5JU53t+Ynwn7fWc4EDEh59ZfLJ32qrGjPXK+8sZfhY+q05xQ/xXwezB
vbfer4/g4194iojfcbDFaFxXMv+TWKJp0NNfeV3F/FNTzsLpMebjK7O/p8et
4logH1/N0+n6o8Z9eoMP1PB07KHOdIMHwLtvLH4Qgs0dU5A//M7TN5/JQSl3
gVe1jF+PNB/s0h94Vsfkwz9p3jQZfPcH87/7N2/doqta/8/824xrGS4Vjsrf
f/G0cEFo0djnwKt6niY+aLuzbSX4128m/8dzmrx9BP/ZwOK7yj6BFifBr/6w
+d/IbezRBvziL09eS83e/VqIfOo/Jo/3hw/8PAT/3siT7xh7Ez4W+tREoGnt
6uxXO4KPqQn0aOrgYoM8Vf+/QEZ6wXovo8Hfmgp0us6z2iEM+NlMoMr+Dyd7
tEJ9UUOgpCvFnorn6E/WFKhf3wGbM6eh/7W5QHlbZwTkdwd/bSGQwbWy2qB2
2E9eSyDxktmlcVeQ/9QW6HrM34EtpwDvWgo0xfXqfe3mkGcrgYJit+6sWQH/
3Vqg2V7P2unYYr2JjkCh9g3V1S0QX+kKZDY7vdfF39AnPYEO50RvOJ+K+dUX
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
xkfX8IkhN4F/GQo68uX8zw9PsR6PY9/vMCLr5Tv0B/AKyq/b3jVyAfBMYP6q
q1lA14PAF4WC/ov60ve3NfRHZPfraDTfsCxaeS0xfXqzsrS+3FL5fbKCvA8F
Nh9vu1D5e6aCPu0ftqY0EPZ4meFpet765G7Iv2Qx+acbJEfcgH+8oqDTiimm
sur8gKvMns76OVb1BD5kM3xru0L352v4lxxmL9k1v/umQH7XmD9Z0S3bSwZ/
zGX+JvHYpckakEce02fL82VGJagPX2f8+VRr17mq/WlvMH2OLqwdOAj2fVNB
5y/sKE6ZgvzdLTafGgkf9/iCb99m8l6m/35/Ofj7HeZfX7v7unwDXtxleL6k
pvGDOfjMPWav/f6O2PMH+ZH7Ctq+IvT1ykLgXT7j56GlBaPOYz+HB4yPxHub
ewRjvh8yeXaID8idjf6XRwrSMnntr62F73vM+M2L5i/LH8CeCpi+dsr2ibgI
vvBEQUvNNp59OQP5lacKqllpNdFID/ynkOnbLt/i1GWoJz1TUODh1Q5RMxEf
PWf68cm6o7kL8iUv2LXfLNMVEciPvmTxR2PzSRGNiN9eMTzZO8G29T3wx9cK
SnLrMs/qCOzlDbO3sybilGTEY28V1P35+z3NNYFfRSw+cc5qmfQd8Vyxgtaf
O5+onwL9eKegrMjpz4wvIz4sYfZl+ks/bh74ZymzD8cLRVPOwT+9V5Bfh5Z/
fm8Hv/+gIIeUcxtnnjVVPu+jgr6FPh8syajvlDH/6XpsqnNn1Nc/KWhSUw29
j96Y78/Mn9sdG+1mDX5TzvRTmFDu9AJ8vILZs13b/KstUF//oqB1KwNjopLR
z1jJ5rOVxdEhO6DPVQoySvln2ngBfPargtpmbc3SjQMfqmbzYXTeZP9q9MPV
MH8XFtgt1hj7KXxTUGVg5cBJ7og/vjP/MuLo8uY89KGWjTfPY/GufcCXOvZ7
6peDE+t9lM//weTXexLpPEA+5ifjX9rtn/48DP37xfjS8SHLOy4Ev6ln9h6m
WPvSHvms34zPzjhUM2AQ+FyDgqY6p41fo6uu/P2PglYdGr7fqCPG/1dB6isf
7VNrCz7+T0GLjxZt0NoPe25k8ZzLgrH2e+APmoi01S4mtulI9B+oiRRbUGuR
mYd8sbpIWePkLUF6yM83ZfcvmvxFMR3z00ykwzZJgXX78f0aInm2ij21/Tjq
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
cd/ve+855zWer3HO/UH8+dtt+Nyhe2+Tcnr/ZrTvddN3TWog+/T9Nvi/+tPR
cS2tzw+cz82TjG/n0Xk+Lcjn+91NS3CjemAr2qu4Sa5O5eRPf2L8masnsx1N
8vbrNmgO75VdfYX8axvGZ76dLDtOpPX5fRt+2D4+P3or2eM/t8HSfmXDi3k0
3r/Ib5CxH55L8W77bUh/VMSc+kr+4h/GS3YNntOHkv3rwEJ9WcSzF960v7Uj
C4u6r3x2/TzFuwosqPQUogIHkn3rxMLghSpN/r7kDzuzMHHlu9wt0cRHFFnw
OW04y7SO+LQSC8+0/a/MHET9Yl1YcH045Xx6HuUfu7IwibGJnjyF4sduLLSI
swMjFlD9sTsL/70d1vtxGfkTZRYmOIe629XRfpQeLIz53H41rpzyGyosfF5v
mPvCkfhxTxZmKWv/PDyd+oF6sbCwte27eXi4JC+qLNS5K2xJrqF6VG8Waq0j
1906Ld//z8Lpupx1i2aRPKix8Dhiq0aR4THpujoLhjGbvjfPI37el4XJk+r8
PTqTPerHAvQbO+BbJuU3+rOg5eIW4NeH8qsDWFgQGg6p3uSPNVgI1nKKc7xD
+UNNFgJ/pagEthMf0GLBNurFZs/JZtLzBrLQN7NkxvsKWo9BLPx4o1S2fj/J
mzau3/21YxZXUX5iMAsPSxxi69/T/Yew4F+5dUXwMDovYigL37rFxdbPkO//
Z2HVjSd/46dRv6cuC/MPnNzeO4X4qh4LByMcuk4cS/n2YSykm8/uaNqD+p2H
ozz11mEHnc6RnjcC52/ko9KzylS/H8lC9IYfnSsEijdGseDY5VzmndMUn45m
QVH9n21RNMUTY1h4tM0/oUqL9H0sC0Uqd2vC7eXxPwvxKp/+89gur/+zMHP0
GRXfrbQe41lYXGHYl/9EfGgCC/MmzTc62p/siQHOh3LFbf95CtL/J7KwZEZo
WHkExaOTWBhyUt1ypYX8/H8WZEFJ/24PofFPxvFtdXkzSX6+6BQWrtgtadh7
gfjmVBZM9POtViuRfE1jQbmXQUBaI+UbjVg4utLU7d8U8r/TWdC8xp4yTad8
4QwWVsTrrQuX5w+M8XkZoT7cUdJnExbO3Nc1bYkh+zuThdjJ3kEHJ5L9m8XC
SAcZ068D+QvA8c4pH/LfGOJvs1nQjUi1jLxF+WNTFl690uuyIpm+nzwH12tx
zWSbdKovmLGQEWE/+fNXqreZs9Aaln74UgnFOxaoTz0v3Bg2VP79PxY67Ngk
TJd/j84K1zeoy5obx6jeO5eF1d8neDiMoPmxZuF9w+2Qu/OmStfnsdBtgelP
OyuSv/ks9F7vPd+tnMazgAWN0IvTprjT/W1wfOr22jsNSH9tWbBxsQxReEz6
ZseCU8M/doP8e2ULUX9YfsWXIaQPi1jQtumzsYsz9RstZqH/rlUzl9uRvNiz
oBo3JTXZiOL9JSzkL/31bP9J2o+9FOdH6+/kcm3S/2UstKfqXxTl8eVy1LeA
sMSZevR9whWoL2vuXnyQSueBOKD+eY9cb6FK/MGRhcx7lepDrhJ/WsnC3G8a
O+3l9WontMdjLgcMG0fzsYoF9oZD0LFtgoSdWUhcPKtv777E/1xYWCYWXRvw
lvrtVqP9+bvlVuM8ir/W4Hou9RnSmK4gYVcW9jhVxgUEUr3cjQXzaZ1MZsrr
le5oD5bdP2VmRvLhgfNvdNqkowfFp2tZKD3iWT7mB/mHdSz8TFjw5UYx1Wc9
0X78XGKdMorsoxfaz+aWU5+mUL7Nm4VxnieLdfoRX1uP72O/+pnwnuI9HxaU
zk1lFv0kfd/AgkPM1fy0xyRPvqhfGolt5svk5/+xsMvvfO22D1R/2MiCcbgj
VGwkf7QJ5XP9L6e9o2h9N6P9SXbt1CWQ7LE/C20HXML6vyX52oLyMMbCxfYe
xV8BLFxrmbDjyjmqlwWy8HLBnud1Y0k/tuL7B2mkNXlTvLCNBTHuz7Mi0/nS
+2xH/5TvmrPGgOzfDhasDVWbt/aleCSIhW2K6d8jti+Sfr+TBTXNreN9HOh7
LMEsRL25feT3UrIfu/B+q4Zf3tFC42HQXmxRe2yjGC9d343+etrjKe0s8YsQ
Fp7krvf+6E//34P2Kz7DJH8nrW8oC/z48YPre1K+Yi/6m6NrlhVUU7yzj4UA
8zA9j4F7JByG/sciNUA1m/jifhZeu3W5EOVE9u4AC8OKE7cF1JB+hrNQWZqk
0+EGrddBFm4pHh2wS/799kMs7NhstE6xjeqTh1lIuSvUTHhL8XQECzPm2d29
84P6546w0Mt5Gpe+htbjKAtLT+9bNas7rd8xFpyn+Qunf56X8HEWsrpWOe57
LN//z4L7ipnfXsjP149i4Xy7Y9BS+flbJ9Ae9decfsqJ9D8a9cno6b0u5ydI
44lh4ZBmr649XlB+KBbtc11p/+pT5L/iUJ989f578Z7i/XgWtszJ+923he6X
gPIHd8YNWU3xRSLyD9VUlcZzlM86ycLFjfUrlC/QeTOn8HnX9Xb8aqV4+zT6
k/07LM3LyJ8nsVCu2l1N1pv6tc+wEG4uCl+OUf7tLAvjIzrdir8nP/+fhRM2
o5XWjyX7mMzC2+AqL60J9H7nkY8tHvr42UnKd1xAfcyfHNeqQnw5Be3NwkcL
Nzyl+UxloU/ciP4pFynfmob67mTNfNlF+nORhZx9df0KHlJ8m87C7Yf9HxgJ
pO8Z6I8i1Vat/UP55Ev4vvPVjrz9SPFvJurD58Gzol/T/tssFnoMrviZ2EJ8
6DILgyb0zB7Qi+zRFeSbWmrFMJHm9yquv1Hwk5F7yN5nI39wC3ndMFVJwtdQ
f1YdyPzvHPnL6yxM1w9u3+5B51PkoP309Q7r9YP88w0cz9khu1tZivduon+o
M+EUC6h/8xb6vzsL43kHiq9us3C/NDK0dx7xCZaFC2/2D/hXS/aRY+Fk0sTX
pWOof4/H9U47mGYZSftPBBYKyk8U7dQi+RJZGK7yfmixLtWDZPg+hSMUBsXL
z/9j4emmkhEJFaSfuagfS/RHdj1B8eNd1J+yfOfyR/S9gHuo33NTWqPeUX37
PurzjgsK0IH4/gO0t9ejtlnJ+x0fshA6wGS2wRCKZ/JYsEivWtH/El3PZ6Hf
0PVlkZfIPhWwcG7hXJcVp+h9CnF+dEuOd0i5KP2+CK/3uK7fpyvtBytmIezg
ybm138iflyD/rzl2N3808bVHLEypGqbZT0bxTCnyqUmXDJhs0ocylP+vHpmm
w2j+y1k4siLsvdETiq8eI1839xtdNJHu9wTtRXkX1a7fyD8/RX6Qu/+qWx9a
rwoW4galpm9ItJPerxL9NRts7+JK8cYznD+nbw5GnUl/qtB/Py1mPuZRP0w1
C99/H5l3TYXiuecs/Nt548sZd4o3X6C/LVH3PXaH/OdLFu6Ex2sO2kd8roaF
LrlvXrsrk/z/x8LYdQ+tIj+TvXuF/m5pynrFg8S3X6N/WTzNf9B9bel937BQ
naBlOsKWxlvLgumN8uveo0j/61iY4zHAcH4GPb8e9bnhzZYPseQf3+L6lrjp
HDlD8/cO/Y9T3kXPh2Sf36N8JN7OmH2L+oM+IF8fl1Y87BrtR2jA573lfCwS
SV8/4vy0NX+2Kif5b8T4Z/0jpZePiM98Qv197zxo1C7i45+R/xTqhwx+QfmL
L/i88J9Jy5aSfn9FPujT3SA7kea7iYUabSXlOyOoHvAN40WrhI975Pvrm3G9
fw/j0reTvnxnYWv+px1n9Gj8P1iwKhs7ct9usictqE+Dchevt6D5aMX1arfN
2lBA+aSfGM+6WU7rFkr1i18sFO56Nu/rMzpPqQ3nK7Zg3sWv9PzfGH+p2Sn0
ek724w/yjyeuZQPl+z3+svBpSGWX3LVk/9pZ6FzssOhkq5I03n/IN2uuZxqm
kf/swEGu8UdFMZDynx05uN969XH6ZZovBQ5O/P29P3kq8ddOHMRdrAvROEb2
sDMHR7VMiyYOVJCep8iBy37Ds9aZ5M+VOCh3fagTfp/2P3XhIN78aWKGUZCE
u3IwXhyq4DyS6nndOFiv0z8mcTLVm7tz8JtrX21QSvKqzEFL+ZrTV8NIf3pw
EK7moFiyiJ6nwsH+cdu9+92T9/9zEHpuTP1Deb9mLw5uO60fXptA/k2Vg1l2
RQO6fqDx9uagc3tv1cudiX/04SDw1Nv9wybR/lg1Dr6Hj8hEtys9T52Dv+/X
7SvqQPLXl4NOmh9KNf2IH/XjIHnWvC5rPYm/9OcAfpz/UdiP7NMADiKH2JvO
iKJ4WIODhE/2w13kfF+Tg4GXHRqjjeOk52txcPNIZ4/BvSi+H8iBbXtF89ho
0odBHBzrZOUZs4XsjzYHlj7dZlmfp/EO5sD5u2rhiB6UfxnCwdN+Kk/TVGn+
h3LgVzPB6Y/8vEcdDrRS8r+bG1N/gS4HK0uXnEltJP3X4+CyzRvR6OB0abzD
OAhog3SLF9SfOJyD5jELyhpMlKT/j+BgdKBZi1sexS8jObgy8IP7GzkfH8XB
rY81LkPayD6M5uBV4b9JquVk/8fg/XzNn5v7kH0by8Fd9dMju1gQv9DnYN3z
VaMeqVL+bBwHT65p7JmWT/mv8Rx0sbdpdxlJ8fgEDma6jhCP6FE/kAGOt9/7
esOVdH0iBy9Pa+kZLSd9ncSBw+IX9m3tNJ+GHChYf3WKa6LzWiZzcGeG9o3R
fYj/TMH/z37R2BRMfG8qjifgvb/SF7I303A9DfjpxprEX404qFYf95+T/HyU
6RwsbduvkHaQ9hvM4MD9qkLGv0Pkz4058PmVndZ+hfJhJhzsXPIVJudSvWwm
B3t13fesHU7yMYuDYY+fDt/em/JVwMFubTOzxW80pPedzcGYnfFDbc+SvzHl
YPZGq93XO1O8OoeDd2OU9crDqb5ixkFaw+aMV6WkP+Yc/BMTkzPWE/+x4MD1
39namwG0npaob2UfK4fZk/2x4iB6J9tyYRR9P2Iuzue7qm068vPrrVEe21fa
Nd2k+Z/HwYaQPb7Wcn8ynwOVZ2fhwxWKPxZwEJNo7e/ZT0G6nw0HFg8Gv8rw
pvm1RXvSs9uvjsdpPu04uLfsga2P/HzJhRzostWXH2jS/oNFHCg++lQxeCGd
p7SYA+tFlkNjlGj+7fH/rV76s+Xnny7h4Hmn+OMBJ2n9lnLgcdxpQLAB2e9l
HAS/cl743I/4xXIc/+RjU8xmU754Bf6eb53W0IvOy3FAe5p1+GGOJ8m/IweO
H1xPrdhEeCUHO6wWTOWvEX9yQvl6ws8tn031u1Uc1AS9u2vTk57vzIHvOPuc
E8OpHuqC8+O4MvqFKs3/ag4KFl9allJI8e8aDpa0O+4+uYr8jSsHAxKWNChW
k/1w4+DI58rmUFPiL+4c9NcYcH2rKvXreHDg9Xm9fZ8/lP9Zy8Hj752KVpRQ
/WsdB8MP3PHUUZbH/yhfN9c16R+hfL8XB0Z5BX9c3Il/enOwdo9/ycPJpD/r
OXgd89dhriXln304MPP87h0XQ+uzgYP3f77um7+Z/IUvyvv9irijh0gf/fD9
xvRKW15L9ngjB0kLDgVfKU6S8Ca0V7YG3U2jiE9s5mBFo9/fCweoP8Mf1yf8
XMGrdMrfbeHg59QnmrdNaTwBHGQzxcFCR/IfgRzse7Xtwrtm0retaL+8UxeO
G031iG3oX0ZkhwYYUD1sOwcP9uoXaxeSPdmB/tPNp9sa+fdIg1AfGk88GduL
1n8nzsdUVf89RuQfgjkwtuTbP8+l/PcuDl5sDMvm79LvGbQ/MZmhlp+GS/ff
zYFeucmGoI8kXyEcGBSF97PaRP2Ue/D6W9d+6jEUf4VyMMjrheJF+fdm96J/
cR9g3GkPycM+Dn6oTsizHEv5mDAOtvw2dVVtIf6wn4OhMTN7BKhQ/vAA+tNp
rYtrtMifh3Mw2Sy1fcRxigcOclBvM9vQ7zbVaw5xcPzNLDOluZTvPcxBvxvf
xizOpHxUBAeqAxZUMTcp/3QE8Y09d39EUv7wKPKfM025XU/Q+TTHcH3m/352
M4/4w3EOvvpHZaQ0kP2L5ICvnxdYFUn1mygOhrxeZZyaQvXPExz8WTYqy24+
1SOikc90cjhzoDvFpzEcjFsZtbO2J8X3sWjfF/T9z+ca8YU4xP0/JdUkkrzH
oz1hBy8PsyB7lMDBMscO+lkHaf4SOejbmlPvmUv5iJMcGMaOHnxgI/GdU2hP
ajWT0lZSvfg06nt9tJd6Iq1vEvrLk16v4+T7E87g+iQ7rRw6Wf79P9S/EWNn
1FqQPJ5DeT7LsJPWEf9N5mDewaTDnUbQ+p7nYFuXL4P1tanf6QLyndIM986q
lP9PQb4xrluxK5D8piL/c6xpv2FL/DMN+cBNtZFvFSk/dpGD6xt8eteGEp9N
52Bi/MC/I8pIPjI4mJAxJ2FWIJ2/cgn5qIsVezKJ/EUm+i8P9zu2VvLz/ziY
rjOiedcUqmdfxvVvV53c5xbZiyvIB/aVOeyT1/+ucjBqm3JLl3iSt2wOlPlj
3+3LyT5fQ3vaq2joilHy7/9xsHzL8376g8gf5nBwMXiX0PJavv8f9aOP+ulv
ZkrS/29ycGpub8dNdiRft9CfK161PbKX9n/d5uBjelr/FfLzzln07wrvX57u
Q/vNOA50xOSJb7aQfeHRvycYu826SPxZ4OBqjn93/ULSL5GDM5+SO1VmkD2T
cTBD7JnnWEz24g4HOeMO++7nyB7moryZKSzx2UT1oLscpPxZupkPo/NB76H+
TzHkzd2ov/8+2puGf2NCm8nePOCgdFr1x/KLtyX8kINza/Zufa5H+pnHwZrU
88sc1OXn/3Gw+dC6hzfTiQ8XcDAizEDr4X3KFxRyIPyOStx9lfhnEcqX6ogr
p0San2Kcjw6RG9v2Eh8vQf80fYDxjy+Ur36E8mPTdFAIIX0q5eDX0Dmj1H6Q
vy7jwGaVYkHLM4p3yjEe2jlgXOlVspePUf6Vb2nn5pB8PUF77T1/V8YAiief
on15WNhHtZf8/D8OqlY1O/Q3I35difZuTTU31Irm5xkHh5pX5a/LpPetQn21
2LTiXzz1J1RzkLf4y8K5lhR/P+fAqnexicNasr8vkA+O/Kfi9JXi1ZdoL2eP
y7C4QvW0GuRTWy88f55EfPw/lCevaW7ba6j/6hXaf2uP4U/MKH/4moMF4//Z
zxLo+4BvOHg2Vjf5/k+qN9VyMPiB+qxPl6g/pY6DXU+D7+fJiE/VYzzgetGy
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
nqrNvir0D+grsEV6ZzM2qiH+SzzZs39wVjvGV0Vgk4KCDM7P2y1eJ9ZPeqoU
vh/x034C+xy3uy09BfEl4nL27P7zf7CP+gts+PtA831pYj9djnjJs16nTA5i
/g8Q2GvvmsfH/OAfEUvU12T/nYN+26oC+ygl+RRUJp5nyhEXbxqa5hMG+1dN
YDa7tXz/PsH+deKQn8aHSubDP1MXGL/x5qqX0ajvIU65MefMZiWs74ECywuY
OuZELuw/4s/y4U8zX8G+GiSwivwaN881or/DEa/o+ttLCEF9rIbA5oU0xidG
Yv8AsUX/ALvZPOrLBgusTcvue/wc1L8QR/qX9PswAfJVU2Bnft/vYZYJ/4t4
cWqk9dPJiI8MEVhuYl3hv924n3jP8HErMu8hf6slsB6XWNvXJtgnxGE/fPx3
Cqni9aE0v9r2NU+VwvP/n997S43HfkGpYQJz6bXMyeeB6K9yxOfzu3j2uYL+
ZcNpPKLrS4Xf2J9G3FzjejT4IuILI+h5BnS0JdRBPxO3bN92fMc17P8dKbBH
lnGeDgPg3xObTk7Y3FKC+iFtgbX/8d53by7sE2JX96Hqjfrwn3RoPZ9T8XVY
Cfvx/1zw/MPrabg+SmByATKyF5+J9gxHXKW8rfuoFKwPXYEN2nT7kO4v5E+I
YxyTZp7VFu0xqdECsxyRcaOhi7jfiiO+ojdOrVYR4z+G5lvgh8lm6yDfiNV4
uYuj0hBf1qPxlBmUZtwh1ptwxG2X54Yq5KE/uz7N7397bM4XQ78Sjzj0q9wx
aox4v4HA1r3wvtL+H/J7xBE+c3efcoH9YCiw08FSOaVXxOfhiFd33xgcVQ/7
wYjk+av6n0Wd+5uIf05QSNk4C/LZmNZ7Zfex5f2QPyXW0nV3n9QT8c+xAnuy
7W6NU5yJOH7E8UX2SjOMcL7IOIGtzRszf/knPD/xtAW9Jh3Rgf1kIrCyiJNn
leyQXyX+G3izZtfbueL8GS+w4KQJQttR7A8g/nYpuMKhs759gsBk/pt4YvR6
2G/E+9i4YNVMnHc6keSHXojOy0eiP8oRz7CcJX0tGP1cTYm9dqo/D0P8mHhS
Y3xvLcgjqUkC0zguM31QiNivkiOe06067qcD8jNmAjvyJ/PPigy8P2KnMxlO
0ddRf2AuMI/LJgpPekD/ED98opylvR7jN1lgQZNSbNOXW4r/j/hB7YmfbjqI
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
tA==
          "]]}, {}}, {}, {}, {}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0., 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox["\"Build-in\"", TraditionalForm],
      PlotRange->{{0., 10000.}, {-6.338275781667265, 6.393385442024988}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Large,
  PlotLabel->FormBox[
    StyleBox[
     FrameBox["\"Compare\"", RoundingRadius -> 5, FrameStyle -> Directive[
        RGBColor[0.6, 0.4, 0.2], 
        Dashing[{0, Small}]], StripOnInput -> False], 12, 
     RGBColor[0.5, 0.68, 0.91], StripOnInput -> False], TraditionalForm],
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.814009595007402*^9, 3.814009622943812*^9}, 
   3.814009659052924*^9, {3.814009700061634*^9, 3.8140097558013906`*^9}, {
   3.814009796967442*^9, 3.8140098585254583`*^9}, {3.814009925024434*^9, 
   3.81400995000786*^9}, {3.814010015934244*^9, 3.814010115254365*^9}, {
   3.814010283246517*^9, 3.814010302996628*^9}, 3.8140205483791943`*^9, 
   3.814021451220489*^9, 3.814041830105739*^9, 
   3.814041917736598*^9},ExpressionUUID->"c7a0562a-49a3-4ced-9c2f-\
8bb9db1aff82"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "data", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "12345", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cot", "[", 
       RowBox[{
        RowBox[{"RandomReal", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}], "]"}], "*", "\[Pi]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"10", "^", "3"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "Automatic", ",", "\"\<ProbabilityDensity\>\""}], 
    "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"CauchyDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "8"}], ",", "8"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Orange", ",", "Dashed", ",", "Thick"}], "}"}]}]}], "]"}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Compare PDFs\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.81400833394448*^9, 3.814008393976646*^9}, {
  3.81400845209405*^9, 3.814008496370037*^9}, {3.814008611485606*^9, 
  3.814008721456794*^9}, {3.814008759811448*^9, 3.8140089019182167`*^9}, {
  3.814010140676825*^9, 3.8140101817817574`*^9}, {3.81401025495667*^9, 
  3.814010268634388*^9}},ExpressionUUID->"dbf11a53-3560-4279-95b0-\
2248733a1533"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.504], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.504], Thickness[Small]}], 
      RectangleBox[{-138., 0}, {-137.5, 0.002},
       RoundingRadius->0], RectangleBox[{-124.5, 0}, {-124., 0.002},
       RoundingRadius->0], RectangleBox[{-110., 0}, {-109.5, 0.002},
       RoundingRadius->0], RectangleBox[{-57., 0}, {-56.5, 0.002},
       RoundingRadius->0], RectangleBox[{-47.5, 0}, {-47., 0.002},
       RoundingRadius->0], RectangleBox[{-46.5, 0}, {-46., 0.002},
       RoundingRadius->0], RectangleBox[{-39., 0}, {-38.5, 0.002},
       RoundingRadius->0], RectangleBox[{-31., 0}, {-30.5, 0.002},
       RoundingRadius->0], RectangleBox[{-29.5, 0}, {-29., 0.002},
       RoundingRadius->0], RectangleBox[{-26., 0}, {-25.5, 0.002},
       RoundingRadius->0], RectangleBox[{-23., 0}, {-22.5, 0.002},
       RoundingRadius->0], RectangleBox[{-22.5, 0}, {-22., 0.002},
       RoundingRadius->0], RectangleBox[{-21.5, 0}, {-21., 0.002},
       RoundingRadius->0], RectangleBox[{-19., 0}, {-18.5, 0.002},
       RoundingRadius->0], RectangleBox[{-17., 0}, {-16.5, 0.002},
       RoundingRadius->0], RectangleBox[{-16., 0}, {-15.5, 0.006},
       RoundingRadius->0], RectangleBox[{-15., 0}, {-14.5, 0.002},
       RoundingRadius->0], RectangleBox[{-14., 0}, {-13.5, 0.002},
       RoundingRadius->0], RectangleBox[{-13.5, 0}, {-13., 0.004},
       RoundingRadius->0], RectangleBox[{-13., 0}, {-12.5, 0.002},
       RoundingRadius->0], RectangleBox[{-12., 0}, {-11.5, 0.004},
       RoundingRadius->0], RectangleBox[{-11.5, 0}, {-11., 0.006},
       RoundingRadius->0], RectangleBox[{-11., 0}, {-10.5, 0.004},
       RoundingRadius->0], RectangleBox[{-9.5, 0}, {-9., 0.008},
       RoundingRadius->0], RectangleBox[{-9., 0}, {-8.5, 0.008},
       RoundingRadius->0], RectangleBox[{-8.5, 0}, {-8., 0.006},
       RoundingRadius->0], RectangleBox[{-7.5, 0}, {-7., 0.014},
       RoundingRadius->0], RectangleBox[{-7., 0}, {-6.5, 0.006},
       RoundingRadius->0], RectangleBox[{-6.5, 0}, {-6., 0.01},
       RoundingRadius->0], RectangleBox[{-6., 0}, {-5.5, 0.018},
       RoundingRadius->0], RectangleBox[{-5.5, 0}, {-5., 0.008},
       RoundingRadius->0], RectangleBox[{-5., 0}, {-4.5, 0.01},
       RoundingRadius->0], RectangleBox[{-4.5, 0}, {-4., 0.018},
       RoundingRadius->0], RectangleBox[{-4., 0}, {-3.5, 0.016},
       RoundingRadius->0], RectangleBox[{-3.5, 0}, {-3., 0.026},
       RoundingRadius->0], RectangleBox[{-3., 0}, {-2.5, 0.022},
       RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2., 0.042},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1.5, 0.088},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1., 0.104},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.5, 0.214},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {0., 0.31},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.5, 0.33},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {1., 0.226},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.5, 0.11},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {2., 0.074},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.5, 0.064},
       RoundingRadius->0], RectangleBox[{2.5, 0}, {3., 0.046},
       RoundingRadius->0], RectangleBox[{3., 0}, {3.5, 0.014},
       RoundingRadius->0], RectangleBox[{3.5, 0}, {4., 0.02},
       RoundingRadius->0], RectangleBox[{4., 0}, {4.5, 0.01},
       RoundingRadius->0], RectangleBox[{4.5, 0}, {5., 0.012},
       RoundingRadius->0], RectangleBox[{5., 0}, {5.5, 0.01},
       RoundingRadius->0], RectangleBox[{5.5, 0}, {6., 0.006},
       RoundingRadius->0], RectangleBox[{6., 0}, {6.5, 0.004},
       RoundingRadius->0], RectangleBox[{6.5, 0}, {7., 0.002},
       RoundingRadius->0], RectangleBox[{7., 0}, {7.5, 0.004},
       RoundingRadius->0], RectangleBox[{7.5, 0}, {8., 0.012},
       RoundingRadius->0], RectangleBox[{8., 0}, {8.5, 0.008},
       RoundingRadius->0], RectangleBox[{8.5, 0}, {9., 0.002},
       RoundingRadius->0], RectangleBox[{9., 0}, {9.5, 0.004},
       RoundingRadius->0], RectangleBox[{10., 0}, {10.5, 0.006},
       RoundingRadius->0], RectangleBox[{10.5, 0}, {11., 0.002},
       RoundingRadius->0], RectangleBox[{12.5, 0}, {13., 0.002},
       RoundingRadius->0], RectangleBox[{13., 0}, {13.5, 0.002},
       RoundingRadius->0], RectangleBox[{16., 0}, {16.5, 0.002},
       RoundingRadius->0], RectangleBox[{16.5, 0}, {17., 0.004},
       RoundingRadius->0], RectangleBox[{18.5, 0}, {19., 0.002},
       RoundingRadius->0], RectangleBox[{19.5, 0}, {20., 0.004},
       RoundingRadius->0], RectangleBox[{20., 0}, {20.5, 0.002},
       RoundingRadius->0], RectangleBox[{21.5, 0}, {22., 0.002},
       RoundingRadius->0], RectangleBox[{22.5, 0}, {23., 0.002},
       RoundingRadius->0], RectangleBox[{27.5, 0}, {28., 0.002},
       RoundingRadius->0], RectangleBox[{29., 0}, {29.5, 0.002},
       RoundingRadius->0], RectangleBox[{33., 0}, {33.5, 0.002},
       RoundingRadius->0], RectangleBox[{35., 0}, {35.5, 0.002},
       RoundingRadius->0], RectangleBox[{40.5, 0}, {41., 0.002},
       RoundingRadius->0], RectangleBox[{55.5, 0}, {56., 0.002},
       RoundingRadius->0], RectangleBox[{57., 0}, {57.5, 0.002},
       RoundingRadius->0], RectangleBox[{60., 0}, {60.5, 0.002},
       RoundingRadius->0], RectangleBox[{77., 0}, {77.5, 0.002},
       RoundingRadius->0], RectangleBox[{111.5, 0}, {112., 0.002},
       RoundingRadius->0], RectangleBox[{157., 0}, {157.5, 0.002},
       RoundingRadius->0], RectangleBox[{273.5, 0}, {274., 0.002},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], Thickness[Large], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1: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
wUuA/7sfIv9/P/wfCobkOw==
        "]]},
      Annotation[#, "Charting`Private`Tag$107336#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-6.76, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotLabel->FormBox["\"Compare PDFs\"", TraditionalForm],
  PlotRange->NCache[{{
      Rational[-13, 2], 
      Rational[13, 2]}, {All, All}}, {{-6.5, 6.5}, {All, All}}],
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814008340316073*^9, 3.8140083552478237`*^9}, {
   3.8140083995751247`*^9, 3.814008400928481*^9}, {3.814008463036186*^9, 
   3.814008497010264*^9}, {3.814008619043366*^9, 3.814008725965073*^9}, {
   3.814008761443284*^9, 3.8140089028845997`*^9}, {3.8140101553025913`*^9, 
   3.8140101839440193`*^9}, {3.814010255867894*^9, 3.814010269470029*^9}, 
   3.814020548626862*^9, 3.814021451413232*^9, 3.8140418302830257`*^9, 
   3.814041917879437*^9},ExpressionUUID->"31a20508-6158-4b04-9a58-\
719ebd1cbe5b"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n\nA different case could be when we have a probability function (pf) and \
we don't know what is it .. a pdf ? \nSo first let's try to integrate it over \
its domain to see if goes to 1 (aka it's a pdf) :"
}], "Text",
 CellChangeTimes->{{3.8139391772021313`*^9, 3.813939202627965*^9}, 
   3.8139393582369013`*^9, {3.813947514066991*^9, 3.81394758769057*^9}, {
   3.813947631497554*^9, 3.813947689095518*^9}, {3.813953460983967*^9, 
   3.813953538523295*^9}, {3.814011847623168*^9, 3.8140118557841597`*^9}, 
   3.8145418058562098`*^9},ExpressionUUID->"dc771562-022a-4f25-a476-\
929f6049f960"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "pf", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pf", "=", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], " ", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{"pf", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Pi"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.813947302236771*^9, 3.8139473228445063`*^9}, {
  3.8139473632295237`*^9, 
  3.813947480498803*^9}},ExpressionUUID->"eca643a3-e223-4527-b6bd-\
06c11d6732e8"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "\[Pi]"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.813947441262116*^9, 3.8139474813448563`*^9, 
  3.813947693257312*^9, 3.813955664093162*^9, 3.813957241377219*^9, 
  3.813957484317137*^9, 3.814004881815349*^9, 3.8140205486925983`*^9, 
  3.8140214514831*^9, 3.814041830333769*^9, 
  3.814041917931571*^9},ExpressionUUID->"2447a376-9110-47c7-b6ae-\
c439b1a9b39f"]
}, Open  ]],

Cell["\<\
So the pf is not a pdf. Let\[CloseCurlyQuote]s use Mathematica to normalized \
it :\
\>", "Text",
 CellChangeTimes->{{3.813947578734126*^9, 3.813947610099798*^9}, {
  3.8139476981875677`*^9, 
  3.81394770057302*^9}},ExpressionUUID->"d1bf5a97-b836-4bd9-a1d1-\
c82a2cc47f20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"uv\[ScriptCapitalD]", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{"pf", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Normalize\>\""}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.813939214902783*^9, 3.81393921490484*^9}, 
   3.813939278777697*^9, {3.8139469700691843`*^9, 3.813947020874456*^9}, 
   3.813947230778987*^9, {3.813947566615307*^9, 
   3.8139475677191133`*^9}},ExpressionUUID->"3e963a16-849e-4c62-bf88-\
403550bf7187"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "\[FormalX]"}]], " ", 
     RowBox[{"Sin", "[", "\[FormalX]", "]"}]}], 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "\[Pi]"}]]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]], "Output",\

 CellChangeTimes->{3.81394727892127*^9, 3.81394756839168*^9, 
  3.813947702639028*^9, 3.813955664142178*^9, 3.81395724142924*^9, 
  3.813957484407037*^9, 3.8140048818533297`*^9, 3.814020548822712*^9, 
  3.8140214516160593`*^9, 3.81404183043114*^9, 
  3.814041917967671*^9},ExpressionUUID->"926cc920-9b92-46bf-afdd-\
1be3ed964854"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "\[FormalX]"}]], " ", 
     RowBox[{"Sin", "[", "\[FormalX]", "]"}]}], 
    RowBox[{"1", "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "\[Pi]"}]]}]], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "Pi"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.813947258470738*^9, 3.813947261081922*^9}, {
  3.813947414690341*^9, 3.813947416294096*^9}, {3.8139476219369183`*^9, 
  3.813947624863617*^9}},ExpressionUUID->"db1637ee-5b24-43d6-b556-\
d26a1af09e0d"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.813947263173818*^9, 3.813947417129086*^9, {3.813947618935999*^9, 
   3.813947625726654*^9}, 3.8139477046536083`*^9, 3.81395566418869*^9, 
   3.813957241476589*^9, 3.81395748446798*^9, 3.814004881886373*^9, 
   3.8140205489510307`*^9, 3.814021451763431*^9, 3.814041830469109*^9, 
   3.814041918025326*^9},ExpressionUUID->"79bb66b4-5721-45ee-be4d-\
d4a4f62aed56"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"RandomVariate", "[", 
      RowBox[{"uv\[ScriptCapitalD]", ",", 
       RowBox[{"10", "^", "4"}]}], "]"}], ",", "Automatic", ",", "PDF", ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}]}], "]"}], ",", "  ", 
   RowBox[{"(*", " ", 
    RowBox[{"sample", " ", "the", " ", "distribution"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"uv\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Marketing\>\""}]}], "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "               ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "effective", " ", "density", " ", "function", " ", "to", " ", "compare", 
    " ", "against"}], " ", "*)"}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8139392277644777`*^9, 3.813939240856587*^9}, {
  3.813939371759656*^9, 3.813939374102312*^9}, {3.813945924444098*^9, 
  3.813945927617731*^9}, {3.813945992665904*^9, 
  3.813946045541971*^9}},ExpressionUUID->"0cc6b0a2-d7f8-423f-a8eb-\
9c854d2eb959"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.46199999999999997`], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.46199999999999997`], Thickness[Small]}], 
      RectangleBox[{0., 0}, {0.1, 0.074},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 0.231},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 0.366},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 0.422},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 0.518},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 0.62},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 0.563},
       RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 0.626},
       RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 0.642},
       RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 0.572},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 0.58},
       RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 0.561},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 0.541},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 0.499},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 0.46},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 0.39},
       RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 0.369},
       RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 0.364},
       RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 0.307},
       RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 0.245},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 0.217},
       RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 0.166},
       RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 0.161},
       RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 0.149},
       RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 0.104},
       RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 0.098},
       RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 0.061},
       RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 0.038},
       RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 0.03},
       RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 0.021},
       RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 0.004},
       RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 0.001},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, \
{{{}, {}, 
     TagBox[
      {RGBColor[1., 0.4, 0.], AbsoluteThickness[3], Opacity[1.], CapForm[
       "Butt"], LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$107716#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.064, 0},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Large,
  PlotRange->{{0., 3.2}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8139392293815737`*^9, {3.813939359904583*^9, 3.8139393750724583`*^9}, {
   3.813945940388332*^9, 3.813945942222139*^9}, {3.813946983652639*^9, 
   3.813947000179963*^9}, 3.8139470537256117`*^9, 3.813947238552738*^9, 
   3.813955664306026*^9, 3.813957241584486*^9, 3.813957484581534*^9, 
   3.814004881980595*^9, 3.814020549145462*^9, 3.8140214519681683`*^9, 
   3.8140418305702868`*^9, 
   3.81404191817321*^9},ExpressionUUID->"3479802b-bdf2-495e-8ae5-\
93d8349cffb9"]
}, Open  ]],

Cell["\<\

This is even more apparent. Let\[CloseCurlyQuote]s say we have the following \
Integral\
\>", "Text",
 CellChangeTimes->{{3.814452105179063*^9, 3.814452133372799*^9}, 
   3.814452256854377*^9},ExpressionUUID->"5a675f84-3cfc-401c-a1df-\
4a579e688dcb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "i"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"i", "=", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "1"], 
   RowBox[{
    SuperscriptBox["x", "2"], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   SuperscriptBox["x", "2"], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.814452466441493*^9},ExpressionUUID->"404c7eb3-25a1-4111-be28-\
cf5aa80902f7"],

Cell[BoxData[
 FractionBox["1", "3"]], "Output",
 CellChangeTimes->{3.814452148827724*^9, 
  3.8144524684359217`*^9},ExpressionUUID->"e9cbc801-792e-41df-87a4-\
c975d0b376f6"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
l0zPzRHYjtWjv/N/9SW6zA==
       "]]},
     Annotation[#, "Charting`Private`Tag$7149#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 4.1649312786339017`*^-16},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {4.1649312786339017`*^-16, 0.9999999591836739}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.814452148827724*^9, 
  3.814452468460095*^9},ExpressionUUID->"c05d7c66-5c47-41e2-b86e-\
f493e2c7c912"]
}, Open  ]],

Cell[TextData[{
 "Now, it\[CloseCurlyQuote]s easy to see that to make ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "2"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ec6032c5-021c-4e67-8662-931feddba85d"],
 " an actual PDF we need to add a normalizing coeff of 3, \nso that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"3", 
    SuperscriptBox["x", "2"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "9db2cbd4-8f83-4b56-af27-66bd8d7ce684"],
 " will integrate to 1 (as before was integrating to 1/3)... 1/3 *3 = 1. \n\
Let\[CloseCurlyQuote]s see it with Mathematica :"
}], "Text",
 CellChangeTimes->{{3.814452158642248*^9, 
  3.814452312856462*^9}},ExpressionUUID->"7c5ed7ad-b5a3-4004-a2a7-\
1daeddda20bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"\[ScriptCapitalD]", ",", "x"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[ScriptCapitalD]", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    SuperscriptBox["x", "2"], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
    RowBox[{"Method", "\[Rule]", "\"\<Normalize\>\""}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"3", 
     SuperscriptBox["x", "2"]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"RandomVariate", "[", 
    RowBox[{"\[ScriptCapitalD]", ",", 
     RowBox[{"10", "^", "5"}]}], "]"}], ",", "Automatic", ",", "PDF", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8144523367577133`*^9, 3.814452366226576*^9}, {
  3.814452421057692*^9, 
  3.8144524444143133`*^9}},ExpressionUUID->"868bda55-8546-4890-8cd5-\
a0afc0472dc6"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"3", " ", 
    SuperscriptBox["\[FormalX]", "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.814452285580062*^9, {3.814452342842074*^9, 3.81445235148345*^9}, {
   3.814452425286582*^9, 
   3.814452471113652*^9}},ExpressionUUID->"dde34c15-d804-4e04-9144-\
1677f998ae3b"],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{
  3.814452285580062*^9, {3.814452342842074*^9, 3.81445235148345*^9}, {
   3.814452425286582*^9, 
   3.814452471115142*^9}},ExpressionUUID->"f8fae95b-0f18-456f-b9e6-\
6ff8f785bbd8"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1., 0.6862744000000001, 0.2], EdgeForm[{Opacity[
    0.5459999999999999], Thickness[Small]}], {}, 
    {RGBColor[1., 0.6862744000000001, 0.2], EdgeForm[{Opacity[
     0.5459999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {0.05, 0.0018}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{15.729591836734695`, 32.98061224489796}, {
          101.15068201234428`, 101.78000001235169`}}],
        StatusArea[#, 0.0018]& ,
        TagBoxNote->"0.0018"],
       StyleBox["0.0018`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0018, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.05, 0}, {0.1, 0.0188}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{32.48061224489796, 49.731632653061226`}, {
          99.92934534560762, 101.78000001235169`}}],
        StatusArea[#, 0.0188]& ,
        TagBoxNote->"0.0188"],
       StyleBox["0.0188`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0188, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.1, 0}, {0.15, 0.0514}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{49.231632653061226`, 66.4826530612245}, {
          97.58725267880673, 101.78000001235169`}}],
        StatusArea[#, 0.0514]& ,
        TagBoxNote->"0.0514"],
       StyleBox["0.0514`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0514, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.15, 0}, {0.2, 0.0962}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{65.9826530612245, 83.23367346938777}, {
          94.36867134528894, 101.78000001235169`}}],
        StatusArea[#, 0.0962]& ,
        TagBoxNote->"0.0962"],
       StyleBox["0.0962`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.0962, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.2, 0}, {0.25, 0.159}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{82.73367346938777, 99.98469387755104}, {
          89.85691001169705, 101.78000001235169`}}],
        StatusArea[#, 0.159]& ,
        TagBoxNote->"0.159"],
       StyleBox["0.159`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.159, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.25, 0}, {0.3, 0.2278}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{99.48469387755104, 116.73571428571431`}, {
          84.91408867808045, 101.78000001235169`}}],
        StatusArea[#, 0.2278]& ,
        TagBoxNote->"0.2278"],
       StyleBox["0.2278`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.2278, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.3, 0}, {0.35, 0.3172}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{116.23571428571431`, 133.48673469387757`}, {
          78.49129467771238, 101.78000001235169`}}],
        StatusArea[#, 0.3172]& ,
        TagBoxNote->"0.3172"],
       StyleBox["0.3172`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.3172, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.35, 0}, {0.4, 0.4132}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{132.98673469387757`, 150.23775510204084`}, {
          71.59433467731712, 101.78000001235169`}}],
        StatusArea[#, 0.4132]& ,
        TagBoxNote->"0.4132"],
       StyleBox["0.4132`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.4132, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.4, 0}, {0.45, 0.5656}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{149.73775510204084`, 166.9887755102041}, {
          60.64541067668966, 101.78000001235169`}}],
        StatusArea[#, 0.5656]& ,
        TagBoxNote->"0.5656"],
       StyleBox["0.5656`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.5656, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.45, 0}, {0.5, 0.6736}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{166.4887755102041, 183.73979591836738`}, {
          52.886330676244995`, 101.78000001235169`}}],
        StatusArea[#, 0.6736]& ,
        TagBoxNote->"0.6736"],
       StyleBox["0.6736`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.6736, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.5, 0}, {0.55, 0.8026}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{183.23979591836738`, 200.49081632653065`}, {
          43.618540675713874`, 101.78000001235169`}}],
        StatusArea[#, 0.8026]& ,
        TagBoxNote->"0.8026"],
       StyleBox["0.8026`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.8026, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.55, 0}, {0.6, 0.9978}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{199.99081632653065`, 217.24183673469392`}, {
          29.594722008243522`, 101.78000001235169`}}],
        StatusArea[#, 0.9978]& ,
        TagBoxNote->"0.9978"],
       StyleBox["0.9978`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[0.9978, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.6, 0}, {0.65, 1.1684}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{216.74183673469392`, 233.9928571428572}, {
          17.338249340874455`, 101.78000001235169`}}],
        StatusArea[#, 1.1684]& ,
        TagBoxNote->"1.1684"],
       StyleBox["1.1684`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.1684, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.65, 0}, {0.7, 1.3344}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{233.4928571428572, 250.74387755102043`}, {
          5.41225600685766, 101.78000001235169`}}],
        StatusArea[#, 1.3344]& ,
        TagBoxNote->"1.3344"],
       StyleBox["1.3344`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.3344, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.7, 0}, {0.75, 1.5748}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{250.24387755102043`, 
          267.49489795918373`}, {-11.85888132746544, 101.78000001235169`}}],
        StatusArea[#, 1.5748]& ,
        TagBoxNote->"1.5748"],
       StyleBox["1.5748`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.5748, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.75, 0}, {0.8, 1.8202}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{266.99489795918373`, 
          284.245918367347}, {-29.48923532847583, 101.78000001235169`}}],
        StatusArea[#, 1.8202]& ,
        TagBoxNote->"1.8202"],
       StyleBox["1.8202`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1.8202, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.8, 0}, {0.85, 2.0698}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{283.745918367347, 
          300.9969387755103}, {-47.421331329503474`, 101.78000001235169`}}],
        StatusArea[#, 2.0698]& ,
        TagBoxNote->"2.0698"],
       StyleBox["2.0698`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2.0698, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.85, 0}, {0.9, 2.2834}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{300.4969387755103, 
          317.7479591836735}, {-62.767067330382915`, 101.78000001235169`}}],
        StatusArea[#, 2.2834]& ,
        TagBoxNote->"2.2834"],
       StyleBox["2.2834`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2.2834, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.9, 0}, {0.95, 2.572}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{317.2479591836735, 
          334.49897959183676`}, {-83.50105333157116, 101.78000001235169`}}],
        StatusArea[#, 2.572]& ,
        TagBoxNote->"2.572"],
       StyleBox["2.572`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2.572, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0.95, 0}, {1., 2.852}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{333.99897959183676`, 
          351.25000000000006`}, {-103.6171866660573, 101.78000001235169`}}],
        StatusArea[#, 2.852]& ,
        TagBoxNote->"2.852"],
       StyleBox["2.852`", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[2.852, {}], 
       "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-0.02, 0},
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->{{
     StrokeForm[
      Opacity[0]], 
     StrokeForm[
      Opacity[0]]}, {Automatic, None}},
  FrameTicks->FrontEndValueCache[{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
     Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}}, {{{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox["1", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {2., 
        FormBox["2", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {3., 
        FormBox["3", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}}, None}, {{{0., 
        FormBox["0", TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.2, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.4, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.6, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {0.8, 
        FormBox[
         TagBox[
          InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
          NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}, {1., 
        FormBox[
         TagBox[
          InterpretationBox["\"1.0\"", 1., AutoDelete -> True], NumberForm[#, {
            DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}, {
         AbsoluteThickness[0.1]}}}, None}}],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  PlotRange->{{0., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.05]}},
  Ticks->{Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& , Charting`FindScaledTicks[
     (Charting`SimpleTicks[#, #2, 6]& )[
      SlotSequence[1]], {Identity, Identity}]& }]], "Output",
 CellChangeTimes->{
  3.814452285580062*^9, {3.814452342842074*^9, 3.81445235148345*^9}, {
   3.814452425286582*^9, 
   3.814452471186782*^9}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztXctSG0cUHQySjRMejlOxU5VKscgKA4WNJECAAAGSeQhRPAzYxiAEFCxS
STn8Qr4glQ/wJtsss8kqq+yzyS9kkR/IptPnTrc8gtFIAiEJcRYzmum+9/a5
5/Zj1GpNZ3Lnp8ff5s7P8rm+9Pvc96dn+R/6Ut+910ntbY7Tduo4zr99Dq6V
vjQnpfr7+89wwo3/dbd8dKj5+Xm1v78vx/T0dNw/+Z4kh9T6+rqamZnBndre
3lb5fN65pw4ODpx2tbu7K+mQHAky0+41o+/c8+bmppqYmJC7SJD6gyIUODKZ
jHr37p16+/atSiQS0cp9eP78uXr16pX2YW9vT4PQ2hd86BZ57aE6Pj6Wz2Qy
KTJeO8+ePVNra2uS/+bNGxWNRt3inC75CKsXL14IxqGhITU8PCySg4ODY5Ld
VSpbjI+OjgpQXI+NjQEqZJyY6HZWoqvZuMyy62BvxWVPTU2J05a4XC4HnWrN
ZLNZ9fLlS7keGRlRh4eHamBgIGoQwgw8xJ0NuFcdlG9sbMj15OQkquEFqhH3
lZWVQvUAZo19LDg7ZMqHTYRQu+FEg1U6TDY8sBXt6OhIiInH4yOVaaPezM3N
FbLRjmKxWIXakAY9NhttQLPqx2bIqIA9xNKqmDi2FbO4tLSkFhYWClLLy8uA
ORacHTblzs7Oqp2dHTQM05pLqnQYcFtbWyoSEWFbTStTDaMJi7quRlKlimpm
WW1kIwlZuuFKJS5RIUMe1nWMChZfv34N7DWh8L4pd3V1VaXTaU9TLUshfAcP
VVPoso9qBk9w6GZQqSpYByFo8HpAUOPj46Zvug55V2vFljw0CTMgOWVaUsgM
F4uLixgmLHGRYC3boSLLcGOcLqMSUqlUqlDfUOEx9ATxdbG9gufL7dV2v+hy
0f2iMyoMMCWzLSaMCei4YR/4dJmF8JdQtbwh/GjqeB7w8FamQDiObNuta/Fy
BVpVUItgGTV5CLGNVdc9qVvgNGzkvSMG/NRAzchS9BSEEnHoZ4C4f3LIGLTJ
wAWvMcBG/VVsfUS5Jycn0iJLiIZNMuAiCWHWY0MJaYsF/AED+n0cugYXyMDI
gq7QSwaeVDACAzuGOR0HS4Zb4aTrRhVEQbpQ96nxyIgUP8ggQCgUwYRAviCF
Ac3bBBAvNJNiKXQsqG1WymjJI6FSP334sI9TW0EeVnzkO42/jx8/FpKj3zx0
enDuVedrT3SGvsSV3HX7pHV50mCglFylaY2297Q3VFd7Ng22TGxMhStVF3QU
H5qoeZW6PJG0xntw7lXq1xGdgUR9JXddJs16gbtuT5qV6/bR9UtrtL1yZdTa
nk3zj5pfO9dpflH72qQ1O8GtHLDLfbe+dj5htJoxWvLI8wi9XACGq5bXTPaq
4bwW9mwaxo8LnCd9qn2j6SHdpLuGdPeaHqWzs5P81pbfdc+DKakltaSW1F76
pur9akxqr0xtPqDWkkbSSBpJI2mscoL0jvN2foVJL1JGykgZKSNlpOyOUtaM
v1E0EUc/NuEkN+khPaSH9JAe0lOGnkb/XthEfPzc4F9KSAWpIBWkglSQClJB
KkhFy1PxKODpu4V9/6WOPwTTbbpNt+k23b5pt6FyXsu1KE3k52839OMhXaSL
dJEu0kW6SBeb18VaLIJpIp/+rMEvo3SH7tAdukN36M4ddce+txQv0sJLynD3
B12ki7fBRUmTV9P83vrOSjyrXevWRD6ZdzvhfaB4vaFxzfkrYNb5dniEl3Ti
HYR4s/It98i+2dq+Ke2Wu/M3oRM6oRM6obce9KCFR02E9Z8qaSZMwiRMwiRM
wrybMCtdUVxHXP8F0EdIhERIhERIhERIhERIxZCgcm7X1PfUD4Ns0vSpAdIg
HoiBGIiBGIiBGIiBGK6OodYLf8oV+lXAQyXLY3ks78bKc9ztmLGcDHsC35Nz
e2GzecgIpM/rCgkbaWLNXjQadYv/so7Fy57JstAOW0LG43FB8LR+COzCOGxN
jp0pp6amXFDuxohuD103NHZ5qI2JRuXG5Is6xiQsZCAmJkd2A7e7I9cXCWoE
9l/HJt7YGhrbwGMD6nojcReEoqWikuDQLdkNzZPW7bA+lnedNTnlChis0iHa
pm3apu1Wtm3n1qvdsq+U7UQAbtqhHdqhHdppsB2/F3mUU8waANShDnVaUOcz
ZD/wpJ5d/9pnOiOdTrsiR0YkrCYnJ9Xu7q7MveDY2dlRiURCpPIFqUgkomKx
mHVA5okymYxXys5qwcj29rZKJpPOx394i+SeK2ln41KplDo8PFTZbPYiKpQB
Q/jEP6gPDg7ksxgV5o2AHXNG+M8rJtMwqeaVcklYXFwUAvCv2Pn5+aLiSvLX
9j/WVuzN\
\>"],ExpressionUUID->"6b1cb587-54df-437a-b3ef-a3f13164d667"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "\n\n",
 StyleBox["Normalizing constant and the Box-Muller method\n\n",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 "The normalizing constant is used to reduce any probability function to a \
probability density function with total probability of one. In probability \
theory, a normalizing constant is a constant by which an everywhere \
non-negative function must be multiplied so the area under its graph is 1, \
e.g., to make it a probability density function.\n\nLet\[CloseCurlyQuote]s \
start with a Gaussian function "
}], "Text",
 CellChangeTimes->{{3.813951173449437*^9, 3.813951188390725*^9}, {
  3.814031010194126*^9, 3.8140310624447927`*^9}, {3.8140310932911253`*^9, 
  3.814031122850204*^9}, {3.8140312071799717`*^9, 
  3.8140312241307573`*^9}},ExpressionUUID->"0d5af67b-f103-4a3b-8c19-\
18aa38015e59"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"p", 
     RowBox[{"(", "x", ")"}]}], "=", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["x", "2"]}], "/", "2"}]]}], ",", " ", 
   RowBox[{"x", " ", "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814031139750071*^9, 
  3.814031176154766*^9}},ExpressionUUID->"5bac7fb7-5b1c-495a-b876-\
de689200aad8"],

Cell["we have the corresponding Gaussian integral  ", "Text",
 CellChangeTimes->{{3.814031235776771*^9, 
  3.814031269663505*^9}},ExpressionUUID->"4cbda9ed-b90d-4892-9ef0-\
3c6d765aeb6d"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{"p", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "/", "2"}]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "=", " ", 
    SqrtBox[
     RowBox[{"2", "\[Pi]"}]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814031295484185*^9, 
  3.814031358026866*^9}},ExpressionUUID->"54f42878-cbc3-4464-afb2-\
53df3eab5313"],

Cell["\<\
If we use the latter\[CloseCurlyQuote]s reciprocal value as a normalizing \
constant for the former, defining a function \[CurlyPhi](x) as\
\>", "Text",
 CellChangeTimes->{{3.814031406035122*^9, 
  3.814031482985902*^9}},ExpressionUUID->"369f9b3c-e1f6-450d-aec5-\
61dfb7386711"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[CurlyPhi]", 
    RowBox[{"(", "x", ")"}]}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], "p", 
     RowBox[{"(", "x", ")"}]}], "=", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "/", "2"}]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814031496513815*^9, 
  3.814031558293763*^9}},ExpressionUUID->"421a0171-8072-4915-86dd-\
2f0f6be3b3d7"],

Cell["so the integral is unit", "Text",
 CellChangeTimes->{{3.814031579376033*^9, 
  3.814031585541685*^9}},ExpressionUUID->"4728323a-6e6e-4453-aa8e-\
2e403996f23b"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{"\[CurlyPhi]", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      FractionBox["1", 
       SqrtBox[
        RowBox[{"2", "\[Pi]"}]]], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "/", "2"}]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "=", "1"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814031600623313*^9, 3.814031634032823*^9}, {
  3.81403166786333*^9, 
  3.814031704274703*^9}},ExpressionUUID->"59c31df9-4f16-4a98-992e-\
5a6bdbd06262"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{
   FractionBox["1", 
    SqrtBox[
     RowBox[{"2", "\[Pi]"}]]], 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "/", "2"}]], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]}], "Input",
 CellChangeTimes->{{3.814031740614897*^9, 
  3.814031758906831*^9}},ExpressionUUID->"be0dafc4-1cbf-4787-a959-\
398f100108bc"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.814031723325094*^9, 3.814031759598496*^9}, 
   3.814041830613452*^9, 
   3.81404191821507*^9},ExpressionUUID->"57121049-6167-42df-85d1-\
7387dff1ca3d"]
}, Open  ]],

Cell[TextData[{
 "then the function \[CurlyPhi](x) is a probability density function and the \
constant ",
 Cell[BoxData[
  FractionBox["1", 
   SqrtBox[
    RowBox[{"2", "\[Pi]"}]]]], "DisplayFormula",
  CellChangeTimes->{{3.814031600623313*^9, 3.814031634032823*^9}, {
   3.81403166786333*^9, 3.814031704274703*^9}},ExpressionUUID->
  "74895bc7-8613-47c0-8a3b-05186cc51e1b"],
 "is the ",
 StyleBox["normalizing constant",
  FontVariations->{"Underline"->True}],
 " of the Gaussian function p(x).\n\nWe can find a pdf from a function as the \
latter example above, with  Mathematica functions : "
}], "Text",
 CellChangeTimes->{{3.814031775824828*^9, 3.814031827977487*^9}, {
   3.814031965004884*^9, 3.814031982531156*^9}, {3.814032299852592*^9, 
   3.8140323237437983`*^9}, 
   3.814032985528549*^9},ExpressionUUID->"29155f1c-6336-4042-8638-\
742b7d42a643"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"n", ",", "x", ",", "uv\[ScriptCapitalD]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"uv\[ScriptCapitalD]", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "/", "2"}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Normalize\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDF", "[", "uv\[ScriptCapitalD]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "and", " ", "eventually", " ", "extract", " ", "the", " ", "constant", " ",
     "with"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"n", "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}]}], "==", 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}]}]}], ",", "n"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8140319454966927`*^9, 3.814031953397998*^9}, {
   3.814032257419018*^9, 3.8140322671583652`*^9}, {3.814033472823305*^9, 
   3.8140334906922894`*^9}, {3.814033527610566*^9, 3.814033544081369*^9}, 
   3.8140342807338552`*^9},ExpressionUUID->"93176ac4-3948-4a21-8206-\
b730e6fac0e2"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   FractionBox[
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox["\[FormalX]", "2"], "2"]}]], 
    SqrtBox[
     RowBox[{"2", " ", "\[Pi]"}]]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.8140319551947193`*^9, 3.8140322678257103`*^9, {3.814033475182869*^9, 
   3.814033493294754*^9}, 3.8140335459419537`*^9, 3.8140418306614857`*^9, 
   3.814041918266387*^9},ExpressionUUID->"8ff902b8-129a-4b7d-a261-\
a28dfc31348b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"n", "\[Rule]", 
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8140319551947193`*^9, 3.8140322678257103`*^9, {3.814033475182869*^9, 
   3.814033493294754*^9}, 3.8140335459419537`*^9, 3.8140418306614857`*^9, 
   3.81404191828091*^9},ExpressionUUID->"57780f9e-3036-484c-abca-\
ef39c3ee13f8"]
}, Open  ]],

Cell["\<\

Or directly find the normalizing constant in this way :\
\>", "Text",
 CellChangeTimes->{{3.814033000884841*^9, 3.814033019448053*^9}, {
   3.814033505651142*^9, 3.814033508078927*^9}, 
   3.8140342693450613`*^9},ExpressionUUID->"f8c0916d-f660-4f9b-b8cb-\
f19e84b9970e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPsi]", "[", "x_", "]"}], ":=", 
   RowBox[{"n", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"x", "^", "2"}]}], "/", "2"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"condition", "=", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"\[CapitalPsi]", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
    "\[Equal]", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{"condition", ",", "n"}], "]"}]}], "Input",
 CellChangeTimes->{{3.814032327378357*^9, 3.814032365506135*^9}, {
   3.8140324665321493`*^9, 3.814032466619379*^9}, {3.8140325474886*^9, 
   3.814032611049219*^9}, 3.814032862105289*^9, {3.814033356181755*^9, 
   3.814033372049028*^9}},ExpressionUUID->"02d7a5ed-6d78-45ac-90c5-\
a607ca158520"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"n", "\[Rule]", 
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", " ", "\[Pi]"}]]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.814032341789085*^9, 3.814032366381043*^9}, 
   3.814032467414496*^9, 3.814032548409816*^9, {3.814032580028987*^9, 
   3.814032612246504*^9}, 3.814032863293084*^9, 3.814033373325934*^9, 
   3.814033551093602*^9, 3.814041830703745*^9, 
   3.814041918328421*^9},ExpressionUUID->"bcf112ae-a718-4470-ac98-\
002b5be6d7dc"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n\nSo we introduced the normalizing constant to a Gaussian function to get \
the Gaussian integral. Now let\[CloseCurlyQuote]s see the\n",
 StyleBox["Box-Muller method",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 " for sampling a normal gaussian distribution using stochastic variables \
with a uniform distribution (effectively (there is no closed-form expression \
for the distribution function of a standard normal so we \
can\[CloseCurlyQuote]t use the inversion method).\n\nWe start where we \
started for the normalizing constant  "
}], "Text",
 CellChangeTimes->{{3.814035201203101*^9, 3.814035344778418*^9}, {
   3.814035387595373*^9, 3.814035404918499*^9}, {3.8140354591663857`*^9, 
   3.814035466277294*^9}, {3.814035810279767*^9, 3.81403583923848*^9}, 
   3.814038067488483*^9, {3.8140397270674133`*^9, 
   3.814039745270958*^9}},ExpressionUUID->"24c91df3-cdfc-4481-ac9c-\
41a48d5ceed6"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{"p", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["x", "2"]}], "/", "2"}]], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "=", " ", 
    SqrtBox[
     RowBox[{"2", "\[Pi]"}]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814031295484185*^9, 
  3.814031358026866*^9}},ExpressionUUID->"b1e82de1-66ed-47ff-b0c7-\
ed9da6cd386e"],

Cell["this time in order to prove the above, we introduce ", "Text",
 CellChangeTimes->{{3.814035448299769*^9, 
  3.814035482343175*^9}},ExpressionUUID->"15b5ce0b-e4d0-4132-b469-\
f2e386a7195f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", "2"]}], "/", "2"}]], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], ")"}], "2"], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       RowBox[{
        SuperscriptBox["y", "2"], "/", "2"}]}]], 
     RowBox[{"\[DifferentialD]", "x"}], 
     RowBox[{"\[DifferentialD]", "y"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81403550603372*^9, 
  3.814035563050252*^9}},ExpressionUUID->"7b7e863b-7a1c-4165-b179-\
c96e08b3e897"],

Cell[TextData[{
 "and replace x and y with r and \[Theta] .. (if x and y are two points in \
the Cartesian plane they can be represented in polar coordinates with a \
radius r and an angle \\theta)\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1:eJzt3c+O7EhWwGEDG5a8Am/BliXbQTzAjOgZsWmkHiTEjmflRYo7k5Djrkw7
/edExImI79MI0beqnHbm8S+cruy+f/+7f//N7/96WZY//u2P//Ob3/7nP/7y
y2//65//7sc//MvPf/y3P/z807/+08//8dMffvrlH373Nz/+8L//6sf/+fH9
f/r/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDL19dX610A
oAH9B5jQ15+13gsAqnqUX/8B5qT/AHPa6v8X0InK0WAYW8Mzz1DlP9LGcXmn
9VPyWRc7GWKeIyXc1vDMM1QJj7RchC/8VKcrQsJdKmSeIyWc/mc40mp1DdlU
F8tBhn2oY54jJZz+tzrSJv0stOWEa4EBho/0v7JUkSxkhmPMwxPLZfpfWrYL
48qmPfBqPJ+EM1Q3TZ79V56QQjyBhDNU1+jbR56iWJ49whmqUzTtMk/aTZ40
whmq4xTsJqvnHZ4rwhmqj/QqnIXgAk8R4QzVFo2qwDN8nCeHcIbqLVGqzBP+
kaeFcIZqTYXa8nZgh2eDcIbqSXmSsAq85XkgnKGSmrS8LmueBMLNPFSuM7vg
NXqY+dgpZNqhkpSOWAKWiU9VypltqJSkazO/fLMdLxVMNVQz12MY076IUx0s
dUwyVHMWY2yzvaaTHCY1zTBUY4fi6+t/Dv6v9Z7GG/uV/WaGY6SygYdqjBsF
gVUfdYEY44X+aOBDo5VRh6rHJjRvcvMduKzHl/usUY+LhoYcqo46kL+0+fdw
raOX/qwhD4q2xhuq5AXo8er6qYudH/WNwGCHQwYjDVXaEz9/M69Je1BpJ+GO
kY6FJIYZqpynfM48hsu5ECSchzuGORDy6H2ocv7iL2cPK8h24Aln47IBDoFs
uh6qVPEf9SbPNXmejTwTclPv+09C/Q5VnpM6Q+Uyy/D8DLAK9LvnpNXpUGU4
l5Nc3/ai+dOV6t3iBT3uM8l1N1QZTmHZvyPPKtBqH67pbofJr6+han7yKn+U
JKtAqx24oK+9pQsdDZXyj6fhs9rdEtDRrtKLXoaq4dmq/KW1eob7WgJ62U86
0sVQNTlPm/++cjZNnu3mdxSPy7+HdCf5ULU6PWW/lRb/1dM+loDku0ePMg9V
kxPTNX8GDVeBmg96SuZ9o1Nph0r5qfyKJF8C0u4Y/co5VJXPROXPrP4SUO3h
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
988O/acQF/9QWuC/BQCB9B9K039y0n8oTf/JSf+hNP0nJ/2H0vSfnPQfStN/
cvLhT6jgzmmi/xSi/1CB/pOQ/kMFgX8RDETRf6hA/0nIL3+hgpD/CkTInsCT
/kMF+k9C+g8V6D8J6T9UoP8kpP9Qgf7TxP6Hh/UfKtB/6lvPzNv50X+oQP+p
T/8hA/2nsteBOfIn5x9F/+ED/acy/Z/WF/ncf01DZoNJvA7M2z+5OZ/6n9CP
F6VJ4thx9aW8uwXm9DowR/7k/KPofzp/7r/XZSj6zyn6P6dH/L0ug9F/TtH/
OYn/kPSfs758/nMy4j8q/ecs/Z+N/o9K/7lg/8MD+j8S8R+Y/hNO/0ei/wPT
f8Lp/zDEf2z6Tzj9H4PPfA5P/wmn/2MQ/+HpP+H0fwAu/ofnv/9ACffnSnaa
E//h6T8l6H/vXPwPz3//jUJC5kp8GhL/4ek/heh/11z8z0D/KUT/uyb+M9B/
CtH/fon/JPSfQvS/X/o/Cf2nEP3vlPjPQ/8pRP87pf/z0H8K0f8eif9U9J9C
okZLjqrxmc+pfK203hdGo//dEf+pPE9P/Sec/vfFxf9s9J9y9L8v4j8b/acc
/e+Ii/8J6T/l6H9HxH9C+k85gZ8ukKaixH9O+k85z9HS/+T0f0LrazP9J5z+
d0H857Q+MfWfcPrfBf2fk/5T1Lr/loCcxH9a+k9R6+nS/4R85nNa367K9J9w
+p+c+E/r2ymp/4SL7f9iCQjl4n9m+k9p+p+Z+M9M/yntW//dAsrDxf/k9J/S
vg2Y/uch/jN7vR7Tf8KF93+xBERw8T+515NR/wn32n9vATIQ/8npPxW8zpj+
Nyf+6D8VlOj/Ygm4R/8n9/aduP4TTv+zEX/enob6Tzj9z0b/0X/qeNt/vwJo
RfzZOgf1n3Bvx8xbgCZ85pNl+wTUf8Lpfx7iz6L/VLTVf0tAZS7+WXbPPv0n
3Nak6X9l4s+ye+rpP+F2+u+3wNW4+OdB/6lpZ9i8BahG/Fk+XXfpP+H0vznx
52H/pNN/wu333xJQgf7zoP9Utj9v+l+a+PPw8YpL/wn3sf9+C1yU/vPw8VzT
f8J9HDlvAcoRf570n/rq9H+xBLzwmU+ejrzX1n/CHem/twAliD9PR84y/Sfc
kanzFiCci3/W9J8m9L8J8efp4Lts/Sfcwf67BRTIxT9Px88v/SfcwcGzBAQS
f56On1n6T7jjs+cuUAgX/6zpPw3pf2Xiz9Opd9b6T7hT/bcE3CT+rJ06p/Sf
cKfGT/9v0n/W9J+29L8a8Wft7Htq/Sfc2f5bAi7Tf9bOnk36T7izE2gJuEb8
WbtwKuk/4c4OVWD/l2mWAJ/55JsL55H+E+5a/70FOEX8Wbt2Euk/4S4MlbcA
p7j455trZ5D+s3bwKuLr116/WuhxD29t8DCKP2uXTx/952k9DPuDceerOz/l
LcARLv5Zu3PtpP88Zei/twAfiT9rd84a/efh+G2cI3eHLu+DJWCf+PON/nPf
qf7vh/rOULkLtE//Wbt5yaT/PFy7/n/7PR8XiP3diJ3JkWop/qzdPMvCzzX6
dfljPCGf/1n/rCVgi/6zdv9M0f85vV4AJOn/UmAJGKOZ4s9ayGmi/zzk6f/i
LtALn/lkLeoaSf95+nhj/+2fl+u/JeBJ/FmLOjv0n6ed/m99aev3vyE7Ywl4
cPHPN/pPCVvVfV0OdiYwaqhKfD6hx4qKP2uBl0b6Tzj9D+Tin7XY98X6T7jY
/k9+C0j8eSrw0Tj9J1jsfM68BLj456nMuaD/BAsf0WmXAPHnqcztUP0nWIkp
nXAJEH+eSpwCi/5TQImhmvB3wfrPQ6H4L/pPAeX6P88SIP48FYr/ov8UUG5W
51kC9J8n/acj5YZqkiVA/Hkqd/Nn0X8KKDpUxW6EZumtz3zyVDT+i/5TQIX+
D7wEiD8PpeO/6D8FlB6qgZcAF/88VIj/ov8UUGGoRl0CxJ+HCvFf9J8C6gzV
eEuAi38e6lz8L/pPAdWGarAlQPxZKsZ/0X8KqDlUJT8aVzXF4s9SN/6L/lNA
/f4PsAToP5Xjv+g/BVQeqgGWAPGnfvwX/aeA+kPV+xKg/9SP/6L/FNBkqPpd
AsSfJhf/i/5TQKuhKr0ElAi1z3zSKv6L/lNAw6GqcCrFtlr8J9cw/ov+U0Db
oapwNkUV+8jFf6HVwaKTQdv4L61PVYaUof9dLAFH4l+u/5aAtprHf2l9qjKk
5kNVbQm4k9CPF/+lE20JaOVrpfmetN0BxpNhqKqdX5cT2vDiv872eStP/Jcc
pyqDSTJUmZeAaxf/r3+4s5Ej32wJqC9J+R/y7AnDyDNUaZeAaxf/31aN/UVE
/xPKc+X/kGdPGEaqoar2dvv4J/mPfNvW97z2//gW9L+tbPFfkp2qjCHbUFW+
47pz3b7+38eN7F/Yn93IwRtKFJIw/ku+U5UB5ByqykvAOrxbXzq4hbNf3doN
/W8lZ/yXrKcqXUs7VJVPwyP38E/97MGvvv02/W8lbfyXxKcq/co8VPXfBawD
u/O+4O3P7m/24BKw83D6X1Sqj3q+lXbH6Ffyoar/oaC3d/6v9f/4739fH/r4
o3Bf/vgv6U9VepR/qOqcm/t3/sM//3kh8vpfSP7yP+TfQ7rTxVBVWAIK9X/r
T/Q/iV7iv3RyqtKXjoaq6Kn6sfAff/xsnE/1X/xL6Cj+S1enKr3oa6iaLAH3
PwJ6fLP6X0cXN/y/6WhX6UV3Q1V5CThe3VOJPvVZU/GP1WP8lw5PVfLrcaiK
nr9vP/9z/GfvP27sZvmmx/I/9LjPJNfpUHV6CUdbXc9Mp7tNZl0PVdenMzUN
cMHQ756TVu9DNcB5TVFfv9Z6d67reufJaYChGuPspoSRZmOAQyCbYYZqmNOc
ECOV/2GYAyGPkYZqsPOdy8aL/zLWqUoSgw3VMDd7uWzUV3+8I6K58YbKEjCt
sV/3IQ+KtgYeqrFrwNoMi/6ox0VDYw/V8E1ghvI/jH10NDHDUM2TiNlM9bLO
cIxUNslQWQLGM9urOc+RUs1sQ2UV6N20S/lUB0sdEw7VtAHp3deL1ntU1WzH
SwXTDtXMJemOF2uZ+FSlnMmHavJLyvy8Ok+THz4lGKpFZPKxLr/yJBDOUK1p
TgZehbc8FYQzVN+ITyue+X2eE8IZqi1yVMfrrR7P9lueFsIZqh3SVJrn9jjP
D+EM1REWglieyQs8UYQzVKdYCO7w7N3huSKcobpGyo7zXIXwpBHOUN0kbls8
M7E8e4QzVFHk7u0zMOHzUIinkXCGKtxUDdxp/qiH3Irnk8u2hsdQlTNkG4c8
qC54erlM/9se6X42w+MZvrW0zW++A9XMc6TE2jlP5xmqVEd6ZDm4s8PXfrb0
XpWQbX/KmedICfQYG/1PfqQH29tK66dnU+Z9izXPkRJua3jmGarujlTnj+hx
n6+Z50gJt9N/oAuVo8EwDA/AqPavE/QfYE76DzAn/QeYk/4DzEn/AQAAAABg
KuP9auDgvy856r9cOd4RLdO/pg/jHRHNDTZU68PZP7TBDvzh+OF3ZPLX9Gns
o6O+8S6TJm+F/pffnTbGO1Vp62v3Pw3do9dj2Tq6kY766fjhd2Ty1/RhvFOV
JEYaqlOtGO8usf6P95qujXpcNDTSUF27VhzmGdD/j9/TtSEPirZGGqrLARzj
SZi8/9e+rSPjHREV7L8v7neoXo9r8lbo/4Vv68h4R0RzIw3V5K3Q/wvf1pHx
jojmBhuqIzeBh+zkw5D3wCd/TZ/GOyKaG2yodlqx9aWRnoEhj2vy1/RpyIOi
rfGGauuXHa/pGPKzgkMe1+Sv6cOoxwUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAET5X7A06Kc=
     "], {{0, 384}, {512, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
     Automatic],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{334., Automatic},
   ImageSizeRaw->{512, 384},
   PlotRange->{{0, 512}, {0, 384}}]], "Input",ExpressionUUID->
  "beb7fc7b-dd47-49d8-8678-c95d16326e13"]
}], "Text",
 CellChangeTimes->{{3.814035691864523*^9, 3.814035705699093*^9}, {
  3.814037758785924*^9, 3.814037888393609*^9}, {3.814039118099819*^9, 
  3.814039141787444*^9}, {3.81403918106485*^9, 
  3.8140392177318974`*^9}},ExpressionUUID->"2b294240-9121-44fe-8db2-\
b55ac12d8e3e"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"x", "=", 
   RowBox[{"r", " ", "Cos\[Theta]"}]}],
  FontColor->RGBColor[1, 0.5, 0]], "\n", 
 StyleBox[
  RowBox[{"y", " ", "=", 
   RowBox[{"r", " ", "Sin\[Theta]"}]}],
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.81401187097372*^9, 3.814011952446507*^9}, {
   3.8140121003871603`*^9, 3.814012103712912*^9}, {3.814012199516828*^9, 
   3.814012219948537*^9}, 3.8140125040557747`*^9, {3.814014194505498*^9, 
   3.814014194910331*^9}, {3.814018924688466*^9, 3.8140189636976137`*^9}, {
   3.814020751892941*^9, 3.814020753152001*^9}, {3.814035571378036*^9, 
   3.8140356855852757`*^9}},ExpressionUUID->"85f0d406-b60a-4b9b-a1ea-\
331baf6c92a1"],

Cell["this develop as ", "Text",
 CellChangeTimes->{{3.8140358591941433`*^9, 
  3.8140358639199057`*^9}},ExpressionUUID->"903d3258-d40a-41cf-8857-\
7078d3b3fd15"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], "=", 
   SuperscriptBox["r", "2"]}],
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["Tan", 
     RowBox[{"-", "1"}]], 
    FractionBox["y", "x"]}], "=", "\[Theta]"}],
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.8140358724910107`*^9, 3.8140359490378447`*^9}, {
  3.814037932820467*^9, 
  3.814037935758168*^9}},ExpressionUUID->"0e5c0688-e45a-4945-a878-\
0d0cdd2f8c5b"],

Cell["\<\
Notice that if r \[LessEqual] 1 and theta \[Epsilon] [0 , 2pi], then we map \
out values contained in the unit circle, as shown in the figure below. Also \
note that random variables in such a circle can be generated by transforming \
values sampled from the uniform distribution. Specifically, radii can be \
sampled from r ~ U(0,1) and angle can be sampled from theta ~ 2pi * U(0,1). A \
similar mechanism (i.e. drawing points in a circle using uniform variables) \
is at the heart of the Box-Muller transform for sampling Normal random \
variables \
(https://theclevermachine.wordpress.com/2012/09/11/sampling-from-the-normal-\
distribution-using-the-box-muller-transform/)
\
\>", "Text",
 CellChangeTimes->{{3.814037941989911*^9, 3.814038048857717*^9}, {
  3.814038092235704*^9, 
  3.814038096127223*^9}},ExpressionUUID->"b57a5216-3cd0-4647-9ffe-\
5fa77a2f9978"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   FractionBox[
    RowBox[{"\[PartialD]", 
     RowBox[{"(", 
      RowBox[{"x", ",", "y"}], ")"}]}], 
    RowBox[{"\[PartialD]", 
     RowBox[{"(", 
      RowBox[{"r", ",", "\[Theta]"}]}]}]], "=", "r"}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8140358724910107`*^9, 3.8140359490378447`*^9}, {
  3.814037932820467*^9, 
  3.814037935758168*^9}},ExpressionUUID->"6c41a0b3-5268-4a12-9264-\
528232dd90a8"],

Cell["Being the latter a Jacobian, we show that", "Text",
 CellChangeTimes->{{3.814036030643612*^9, 
  3.814036045786352*^9}},ExpressionUUID->"30261b12-12e7-4aa1-a053-\
4a74d55b8878"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox[
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      RowBox[{"\[DifferentialD]", "x"}], 
      RowBox[{"\[DifferentialD]", "y"}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        RowBox[{
         SuperscriptBox["y", "2"], "/", "2"}]}]]}]}],
    FontSize->18], 
   StyleBox["=",
    FontSize->18], 
   RowBox[{
    StyleBox[
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       RowBox[{"2", "\[Pi]"}]], 
      RowBox[{
       RowBox[{"\[DifferentialD]", "\[Theta]"}], 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
        RowBox[{"\[DifferentialD]", 
         SuperscriptBox["rr\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["r", "2"]}], "/", "2"}]]}]}]}]}],
     FontSize->18], 
    StyleBox["=",
     FontSize->18], 
    RowBox[{
     RowBox[{
      StyleBox["2",
       FontSize->18], 
      StyleBox["\[Pi]",
       FontSize->18], 
      RowBox[{
       StyleBox[
        SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"],
        FontSize->18], 
       RowBox[{
        StyleBox[
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", "u"}]],
         FontSize->18], 
        StyleBox[
         RowBox[{"\[DifferentialD]", "u"}],
         FontSize->18], 
        StyleBox[" ",
         FontSize->18], 
        StyleBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"where", " ", "u"}], "=", 
           FractionBox[
            SuperscriptBox["r", "2"], "2"]}], ")"}],
         FontSize->12]}]}]}], 
     StyleBox["=",
      FontSize->18], 
     StyleBox[
      RowBox[{
       RowBox[{"2", "\[Pi]", 
        SuperscriptBox[
         SubscriptBox[
          RowBox[{"(", 
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"-", "u"}]]}], ")"}], "0"], "\[Infinity]"]}], "=", 
       RowBox[{"2", "\[Pi]"}]}],
      FontSize->18]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8140360794082403`*^9, 
  3.8140363053511267`*^9}},ExpressionUUID->"988284e4-affb-4f0e-a726-\
142d6fd2dcd8"],

Cell["therefore eq.1 is true, same for the following", "Text",
 CellChangeTimes->{{3.8140363751893597`*^9, 3.8140363936165333`*^9}, {
  3.8140364258843813`*^9, 3.814036431349226*^9}, {3.814036743965349*^9, 
  3.8140367441919394`*^9}},ExpressionUUID->"ae106719-6351-4dc8-9688-\
c8fc97555ea6"],

Cell[BoxData[
 StyleBox[
  RowBox[{"1", "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], "/", "2"}]}], ")"}]}]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814036437903805*^9, 3.81403644974104*^9}, {
  3.814036621519802*^9, 
  3.814036630069738*^9}},ExpressionUUID->"7f190317-2416-4233-97e5-\
5d7e1aeacf95"],

Cell["\<\

Now let\[CloseCurlyQuote]s define a new function like\
\>", "Text",
 CellChangeTimes->{{3.814036654843871*^9, 3.814036668971797*^9}, 
   3.81403673793649*^9},ExpressionUUID->"fba777b8-ce5c-4a32-af77-\
968dcafa4b2d"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"U", 
    RowBox[{"(", "R", ")"}]}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{
     SubscriptBox["\[Integral]", 
      RowBox[{
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}], "\[LessEqual]", 
       SuperscriptBox["R", "2"]}]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         RowBox[{
          SuperscriptBox["y", "2"], "/", "2"}]}], ")"}]}]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814036674422277*^9, 3.814036707696546*^9}, {
  3.814036757309705*^9, 
  3.814036760818761*^9}},ExpressionUUID->"d7e8db73-4b7a-49a9-8e1c-\
9e5a5d1a9226"],

Cell[TextData[{
 "the integral interval is in ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], "\[LessEqual]", 
   SuperscriptBox["R", "2"]}]], "DisplayFormula",
  CellChangeTimes->{{3.814036674422277*^9, 3.814036707696546*^9}, {
   3.814036757309705*^9, 3.814036760818761*^9}},ExpressionUUID->
  "c068d82c-1956-4378-bf30-8188ad10221f"]
}], "Text",
 CellChangeTimes->{{3.8140370228324127`*^9, 
  3.814037036201663*^9}},ExpressionUUID->"ab797967-6038-468c-841a-\
a9f481feb5a8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"U", 
    RowBox[{"(", "R", ")"}]}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "\[Pi]"}]], 
     StyleBox[
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", 
        RowBox[{"2", "\[Pi]"}]], 
       RowBox[{
        RowBox[{"\[DifferentialD]", "\[Theta]"}], 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "R"], 
         RowBox[{"\[DifferentialD]", 
          SuperscriptBox["rr\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["r", "2"]}], "/", "2"}]]}]}]}]}],
      FontSize->18]}], "=", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", 
       FractionBox[
        SuperscriptBox["R", "2"], "2"]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "u"}]], 
       RowBox[{"\[DifferentialD]", "u"}]}]}], "=", 
     RowBox[{"1", "-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox["R", "2"], "2"]}]]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814037046615099*^9, 
  3.814037166314837*^9}},ExpressionUUID->"e6cea2e9-4916-43ff-9201-\
2f26d7451267"],

Cell["\<\

Now as of all the above \
\>", "Text",
 CellChangeTimes->{{3.8140373952289553`*^9, 
  3.814037407424087*^9}},ExpressionUUID->"47f5132a-76e8-4cd9-b35f-\
6f305f00cd25"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"U", 
    RowBox[{"(", "R", ")"}]}], "=", 
   RowBox[{
    RowBox[{"p", "\[Implies]", "R"}], "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{"Log", "[", 
       RowBox[{"1", "-", "p"}], "]"}]}]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8140374181339283`*^9, 3.81403744544153*^9}, {
  3.8140390530351954`*^9, 
  3.814039055754755*^9}},ExpressionUUID->"d1ae0c2c-55fd-4d26-a565-\
962082e724b7"],

Cell["\<\

where s=1-p \[Epsilon] (0,1) and t \[Epsilon] (0,1)\
\>", "Text",
 CellChangeTimes->{{3.81403833800495*^9, 3.814038361338187*^9}, 
   3.81403856856225*^9},ExpressionUUID->"cf14b712-7369-4010-a87a-\
aac56239d03f"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"x", "=", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           SqrtBox[
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{"Log", "[", "s", "]"}]}]], 
           RowBox[{"Cos", "[", 
            RowBox[{"2", "\[Pi]t"}], "]"}]},
          {
           SqrtBox[
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{"Log", "[", "s", "]"}]}]], 
           RowBox[{"Sin", "[", 
            RowBox[{"2", "\[Pi]t"}], "]"}]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], "\[IndentingNewLine]"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 RowBox[{"Eventually", ",", " ", "generalized"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"z", "=", 
   RowBox[{"\[Mu]", "+", 
    RowBox[{"\[Sigma]", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Log", "[", "s", "]"}]}]], 
     RowBox[{"Cos", "[", 
      RowBox[{"2", "\[Pi]t"}], "]"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"z", "=", 
   RowBox[{
    StyleBox["\[Mu]",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    StyleBox["+",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     StyleBox["\[Sigma]",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "2"}], 
       RowBox[{"Log", "[", "s", "]"}]}]], 
     RowBox[{"Sin", "[", 
      RowBox[{"2", "\[Pi]t"}], "]"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814038393083107*^9, 3.8140384025582533`*^9}, {
  3.814038456488962*^9, 3.8140385342728777`*^9}, {3.814038809042884*^9, 
  3.814038866825201*^9}, {3.814039058956027*^9, 3.814039076975617*^9}, {
  3.814039792700942*^9, 
  3.814039859370657*^9}},ExpressionUUID->"998198ca-264c-4ade-9ad2-\
4616faf7a6ec"],

Cell["\<\

So basically the procedure for the Box-Muller method is to draw two uniform \
indipendent variates, 
one for R and another for \[Theta] and then transform\[CloseCurlyQuote]em \
into Cartesian coordinates.\
\>", "Text",
 CellChangeTimes->{{3.814038597904297*^9, 3.814038716724523*^9}, 
   3.81403876530431*^9, {3.814038939748292*^9, 
   3.8140389525719023`*^9}},ExpressionUUID->"2cdfec61-e49b-4c05-8591-\
2199ff91e997"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"boxMuller", "[", 
     RowBox[{"s_", ",", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"r", "=", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "2"}], 
          RowBox[{"Log", "[", "s", "]"}]}]]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "*", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", "\[Pi]", "*", "t"}], "]"}]}], ",", 
         RowBox[{"r", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", "\[Pi]", "*", "t"}], "]"}]}]}], "}"}]}]}], "]"}]}], 
   ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "with", " ", "two", " ", "uniform", " ", "variates", " ", "get", " ", 
    "two", " ", "normal", " ", "variates"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"boxMuller", "[", 
   RowBox[{
    RowBox[{"RandomReal", "[", "]"}], ",", 
    RowBox[{"RandomReal", "[", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "123456", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ggx", ":=", 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"-", "2"}], 
     RowBox[{"Log", "[", 
      RowBox[{"RandomReal", "[", "]"}], "]"}]}]], 
   RowBox[{"Cos", "[", 
    RowBox[{"2", "\[Pi]", "*", 
     RowBox[{"RandomReal", "[", "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"ggx", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"10", "^", "4"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{"data", ",", "64", ",", "\"\<PDF\>\""}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.814038991361846*^9, 3.814039045068308*^9}, {
  3.814039257786745*^9, 3.814039275403067*^9}, {3.8140393223617*^9, 
  3.814039394584392*^9}, {3.814039426422841*^9, 3.814039475723361*^9}, {
  3.814039517007522*^9, 3.814039583990727*^9}, {3.814039877282587*^9, 
  3.8140398791508703`*^9}, {3.814040779396226*^9, 3.8140407858311033`*^9}, {
  3.814040843837175*^9, 3.8140410898779583`*^9}, {3.814041161221388*^9, 
  3.814041164437825*^9}, {3.814041257815257*^9, 3.81404132517798*^9}, {
  3.8140414036653337`*^9, 3.8140414193185053`*^9}, {3.8140414586301403`*^9, 
  3.814041506783738*^9}, {3.814041619909062*^9, 
  3.814041759408936*^9}},ExpressionUUID->"0c23d4d2-8878-4ca4-be02-\
05ec0249f977"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5188938105215362`", ",", 
   RowBox[{"-", "0.3476950865287024`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8140393466419687`*^9, 3.814039395333935*^9}, {
   3.814039438465267*^9, 3.814039483104447*^9}, {3.814039517975503*^9, 
   3.814039584627089*^9}, 3.814039880871591*^9, 3.814040864613592*^9, 
   3.814040932389625*^9, {3.8140409902626047`*^9, 3.81404104712455*^9}, {
   3.8140410853743687`*^9, 3.814041101008976*^9}, {3.814041165297701*^9, 
   3.814041169268688*^9}, {3.814041263318851*^9, 3.8140413276286983`*^9}, {
   3.814041406391747*^9, 3.814041420987219*^9}, {3.814041467916506*^9, 
   3.814041507789063*^9}, {3.814041630068716*^9, 3.8140417629472857`*^9}, 
   3.814041830713086*^9, 
   3.814041918346479*^9},ExpressionUUID->"76206359-68e5-48ec-9bcb-\
f85c5ebf399e"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.147], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.147], Thickness[Small]}], 
      RectangleBox[{-4., 0}, {-3.9, 0.001},
       RoundingRadius->0], RectangleBox[{-3.6, 0}, {-3.5, 0.001},
       RoundingRadius->0], RectangleBox[{-3.4, 0}, {-3.3, 0.002},
       RoundingRadius->0], RectangleBox[{-3.3, 0}, {-3.2, 0.002},
       RoundingRadius->0], RectangleBox[{-3.1, 0}, {-3., 0.003},
       RoundingRadius->0], RectangleBox[{-3., 0}, {-2.9, 0.007},
       RoundingRadius->0], RectangleBox[{-2.9, 0}, {-2.8, 0.007},
       RoundingRadius->0], RectangleBox[{-2.8, 0}, {-2.7, 0.009},
       RoundingRadius->0], RectangleBox[{-2.7, 0}, {-2.6, 0.007},
       RoundingRadius->0], RectangleBox[{-2.6, 0}, {-2.5, 0.022},
       RoundingRadius->0], RectangleBox[{-2.5, 0}, {-2.4, 0.017},
       RoundingRadius->0], RectangleBox[{-2.4, 0}, {-2.3, 0.03},
       RoundingRadius->0], RectangleBox[{-2.3, 0}, {-2.2, 0.03},
       RoundingRadius->0], RectangleBox[{-2.2, 0}, {-2.1, 0.037},
       RoundingRadius->0], RectangleBox[{-2.1, 0}, {-2., 0.045},
       RoundingRadius->0], RectangleBox[{-2., 0}, {-1.9, 0.056},
       RoundingRadius->0], RectangleBox[{-1.9, 0}, {-1.8, 0.075},
       RoundingRadius->0], RectangleBox[{-1.8, 0}, {-1.7, 0.084},
       RoundingRadius->0], RectangleBox[{-1.7, 0}, {-1.6, 0.091},
       RoundingRadius->0], RectangleBox[{-1.6, 0}, {-1.5, 0.106},
       RoundingRadius->0], RectangleBox[{-1.5, 0}, {-1.4, 0.139},
       RoundingRadius->0], RectangleBox[{-1.4, 0}, {-1.3, 0.152},
       RoundingRadius->0], RectangleBox[{-1.3, 0}, {-1.2, 0.176},
       RoundingRadius->0], RectangleBox[{-1.2, 0}, {-1.1, 0.229},
       RoundingRadius->0], RectangleBox[{-1.1, 0}, {-1., 0.24},
       RoundingRadius->0], RectangleBox[{-1., 0}, {-0.9, 0.238},
       RoundingRadius->0], RectangleBox[{-0.9, 0}, {-0.8, 0.249},
       RoundingRadius->0], RectangleBox[{-0.8, 0}, {-0.7, 0.295},
       RoundingRadius->0], RectangleBox[{-0.7, 0}, {-0.6, 0.299},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 0.368},
       RoundingRadius->0], RectangleBox[{-0.5, 0}, {-0.4, 0.369},
       RoundingRadius->0], RectangleBox[{-0.4, 0}, {-0.3, 0.38},
       RoundingRadius->0], RectangleBox[{-0.3, 0}, {-0.2, 0.377},
       RoundingRadius->0], RectangleBox[{-0.2, 0}, {-0.1, 0.389},
       RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 0.421},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 0.423},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 0.393},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 0.4},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 0.399},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 0.382},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 0.335},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 0.302},
       RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 0.289},
       RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 0.299},
       RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 0.257},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 0.217},
       RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 0.213},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 0.183},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 0.163},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 0.135},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 0.11},
       RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 0.125},
       RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 0.079},
       RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 0.063},
       RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 0.06},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 0.041},
       RoundingRadius->0], RectangleBox[{2.1, 0}, {2.2, 0.044},
       RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 0.032},
       RoundingRadius->0], RectangleBox[{2.3, 0}, {2.4, 0.033},
       RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 0.015},
       RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 0.012},
       RoundingRadius->0], RectangleBox[{2.6, 0}, {2.7, 0.007},
       RoundingRadius->0], RectangleBox[{2.7, 0}, {2.8, 0.007},
       RoundingRadius->0], RectangleBox[{2.8, 0}, {2.9, 0.006},
       RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 0.007},
       RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 0.004},
       RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 0.004},
       RoundingRadius->0], RectangleBox[{3.2, 0}, {3.3, 0.004},
       RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 0.001},
       RoundingRadius->0], RectangleBox[{3.4, 0}, {3.5, 0.001},
       RoundingRadius->0], RectangleBox[{3.5, 0}, {3.6, 0.001},
       RoundingRadius->0], RectangleBox[{3.6, 0}, {3.7, 0.001},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], Thickness[Large], Opacity[1.], 
       LineBox[CompressedData["
1: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
fp+i1LfGgmvNGtjiFkXs//Yv4f/3L/8HKURbYA==
        "]]},
      Annotation[#, "Charting`Private`Tag$108622#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-4.154, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{-4., 3.7}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8140393466419687`*^9, 3.814039395333935*^9}, {
   3.814039438465267*^9, 3.814039483104447*^9}, {3.814039517975503*^9, 
   3.814039584627089*^9}, 3.814039880871591*^9, 3.814040864613592*^9, 
   3.814040932389625*^9, {3.8140409902626047`*^9, 3.81404104712455*^9}, {
   3.8140410853743687`*^9, 3.814041101008976*^9}, {3.814041165297701*^9, 
   3.814041169268688*^9}, {3.814041263318851*^9, 3.8140413276286983`*^9}, {
   3.814041406391747*^9, 3.814041420987219*^9}, {3.814041467916506*^9, 
   3.814041507789063*^9}, {3.814041630068716*^9, 3.8140417629472857`*^9}, 
   3.814041830713086*^9, 
   3.8140419184800797`*^9},ExpressionUUID->"a396bb4a-7b90-4ae1-be2d-\
5300b035f987"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================\n",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "\nThere are other methods for drawing random variates from distributions as \
the inversion method can't be always used because while a cdf is always \
available what is not it's his inverse. Another populare method is the \
rejection sampling.\n\nHow works ",
 StyleBox["Rejection Sampling",
  FontSize->18,
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 "\n\nAssume that we want to draw samples from a target distribution, p(x) \
that is hard or impossible to directly sample from. But we have a method to \
draw samples from another distribution that is easy to sample from, called \
the ",
 StyleBox["proposal distribution,",
  FontSlant->"Italic"],
 " q(x).  Given a sample from the proposal distribution, we can calculate its \
probability from the target distribution and then keep the sample if it is a \
true draw, but reject it if not. How do we know if it is representative of a \
true draw from the target distribution?\n"
}], "Text",
 CellChangeTimes->{{3.81401187097372*^9, 3.814011952446507*^9}, {
   3.8140121003871603`*^9, 3.814012103712912*^9}, {3.814012199516828*^9, 
   3.814012219948537*^9}, 3.8140125040557747`*^9, {3.814014194505498*^9, 
   3.814014194910331*^9}, {3.814018924688466*^9, 3.8140189636976137`*^9}, {
   3.814020751892941*^9, 3.814020753152001*^9}, {3.814035571378036*^9, 
   3.814035632846602*^9}, {3.814036484230688*^9, 3.8140364853498707`*^9}, {
   3.8140372222022448`*^9, 3.8140372364004593`*^9}, {3.8140376400815763`*^9, 
   3.814037652754616*^9}, 3.814038086907194*^9, {3.814038330535922*^9, 
   3.814038332647702*^9}, {3.8140394949833937`*^9, 
   3.8140394998180943`*^9}},ExpressionUUID->"c0106cf8-74fb-413f-b63a-\
842aaff51674"],

Cell["We want to draw samples from this target distribution \
p\[ScriptCapitalD]:", "Text",
 CellChangeTimes->{
  3.814018817772594*^9},ExpressionUUID->"003f1226-ebfb-4786-a2b2-\
0c018333c71a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"p\[ScriptCapitalD]", ",", "q\[ScriptCapitalD]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p\[ScriptCapitalD]", "=", 
   RowBox[{"MixtureDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CauchyDistribution", "[", "]"}], ",", 
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1", ",", 
         RowBox[{"1", "/", "5"}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"PDF", "[", "p\[ScriptCapitalD]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"p\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.814017910297635*^9, 3.814017910299008*^9}, {
  3.814017941909012*^9, 3.814017984704548*^9}, {3.814018033618679*^9, 
  3.814018070974375*^9}, {3.814018102742271*^9, 3.814018130372141*^9}, {
  3.8140187704836473`*^9, 3.814018824258485*^9}, {3.814018897078991*^9, 
  3.814018898000683*^9}, {3.814019262485457*^9, 3.8140192645488253`*^9}, {
  3.814019515334856*^9, 3.8140195819174232`*^9}, {3.8146203042599297`*^9, 
  3.81462031299004*^9}},ExpressionUUID->"45d03943-cf7b-4287-9625-\
36dacc5fee8e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ","}], "]"}]], "Input",
 CellChangeTimes->{{3.814620325990765*^9, 
  3.814620325992374*^9}},ExpressionUUID->"25e3ffab-f05c-43be-acdd-\
7002091b7ff4"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4zmUYB/D3KJuWvR2SsrJXtsjKipIyQqHhKEVZJbOMQpllbyGbENkk
W0pDSAntRVF97vzxue7v/VzX+77Pc/9+zznJnVJa9kiVSCSS+D7pWr2YdC2X
lS+oXTnKX/rm6ibmyCepIM+iuzya3eTXj6Se3Ib+rCWztb6UkUtzJ6UoSQmK
U4w7uJ2i3EYRbuVuHqAfa8jku16gsNyNUewin7VXqSvfT19Wk9Ha8xSSZ/Ml
5fUz44zyj9STV8T+5Z3klV+hjjyJI7E//QRay99SXV4Ue5FXkUHuQ7I8iy8o
p5/BY/IPcRZ5eexT3kEeeQS15Ykcjhno36SV/A3V5IVxBnkl6eXeFJRn8jll
9dN5NJ4ndeV34wzydnLLw6klT+BQzFn/BvfJfVhBOv1zFJC7MIJt5LI2jJpy
S3qznLTWniW/PIPPKKOfRmd5OFvJqR9KDfl3Gsvr4pxyW3UXB+O5q+NpIXdU
P+JsnFG9iwWxP/2Z2Ddb4pz642oaepFPfz5mzhEu60+pzdgYc4q5qu3Yywn9
CbU0b9NJ3zn2w8V4X+I9YFnMIN5FdTsfyDnUIVSXf6ORvDbmKh+Id1geR3P5
a6rK82Nm8jJSy8+QV36EoWwhu7XBVJOb0YulXG/tafLI0/g07pP+LTrKQ9hM
Nv3LMTN5PPvjLunH0jTmRxV5Xvy+vITr5J7kli/RVN4QM5E/oZQ8lQ7yBWrL
S2Ofcd/UbbwvZ1UHUVX+lYbympiD/KC6M56rXFh9nXvlDuo+TsuV1blxznjX
1M28I3+spiKFXPrv4n3nMH/qv4rv4r2Yh/6s+jB7OB6zUksyhfZxh+NZc4Dz
cV/jfrAkZqdvrW5lk5xFfYkq8i80kFfHPOV9FJJfo4nck8Uk6XuQU27HIDZy
i7UXqRz3gBQWJRL//xF+ihzi1DgvJfST4xxxXmrGLGIv8gZulgdSSf6Ze+RV
MVe5jbqDD+VkdQyN5Paxxqm4r/FZ5sRe9afVFvEcWag/pv6rPqlmV8+pXTjE
H/qTcWbWx1zjHVcfYjfH4r1RizMp1uMdV/dzTq6hLo5ZyK3iPsWzk29SB1BR
/on68sqYr7yXgvJoGsYzp6I8O2YnL+AfntBnUydzlGL6ibSVB7KeG/X9qSCP
YQ8F9KNoEGdmPld53FrWeH8ZwDpusNaP8jH3+E3mcYXu1rPEs45nFGeK34vP
kJlMZCQD6UlHWtKQOu553Efif3S5mEHsgbn8TTff/x+HPPE9
         
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl1VWYVmUUgNEZuhtBeuju7g5BYmgE6TJAVCxQFBRBQREpEUUFg+7u7gYV
ELFRsQtMWPvxYs1+97mY/5xvzg9JA0Ymj0hMSEi46kfMYX78bb7NXbSkGilI
SSpSk4a0pCM9GchIJjKThaxkIzs5yMlwv/8f8x3uphXVGeN6Fjbqx+lJrrgH
1/413+UeWjPFtcIc0i9Qg7H2rGzST9CL2faynNWvkDs+0/6f+R73ssBek090
G6bqIhzWL7JGt+QnXTPuTWdjs95ldmGcXmI25Gt93OzPHXqOWY4POWc/GNf5
grn2TWY7LvOH/ZQ5KH4Pt8QzmzfMc+Yic7vZic8YYV9o1uIin9qPmHdyW5yN
mcQRvc/swTS91mzFz7pWnJfOzhb9JEt1I77RvePsdHne16+SJ84uXhYWGyNp
S23GuZaDrfop+pCXeMkSWaLvo12cr70oR/VLrNOt+UXXiXvROdmmd5tdGa+X
mY25xLf2E+YArsSz2+eaFTjPB/ZDZm++ZJ59s3l7/M25Zj9tDo7n5dZ4HjNF
PC9L7TvMZEbF98KsHeevj5p943fpaWYxjun9Zk+m6/VmG37VdeNMdC626z1m
Nybo5WYTruq+cc66Yrw3+jW26PZc1/niDHVKlun74/uk6/C5bh/nqYtzXL9M
Pcbbc7NDP00/5tkrxVnp18nPKHsqlusH6EB9JsQ7yU79DP0pEJ/vWmpW6Afj
u6rrxjuuOzJdl+CEnsGGeD/5TTeIe9F52KX3mt2ZqFeYTfmY7+wnzYHxt44z
MStzIdgPm334ivn2rWaH+E7wp/2MOSTeFwrGc5lp4v1gpX2n2TnOj9Hx74NZ
j4/ivbEfM/vRKc7TLMlJfcDsxUy90WzL77phnJHOy279LAPjjO1VuKjfoFCc
mT0tq/RDJNOIifE+skdPYhCFGe1aOlbrh+kc52ovxSk9i8bxmfZ87NWTWamb
8b0ezHxdNZ5Rv0mR+Hx7etboR1ik68e56i7M1KU5rWfTJO7Nnp99+jlW6eb8
oIfEc+pqXNJvkRT3bc/AWv0oi3UDruiu8Qy6DGf0HJrGM9gLsF8/z2rdgh/1
0HgGXT3eF72AovEM9oys04/RjWZxn/EecEBPYRjF4l5cy8R6PYbuNKc4JShJ
KUpThrKUozwVqEglKlMlPtPvyswGPZYetIj7d60QB/VUhsfZ2GtwWS9km+7I
X/qsOTTx//+nq9pvAhs7714=
         "]]},
       Annotation[#, "Charting`Private`Tag$14863#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.01248274147383434},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{-3, 4}, {0.01248274147383434, 0.7713390430119564}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814018898806275*^9, 3.81401926608113*^9, 3.814019528633065*^9, {
   3.81401955905783*^9, 3.814019582778318*^9}, 3.814020549205195*^9, 
   3.814021452023201*^9, 3.8140418309270363`*^9, 3.814041918579487*^9, {
   3.814620300291753*^9, 
   3.814620313958205*^9}},ExpressionUUID->"c93d8376-4cbc-4e03-b9b2-\
30b41c472c6a"]
}, Open  ]],

Cell["\<\
but the only algorithm we have to draw samples from, is this one:\
\>", "Text",
 CellChangeTimes->{3.81401883349652*^9, 
  3.814019953229651*^9},ExpressionUUID->"6632a931-d4d4-4823-9402-\
c89d48f50181"],

Cell[BoxData[
 RowBox[{
  RowBox[{"q\[ScriptCapitalD]", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{".5", ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.814017910297635*^9, 3.814017910299008*^9}, {
  3.814017941909012*^9, 3.814017984704548*^9}, {3.814018033618679*^9, 
  3.814018070974375*^9}, {3.814018102742271*^9, 3.814018130372141*^9}, {
  3.8140187704836473`*^9, 
  3.814018840920641*^9}},ExpressionUUID->"9a234527-744a-4c6a-a42a-\
e4d028a3bc15"],

Cell[TextData[{
 "The idea is to first find M such that p(x) < M \[Cross] q(x), i.e. that ",
 StyleBox["PDF[p\[ScriptCapitalD],x] < M* PDF[q\[ScriptCapitalD],x]",
  FontColor->RGBColor[1, 0.5, 0]],
 ". \nIe. we want M \[Cross] q(x) to be higher than p(x) over the range where \
p(x)>0.  "
}], "Text",
 CellChangeTimes->{{3.814018871974729*^9, 3.814018884186245*^9}, {
  3.814019248216362*^9, 
  3.814019249452538*^9}},ExpressionUUID->"fa9e2974-0298-4f06-a8ad-\
5b2068697269"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"p\[ScriptCapitalD]", ",", "x"}], "]"}], ",", 
     RowBox[{"20", "*", 
      RowBox[{"PDF", "[", 
       RowBox[{"q\[ScriptCapitalD]", ",", "x"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "3"}], ",", "4"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",ExpressionUUID->\
"000298f8-af56-4d32-be38-3b5e665505eb"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
H4XH/H+P//8//z+mqByh
    "], {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4zmUYB/D3kE3L3g5Ne6+MhEKZUVK2jIajFDKTWUZDGYnsGbKPENlk
j5SGkBJNDZp87vrjc93f+7mu932f5/79nnOSO6W06JkmkUgk8X3S/3Vt2kQi
lfLyBQvdOMqf+mbqRubIJ6kkz6KHPI5dFNKPob7cmoHxnWSz1p9yclnKUJpS
lKQExbmd27iVW7iZm6jHgwxgDVl913MUk7szlp0UtPYSdeUH6M9qsljrR1F5
Nl9QUT8zzij/SH15Rexf3kEB+UXukidzJPann0gr+RtqyotiL/IqMst9SZZn
8TkV9DPoKv8QZ5GXxz7l7eSXR1NHnsThmIH+DVrKX1NDXhhnkFeSSe5DEXkm
n1Fe/zaPxvOkrvxunEHeRj55FHfKEzkUc9a/zv1yX1aQUf8sheUujGYrea2N
pLbcgj4sJ4O1Zygkz+BTyumn01kexRby6EdQS/6Ne+XUOKfcRt3JwXju6gSa
yx3UfZyNM6p3sCD2pz8T+2ZznFN/XE1Pbwrqz8fMOcIf+lNqUzbEnGKualv2
cEJ/Qi3LNDrpO8d++C7el3gPWBYziHdR3cYHcm51ODXlX2kkr425ygfiHZZf
o5n8FdXl+TEzeRnp5KcpIHdkBJvJZW0YNeSm9GYp11h7ivzydD6J+6R/iw7y
cDaRU/9CzEyewP64S/pXaRLzo5o8L35fXkJauRf55Ms0kdfHTOSPKS1Ppb18
gTry0thn3Dd1K+/LOdShVJd/oaG8JuYgP6TuiOcqF1NfobHcXt3LabmqOjfO
Ge+auol35I/UNKSQV/9tvO8c5pL+y/gu3ot56M+qj7Cb4zErtRRv0i7ucDxr
DnA+7mvcD5bE7PSt1C1slLOrz1NNvkgDeXXMU95LUfll7pN7sZgkfU/yyG0Z
ygZutDaEqnEPSGFRIvHfH+EnyS1OjfNSUj8lzhHnpXbMIvYir+cGeTBV5J+5
R14Vc5Vbq9v5UE5Wx9NIbhdrnIr7Gp9lTuxVf1ptHs+Rhfpj6hX1CTWXek7t
wiF+15+MM7Mu5hrvuPowuzgW741agsmxHu+4up9zci11ccxCbhn3KZ6dfL06
iMryT9wtr4z5ynsoIo+jYTxzKsuzY3byAv7lcX1OdQpHKa6fRBt5MOu4Tj+Q
SvJ4dlNYP5YGcWbm8w+PWcsR7y+DSOVaawOoGHOP32Qef9PDevZ41vGM4kzx
e/EZspGVLGQmExnJQHrSxT2P+0j8j64QM4g9MJe/6O77rwJ3t/DX
         "]]]}, {}, 
      {RGBColor[0.880722, 0.611041, 0.142051], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwV1GWYVVUUBuA7hIRFdw3doNKtiIhgEErX0IgMjXSH0t2NkgoiYAfYYrdi
Bxh0N77rx8v+1nf24bn33H0mOSW1Rf80iUQiiQP+OcKetInEXgq6sNvalu3c
QHM28opr12gir+RxeRdnaWBeQD35BS7RyLyUzvIyfqSUeSQF5OE8xxnq6+ZT
V+7EUg5SUjeC/PIwdnKaerp51JE7soQfKBGfi3zyUHZwirq6udSWO7CY7ymu
G05eeQjPcpI6ujnUktuziO8ophtGHnkwz3CC2rrZ1JTbsZBvKaobSm55ENs5
Ti3dLGrIbVnANyTrhpBLHsg2jlFTN5Pqchvm8zVFdIPJKQ9gK0epoZtBNbk1
8/iKwrpB5JBT2cIRquuepKr8CHP5kkK6gWSXq/Awc/iCgvoBZJPvoBWz+ZwC
+lSyylm4lVu4mZu4kcxk4nZaMovPyO++/mSUb6MFM/mUfPrHyCDHId7Mf1TT
PUFluTkz+IS8un5xjuWXucq95hXx/8ib+Jeq5ulUkvdykbvNS3hITlibsjqe
k/lj8siPkl5OH/vYwEvxnKybuSI3ti6PzxG/hXUradjB/azl6XgXrC0j80+c
LWsVplHR/Ly1DdtIy04eYB17XN9lbcUmLsRZtjZkMQ/G72rdwnX5PuuqeGbx
fK1P8ZGc29qXdHK6uI/1vGi+zD3ysvjecpK1GWvifvPfcQ7kqVSQd3Oeu8yL
4rPK0zlALnOf+B5yXzZyOM6Cbgrl4/tyjjvNC+NZydP4kJzm3vEc5T5s4FCc
F91kysnNmMoH5ND1IkkuS1Om8D7Z9T1JyNf9LbzGVa5wmUtc5AJl4tkxmffI
5r4enHettLkJk3iXrPrunHOtVJw7JvJOvBP6bpx1rbd5PX9RWTeJknFumMDb
8f7oUjhjfy/zOv6kkm4iJeK3YTxvxbum68pp+3ua1/IHFXUTKC43Yhz7473U
deGU/T3Ma/idCrrxFIv3gbHsi3dY15mT9nc3r+Y3yuvGUVRuyBjejPdd14kT
9nczr+JXyunGkhznhNG8QWZdR47bn2JeyS/x2+nGUCTOBaN4nUy6Dhyzv6t5
BT9TRjeawnIDRvIaGXXtOWp/F/NyfqK0bhSF5PqM4FUy6NrxP4YZ2nY=
         
         "]]]}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwl1VWYVmUUgNEZuhtBeuju7g5BYmgE6TJAVCxQFBRBQREpEUUFg+7u7gYV
ELFRsQtMWPvxYs1+97mY/5xvzg9JA0Ymj0hMSEi46kfMYX78bb7NXbSkGilI
SSpSk4a0pCM9GchIJjKThaxkIzs5yMlwv/8f8x3uphXVGeN6Fjbqx+lJrrgH
1/413+UeWjPFtcIc0i9Qg7H2rGzST9CL2faynNWvkDs+0/6f+R73ssBek090
G6bqIhzWL7JGt+QnXTPuTWdjs95ldmGcXmI25Gt93OzPHXqOWY4POWc/GNf5
grn2TWY7LvOH/ZQ5KH4Pt8QzmzfMc+Yic7vZic8YYV9o1uIin9qPmHdyW5yN
mcQRvc/swTS91mzFz7pWnJfOzhb9JEt1I77RvePsdHne16+SJ84uXhYWGyNp
S23GuZaDrfop+pCXeMkSWaLvo12cr70oR/VLrNOt+UXXiXvROdmmd5tdGa+X
mY25xLf2E+YArsSz2+eaFTjPB/ZDZm++ZJ59s3l7/M25Zj9tDo7n5dZ4HjNF
PC9L7TvMZEbF98KsHeevj5p943fpaWYxjun9Zk+m6/VmG37VdeNMdC626z1m
Nybo5WYTruq+cc66Yrw3+jW26PZc1/niDHVKlun74/uk6/C5bh/nqYtzXL9M
Pcbbc7NDP00/5tkrxVnp18nPKHsqlusH6EB9JsQ7yU79DP0pEJ/vWmpW6Afj
u6rrxjuuOzJdl+CEnsGGeD/5TTeIe9F52KX3mt2ZqFeYTfmY7+wnzYHxt44z
MStzIdgPm334ivn2rWaH+E7wp/2MOSTeFwrGc5lp4v1gpX2n2TnOj9Hx74NZ
j4/ivbEfM/vRKc7TLMlJfcDsxUy90WzL77phnJHOy279LAPjjO1VuKjfoFCc
mT0tq/RDJNOIifE+skdPYhCFGe1aOlbrh+kc52ovxSk9i8bxmfZ87NWTWamb
8b0ezHxdNZ5Rv0mR+Hx7etboR1ik68e56i7M1KU5rWfTJO7Nnp99+jlW6eb8
oIfEc+pqXNJvkRT3bc/AWv0oi3UDruiu8Qy6DGf0HJrGM9gLsF8/z2rdgh/1
0HgGXT3eF72AovEM9oys04/RjWZxn/EecEBPYRjF4l5cy8R6PYbuNKc4JShJ
KUpThrKUozwVqEglKlMlPtPvyswGPZYetIj7d60QB/VUhsfZ2GtwWS9km+7I
X/qsOTTx//+nq9pvAhs7714=
         "]]},
       Annotation[#, "Charting`Private`Tag$109205#1"]& ], 
      TagBox[
       {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJwV02WAVUUYBuC7u9LdsCCwdEp3d6Ms3bCEKAi2goKC0mALotiIdIPdCSgq
JqjYAdIsXT7fj2fnnffOmXvO7LlpGZPSJyYlEont/hxkUEoikY03kxOJybSi
NHfpqvCz/CQjOGT9YF123jKfQmvKcLeuKvvkpxjJYeuH6HLwduxJG8oyVVeN
X+SlZHDE+qG6nLwTe9KWNKbpqvOr/DSjOGr9MF0u3o09aUc57tHV4Df5GUZz
zPrhuty8F3vSnvLcq6vJ7/KzjOG49SN0eXg/9qQDFZiuu4o/5OcYywnrR+ry
8kHsSUcqMkNXiz/l57mWTOszdPn4MPakE5W4T1ebv+QXGMdJ60fp8vNR7Eln
KnPKZ6P1Bfg4rqcLVTjtszH6gnxifj9dqcoZn53lHOe5wEUucTlelHg21xXi
U3km3ahGUjyHvjDb5Vl0p3p8h64Of8svch3J8Ry6IuyQZ9ODx8zbcEreTI34
HvO6/CMv43pSYh9dUXbKc+jJ4+ZtOS1voWbci3k9/pVfiv+p3J0kxpsvMXbk
vPxqnLF8NVeE+D5jMT6L643pzI13z9iVy/JKY7+4Tl5kbMc6zpi/bOzDJrbG
/9zYkw2ksJoBbI73KM7CWJ+17DdfbuzNRpbHO2bswXqSWUV/JsTv09iJC/IK
Y19ei3M3XkOWYD7eWJzP5Xnxu5C7kYh15ouN7Tkrb6NWnLF5Aw7EM3FD/L7N
O3NRfp2sTDAvwS55Pr2ozVxdQ/6Le2Mi2WIfXSpfyAtIpw7ZY42+JF/KC+lN
XXKQk1zkJg95yUd+CjDJdaX4Sn6APtSjIDfqr2S3/CB9qU8hbtKX5mv5IfrR
IM5J14iD8f+O/SnMzboyfCM/TH8axrPrGnNIXhXfSRFu0ZXlW/kRBtAonl3X
hMPy6rgPinKrLo3v5EcZSOM4D11Tjshr4j4oxm26cnwfvycG0STOQNeMo/La
uA+Kc7uuPD/E74fBNI1z0TXnmLwu7oMS3KGrwJ541xlCszgrXQuOy+vjPkjl
Tl1F9sZ7xVCax1npWnJC3hD3QUkm6yrxo/wEw2gRZ6VrRaa8Me6DUkzRVeYn
eQnD4zrzDpyTX6FlnJ15a07Km+K+WGrehUvyGyyTe5GVNQxkS7wrPvsfeOPZ
AQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$109205#2"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{-3, 4}, {0., 7.9788444500766715`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.814018784254508*^9, 3.814018903450273*^9, 
  3.814019270147092*^9, 3.8140195337387333`*^9, 3.8140195888073483`*^9, 
  3.814020549281156*^9, 3.814021452107353*^9, 3.8140418309972277`*^9, 
  3.814041918647464*^9},ExpressionUUID->"5265b17c-d4d1-4721-beff-\
e26012309a83"]
}, Open  ]],

Cell["\<\
Now draw a sample x\[CloseCurlyQuote] from the proposal distribution, q\
\[ScriptCapitalD], and another sample, u,  from the uniform distribution \
(between 0 and 1). 
Only count the sample x\[CloseCurlyQuote], if u*M*PDF[q\[ScriptCapitalD],x\
\[CloseCurlyQuote]] < PDF[p\[ScriptCapitalD],x\[CloseCurlyQuote]].

Effectively, we are drawing a sample from a uniform distribution between 0 \
and M \[Cross] q(x), and testing if it\[CloseCurlyQuote]s probability is \
below p(x). \
\>", "Text",
 CellChangeTimes->{{3.814019024482471*^9, 
  3.8140190366459312`*^9}},ExpressionUUID->"807b4995-b40e-43ab-b3a1-\
6331d8ef3be0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "u", ",", "M", ",", "gH", ",", "gp\[ScriptCapitalD]"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", ":=", 
   RowBox[{"RandomVariate", "[", "q\[ScriptCapitalD]", " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", ":=", " ", 
   RowBox[{"RandomVariate", "[", 
    RowBox[{"UniformDistribution", "[", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"M", " ", "=", " ", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"samples", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"u", "<", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"PDF", "[", 
              RowBox[{"p\[ScriptCapitalD]", ",", 
               RowBox[{"x0", "=", "x"}]}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"M", "*", 
               RowBox[{"PDF", "[", 
                RowBox[{"q\[ScriptCapitalD]", ",", "x0"}], "]"}]}], ")"}]}], 
            ")"}]}], " ", "&&", " ", 
          RowBox[{
           RowBox[{"Abs", "[", "x", "]"}], "<", "3"}]}], ")"}], ",", 
        "\[IndentingNewLine]", "x0", ",", 
        RowBox[{"(*", "else", "*)"}], "\[IndentingNewLine]", "Null"}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"10", "^", "4"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gH", "=", 
   RowBox[{"Histogram", "[", 
    RowBox[{"samples", ",", "64", ",", "\"\<PDF\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"gp\[ScriptCapitalD]", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"PDF", "[", 
       RowBox[{"p\[ScriptCapitalD]", ",", "x"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "3"}], ",", "4"}], "}"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"gH", ",", "gp\[ScriptCapitalD]"}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.814019131688149*^9, 3.814019163483282*^9}, {
  3.814019387156365*^9, 3.814019448447311*^9}, {3.814019637514441*^9, 
  3.814019684381302*^9}, {3.8140197161313953`*^9, 3.814019731922454*^9}, {
  3.814019903752203*^9, 3.814019912801303*^9}, {3.8140199977397614`*^9, 
  3.814020036259467*^9}, {3.8140200689522*^9, 3.8140201153691273`*^9}, {
  3.814020157737306*^9, 3.814020226382472*^9}, {3.8140418067061996`*^9, 
  3.814041812961348*^9}},ExpressionUUID->"75d03c39-6bbd-4a43-89a5-\
7f9e498c9b13"],

Cell[BoxData[
 GraphicsBox[{{
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.147], Thickness[Small]}], {}, 
     {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
      Opacity[0.147], Thickness[Small]}], 
      RectangleBox[{-3.7, 0}, {-3.6, 0.003487966515521451},
       RoundingRadius->0], 
      RectangleBox[{-3.3, 0}, {-3.2, 0.006975933031042902},
       RoundingRadius->0], 
      RectangleBox[{-3., 0}, {-2.9, 0.010463899546564353},
       RoundingRadius->0], 
      RectangleBox[{-2.9, 0}, {-2.8, 0.006975933031042902},
       RoundingRadius->0], 
      RectangleBox[{-2.8, 0}, {-2.7, 0.017439832577607256},
       RoundingRadius->0], 
      RectangleBox[{-2.7, 0}, {-2.6, 0.017439832577607256},
       RoundingRadius->0], 
      RectangleBox[{-2.6, 0}, {-2.5, 0.024415765608650157},
       RoundingRadius->0], 
      RectangleBox[{-2.5, 0}, {-2.4, 0.010463899546564353},
       RoundingRadius->0], 
      RectangleBox[{-2.4, 0}, {-2.3, 0.024415765608650157},
       RoundingRadius->0], 
      RectangleBox[{-2.3, 0}, {-2.2, 0.04185559818625741},
       RoundingRadius->0], 
      RectangleBox[{-2.2, 0}, {-2.1, 0.055807464248343215},
       RoundingRadius->0], 
      RectangleBox[{-2.1, 0}, {-2., 0.03836763167073596},
       RoundingRadius->0], 
      RectangleBox[{-2., 0}, {-1.9, 0.06975933031042902},
       RoundingRadius->0], 
      RectangleBox[{-1.9, 0}, {-1.8, 0.03836763167073596},
       RoundingRadius->0], 
      RectangleBox[{-1.8, 0}, {-1.7, 0.06627136379490757},
       RoundingRadius->0], 
      RectangleBox[{-1.7, 0}, {-1.6, 0.06278339727938612},
       RoundingRadius->0], 
      RectangleBox[{-1.6, 0}, {-1.5, 0.08719916288803628},
       RoundingRadius->0], 
      RectangleBox[{-1.5, 0}, {-1.4, 0.06975933031042902},
       RoundingRadius->0], 
      RectangleBox[{-1.4, 0}, {-1.3, 0.12207882804325078},
       RoundingRadius->0], 
      RectangleBox[{-1.3, 0}, {-1.2, 0.06627136379490757},
       RoundingRadius->0], 
      RectangleBox[{-1.2, 0}, {-1.1, 0.08719916288803628},
       RoundingRadius->0], 
      RectangleBox[{-1.1, 0}, {-1., 0.09766306243460063},
       RoundingRadius->0], 
      RectangleBox[{-1., 0}, {-0.9, 0.11510289501220788},
       RoundingRadius->0], 
      RectangleBox[{-0.9, 0}, {-0.8, 0.16044645971398674},
       RoundingRadius->0], 
      RectangleBox[{-0.8, 0}, {-0.7, 0.22322985699337286},
       RoundingRadius->0], 
      RectangleBox[{-0.7, 0}, {-0.6, 0.22322985699337286},
       RoundingRadius->0], RectangleBox[{-0.6, 0}, {-0.5, 0.177886292291594},
       RoundingRadius->0], 
      RectangleBox[{-0.5, 0}, {-0.4, 0.21625392396232995},
       RoundingRadius->0], 
      RectangleBox[{-0.4, 0}, {-0.3, 0.23020579002441577},
       RoundingRadius->0], 
      RectangleBox[{-0.3, 0}, {-0.2, 0.23020579002441577},
       RoundingRadius->0], 
      RectangleBox[{-0.2, 0}, {-0.1, 0.22322985699337286},
       RoundingRadius->0], RectangleBox[{-0.1, 0}, {0., 0.2057900244157656},
       RoundingRadius->0], RectangleBox[{0., 0}, {0.1, 0.22671782350889433},
       RoundingRadius->0], RectangleBox[{0.1, 0}, {0.2, 0.24764562260202302},
       RoundingRadius->0], RectangleBox[{0.2, 0}, {0.3, 0.21625392396232995},
       RoundingRadius->0], RectangleBox[{0.3, 0}, {0.4, 0.22671782350889433},
       RoundingRadius->0], RectangleBox[{0.4, 0}, {0.5, 0.22322985699337286},
       RoundingRadius->0], RectangleBox[{0.5, 0}, {0.6, 0.20927799093128707},
       RoundingRadius->0], RectangleBox[{0.6, 0}, {0.7, 0.3348447854900593},
       RoundingRadius->0], RectangleBox[{0.7, 0}, {0.8, 0.5127310777816533},
       RoundingRadius->0], RectangleBox[{0.8, 0}, {0.9, 0.7185211021974189},
       RoundingRadius->0], RectangleBox[{0.9, 0}, {1., 0.788280432507848},
       RoundingRadius->0], RectangleBox[{1., 0}, {1.1, 0.819672131147541},
       RoundingRadius->0], RectangleBox[{1.1, 0}, {1.2, 0.7185211021974189},
       RoundingRadius->0], RectangleBox[{1.2, 0}, {1.3, 0.4673875130798744},
       RoundingRadius->0], RectangleBox[{1.3, 0}, {1.4, 0.317404952912452},
       RoundingRadius->0], RectangleBox[{1.4, 0}, {1.5, 0.16044645971398674},
       RoundingRadius->0], RectangleBox[{1.5, 0}, {1.6, 0.09417509591907917},
       RoundingRadius->0], RectangleBox[{1.6, 0}, {1.7, 0.05929543076386467},
       RoundingRadius->0], RectangleBox[{1.7, 0}, {1.8, 0.06278339727938612},
       RoundingRadius->0], RectangleBox[{1.8, 0}, {1.9, 0.03139169863969306},
       RoundingRadius->0], RectangleBox[{1.9, 0}, {2., 0.03836763167073596},
       RoundingRadius->0], RectangleBox[{2., 0}, {2.1, 0.048831531217300314},
       RoundingRadius->0], 
      RectangleBox[{2.1, 0}, {2.2, 0.020927799093128707},
       RoundingRadius->0], RectangleBox[{2.2, 0}, {2.3, 0.03139169863969306},
       RoundingRadius->0], 
      RectangleBox[{2.3, 0}, {2.4, 0.013951866062085804},
       RoundingRadius->0], RectangleBox[{2.4, 0}, {2.5, 0.03139169863969306},
       RoundingRadius->0], RectangleBox[{2.5, 0}, {2.6, 0.03836763167073596},
       RoundingRadius->0], 
      RectangleBox[{2.6, 0}, {2.7, 0.024415765608650157},
       RoundingRadius->0], 
      RectangleBox[{2.7, 0}, {2.8, 0.024415765608650157},
       RoundingRadius->0], 
      RectangleBox[{2.8, 0}, {2.9, 0.017439832577607256},
       RoundingRadius->0], RectangleBox[{2.9, 0}, {3., 0.05929543076386467},
       RoundingRadius->0], RectangleBox[{3., 0}, {3.1, 0.027903732124171608},
       RoundingRadius->0], RectangleBox[{3.1, 0}, {3.2, 0.03836763167073596},
       RoundingRadius->0], 
      RectangleBox[{3.2, 0}, {3.3, 0.027903732124171608},
       RoundingRadius->0], RectangleBox[{3.3, 0}, {3.4, 0.03139169863969306},
       RoundingRadius->0], 
      RectangleBox[{3.4, 0}, {3.5, 0.013951866062085804},
       RoundingRadius->0], 
      RectangleBox[{3.5, 0}, {3.6, 0.010463899546564353},
       RoundingRadius->0], 
      RectangleBox[{3.6, 0}, {3.7, 0.006975933031042902},
       RoundingRadius->0], 
      RectangleBox[{3.7, 0}, {3.8, 0.010463899546564353},
       RoundingRadius->0], 
      RectangleBox[{3.8, 0}, {3.9, 0.006975933031042902},
       RoundingRadius->0], RectangleBox[{3.9, 0}, {4., 0.010463899546564353},
       RoundingRadius->
        0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}}, {GraphicsComplexBox[CompressedData["
1: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
     "], {{{}, 
       {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
        GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4zmUYB/D3KJuWvR2SsrJXtsjKipIyQqHhKEVZJbOMQpllbyGbENkk
W0pDSAntRVF97vzxue7v/VzX+77Pc/9+zznJnVJa9kiVSCSS+D7pWr2YdC2X
lS+oXTnKX/rm6ibmyCepIM+iuzya3eTXj6Se3Ib+rCWztb6UkUtzJ6UoSQmK
U4w7uJ2i3EYRbuVuHqAfa8jku16gsNyNUewin7VXqSvfT19Wk9Ha8xSSZ/Ml
5fUz44zyj9STV8T+5Z3klV+hjjyJI7E//QRay99SXV4Ue5FXkUHuQ7I8iy8o
p5/BY/IPcRZ5eexT3kEeeQS15Ykcjhno36SV/A3V5IVxBnkl6eXeFJRn8jll
9dN5NJ4ndeV34wzydnLLw6klT+BQzFn/BvfJfVhBOv1zFJC7MIJt5LI2jJpy
S3qznLTWniW/PIPPKKOfRmd5OFvJqR9KDfl3Gsvr4pxyW3UXB+O5q+NpIXdU
P+JsnFG9iwWxP/2Z2Ddb4pz642oaepFPfz5mzhEu60+pzdgYc4q5qu3Yywn9
CbU0b9NJ3zn2w8V4X+I9YFnMIN5FdTsfyDnUIVSXf6ORvDbmKh+Id1geR3P5
a6rK82Nm8jJSy8+QV36EoWwhu7XBVJOb0YulXG/tafLI0/g07pP+LTrKQ9hM
Nv3LMTN5PPvjLunH0jTmRxV5Xvy+vITr5J7kli/RVN4QM5E/oZQ8lQ7yBWrL
S2Ofcd/UbbwvZ1UHUVX+lYbympiD/KC6M56rXFh9nXvlDuo+TsuV1blxznjX
1M28I3+spiKFXPrv4n3nMH/qv4rv4r2Yh/6s+jB7OB6zUksyhfZxh+NZc4Dz
cV/jfrAkZqdvrW5lk5xFfYkq8i80kFfHPOV9FJJfo4nck8Uk6XuQU27HIDZy
i7UXqRz3gBQWJRL//xF+ihzi1DgvJfST4xxxXmrGLGIv8gZulgdSSf6Ze+RV
MVe5jbqDD+VkdQyN5Paxxqm4r/FZ5sRe9afVFvEcWag/pv6rPqlmV8+pXTjE
H/qTcWbWx1zjHVcfYjfH4r1RizMp1uMdV/dzTq6hLo5ZyK3iPsWzk29SB1BR
/on68sqYr7yXgvJoGsYzp6I8O2YnL+AfntBnUydzlGL6ibSVB7KeG/X9qSCP
YQ8F9KNoEGdmPld53FrWeH8ZwDpusNaP8jH3+E3mcYXu1rPEs45nFGeK34vP
kJlMZCQD6UlHWtKQOu553Efif3S5mEHsgbn8TTff/x+HPPE9
          
          "]]]}, {}, {}}, {{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
         Opacity[1.], LineBox[CompressedData["
1:eJwl1VWYVmUUgNEZuhtBeuju7g5BYmgE6TJAVCxQFBRBQREpEUUFg+7u7gYV
ELFRsQtMWPvxYs1+97mY/5xvzg9JA0Ymj0hMSEi46kfMYX78bb7NXbSkGilI
SSpSk4a0pCM9GchIJjKThaxkIzs5yMlwv/8f8x3uphXVGeN6Fjbqx+lJrrgH
1/413+UeWjPFtcIc0i9Qg7H2rGzST9CL2faynNWvkDs+0/6f+R73ssBek090
G6bqIhzWL7JGt+QnXTPuTWdjs95ldmGcXmI25Gt93OzPHXqOWY4POWc/GNf5
grn2TWY7LvOH/ZQ5KH4Pt8QzmzfMc+Yic7vZic8YYV9o1uIin9qPmHdyW5yN
mcQRvc/swTS91mzFz7pWnJfOzhb9JEt1I77RvePsdHne16+SJ84uXhYWGyNp
S23GuZaDrfop+pCXeMkSWaLvo12cr70oR/VLrNOt+UXXiXvROdmmd5tdGa+X
mY25xLf2E+YArsSz2+eaFTjPB/ZDZm++ZJ59s3l7/M25Zj9tDo7n5dZ4HjNF
PC9L7TvMZEbF98KsHeevj5p943fpaWYxjun9Zk+m6/VmG37VdeNMdC626z1m
Nybo5WYTruq+cc66Yrw3+jW26PZc1/niDHVKlun74/uk6/C5bh/nqYtzXL9M
Pcbbc7NDP00/5tkrxVnp18nPKHsqlusH6EB9JsQ7yU79DP0pEJ/vWmpW6Afj
u6rrxjuuOzJdl+CEnsGGeD/5TTeIe9F52KX3mt2ZqFeYTfmY7+wnzYHxt44z
MStzIdgPm334ivn2rWaH+E7wp/2MOSTeFwrGc5lp4v1gpX2n2TnOj9Hx74NZ
j4/ivbEfM/vRKc7TLMlJfcDsxUy90WzL77phnJHOy279LAPjjO1VuKjfoFCc
mT0tq/RDJNOIifE+skdPYhCFGe1aOlbrh+kc52ovxSk9i8bxmfZ87NWTWamb
8b0ezHxdNZ5Rv0mR+Hx7etboR1ik68e56i7M1KU5rWfTJO7Nnp99+jlW6eb8
oIfEc+pqXNJvkRT3bc/AWv0oi3UDruiu8Qy6DGf0HJrGM9gLsF8/z2rdgh/1
0HgGXT3eF72AovEM9oys04/RjWZxn/EecEBPYRjF4l5cy8R6PYbuNKc4JShJ
KUpThrKUozwVqEglKlMlPtPvyswGPZYetIj7d60QB/VUhsfZ2GtwWS9km+7I
X/qsOTTx//+nq9pvAhs7714=
          "]]},
        Annotation[#, "Charting`Private`Tag$119927#1"]& ]}}], {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-3.854, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  PlotRange->{{-3.7, 4.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8140191542404203`*^9, 3.814019165705567*^9}, 
   3.814019279598455*^9, {3.814019388497415*^9, 3.814019450572939*^9}, 
   3.814019538886034*^9, {3.8140195945280952`*^9, 3.814019675874058*^9}, {
   3.8140197209836903`*^9, 3.81401973435707*^9}, 3.814019916336194*^9, {
   3.814020009463296*^9, 3.81402003903179*^9}, {3.814020173135953*^9, 
   3.8140202141413507`*^9}, 3.814020550547421*^9, 3.814021453805806*^9, {
   3.814041815544112*^9, 3.814041832171753*^9}, 
   3.814041919806099*^9},ExpressionUUID->"cec1dc7b-207b-48df-a49c-\
0924bad91517"]
}, Open  ]],

Cell["\<\
Rejection sampling becomes increasingly inefficient as the dimensionality \
increases when too many samples get rejected. It has also problems where \
there\[CloseCurlyQuote]re narrow peaks in the distribution as there there \
will be many sample discarded.\
\>", "Text",
 CellChangeTimes->{{3.814019822764292*^9, 
  3.814019873987974*^9}},ExpressionUUID->"ea372371-ab95-4179-822d-\
381c895d6a51"],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 "\n\n",
 StyleBox["Importance Sampling\n",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 "\nwe don\[CloseCurlyQuote]t use it to directly produce samples from a \
distribution, but use samples from a proposal distribution to estimate \
expectations with respect to the target distribution. If we sample x from \
p(x):"
}], "Text",
 CellChangeTimes->{{3.814022210527917*^9, 
  3.814022278316009*^9}},ExpressionUUID->"4d3306cb-1692-4468-84c6-\
e11cf05752f8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{"\[Integral]", 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], "p", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", 
      RowBox[{"x", " ", "~", " ", 
       FormBox[
        RowBox[{
         UnderoverscriptBox[
          RowBox[{
           FractionBox["1", "N"], "\[Sum]"}], "i", "N"], 
         RowBox[{"f", "(", 
          SuperscriptBox["x", "i"], ")"}]}],
        TraditionalForm]}]}]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.6244861834970207`*^9, 3.624486363885146*^9}, {
   3.68764097734534*^9, 3.687640980276657*^9}, {3.687641437202475*^9, 
   3.6876414691137953`*^9}, {3.6876418704923773`*^9, 3.687641914221916*^9}, 
   3.687642550999144*^9},ExpressionUUID->"69e6e07a-1424-46b5-aa83-\
5f6c7ddeb914"],

Cell["\<\
But if we sample x from q(x), then the expectation of f(x)p(x)/q(x) (with \
respect to sampling from q) is :\
\>", "Text",
 CellChangeTimes->{{3.687641917987138*^9, 3.68764194917983*^9}, {
  3.687643941702381*^9, 3.687643958584239*^9}, {3.687643994882977*^9, 
  3.687643998570672*^9}, {3.687689578537121*^9, 
  3.687689580921117*^9}},ExpressionUUID->"6009574c-f778-473a-8c7a-\
7660aafa9904"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", "f", "]"}], " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"f", 
        RowBox[{"(", "x", ")"}], " ", 
        FractionBox[
         RowBox[{"p", 
          RowBox[{"(", "x", ")"}]}], 
         RowBox[{"q", 
          RowBox[{"(", "x", ")"}]}]]}], ")"}], "q", 
      RowBox[{"(", "x", ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], " ", "=", " ", 
    RowBox[{"\[Integral]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"f", 
        RowBox[{"(", "x", ")"}], " ", "w", 
        RowBox[{"(", "x", ")"}]}], ")"}], "q", 
      RowBox[{"(", "x", ")"}], 
      RowBox[{"\[DifferentialD]", 
       RowBox[{"x", "  ", "~", " ", 
        FormBox[
         RowBox[{
          UnderoverscriptBox[
           RowBox[{
            FractionBox["1", "N"], "\[Sum]"}], "i", "N"], 
          RowBox[{"f", "(", 
           SuperscriptBox["x", "i"], ")"}]}],
         TraditionalForm]}]}], 
      FormBox[
       RowBox[{"w", "(", 
        SuperscriptBox["x", "i"], ")"}],
       TraditionalForm]}]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.6244861834970207`*^9, 3.624486363885146*^9}, {
   3.68764097734534*^9, 3.687640980276657*^9}, {3.687641437202475*^9, 
   3.6876414691137953`*^9}, {3.6876418704923773`*^9, 3.687641914221916*^9}, 
   3.6876425548792057`*^9, 
   3.687689619346931*^9},ExpressionUUID->"a93c8151-6098-436b-a5df-\
02e49e4f7efc"],

Cell["\<\
Lets look at an example where we find the average of a random variable from \
target distribution p\[ScriptCapitalD], but we don\[CloseCurlyQuote]t sample \
from it directly--as before, we sample from a proposal distribution, q\
\[ScriptCapitalD]. In this case, let f(x) = x. \
\>", "Text",
 CellChangeTimes->{{3.622327492655695*^9, 3.622327496542656*^9}, {
  3.622327619512104*^9, 3.622327712428549*^9}, {3.624481552614991*^9, 
  3.624481554606216*^9}, {3.624481613421316*^9, 3.624481633795557*^9}, {
  3.624486073939178*^9, 3.624486130704423*^9}, {3.624486485182775*^9, 
  3.624486519248189*^9}, {3.624487217888393*^9, 3.624487234921071*^9}, {
  3.6876424651000023`*^9, 3.68764247502691*^9}, {3.687657324127219*^9, 
  3.687657336928334*^9}, {3.6876896328480587`*^9, 
  3.687689633254456*^9}},ExpressionUUID->"0742ac7d-eb91-4356-81ef-\
041893ce048d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "q\[ScriptCapitalD]", ",", "p\[ScriptCapitalD]", ",", "u", ",", "weights", 
    ",", "x", ",", "xsamples"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"q\[ScriptCapitalD]", " ", "=", " ", 
   RowBox[{"NormalDistribution", "[", 
    RowBox[{"0", ",", "3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p\[ScriptCapitalD]", " ", "=", " ", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"3", ",", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", " ", ":=", " ", 
   RowBox[{"RandomVariate", "[", "q\[ScriptCapitalD]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x0", "=", "u"}], ",", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{"p\[ScriptCapitalD]", ",", "x0"}], "]"}], "/", 
        RowBox[{"PDF", "[", 
         RowBox[{"q\[ScriptCapitalD]", ",", "x0"}], "]"}]}]}], "}"}], ",", 
     RowBox[{"{", "1000", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{"weights", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1"}], "]"}], "]"}], "*", 
    RowBox[{"weights", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Compare", " ", "with", " ", "the", " ", "mean", " ", "when", " ", "we", 
    " ", "are", " ", "allowed", " ", "to", " ", "directly", " ", "sample", 
    " ", "from", " ", 
    RowBox[{"p\[ScriptCapitalD]", ":"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x", ":=", 
    RowBox[{"RandomVariate", "[", "p\[ScriptCapitalD]", " ", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xsamples", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", "x", "}"}], ",", 
     RowBox[{"{", "1000", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "xsamples", "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.622032171480302*^9, {3.622326747425867*^9, 3.622326750818371*^9}, 
   3.622326862042227*^9, {3.6223269154044743`*^9, 3.622326932898497*^9}, {
   3.6223270999478207`*^9, 3.622327138485149*^9}, {3.624481576792179*^9, 
   3.624481578388424*^9}, 3.687641581612213*^9, {3.8140223718482323`*^9, 
   3.81402240053377*^9}, {3.8140224345799313`*^9, 
   3.814022482572494*^9}},ExpressionUUID->"e747c60f-8173-45c7-90fc-\
0ddb4ab175f7"],

Cell[BoxData["3.060464575454232`"], "Output",
 CellChangeTimes->{{3.814022406253108*^9, 3.814022441331069*^9}, 
   3.814022483423313*^9, 3.814041832264673*^9, 
   3.814041919903*^9},ExpressionUUID->"44e6d6cd-2ced-4a76-8e1b-e5d3fd6d113f"],

Cell[BoxData[
 RowBox[{"{", "2.985013037156751`", "}"}]], "Output",
 CellChangeTimes->{{3.814022406253108*^9, 3.814022441331069*^9}, 
   3.814022483423313*^9, 3.814041832264673*^9, 
   3.81404191990653*^9},ExpressionUUID->"80b604ed-d822-440a-9698-\
4a7158f319cb"],

Cell[TextData[{
 "Now, suppose we need to sample from a truncated normal distribution with \
support from 0 to 1--call it ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "T"], TraditionalForm]],ExpressionUUID->
  "ed982a68-db34-4b00-b407-80612655d54c"],
 "(x). \nWe could draw samples from the normal and throw out ones outside of \
the (0,1) range. \nThis could waste many samples. \n\nAlternatively, we could \
use the uniform distribution over (0,1) as the proposal distribution, \nand \
weight each sample by the truncated normal, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "T"], TraditionalForm]],ExpressionUUID->
  "f204759a-2eff-4a77-abc8-a9119df55e11"],
 "(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "9ee98d8a-fad3-4018-99b3-cea2aaae81ff"],
 ") / \[ScriptCapitalU][0,1] =",
 Cell[BoxData[
  FormBox[
   RowBox[{" ", 
    SubscriptBox["p", "T"]}], TraditionalForm]],ExpressionUUID->
  "ab57ef21-c69c-4ef9-ae25-33ef7fa8f042"],
 "(",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "2fa5d4e0-1d8a-4893-95bd-b3b4fce1ca4f"],
 ") /1. \nYou can show that the mean is:"
}], "Text",
 CellChangeTimes->{{3.8140225603831673`*^9, 3.814022584246578*^9}, {
  3.814022921793743*^9, 
  3.8140229589419603`*^9}},ExpressionUUID->"c51488d4-b88b-428a-a1c5-\
707fdbb94ffb"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "N"}], ")"}], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", "i", "N"], 
    RowBox[{
     SuperscriptBox["x", "i"], " ", 
     FormBox[
      RowBox[{
       SubscriptBox["p", "T"], "(", 
       SuperscriptBox["x", "i"], ")"}],
      TraditionalForm]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.624488490238152*^9, 3.624488535655759*^9}, {
  3.624791879784911*^9, 
  3.62479188024238*^9}},ExpressionUUID->"01bb28d4-c94e-406e-8ae7-\
f413240a9d51"],

Cell["And so, - every sample gets used. ", "Text",
 CellChangeTimes->{{3.6244899984008207`*^9, 3.624490006670019*^9}, {
   3.687689754981529*^9, 3.687689758179113*^9}, 3.687690123988151*^9, {
   3.814022784654217*^9, 
   3.814022788142671*^9}},ExpressionUUID->"411def15-debe-46a3-859c-\
6ef722733323"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[ScriptCapitalD]trunc", "=", 
   RowBox[{"TruncatedDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}], ",", 
     RowBox[{"NormalDistribution", "[", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", " ", ":=", " ", 
    RowBox[{"RandomVariate", "[", 
     RowBox[{"UniformDistribution", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Mathematica", " ", "provides", " ", "an", " ", "analytic", " ", "formula",
     " ", "for", " ", "the", " ", "mean"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "\[ScriptCapitalD]trunc", "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"N", "[", "%", "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{"(*", " ", 
   RowBox[{
   "But", " ", "we", " ", "can", " ", "also", " ", "estimate", " ", "the", 
    " ", "mean", " ", "using", " ", "importance", " ", "sampling"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x0", "=", "u"}], " ", ",", 
      RowBox[{"x0", "*", 
       RowBox[{"PDF", "[", 
        RowBox[{"\[ScriptCapitalD]trunc", ",", "x0"}], "]"}]}]}], "}"}], ",", 
    
    RowBox[{"{", "10000", "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.687644488440963*^9, 3.687644530111965*^9}, {
  3.687644619037361*^9, 3.6876446619794683`*^9}, {3.814022643176525*^9, 
  3.814022680870079*^9}},ExpressionUUID->"e3d3eca7-79d9-45dc-bdf1-\
7f918d5f47d9"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SqrtBox["\[ExponentialE]"]}], ")"}], " ", 
   SqrtBox[
    FractionBox["2", 
     RowBox[{"\[ExponentialE]", " ", "\[Pi]"}]]]}], 
  RowBox[{"Erf", "[", 
   FractionBox["1", 
    SqrtBox["2"]], "]"}]]], "Output",
 CellChangeTimes->{{3.814022660388205*^9, 3.814022700427092*^9}, 
   3.8140248371390877`*^9, 3.814041832349606*^9, 
   3.814041919978116*^9},ExpressionUUID->"b8cbaea5-b75a-4fec-86cb-\
d53b4b2f897e"],

Cell[BoxData["0.4598622292864265`"], "Output",
 CellChangeTimes->{{3.814022660388205*^9, 3.814022700427092*^9}, 
   3.8140248371390877`*^9, 3.814041832349606*^9, 
   3.8140419199797993`*^9},ExpressionUUID->"818c2635-3190-4d87-a110-\
56f4eb26b3b2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5021825017614256`", ",", "0.4614057661297713`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814022660388205*^9, 3.814022700427092*^9}, 
   3.8140248371390877`*^9, 3.814041832349606*^9, 
   3.814041922017909*^9},ExpressionUUID->"eff9dd41-7fda-48ef-bef7-\
ae2b615d7082"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n",
  FontColor->RGBColor[0.6, 0.4, 0.2]],
 StyleBox["===================================================================\
=====================\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[https://blog.demofox.org/2018/06/12/monte-carlo-integration-\
explanation-in-1d/]\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nHere the importance sampling function is Sin[x] and the function to \
sample is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"Sin", "[", "x", "]"}], "2"], TraditionalForm]],ExpressionUUID->
  "a71bb914-66c8-4a90-b1ef-260d3058ad2d"],
 ". \nWe can see that the former encloses the latter so we can use it to \
generate samples from there. We just need to account for the importance \
function being used instead of a uniform one by dividing by the pdf of that \
function."
}], "Text",
 CellChangeTimes->{{3.814039981881678*^9, 3.81404000620168*^9}, {
  3.81455579488521*^9, 3.8145558937490253`*^9}, {3.814556164964117*^9, 
  3.8145562050385923`*^9}, {3.814701497809929*^9, 3.814701500169588*^9}, {
  3.8147078589921207`*^9, 3.814707870731263*^9}, {3.814708017528666*^9, 
  3.8147080282776403`*^9}},ExpressionUUID->"684e7fe6-9e03-4a48-adf1-\
a54952ebe956"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "automatically", " ", "normalize", " ", "to", " ", "get", " ", "a", " ", 
    "PDF"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PDFis", "=", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], "/", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Sin", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}]}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{"CDFis", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{"PDFis", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "x"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"inverseCDF", "=", 
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"CDFis", "\[Equal]", "y"}], ",", "x"}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"check", " ", "sampler", " ", "works", " ", "correctly"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"2", "*", 
     RowBox[{"ArcSin", "[", 
      SqrtBox[
       RowBox[{"RandomReal", "[", "]"}]], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"10", "^", "5"}]}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GraphicsRow", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"Plot", "[", 
        RowBox[{
         RowBox[{"Sin", "[", "x", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}], ",", 
       RowBox[{"Plot", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"Sin", "[", "x", "]"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"Red", ",", " ", 
            RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}]}], "]"}]}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{"%", ",", "64", ",", "\"\<PDF\>\""}], "]"}]}], "}"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pdf", "[", "k_", "]"}], ":=", 
   RowBox[{
    RowBox[{"Sin", "[", "k", "]"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"icdf", "[", "w_", "]"}], ":=", 
   RowBox[{"2", "*", 
    RowBox[{"ArcSin", "[", 
     RowBox[{"Sqrt", "[", "w", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sample", ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"s", "=", 
       RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"j", "=", 
       RowBox[{"icdf", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "=", 
       RowBox[{
        RowBox[{"Sin", "[", "j", "]"}], "*", 
        RowBox[{"Sin", "[", "j", "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"y", "/", 
       RowBox[{"pdf", "[", "j", "]"}]}]}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "simulate", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nsamples", "=", 
   RowBox[{"10", "^", "5"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trueval", "=", 
   RowBox[{"N", "[", " ", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Pi]"], 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", "x", "]"}], "^", "2"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], ",", "6"}], " ", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"estimates", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"sample", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "nsamples"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"estimated", " ", "=", " ", 
   RowBox[{
    RowBox[{"Total", "[", "estimates", "]"}], "/", "nsamples"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
  "\"\<True\>\"", ",", "trueval", ",", "\"\<Estimate\>\"", ",", "estimated"}],
   "}"}]}], "Input",
 CellChangeTimes->{{3.814549420872035*^9, 3.814549456040008*^9}, {
   3.81454948983799*^9, 3.8145495999104137`*^9}, {3.8145496525785637`*^9, 
   3.814549705566182*^9}, {3.814549896144288*^9, 3.814549907481557*^9}, {
   3.81455003110351*^9, 3.8145500488279*^9}, {3.814550420684744*^9, 
   3.814550502475618*^9}, {3.814550599765767*^9, 3.814550628884099*^9}, {
   3.814550674445746*^9, 3.8145507555999393`*^9}, 3.814550839731448*^9, {
   3.814550886146151*^9, 3.814550926686605*^9}, {3.814551122327712*^9, 
   3.81455120191059*^9}, {3.814551256407735*^9, 3.814551262794622*^9}, {
   3.8145513130372*^9, 3.8145513684339542`*^9}, {3.814551453958316*^9, 
   3.8145515009136868`*^9}, {3.814551547059044*^9, 3.814551588863721*^9}, {
   3.8145516431128387`*^9, 3.8145516439659967`*^9}, {3.814551676235969*^9, 
   3.81455169918089*^9}, {3.814551742493643*^9, 3.814551816931726*^9}, {
   3.814551875113936*^9, 3.814551982935998*^9}, {3.814552042741081*^9, 
   3.81455214558326*^9}, 3.814552224180374*^9, {3.814552265440205*^9, 
   3.814552366330357*^9}, {3.814552422559824*^9, 3.814552437252022*^9}, {
   3.814552480318522*^9, 3.814552487410698*^9}, {3.814552530696794*^9, 
   3.8145525696442823`*^9}, {3.81455262220403*^9, 3.814552627221884*^9}, {
   3.814552701653113*^9, 3.814552713146942*^9}, {3.814552765058166*^9, 
   3.814553050380973*^9}, {3.8145531110158863`*^9, 3.814553123051407*^9}, {
   3.814553178674376*^9, 3.814553205183257*^9}, {3.814553276508346*^9, 
   3.81455330051178*^9}, {3.814553475429122*^9, 3.814553587024206*^9}, {
   3.814553623881982*^9, 3.8145536408693037`*^9}, {3.814553712890422*^9, 
   3.8145537595572357`*^9}, 3.814553796999671*^9, {3.814553830414322*^9, 
   3.814553881850325*^9}, {3.814554040944819*^9, 3.814554146849968*^9}, {
   3.814554243239337*^9, 3.814554515263789*^9}, {3.814554573228361*^9, 
   3.814554609021092*^9}, {3.814554644554161*^9, 3.814554718146673*^9}, {
   3.814554993037105*^9, 3.814555032705524*^9}, {3.8145550862733994`*^9, 
   3.8145551432445393`*^9}, {3.814555277127804*^9, 3.814555306544623*^9}, {
   3.814555349909276*^9, 3.814555492310657*^9}, {3.81455969359904*^9, 
   3.814559694070529*^9}, 3.814617103884592*^9, {3.814617150116077*^9, 
   3.814617162669155*^9}, 3.814625927652018*^9, {3.814625982236614*^9, 
   3.814625983700238*^9}},ExpressionUUID->"4b8751dc-66a7-4335-a0c7-\
f371c5b57cba"],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", "x", "]"}], "2"]], "Output",
 CellChangeTimes->{{3.8145495810011883`*^9, 3.814549601545698*^9}, {
   3.814549681766489*^9, 3.814549706380241*^9}, {3.8145498981207647`*^9, 
   3.8145499080837507`*^9}, {3.814550033723363*^9, 3.814550051315881*^9}, 
   3.814550441790103*^9, {3.8145504900228767`*^9, 3.814550503480545*^9}, {
   3.814550609511655*^9, 3.8145506295732927`*^9}, {3.814550685033155*^9, 
   3.814550697372506*^9}, {3.814550730351074*^9, 3.814550756361168*^9}, 
   3.8145508402193537`*^9, 3.814550927662095*^9, 3.814551122976819*^9, {
   3.814551174858542*^9, 3.814551203097451*^9}, {3.814551257211598*^9, 
   3.814551272308964*^9}, 3.81455131391293*^9, 3.8145513692602253`*^9, {
   3.8145514545423*^9, 3.814551475220973*^9}, 3.814551505439666*^9, 
   3.814551556801445*^9, 3.814551589992506*^9, {3.8145517965028057`*^9, 
   3.814551817544314*^9}, {3.814551877595471*^9, 3.814551889728945*^9}, {
   3.814551955351623*^9, 3.814551958455309*^9}, {3.814552043356868*^9, 
   3.814552078504581*^9}, 3.814552146805612*^9, {3.814552212196021*^9, 
   3.814552245274846*^9}, 3.81455230576917*^9, 3.814552355105789*^9, 
   3.8145524887442617`*^9, 3.814552549223509*^9, 3.8145525855870953`*^9, {
   3.8145526231353083`*^9, 3.8145526278596077`*^9}, 3.814552702631321*^9, 
   3.814552766435245*^9, 3.814552839543881*^9, {3.814553024083764*^9, 
   3.814553053150766*^9}, {3.8145531642615128`*^9, 3.814553212315291*^9}, {
   3.814553289764275*^9, 3.8145533012354097`*^9}, {3.814553482204276*^9, 
   3.814553550609396*^9}, 3.814553642645668*^9, 3.814553727318624*^9, {
   3.81455376097754*^9, 3.814553797953496*^9}, {3.814553846184393*^9, 
   3.8145538833128633`*^9}, {3.8145539777052937`*^9, 
   3.8145539812278223`*^9}, {3.81455410032922*^9, 3.814554114435587*^9}, {
   3.814554147870843*^9, 3.814554178179699*^9}, {3.814554253999988*^9, 
   3.814554278619748*^9}, {3.814554322823489*^9, 3.814554517039213*^9}, {
   3.814554582665244*^9, 3.814554592741702*^9}, {3.8145546262440557`*^9, 
   3.814554730237108*^9}, {3.814554995043333*^9, 3.814555033470496*^9}, 
   3.814555091399767*^9, {3.8145551215177603`*^9, 3.814555163757666*^9}, {
   3.8145552818976927`*^9, 3.8145553075462027`*^9}, {3.814555389161133*^9, 
   3.814555434681278*^9}, {3.814555466913316*^9, 3.814555492914647*^9}, 
   3.814555779487195*^9, 3.81455622868349*^9, {3.814559695778463*^9, 
   3.81455970732054*^9}, {3.814617076747676*^9, 3.814617105534891*^9}, 
   3.8146171638345757`*^9, 3.8146259292521877`*^9, 
   3.814625984615797*^9},ExpressionUUID->"10aeccfe-58e6-4380-a6c3-\
d61a2f3e34f9"],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"Sin", "[", 
   FractionBox["x", "2"], "]"}], "2"]], "Output",
 CellChangeTimes->{{3.8145495810011883`*^9, 3.814549601545698*^9}, {
   3.814549681766489*^9, 3.814549706380241*^9}, {3.8145498981207647`*^9, 
   3.8145499080837507`*^9}, {3.814550033723363*^9, 3.814550051315881*^9}, 
   3.814550441790103*^9, {3.8145504900228767`*^9, 3.814550503480545*^9}, {
   3.814550609511655*^9, 3.8145506295732927`*^9}, {3.814550685033155*^9, 
   3.814550697372506*^9}, {3.814550730351074*^9, 3.814550756361168*^9}, 
   3.8145508402193537`*^9, 3.814550927662095*^9, 3.814551122976819*^9, {
   3.814551174858542*^9, 3.814551203097451*^9}, {3.814551257211598*^9, 
   3.814551272308964*^9}, 3.81455131391293*^9, 3.8145513692602253`*^9, {
   3.8145514545423*^9, 3.814551475220973*^9}, 3.814551505439666*^9, 
   3.814551556801445*^9, 3.814551589992506*^9, {3.8145517965028057`*^9, 
   3.814551817544314*^9}, {3.814551877595471*^9, 3.814551889728945*^9}, {
   3.814551955351623*^9, 3.814551958455309*^9}, {3.814552043356868*^9, 
   3.814552078504581*^9}, 3.814552146805612*^9, {3.814552212196021*^9, 
   3.814552245274846*^9}, 3.81455230576917*^9, 3.814552355105789*^9, 
   3.8145524887442617`*^9, 3.814552549223509*^9, 3.8145525855870953`*^9, {
   3.8145526231353083`*^9, 3.8145526278596077`*^9}, 3.814552702631321*^9, 
   3.814552766435245*^9, 3.814552839543881*^9, {3.814553024083764*^9, 
   3.814553053150766*^9}, {3.8145531642615128`*^9, 3.814553212315291*^9}, {
   3.814553289764275*^9, 3.8145533012354097`*^9}, {3.814553482204276*^9, 
   3.814553550609396*^9}, 3.814553642645668*^9, 3.814553727318624*^9, {
   3.81455376097754*^9, 3.814553797953496*^9}, {3.814553846184393*^9, 
   3.8145538833128633`*^9}, {3.8145539777052937`*^9, 
   3.8145539812278223`*^9}, {3.81455410032922*^9, 3.814554114435587*^9}, {
   3.814554147870843*^9, 3.814554178179699*^9}, {3.814554253999988*^9, 
   3.814554278619748*^9}, {3.814554322823489*^9, 3.814554517039213*^9}, {
   3.814554582665244*^9, 3.814554592741702*^9}, {3.8145546262440557`*^9, 
   3.814554730237108*^9}, {3.814554995043333*^9, 3.814555033470496*^9}, 
   3.814555091399767*^9, {3.8145551215177603`*^9, 3.814555163757666*^9}, {
   3.8145552818976927`*^9, 3.8145553075462027`*^9}, {3.814555389161133*^9, 
   3.814555434681278*^9}, {3.814555466913316*^9, 3.814555492914647*^9}, 
   3.814555779487195*^9, 3.81455622868349*^9, {3.814559695778463*^9, 
   3.81455970732054*^9}, {3.814617076747676*^9, 3.814617105534891*^9}, 
   3.8146171638345757`*^9, 3.8146259292521877`*^9, 
   3.814625984631084*^9},ExpressionUUID->"55b92526-181a-4f5a-89aa-\
7fc915c9793b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"ArcSin", "[", 
            SqrtBox["y"], "]"}]}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "-", 
          RowBox[{"ArcSin", "[", 
           SqrtBox["y"], "]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"ArcSin", "[", 
           SqrtBox["y"], "]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "+", 
          RowBox[{"ArcSin", "[", 
           SqrtBox["y"], "]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", 
        TemplateBox[{},
         "Integers"]}]}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8145495810011883`*^9, 3.814549601545698*^9}, {
   3.814549681766489*^9, 3.814549706380241*^9}, {3.8145498981207647`*^9, 
   3.8145499080837507`*^9}, {3.814550033723363*^9, 3.814550051315881*^9}, 
   3.814550441790103*^9, {3.8145504900228767`*^9, 3.814550503480545*^9}, {
   3.814550609511655*^9, 3.8145506295732927`*^9}, {3.814550685033155*^9, 
   3.814550697372506*^9}, {3.814550730351074*^9, 3.814550756361168*^9}, 
   3.8145508402193537`*^9, 3.814550927662095*^9, 3.814551122976819*^9, {
   3.814551174858542*^9, 3.814551203097451*^9}, {3.814551257211598*^9, 
   3.814551272308964*^9}, 3.81455131391293*^9, 3.8145513692602253`*^9, {
   3.8145514545423*^9, 3.814551475220973*^9}, 3.814551505439666*^9, 
   3.814551556801445*^9, 3.814551589992506*^9, {3.8145517965028057`*^9, 
   3.814551817544314*^9}, {3.814551877595471*^9, 3.814551889728945*^9}, {
   3.814551955351623*^9, 3.814551958455309*^9}, {3.814552043356868*^9, 
   3.814552078504581*^9}, 3.814552146805612*^9, {3.814552212196021*^9, 
   3.814552245274846*^9}, 3.81455230576917*^9, 3.814552355105789*^9, 
   3.8145524887442617`*^9, 3.814552549223509*^9, 3.8145525855870953`*^9, {
   3.8145526231353083`*^9, 3.8145526278596077`*^9}, 3.814552702631321*^9, 
   3.814552766435245*^9, 3.814552839543881*^9, {3.814553024083764*^9, 
   3.814553053150766*^9}, {3.8145531642615128`*^9, 3.814553212315291*^9}, {
   3.814553289764275*^9, 3.8145533012354097`*^9}, {3.814553482204276*^9, 
   3.814553550609396*^9}, 3.814553642645668*^9, 3.814553727318624*^9, {
   3.81455376097754*^9, 3.814553797953496*^9}, {3.814553846184393*^9, 
   3.8145538833128633`*^9}, {3.8145539777052937`*^9, 
   3.8145539812278223`*^9}, {3.81455410032922*^9, 3.814554114435587*^9}, {
   3.814554147870843*^9, 3.814554178179699*^9}, {3.814554253999988*^9, 
   3.814554278619748*^9}, {3.814554322823489*^9, 3.814554517039213*^9}, {
   3.814554582665244*^9, 3.814554592741702*^9}, {3.8145546262440557`*^9, 
   3.814554730237108*^9}, {3.814554995043333*^9, 3.814555033470496*^9}, 
   3.814555091399767*^9, {3.8145551215177603`*^9, 3.814555163757666*^9}, {
   3.8145552818976927`*^9, 3.8145553075462027`*^9}, {3.814555389161133*^9, 
   3.814555434681278*^9}, {3.814555466913316*^9, 3.814555492914647*^9}, 
   3.814555779487195*^9, 3.81455622868349*^9, {3.814559695778463*^9, 
   3.81455970732054*^9}, {3.814617076747676*^9, 3.814617105534891*^9}, 
   3.8146171638345757`*^9, 3.8146259292521877`*^9, 
   3.814625984645708*^9},ExpressionUUID->"de9526b4-fb4c-4637-9538-\
8bc926756403"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     GraphicsBox[{{{{}, {}, 
         TagBox[
          {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
           Opacity[1.], LineBox[CompressedData["
1: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
WQjmSrO1dK793/8D/wMuq3uF
            "]]},
          Annotation[#, "Charting`Private`Tag$4268#1"]& ]}, {}, {}}, {{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
           LineBox[CompressedData["
1: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
VrbR7HoeYgfZeO//7xf+B53PIig=
            "]]},
          Annotation[#, "Charting`Private`Tag$4309#1"]& ]}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{False, False}, {False, False}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
         Charting`ScaledFrameTicks[{Identity, Identity}]}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImagePadding->All,
      Method->{
       "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
        AbsolutePointSize[6], "ScalingFunctions" -> None, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotRange->
       NCache[{{0, Pi}, {0., 0.9999999707682925}}, {{0, 3.141592653589793}, {
         0., 0.9999999707682925}}],
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {192., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}], InsetBox[
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.24499999999999997`], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.24499999999999997`], Thickness[Small]}], 
         RectangleBox[{0., 0}, {0.05, 0.0142},
          RoundingRadius->0], RectangleBox[{0.05, 0}, {0.1, 0.0382},
          RoundingRadius->0], RectangleBox[{0.1, 0}, {0.15, 0.066},
          RoundingRadius->0], RectangleBox[{0.15, 0}, {0.2, 0.0826},
          RoundingRadius->0], RectangleBox[{0.2, 0}, {0.25, 0.1022},
          RoundingRadius->0], RectangleBox[{0.25, 0}, {0.3, 0.1484},
          RoundingRadius->0], RectangleBox[{0.3, 0}, {0.35, 0.1522},
          RoundingRadius->0], RectangleBox[{0.35, 0}, {0.4, 0.1812},
          RoundingRadius->0], RectangleBox[{0.4, 0}, {0.45, 0.215},
          RoundingRadius->0], RectangleBox[{0.45, 0}, {0.5, 0.2328},
          RoundingRadius->0], RectangleBox[{0.5, 0}, {0.55, 0.2472},
          RoundingRadius->0], RectangleBox[{0.55, 0}, {0.6, 0.2526},
          RoundingRadius->0], RectangleBox[{0.6, 0}, {0.65, 0.2984},
          RoundingRadius->0], RectangleBox[{0.65, 0}, {0.7, 0.3084},
          RoundingRadius->0], RectangleBox[{0.7, 0}, {0.75, 0.3292},
          RoundingRadius->0], RectangleBox[{0.75, 0}, {0.8, 0.3376},
          RoundingRadius->0], RectangleBox[{0.8, 0}, {0.85, 0.3782},
          RoundingRadius->0], RectangleBox[{0.85, 0}, {0.9, 0.3872},
          RoundingRadius->0], RectangleBox[{0.9, 0}, {0.95, 0.383},
          RoundingRadius->0], RectangleBox[{0.95, 0}, {1., 0.3996},
          RoundingRadius->0], RectangleBox[{1., 0}, {1.05, 0.4348},
          RoundingRadius->0], RectangleBox[{1.05, 0}, {1.1, 0.4368},
          RoundingRadius->0], RectangleBox[{1.1, 0}, {1.15, 0.4328},
          RoundingRadius->0], RectangleBox[{1.15, 0}, {1.2, 0.4688},
          RoundingRadius->0], RectangleBox[{1.2, 0}, {1.25, 0.4728},
          RoundingRadius->0], RectangleBox[{1.25, 0}, {1.3, 0.4776},
          RoundingRadius->0], RectangleBox[{1.3, 0}, {1.35, 0.4982},
          RoundingRadius->0], RectangleBox[{1.35, 0}, {1.4, 0.4848},
          RoundingRadius->0], RectangleBox[{1.4, 0}, {1.45, 0.5084},
          RoundingRadius->0], RectangleBox[{1.45, 0}, {1.5, 0.4834},
          RoundingRadius->0], RectangleBox[{1.5, 0}, {1.55, 0.507},
          RoundingRadius->0], RectangleBox[{1.55, 0}, {1.6, 0.4886},
          RoundingRadius->0], RectangleBox[{1.6, 0}, {1.65, 0.5066},
          RoundingRadius->0], RectangleBox[{1.65, 0}, {1.7, 0.5094},
          RoundingRadius->0], RectangleBox[{1.7, 0}, {1.75, 0.521},
          RoundingRadius->0], RectangleBox[{1.75, 0}, {1.8, 0.4856},
          RoundingRadius->0], RectangleBox[{1.8, 0}, {1.85, 0.489},
          RoundingRadius->0], RectangleBox[{1.85, 0}, {1.9, 0.4878},
          RoundingRadius->0], RectangleBox[{1.9, 0}, {1.95, 0.4634},
          RoundingRadius->0], RectangleBox[{1.95, 0}, {2., 0.4566},
          RoundingRadius->0], RectangleBox[{2., 0}, {2.05, 0.4314},
          RoundingRadius->0], RectangleBox[{2.05, 0}, {2.1, 0.4444},
          RoundingRadius->0], RectangleBox[{2.1, 0}, {2.15, 0.4258},
          RoundingRadius->0], RectangleBox[{2.15, 0}, {2.2, 0.4072},
          RoundingRadius->0], RectangleBox[{2.2, 0}, {2.25, 0.3698},
          RoundingRadius->0], RectangleBox[{2.25, 0}, {2.3, 0.401},
          RoundingRadius->0], RectangleBox[{2.3, 0}, {2.35, 0.3638},
          RoundingRadius->0], RectangleBox[{2.35, 0}, {2.4, 0.348},
          RoundingRadius->0], RectangleBox[{2.4, 0}, {2.45, 0.3298},
          RoundingRadius->0], RectangleBox[{2.45, 0}, {2.5, 0.3122},
          RoundingRadius->0], RectangleBox[{2.5, 0}, {2.55, 0.2904},
          RoundingRadius->0], RectangleBox[{2.55, 0}, {2.6, 0.2598},
          RoundingRadius->0], RectangleBox[{2.6, 0}, {2.65, 0.2576},
          RoundingRadius->0], RectangleBox[{2.65, 0}, {2.7, 0.2214},
          RoundingRadius->0], RectangleBox[{2.7, 0}, {2.75, 0.208},
          RoundingRadius->0], RectangleBox[{2.75, 0}, {2.8, 0.1768},
          RoundingRadius->0], RectangleBox[{2.8, 0}, {2.85, 0.1584},
          RoundingRadius->0], RectangleBox[{2.85, 0}, {2.9, 0.1262},
          RoundingRadius->0], RectangleBox[{2.9, 0}, {2.95, 0.117},
          RoundingRadius->0], RectangleBox[{2.95, 0}, {3., 0.0848},
          RoundingRadius->0], RectangleBox[{3., 0}, {3.05, 0.0542},
          RoundingRadius->0], RectangleBox[{3.05, 0}, {3.1, 0.0352},
          RoundingRadius->0], RectangleBox[{3.1, 0}, {3.15, 0.0092},
          
          RoundingRadius->
           0]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.063, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      PlotRange->{{0., 3.15}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], {576., -116.80842387373012}, 
     ImageScaled[{0.5, 0.5}], {360., 222.49223594996212}]}, {}},
  ContentSelectable->True,
  ImageSize->Full,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.8145495810011883`*^9, 3.814549601545698*^9}, {
   3.814549681766489*^9, 3.814549706380241*^9}, {3.8145498981207647`*^9, 
   3.8145499080837507`*^9}, {3.814550033723363*^9, 3.814550051315881*^9}, 
   3.814550441790103*^9, {3.8145504900228767`*^9, 3.814550503480545*^9}, {
   3.814550609511655*^9, 3.8145506295732927`*^9}, {3.814550685033155*^9, 
   3.814550697372506*^9}, {3.814550730351074*^9, 3.814550756361168*^9}, 
   3.8145508402193537`*^9, 3.814550927662095*^9, 3.814551122976819*^9, {
   3.814551174858542*^9, 3.814551203097451*^9}, {3.814551257211598*^9, 
   3.814551272308964*^9}, 3.81455131391293*^9, 3.8145513692602253`*^9, {
   3.8145514545423*^9, 3.814551475220973*^9}, 3.814551505439666*^9, 
   3.814551556801445*^9, 3.814551589992506*^9, {3.8145517965028057`*^9, 
   3.814551817544314*^9}, {3.814551877595471*^9, 3.814551889728945*^9}, {
   3.814551955351623*^9, 3.814551958455309*^9}, {3.814552043356868*^9, 
   3.814552078504581*^9}, 3.814552146805612*^9, {3.814552212196021*^9, 
   3.814552245274846*^9}, 3.81455230576917*^9, 3.814552355105789*^9, 
   3.8145524887442617`*^9, 3.814552549223509*^9, 3.8145525855870953`*^9, {
   3.8145526231353083`*^9, 3.8145526278596077`*^9}, 3.814552702631321*^9, 
   3.814552766435245*^9, 3.814552839543881*^9, {3.814553024083764*^9, 
   3.814553053150766*^9}, {3.8145531642615128`*^9, 3.814553212315291*^9}, {
   3.814553289764275*^9, 3.8145533012354097`*^9}, {3.814553482204276*^9, 
   3.814553550609396*^9}, 3.814553642645668*^9, 3.814553727318624*^9, {
   3.81455376097754*^9, 3.814553797953496*^9}, {3.814553846184393*^9, 
   3.8145538833128633`*^9}, {3.8145539777052937`*^9, 
   3.8145539812278223`*^9}, {3.81455410032922*^9, 3.814554114435587*^9}, {
   3.814554147870843*^9, 3.814554178179699*^9}, {3.814554253999988*^9, 
   3.814554278619748*^9}, {3.814554322823489*^9, 3.814554517039213*^9}, {
   3.814554582665244*^9, 3.814554592741702*^9}, {3.8145546262440557`*^9, 
   3.814554730237108*^9}, {3.814554995043333*^9, 3.814555033470496*^9}, 
   3.814555091399767*^9, {3.8145551215177603`*^9, 3.814555163757666*^9}, {
   3.8145552818976927`*^9, 3.8145553075462027`*^9}, {3.814555389161133*^9, 
   3.814555434681278*^9}, {3.814555466913316*^9, 3.814555492914647*^9}, 
   3.814555779487195*^9, 3.81455622868349*^9, {3.814559695778463*^9, 
   3.81455970732054*^9}, {3.814617076747676*^9, 3.814617105534891*^9}, 
   3.8146171638345757`*^9, 3.8146259292521877`*^9, 
   3.814625984744546*^9},ExpressionUUID->"76752621-3b54-41e3-8dad-\
5f294c6f7b57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True\"\>", ",", "1.5707963267948966193`6.", 
   ",", "\<\"Estimate\"\>", ",", "1.571369718511774`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8145495810011883`*^9, 3.814549601545698*^9}, {
   3.814549681766489*^9, 3.814549706380241*^9}, {3.8145498981207647`*^9, 
   3.8145499080837507`*^9}, {3.814550033723363*^9, 3.814550051315881*^9}, 
   3.814550441790103*^9, {3.8145504900228767`*^9, 3.814550503480545*^9}, {
   3.814550609511655*^9, 3.8145506295732927`*^9}, {3.814550685033155*^9, 
   3.814550697372506*^9}, {3.814550730351074*^9, 3.814550756361168*^9}, 
   3.8145508402193537`*^9, 3.814550927662095*^9, 3.814551122976819*^9, {
   3.814551174858542*^9, 3.814551203097451*^9}, {3.814551257211598*^9, 
   3.814551272308964*^9}, 3.81455131391293*^9, 3.8145513692602253`*^9, {
   3.8145514545423*^9, 3.814551475220973*^9}, 3.814551505439666*^9, 
   3.814551556801445*^9, 3.814551589992506*^9, {3.8145517965028057`*^9, 
   3.814551817544314*^9}, {3.814551877595471*^9, 3.814551889728945*^9}, {
   3.814551955351623*^9, 3.814551958455309*^9}, {3.814552043356868*^9, 
   3.814552078504581*^9}, 3.814552146805612*^9, {3.814552212196021*^9, 
   3.814552245274846*^9}, 3.81455230576917*^9, 3.814552355105789*^9, 
   3.8145524887442617`*^9, 3.814552549223509*^9, 3.8145525855870953`*^9, {
   3.8145526231353083`*^9, 3.8145526278596077`*^9}, 3.814552702631321*^9, 
   3.814552766435245*^9, 3.814552839543881*^9, {3.814553024083764*^9, 
   3.814553053150766*^9}, {3.8145531642615128`*^9, 3.814553212315291*^9}, {
   3.814553289764275*^9, 3.8145533012354097`*^9}, {3.814553482204276*^9, 
   3.814553550609396*^9}, 3.814553642645668*^9, 3.814553727318624*^9, {
   3.81455376097754*^9, 3.814553797953496*^9}, {3.814553846184393*^9, 
   3.8145538833128633`*^9}, {3.8145539777052937`*^9, 
   3.8145539812278223`*^9}, {3.81455410032922*^9, 3.814554114435587*^9}, {
   3.814554147870843*^9, 3.814554178179699*^9}, {3.814554253999988*^9, 
   3.814554278619748*^9}, {3.814554322823489*^9, 3.814554517039213*^9}, {
   3.814554582665244*^9, 3.814554592741702*^9}, {3.8145546262440557`*^9, 
   3.814554730237108*^9}, {3.814554995043333*^9, 3.814555033470496*^9}, 
   3.814555091399767*^9, {3.8145551215177603`*^9, 3.814555163757666*^9}, {
   3.8145552818976927`*^9, 3.8145553075462027`*^9}, {3.814555389161133*^9, 
   3.814555434681278*^9}, {3.814555466913316*^9, 3.814555492914647*^9}, 
   3.814555779487195*^9, 3.81455622868349*^9, {3.814559695778463*^9, 
   3.81455970732054*^9}, {3.814617076747676*^9, 3.814617105534891*^9}, 
   3.8146171638345757`*^9, 3.8146259292521877`*^9, 
   3.8146259851866627`*^9},ExpressionUUID->"9c43eaa3-a863-4d74-8356-\
fed86679db3f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"estimates", "-", "trueval"}], ")"}], "2"], "]"}], "/", 
   RowBox[{"Length", "[", "estimates", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Sqrt", "[", 
  RowBox[{
   RowBox[{"Total", "[", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"estimates", "-", "estimated"}], ")"}], "2"], "]"}], "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Length", "[", "estimates", "]"}], "-", "1"}], ")"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "estimates", "]"}]}], "Input",
 CellChangeTimes->{{3.81460879500325*^9, 3.814608798534857*^9}, {
   3.8146143061127043`*^9, 3.8146143567626047`*^9}, {3.814614400749765*^9, 
   3.8146144993438663`*^9}, {3.8146145821907997`*^9, 3.81461458891509*^9}, 
   3.814614699373871*^9, 3.81461712437726*^9, {3.8146171717142467`*^9, 
   3.814617188093158*^9}},ExpressionUUID->"cdf6fde7-b329-4ec9-8f9f-\
d13b91c5b05a"],

Cell[BoxData["0.4466297112413042`"], "Output",
 CellChangeTimes->{{3.814617111467264*^9, 3.814617125922872*^9}, {
  3.814617189436108*^9, 
  3.814617201789754*^9}},ExpressionUUID->"d7e2604f-7ef9-45a7-8e27-\
5c77698f35e5"],

Cell[BoxData["0.4466308814227161`"], "Output",
 CellChangeTimes->{{3.814617111467264*^9, 3.814617125922872*^9}, {
  3.814617189436108*^9, 
  3.8146172017935467`*^9}},ExpressionUUID->"20978904-87c2-4e34-8039-\
1593a4b00639"],

Cell[BoxData["0.4466308814227161`"], "Output",
 CellChangeTimes->{{3.814617111467264*^9, 3.814617125922872*^9}, {
  3.814617189436108*^9, 
  3.814617201794395*^9}},ExpressionUUID->"09faa189-c669-4138-8ebc-\
64e7a6f57a3c"]
}, Open  ]],

Cell[TextData[{
 "\n\nSee \[OpenCurlyQuote]Monte Carlo Simulations in Physics\
\[CloseCurlyQuote] pg16 for more on ImportanceSampling\n\
MultipleImportanceSampling : \
https://64.github.io/multiple-importance-sampling\n\nTODO: \n",
 StyleBox["\n-> \
https://bookdown.org/kevin_davisross/probbook/sec-cdf-method.html\n-> \
https://bookdown.org/kevin_davisross/probbook/law-of-the-unconscious-\
statistician.html",
  FontSize->12],
 "\n\n-> ",
 StyleBox["https://www.scratchapixel.com/lessons/mathematics-physics-for-\
computer-graphics/monte-carlo-methods-mathematical-foundations/sampling-\
distribution\n",
  FontSize->12],
 "->",
 StyleBox[" \
https://www.scratchapixel.com/lessons/mathematics-physics-for-computer-\
graphics/monte-carlo-methods-in-practice/monte-carlo-integration",
  FontSize->12]
}], "Text",
 CellChangeTimes->{{3.814701450284927*^9, 3.814701451217308*^9}, {
  3.814701530588662*^9, 3.8147015509483*^9}, {3.815060200573723*^9, 
  3.8150602067130623`*^9}},ExpressionUUID->"e8f4d4be-b595-49eb-b97b-\
7e015bb53194"]
}, Open  ]]
},
WindowSize->{1242, 1367},
WindowMargins->{{55, Automatic}, {0, Automatic}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"DarkThemeCol.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 218, 4, 98, "Title",ExpressionUUID->"62b707ab-eccc-49f9-a975-73757bfc9e93"],
Cell[801, 28, 1487, 24, 222, "Text",ExpressionUUID->"999e1d97-0f09-41fb-b291-2fbe9a68d28b"],
Cell[2291, 54, 1351, 27, 96, "Text",ExpressionUUID->"07acadeb-bc12-47e0-97bd-dc1b3a0c1622"],
Cell[3645, 83, 1338, 48, 142, "DisplayFormula",ExpressionUUID->"2a7b5d70-06c6-49af-b53a-b3c837464b48"],
Cell[4986, 133, 1376, 33, 96, "Text",ExpressionUUID->"d88fdcb7-539f-4613-955c-be1928657087"],
Cell[6365, 168, 2678, 101, 129, "DisplayFormula",ExpressionUUID->"ab2369aa-436f-4fc1-82c5-9b2f45809643"],
Cell[9046, 271, 1000, 19, 117, "Text",ExpressionUUID->"7eac9f45-943b-47b3-81e5-057f766d2f15"],
Cell[10049, 292, 386, 13, 40, "DisplayFormula",ExpressionUUID->"efaab0d7-f0eb-438d-9215-98d0aa57b9d1"],
Cell[10438, 307, 1024, 21, 117, "Text",ExpressionUUID->"68d3dabd-437a-43c6-8091-8e8affb4f175"],
Cell[11465, 330, 393, 13, 40, "DisplayFormula",ExpressionUUID->"57013fda-1ef5-4b47-85b8-f802c1769032"],
Cell[11861, 345, 714, 17, 75, "Text",ExpressionUUID->"3b0a8926-4326-438d-a679-5f04298ccbc2"],
Cell[12578, 364, 468, 16, 55, "DisplayFormula",ExpressionUUID->"6dbe4e74-00db-48c4-b8f5-a9ec20854821"],
Cell[13049, 382, 894, 16, 138, "Text",ExpressionUUID->"ffcee1a1-4f9b-4bd8-bd84-264ea1118ac0"],
Cell[13946, 400, 791, 16, 138, "Text",ExpressionUUID->"e978336e-1cf3-4db4-8e38-af2bab448e54"],
Cell[14740, 418, 4356, 106, 197, "Input",ExpressionUUID->"beac6028-7d3b-4735-96ef-15ac722fea7d"],
Cell[19099, 526, 348, 7, 33, "Text",ExpressionUUID->"d7e31401-4419-4dfc-89b5-edb5332c6af5"],
Cell[CellGroupData[{
Cell[19472, 537, 1743, 42, 167, "Input",ExpressionUUID->"9bda0c55-e3de-46fc-a54b-3b07412574b0"],
Cell[21218, 581, 994, 20, 67, "Output",ExpressionUUID->"8410bdec-2340-46b7-8499-b30830b2d0c2"],
Cell[22215, 603, 997, 20, 67, "Output",ExpressionUUID->"b82a1a80-9cf6-4381-83a4-ede32b951c09"],
Cell[23215, 625, 995, 20, 67, "Output",ExpressionUUID->"7edc7b73-052c-42cc-913d-259e0bb5b637"]
}, Open  ]],
Cell[24225, 648, 288, 7, 54, "Text",ExpressionUUID->"ecd64bbd-ffe3-4258-b3e6-c37c6f8faa4c"],
Cell[CellGroupData[{
Cell[24538, 659, 980, 23, 93, "Input",ExpressionUUID->"b69c847e-2d97-48fd-9998-de55c3736d19"],
Cell[25521, 684, 942, 20, 89, "Output",ExpressionUUID->"3af4e281-f6a0-4c22-b57d-8f437cf9bcea"]
}, Open  ]],
Cell[26478, 707, 264, 6, 33, "Text",ExpressionUUID->"08aa4327-d3e5-48ca-9477-360d3b69fb63"],
Cell[CellGroupData[{
Cell[26767, 717, 915, 24, 118, "Input",ExpressionUUID->"81582563-c4fc-428a-9907-00d574d17014"],
Cell[27685, 743, 2590, 67, 103, "Output",ExpressionUUID->"02039e26-7d9b-45ce-bb80-0e6c77e09c7a"],
Cell[30278, 812, 2522, 64, 103, "Output",ExpressionUUID->"a761dd25-44da-4c68-b107-b85d6e80ce25"]
}, Open  ]],
Cell[32815, 879, 384, 8, 33, "Text",ExpressionUUID->"77d5665c-9b1b-4a18-b02e-f69e0a6ee515"],
Cell[33202, 889, 1145, 23, 285, "Text",ExpressionUUID->"bb455d0f-1e6b-4233-a035-3b052d1e08dd"],
Cell[CellGroupData[{
Cell[34372, 916, 1330, 34, 71, "Input",ExpressionUUID->"8ed7a0a8-c0a1-491c-8b2a-9567d40eb4e3"],
Cell[35705, 952, 450, 8, 50, "Output",ExpressionUUID->"038e4d4e-bbcd-4658-ba87-bee36f7f6e85"],
Cell[36158, 962, 4288, 90, 257, "Output",ExpressionUUID->"221a3405-4c65-4485-a255-8acabfc890cb"]
}, Open  ]],
Cell[40461, 1055, 679, 17, 96, "Text",ExpressionUUID->"2debc4d9-3fb5-4fa7-9db4-960bd7614dba"],
Cell[41143, 1074, 972, 25, 155, "Text",ExpressionUUID->"c78d8250-680f-431f-bc3f-a2b4816927bf"],
Cell[CellGroupData[{
Cell[42140, 1103, 669, 16, 71, "Input",ExpressionUUID->"7255db1e-e163-4c46-a10b-a4c208c9a0ef"],
Cell[42812, 1121, 538, 15, 53, "Output",ExpressionUUID->"9538d3a9-f921-4f4d-9d65-c1d5bbfd9c79"]
}, Open  ]],
Cell[43365, 1139, 729, 20, 33, "Text",ExpressionUUID->"9e274ca2-52be-48c1-ba36-015f83890f0f"],
Cell[CellGroupData[{
Cell[44119, 1163, 1502, 39, 140, "Input",ExpressionUUID->"fe3f80bf-caaa-4339-850e-8af7012d3dc1"],
Cell[45624, 1204, 6936, 130, 254, "Output",ExpressionUUID->"f5442028-d390-4357-8953-fbd581db0524"]
}, Open  ]],
Cell[52575, 1337, 856, 24, 86, "Text",ExpressionUUID->"a7d8b293-db93-490e-b548-8b3b61471bad"],
Cell[CellGroupData[{
Cell[53456, 1365, 670, 13, 47, "Input",ExpressionUUID->"029c06aa-3362-49bd-8c99-02bb85b59042"],
Cell[54129, 1380, 495, 9, 50, "Output",ExpressionUUID->"b01bd05a-e04f-4ef7-9a2b-b1e54556a026"]
}, Open  ]],
Cell[54639, 1392, 497, 15, 75, "Text",ExpressionUUID->"ab13ffef-837b-4fb5-8bef-0d504cda417a"],
Cell[CellGroupData[{
Cell[55161, 1411, 605, 17, 71, "Input",ExpressionUUID->"9a239e70-6fcc-4b4c-897e-ba5f7baa7abb"],
Cell[55769, 1430, 1867, 52, 75, "Output",ExpressionUUID->"b9527276-6d1c-405e-8309-bbdbbc0c363a"]
}, Open  ]],
Cell[57651, 1485, 708, 17, 78, "Text",ExpressionUUID->"f3059c56-ffd1-4ac3-953f-297fd1123db9"],
Cell[CellGroupData[{
Cell[58384, 1506, 1544, 41, 148, "Input",ExpressionUUID->"220090c6-9284-4047-b680-a02b07a81746"],
Cell[59931, 1549, 420, 7, 50, "Output",ExpressionUUID->"8893ea43-8cce-4184-9b6b-45307eecaafe"],
Cell[60354, 1558, 418, 7, 50, "Output",ExpressionUUID->"6c7810af-8bfd-4740-821c-3c0ac8dd801a"],
Cell[60775, 1567, 418, 7, 50, "Output",ExpressionUUID->"28f21dac-e4ed-4af1-ad4b-dce4ca33a0b7"],
Cell[61196, 1576, 7722, 147, 270, "Output",ExpressionUUID->"1b26a507-cbb7-4979-8577-5465ec7a7169"]
}, Open  ]],
Cell[68933, 1726, 238, 4, 33, "Text",ExpressionUUID->"c24cbcc2-81a2-48bb-96f3-eab5c13d19f9"],
Cell[69174, 1732, 211, 3, 33, "Text",ExpressionUUID->"c086559c-abbe-4ed6-9624-722760731b3e"],
Cell[69388, 1737, 589, 17, 60, "DisplayFormula",ExpressionUUID->"6ca3b689-7b22-43f8-8d8f-ff4182dfff35"],
Cell[CellGroupData[{
Cell[70002, 1758, 441, 11, 71, "Input",ExpressionUUID->"dd366685-3682-4f14-bc95-8cc1188c8932"],
Cell[70446, 1771, 410, 13, 59, "Output",ExpressionUUID->"00c46709-5ee0-4043-ad37-b1e4de4981da"]
}, Open  ]],
Cell[70871, 1787, 1412, 42, 122, "Text",ExpressionUUID->"ae6722af-8df1-4af6-9ccf-889cad68cc18"],
Cell[CellGroupData[{
Cell[72308, 1833, 445, 11, 71, "Input",ExpressionUUID->"e3aeb1be-1ab2-441e-a2df-4fdda6daaa6e"],
Cell[72756, 1846, 2084, 57, 105, "Output",ExpressionUUID->"da0564f1-e212-4612-983e-f82d4ce4a587"]
}, Open  ]],
Cell[74855, 1906, 323, 10, 39, "Text",ExpressionUUID->"b18f0b43-cb79-480d-9953-7d39cd91dffb"],
Cell[CellGroupData[{
Cell[75203, 1920, 831, 24, 114, "Input",ExpressionUUID->"8b39cc35-773b-41bf-b6ec-b190410d2c67"],
Cell[76037, 1946, 316, 7, 53, "Output",ExpressionUUID->"5d6685b6-b4b5-4968-b263-5d33af3cb5a9"]
}, Open  ]],
Cell[76368, 1956, 548, 17, 60, "Text",ExpressionUUID->"012a6dcb-9900-429e-a6b0-a4145d88d695"],
Cell[CellGroupData[{
Cell[76941, 1977, 216, 6, 53, "Input",ExpressionUUID->"59774946-4983-402f-b26e-3ed443aa3ac6"],
Cell[77160, 1985, 186, 6, 73, "Output",ExpressionUUID->"e0a88955-2fdc-496c-9181-9c4702dcd872"]
}, Open  ]],
Cell[77361, 1994, 174, 3, 33, "Text",ExpressionUUID->"6e22375c-cd92-4f67-9517-0ff9fe3dc0ae"],
Cell[CellGroupData[{
Cell[77560, 2001, 332, 10, 69, "Input",ExpressionUUID->"97dd523d-6f94-4f14-803d-819f84fe315d"],
Cell[77895, 2013, 132, 3, 50, "Output",ExpressionUUID->"34dc070a-5841-4876-8f19-9497d747b607"]
}, Open  ]],
Cell[78042, 2019, 198, 6, 54, "Text",ExpressionUUID->"f3506f95-36cf-4a4a-8da0-33ff99a2dbf0"],
Cell[CellGroupData[{
Cell[78265, 2029, 2690, 68, 332, "Input",ExpressionUUID->"e23ea585-d4fe-437c-bef8-d662c45dae75"],
Cell[80958, 2099, 1107, 21, 73, "Output",ExpressionUUID->"1b8afa2a-0631-47a8-b867-2a68aeb8a060"],
Cell[82068, 2122, 2659, 64, 83, "Output",ExpressionUUID->"bf8b4289-f479-4339-a846-8f69e9a8a4de"],
Cell[84730, 2188, 865, 13, 50, "Output",ExpressionUUID->"98075b7d-097f-47f5-bda6-bd597360b21d"],
Cell[85598, 2203, 10474, 179, 261, "Output",ExpressionUUID->"83b9ed8c-2c97-4dd8-a075-a91d77fce3fb"],
Cell[96075, 2384, 1212, 28, 75, "Output",ExpressionUUID->"324ecb11-03f3-4c57-a5eb-e75c8e3e4ce3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97324, 2417, 447, 13, 99, "Input",ExpressionUUID->"e002fd87-0499-4f38-9ac4-408b7954d3e7"],
Cell[97774, 2432, 305, 8, 67, "Output",ExpressionUUID->"f859b83f-e6a2-4213-94fe-ad3d64c1fc00"]
}, Open  ]],
Cell[98094, 2443, 1216, 25, 162, "Text",ExpressionUUID->"113a710a-d272-479b-9524-e8d3b3dc02f3"],
Cell[CellGroupData[{
Cell[99335, 2472, 1148, 30, 140, "Input",ExpressionUUID->"3f477cb1-a721-4f28-a849-36ae73391656"],
Cell[100486, 2504, 12841, 218, 254, "Output",ExpressionUUID->"55986121-6fc6-4be2-8be9-62d81721e8f3"]
}, Open  ]],
Cell[113342, 2725, 7324, 175, 1000, "Text",ExpressionUUID->"6fc80af7-9fdd-478c-8ea4-8a4709683986"],
Cell[120669, 2902, 1112, 29, 118, "Text",ExpressionUUID->"12a02bf3-9dbe-4cbe-83a2-7dd8e8c2789d"],
Cell[CellGroupData[{
Cell[121806, 2935, 851, 21, 110, "Input",ExpressionUUID->"046cd5cb-1e84-450d-a403-4c5fe7e7b6f3"],
Cell[122660, 2958, 737, 14, 50, "Output",ExpressionUUID->"2eed67f9-9b09-45b5-af89-dea6a651a373"]
}, Open  ]],
Cell[123412, 2975, 1249, 24, 81, "Text",ExpressionUUID->"b2b6ed60-adee-4b08-a4c3-6d7393b460bb"],
Cell[CellGroupData[{
Cell[124686, 3003, 377, 10, 50, "Input",ExpressionUUID->"6e3382b4-ec04-4606-9310-73d67ff4b0d3"],
Cell[125066, 3015, 881, 22, 81, "Output",ExpressionUUID->"ada50e60-14be-41e2-ae4c-88704605e07d"]
}, Open  ]],
Cell[125962, 3040, 1588, 47, 83, "Text",ExpressionUUID->"55a3a642-4da1-472a-be24-eaa81d27d1d0"],
Cell[CellGroupData[{
Cell[127575, 3091, 2447, 54, 186, "Input",ExpressionUUID->"c9e3df14-286c-4377-b911-ff77aad7a475"],
Cell[130025, 3147, 145265, 2396, 254, "Output",ExpressionUUID->"5386e403-d8e2-4239-9833-22c0208052d0"],
Cell[275293, 5545, 27849, 795, 249, "Output",ExpressionUUID->"acd9f656-469f-49b1-b912-1df55b55af70"],
Cell[303145, 6342, 1052, 17, 50, "Output",ExpressionUUID->"63ee218c-50b3-4f3a-b161-a2fbc4e5d725"],
Cell[304200, 6361, 9928, 182, 258, "Output",ExpressionUUID->"20de0584-9754-484a-b453-112fa6b3f598"]
}, Open  ]],
Cell[314143, 6546, 709, 16, 138, "Text",ExpressionUUID->"1b32d12f-6b8f-46e3-b31c-f3cee8c32685"],
Cell[CellGroupData[{
Cell[314877, 6566, 1313, 30, 161, "Input",ExpressionUUID->"56898702-3033-40a3-881e-2b9de2a5b804"],
Cell[316193, 6598, 766, 15, 68, "Output",ExpressionUUID->"eed1a942-b2c6-40d5-80d5-18f5184173c0"],
Cell[316962, 6615, 2072, 53, 98, "Output",ExpressionUUID->"5db12b02-7652-48c0-bab6-a3e7395b4932"]
}, Open  ]],
Cell[319049, 6671, 2146, 49, 312, "Text",ExpressionUUID->"9d5d020f-1421-482f-ab13-e841bdebc833"],
Cell[CellGroupData[{
Cell[321220, 6724, 380, 11, 65, "Input",ExpressionUUID->"ce2027f5-02f1-428f-855e-540368924d8c"],
Cell[321603, 6737, 326, 7, 50, "Output",ExpressionUUID->"4309317e-9124-415a-91e8-d047578d25fe"]
}, Open  ]],
Cell[321944, 6747, 220, 5, 33, "Text",ExpressionUUID->"fe344cd2-9be8-4f04-9960-6794a6c57aa4"],
Cell[CellGroupData[{
Cell[322189, 6756, 752, 20, 65, "Input",ExpressionUUID->"8af2a2c1-58f7-44ae-9da2-6d77f3a45c13"],
Cell[322944, 6778, 324, 6, 50, "Output",ExpressionUUID->"be52154b-8935-4481-9701-b7a3c84f864b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[323305, 6789, 1282, 32, 137, "Input",ExpressionUUID->"19ce2e3e-9ab9-4d1a-9ae8-b123c8a64fd4"],
Cell[324590, 6823, 651, 15, 75, "Output",ExpressionUUID->"a092499e-72ae-4e27-b307-cba630d6b47c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325278, 6843, 1010, 26, 167, "Input",ExpressionUUID->"57ee9025-a6a5-476b-973f-c27a2e4e4dfb"],
Cell[326291, 6871, 463, 11, 74, "Output",ExpressionUUID->"473dceda-f097-4a16-b091-add03a77af6b"],
Cell[326757, 6884, 2310, 63, 97, "Output",ExpressionUUID->"381d7b1d-518f-4500-8ab2-61b62e49777e"],
Cell[329070, 6949, 2158, 58, 85, "Output",ExpressionUUID->"64a40ed3-6ef0-4f43-b5f3-f0fcffb9837a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331265, 7012, 2831, 70, 163, "Input",ExpressionUUID->"5c2cc20a-cf19-496b-85b0-e6d658c37790"],
Cell[334099, 7084, 295535, 4875, 249, "Output",ExpressionUUID->"c7a0562a-49a3-4ced-9c2f-8bb9db1aff82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[629671, 11964, 1686, 44, 186, "Input",ExpressionUUID->"dbf11a53-3560-4279-95b0-2248733a1533"],
Cell[631360, 12010, 16987, 283, 266, "Output",ExpressionUUID->"31a20508-6158-4b04-9a58-719ebd1cbe5b"]
}, Open  ]],
Cell[648362, 12296, 754, 14, 138, "Text",ExpressionUUID->"dc771562-022a-4f25-a476-929f6049f960"],
Cell[CellGroupData[{
Cell[649141, 12314, 583, 16, 94, "Input",ExpressionUUID->"eca643a3-e223-4527-b6bd-06c11d6732e8"],
Cell[649727, 12332, 516, 12, 67, "Output",ExpressionUUID->"2447a376-9110-47c7-b6ae-c439b1a9b39f"]
}, Open  ]],
Cell[650258, 12347, 283, 7, 33, "Text",ExpressionUUID->"d1bf5a97-b836-4bd9-a1d1-c82a2cc47f20"],
Cell[CellGroupData[{
Cell[650566, 12358, 540, 11, 47, "Input",ExpressionUUID->"3e963a16-849e-4c62-bf88-403550bf7187"],
Cell[651109, 12371, 768, 19, 76, "Output",ExpressionUUID->"926cc920-9b92-46bf-afdd-1be3ed964854"]
}, Open  ]],
Cell[CellGroupData[{
Cell[651914, 12395, 640, 16, 78, "Input",ExpressionUUID->"db1637ee-5b24-43d6-b556-d26a1af09e0d"],
Cell[652557, 12413, 414, 7, 50, "Output",ExpressionUUID->"79bb66b4-5721-45ee-be4d-d4a4f62aed56"]
}, Open  ]],
Cell[CellGroupData[{
Cell[653008, 12425, 1272, 28, 117, "Input",ExpressionUUID->"0cc6b0a2-d7f8-423f-a8eb-9c854d2eb959"],
Cell[654283, 12455, 9400, 167, 392, "Output",ExpressionUUID->"3479802b-bdf2-495e-8ae5-93d8349cffb9"]
}, Open  ]],
Cell[663698, 12625, 261, 7, 54, "Text",ExpressionUUID->"5a675f84-3cfc-401c-a1df-4a579e688dcb"],
Cell[CellGroupData[{
Cell[663984, 12636, 611, 18, 120, "Input",ExpressionUUID->"404c7eb3-25a1-4111-be28-cf5aa80902f7"],
Cell[664598, 12656, 174, 4, 67, "Output",ExpressionUUID->"e9cbc801-792e-41df-87a4-c975d0b376f6"],
Cell[664775, 12662, 4876, 98, 252, "Output",ExpressionUUID->"c05d7c66-5c47-41e2-b86e-f493e2c7c912"]
}, Open  ]],
Cell[669666, 12763, 760, 19, 81, "Text",ExpressionUUID->"7c5ed7ad-b5a3-4004-a2a7-1daeddda20bd"],
Cell[CellGroupData[{
Cell[670451, 12786, 1088, 30, 135, "Input",ExpressionUUID->"868bda55-8546-4890-8cd5-a0afc0472dc6"],
Cell[671542, 12818, 428, 11, 58, "Output",ExpressionUUID->"dde34c15-d804-4e04-9144-1677f998ae3b"],
Cell[671973, 12831, 231, 5, 50, "Output",ExpressionUUID->"f8fae95b-0f18-456f-b9e6-6ff8f785bbd8"],
Cell[672207, 12838, 18636, 483, 270, 15993, 438, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6b1cb587-54df-437a-b3ef-a3f13164d667"]
}, Open  ]],
Cell[690858, 13324, 992, 20, 251, "Text",ExpressionUUID->"0d5af67b-f103-4a3b-8c19-18aa38015e59"],
Cell[691853, 13346, 575, 18, 36, "DisplayFormula",ExpressionUUID->"5bac7fb7-5b1c-495a-b876-de689200aad8"],
Cell[692431, 13366, 187, 3, 33, "Text",ExpressionUUID->"4cbda9ed-b90d-4892-9ef0-3c6d765aeb6d"],
Cell[692621, 13371, 811, 25, 53, "DisplayFormula",ExpressionUUID->"54f42878-cbc3-4464-afb2-53df3eab5313"],
Cell[693435, 13398, 288, 6, 33, "Text",ExpressionUUID->"369f9b3c-e1f6-450d-aec5-61dfb7386711"],
Cell[693726, 13406, 651, 23, 57, "DisplayFormula",ExpressionUUID->"421a0171-8072-4915-86dd-2f0f6be3b3d7"],
Cell[694380, 13431, 165, 3, 33, "Text",ExpressionUUID->"4728323a-6e6e-4453-aa8e-2e403996f23b"],
Cell[694548, 13436, 885, 27, 57, "DisplayFormula",ExpressionUUID->"59c31df9-4f16-4a98-992e-5a6bdbd06262"],
Cell[CellGroupData[{
Cell[695458, 13467, 561, 17, 96, "Input",ExpressionUUID->"be0dafc4-1cbf-4787-a959-398f100108bc"],
Cell[696022, 13486, 202, 4, 50, "Output",ExpressionUUID->"57121049-6167-42df-85d1-7387dff1ca3d"]
}, Open  ]],
Cell[696239, 13493, 860, 20, 85, "Text",ExpressionUUID->"29155f1c-6336-4042-8638-742b7d42a643"],
Cell[CellGroupData[{
Cell[697124, 13517, 1616, 46, 201, "Input",ExpressionUUID->"93176ac4-3948-4a21-8206-b730e6fac0e2"],
Cell[698743, 13565, 536, 14, 91, "Output",ExpressionUUID->"8ff902b8-129a-4b7d-a261-a28dfc31348b"],
Cell[699282, 13581, 423, 11, 72, "Output",ExpressionUUID->"57780f9e-3036-484c-abca-ef39c3ee13f8"]
}, Open  ]],
Cell[699720, 13595, 281, 7, 54, "Text",ExpressionUUID->"f8c0916d-f660-4f9b-b8cb-f19e84b9970e"],
Cell[CellGroupData[{
Cell[700026, 13606, 1062, 29, 117, "Input",ExpressionUUID->"02d7a5ed-6d78-45ac-90c5-a607ca158520"],
Cell[701091, 13637, 511, 12, 72, "Output",ExpressionUUID->"bcf112ae-a718-4470-ac98-002b5be6d7dc"]
}, Open  ]],
Cell[701617, 13652, 1067, 21, 184, "Text",ExpressionUUID->"24c91df3-cdfc-4481-ac9c-41a48d5ceed6"],
Cell[702687, 13675, 819, 25, 53, "DisplayFormulaNumbered",ExpressionUUID->"b1e82de1-66ed-47ff-b0c7-ed9da6cd386e"],
Cell[703509, 13702, 194, 3, 33, "Text",ExpressionUUID->"15b5ce0b-e4d0-4132-b469-f2e386a7195f"],
Cell[703706, 13707, 951, 29, 55, "DisplayFormula",ExpressionUUID->"7b7e863b-7a1c-4165-b179-c96e08b3e897"],
Cell[704660, 13738, 8552, 148, 305, "Text",ExpressionUUID->"2b294240-9121-44fe-8db2-b55ac12d8e3e"],
Cell[713215, 13888, 708, 15, 52, "DisplayFormula",ExpressionUUID->"85f0d406-b60a-4b9b-a1ea-331baf6c92a1"],
Cell[713926, 13905, 162, 3, 33, "Text",ExpressionUUID->"903d3258-d40a-41cf-8857-7078d3b3fd15"],
Cell[714091, 13910, 582, 18, 70, "DisplayFormula",ExpressionUUID->"0e5c0688-e45a-4945-a878-0d0cdd2f8c5b"],
Cell[714676, 13930, 876, 16, 138, "Text",ExpressionUUID->"b57a5216-3cd0-4647-9ffe-5fa77a2f9978"],
Cell[715555, 13948, 474, 14, 49, "DisplayFormula",ExpressionUUID->"6c41a0b3-5268-4a12-9264-528232dd90a8"],
Cell[716032, 13964, 183, 3, 33, "Text",ExpressionUUID->"30261b12-12e7-4aa1-a053-4a74d55b8878"],
Cell[716218, 13969, 2269, 78, 55, "DisplayFormula",ExpressionUUID->"988284e4-affb-4f0e-a726-142d6fd2dcd8"],
Cell[718490, 14049, 291, 4, 33, "Text",ExpressionUUID->"ae106719-6351-4dc8-9688-c8fc97555ea6"],
Cell[718784, 14055, 682, 21, 53, "DisplayFormula",ExpressionUUID->"7f190317-2416-4233-97e5-5d7e1aeacf95"],
Cell[719469, 14078, 226, 6, 54, "Text",ExpressionUUID->"fba777b8-ce5c-4a32-af77-968dcafa4b2d"],
Cell[719698, 14086, 838, 27, 56, "DisplayFormulaNumbered",ExpressionUUID->"d7e8db73-4b7a-49a9-8e1c-9e5a5d1a9226"],
Cell[720539, 14115, 536, 14, 34, "Text",ExpressionUUID->"ab797967-6038-468c-841a-a9f481feb5a8"],
Cell[721078, 14131, 1267, 41, 63, "DisplayFormula",ExpressionUUID->"e6cea2e9-4916-43ff-9201-2f26d7451267"],
Cell[722348, 14174, 177, 6, 54, "Text",ExpressionUUID->"47f5132a-76e8-4cd9-b35f-6f305f00cd25"],
Cell[722528, 14182, 520, 17, 34, "DisplayFormula",ExpressionUUID->"d1ae0c2c-55fd-4d26-a565-962082e724b7"],
Cell[723051, 14201, 223, 6, 54, "Text",ExpressionUUID->"cf14b712-7369-4010-a87a-aac56239d03f"],
Cell[723277, 14209, 3290, 97, 177, "DisplayFormula",ExpressionUUID->"998198ca-264c-4ade-9ad2-4616faf7a6ec"],
Cell[726570, 14308, 429, 10, 75, "Text",ExpressionUUID->"2cdfec61-e49b-4c05-8591-2199ff91e997"],
Cell[CellGroupData[{
Cell[727024, 14322, 3015, 82, 307, "Input",ExpressionUUID->"0c23d4d2-8878-4ca4-be02-05ec0249f977"],
Cell[730042, 14406, 820, 14, 50, "Output",ExpressionUUID->"76206359-68e5-48ec-9bcb-f85c5ebf399e"],
Cell[730865, 14422, 34784, 576, 254, "Output",ExpressionUUID->"a396bb4a-7b90-4ae1-be2d-5300b035f987"]
}, Open  ]],
Cell[765664, 15001, 1872, 34, 310, "Text",ExpressionUUID->"c0106cf8-74fb-413f-b63a-842aaff51674"],
Cell[767539, 15037, 193, 4, 33, "Text",ExpressionUUID->"003f1226-ebfb-4786-a2b2-0c018333c71a"],
Cell[767735, 15043, 1483, 35, 117, "Input",ExpressionUUID->"45d03943-cf7b-4287-9625-36dacc5fee8e"],
Cell[CellGroupData[{
Cell[769243, 15082, 214, 5, 50, "Input",ExpressionUUID->"25e3ffab-f05c-43be-acdd-7002091b7ff4"],
Cell[769460, 15089, 14768, 262, 260, "Output",ExpressionUUID->"c93d8376-4cbc-4e03-b9b2-30b41c472c6a"]
}, Open  ]],
Cell[784243, 15354, 212, 5, 33, "Text",ExpressionUUID->"6632a931-d4d4-4823-9402-c89d48f50181"],
Cell[784458, 15361, 487, 10, 47, "Input",ExpressionUUID->"9a234527-744a-4c6a-a42a-e4d028a3bc15"],
Cell[784948, 15373, 475, 10, 54, "Text",ExpressionUUID->"fa9e2974-0298-4f06-a8ad-5b2068697269"],
Cell[CellGroupData[{
Cell[785448, 15387, 498, 14, 47, "Input",ExpressionUUID->"000298f8-af56-4d32-be38-3b5e665505eb"],
Cell[785949, 15403, 25534, 441, 259, "Output",ExpressionUUID->"5265b17c-d4d1-4721-beff-e26012309a83"]
}, Open  ]],
Cell[811498, 15847, 628, 13, 96, "Text",ExpressionUUID->"807b4995-b40e-43ab-b3a1-6331d8ef3be0"],
Cell[CellGroupData[{
Cell[812151, 15864, 2942, 78, 347, "Input",ExpressionUUID->"75d03c39-6bbd-4a43-89a5-7f9e498c9b13"],
Cell[815096, 15944, 20864, 369, 385, "Output",ExpressionUUID->"cec1dc7b-207b-48df-a49c-0924bad91517"]
}, Open  ]],
Cell[835975, 16316, 407, 8, 54, "Text",ExpressionUUID->"ea372371-ab95-4179-822d-381c895d6a51"],
Cell[836385, 16326, 630, 16, 184, "Text",ExpressionUUID->"4d3306cb-1692-4468-84c6-e11cf05752f8"],
Cell[837018, 16344, 867, 23, 71, "DisplayFormula",ExpressionUUID->"69e6e07a-1424-46b5-aa83-5f6c7ddeb914"],
Cell[837888, 16369, 401, 8, 33, "Text",ExpressionUUID->"6009574c-f778-473a-8c7a-7660aafa9904"],
Cell[838292, 16379, 1496, 44, 71, "DisplayFormula",ExpressionUUID->"a93c8151-6098-436b-a5df-02e49e4f7efc"],
Cell[839791, 16425, 861, 14, 54, "Text",ExpressionUUID->"0742ac7d-eb91-4356-81ef-041893ce048d"],
Cell[840655, 16441, 2656, 70, 301, "Input",ExpressionUUID->"e747c60f-8173-45c7-90fc-0ddb4ab175f7",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[843314, 16513, 237, 3, 50, "Output",ExpressionUUID->"44e6d6cd-2ced-4a76-8e1b-e5d3fd6d113f"],
Cell[843554, 16518, 263, 5, 50, "Output",ExpressionUUID->"80b604ed-d822-440a-9698-4a7158f319cb"],
Cell[843820, 16525, 1365, 36, 162, "Text",ExpressionUUID->"c51488d4-b88b-428a-a1c5-707fdbb94ffb"],
Cell[845188, 16563, 565, 18, 61, "DisplayFormula",ExpressionUUID->"01bb28d4-c94e-406e-8ae7-f413240a9d51"],
Cell[845756, 16583, 301, 5, 33, "Text",ExpressionUUID->"411def15-debe-46a3-859c-6ef722733323"],
Cell[CellGroupData[{
Cell[846082, 16592, 1734, 47, 255, "Input",ExpressionUUID->"e3d3eca7-79d9-45dc-bdf1-7f918d5f47d9"],
Cell[847819, 16641, 515, 16, 109, "Output",ExpressionUUID->"b8cbaea5-b75a-4fec-86cb-d53b4b2f897e"],
Cell[848337, 16659, 247, 4, 50, "Output",ExpressionUUID->"818c2635-3190-4d87-a110-56f4eb26b3b2"],
Cell[848587, 16665, 311, 7, 50, "Output",ExpressionUUID->"eff9dd41-7fda-48ef-bef7-ae2b615d7082"]
}, Open  ]],
Cell[848913, 16675, 1223, 27, 159, "Text",ExpressionUUID->"684e7fe6-9e03-4a48-adf1-a54952ebe956"],
Cell[CellGroupData[{
Cell[850161, 16706, 6582, 161, 576, "Input",ExpressionUUID->"4b8751dc-66a7-4335-a0c7-f371c5b57cba"],
Cell[856746, 16869, 2603, 38, 68, "Output",ExpressionUUID->"10aeccfe-58e6-4380-a6c3-d61a2f3e34f9"],
Cell[859352, 16909, 2628, 39, 66, "Output",ExpressionUUID->"55b92526-181a-4f5a-89aa-7fc915c9793b"],
Cell[861983, 16950, 4582, 99, 89, "Output",ExpressionUUID->"de9526b4-fb4c-4637-9538-8bc926756403"],
Cell[866568, 17051, 23542, 399, 393, "Output",ExpressionUUID->"76752621-3b54-41e3-8dad-5f294c6f7b57"],
Cell[890113, 17452, 2690, 39, 53, "Output",ExpressionUUID->"9c43eaa3-a863-4d74-8356-fed86679db3f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[892840, 17496, 1011, 25, 112, "Input",ExpressionUUID->"cdf6fde7-b329-4ec9-8f9f-d13b91c5b05a"],
Cell[893854, 17523, 221, 4, 50, "Output",ExpressionUUID->"d7e2604f-7ef9-45a7-8e27-5c77698f35e5"],
Cell[894078, 17529, 223, 4, 50, "Output",ExpressionUUID->"20978904-87c2-4e34-8039-1593a4b00639"],
Cell[894304, 17535, 221, 4, 50, "Output",ExpressionUUID->"09faa189-c669-4138-8ebc-64e7a6f57a3c"]
}, Open  ]],
Cell[894540, 17542, 1034, 24, 255, "Text",ExpressionUUID->"e8f4d4be-b595-49eb-b97b-7e015bb53194"]
}, Open  ]]
}
]
*)

