(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1887641,      36207]
NotebookOptionsPosition[   1845347,      35657]
NotebookOutlinePosition[   1845692,      35672]
CellTagsIndexPosition[   1845649,      35669]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Monte Carlo direct method", "Title",
 CellChangeTimes->{{3.814096680466717*^9, 3.8140966855719423`*^9}, 
   3.814113764173698*^9, 3.814114935137991*^9, 3.8141152811426153`*^9, {
   3.8141802549692373`*^9, 3.814180256046546*^9}, 
   3.814204617870545*^9},ExpressionUUID->"81a7a06d-52c2-4d11-913b-\
a8af72b73d32"],

Cell[TextData[{
 "Monte Carlo integration uses random sampling of a function to numerically \
compute an estimate of its integral. \nSuppose that ",
 StyleBox["we want to integrate the one-dimensional function f (x) from a to \
b",
  FontVariations->{"Underline"->True}],
 ":"
}], "Text",
 CellChangeTimes->{{3.814097031383604*^9, 
  3.8140970468347673`*^9}},ExpressionUUID->"2eae75d4-ca88-44fb-8a4b-\
ce9471ca3ecb"],

Cell[BoxData[
 StyleBox[
  RowBox[{"F", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814097091786824*^9, 
  3.8140971255387278`*^9}},ExpressionUUID->"7a6594ca-5f65-4643-81bf-\
070972108567"],

Cell[TextData[{
 "The integral sign \[Integral] represents integration. \nThe symbol ",
 StyleBox["dx",
  FontVariations->{"Underline"->True}],
 ", called the ",
 StyleBox["differential of the variable x",
  FontColor->RGBColor[1, 0.5, 0]],
 ", indicates that the variable of integration is x. \nThe function ",
 StyleBox["f(x)",
  FontVariations->{"Underline"->True}],
 " to be integrated is called the ",
 StyleBox["integrand",
  FontColor->RGBColor[1, 0.5, 0]],
 ". A function is said to be integrable if the integral of the function over \
its domain is finite.\nThe points ",
 StyleBox["a and b",
  FontVariations->{"Underline"->True}],
 " are called the ",
 StyleBox["limits of the integral",
  FontColor->RGBColor[1, 0.5, 0]],
 ". An integral where the limits are specified is called a ",
 StyleBox["definite integral",
  FontVariations->{"Underline"->True}],
 ". \nThe integral is said to be over the interval [a, b].\n\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "first", " ", "approach", " ", "it", " ", 
    "with", " ", "classical", " ", 
    RowBox[{"integration", "."}]}], TraditionalForm]],
  FontVariations->{"Underline"->True},ExpressionUUID->
  "7caa597e-651a-4a8b-9550-3ea13dfb130e"],
 "\n\nOur integrand is the function : ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"7", "x"}], "-", 
   RowBox[{"8.5", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"3", 
    SuperscriptBox["x", "3"]}]}]], "Input",
  CellChangeTimes->{{3.814099327212634*^9, 3.814099456903468*^9}, 
    3.8140994899816837`*^9, {3.814099556757195*^9, 3.814099559228497*^9}},
  ExpressionUUID->"7f1d7fd5-df10-4711-8de2-30ed21fc458e"],
 " and its domain \[Epsilon] R[0,2]."
}], "Text",
 CellChangeTimes->{{3.8140971490786343`*^9, 3.8140971783484898`*^9}, 
   3.814097234627434*^9, {3.8140982655508966`*^9, 3.814098275717971*^9}, {
   3.814099062904105*^9, 3.81409906605221*^9}, {3.814100885874774*^9, 
   3.8141009433644*^9}, {3.814101274905099*^9, 3.81410129643498*^9}, {
   3.8141021412020683`*^9, 3.8141021642166452`*^9}, {3.814103755786273*^9, 
   3.814103769410499*^9}, {3.814104445220669*^9, 
   3.814104468532771*^9}},ExpressionUUID->"fc817aa9-4e27-4cda-a5d2-\
c90744d66bf9"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"7", "x"}], "-", 
    RowBox[{"8.5", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"3", 
     SuperscriptBox["x", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.814099327212634*^9, 3.814099456903468*^9}, 
   3.8140994899816837`*^9, {3.814099556757195*^9, 3.814099559228497*^9}, {
   3.814101882921534*^9, 3.814101893090066*^9}, 
   3.814101924481963*^9},ExpressionUUID->"06cb5373-a65a-45ae-a358-\
685a790c2a6e"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
i9L+7/dFvv//93+/r/zf+v8BjIGPBQ==
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4j2UYB/DfoSR7Nc1jpGRG2ZsSUg7Kyjg2dY6RPbP3XhnZipAIUaGl
QRkt7WG3aG/53Pnjc93f+76u9/297/M87/VLTk1PScuQSCSSeCPpcn096XK+
TT6gtmMX/+kbq+t5Vr5AdXkRQ+S1fMmt+kk0lbszl3e4wWwgFeTylKMsZSgd
11GKW7iZJnRjDm9zvWsfoWQ8B12ZzSGuMx/ATfLddGEWB7nWvD8l5MGs4Yv4
LbOJNJJTmclbXGPWj+LyIFbzeTyX2QTukjszgzfJZ9aXYvJAVvFZvIPZeO6U
N3OOSvrZdJKnx5qTV59OUXk756mmXxjvK6/kU0rqx9FQ3sRZKupn0VH+hdry
UqbFPpJHTiNZvhhrI69jm9xS3coPclV1Qayh3Dr2lz/k+uqKIDdTN/KJvDvW
mrE00L+qtmEHf+v3xnuzmqf0+9XmbOaMfk+cL2bSQf+yen88Fz/rX1BrsYSp
+qbqkxyQc6sPU0T+l0byWp6RW6hP871cRZ0fey//Tj358SB/TAn5UerLGzlN
Bf0MHpSn8Bq59A9RWO7Hcj6iuNkY6sntmRzrQE6zPhSS+7KM4xQzG01duR2T
eIUcZr0pKKezlA8pajaKOnJbJsY6kd2sFwXk/NwY31Z8H/EdxHmPMxznMs4D
bZjAS2RzXU/yyrVirxkf+0NW8x7kkdNYwgckm42kpryBU5TXT+cBeRz7yKLv
Tm55K99RWT8v9kv+jbrych6T36eIPIIa8l80lFfFXsv3qZs4KZeLMx1nRG4V
e81Pcs24V5xDuYn6BHvl59Sr6Uau2Ee1LTv5J543vmPWxHmJtVFT2MK3+ufV
O5gbex/7FO/Kdn7Vvxj7wjIW6+9RN/CeXFgdTnX5TxrIK+PZ5Hvje+CEXDbO
Nq3kH6kR94ozGfcns9yVnPIWvuF2/Zw4X/Ii3qWQfhjV5PV8TRn9FFrKY+J7
4ip9F3LIvVnIMQqaDaWqvI6vKK2fTAt5dKwHmfSpZJd7sYCjFDAbQhU5hVHs
4UqzzmSTezKfI3FmzQZTWW7OSHZzhVknsso9mMfhON9mg2I/4kwwIvaXjGYd
yRLrEmvLcHaRwbxDnAG5Es0Yxk6S4vsmc6xJvFc8a/x+3DOupWLsKUPZkUj8
/8fYnkuRYdFM
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
        LineBox[CompressedData["
1:eJwl1XWUlWUQB+Clu7t36e5ulm5YQLqWsCgBCQMETBqkVBAVCUlBSVvKBLsx
AAHFBgQF0WeOfzw7v5lz7j33e9/5zialjk8ZlyYhIeGIP1EHxR92K9PpSh3S
ko70ZCAjmcjM4Pgse+Q76EZdsjDEPC175TvpTj2yMtQ8Hfvku+hBfaaYFeW4
/DA3ko1hZunZL99NTxow1awY78nLuInsDDfLwAF5Bik0ZJpZcd6Xl3MzOUg1
y8gL8kx68aC+Kt/J62kU56IvwQfyCm4hJyPMMvGifA+9eUhfjZPyBhrHGelL
8qG8kltZoq/Hj/J2cjFSn5mX5Fmskpvyu9yHuXJ1Tslb1O5slJ9Q2/CX3CTO
XS7FR/IzaldWyavVlvH9XNI/p/blIGP0S9X6cR6cj9+lpvAaO/Tr1Pa8wjX9
HnUAh8mtH6VmifvlZf1GtTOz5UfUZvwh71T7cIM8T63BaXmr2oNN8pNqW/6W
m8a+yIl8HN/FGrkVf8pjY2/kBvwkP0seRuuzxu+V59CX+fqafB9nQ7PYLX0S
n8iPMo68sYdm2XhVvpd+NCdf7Jx59jgb+T7604L8FKAghShMEYpSjOKxfz6X
g9fl+xlAy9hZs9J8Kj/GeErEvpnljHuSH2AgrWJnzcrwWdwtEygZ+2WWi0Ox
zwwiOXbUrCyfx/lxG6UYE/cX9xj7y2AW6GtxRt5M69hJfTm+kB8PcjKX5Yks
kxvys7xD7cVO+Wm1A//IiXFfch6OyJvULsyNs1ebx/vEBf2u2JE4J4boF6q1
4/3mrH6b2jPuhy36p9R2sXtc1e9W+8c5xPuhn62WZz9fxnOp3Vgrr1Vbc0V+
Xu3HJHm52ohfYq/U3uyS16sduS4nxc7IeTkaOx33J7fgojyURXIdzsWe0zZ2
Ul+Br+IdZjIr9I35Nd5PSsce6PPxRuwvw1isr8sPcQ60ix3VV+REvD/cTpnY
C7P8vBn3ynDax96aVeLrODumUDb2wqwAb8WZk0qH2FWzynwjr2Mq5eLuzQry
djwnI+hIeSaZF+Kd+M2MpBMV4nnNC/OuvIRRdKYilahMFapSjerUoCa14vl8
tgjH5KWMpku8I2ZV+DZ2j2ms1Dfht7hfNsid+Ffeqw5M8///xNr6/wBgdc+3

         "]]},
       Annotation[#, "Charting`Private`Tag$2149#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.857142715535196*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 2}, {2.857142715535196*^-7, 3.9999996326530756`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8140993549857817`*^9, 3.814099458178636*^9}, 
   3.8140994910997543`*^9, 3.8140995601038837`*^9, 3.81410161401801*^9, {
   3.814101886800085*^9, 3.81410189455541*^9}, 3.8141019254254303`*^9, 
   3.814103689875345*^9, 3.814103882105876*^9, 3.814103956662059*^9, 
   3.814104058738574*^9, {3.814104097008477*^9, 3.814104120722858*^9}, 
   3.8141041524754267`*^9, 3.8141042620939198`*^9, 3.814106332812872*^9, 
   3.814107775840403*^9, 3.814107838738736*^9, 3.814196906649659*^9, 
   3.814208129222267*^9, 3.8142771903990507`*^9, 3.81438080612423*^9, 
   3.8144529397382183`*^9, 3.81461728221201*^9, 3.81471344987542*^9, 
   3.814729438630834*^9, 3.814729835261517*^9, 3.814784171445929*^9, 
   3.814785258944965*^9, 3.814786867519142*^9, 3.814787174225239*^9, 
   3.814787242685513*^9, 3.814790563764846*^9, 3.814799144698806*^9, 
   3.814799232934143*^9, 3.814803510864295*^9, 3.814808750431809*^9, 
   3.8148160214948587`*^9, 3.814817036632886*^9, 3.8148172001250677`*^9, 
   3.814817935209804*^9, 3.814818376558134*^9, 3.814819917887478*^9, 
   3.8149628739838037`*^9, 3.814964268562812*^9, 3.81496565961049*^9, 
   3.814968795931348*^9, 3.8149823146670218`*^9, 
   3.814982430603643*^9},ExpressionUUID->"9405a511-f081-425d-b925-\
11f2ebd03ed5"]
}, Open  ]],

Cell["\<\

Integration is generally referred as to find the area under the fnc curve.

Now the general approach for numerical deterministic integration is to :
- subdivide the area under the curve by many rectangular bins, 
- calculate for each their respective area and 
- eventually sum then all up \
\>", "Text",
 CellChangeTimes->{{3.8141010584260187`*^9, 3.814101137019327*^9}, {
   3.814101183257861*^9, 3.814101196465624*^9}, 3.814101436903606*^9, {
   3.814101961804929*^9, 3.814101982100021*^9}, {3.814102166224248*^9, 
   3.8141021796952467`*^9}, 
   3.8141885388940573`*^9},ExpressionUUID->"16cf7a31-0bd2-4869-8567-\
e52be2e652e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "di", ",", "intervals"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "0"}], ";", " ", 
   RowBox[{"b", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", "domain", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nbins", "=", "25"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"integration", " ", "steps"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"di", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], "/", "nbins"}]}], ";"}], " ", 
  RowBox[{"(*", " ", "base", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"intervals", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"a", ",", "b", ",", "di"}], "]"}]}], ";"}], " ", 
  RowBox[{
  "(*", " ", "intervals", " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.814100960336031*^9, 3.814100960337226*^9}, {
  3.814101025532358*^9, 3.814101047968478*^9}, {3.81410122720153*^9, 
  3.814101269072629*^9}, {3.814101351086217*^9, 3.814101369828253*^9}, {
  3.8141014035378237`*^9, 3.814101408846662*^9}, {3.814101988494351*^9, 
  3.81410211790994*^9}, {3.814102428571495*^9, 3.814102441370236*^9}, {
  3.814102506803912*^9, 
  3.8141025245098457`*^9}},ExpressionUUID->"98489bbf-6370-41e4-acd1-\
12eea7aa7e00"],

Cell[TextData[{
 "Above result is actually the ",
 StyleBox["base length of our rectangular bins",
  FontVariations->{"Underline"->True}],
 ". In fact, we subdivided the x-axis extension of our integrand by n-steps.\n\
Now we need to multiply the base by the height to find the area our \
rectangles. \nWhat is ",
 StyleBox["the height of our rectangles",
  FontVariations->{"Underline"->True}],
 " ? It\[CloseCurlyQuote]s the ",
 StyleBox["integrand evaluation at that point",
  FontVariations->{"Underline"->True}],
 ".\n\nOne little caveat is that we can start from the left of our basis or \
from the right or from the center."
}], "Text",
 CellChangeTimes->{{3.8141014670077763`*^9, 3.814101557502284*^9}, {
  3.8141017084332457`*^9, 3.81410173847099*^9}, {3.814102293253035*^9, 
  3.81410232931983*^9}},ExpressionUUID->"b2689eb9-38ca-4d95-9543-\
2ec0a5a86aeb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "1.25"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".5", "]"}], ",", "Brown", ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Darker", "@", "Pink"}], "]"}], ",", 
          RowBox[{"Rectangle", "@@@", 
           RowBox[{"(", 
            RowBox[{"Transpose", "/@", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"intervals", ",", "2", ",", "1"}], "]"}], ",", 
                RowBox[{"Partition", "[", 
                 RowBox[{
                  RowBox[{"Riffle", "[", 
                   RowBox[{
                    RowBox[{"f", "/@", 
                    RowBox[{"#", "@", "intervals"}]}], ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
                  "2"}], "]"}]}], "}"}], "]"}]}], ")"}]}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"Most", ",", "Rest", ",", 
      RowBox[{
       RowBox[{"MovingAverage", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814103098679202*^9, 3.8141030986812477`*^9}, {
  3.814103180207308*^9, 3.8141033131786327`*^9}},
 Background->None,ExpressionUUID->"01fda80a-9471-4390-801a-580cf7589d8a"],

Cell[BoxData[
 FrameBox[
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
           LineBox[CompressedData["
1:eJwd1H801WccB/DrZ9myCdPvdJeiXxJXaev05srPcGi6GfKzH1LyY5VF7BqV
JN3VNikrSatWqVAN3XaH1CGNooQtTjcSbd8fnu+3iexZfzznOa/zOec57/fz
nPNIo+LXbNSVSCS+dP2/GxeG6UgkDJjo0+/GxkTEaNI2+1PbhPkUXKGu0xY2
FVF39B50DKfes6izwEWHQd1fDUm334kYvL3OPlOXgdwgSJI2KuJ+j3+0oQGD
DaYLY4aHReRYu96Z8AEDk+Di7QIRMb7c+sAUcwYyPZ1d/ICIMnl4z/N51Jq1
axSPRYzqVeatWMng4eXIvR41Ilwrz3y8eA0D/003Y9WlIpz6RiIebmYgPDK/
dq1AxAP3r8fp72HwcmtWn8M+EWaWUem93zFo9i3VOieK+GKg617UOQYSqcuu
Z6EiZP27Y+KqGTR0/3DHyJv2C9/bbtPCQOtY+2mLowgyrvynpBcMWkOrDsye
LUJakrhU8S+dv7C1MpwoYuTXk6defcTikrBhWcGogN1jr9cbz2axXT5TWTYg
oOT2xcFuJxaajjaf3HYBDYnDfn5+LEZObfhWv17AEcVWQ+8oFmHuRbKRCgHj
K7zzhGQWXWcTljYWC5jl6rN1SS6LIk/raxZHBPR635o8o5gFY548slop4Ly7
uqD4JotAi7JJ1vECPtzRHX+jkcU2j7tzdoYLmDE1ySK1h4XnG0VfvZ+AZnaO
6QPCoj3lwsL9EJCuju2pMuJQ6KiJ1doJ6NSZmRFkyWHQKlMWIRXwNJnfmeXA
IabpafZKMwH7Ni37PNKLg3nuurwAfQG2XhNan4RxON8bJTUVCJLX69V0JXHw
rz/uYN1PEP8qRnkkm0P3PN31hzsJxl9gjj4u5OC8ycfD7Q+CwhCj1IqrHCqK
j3qdqCV4tk9l71rPYcXwhFPRNwlqny9HRAeHhIuRX265RKCoDJhuy3BQ5g/Z
vC0iyNEc9MvR59F88qRjzY8EldWKQOVkHt8HpH6y4BBB/mLVfGtbHpf+jF0t
zySwaBtYGyrnkaD3d0lqCsEq/nqAPIhH+8Ng1TeJBHEGE6U1cTzsdH53cdpC
sMwrz605g4fz5QL1aCTBVYOUzw7n81BOY+vLgwka+P1ZXRd5RFSEWG0LpPnb
5hbX/sYju9Mwqs6P4IydTBXSxsPTPaPZwYv2V0c/yujnUZH5fFLeKoKScpP7
ndRDL+0PpVA7/6Kuc3xF85QuNt5MnZw/6UY/tWaPbJEzdW9i47GAQR7TdTNe
c670fuY6hEn/oedVtcYHU6erdPs1Qzy00mfKJXKCqfuv9EwldL4ozNeS+npa
aMcOas8TZ6yMqQdjbzTaCDzeVGfxL10IQtxiS1Uij1VD101PUzsNt3wVMUz7
eWauM6NuZdK3VVEPyuqbdagT+hZsNH/Lo06vK5BxJjjXuldxj/p8TGZaE7XF
leXL7UZ5mNg98c+mLjvbuySHOtDk7qxkat/Co/O11DZmqrcbqbMOvJ527B2P
rqKrLa7Us5THzTnqe9VGTfbUt3Z5GPuM0febgkdS6qC4IYOfqYcyArQm1Pz7
f4vmV7tIJNT/AYF8iJ8=
            "]]},
          Annotation[#, "Charting`Private`Tag$2275#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1, 1.328125000956633},
       DisplayFunction->Identity,
       Epilog->{
         Opacity[0.5], 
         RGBColor[0.6, 0.4, 0.2], 
         EdgeForm[
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], {
          RectangleBox[{0, 0}, 
           NCache[{
             Rational[2, 25], 0.}, {0.08, 0.}]], 
          RectangleBox[
           NCache[{
             Rational[2, 25], 0}, {0.08, 0}], 
           NCache[{
             Rational[4, 25], 0.507136}, {0.16, 0.507136}]], 
          RectangleBox[
           NCache[{
             Rational[4, 25], 0}, {0.16, 0}], 
           NCache[{
             Rational[6, 25], 0.9146880000000001}, {0.24, 
            0.9146880000000001}]], 
          RectangleBox[
           NCache[{
             Rational[6, 25], 0}, {0.24, 0}], 
           NCache[{
             Rational[8, 25], 1.2318719999999999`}, {0.32, 
            1.2318719999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[8, 25], 0}, {0.32, 0}], 
           NCache[{
             Rational[2, 5], 1.467904}, {0.4, 1.467904}]], 
          RectangleBox[
           NCache[{
             Rational[2, 5], 0}, {0.4, 0}], 
           NCache[{
             Rational[12, 25], 1.6319999999999997`}, {0.48, 
            1.6319999999999997`}]], 
          RectangleBox[
           NCache[{
             Rational[12, 25], 0}, {0.48, 0}], 
           NCache[{
             Rational[14, 25], 1.733376}, {0.56, 1.733376}]], 
          RectangleBox[
           NCache[{
             Rational[14, 25], 0}, {0.56, 0}], 
           NCache[{
             Rational[16, 25], 1.781248}, {0.64, 1.781248}]], 
          RectangleBox[
           NCache[{
             Rational[16, 25], 0}, {0.64, 0}], 
           NCache[{
             Rational[18, 25], 1.7848320000000002`}, {0.72, 
            1.7848320000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[18, 25], 0}, {0.72, 0}], 
           NCache[{
             Rational[4, 5], 1.7533440000000005`}, {0.8, 
            1.7533440000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[4, 5], 0}, {0.8, 0}], 
           NCache[{
             Rational[22, 25], 1.6959999999999993`}, {0.88, 
            1.6959999999999993`}]], 
          RectangleBox[
           NCache[{
             Rational[22, 25], 0}, {0.88, 0}], 
           NCache[{
             Rational[24, 25], 1.6220160000000003`}, {0.96, 
            1.6220160000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[24, 25], 0}, {0.96, 0}], 
           NCache[{
             Rational[26, 25], 1.5406080000000002`}, {1.04, 
            1.5406080000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[26, 25], 0}, {1.04, 0}], 
           NCache[{
             Rational[28, 25], 1.460992}, {1.12, 1.460992}]], 
          RectangleBox[
           NCache[{
             Rational[28, 25], 0}, {1.12, 0}], 
           NCache[{
             Rational[6, 5], 1.3923839999999998`}, {1.2, 
            1.3923839999999998`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 5], 0}, {1.2, 0}], 
           NCache[{
             Rational[32, 25], 1.3440000000000003`}, {1.28, 
            1.3440000000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[32, 25], 0}, {1.28, 0}], 
           NCache[{
             Rational[34, 25], 1.325056}, {1.36, 1.325056}]], 
          RectangleBox[
           NCache[{
             Rational[34, 25], 0}, {1.36, 0}], 
           NCache[{
             Rational[36, 25], 1.344768000000001}, {1.44, 
            1.344768000000001}]], 
          RectangleBox[
           NCache[{
             Rational[36, 25], 0}, {1.44, 0}], 
           NCache[{
             Rational[38, 25], 1.412352000000002}, {1.52, 
            1.412352000000002}]], 
          RectangleBox[
           NCache[{
             Rational[38, 25], 0}, {1.52, 0}], 
           NCache[{
             Rational[8, 5], 1.5370240000000006`}, {1.6, 
            1.5370240000000006`}]], 
          RectangleBox[
           NCache[{
             Rational[8, 5], 0}, {1.6, 0}], 
           NCache[{
             Rational[42, 25], 1.727999999999998}, {1.68, 
            1.727999999999998}]], 
          RectangleBox[
           NCache[{
             Rational[42, 25], 0}, {1.68, 0}], 
           NCache[{
             Rational[44, 25], 1.994495999999998}, {1.76, 
            1.994495999999998}]], 
          RectangleBox[
           NCache[{
             Rational[44, 25], 0}, {1.76, 0}], 
           NCache[{
             Rational[46, 25], 2.345728000000001}, {1.84, 
            2.345728000000001}]], 
          RectangleBox[
           NCache[{
             Rational[46, 25], 0}, {1.84, 0}], 
           NCache[{
             Rational[48, 25], 2.7909120000000005`}, {1.92, 
            2.7909120000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[48, 25], 0}, {1.92, 0}], {2, 3.3392640000000036`}]}},
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Small,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{1, 1.25}, {1.328125000956633, 1.4999999948979585`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {96.75, -58.40421193686506}, 
      ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}], InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
           LineBox[CompressedData["
1:eJwd1H801WccB/DrZ9myCdPvdJeiXxJXaev05srPcGi6GfKzH1LyY5VF7BqV
JN3VNikrSatWqVAN3XaH1CGNooQtTjcSbd8fnu+3iexZfzznOa/zOec57/fz
nPNIo+LXbNSVSCS+dP2/GxeG6UgkDJjo0+/GxkTEaNI2+1PbhPkUXKGu0xY2
FVF39B50DKfes6izwEWHQd1fDUm334kYvL3OPlOXgdwgSJI2KuJ+j3+0oQGD
DaYLY4aHReRYu96Z8AEDk+Di7QIRMb7c+sAUcwYyPZ1d/ICIMnl4z/N51Jq1
axSPRYzqVeatWMng4eXIvR41Ilwrz3y8eA0D/003Y9WlIpz6RiIebmYgPDK/
dq1AxAP3r8fp72HwcmtWn8M+EWaWUem93zFo9i3VOieK+GKg617UOQYSqcuu
Z6EiZP27Y+KqGTR0/3DHyJv2C9/bbtPCQOtY+2mLowgyrvynpBcMWkOrDsye
LUJakrhU8S+dv7C1MpwoYuTXk6defcTikrBhWcGogN1jr9cbz2axXT5TWTYg
oOT2xcFuJxaajjaf3HYBDYnDfn5+LEZObfhWv17AEcVWQ+8oFmHuRbKRCgHj
K7zzhGQWXWcTljYWC5jl6rN1SS6LIk/raxZHBPR635o8o5gFY548slop4Ly7
uqD4JotAi7JJ1vECPtzRHX+jkcU2j7tzdoYLmDE1ySK1h4XnG0VfvZ+AZnaO
6QPCoj3lwsL9EJCuju2pMuJQ6KiJ1doJ6NSZmRFkyWHQKlMWIRXwNJnfmeXA
IabpafZKMwH7Ni37PNKLg3nuurwAfQG2XhNan4RxON8bJTUVCJLX69V0JXHw
rz/uYN1PEP8qRnkkm0P3PN31hzsJxl9gjj4u5OC8ycfD7Q+CwhCj1IqrHCqK
j3qdqCV4tk9l71rPYcXwhFPRNwlqny9HRAeHhIuRX265RKCoDJhuy3BQ5g/Z
vC0iyNEc9MvR59F88qRjzY8EldWKQOVkHt8HpH6y4BBB/mLVfGtbHpf+jF0t
zySwaBtYGyrnkaD3d0lqCsEq/nqAPIhH+8Ng1TeJBHEGE6U1cTzsdH53cdpC
sMwrz605g4fz5QL1aCTBVYOUzw7n81BOY+vLgwka+P1ZXRd5RFSEWG0LpPnb
5hbX/sYju9Mwqs6P4IydTBXSxsPTPaPZwYv2V0c/yujnUZH5fFLeKoKScpP7
ndRDL+0PpVA7/6Kuc3xF85QuNt5MnZw/6UY/tWaPbJEzdW9i47GAQR7TdTNe
c670fuY6hEn/oedVtcYHU6erdPs1Qzy00mfKJXKCqfuv9EwldL4ozNeS+npa
aMcOas8TZ6yMqQdjbzTaCDzeVGfxL10IQtxiS1Uij1VD101PUzsNt3wVMUz7
eWauM6NuZdK3VVEPyuqbdagT+hZsNH/Lo06vK5BxJjjXuldxj/p8TGZaE7XF
leXL7UZ5mNg98c+mLjvbuySHOtDk7qxkat/Co/O11DZmqrcbqbMOvJ527B2P
rqKrLa7Us5THzTnqe9VGTfbUt3Z5GPuM0febgkdS6qC4IYOfqYcyArQm1Pz7
f4vmV7tIJNT/AYF8iJ8=
            "]]},
          Annotation[#, "Charting`Private`Tag$2316#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1, 1.328125000956633},
       DisplayFunction->Identity,
       Epilog->{
         Opacity[0.5], 
         RGBColor[0.6, 0.4, 0.2], 
         EdgeForm[
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], {
          RectangleBox[{0, 0}, 
           NCache[{
             Rational[2, 25], 0.507136}, {0.08, 0.507136}]], 
          RectangleBox[
           NCache[{
             Rational[2, 25], 0}, {0.08, 0}], 
           NCache[{
             Rational[4, 25], 0.9146880000000001}, {0.16, 
            0.9146880000000001}]], 
          RectangleBox[
           NCache[{
             Rational[4, 25], 0}, {0.16, 0}], 
           NCache[{
             Rational[6, 25], 1.2318719999999999`}, {0.24, 
            1.2318719999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 25], 0}, {0.24, 0}], 
           NCache[{
             Rational[8, 25], 1.467904}, {0.32, 1.467904}]], 
          RectangleBox[
           NCache[{
             Rational[8, 25], 0}, {0.32, 0}], 
           NCache[{
             Rational[2, 5], 1.6319999999999997`}, {0.4, 
            1.6319999999999997`}]], 
          RectangleBox[
           NCache[{
             Rational[2, 5], 0}, {0.4, 0}], 
           NCache[{
             Rational[12, 25], 1.733376}, {0.48, 1.733376}]], 
          RectangleBox[
           NCache[{
             Rational[12, 25], 0}, {0.48, 0}], 
           NCache[{
             Rational[14, 25], 1.781248}, {0.56, 1.781248}]], 
          RectangleBox[
           NCache[{
             Rational[14, 25], 0}, {0.56, 0}], 
           NCache[{
             Rational[16, 25], 1.7848320000000002`}, {0.64, 
            1.7848320000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[16, 25], 0}, {0.64, 0}], 
           NCache[{
             Rational[18, 25], 1.7533440000000005`}, {0.72, 
            1.7533440000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[18, 25], 0}, {0.72, 0}], 
           NCache[{
             Rational[4, 5], 1.6959999999999993`}, {0.8, 
            1.6959999999999993`}]], 
          RectangleBox[
           NCache[{
             Rational[4, 5], 0}, {0.8, 0}], 
           NCache[{
             Rational[22, 25], 1.6220160000000003`}, {0.88, 
            1.6220160000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[22, 25], 0}, {0.88, 0}], 
           NCache[{
             Rational[24, 25], 1.5406080000000002`}, {0.96, 
            1.5406080000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[24, 25], 0}, {0.96, 0}], 
           NCache[{
             Rational[26, 25], 1.460992}, {1.04, 1.460992}]], 
          RectangleBox[
           NCache[{
             Rational[26, 25], 0}, {1.04, 0}], 
           NCache[{
             Rational[28, 25], 1.3923839999999998`}, {1.12, 
            1.3923839999999998`}]], 
          RectangleBox[
           NCache[{
             Rational[28, 25], 0}, {1.12, 0}], 
           NCache[{
             Rational[6, 5], 1.3440000000000003`}, {1.2, 
            1.3440000000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 5], 0}, {1.2, 0}], 
           NCache[{
             Rational[32, 25], 1.325056}, {1.28, 1.325056}]], 
          RectangleBox[
           NCache[{
             Rational[32, 25], 0}, {1.28, 0}], 
           NCache[{
             Rational[34, 25], 1.344768000000001}, {1.36, 
            1.344768000000001}]], 
          RectangleBox[
           NCache[{
             Rational[34, 25], 0}, {1.36, 0}], 
           NCache[{
             Rational[36, 25], 1.412352000000002}, {1.44, 
            1.412352000000002}]], 
          RectangleBox[
           NCache[{
             Rational[36, 25], 0}, {1.44, 0}], 
           NCache[{
             Rational[38, 25], 1.5370240000000006`}, {1.52, 
            1.5370240000000006`}]], 
          RectangleBox[
           NCache[{
             Rational[38, 25], 0}, {1.52, 0}], 
           NCache[{
             Rational[8, 5], 1.727999999999998}, {1.6, 1.727999999999998}]], 
          RectangleBox[
           NCache[{
             Rational[8, 5], 0}, {1.6, 0}], 
           NCache[{
             Rational[42, 25], 1.994495999999998}, {1.68, 
            1.994495999999998}]], 
          RectangleBox[
           NCache[{
             Rational[42, 25], 0}, {1.68, 0}], 
           NCache[{
             Rational[44, 25], 2.345728000000001}, {1.76, 
            2.345728000000001}]], 
          RectangleBox[
           NCache[{
             Rational[44, 25], 0}, {1.76, 0}], 
           NCache[{
             Rational[46, 25], 2.7909120000000005`}, {1.84, 
            2.7909120000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[46, 25], 0}, {1.84, 0}], 
           NCache[{
             Rational[48, 25], 3.3392640000000036`}, {1.92, 
            3.3392640000000036`}]], 
          RectangleBox[
           NCache[{
             Rational[48, 25], 0}, {1.92, 0}], {2, 4.}]}},
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Small,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{1, 1.25}, {1.328125000956633, 1.4999999948979585`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {290.25, -58.40421193686506}, 
      ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}], InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
           LineBox[CompressedData["
1:eJwd1H801WccB/DrZ9myCdPvdJeiXxJXaev05srPcGi6GfKzH1LyY5VF7BqV
JN3VNikrSatWqVAN3XaH1CGNooQtTjcSbd8fnu+3iexZfzznOa/zOec57/fz
nPNIo+LXbNSVSCS+dP2/GxeG6UgkDJjo0+/GxkTEaNI2+1PbhPkUXKGu0xY2
FVF39B50DKfes6izwEWHQd1fDUm334kYvL3OPlOXgdwgSJI2KuJ+j3+0oQGD
DaYLY4aHReRYu96Z8AEDk+Di7QIRMb7c+sAUcwYyPZ1d/ICIMnl4z/N51Jq1
axSPRYzqVeatWMng4eXIvR41Ilwrz3y8eA0D/003Y9WlIpz6RiIebmYgPDK/
dq1AxAP3r8fp72HwcmtWn8M+EWaWUem93zFo9i3VOieK+GKg617UOQYSqcuu
Z6EiZP27Y+KqGTR0/3DHyJv2C9/bbtPCQOtY+2mLowgyrvynpBcMWkOrDsye
LUJakrhU8S+dv7C1MpwoYuTXk6defcTikrBhWcGogN1jr9cbz2axXT5TWTYg
oOT2xcFuJxaajjaf3HYBDYnDfn5+LEZObfhWv17AEcVWQ+8oFmHuRbKRCgHj
K7zzhGQWXWcTljYWC5jl6rN1SS6LIk/raxZHBPR635o8o5gFY548slop4Ly7
uqD4JotAi7JJ1vECPtzRHX+jkcU2j7tzdoYLmDE1ySK1h4XnG0VfvZ+AZnaO
6QPCoj3lwsL9EJCuju2pMuJQ6KiJ1doJ6NSZmRFkyWHQKlMWIRXwNJnfmeXA
IabpafZKMwH7Ni37PNKLg3nuurwAfQG2XhNan4RxON8bJTUVCJLX69V0JXHw
rz/uYN1PEP8qRnkkm0P3PN31hzsJxl9gjj4u5OC8ycfD7Q+CwhCj1IqrHCqK
j3qdqCV4tk9l71rPYcXwhFPRNwlqny9HRAeHhIuRX265RKCoDJhuy3BQ5g/Z
vC0iyNEc9MvR59F88qRjzY8EldWKQOVkHt8HpH6y4BBB/mLVfGtbHpf+jF0t
zySwaBtYGyrnkaD3d0lqCsEq/nqAPIhH+8Ng1TeJBHEGE6U1cTzsdH53cdpC
sMwrz605g4fz5QL1aCTBVYOUzw7n81BOY+vLgwka+P1ZXRd5RFSEWG0LpPnb
5hbX/sYju9Mwqs6P4IydTBXSxsPTPaPZwYv2V0c/yujnUZH5fFLeKoKScpP7
ndRDL+0PpVA7/6Kuc3xF85QuNt5MnZw/6UY/tWaPbJEzdW9i47GAQR7TdTNe
c670fuY6hEn/oedVtcYHU6erdPs1Qzy00mfKJXKCqfuv9EwldL4ozNeS+npa
aMcOas8TZ6yMqQdjbzTaCDzeVGfxL10IQtxiS1Uij1VD101PUzsNt3wVMUz7
eWauM6NuZdK3VVEPyuqbdagT+hZsNH/Lo06vK5BxJjjXuldxj/p8TGZaE7XF
leXL7UZ5mNg98c+mLjvbuySHOtDk7qxkat/Co/O11DZmqrcbqbMOvJ527B2P
rqKrLa7Us5THzTnqe9VGTfbUt3Z5GPuM0febgkdS6qC4IYOfqYcyArQm1Pz7
f4vmV7tIJNT/AYF8iJ8=
            "]]},
          Annotation[#, "Charting`Private`Tag$2358#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1, 1.328125000956633},
       DisplayFunction->Identity,
       Epilog->{
         Opacity[0.5], 
         RGBColor[0.6, 0.4, 0.2], 
         EdgeForm[
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], {
          RectangleBox[{0, 0}, 
           NCache[{
             Rational[2, 25], 0.26659200000000005`}, {0.08, 
            0.26659200000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[2, 25], 0}, {0.08, 0}], 
           NCache[{
             Rational[4, 25], 0.722784}, {0.16, 0.722784}]], 
          RectangleBox[
           NCache[{
             Rational[4, 25], 0}, {0.16, 0}], 
           NCache[{
             Rational[6, 25], 1.0839999999999999`}, {0.24, 
            1.0839999999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 25], 0}, {0.24, 0}], 
           NCache[{
             Rational[8, 25], 1.359456}, {0.32, 1.359456}]], 
          RectangleBox[
           NCache[{
             Rational[8, 25], 0}, {0.32, 0}], 
           NCache[{
             Rational[2, 5], 1.5583680000000002`}, {0.4, 
            1.5583680000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[2, 5], 0}, {0.4, 0}], 
           NCache[{
             Rational[12, 25], 1.6899520000000001`}, {0.48, 
            1.6899520000000001`}]], 
          RectangleBox[
           NCache[{
             Rational[12, 25], 0}, {0.48, 0}], 
           NCache[{
             Rational[14, 25], 1.763424}, {0.56, 1.763424}]], 
          RectangleBox[
           NCache[{
             Rational[14, 25], 0}, {0.56, 0}], 
           NCache[{
             Rational[16, 25], 1.7880000000000003`}, {0.64, 
            1.7880000000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[16, 25], 0}, {0.64, 0}], 
           NCache[{
             Rational[18, 25], 1.7728960000000002`}, {0.72, 
            1.7728960000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[18, 25], 0}, {0.72, 0}], 
           NCache[{
             Rational[4, 5], 1.7273280000000002`}, {0.8, 
            1.7273280000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[4, 5], 0}, {0.8, 0}], 
           NCache[{
             Rational[22, 25], 1.6605119999999995`}, {0.88, 
            1.6605119999999995`}]], 
          RectangleBox[
           NCache[{
             Rational[22, 25], 0}, {0.88, 0}], 
           NCache[{
             Rational[24, 25], 1.5816640000000004`}, {0.96, 
            1.5816640000000004`}]], 
          RectangleBox[
           NCache[{
             Rational[24, 25], 0}, {0.96, 0}], 
           NCache[{
             Rational[26, 25], 1.5}, {1.04, 1.5}]], 
          RectangleBox[
           NCache[{
             Rational[26, 25], 0}, {1.04, 0}], 
           NCache[{
             Rational[28, 25], 1.424735999999999}, {1.12, 
            1.424735999999999}]], 
          RectangleBox[
           NCache[{
             Rational[28, 25], 0}, {1.12, 0}], 
           NCache[{
             Rational[6, 5], 1.3650879999999992`}, {1.2, 
            1.3650879999999992`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 5], 0}, {1.2, 0}], 
           NCache[{
             Rational[32, 25], 1.3302719999999981`}, {1.28, 
            1.3302719999999981`}]], 
          RectangleBox[
           NCache[{
             Rational[32, 25], 0}, {1.28, 0}], 
           NCache[{
             Rational[34, 25], 1.329504000000001}, {1.36, 
            1.329504000000001}]], 
          RectangleBox[
           NCache[{
             Rational[34, 25], 0}, {1.36, 0}], 
           NCache[{
             Rational[36, 25], 1.3719999999999999`}, {1.44, 
            1.3719999999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[36, 25], 0}, {1.44, 0}], 
           NCache[{
             Rational[38, 25], 1.4669760000000025`}, {1.52, 
            1.4669760000000025`}]], 
          RectangleBox[
           NCache[{
             Rational[38, 25], 0}, {1.52, 0}], 
           NCache[{
             Rational[8, 5], 1.6236479999999993`}, {1.6, 
            1.6236479999999993`}]], 
          RectangleBox[
           NCache[{
             Rational[8, 5], 0}, {1.6, 0}], 
           NCache[{
             Rational[42, 25], 1.8512320000000013`}, {1.68, 
            1.8512320000000013`}]], 
          RectangleBox[
           NCache[{
             Rational[42, 25], 0}, {1.68, 0}], 
           NCache[{
             Rational[44, 25], 2.158944}, {1.76, 2.158944}]], 
          RectangleBox[
           NCache[{
             Rational[44, 25], 0}, {1.76, 0}], 
           NCache[{
             Rational[46, 25], 2.5559999999999956`}, {1.84, 
            2.5559999999999956`}]], 
          RectangleBox[
           NCache[{
             Rational[46, 25], 0}, {1.84, 0}], 
           NCache[{
             Rational[48, 25], 3.051615999999999}, {1.92, 
            3.051615999999999}]], 
          RectangleBox[
           NCache[{
             Rational[48, 25], 0}, {1.92, 0}], {2, 3.655007999999995}]}},
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Small,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{1, 1.25}, {1.328125000956633, 1.4999999948979585`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {483.75, -58.40421193686506}, 
      ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}]}, {}},
   ContentSelectable->True,
   ImageSize->{592.5, 128.80842387373013`},
   PlotRangePadding->{6, 5}],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.81410309982195*^9, {3.814103166024954*^9, 3.814103314001748*^9}, 
   3.814103689980954*^9, {3.8141038417693996`*^9, 3.814103882176765*^9}, 
   3.8141039567308197`*^9, 3.814104058849155*^9, {3.814104097116539*^9, 
   3.814104120782456*^9}, 3.814104152545437*^9, 3.814104262152522*^9, 
   3.814107775938714*^9, 3.814107842668086*^9, {3.814208124052062*^9, 
   3.8142081403432083`*^9}, 3.814277197610407*^9, 3.814452952379423*^9, 
   3.8146172894608*^9, 3.814713450009719*^9, 3.81472943873974*^9, 
   3.814729835368651*^9, 3.8147841716105547`*^9, 3.814785259225099*^9, 
   3.814786867604925*^9, 3.814787174407775*^9, 3.814787242874547*^9, 
   3.8147905638603888`*^9, 3.81479914479734*^9, 3.81479923303265*^9, 
   3.814803510955689*^9, 3.814808750538101*^9, 3.814816021574787*^9, 
   3.8148170367172422`*^9, 3.814817200206141*^9, 3.814817935299926*^9, 
   3.814818376761311*^9, 3.814819917990836*^9, 3.814962874097686*^9, 
   3.814964268760211*^9, 3.81496565973958*^9, 3.814968796107544*^9, 
   3.814982314757264*^9, 
   3.8149824308259153`*^9},ExpressionUUID->"d42bb41e-4cef-41c5-ad91-\
d0bdd2b30c8d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leftSum", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"di", "*", 
      RowBox[{"f", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Most", "@", "intervals"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightSum", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "i", "]"}], " ", "di"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Rest", "@", "intervals"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"middleSum", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"i", "+", 
        RowBox[{"di", "/", "2"}]}], "]"}], " ", "di"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Most", "@", "intervals"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"{", 
   RowBox[{"leftSum", ",", "rightSum", ",", "middleSum"}], "}"}]}]}], "Input",\

 CellChangeTimes->{{3.8141015918876657`*^9, 3.81410164271115*^9}, {
   3.8141016760093107`*^9, 3.814101702315214*^9}, {3.814101783065185*^9, 
   3.8141018117981663`*^9}, 3.814101917259337*^9, {3.8141022134683113`*^9, 
   3.814102227757834*^9}, {3.8141023342535887`*^9, 3.814102376953779*^9}, 
   3.8141036586369743`*^9},ExpressionUUID->"f38abcd7-c3c7-4f49-9ba8-\
e9e7a92e33d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.1744000000000003`", ",", "3.4944`", ",", "3.3327999999999998`"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.814102377538102*^9, {3.814102432480341*^9, 3.814102445318421*^9}, {
   3.814102510093692*^9, 3.8141025276514063`*^9}, {3.814103679767552*^9, 
   3.814103690016307*^9}, 3.814103847774685*^9, 3.81410388221964*^9, 
   3.8141039567678967`*^9, 3.81410405888448*^9, {3.814104097155566*^9, 
   3.814104120816317*^9}, 3.8141041526244287`*^9, 3.81410426218801*^9, 
   3.8141077759792423`*^9, 3.814107846726859*^9, {3.814208119895162*^9, 
   3.81420814372818*^9}, 3.814277202010412*^9, 3.814452946245943*^9, 
   3.814617291019065*^9, 3.814713450052004*^9, 3.814729438784072*^9, 
   3.814729835412408*^9, 3.814784171632481*^9, 3.8147852592554092`*^9, 
   3.814786867631281*^9, 3.814787174436654*^9, 3.8147872428978157`*^9, 
   3.814790563886774*^9, 3.814799144825189*^9, 3.814799233074864*^9, 
   3.8148035109847307`*^9, 3.814808750565619*^9, 3.814816021599971*^9, 
   3.814817036741598*^9, 3.8148172002318697`*^9, 3.814817935328134*^9, 
   3.814818376777029*^9, 3.8148199180180817`*^9, 3.8149628741229763`*^9, 
   3.814964268783152*^9, 3.814965659764032*^9, 3.814968796133058*^9, 
   3.814982314784178*^9, 
   3.8149824308544197`*^9},ExpressionUUID->"9514a35b-44fa-4690-ae43-\
33d3cdb8989d"]
}, Open  ]],

Cell["\<\
Above is the result of nbins integration =25 (i.e. we subdivided the x by \
25).
Let\[CloseCurlyQuote]s use Mathematica symbols to calculate the correct true \
answer and compare it with our.
We see the middle point sum method is more precise  than the other twos.\
\>", "Text",
 CellChangeTimes->{{3.814102390294611*^9, 3.814102483784034*^9}, {
   3.814102534296946*^9, 3.814102549911954*^9}, 3.814102652218713*^9, {
   3.814103572558175*^9, 3.814103605744544*^9}, {3.814104565078614*^9, 
   3.814104592706987*^9}, {3.814104722309532*^9, 3.814104788254587*^9}, {
   3.814450650509424*^9, 
   3.814450668394923*^9}},ExpressionUUID->"c9f93fc5-88c4-4b69-a77f-\
37fc6cd3f55c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81409961705344*^9, 3.814099639426029*^9}, {
   3.814099689934586*^9, 3.8140996985255823`*^9}, {3.814099735766218*^9, 
   3.814099755661994*^9}, 3.814099847301474*^9, {3.814099905752988*^9, 
   3.8140999058645163`*^9}, {3.814101900315124*^9, 3.814101901234222*^9}, 
   3.8141021914682207`*^9},ExpressionUUID->"81c82f7e-ec77-41d8-a7df-\
0888f842c71d"],

Cell[BoxData["3.333333333333338`"], "Output",
 CellChangeTimes->{
  3.814099641379114*^9, 3.8140996995752068`*^9, {3.8140997371339293`*^9, 
   3.814099756310549*^9}, 3.814099848656006*^9, 3.814099906484927*^9, {
   3.8141019019281588`*^9, 3.814101928546084*^9}, 3.8141021922033863`*^9, 
   3.814102491625908*^9, 3.814103690058466*^9, {3.814103858900859*^9, 
   3.814103882261644*^9}, 3.81410395681071*^9, 3.814104058925905*^9, {
   3.814104097198936*^9, 3.8141041208555593`*^9}, 3.814104152643759*^9, 
   3.81410426222824*^9, 3.814107776024899*^9, 3.814107848661645*^9, 
   3.814208146544973*^9, 3.814277204371365*^9, 3.8146172931215467`*^9, 
   3.8147134501006947`*^9, 3.814729438834841*^9, 3.8147298354612217`*^9, 
   3.814784171659163*^9, 3.81478525929532*^9, 3.8147868676539297`*^9, 
   3.814787174476322*^9, 3.8147872429243813`*^9, 3.814790563925105*^9, 
   3.814799144870056*^9, 3.814799233111826*^9, 3.814803511019451*^9, 
   3.814808750612174*^9, 3.814816021622905*^9, 3.814817036761215*^9, 
   3.81481720025597*^9, 3.814817935362596*^9, 3.814818376817849*^9, 
   3.814819918049704*^9, 3.814962874171122*^9, 3.8149642688271713`*^9, 
   3.8149656597928267`*^9, 3.814968796160585*^9, 3.814982314803316*^9, 
   3.814982430895557*^9},ExpressionUUID->"8e0187c1-b006-4762-901f-\
d5f45e4c98dd"]
}, Open  ]],

Cell["\<\
We can still use Mathematica and NIntegrate to do what we\[CloseCurlyQuote]ve \
done manually above. \
\>", "Text",
 CellChangeTimes->{{3.8141042163739243`*^9, 
  3.8141042474455347`*^9}},ExpressionUUID->"518b6630-cd81-4b3b-ad25-\
18b1f582a02a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "@", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<RiemannRule\>\"", ",", 
        RowBox[{"\"\<Type\>\"", "\[Rule]", "#"}], ",", 
        RowBox[{"\"\<Points\>\"", "\[Rule]", "25"}]}], "}"}]}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Left\>\"", ",", "\"\<Right\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.814103829542708*^9, 3.81410383270131*^9}, {
   3.81410393989928*^9, 3.814103951300788*^9}, 3.814104012075678*^9, 
   3.814104053315024*^9, {3.8141040867087603`*^9, 3.814104116184724*^9}, 
   3.8141041490305147`*^9},ExpressionUUID->"c4175dc0-418a-4098-b3e8-\
c5c8ef537c32"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.874921875`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"3.333251461338975`\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"0.00015961071549491825`\\\"}]\\) for the \
integral and error estimates.\"",2,15,1,30341570116164617886,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8146173047797117`*^9, 3.814713450162183*^9, 
  3.814729438901643*^9, 3.8147298355121727`*^9, 3.814784171696357*^9, 
  3.814785259355999*^9, 3.814786867693812*^9, 3.8147871745228033`*^9, 
  3.814787242964373*^9, 3.814790563960083*^9, 3.8147991449347563`*^9, 
  3.814799233157049*^9, 3.814803511068409*^9, 3.8148087506783133`*^9, 
  3.814816021667253*^9, 3.814817036797503*^9, 3.814817200297143*^9, 
  3.814817935416749*^9, 3.814818376859501*^9, 3.814819918104711*^9, 
  3.8149628742394533`*^9, 3.814964268890171*^9, 3.814965659833292*^9, 
  3.814968796215618*^9, 3.814982314838976*^9, 
  3.814982430946389*^9},ExpressionUUID->"2c75ad41-b48d-4548-91e6-\
4b3faf7f081c"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.875`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"3.33341529051659`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0001593560859425433`\\\"}]\\) for the integral and \
error estimates.\"",2,15,2,30341570116164617886,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8146173047797117`*^9, 3.814713450162183*^9, 
  3.814729438901643*^9, 3.8147298355121727`*^9, 3.814784171696357*^9, 
  3.814785259355999*^9, 3.814786867693812*^9, 3.8147871745228033`*^9, 
  3.814787242964373*^9, 3.814790563960083*^9, 3.8147991449347563`*^9, 
  3.814799233157049*^9, 3.814803511068409*^9, 3.8148087506783133`*^9, 
  3.814816021667253*^9, 3.814817036797503*^9, 3.814817200297143*^9, 
  3.814817935416749*^9, 3.814818376859501*^9, 3.814819918104711*^9, 
  3.8149628742394533`*^9, 3.814964268890171*^9, 3.814965659833292*^9, 
  3.814968796215618*^9, 3.814982314838976*^9, 
  3.814982430991839*^9},ExpressionUUID->"dc23c131-1009-42d4-8c99-\
98f395840901"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.333251461338975`", ",", "3.33341529051659`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814617295498481*^9, 3.814617304811899*^9}, 
   3.814713450190016*^9, 3.814729438974667*^9, 3.814729835586177*^9, 
   3.814784171731139*^9, 3.814785259415201*^9, 3.814786867729145*^9, 
   3.8147871745769978`*^9, 3.814787243009369*^9, 3.8147905640014887`*^9, 
   3.8147991449785*^9, 3.8147992332086353`*^9, 3.814803511115384*^9, 
   3.814808750733323*^9, 3.814816021705193*^9, 3.8148170368320827`*^9, 
   3.814817200331573*^9, 3.8148179354641027`*^9, 3.814818376909721*^9, 
   3.8148199181481333`*^9, 3.8149628742723503`*^9, 3.814964268942625*^9, 
   3.814965659869071*^9, 3.8149687962505903`*^9, 3.814982314873982*^9, 
   3.814982430998775*^9},ExpressionUUID->"be6164bc-7519-4695-9d8f-\
95043e60d85c"]
}, Open  ]],

Cell[TextData[{
 "If we keep increasing the integration steps we\[CloseCurlyQuote]ll keep \
getting closer and closer to the correct answer. \nTo what point we should \
keep increasing our number of steps ? To have them an infinitesimal width ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "x"}], TraditionalForm]],ExpressionUUID->
  "bfacad35-3755-4824-8ece-87c271167fe3"],
 ".\n\nWhen the step width approaches \[DifferentialD]x we don\
\[CloseCurlyQuote]t talk anymore about summation but about integration and \
use the integral symbol."
}], "Text",
 CellChangeTimes->{{3.8141025564813967`*^9, 3.814102592280061*^9}, {
   3.814102627152499*^9, 3.81410272244268*^9}, 3.814102774482346*^9, {
   3.814102926178187*^9, 3.814102972371518*^9}, 
   3.814208350122473*^9},ExpressionUUID->"c95b5967-6242-41bb-a727-\
e0f1a1324488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "2"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"7", "x"}], "-", 
     RowBox[{"8.5", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", 
      SuperscriptBox["x", "3"]}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.814103042236553*^9, 
  3.814103043651166*^9}},ExpressionUUID->"872a2ab5-bda8-402c-995b-\
f3038e2706d1"],

Cell[BoxData["3.3333333333333357`"], "Output",
 CellChangeTimes->{
  3.8141030449477654`*^9, 3.814103690075952*^9, 3.814103882278244*^9, 
   3.814103956827361*^9, 3.814104058943815*^9, {3.814104097213546*^9, 
   3.814104120871978*^9}, 3.814104152686758*^9, 3.8141042623130903`*^9, 
   3.8141077761149607`*^9, 3.814208156291576*^9, 3.814277208468796*^9, 
   3.8146173123982162`*^9, 3.8147134501957607`*^9, 3.814729438982903*^9, 
   3.814729835591728*^9, 3.814784171748241*^9, 3.814785259421434*^9, 
   3.814786867734523*^9, 3.814787174597414*^9, 3.814787243026622*^9, 
   3.8147905640068274`*^9, 3.814799144984935*^9, 3.814799233214942*^9, 
   3.814803511149337*^9, 3.814808750738159*^9, 3.8148160217104473`*^9, 
   3.814817036837129*^9, 3.814817200335889*^9, 3.814817935495718*^9, 
   3.814818376927854*^9, 3.814819918180955*^9, 3.814962874278184*^9, 
   3.8149642689577627`*^9, 3.8149656598749723`*^9, 3.814968796267782*^9, 
   3.814982314880013*^9, 
   3.814982431018216*^9},ExpressionUUID->"70b21aa2-f51e-4832-a37a-\
47e62b1c1768"]
}, Open  ]],

Cell[TextData[{
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n\n",
 StyleBox["Now let\[CloseCurlyQuote]s approach this with Monte Carlo.\n\n",
  FontVariations->{"Underline"->True}],
 "We can approximate this integral by averaging samples of the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " at uniform random points within the interval. \nGiven a set of N uniform \
random variables ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "56660f92-8bf4-4336-8da5-f3aa1fac4400"],
 " \[Element] [a,b) with a corresponding PDF of 1/(b \[Minus] a) (i.e. the \
pdf of a uniform distribution)\n",
 StyleBox["the Monte Carlo ",
  FontVariations->{"Underline"->True}],
 StyleBox["estimator",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" for computing F is",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.814104373354229*^9, 3.814104385031438*^9}, {
   3.814104478363669*^9, 3.8141044787694273`*^9}, {3.814104821011489*^9, 
   3.814104862641696*^9}, {3.814104900326935*^9, 3.814104920938055*^9}, 
   3.814105153592046*^9, {3.814105432663651*^9, 3.8141054526403227`*^9}, {
   3.8141068165716963`*^9, 
   3.81410681742752*^9}},ExpressionUUID->"d77cc4b7-e60b-4440-af54-\
0c22cca304d8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], 
    FractionBox["1", 
     RowBox[{"N", "-", "1"}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "0"}], "N"], 
     RowBox[{"f", 
      RowBox[{"(", 
       SubscriptBox["X", "i"], ")"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814104937142453*^9, 
  3.81410500772044*^9}},ExpressionUUID->"e944003f-a0d6-4af6-b736-\
4b594cdd9c83"],

Cell[TextData[{
 StyleBox["(take care that the above is actually the sample mean of ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "b0aba4c2-d8a3-4ac0-a39c-76760a06eca5"],
 StyleBox[", aka the mean estimate, also called the ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["primary",
  FontSize->12,
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox[" MC estimator",
  FontSize->12,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox[")",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nThe random variable ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "0d3e410a-6a54-4358-8287-5e542ac13c03"],
 " \[Element] [a,b) can be constructed by :\n- warping a canonical random \
number uniformly distributed between zero and one, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "360fb03c-145b-4b52-a0dc-a289ee0e6f91"],
 " \[Element] [0, 1):"
}], "Text",
 CellChangeTimes->{{3.814105167415618*^9, 3.814105193753284*^9}, {
  3.814105253378922*^9, 3.814105259181077*^9}, {3.81411924267994*^9, 
  3.814119263042676*^9}, {3.814119300822188*^9, 3.81411933844129*^9}, {
  3.8141194276974583`*^9, 3.8141194326438847`*^9}, {3.8141215635339746`*^9, 
  3.814121566219068*^9}, {3.814439527869768*^9, 
  3.8144395364420633`*^9}},ExpressionUUID->"0092a223-5f26-4bdb-8379-\
10a5ea4351a8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["X", "i"], "=", 
   RowBox[{"a", "+", 
    RowBox[{
     SubscriptBox["\[Xi]", "i"], 
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814105206376273*^9, 3.8141052138014393`*^9}, {
  3.814105265683579*^9, 
  3.814105274146237*^9}},ExpressionUUID->"e57af973-5461-46d6-972e-\
2129f57dfda6"],

Cell["With that, our estimator becomes :", "Text",
 CellChangeTimes->{{3.814105325491436*^9, 3.8141053349863577`*^9}, {
  3.814105458736804*^9, 
  3.8141054632347927`*^9}},ExpressionUUID->"19247c26-c3a8-4372-b60d-\
338afe186874"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], 
    FractionBox["1", "N"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "0"}], 
      RowBox[{"N", "-", "1"}]], 
     RowBox[{"f", 
      RowBox[{"(", 
       RowBox[{"a", "+", 
        RowBox[{
         SubscriptBox["\[Xi]", "i"], 
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}]}]}], ")"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814105346844346*^9, 
  3.8141053989824533`*^9}},ExpressionUUID->"0201b2b7-a1ce-4d26-89bb-\
efc89dfef6a7"],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"]}], TraditionalForm]],ExpressionUUID->
  "c3f353d0-da9f-45b6-a995-f31f2ad09057"],
 " \[RightAngleBracket] means \[OpenCurlyQuote]approximating ",
 StyleBox["f ",
  FontSlant->"Italic"],
 "with N samples\[CloseCurlyQuote] and since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"9af3b739-5bc5-45ac-b537-aee3d4fb59c5"],
 " is a function of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "42f295a5-2b44-49f5-abd6-ef44754a15dd"],
 ", it\[CloseCurlyQuote]s itself a random variable."
}], "Text",
 CellChangeTimes->{{3.8141054685214767`*^9, 3.814105594139472*^9}, {
   3.81410564301094*^9, 3.814105646095276*^9}, {3.814180938608708*^9, 
   3.814181177468553*^9}, {3.814181249762949*^9, 3.8141812505949097`*^9}, {
   3.8142075991404*^9, 3.814207663084732*^9}, {3.814381191987707*^9, 
   3.8143812727879543`*^9}, {3.814381343918707*^9, 3.814381349937899*^9}, {
   3.814381383781313*^9, 3.814381384522491*^9}, 
   3.8144424506878347`*^9},ExpressionUUID->"38621163-7005-43f3-9d5b-\
84fd4085dd3c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], 
   FractionBox["1", "n"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"f", "[", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{"2", "/", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "while", " ", "the", " ", "above", " ", "procedures", " ", "are", " ", 
    "the", " ", "same", " ", "they", " ", "will", " ", "return", " ", 
    "different", " ", "results", " ", "due", " ", "to", " ", "the", " ", 
    "random", " ", "numbers"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.814106023533031*^9, 3.814106048782667*^9}, {
   3.8141061007593727`*^9, 3.814106168412736*^9}, {3.814106217482829*^9, 
   3.814106244032887*^9}, {3.8141062760509443`*^9, 3.81410631747344*^9}, {
   3.814106356672987*^9, 3.814106471126069*^9}, {3.8141065442545033`*^9, 
   3.814106661185931*^9}, {3.8141066989656277`*^9, 3.814106780913164*^9}, {
   3.814106838193061*^9, 3.814106894126009*^9}, 3.814107764653841*^9, {
   3.814107794981776*^9, 3.814107817738193*^9}, {3.8141078581848297`*^9, 
   3.8141078789047413`*^9}, {3.8141794379264603`*^9, 3.814179465779553*^9}, {
   3.814208180948373*^9, 3.814208201373966*^9}, {3.8142083099412737`*^9, 
   3.814208317138179*^9}, {3.8144534001249237`*^9, 
   3.814453403860623*^9}},ExpressionUUID->"d050fa1f-3566-4f69-8922-\
e750c989866f"],

Cell[BoxData["3.355809613951036`"], "Output",
 CellChangeTimes->{{3.814106115071307*^9, 3.814106169357486*^9}, {
   3.814106311625126*^9, 3.8141064717480583`*^9}, {3.81410654577206*^9, 
   3.814106662039564*^9}, {3.814106701714015*^9, 3.8141067838258257`*^9}, 
   3.814106844516671*^9, 3.814106897572513*^9, {3.814107768727974*^9, 
   3.814107776296854*^9}, {3.814107806998199*^9, 3.814107819745346*^9}, {
   3.814107854770447*^9, 3.814107884195302*^9}, 3.8141154304669857`*^9, 
   3.814118022132537*^9, {3.814208174202033*^9, 3.814208209080935*^9}, {
   3.814208312000634*^9, 3.814208325070347*^9}, 3.814277222015368*^9, 
   3.814452957428729*^9, {3.814453407443727*^9, 3.814453408890679*^9}, 
   3.8146173169416447`*^9, 3.8147134502449703`*^9, 3.814729439038188*^9, 
   3.8147298356438227`*^9, 3.8147841717667007`*^9, 3.8147852594657087`*^9, 
   3.814786867757633*^9, 3.8147871746350403`*^9, 3.814787243047076*^9, 
   3.814790564040114*^9, 3.8147991450254803`*^9, 3.814799233249645*^9, 
   3.814803511186421*^9, 3.814808750770152*^9, 3.814816021734828*^9, 
   3.814817036860881*^9, 3.814817200359774*^9, 3.814817935529728*^9, 
   3.814818376948996*^9, 3.8148199182153473`*^9, 3.8149628743122168`*^9, 
   3.814964268986157*^9, 3.814965659899069*^9, 3.814968796291767*^9, 
   3.8149823149033813`*^9, 
   3.8149824310550337`*^9},ExpressionUUID->"7ddd7c30-a05e-4085-ba44-\
f3a4abf888bb"],

Cell[BoxData["3.417577727409563`"], "Output",
 CellChangeTimes->{{3.814106115071307*^9, 3.814106169357486*^9}, {
   3.814106311625126*^9, 3.8141064717480583`*^9}, {3.81410654577206*^9, 
   3.814106662039564*^9}, {3.814106701714015*^9, 3.8141067838258257`*^9}, 
   3.814106844516671*^9, 3.814106897572513*^9, {3.814107768727974*^9, 
   3.814107776296854*^9}, {3.814107806998199*^9, 3.814107819745346*^9}, {
   3.814107854770447*^9, 3.814107884195302*^9}, 3.8141154304669857`*^9, 
   3.814118022132537*^9, {3.814208174202033*^9, 3.814208209080935*^9}, {
   3.814208312000634*^9, 3.814208325070347*^9}, 3.814277222015368*^9, 
   3.814452957428729*^9, {3.814453407443727*^9, 3.814453408890679*^9}, 
   3.8146173169416447`*^9, 3.8147134502449703`*^9, 3.814729439038188*^9, 
   3.8147298356438227`*^9, 3.8147841717667007`*^9, 3.8147852594657087`*^9, 
   3.814786867757633*^9, 3.8147871746350403`*^9, 3.814787243047076*^9, 
   3.814790564040114*^9, 3.8147991450254803`*^9, 3.814799233249645*^9, 
   3.814803511186421*^9, 3.814808750770152*^9, 3.814816021734828*^9, 
   3.814817036860881*^9, 3.814817200359774*^9, 3.814817935529728*^9, 
   3.814818376948996*^9, 3.8148199182153473`*^9, 3.8149628743122168`*^9, 
   3.814964268986157*^9, 3.814965659899069*^9, 3.814968796291767*^9, 
   3.8149823149033813`*^9, 
   3.81498243106931*^9},ExpressionUUID->"1ffd9dba-3285-4643-86c9-\
040387aeb7c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", "+", 
   RowBox[{
    RowBox[{"RandomReal", "[", "]"}], "*", 
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]], "Input",ExpressionUUID->\
"b1dd140f-8956-42d7-bf19-50ed627216b6"],

Cell[BoxData["1.480642222560963`"], "Output",
 CellChangeTimes->{{3.814277224555732*^9, 3.814277235699793*^9}, {
   3.814277270048518*^9, 3.814277278780251*^9}, {3.8144529334668713`*^9, 
   3.814452966765547*^9}, {3.814453412401885*^9, 3.8144534202094917`*^9}, 
   3.814617319369156*^9, 3.814713450251726*^9, 3.814729439047274*^9, 
   3.814729835651719*^9, 3.8147841717755823`*^9, 3.8147852594961443`*^9, 
   3.814786867763095*^9, 3.8147871746537237`*^9, 3.81478724305687*^9, 
   3.814790564046678*^9, 3.814799145032116*^9, 3.814799233255652*^9, 
   3.814803511193368*^9, 3.814808750775793*^9, 3.814816021741768*^9, 
   3.81481703686725*^9, 3.814817200387957*^9, 3.814817935535548*^9, 
   3.814818376956884*^9, 3.814819918221858*^9, 3.814962874319304*^9, 
   3.814964269006382*^9, 3.814965659904813*^9, 3.814968796301054*^9, 
   3.8149823149097347`*^9, 
   3.814982431075721*^9},ExpressionUUID->"8cd4fd05-2f27-47c1-a843-\
395f9e102bbb"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
========================\n[LT->Theory->2014 - Monte Carlo Integration \
Tecniques]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nIt is easy to show that the expected value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"3b3c4398-eac2-4b60-bd59-49a60bb492fb"],
 " is in fact F.\n\nFirst recall the proofs about Expected Values and \
Variance.\nThe expected value of a random variable Y=f(X) over a domain \
\[Mu](x) is "
}], "Text",
 CellChangeTimes->{{3.814113154171544*^9, 3.814113190282502*^9}, {
   3.814113492637925*^9, 3.814113523531446*^9}, {3.8141135627486887`*^9, 
   3.814113595464747*^9}, {3.814181208902832*^9, 3.814181210409606*^9}, {
   3.814181241775051*^9, 3.8141812835810747`*^9}, {3.814181370968357*^9, 
   3.814181460105528*^9}, {3.814181529887308*^9, 3.814181531079618*^9}, {
   3.8141817688370457`*^9, 3.814181841692225*^9}, {3.8141818740492077`*^9, 
   3.814181874049614*^9}, {3.814182374336804*^9, 3.8141824079950657`*^9}, {
   3.814182559565073*^9, 3.8141825632035923`*^9}, {3.814267280549535*^9, 
   3.814267375409088*^9}, {3.814267734761078*^9, 3.814267930306485*^9}, {
   3.814268009470064*^9, 3.814268033445407*^9}, {3.814268104026895*^9, 
   3.814268128192604*^9}, {3.814268776644075*^9, 3.814268778826208*^9}, {
   3.814378454050619*^9, 3.8143785019632263`*^9}, {3.814381411457749*^9, 
   3.814381417371743*^9}, 
   3.814464283006531*^9},ExpressionUUID->"e0bd3e94-c21b-4eba-906b-\
d950772cf66e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", "Y", "]"}], "=", 
   RowBox[{
    SubscriptBox["\[Integral]", 
     RowBox[{"\[Mu]", 
      RowBox[{"(", "x", ")"}]}]], 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], "pdf", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8141136032502613`*^9, 
  3.814113701169952*^9}},ExpressionUUID->"159d8802-76fb-47e1-96e0-\
75d45c3e4846"],

Cell["while its variance is", "Text",
 CellChangeTimes->{{3.814113707109817*^9, 
  3.814113713117345*^9}},ExpressionUUID->"42372d52-a2f9-42d1-bd82-\
55e453477733"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "[", "Y", "]"}], "=", 
   RowBox[{
    RowBox[{"E", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Y", "-", 
        RowBox[{"E", "[", "Y", "]"}]}], ")"}], "2"], "]"}], " ", "=", " ", 
    RowBox[{"E", "[", 
     SuperscriptBox[
      RowBox[{
       StyleBox["(",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox["Y",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox["-",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        SubscriptBox[
         StyleBox["\[Mu]",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], "y"]}], ")"}], "2"], "]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8141136032502613`*^9, 3.814113696864354*^9}, {
  3.814188646083054*^9, 
  3.8141887048314047`*^9}},ExpressionUUID->"9a8aab9c-32f8-4357-81e3-\
5d1f602a8236"],

Cell["\<\
where \[Sigma], the standard deviation, is the square root of the variance\
\>", "Text",
 CellChangeTimes->{{3.8141138196325703`*^9, 
  3.814113838396202*^9}},ExpressionUUID->"23e56697-34e5-43cc-a12d-\
c305af272077"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", "aY", "]"}], "=", 
   RowBox[{"aE", "[", "Y", "]"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "[", "aY", "]"}], "=", 
   RowBox[{
    SuperscriptBox["a", "2"], 
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], "[", "Y", "]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8141138634634237`*^9, 
  3.814113897819745*^9}},ExpressionUUID->"3a0ea884-3577-481e-adb2-\
310d5d800509"],

Cell[TextData[{
 "furthermore, the expected value of a sum of random variables ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "i"], TraditionalForm]],ExpressionUUID->
  "ae1bb565-ad0a-4f8d-974a-1fc21a40bb3d"],
 " is the sum of their expected values"
}], "Text",
 CellChangeTimes->{{3.814113908305347*^9, 
  3.8141139784368763`*^9}},ExpressionUUID->"f2d96c82-b23f-4ec3-854f-\
ba52e489b966"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"E", "[", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     SubscriptBox["Y", "i"]}], "]"}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["=",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  RowBox[{
   StyleBox[
    UnderscriptBox["\[Sum]", "i"],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{"E", "[", 
     SubscriptBox["Y", "i"], "]"}],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox["      ",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{
     StyleBox[
      RowBox[{"(", "*"}]], " ", 
     RowBox[{
      RowBox[{"this", " ", "is", " ", "called"}], ",", " ", 
      RowBox[{
      "the", " ", "linearity", " ", "of", " ", "the", " ", "expectation", " ",
        "value"}]}], " ", 
     StyleBox[
      RowBox[{"*", ")"}]]}],
    FontSize->12,
    FontColor->GrayLevel[0.5]]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814113985323145*^9, 3.814114079328199*^9}, {
  3.814268319645035*^9, 
  3.814268362282308*^9}},ExpressionUUID->"9d10da2e-31ef-4f8a-8d01-\
d3b1a5e0b887"],

Cell["From there we derive a simpler expression for the variance", "Text",
 CellChangeTimes->{{3.814114086189474*^9, 
  3.81411410320065*^9}},ExpressionUUID->"7f4d0690-3cfc-4e82-b10b-\
50335ef0fc48"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], "[", "Y", "]"}], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      SuperscriptBox["Y", "2"], "]"}], "-", 
     SuperscriptBox[
      RowBox[{"E", "[", "Y", "]"}], "2"]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[" ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "see", " ", "expectation", " ", "algebra", " ", "in", " ", "part1"}], " ",
     "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "[", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     SubscriptBox["Y", "i"]}], "]"}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["=",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  RowBox[{
   StyleBox[
    UnderscriptBox["\[Sum]", "i"],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], "[", 
     SubscriptBox["Y", "i"], "]"}],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[" ",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{"for", " ", "uncorrelated", " ", "randoms"}], " ", "*)"}],
    FontSize->12,
    FontColor->GrayLevel[0.5]]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814114110603692*^9, 3.814114130357065*^9}, {
   3.81411416548209*^9, 3.814114220222354*^9}, 3.814122380247123*^9, {
   3.814193362853059*^9, 
   3.814193402520405*^9}},ExpressionUUID->"fe7bfd64-c27c-48c7-acf3-\
ab51115df657"],

Cell[TextData[{
 "\nWith the above in mind we can demostrate that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"33667e09-5fa8-4ded-bb2f-15c2014663da"],
 " is in fact F\n",
 StyleBox["(so that the error here would be zero.. ie ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "f69038fb-2f12-4bee-bebf-013d8cf85a19"],
 StyleBox[" is an unbiased estimator)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.814114338774572*^9, 3.8141143549151373`*^9}, {
  3.814193477109755*^9, 
  3.814193544810898*^9}},ExpressionUUID->"3a38d5e8-0c4e-43fc-a071-\
e1d65ed7add5"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "]"}], "=", 
   RowBox[{"E", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{"f", 
       RowBox[{"(", 
        SubscriptBox["X", "i"], ")"}]}]}]}], "]"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{"E", "[", 
       RowBox[{"f", 
        RowBox[{"(", 
         SubscriptBox["X", "i"], ")"}]}], "]"}]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[" ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"from", " ", "4", " ", "and", " ", "3", "a"}], "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "a", "b"], 
       RowBox[{"f", 
        RowBox[{"(", "x", ")"}], "pdf", 
        RowBox[{"(", "x", ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["  ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"from", " ", "1"}], "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "a", "b"], 
       RowBox[{"f", 
        RowBox[{"(", "x", ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["  ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"since", " ", "pdf", 
      RowBox[{"(", "x", ")"}]}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}]}]}], "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{"f", 
      RowBox[{"(", "x", ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], " "}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{"F", "|", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"\[LeftAngleBracket]", "F", "\[RightAngleBracket]"}], 
     "\[RightAngleBracket]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814113210083948*^9, 3.8141134006386747`*^9}, {
   3.814114475799918*^9, 3.814114512725501*^9}, {3.81411454278506*^9, 
   3.814114660744947*^9}, 3.814119616836356*^9, {3.8142076789932823`*^9, 
   3.814207691617415*^9}},ExpressionUUID->"e71733bb-8150-48f0-ace3-\
f1a338c75b47"],

Cell[TextData[{
 "\nEventually due to \[OpenCurlyQuote]the law of large numbers\
\[CloseCurlyQuote] the estimator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"d8fb7e5e-0ffe-4f37-ab2e-6853b3047e31"],
 " becomes closer and closer to F ",
 StyleBox[" ",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.8141147254619217`*^9, 3.814114773182747*^9}, {
   3.814193559300509*^9, 3.8141935791012163`*^9}, {3.814268269086512*^9, 
   3.814268270144897*^9}, 
   3.814269014150543*^9},ExpressionUUID->"f57a00cc-ad4d-49fd-bf3a-\
5b2c52209fc0"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Pr", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       UnderscriptBox["lim", 
        RowBox[{"N", "\[Rule]", "\[Infinity]"}]], 
       RowBox[{"\[LeftAngleBracket]", 
        SuperscriptBox["F", "N"], "\[RightAngleBracket]"}]}], "=", "F"}], 
     "}"}]}], "=", "1"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["Pr",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   RowBox[{
    StyleBox["{",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     RowBox[{
      StyleBox[
       UnderscriptBox["lim", 
        RowBox[{"N", "\[Rule]", "\[Infinity]"}]],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      RowBox[{
       StyleBox["\[LeftAngleBracket]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       OverscriptBox[
        StyleBox["A",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], "-"], 
       StyleBox["\[RightAngleBracket]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]]}]}], 
     StyleBox["=",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     StyleBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]]}], 
    StyleBox["}",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]]}]}], 
  StyleBox["=",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["1",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]]}]}], "DisplayFormula",
 CellChangeTimes->{{3.814114806146896*^9, 3.814114849752122*^9}, {
  3.814269056067605*^9, 
  3.814269081650804*^9}},ExpressionUUID->"9df1a3ee-a988-4b0b-a881-\
cc6a507fc862"],

Cell["\<\

So with Mathematica code we can approach this with :\
\>", "Text",
 CellChangeTimes->{{3.814453130486191*^9, 3.814453144772812*^9}, {
  3.814453580756822*^9, 
  3.814453581406893*^9}},ExpressionUUID->"05cce0bb-6549-4c9b-a058-\
1a2c434b7911"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "m"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "m"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}], 
      FractionBox["1", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "0"}], "n"], 
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}], ")"}]}]}], "//", 
  "N"}]}], "Input",
 CellChangeTimes->{{3.814453076484735*^9, 3.814453108299787*^9}, {
  3.8144531505790787`*^9, 
  3.814453178342945*^9}},ExpressionUUID->"f149ad1b-afd7-454c-bf83-\
ee1c4b6074bf"],

Cell[BoxData["3.3776334566048893`"], "Output",
 CellChangeTimes->{
  3.814453109238*^9, {3.814453167968487*^9, 3.8144531861610823`*^9}, 
   3.814617327065638*^9, 3.814713450463887*^9, 3.814729439255501*^9, 
   3.8147298358617773`*^9, 3.814784171962216*^9, 3.814785259692395*^9, 
   3.814786867945656*^9, 3.814787174846435*^9, 3.814787243237131*^9, 
   3.814790564239188*^9, 3.814799145225711*^9, 3.814799233449964*^9, 
   3.81480351138804*^9, 3.814808750968835*^9, 3.814816021925837*^9, 
   3.814817037049327*^9, 3.8148172005747423`*^9, 3.814817935725731*^9, 
   3.8148183771422043`*^9, 3.81481991841228*^9, 3.814962874532832*^9, 
   3.814964269198436*^9, 3.8149656600884047`*^9, 3.814968796489599*^9, 
   3.814982315085918*^9, 
   3.814982431266635*^9},ExpressionUUID->"ab2af1b9-60ea-42bc-8d49-\
7a4dd4ee598d"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
==========\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Estimating Errors Reliably \
in Monte Carlo Simulations]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["( This also anticipates the MC error derivation we\
\[CloseCurlyQuote]ll find below )\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nHowever take care that in some literature something is the ",
 StyleBox["estimate",
  FontVariations->{"Underline"->True}],
 "  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["F", "-"], TraditionalForm]],ExpressionUUID->
  "48c41980-2b51-42f0-bf0c-97d259490cc9"],
 " and something else is \[LeftAngleBracket]F\[RightAngleBracket] which is \
the ",
 StyleBox["true expectation",
  FontVariations->{"Underline"->True}],
 ", \nthere, the above relation is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"66f204bf-63b9-43db-b67f-e94e5a027db8"],
 "=\[LeftAngleBracket]A\[RightAngleBracket] , so that the deviation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"cb84f944-2ae4-4196-8537-3b279c3f7a8c"],
 " from the true expectation \[LeftAngleBracket]A\[RightAngleBracket] is a \
fluctuating quantity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "A"], TraditionalForm]],ExpressionUUID->
  "3b0e701d-1c4f-494a-bd47-9a8a5c860bb6"],
 " .\n\nSo below, \n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "-"], TraditionalForm]],ExpressionUUID->
  "798e76ee-918d-43f3-bd27-3466ffda7bd6"],
 " is the mean estimate of A while \n\[LeftAngleBracket]A\[RightAngleBracket] \
is the true expected value of A ",
 StyleBox["(sometimes written like \[LeftAngleBracket]\[LeftAngleBracket]A\
\[RightAngleBracket]\[RightAngleBracket] )",
  FontColor->GrayLevel[0.5]],
 ". And \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"2f56d71e-eaae-41d1-b760-5a7e04aa6a5a"],
 " is the expected mean estimate of A.\n\nMore generally it would be written \
as ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "^"], TraditionalForm]],ExpressionUUID->
  "d3fc28fb-344a-48d9-8d17-5ea024239ff9"],
 "=A (where the hat^ stays for expectation as \[LeftAngleBracket] \
\[RightAngleBracket]. However then we don\[CloseCurlyQuote]t have the upper \
space for another symbol so to write the expected mean value of A with the ^ \
notation, we use the \[Mu] that stays for mean.. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Mu]", "^"], TraditionalForm]],ExpressionUUID->
  "89c96e81-745e-406b-bef7-9d3b66a4742a"],
 " is the expected mean value of A, ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"1aba4c4e-083e-49a5-b2d6-0d972bd34c10"],
 "\n\nAnd just to make things easier ;) we may add the ",
 StyleBox["distinction between an estimate and an estimator",
  FontVariations->{"Underline"->True}],
 ".\nIf we write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Mu]", "^"], "=", 
    OverscriptBox["x", "-"]}], TraditionalForm]],ExpressionUUID->
  "1a8180d6-b7c5-4067-89a0-cfd6296e528a"],
 " ; we want to say that the estimate \[Mu] is the mean ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "4749ca51-c462-460a-b03a-5412db4db007"],
 ". Formally this is written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "^"], "=", 
    OverscriptBox["x", "-"]}], TraditionalForm]],ExpressionUUID->
  "d8c469b8-86dd-4905-9579-5a037c5fa377"],
 "\nBut if we wanna talk about the estimator (not the estimate) then we \
should use the uppercase theta \[CapitalTheta] .\n\n\nAnyway :) due to the \
linearity of the expectations \n"
}], "Text",
 CellChangeTimes->{{3.814268577854643*^9, 3.814268617249354*^9}, {
   3.814268786586502*^9, 3.814268818850767*^9}, {3.8142697688249693`*^9, 
   3.814269779015334*^9}, {3.814269825501401*^9, 3.814269834837661*^9}, 
   3.814269926598174*^9, 3.814270815792248*^9, 3.8142743637708178`*^9, {
   3.814278778557866*^9, 3.814278829021566*^9}, 3.814279035595786*^9, {
   3.81428068934899*^9, 3.8142806898841743`*^9}, {3.8142808212179956`*^9, 
   3.8142808411990423`*^9}, {3.814280900690735*^9, 3.814280911556161*^9}, {
   3.814280989927041*^9, 3.8142810166074038`*^9}, {3.8143518781892147`*^9, 
   3.8143518989806337`*^9}, 3.814355641094736*^9, {3.814355674347666*^9, 
   3.814355756741428*^9}, {3.814355795646145*^9, 3.8143559045232687`*^9}, {
   3.8143560183769407`*^9, 3.814356084027718*^9}, {3.814356167217589*^9, 
   3.814356187239242*^9}, {3.814356259913169*^9, 3.8143563719387693`*^9}, {
   3.8143565318279257`*^9, 3.814356563122065*^9}, {3.814356611233054*^9, 
   3.814356643787166*^9}, {3.814377287521553*^9, 3.814377288600403*^9}, {
   3.814378400322954*^9, 3.814378418178999*^9}, {3.814381482244852*^9, 
   3.814381528139038*^9}, {3.8144534767195377`*^9, 3.814453496158889*^9}, {
   3.814453636600132*^9, 3.814453699896122*^9}, {3.8146998188982286`*^9, 
   3.8146998210578623`*^9}, 3.814794717926114*^9, {3.814877087896097*^9, 
   3.814877175237289*^9}, {3.814877222620833*^9, 3.814877268117426*^9}, {
   3.814877301242256*^9, 3.8148773527588453`*^9}, {3.814877426008369*^9, 
   3.814877426414871*^9}, {3.814877590399394*^9, 3.814877590466444*^9}, {
   3.814898293472374*^9, 
   3.8148982939426737`*^9}},ExpressionUUID->"27a56ffe-7920-4d57-8ea6-\
79cd1d832806"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      FractionBox["1", "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["A", "i"]}]}], "\[RightAngleBracket]"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       RowBox[{"\[LeftAngleBracket]", 
        SubscriptBox["A", "i"], "\[RightAngleBracket]"}]}]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", "N"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "N"], 
        RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}]}]}], "=", 
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814268638288349*^9, 3.814268692514352*^9}, {
  3.814268825150936*^9, 
  3.814268927458157*^9}},ExpressionUUID->"0653af52-3b3f-4fea-b453-\
f7e5c99cb461"],

Cell["where \[LeftAngleBracket]A\[RightAngleBracket]", "Text",
 CellChangeTimes->{{3.814268936591942*^9, 
  3.814268938216708*^9}},ExpressionUUID->"034a8b73-6909-425d-b53f-\
76eed01bb7e6"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "x"], 
    RowBox[{"A", 
     RowBox[{"(", "x", ")"}], "p", 
     RowBox[{"(", "x", ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81426894671795*^9, 
  3.814268999773583*^9}},ExpressionUUID->"fa044ac4-375d-4efe-bbd8-\
4f75c27a2d50"],

Cell["and ", "Text",
 CellChangeTimes->{{3.81428075207648*^9, 3.814280753379643*^9}, {
  3.814280881338271*^9, 
  3.814280881743615*^9}},ExpressionUUID->"22eef3e5-cfb1-41ba-b58a-\
2c05892456fc"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox[
    SubscriptBox["A", "i"],
    FontSize->18], 
   StyleBox["\[Congruent]",
    FontSize->18], 
   RowBox[{
    StyleBox["A",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     StyleBox["(",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     SubscriptBox[
      StyleBox["x",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], "i"], 
     StyleBox[")",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814280758691568*^9, 3.814280777524835*^9}, {
  3.814280928274767*^9, 
  3.814280929036743*^9}},ExpressionUUID->"2cb99a40-cc16-4479-8d68-\
3ad5a5408791"],

Cell["\<\

Similar reasoning allows the calculation of the average of the square of the \
sample mean\
\>", "Text",
 CellChangeTimes->{{3.814269909746689*^9, 3.814269919123312*^9}, 
   3.8143519513805323`*^9},ExpressionUUID->"70ca3db4-d6b4-43c9-8a62-\
0a4da6ed8536"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox[
     OverscriptBox["A", "-"], "2"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "N"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "N"], 
         SubscriptBox["A", "i"]}]}], ")"}], "2"], "\[RightAngleBracket]"}], 
    "=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "N"], 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SubscriptBox["A", "i"], 
         SubscriptBox["A", "j"]}], "\[RightAngleBracket]"}]}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{"\[LeftAngleBracket]", 
       SubsuperscriptBox["A", "i", "2"], "\[RightAngleBracket]"}]}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"N", "-", "1"}], "N"], 
     SuperscriptBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814269956135621*^9, 3.814270218057836*^9}, {
  3.8142712396047907`*^9, 
  3.814271243212772*^9}},ExpressionUUID->"a46c7281-2c4a-4a3b-82b9-\
21298957692e"],

Cell[BoxData[
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{"\[LeftAngleBracket]", 
      SuperscriptBox["A", "2"], "\[RightAngleBracket]"}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"N", "-", "1"}], "N"], 
     SuperscriptBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814269956135621*^9, 3.814270218057836*^9}, {
  3.8142712396047907`*^9, 
  3.814271243212772*^9}},ExpressionUUID->"d4a478ad-077f-41cf-ac05-\
45a284edd5e8"],

Cell["where we have inserted the definition of the average, ", "Text",
 CellChangeTimes->{{3.81427024521957*^9, 3.814270271500704*^9}, {
  3.81427083876873*^9, 
  3.814270859152742*^9}},ExpressionUUID->"dc9b2615-1b37-4b39-a150-\
98a9da8e90ed"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   OverscriptBox["A", "-"], "=", 
   RowBox[{
    FractionBox["1", "N"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "N"], 
     SubscriptBox["A", "i"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81427086585495*^9, 
  3.814270893239571*^9}},ExpressionUUID->"cb3545fd-8777-42c2-838d-\
e3ac50b92dba"],

Cell[TextData[{
 "then used the linearity of the expectation value, \nand also exploited the \
fact that for independent samples ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "ed607c78-244b-4a97-ae92-2859d428bcfb"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "j"], TraditionalForm]],ExpressionUUID->
  "310b199f-4e2a-41b0-b0e9-6ca911868357"],
 ", the expectation value for i\[NotEqual]j factorizes as"
}], "Text",
 CellChangeTimes->{{3.81427024521957*^9, 3.814270271500704*^9}, {
   3.81427083876873*^9, 3.8142708561806803`*^9}, {3.814270905613338*^9, 
   3.814270907254724*^9}, 3.814270955473032*^9, 
   3.8144382719651003`*^9},ExpressionUUID->"76a6a178-a58c-49b6-bd02-\
c18b12f680ec"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     SubscriptBox["A", "i"], 
     SubscriptBox["A", "j"]}], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      SubscriptBox["A", "i"], "\[RightAngleBracket]"}], 
     RowBox[{"\[LeftAngleBracket]", 
      SubscriptBox["A", "j"], "\[RightAngleBracket]"}]}], "=", 
    SuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814270291072184*^9, 
  3.814270314877787*^9}},ExpressionUUID->"1c79ed8a-7794-4139-9011-\
b75665f55682"],

Cell[TextData[{
 "The statistical error ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[DifferenceDelta]",
     FontSlant->"Italic"], "A"], TraditionalForm]],ExpressionUUID->
  "837bd1d0-447e-46fb-969e-c269ddb3047d"],
 ", the root-mean-square deviation of the sample mean ",
 Cell[BoxData[
  OverscriptBox["A", "-"]], "DisplayFormula",
  CellChangeTimes->{{3.814268638288349*^9, 3.814268692514352*^9}, {
   3.814268825150936*^9, 3.814268927458157*^9}},ExpressionUUID->
  "fe35aade-e3af-4f77-806e-3a9490dc5d03"],
 " from the true expectation value \[LeftAngleBracket]A\[RightAngleBracket], \
\nis thus given by"
}], "Text",
 CellChangeTimes->{{3.814270366051835*^9, 3.8142704092632017`*^9}, 
   3.814522996186119*^9},ExpressionUUID->"4f10aaa8-3aee-47df-9a5a-\
8c23898ae3a6"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[DifferenceDelta]", "A", "2"], 
    RowBox[{"\[Congruent]", 
     RowBox[{"\[LeftAngleBracket]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["A", "-"], "-", 
         RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}]}], 
        ")"}], "2"], "\[RightAngleBracket]"}]}]}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{"\[LeftAngleBracket]", 
       SubsuperscriptBox["A", "i", "2"], "\[RightAngleBracket]"}]}]}], "-", 
    RowBox[{
     FractionBox["1", "N"], 
     SuperscriptBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        SuperscriptBox["A", "2"], "\[RightAngleBracket]"}], "-", 
       SuperscriptBox[
        RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}], 
      ")"}]}], "\[Congruent]", 
    RowBox[{
     FractionBox["1", "N"], 
     SubsuperscriptBox[
      StyleBox["\[Sigma]",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], "A", "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814270421574069*^9, 3.8142705985786133`*^9}, {
  3.814270662436345*^9, 
  3.814270694565572*^9}},ExpressionUUID->"742ddbab-4106-4c72-b723-\
671beca58f68"],

Cell[TextData[{
 "which is the basis of the central limit theorem.\n\nIt is, however, more \
useful to express the error in terms of the sampled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "i"], TraditionalForm]],ExpressionUUID->
  "7ceb9d0a-fff2-4e50-8b3e-14fdfe00a6e5"],
 " \[CloseCurlyQuote]s.\n",
 StyleBox["A na\[IDoubleDot]ve guess would be to estimate the variance as",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SuperscriptBox["A", "2"], "-"], "-", 
    SuperscriptBox[
     OverscriptBox["A", "-"], "2"]}], TraditionalForm]],ExpressionUUID->
  "831124f6-4461-412a-b307-dae869126a91"],
 ", where\n",
 StyleBox["(one is the average of the squared A and the other is square of \
the averaged A)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{
  3.814270616203464*^9, {3.8142710583001432`*^9, 3.814271141389786*^9}, {
   3.814273191124283*^9, 3.814273193551278*^9}, {3.814626930606638*^9, 
   3.81462697191615*^9}},ExpressionUUID->"e24319e6-eaed-448e-af8c-\
8c301c74496d"],

Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    OverscriptBox[
     SuperscriptBox["A", "2"], "-"], "\[Congruent]", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      SubsuperscriptBox["A", "i", "2"]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.814271154075328*^9, 
  3.81427119509881*^9}},ExpressionUUID->"4601084f-5f58-4d57-833f-\
dcb95de905c6"],

Cell["If we calculate the expectation values via (6) we get ", "Text",
 CellChangeTimes->{{3.814271258751219*^9, 
  3.8142712786857643`*^9}},ExpressionUUID->"412b5f70-4a09-44c3-b568-\
00139ad11eb2"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    FormBox[
     RowBox[{
      OverscriptBox[
       SuperscriptBox["A", "2"], "-"], "-", 
      SuperscriptBox[
       OverscriptBox["A", "-"], "2"]}],
     TraditionalForm], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"N", "-", "1"}], "N"], 
    SubsuperscriptBox["\[Sigma]", "A", "2"]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8142712960786963`*^9, 
  3.814271322020833*^9}},ExpressionUUID->"02b1982a-714b-40b6-b07e-\
24dccbabc700"],

Cell["Thus the estimator is", "Text",
 CellChangeTimes->{{3.8142713332255573`*^9, 
  3.8142713404269*^9}},ExpressionUUID->"43ab4e9e-2efb-462d-a412-89ff65b7410b"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubsuperscriptBox["\[Sigma]", "A", "2"], "|", 
   RowBox[{
    RowBox[{"Var", "[", "A", "]"}], "\[TildeTilde]", 
    RowBox[{
     FractionBox["N", 
      RowBox[{"N", "-", "1"}]], 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["A", "2"], "-"], "-", 
       SuperscriptBox[
        OverscriptBox["A", "-"], "2"]}], ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814271360113627*^9, 3.814271411865304*^9}, {
  3.8144383304186373`*^9, 
  3.814438332030901*^9}},ExpressionUUID->"eb80da83-1a7d-405a-b20d-\
495c92e9293f"],

Cell["\<\
where the (small) fluctations in the right-hand side have been ignored. 
Eventually, taking the square root , we obtain the final result\
\>", "Text",
 CellChangeTimes->{{3.814271424149106*^9, 
  3.814271478801647*^9}},ExpressionUUID->"80d7fe3d-237e-4087-b22b-\
cb27d34a2513"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["\[DifferenceDelta]", "A"], 
   RowBox[{"=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"Var", "[", "A", "]"}], "N"]], "\[TildeTilde]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        OverscriptBox[
         SuperscriptBox["A", "2"], "-"], "-", 
        SuperscriptBox[
         OverscriptBox["A", "-"], "2"]}], 
       RowBox[{"N", "-", "1"}]]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8142715059611607`*^9, 
  3.814271564151773*^9}},ExpressionUUID->"fe7c185c-27b8-417a-9358-\
06c2890e3c80"],

Cell["\<\
The -1 in the denominator, which is irrelevant for large values of N, \
reflects the loss of one piece of information in calculating the sample mean.\
\
\>", "Text",
 CellChangeTimes->{{3.8142715814906816`*^9, 
  3.814271635244115*^9}},ExpressionUUID->"5c1a4235-3837-4fc8-aff6-\
aa4728d68502"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n\nBtw, with standard integration we are almost there with just 25 \
\[OpenCurlyQuote]samples\[CloseCurlyQuote] ... \nhow it comes that with Monte \
Carlo we need 50000 samples to get there ?\n",
 StyleBox["(Or how can a random array be better than a grid ?)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nNow the error for the midpoint method (Riemann sum) is "
}], "Text",
 CellChangeTimes->{{3.814107902846446*^9, 3.814107974015263*^9}, {
   3.8141129805861073`*^9, 3.814112981032819*^9}, 3.814114993505452*^9, {
   3.814116371968992*^9, 3.8141164043223667`*^9}, {3.814116602479782*^9, 
   3.814116615597186*^9}, {3.8141180989163837`*^9, 3.814118099365183*^9}, {
   3.814118314195818*^9, 3.814118320653822*^9}, {3.814122437845886*^9, 
   3.8141224869159117`*^9}, {3.8141866292263308`*^9, 
   3.814186641285233*^9}},ExpressionUUID->"877ede12-46a5-47ca-a3a6-\
97445396ad33"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[Proportional]", " ", 
   FractionBox[
    RowBox[{"b", "-", "a"}], 
    SuperscriptBox["N", "d"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814116648272985*^9, 3.814116666312887*^9}, {
  3.814116757031808*^9, 3.814116761264374*^9}, {3.814117882532934*^9, 
  3.814117884510717*^9}},ExpressionUUID->"b8daa8fc-f74d-45ea-97e8-\
045e56c679a7"],

Cell[TextData[{
 "this is because for a monotone function in a-b\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
sHa3PfbYYzaDy8h9Vl2vJzZ0t+kOAO/oUdedoPWoJzN16tT4Hr5r165m7969
rpcEIEVkcSB7hDGLP/zww6ZmzZo2hw8ePNj5esjiZHEgiOhR152g9agXZsOG
Debss8+2+/hy5cqZcYf/P3Dw4EHXywJQTGRxIHuErUf9oYceiufwm2++2fl6
Eocedf2hRx3wjh513Qlij3phvv32W3PH4Z/9cccdZ/fzZ5xxhnnyySddLwtA
MZDFgewRpu42uX44dl76+PHjna8n/9Ddpjt0twH+0KOuO0HtUS/K7t27zaWX
Xhrf15933nnmwQcfNAcOHHC9NACFIIsD2SMsWXzYsGE2g8sxcTn27Ho9ZHGy
OBB09KjrTpB71I9Gzltv06aNKVGiRPz+Z9ddd53Ztm2b66UByIcsDmSPoPeo
Sze6dKRLDq9du7aZMWOG8zUVNvSo62dxuoAB7+hR152g96gXx86dO80111wT
3+fL1KhRwx4r379/v+vlqTh06JB58803i/3r5Vqot99+O40rSr/33nvPfP31
1yl/npw3IdczIFjI4kD2CHJ32+bNm20PrOTwevXq2WvdXK/paEN3m+4A8I4e
dd0JQ496cb3//vvmpptuMhUqVIjv+eVeaI0aNbJd7B9++KHrJXom79/Pnz+/
2L/++++/N61atTI5OTlpXFX6yJ/zhg0beurnkz1Ly5Ytzb///e80rAxekcWB
7BHULC7Hcy6//HKbw5s0aWIWLVrkfE1kcbI4ECb0qOtOWHrUU/H555+be+65
x1x88cVHHCuXkcdGjx5t1q1b53qZccuXL7fXqtWtW9fMnj27wMenTJli+vTp
c8RjTz/9tKlVq5Y5/fTTzbnnnpv068p7D7/4xS/Mjh070rJuP+6++27z61//
2jRu3LjANQWffvqpufDCC+35Dl5Jz75cr4DgIIsD2SOIPeqypubNm9scLu9V
r1q1yvmaijP0qOsPPeqAd/So606YetS9ePfdd829995r6tSpUyCXly9f3r4/
Lvcyeemll5ys75VXXrG98I8//rg54YQTbAZNlJeXZ0455ZSk75fIOdzyfXTv
3r3Qry/XRFWvXt388MMP6mv3Sr5X+Z7nzp1rr/WX+7gmuuyyy2xW90O+X3kf
YuHChb6+DvSQxYHsEbTuNlmPnGslObxjx462b8b1moo7dLfpDt1tgD/0qOtO
GHvUvfroo4/MvHnzTI8ePcxpp51WIJtXrFjRdsFNnDjR5ObmZuSa40GDBpky
ZcrYnhs5jivnoSVq166dGTVqVNLPXbZsmV23dM4URt77/dnPfhaoe79dcMEF
dk8ke4zf/e53R1wH/9e//tUcf/zx9ti4X9OnTze/+tWv7Pn6cI8sDmSPIGVx
ed9XzjuTHH711Vfb97hdr4ksThYHwooedd0Jc4+6X3IsXI6Zy3HYSpUqFcjm
MnIO9e23325Wr17t6drlo6lSpYrtcE1Gfi5yvXthP5/hw4fbNb7++utFPseY
MWPsuflBIL1qsuabD///Lplrr73Wvlei4auvvjLHHnusWbJkicrXgz9kcSB7
BKVH/eGHH7bXgEkO79+/fyDWlOrQo66fxelRB7yjR113otCjruXll182jzzy
iOnWrZs544wzkmbzSy65xNxyyy1m5cqVvo/d7tu3z37NgQMHJv34rYd/PnI9
eGFkf/HjH//4qM8j18TJueDyfK7Jde7yPcvrYX5yHr5k55kzZ6o9n3Tkyv4L
7pHFgewRhO628ePH2wwuI+9Ju16Pn6G7TXcAeEePuu5EqUddm9wPTY6pSiZu
0aKFOfHEEwtkc8nC0tktx3nlPPBXX331qNdmy7l7J598sj0nPnZfdPlvOR89
UdOmTe11bclIP12pUqVsR7xkedlrVKtWzb5HkJ/siSSLu3wfeOjQofZ7LFeu
nP2e5dp4+W/p2IuR6/fkY0VdMyHdjfJ7Le+JyPcufTby/om8R5fMsGHDzDnn
nKP+/SB1ZHEge7jO4tJDIq+L8p61dMK4ztJk8WANAO/oUdedKPaop9OuXbts
5pZ7p0kelGubkx0/l45wuQ+Z7AHkmjn5/21+cp6U/Nq//OUvSZ9LsvqIESOS
fky61+Vz5bh57POlb12uPU92TrvkXnlPwTXpsJV7zsn90vOT9cv3JOeWJyP3
Gpfj3FdeeaW9X5l8DenClc8ZO3Zs0s+ZNm2a/Tj3N3OPLA5kD1c96nItuLz2
Sg6XzlbpCnWdo/0OPer6Q4864B096roT9R71dJNj4NKFLt0wN9xwg33tl/Os
82fzqlWrFvjcK664wpQuXdp88803BT4mrxPyeXfddVfS55WMLh+Xa99iZA8i
j02ePLnAr5djw3379vXxneo46aSTbG9bMrfddpt9L6Ewct5A5cqVbQdfzAMP
PGC/5/yddzFyLoB8XK5dhFtkcSB7uOhuk+wv79VKDpf3yhcsWOA8R2sM3W26
Q3cb4A896rqTTT3q6ZAsi8v9uoqTxc8++2zbKZ6MvOcknyfHdZORe4v/5Cc/
OeIx2XfI58i9tfOT8/QkCxXlnXfesb+uuNOsWbOU7pW2d+9euz7pjk9GzimU
4/fJxDrjhwwZcsTjXbt2Ncccc0yhx9JjnyddAHCLLA5kj0xncblOSe6DIjlc
zr+Sv/tdZ2iyeDCHLA74Q4+67mRzj7oX+c9Rj13/nH/kPmIdOnSwx7WlO02u
nUskfXlyDfc111yT9Hnk4/J1pk6dWuBjck2BXCue/77iknHlc5YuXVrgc+Sc
+aNl8XSL5eLZs2cn/bj8nspx82TkPjTyuXLeYyJ5P6Kw4+ziueeeI4sHBFkc
yB6Z7FGX1xbJ35LDL7/8cpvLXednzaFHXT+L06MOeEePuu7Qo1446W5bvHhx
kd1tMqeeeqq9L5rc+0z2BInnUBdG7l8unyvXSBdGjq/fcccdBR6XfrhkOf3c
c8+1nWjJ+t3POuss07Nnz2J81+kj70vIuuVecsnIfd3lPYZkLrzwQvvehXTW
xezcufOIa8Xl/IT8nnjiCftr5Jg/3CKLA9kjU91tcm+OBg0a2BzeuXNns3nz
ZufZOR1Dd5vuAPCOHnXdoUf9v3bs2GE7ueW858LuaSZZ99JLLzWjRo2yf5+/
++67np4r1ikm5/AVRo6tSw94fpJH5b7jck56jHS7FHVOu1xnPXLkSE9r1dKp
Uyd7PnlhPWrSsSPfQ7KeuyZNmphTTjnliMcmTZoUv1Zcjr/87ne/K/B50p0n
v1f0E7pHFgeyRyayuFwbJteFSQ6XvjbpTHGdmcni4RgA3tGjrjvZ3KMux2fv
Pfz9yzHtSpUqJc3ecl22XMcs1xb94x//UHvu3r1724yYLHfGyLratm2b9GNy
fvzw4cPtv+/Zs8dUqVLFdrMlu35bjtMXdk/vTJLr4+X3szCy35B1vvjiiwU+
JucAyMdi11PIsRA5nz322IABA+w90fKTx6tXr673TcAzsjiQPdLdoy7vs0pv
ieRwec/adVZO59Cjrj/0qAPe0aOuO9nUoy6ZVM5ZlmuPTzvttAK5W+4hJt0v
cq60nOf27bffpm0tF198sZ2iPPjgg4VeP/3xxx/b+5rXrVvX5vWirn2Se6RL
X/u+fft8rdmP2D3Ob7zxxkJ/jbyPINcB/P73vy/wMbl/mfSsn3feefbadznG
L78H8vOS89dj70vkJ7/Hcv91uEcWB7JHOrvb5LVAMriMXPvkOiune+hu0x26
2wB/6FHXnaj3qMs55HLsW85jy5+9y5cvb3te5P31v/71rxlbk9zDTM7VLuze
4TFvvPGGza9y7rwfcsxA7vPiUuwcerkvelGkj07u9aZB3reT9yCSXUeOzCOL
A9kjHVlczkGXa5Ekg8s5Vg8//LDznEwWD9+QxQF/6FHXnSj2qEt32T333GMu
uuiiAvlbjpOOHj3arFu3LuPrkuOzcq35li1b7FqKk/8lQ/fv39/zc8q9vuRY
86ZNmzx/Da/kWLh8v9J9J+cayP3KCrtWPEbeF5L7s7/33nu+n1+eU+67hmAg
iwPZQ7tHXV6z5e+Q2L3D58+f7zwjZ2roUdfP4vSoA97Ro647UepRl35x6W9J
vL+3XJPdqFEje73xhx9+6Gxt8nssa5H38m+++WZz3XXXFevz5Bp1OXe+ON3s
ycj53nIuuwtyDFx+BnL8X85LKO770HJs/GjnDBzNwYMHzZlnnmmvV0QwkMWB
7KHZ3Sb3ppTjwpLD5fVMXltc5+NMD91tugPAO3rUdScKPerSJy73mE48/i3X
FUsOlfuSBYXcP1syafv27Qvcb7wo0i8u14TLNdOpkHt+1ahRI+k9zjJB8rDs
m+R7lvcfikt+b+ScBjl/wKs+ffrY6+0RHGRxIHtoZXHpeInds+yqq65K2zXo
QR+yOFkcCAp61HUnzD3qq1evtvfUju3v5drgjh07FnmfsLAaP368eeCBB4r9
6+WadLkPmN9rzV2R6/zl/ZVU3rOIkXMXJYsjWMjiQPbQ6FGfMmVKvCv9hhtu
MFu3bnWeiV0MPer6Q4864B096roTxh516TST+33F9vVy32m5Bvz99993vbS0
knydiq+//jpNK8mMVL/fmLB/31FFFgeyh9/uNrk3RqwrfcKECc7zsMuhu013
6G4D/KFHXXfC1KMu50RIJ3iZMmXsfr5s2bJmzJgx9lxoAMFGFgeyh9csLvcT
7dGjh83gcs/OmTNnOs/CrocsThYHgoQedd0JQ4+6XCctr8ennnpqfC8v/eJ7
9+51vTQAxUQWB7KHlx71VatW2W4UyeFNmzY1zz77rPMcHIShR10/i9OjDnhH
j7ruBL1HXe6BJV1nsT38+eefb983BxAuZHEge6Ta3Sa5u3HjxjaHt2vXznaV
uc7AQRq623QHgHf0qOtOkHvU5bpfuT90bP8u9wH7/vvvXS8LgAdkcSB7pJLF
Z8yYEb82vGfPniY3N9d59g3akMXJ4kBQ0KOuO0HtUf/888/ttWKxe4Tfd999
rpcEwAeyOJA9itujLvcIiXWljxw5MuXz2rNh6FHXH3rUAe/oUdedoPaox3rS
y5UrZ5YvX+56OQB8IosD2eNo3W1yfzK5BloyeK1atez9y1xn3qAO3W26Q3cb
4A896roTxB71hQsX2v26dLUFbW0AvCGLA9mjqCy+YcMG07lzZ5vDGzRoYHu0
XOfdIA9ZnCwOBAk96roTtB71Tz/91Jx44ommRIkS9jUIQDSQxYHsUViP+rJl
y0yLFi1sDpd/ynlvrrNu0Icedf0sTo864B096roTtB71bt262b16v379XC8F
gCKyOJA9knW3zZ8/31xyySU2h8txcTk+7jrnhmXobtMdAN7Ro647QepRl/PZ
ZJ9+8sknmwMHDrheDgBFZHEge+TP4nI9uFwXLjlcjvHK9eKu822YhixOFgeC
gh513QlSj3rfvn3tPn3ixImulwJAGVkcyB6JPeq33HJL/J5l0pvuOteGbehR
1x961AHv6FHXnSD1qJ900kl2n/7qq6+6XgoAZWRxIHtId5tcCy7XnUkGl3uU
zpw503muDePQ3aY7dLcB/tCjrjtB6VF/8cUX7R799NNPd70UAGlAFgeyx333
3Wfzt+Tw5s2bm0WLFjnPtGEdsjhZHAgSetR1Jyg96rNnz7Z7dNmvA4gesjjC
Qq6FW7dunR15n5jHU3t8zJgxplKlSubiiy+2x8Ul/0hvm4xc9xzLmHIeO48f
/fFp06aZa665xnmGjcrQow74s3r1anNrz55mfPfudvL69InnyseHDuXxFB8P
So+69LrIHl2uGQcQPWRxBNkbb7xh77clGSgvL8/k5OTYkT1HLBvx+NEf7927
t6latar5+c9/bm6++WabfZ588kl7HFLm6aefjmciHi/+488++6zzDBulAeCd
nE89/3AWn9Wvn53No0bFs+bKAQN4PMXH35g+PRAdFuPGjbN79FsPrwlA9JDF
EWSyt+A8au8j90GR+5TFrg0fPHiwzZKuM1dU5rnnnnO+higNAO/oUdede0aO
NG+//bbrH6sZPny43aNPnjzZ9VIApAFZHEFGFvc+8vsm14RLDm/RooXNjf37
9zePP/6488wVhZHj4nfddZfzdURpgnAMCgird955x+SMH+88w0ZlgtLdNmrU
KLtHl+t4AEQPWRxB9s033zjPtGGc6dOnmzp16tgcLteGx+5jJvcQf/TRR51n
rijMAw88YC688ELn64jK0N0G+EOPuu7c2b+/+cc//uH6x2rf85U9+siRI10v
BUAakMURdH/729+cZ9swjVwPHrtvuFxflvixQYMGmRkzZjjPXVEYsrjukMUB
f+hR152/T5oUiO62WbNm2T16jx49XC8FQBqQxRF0ZPHiTeK14fXr17f3Qcn/
a+R4+bx585znriiMnF9w+eWXO19HVIYedcCfrVu3mrVDhjjPsFGZDx57zPWP
1JIuVtmjN2rUyPVSAKQBWRxBltijzhQ+ideGt2rVqtDfM8mPTz31lPPcFZWh
u013AHgn56j/lePiahOUHvX333/f7tFPOukk10sBkAZkcQQZ3W1HH7nPdeza
cDmHbdOmTYX+WrlPKT3qekMW1x0A3tGjrjtB6VEX5cuXt/v09957z/VSACgj
iyPIyOJFz0033RS/NnzMmDFH/fX0qOsNPer6E4RjUEBY0aOuO0HpURdNmza1
+/TFixe7XgoAZWRxBBk96sknJyfHtG/f3mbwBg0aJL02PNnQo643dLfpDt1t
gD/0qOtOUHrUxejRo+0+XfpYAUQLWRxBR3fbkTNnzhzbzSY5XLrDVqxYUezP
pUddb8jiukMWB/yhR113gtKjLuR6KNmny/FxANFCFkfQkcX/M9KRm3hO+rBh
w0xeXl5KX4Medb2hR1136FEH/KFHXXeC0qMuPvnkE7tPP+6447iWB4gYsjiC
jB71/4ycky5/VmP3K5s5c6anr0OPuu7Q3aY7ALyjR113gtKjHnPBBRfYvXpu
bq7rpQBQRBZHkNHd9oJ57LHH7DXhksPlz6vkcq9fix513SGL6w4A7+hR150g
9aiLgQMH2r36xIkTXS8FgCKyOIIsm7O4nH8u56HHzkm/4YYbUj4nPf/Qo643
9KjrT5COQQFhQ4+67gSpR13IXkj26s2bN3e9FACKyOIIsmztUZdj33ItsmTw
2rVrm8mTJ6t8XXrU9YbuNt2huw3whx513QlSj7r48ssvTenSpc2xxx5r90YA
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
RERaPTTvt99+a/lEd1tvb28xODhYDA8Pl9fIIwcOHChn5s3P9+7dW/5so5rv
27evcXz8NfPJzbu7u4u+vr7G/ODBg43jh4aGzCc5X7t2bbFz585ytmfPnsax
0RdRHWve3HzHjh3FypUrG/N4X1x1fBxjPrl5T09P7d8LRUREpkNoXt1fq2Yy
Y8aMYubMmcWsWbPKPXL58uVllixZUs7Mm58vW7asmDdvXmO+YMGCxvHz5883
n+R86dKljVkk/vtWx8fPkMwnN1+4cGHj1/qcOXMax8ZzKtWx5s3N4//NuXPn
NubRgVkd/+3vAebNz+v+XigiIjIdQvO2b9/e0unq6mp8XeO92HWfj4iIiIiI
iEwc2kfcG1jt4uPj43WfDgAAALQ9uzgAAABMLbs4AAAATC27OAAAAEwtuzgA
AABMLbs4AAAATC27OAAAAEwtuzgAAABMLbs4AAAATC27OAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAMFX+CxDXppA=
     "], {{0, 495}, {995, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{598.8000000000001, Automatic},
   ImageSizeRaw->{995, 495},
   PlotRange->{{0, 995}, {0, 495}}]], "Input",ExpressionUUID->
  "cd9ace61-5679-4299-ac7d-9ef367b2c9c4"],
 "\n\nand more generally : "
}], "Text",
 CellChangeTimes->{{3.814117939930162*^9, 3.814117950523209*^9}, {
  3.814118327427064*^9, 3.8141183491851997`*^9}, {3.814119047291382*^9, 
  3.81411906486665*^9}},ExpressionUUID->"0c578683-82df-4d87-91a7-\
03c1eb5a2c14"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Er", "\[Proportional]", 
   RowBox[{"M", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}], "2"], 
     SuperscriptBox["n", "d"]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814118364638648*^9, 3.8141183909852943`*^9}, {
   3.8141185361970778`*^9, 3.814118549996686*^9}, 
   3.814122532164048*^9},ExpressionUUID->"48b9e1d9-1310-4188-955d-\
394601600ea9"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Error Estimates for the \
Monte Carlo Method]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nwhile for ",
 StyleBox["the error with Monte Carlo method",
  FontVariations->{"Underline"->True}],
 " \n\nwe first draw some introduction. We know the following relationship \
between our estimation and true value\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "^"], "=", 
    RowBox[{"\[Theta]", " ", "+", "error"}]}], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "a23a0b30-b7e8-41d2-9fe0-018c266b23c6"],
 "\n\nWe saw just above the potentially for an unbiased estimator the error \
will be 0 because\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "^"], "-", "\[Theta]", " "}], TraditionalForm]],
  
  FormatType->"TraditionalForm",
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "7c336365-f2a8-4a2e-a09c-88c76e7bc4e0"],
 StyleBox["= 0\n\n",
  FontColor->RGBColor[1, 0.5, 0]],
 "That is, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Theta]", "^"], TraditionalForm]],ExpressionUUID->
  "4b21681d-c64b-4374-b3ef-a0cff402ccac"],
 " is unbiased if its probability sampling distribution is \
\[OpenCurlyQuote]centered\[CloseCurlyQuote] at the true value of the \
parameter (outcome).\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
f+KxeuSI85/NtSZa1i+krnWo5qD6nerst0T7u6jevr7VJdQqaTYib2zDCGsL
9NgdWKtHiBTp9w9hm5ML3I7MQ892PTD31vtG331Nsgf2bzsBt5vHMce+PeyX
OCOp1nxYdcwlTPp5Lm5lVomPmXZyCqwX3oLuZ7b0V418fZ2u7/QR1Q2lmJhq
YjaXYn1dl3U46kI1MqhWG413r7W8v4oxxmqLLZLVNKFaI4aC6ojS+H63GWvu
lHtP/fYyDWgO0UE4b1CPJEPp16wRlTE4Mrj9l3Fn1gMssJ+KqwXVYs5lsNNq
rHWJbdz9SnNxb25vOLjkiH8s8j+D5RudEaeIO6sS8feEbrD/1BOvAhG7hqDV
yMOff4d9g2rfUo0fXdUxUgXlFNF198Jm5tlQL43lerC+Xp9zSbJ8JXVctzPG
WGNRv0dat6aaRZpC9Ttdrt9Q+/2KtY6E8dM7p3FzC3T+mxQmEfMm8zW4R57q
d1LfYnWi+vpUZ4l6curzeVyjqhJwapjNF3Fn5dONsOs4F7dLmvGalHhjjV0H
zH6gvN9dsccG2LfugQ3+8nk7aRauTLDF9xNOItVwLl20inKSaXwJNYCaYLTu
3utVvlg3OLUJ6x9hBbJrYUPIw6ba+jTvSdexXCuYMaYtYtwmjJNXNdwbSJ35
nV+jPs70HGr3d68PzWXQnAT19tT0erW68ju/RvmeVFdqRrgx9AOuQG70c1y9
7o2PxanwvfonDjtdg2/q19dBJUh6cQOnDh/D+XvuODhUEXdWICP8BTz3OsDK
egwOPH4Gr5CEOta9q1Ec7w2Xk0eEx7iER28/7wmqTI+E96NDGG/ZDmMOPYSX
VxASimp9PmoKcX/ejzAzs8cEx1ViDe11K2bglzZmsFnjAd3tWtZv1C+drpMM
BeUEbI8tFscUqsXeGAOE56mvuQTKUJ4nXb/Smo8+5d0yxoyTt7y2XHPWqVWl
ybiTUNxMcyoN1T6imLO/f75YV0QTe1i/pqm4k1D9furptFED+bjaI8XHoJvY
OrQTzH5egN3rlmDVmqUYa2cJsx/nwCVVPkcmzYH39kkYt9Md77NSEXRyLn4y
M/sy7tzjAMt6404p0m9vwLgFJxGQmomUp0cwvutPmO78VpwzlcWdB+uOO0tf
Yl03C5jNcYZiF1Gl5ybYm9lg5t2cLx6pOi8NaQXc75T6QTbmmlCfPM+uEMcU
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
5qJrGMpbMQVf751qStxJ4oTvHo1hNP6osh9S36gadxKq4Uax5wm+1mXM4FF9
4hHBhjHe0/gcER7e7PsJldeJilZT/XeKXWnOU1O9RKl+Z3BwsEbuuzkOxJeK
8zbarGXKjBP1RbuVbvx7mJXtnaK+CU8eP27S/dH8MPWxpx5HHw1sP5aihq+q
xFx8Ic6m3FhDjLMZY4CTcO1IeyqNZX+kKsQa6I8b3pPdWNTDnK7HDW3sbw6q
6UI96xX7IxhrihR5XbIKE4glLqeqf+8UfQ/XRBeJtZa0VdtNV6i3R1+/fFgL
cbYp1D1gzJiEyOf8YrTc87E5qH7nLZfm1e+k2vCzIzSzJk71p2hMVDeq30k9
y/WRImYINfLzHdMcyt9zCNVcnoo+6aNk7xStN+/a8Uez71vcGyp8F6kugCGg
+p2bN2xs9L+jOHtVlCzODuFxhzGDkE85/I9z4ayHteHr09z8zj9ii9HKS7Xa
8E1B9/t/nuXV22ezKfQxv7O2C8J5lObNub8yawqqC/RUwzUh9EFde6eamt+p
TIS89yb1QtLXengKjcnvVOaaPM42hV5OjBkyulaka+65kYY3v9CcuJNqjtA6
uKbrcVBvUXX3l9b3uJP8GlCIRVqoZcqMi5hr7ZGj9zGSOlA+9DAl9TPUGXeS
nPJqdPLJF2udFWiwzkZzNTfuJOHyOJv6jZrCZ4gxQ7Qtpljse2GIedlNjTup
DxHV2aQ9kdqw612xmH+krnHQEOJOOtfRa2zoNQWZds0Il4h9uU3B//DMVTqv
q+64k1CtM5pboP5i6to/qW7qiDvF+xHGHuqz10PP42zGTBHVN6c5P8rJM0RN
iTtprzXtldXmua1a/piUt6YOhhB3knsfZLVMJTz2MxVQXXBaGzCFmuB+uZXi
d0NZf3VNxJ0KZ5NK9XYtWl1xJ6E4m/L26TXmnE/G9EO6fM6P6g0bqqbEncve
FKG7Dnp/JpbI9tu8akL/za8ZStxJpodLTKYOI2seygs2lb6Yk8IkddZ90GTc
ScRcBiEemyZ8N/UpB1udcacCxdc07nJPC8Z0i64F23rnYYOBr2e9j49HeFiY
yr/vmlEu5o7l6KjehpuaHp96UNKedkNA57V/f56Hg/E87rP62frk47qB7W1s
imJ5zU669leG6nd6PPLQ6DFQP7XfhOtB+m7GqzH3vDmofueD+/fVfr9Uo4V6
oVAurSn0v2JMHy15XSTOKyhb4zFWNLbSda+vGuYbm4Nee8o7MqXX/r38tffT
8WvP9Nc7eW9eQ8wzb6wzSaXiXk59QNeD9LprqseFvqA+fBNCZfmtkYX6EWcz
ZiqoTrEu5/zUyfflS9y6ebPB36P8Qrre1Yc5N8Vc8+a3TZ9rpl5FVy/rZ/3O
uohzzY9zxdoxjH2N9h8vNJH6B9TTi74PdaH15t07d2ntePzzZOvu8yOLdBr3
U/3OrZs2a/Qx/kqWrbtTnitjTPO8c2S14ammmzFQJb+T9hFR/RDqpaYvFLm1
T5pYo9CQ8jtrM8W5XtYwuhaj/Y36us9anaKorprw3a+vl6ym8zuVyROuB6nH
BdUzTtLRvi5N5Hcq86ZQ1l9zbIhEnAdljGmGuI71UHu1g7RBlbiT4k3KKdC3
nuEUc9L5J60JtQQMNe5Ux1wvMz7Uh93yRZ6uD0MrFgjXXtTHrD66iDsVqOYb
nSdu1zMfqynaijsJ5diODC4U+1tE8bo7Y2on9sV4kiv2XzcmDcWdNIbS+rq+
1vGh+KuNEIc1tg+1ocadhOJsOq8Zch0Fpl50XXguybjzC0lJlaxOVFxR/XGO
LuNO4pMjW3enPffa3IejzbhTgXrJ0XuyL66E12EYU5MK+RzTUiPMnaov7hR7
Ez/S79qkNM79ElCI4UGFjRrzDDnuJF7ZxpXvwZourEC27tzYay9DdCi+FAMD
Gq4ppuu4k9C1urgPR4g/X2RrZz+gLuJOQtcBNN9OteZ1lWPAmDGhmIZ6Fhrj
tVxdcadYk1mIawyhXjDVyqYxb3kDa2+1GXrcSa7K97fp83UB0zyqbaOufgr6
TMxhFWI4VWo66EPcqSDWfhOuCyg3W9O1PnUVdxKq57w9tlg8b5jC3DtjmrI6
qkjMEy8z0txpqt8ZFhr6xc+oDzqNk3c/GM46riIP4uh71fIgqH5nUGCgho9K
8ygPgnoFFuppHgTTrAR5fS19zYNRp79TysSeZaqQSCQar9/ZGNR3kuZp6bsa
psE1Cqrfef/ePY3dvyqovzvlZv3sX4BMI6j5wpg20TUbXV9/NKHvTj7Fb09z
xfUsQ/NeHi+76SCfX5fmREjQySffJOo2si/NEt77hvbYGIt/FWKZ+wZ0LazM
eXkNoi0xxXq3T1OdKOeD+tpRHnp99a4YY589pb3S7sZfl4Tqd9KaM6G4pfPL
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
kftOS0vDk5hkbBPe18EPY/Af8s8yva82t2MwTvh8L3kRJ77vx4IScCUiEQ+j
ZZ+JV8JnIyA+BelphvdZj0pMxbnQRMx49g6d7wif5atvxOf9by7RGOgeg9nC
z9cKn+l9Ae/F33N9nSx+vmkM8Beed1zaR10PX82Sk5PT4GtE41xr17f4n8K4
di40QefvmaZuKalp2OP/Ht85R4lj2eO3mh3Hvr75+/mh9089dP46aPsWGRmJ
Lh06avxxYoTzmLswZh0RztkLveIwSPh+t7gljHPXosRx7rsLsvGO3v//T/j+
0xhIf/9aGCN0/Ro19hYmxCk3I5PFzzONbT2E8/S/05hO49ul15+e63+5HoX/
J/z8H8Kt34OYRj1GZmamrocvg0ZzSD91667SzaKjHVradkWrDl3RWvj/bTp2
g3WnbrDt3A1dunbHjyrejyHdOnXpJnvOws28gx0shefcVnjO7YXn3FH4u252
2j2ebsK1cdeOnXT+umj7povnTe9t566yzze93/S+0/tPn30z4bNAn4mW8pux
fPbpeXQVvsv02bbpLPt+0/ecvvv0+afvvuJ5d/t5sK6Hr2ZZsmhRg69Hu06y
77m9Hrw3mrzR86P3mcZxnXzuutqhs20Hnb8OWn/d7bqhk42t7o+D3gM72ZhH
33/FzRg/9/ScugvP0+6r59qY+xg1fLiuhy/GGGOMMcYYY4wxxhhjjDHGGGOM
MaanHrk/RHW16dSLoD2a9JwZY8bL4+EjSKXGU/NHFabYk54xZnjuuN3GiKHD
sNLREatXrtTK7cC+/SgtLUVRURH27Nqttcel5zh21Ghcuvi3rl92xpgGPfbw
wNDf/6nVcW3v7t3imEZj24F9+7T2uKtWrMCEsWNx+uRJXb/sjDGmEqrjEBwc
jOCgIK3cnns+w9bNW7Bx/Xp4PffS2uPSc6S6FYwx40d92rU5rtFYRmPati1b
xTFOa+OacEtLTdX1y80YY3otNjYWSUlJuj4MxhhTm+TkZHFsY4wxxhhjjDHG
GGOMMcYYY4wxxhhjjDHGGGOMMcYMQxUK3gXA81Us8k2njCdjzJhVFSD+1TP4
xuWChzXGGNMT+RE4t2oVjnu+RtSFJRi27RkKdX1MjDHWDEUhF7Bq9TE8fROJ
K/PGYoNPnq4PiTHGWGU8LkwciNl3MsT5gJqkixjXdQ7cinh2gDFmmKpjLmHS
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
     "], {{0, 191}, {670, 0}}, {0, 
     255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{670, 191},
   PlotRange->{{0, 670}, {0, 191}}]], "Input",ExpressionUUID->
  "5b752736-2c07-4467-9610-d5bca42dcf99"]
}], "Text",
 CellChangeTimes->{{3.8141166884988127`*^9, 3.8141166990729837`*^9}, {
   3.814117995278455*^9, 3.814117999735364*^9}, {3.814119754916725*^9, 
   3.814119759101337*^9}, {3.814119980184719*^9, 3.814120037087371*^9}, {
   3.814120111021035*^9, 3.814120166937752*^9}, {3.8141205595646763`*^9, 
   3.814120589307219*^9}, {3.814123195332027*^9, 3.814123313116558*^9}, {
   3.814123349948543*^9, 3.814123363114396*^9}, {3.8141246423725157`*^9, 
   3.81412465544621*^9}, {3.814126448674155*^9, 3.814126449080101*^9}, {
   3.8141796144531307`*^9, 3.81417962193834*^9}, {3.8141848602947598`*^9, 
   3.81418486272503*^9}, {3.814190419606327*^9, 3.814190433754027*^9}, 
   3.8141944462530813`*^9, {3.8143785347610693`*^9, 3.814378548531061*^9}, 
   3.814794721455248*^9, {3.814877759105789*^9, 3.814877761714795*^9}, {
   3.814877812025584*^9, 3.81487806508539*^9}, {3.814878230710623*^9, 
   3.814878248193658*^9}, {3.814878289235183*^9, 3.814878289435746*^9}, {
   3.814878402901408*^9, 
   3.814878406667562*^9}},ExpressionUUID->"d6f97f75-8b7f-4150-8a81-\
0f25323dea35"],

Cell[TextData[{
 "\nWe have the following entities for our setup :\n\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "9879e550-58f9-4787-bb18-4ddbda1e0b90"],
 "   is the simulated (or the estimated) output  ",
 StyleBox["(ie. the above ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "-"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "78b9b196-f6bc-40d0-9709-31bb7c27f91f"],
 StyleBox[" ,  ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["F", "N"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "88b6d521-a2da-4463-a4d8-2748b5ed3f67"],
 StyleBox[" or the below ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "4a5c9449-e362-49df-8cb4-519fb92199d5"],
 StyleBox[")",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "2c55f191-f81a-4a9e-8c0b-2867a18a57a2"],
 " is the true expected output, ",
 StyleBox["(ie. the above \[LeftAngleBracket]A\[RightAngleBracket] or the \
below \[Mu])",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "4f1fc991-8e9f-4f53-8a50-41941672cb78"],
 "  is the generated sample where ",
 StyleBox["i=1 to N, ",
  FontSlant->"Italic"],
 StyleBox["(ie. replicates (",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "i"], ")"}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "13d0fede-0f29-4856-97e6-6de975ee5eb5"],
 StyleBox[" ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["of the outcome of a certain ",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "a980ce24-4fca-48d2-902b-bcb497c88156"],
 StyleBox["[x] )\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["x", "\[Rule]"], "i"], TraditionalForm]],ExpressionUUID->
  "be38f733-5e60-4f4d-a8cc-5724eca875ba"],
 StyleBox["  ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "is the configurator (also called the locator)\n",
 StyleBox["\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "Practically it is like this :\n\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "4bce39a7-181b-421e-add5-0734f2b3cb0e"],
 "   = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], 
   FractionBox["1", "n"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"f", "[", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}]], "Input",
  ExpressionUUID->"583429d4-c7ab-4900-af78-f4dfdb6bc0de"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "5bb81618-dd5c-492d-b93b-fee7c34db8a4"],
 " =  ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"7", "x"}], "-", 
      RowBox[{"8.5", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"3", 
       SuperscriptBox["x", "3"]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",ExpressionUUID->
  "14f8b956-6638-4bb3-bb9a-7f5029befe3f"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "  ", "="}], TraditionalForm]],ExpressionUUID->
  "b5457ba1-2712-4bc2-ad51-45ed04baec55"],
 "  ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"a", "+", 
    RowBox[{
     RowBox[{"RandomReal", "[", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]], "Input",ExpressionUUID->
  "692820e2-3e19-4a42-8d4c-0b56b8e28358"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["x", "\[Rule]"], "i"], TraditionalForm]],ExpressionUUID->
  "eda04716-4165-4bb4-b2de-5dbdeca37d2e"],
 "  =  ",
 Cell[BoxData[
  RowBox[{"RandomReal", "[", "]"}]], "Input",ExpressionUUID->
  "95c96451-4415-4fca-a92b-cc3479159950"],
 "\n\nAnd it works like this.. \nevery time we run the Mathematica code for \
",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "6d81e650-d39f-4ab4-9731-c1a941641550"],
 " we\[CloseCurlyQuote]ll get different results (just go above and run and \
re-run the code :).\nNow the fluctuating quantity from the result will \
deviate a certain ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "x"], TraditionalForm]],ExpressionUUID->
  "dd61ead8-891c-4dd3-8e3a-4d5e9ee2d31f"],
 " from the true expected result and that is the Monte Carlo Error.\nWith \
other words, according to the Central Limit Theorem, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "f3d8ea99-bb9b-461a-be7a-15dbc29a5663"],
 " is normally distributed around ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "7e1a3517-4148-4596-a00c-abab38358d24"],
 " with a standard deviation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "x"], TraditionalForm]],ExpressionUUID->
  "72db40f1-7cca-4b04-9f16-51bf409de595"],
 " .\nOr also that, the rate of convergence of our simulation for N is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "x"], TraditionalForm]],ExpressionUUID->
  "9f1c18ee-5920-4832-886b-2b7ec58a72ee"],
 " .\n\n\nThis can be seen also as "
}], "Text",
 CellChangeTimes->{{3.8141831123368692`*^9, 3.814183158393643*^9}, {
   3.814183192704487*^9, 3.814183434535427*^9}, {3.814183485250523*^9, 
   3.814183607293161*^9}, 3.814184886552473*^9, {3.814189098433846*^9, 
   3.814189098670405*^9}, {3.81418985509944*^9, 3.814189919336681*^9}, {
   3.814190731453644*^9, 3.814190732083544*^9}, {3.8141953889333563`*^9, 
   3.814195455243424*^9}, {3.814195568434885*^9, 3.8141955966317387`*^9}, {
   3.814195750577527*^9, 3.814195751364856*^9}, {3.814196309814281*^9, 
   3.8141964461447144`*^9}, {3.8142730805348997`*^9, 3.814273088344681*^9}, {
   3.814273803462503*^9, 3.8142738483490763`*^9}, {3.814274980305011*^9, 
   3.81427499582932*^9}, {3.814275031695593*^9, 3.814275032593816*^9}, {
   3.814275432958584*^9, 3.814275456086883*^9}, {3.8142755582836323`*^9, 
   3.8142755602865753`*^9}, {3.814276003290558*^9, 3.814276029276594*^9}, {
   3.8142760883170347`*^9, 3.814276138400725*^9}, {3.814276346204029*^9, 
   3.814276347652709*^9}, {3.814276393505735*^9, 3.81427642278157*^9}, {
   3.814276731375695*^9, 3.81427673137586*^9}, {3.814276781839684*^9, 
   3.814276783365795*^9}, {3.814276915465843*^9, 3.814276919335623*^9}, {
   3.814277364497056*^9, 3.814277512751988*^9}, {3.814277546602273*^9, 
   3.814277587631134*^9}, {3.8142776439052763`*^9, 3.8142776507884073`*^9}, {
   3.8142777015472*^9, 3.814277763669422*^9}, {3.8142778709988337`*^9, 
   3.814278252507649*^9}, {3.81427839101497*^9, 3.81427842125661*^9}, {
   3.8142785277950993`*^9, 3.814278529616322*^9}, {3.81427885879426*^9, 
   3.814278910607727*^9}, {3.814278944178752*^9, 3.81427894660929*^9}, 
   3.8142803114576406`*^9, {3.8142803903044157`*^9, 3.814280390306798*^9}, {
   3.814280460928769*^9, 3.814280487948264*^9}, {3.81435644270477*^9, 
   3.8143564453382263`*^9}, {3.814359166846529*^9, 3.81435926244785*^9}, {
   3.814374718197102*^9, 3.814374752954671*^9}, {3.814377727551709*^9, 
   3.814377741972364*^9}, 3.814437740425527*^9, {3.8144402100481377`*^9, 
   3.81444021632547*^9}, 3.814440272645624*^9, 3.814441087929476*^9, {
   3.814452986956517*^9, 3.814452994005756*^9}, 3.814784060961364*^9, 
   3.814876834696232*^9, {3.8148769740869827`*^9, 3.814877024958453*^9}, {
   3.814877056166924*^9, 3.8148770574704533`*^9}, {3.8148777514602013`*^9, 
   3.8148777539527884`*^9}, {3.814878044568267*^9, 3.814878048122024*^9}, {
   3.814878097197523*^9, 3.814878185710849*^9}, {3.814878228555201*^9, 
   3.8148782464631233`*^9}},ExpressionUUID->"44a96503-23f5-4c81-bb2c-\
a89559c1bb62"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["x",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], "-"], "1"], 
   StyleBox["=",
    FontSize->18], 
   StyleBox[
    RowBox[{"f", 
     RowBox[{"(", 
      OverscriptBox["x", "\[Rule]"], ")"}]}],
    FontSize->18]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8144402787869463`*^9, 3.814440310713295*^9}, {
   3.814441184049625*^9, 3.8144411963373613`*^9}, {3.8144412923441563`*^9, 
   3.814441295739254*^9}, 
   3.814876835756935*^9},ExpressionUUID->"10cb2dc8-596c-4dbb-a2da-\
f584cd944be6"],

Cell[TextData[{
 "when ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0e9d3fae-2ee7-4389-96ad-cd01c4a9968d"],
 " is distributed uniformly, the estimator (called ",
 StyleBox["primary estimator",
  FontVariations->{"Underline"->True}],
 ") is unbiased so that its expected value is the integral."
}], "Text",
 CellChangeTimes->{{3.814440327429595*^9, 3.814440378956696*^9}, {
  3.814440572411868*^9, 
  3.814440577901144*^9}},ExpressionUUID->"072c55d0-27f1-49bb-bab2-\
50bb3f031b2f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    SubscriptBox[
     OverscriptBox[
      StyleBox["x",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], "-"], "1"], "]"}], "=", "I"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8144403935812483`*^9, 3.814440435970826*^9}, 
   3.814441214388258*^9},ExpressionUUID->"70b025ab-3598-4bfc-a41b-\
1b0b681de6a9"],

Cell[TextData[{
 "Now the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    OverscriptBox["x", "\[Rule]"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "79899d59-321f-4e95-8531-8f122f4e5571"],
 " is itself a random variable with an arbitrary distribution and typically a \
large variance.\nA more practical MC estimator is obtained by averaging a \
fixed number of (say N) primary estimates"
}], "Text",
 CellChangeTimes->{{3.8144404526407633`*^9, 3.814440553646164*^9}, {
  3.814440622834502*^9, 
  3.814440656132099*^9}},ExpressionUUID->"6b89f3e7-9d03-4dde-9a17-\
d11150b4185d"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Mu]", "-"], "N"], "=", 
   RowBox[{"\[Sum]", 
    RowBox[{"f", 
     RowBox[{
      RowBox[{"(", 
       SubscriptBox[
        OverscriptBox["X", "-"], "i"], ")"}], "/", "N"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81444068862294*^9, 3.814440737649642*^9}, 
   3.814441229750333*^9},ExpressionUUID->"16b7ace2-9f57-4f66-9b0b-\
4cfc0106653d"],

Cell[TextData[{
 "Such ",
 StyleBox["secondary estimators",
  FontVariations->{"Underline"->True}],
 " are known to be unbiased and approach a Gaussian distribution as N\[Rule]\
\[Infinity] and if the primary estimator has finite var.\n\nSo, when we refer \
to the estimation of a ",
 StyleBox["primary estimator ",
  FontColor->RGBColor[1, 0.5, 0]],
 "we use",
 StyleBox[" lowercase ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "1e66c404-213b-4c74-95fd-41dfe671c543"],
 "\nwhen we refer to the estimation of a ",
 StyleBox["secondary estimator ",
  FontColor->RGBColor[1, 0.5, 0]],
 "we use",
 StyleBox[" uppercase ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "a596be88-2e0c-41a3-bd61-202e76534244"],
 ", so the single outcome ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "171d496f-9ea7-4359-8dd6-c64937c3c5fb"],
 "=",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "75aa8dd8-6816-475c-b343-0e6550309335"]
}], "Text",
 CellChangeTimes->{{3.814440746671064*^9, 3.814440802068143*^9}, {
   3.8144416700715523`*^9, 3.814441782956849*^9}, {3.814441976458047*^9, 
   3.814441989820063*^9}, {3.81444206684111*^9, 3.814442067130866*^9}, {
   3.814442305561843*^9, 3.814442309925951*^9}, {3.8144423525473013`*^9, 
   3.814442353310803*^9}, 
   3.8144503424854193`*^9},ExpressionUUID->"51a178ad-3228-48c2-a28a-\
a637f24c0090"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    OverscriptBox["X", "-"], "|", 
    SubscriptBox[
     OverscriptBox["\[Mu]", "-"], "N"]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox[
      FractionBox["1", "N"],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      RowBox[{
       StyleBox["(",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox[
         OverscriptBox["x", "-"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox["|",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        SubscriptBox[
         StyleBox["X",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], "i"]}], ")"}]}]}], "=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "n"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         SubscriptBox["x", "i"]}]}], ")"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814441850027419*^9, 3.8144419024980793`*^9}, 
   3.814441939465897*^9, {3.814442000486188*^9, 3.8144420080451307`*^9}, {
   3.8144420442721653`*^9, 3.814442049378572*^9}, {3.814442108215904*^9, 
   3.814442147951009*^9}, {3.81444222751257*^9, 
   3.814442279376911*^9}},ExpressionUUID->"af86503c-da67-42a2-8405-\
b6d42236e4dd"],

Cell[TextData[{
 "\n\nNow, let\[CloseCurlyQuote]s see the ",
 StyleBox["derivation",
  FontVariations->{"Underline"->True}],
 " for the above.\nBelow we are subtracting the true expected value from the \
mean of the simulation to see how accurate is ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "2fa4777c-aa60-4b89-b34b-ac0fbb9bd0e9"],
 " as an estimate of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "16da0758-ac17-4476-8851-21588e353984"]
}], "Text",
 CellChangeTimes->{{3.8141831123368692`*^9, 3.814183158393643*^9}, {
   3.814183192704487*^9, 3.814183434535427*^9}, {3.814183485250523*^9, 
   3.814183607293161*^9}, 3.814184886552473*^9, {3.814189098433846*^9, 
   3.814189098670405*^9}, {3.81418985509944*^9, 3.814189919336681*^9}, {
   3.814190731453644*^9, 3.814190732083544*^9}, {3.8141953889333563`*^9, 
   3.814195455243424*^9}, {3.814195568434885*^9, 3.8141955966317387`*^9}, {
   3.814195750577527*^9, 3.814195751364856*^9}, {3.814196309814281*^9, 
   3.8141964461447144`*^9}, {3.8142730805348997`*^9, 3.814273088344681*^9}, {
   3.814273803462503*^9, 3.8142738483490763`*^9}, {3.814274980305011*^9, 
   3.81427499582932*^9}, {3.814275031695593*^9, 3.814275032593816*^9}, {
   3.814275432958584*^9, 3.814275456086883*^9}, {3.8142755582836323`*^9, 
   3.8142755602865753`*^9}, {3.814276003290558*^9, 3.814276029276594*^9}, {
   3.8142760883170347`*^9, 3.814276138400725*^9}, {3.814276346204029*^9, 
   3.814276347652709*^9}, {3.814276393505735*^9, 3.81427642278157*^9}, {
   3.814276731375695*^9, 3.81427673137586*^9}, {3.814276781839684*^9, 
   3.814276783365795*^9}, {3.814276915465843*^9, 3.814276919335623*^9}, {
   3.814277364497056*^9, 3.814277512751988*^9}, {3.814277546602273*^9, 
   3.814277587631134*^9}, {3.8142776439052763`*^9, 3.8142776507884073`*^9}, {
   3.8142777015472*^9, 3.814277763669422*^9}, {3.8142778709988337`*^9, 
   3.814278252507649*^9}, {3.81427839101497*^9, 3.81427842125661*^9}, {
   3.8142785277950993`*^9, 3.814278529616322*^9}, {3.81427885879426*^9, 
   3.814278910607727*^9}, {3.814278944178752*^9, 3.81427894660929*^9}, 
   3.8142803114576406`*^9, {3.8142803903044157`*^9, 3.814280390306798*^9}, {
   3.814280460928769*^9, 3.814280487948264*^9}, {3.81435644270477*^9, 
   3.8143564453382263`*^9}, {3.814359166846529*^9, 3.81435926244785*^9}, {
   3.814374718197102*^9, 3.814374752954671*^9}, {3.814377727551709*^9, 
   3.814377741972364*^9}, 3.814437740425527*^9, {3.8144402100481377`*^9, 
   3.81444021632547*^9}, {3.814440851455989*^9, 3.814440860612979*^9}, {
   3.814441279629719*^9, 3.814441279855801*^9}, 
   3.8144425256595707`*^9},ExpressionUUID->"c7cd07a2-9e7d-4dd8-96d6-\
daf05b79437f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "[", 
      OverscriptBox["X", "-"], "]"}], "-", 
     SubscriptBox["\[Mu]", "x"]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["E",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox["[",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox[
         FractionBox["1", "N"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        RowBox[{
         StyleBox[
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "N"],
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], 
         SubscriptBox["X", "i"]}]}], 
       StyleBox["]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]]}], 
      StyleBox["-",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      StyleBox[
       SubscriptBox["\[Mu]", "x"],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]]}], "=", 
     RowBox[{
      RowBox[{
       StyleBox[
        FractionBox["1", "N"],
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox[
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "N"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        RowBox[{
         StyleBox["E",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], 
         StyleBox["[",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], 
         SubscriptBox["X", "i"], 
         StyleBox["]",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]]}]}]}], "-", 
      SubscriptBox["\[Mu]", "x"]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 InitializationCell->True,
 CellChangeTimes->{{3.814182114932908*^9, 3.814182116170971*^9}, {
  3.814182325196604*^9, 3.814182348439889*^9}, {3.814182899134029*^9, 
  3.814183085875699*^9}, {3.81427673481181*^9, 3.8142767370619802`*^9}, {
  3.81444156434693*^9, 
  3.814441574469613*^9}},ExpressionUUID->"f2639d95-4267-4e40-bfb7-\
8530957e948e"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "020ff8e8-1732-4669-a5e9-58cd39f377a1"],
 " occurs from random sampling, then the expectation of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "fbbc98a2-ef90-4faf-ade4-de14659a463d"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     OverscriptBox["x", "-"], ")"}], " "}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c64fee0a-258b-47fa-826c-9ba8e6f16f80"],
 " equals the true expected value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "61e6c545-d6c7-4d80-8522-616a36930625"],
 " , thus we have"
}], "Text",
 CellChangeTimes->{{3.814183734552465*^9, 3.814183821130845*^9}, {
   3.814186824436303*^9, 3.814186874992674*^9}, {3.814189460742218*^9, 
   3.814189626701838*^9}, {3.8141899897853317`*^9, 3.814190045969306*^9}, {
   3.81419007764645*^9, 3.81419013939351*^9}, {3.814195513767933*^9, 
   3.8141955363091097`*^9}, {3.814269591997558*^9, 3.814269607207015*^9}, {
   3.8142755777023497`*^9, 3.814275625356145*^9}, {3.814277002603945*^9, 
   3.814277017770952*^9}, 
   3.814278561410912*^9},ExpressionUUID->"04d1c359-3700-43a6-8c71-\
e8307ff56370"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "N"], 
      SubscriptBox["N\[Mu]", "x"]}], "-", 
     SubscriptBox["\[Mu]", "x"]}], "=", "0"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81418382997465*^9, 3.8141838904356318`*^9}, 
   3.814276752721945*^9, 
   3.8144415789063597`*^9},ExpressionUUID->"68bda62b-52cd-48af-8a15-\
0826fd67d33d"],

Cell[TextData[{
 "This result shows that on average, the error in using ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "570096ba-64f5-4527-b187-5b219a667857"],
 " to approximate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "a6760e3c-b560-4348-a076-c2ee0d44fb30"],
 " is zero.\n",
 StyleBox["(when an estimator gives an expected error of zero, it is called \
an unbiased estimator)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nNext, to quantify the variability in ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],ExpressionUUID->
  "59dbf620-425e-4fac-9bf7-35bd63028351"],
 ", we use the variance of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "6651fbcd-a906-468b-b2a1-a14f3cfa862c"],
 ", \nnoting that the (variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "64ff579e-81fb-460b-be37-94987bda6e74"],
 ") is zero as it is a constant (because comes from the true expected value ?)"
}], "Text",
 CellChangeTimes->{{3.814183926282051*^9, 3.8141840335342293`*^9}, {
   3.81418600977932*^9, 3.814186013984929*^9}, {3.814189677912665*^9, 
   3.814189689252846*^9}, {3.814190236001219*^9, 3.8141903258686333`*^9}, 
   3.8141945950680933`*^9, 3.814269618071457*^9, {3.814275213314493*^9, 
   3.814275213852379*^9}, {3.814275349413499*^9, 3.814275371847691*^9}, {
   3.814278572799506*^9, 3.81427864936066*^9}, {3.814374288556306*^9, 
   3.814374293999864*^9}, {3.814441610136611*^9, 
   3.8144416156496763`*^9}},ExpressionUUID->"3140814e-1c43-48db-9811-\
4615869b1e16"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Var", "[", 
      OverscriptBox["x", "-"], "]"}], "-", 
     RowBox[{"Var", "[", 
      SubscriptBox["\[Mu]", "x"], "]"}]}], "=", 
    RowBox[{"Var", "[", 
     OverscriptBox["X", "-"], "]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"Var", "[", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["X", "i"]}], "N"], "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{"Var", "[", 
      RowBox[{
       StyleBox[
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "N"],
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       SubscriptBox["X", "i"]}], "]"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814184348355433*^9, 3.814184477097062*^9}, {
  3.814276754904517*^9, 3.814276757152836*^9}, {3.814441582075881*^9, 
  3.814441589569682*^9}},ExpressionUUID->"716d3ef9-ddad-4986-8ef2-\
10ee56fb079a"],

Cell[TextData[{
 "Because the Monte Carlo method draws independent, random samples, \nthe \
variance of the sum of the samples ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], ","}], TraditionalForm]],ExpressionUUID->
  "d5daedd2-3a77-482d-8eed-ec1fb388b9b5"],
 " is the sum of their variances ",
 StyleBox["(see Variance algebra on part1)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 ". \nTherefore"
}], "Text",
 CellChangeTimes->{{3.814184509976856*^9, 3.8141845307370577`*^9}, {
  3.814194663217942*^9, 3.81419467649337*^9}, {3.814194781370491*^9, 
  3.81419478726049*^9}, {3.814194822002548*^9, 
  3.814194839347452*^9}},ExpressionUUID->"b8c5eed3-d76c-469f-876d-\
1839d0e93e84"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     StyleBox[
      FractionBox["1", 
       SuperscriptBox["N", "2"]],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     StyleBox["[",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      RowBox[{
       StyleBox["Var",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox["[",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       SubscriptBox["X", "i"], 
       StyleBox["]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]]}]}], 
     StyleBox["]",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["N", "2"]], 
      SubsuperscriptBox["N\[Sigma]", "x", "2"]}], "=", 
     FractionBox[
      SubsuperscriptBox["\[Sigma]", "x", "2"], "N"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "x"], "\[Congruent]", 
     RowBox[{"E", "[", 
      OverscriptBox["X", "-"], "]"}]}], "=", 
    SubscriptBox["\[Mu]", "x"]}], ",", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sigma]", "x", "2"], "\[Congruent]", 
     RowBox[{"E", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["X", "-"], "-", 
         SubscriptBox["\[Mu]", "x"]}], ")"}], "2"], "]"}]}], "=", 
    RowBox[{
     FractionBox[
      SubsuperscriptBox["\[Sigma]", "x", "2"], "N"], "=", 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Sigma]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], "x"], 
      FractionBox["1", 
       SqrtBox["N"]]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.8141845403004417`*^9, 3.814184810458441*^9}, {
  3.81418604121064*^9, 3.814186095572022*^9}, {3.814276760799049*^9, 
  3.8142767665344753`*^9}, {3.814441595033862*^9, 
  3.814441605432522*^9}},ExpressionUUID->"f3734048-33ca-4039-895c-\
9c38c6d67426"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontSize->12,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Basics of Direct Monte \
Carlo]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontSize->12,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox["\nIn a more straightforward way.",
  FontVariations->{"Underline"->True}],
 "\nSince all the random variables ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "56d442b4-c347-463c-a130-519c6264d247"],
 " (ie. the generated samples) in our sample have mean \[Micro], the mean of \
the sample mean is "
}], "Text",
 CellChangeTimes->{{3.814191445558856*^9, 3.8141914698824*^9}, {
   3.814191882881915*^9, 3.814191891754788*^9}, {3.8141923164663763`*^9, 
   3.814192322991324*^9}, 3.814192616259302*^9, {3.814274164858408*^9, 
   3.814274184927825*^9}, {3.8142745099404488`*^9, 3.814274510795658*^9}, {
   3.8143782255257196`*^9, 3.814378306318719*^9}, {3.814378350689323*^9, 
   3.814378358723702*^9}, 3.814378707929538*^9, 
   3.814794725137134*^9},ExpressionUUID->"cf238d45-d57b-41a1-aff7-\
549c02105c72"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    SubscriptBox[
     OverscriptBox["\[Mu]", "^"], "n"], "]"}], "=", "\[Mu]"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814191908676115*^9, 3.814191936493475*^9}, {
  3.814195131285122*^9, 3.8141951748904552`*^9}, {3.8141952130280933`*^9, 
  3.814195218834635*^9}, {3.814195301858603*^9, 3.814195339165484*^9}, {
  3.814195860244627*^9, 3.814195863030756*^9}, {3.814196245397873*^9, 
  3.814196246525549*^9}},ExpressionUUID->"e5674680-8339-441f-b7d8-\
a1fe6178b9c6"],

Cell[TextData[{
 StyleBox["\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "In words, we can say that given a particular design (ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x"], "(", ")"}], " ", ")"}], TraditionalForm]],
  ExpressionUUID->"125895ca-cca7-44d5-9dc6-7d47db639937"],
 ", let \n\[Mu] denote some target quantity of interest (the true expected \
value) and \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "3c48188d-64ac-4652-bddd-e7adbdcdcf7e"],
 " denote the Monte Carlo expected estimate of \[Mu] from a simulation with N \
replicates (where each generated replicate is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "702b7ce4-6e5a-41d6-80e3-3c68aeb3bbe1"],
 ")\n",
 StyleBox["(so it could be written just as \[LeftAngleBracket]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "65c95845-b7eb-4279-8f08-a2a5e04900ff"],
 StyleBox["\[RightAngleBracket]=\[Mu] that belongs to the notation above as  ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "1e5d6a0a-0028-458a-aec0-e07fa6cd2e85"],
 StyleBox["=\[LeftAngleBracket]A\[RightAngleBracket] or ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "=", "F"}], 
   TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "cdc0453f-702f-4da6-a47d-f39a40b3a1af"],
 StyleBox[")",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nIn the language of statistics, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Micro]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "f19ff34e-8da2-4ddb-a25c-7b012d5aadc8"],
 " is said to be an unbiased (mean) estimator of \[Micro].\n\nWe assume that \
the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "8fc91d4f-ebc8-4a9c-b971-aa15b6d8c120"],
 " have finite variance. \nSince they are identically distributed, they have \
the same variance \[Sigma].\nSince they are also independent, we have ",
 StyleBox["(from variance algebra, that the variance of the sum of the \
samples ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], ","}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "b8eee7b5-0f2a-4db5-ad9e-9f4ccd49daa0"],
 StyleBox[" is the sum of their variances)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.81419204292045*^9, 3.8141921075999537`*^9}, 
   3.8141923452882633`*^9, {3.814192640242435*^9, 3.814192642064254*^9}, {
   3.814192760708033*^9, 3.814192765229806*^9}, {3.814193003842944*^9, 
   3.814193019906685*^9}, {3.814194898861547*^9, 3.814194926221456*^9}, {
   3.814273672759224*^9, 3.814273710873397*^9}, {3.8142740479944763`*^9, 
   3.8142741033219976`*^9}, {3.814274213437475*^9, 3.814274294455862*^9}, {
   3.8142743781130257`*^9, 3.814274408939537*^9}, {3.814274524924242*^9, 
   3.814274686342017*^9}, {3.814274728731257*^9, 3.8142747463690233`*^9}, {
   3.814274801568899*^9, 3.8142748054355917`*^9}, {3.814274841231633*^9, 
   3.8142748516047983`*^9}, {3.814275285567233*^9, 3.81427531706188*^9}, {
   3.814276177438308*^9, 3.814276231556975*^9}, 3.814278293661724*^9, {
   3.8143554831690683`*^9, 3.81435549306886*^9}, {3.814356408974978*^9, 
   3.814356410819045*^9}, {3.814898151767147*^9, 
   3.814898153003578*^9}},ExpressionUUID->"0cf988df-c900-420c-a03f-\
273eac332201"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "N"], 
     SubscriptBox["X", "i"]}], "]"}], "=", 
   SuperscriptBox["N\[Sigma]", "2"]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8141921161942463`*^9, 3.8141921544338703`*^9}, {
  3.814192230403016*^9, 3.814192276620384*^9}, {3.814194971718067*^9, 
  3.8141949724368973`*^9}},ExpressionUUID->"637ac7b9-21d4-416c-9192-\
54bdea03fcca"],

Cell[TextData[{
 StyleBox["(aka the variance of the sum of all the outcomes of ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "b8501918-a40e-498a-aa99-1ac24ff652fa"],
 StyleBox[" is proportional to the variance of the sample times Nsamples (ie. \
sum of equal variances))",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nand so the variance of the sample mean is"
}], "Text",
 CellChangeTimes->{
  3.814192370408918*^9, {3.814192833021021*^9, 3.814192857997342*^9}, {
   3.814192888261446*^9, 3.8141929302447433`*^9}, {3.814194979837646*^9, 
   3.814195010302771*^9}, {3.8141952657483788`*^9, 
   3.814195271460321*^9}},ExpressionUUID->"80244e20-2091-40e5-b86f-\
acf7e0cd3ab9"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    SubscriptBox[
     OverscriptBox["\[Mu]", "^"], "n"], "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{"Var", "[", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["X", "i"]}], "]"}]}], "=", 
    FractionBox[
     SuperscriptBox["\[Sigma]", "2"], "N"]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814192387703025*^9, 
  3.814192436146942*^9}},ExpressionUUID->"1d1dbed5-189c-45b8-8225-\
68bc5975f732"],

Cell[TextData[{
 "Thus the difference of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "N"], TraditionalForm]],ExpressionUUID->
  "84232c68-cf61-41f8-9a24-4a851f853942"],
 " from \[Mu] should be of order \[Sigma]/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "3da97ce6-db24-4fb1-8204-0085eecb51ae"],
 "\nThis is written also as "
}], "Text",
 CellChangeTimes->{{3.8141924598351994`*^9, 3.814192514761636*^9}, {
  3.814192552678259*^9, 3.814192558929347*^9}, {3.814196456404858*^9, 
  3.8141965910884113`*^9}, {3.8141972893813553`*^9, 3.8141973733248568`*^9}, {
  3.8141974424695263`*^9, 3.814197463032279*^9}, {3.814202446151772*^9, 
  3.8142025439465017`*^9}, {3.814202578391631*^9, 3.814202601523114*^9}, {
  3.814202691340993*^9, 3.8142027937153797`*^9}, {3.8142784524640713`*^9, 
  3.8142784992857933`*^9}, {3.814278687903131*^9, 3.814278693619913*^9}, {
  3.8142791146613483`*^9, 3.814279115537526*^9}, {3.814279151605432*^9, 
  3.814279152639886*^9}, {3.814296720305674*^9, 
  3.8142967431682997`*^9}},ExpressionUUID->"b21abe3d-9148-40a6-82f7-\
5ce8c15cffa4"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "]"}], 
   "\[Proportional]", 
   FractionBox["1", 
    SqrtBox["N"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8142967499594383`*^9, 
  3.814296790255653*^9}},ExpressionUUID->"7c323f50-2d6f-46c2-8437-\
4ca66fe31f4e"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nIn other words, ",
 StyleBox["we're sayin that for infinite (N) samples the mean of the \
simulation is equal to true expected value of the simulation",
  FontVariations->{"Underline"->True}],
 ", \nwhere for Nsamples instead it is just proportional to and the \
difference is the MC error .. that is the same as saying that \nthe rate of \
convergence of our Monte Carlo simulation to the exact value is, 1/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "02bd3573-3f9d-4850-a796-13759b8b1725"],
 ".\n\nHere we see that for standard deterministic quadratures the error is \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["N", "d"]}], TraditionalForm]],ExpressionUUID->
  "91de8943-c7c5-402f-b9e0-fc1c09f9a6aa"],
 " while for Monte Carlo direct method the error is 1/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "1e49f955-f9b7-45ad-95a3-d8543e006ccb"],
 ".\nThis means that the standard approach has a faster rate of convergence \
than Monte Carlo. \nFor example it approaches 0.04 error with just 25 samples \
where for Monte Carlo we need around 600."
}], "Text",
 CellChangeTimes->{{3.8141924598351994`*^9, 3.814192514761636*^9}, {
   3.814192552678259*^9, 3.814192558929347*^9}, {3.814196456404858*^9, 
   3.8141965910884113`*^9}, {3.8141972893813553`*^9, 
   3.8141973733248568`*^9}, {3.8141974424695263`*^9, 3.814197463032279*^9}, {
   3.814202446151772*^9, 3.8142025439465017`*^9}, {3.814202578391631*^9, 
   3.814202601523114*^9}, {3.814202691340993*^9, 3.8142027937153797`*^9}, {
   3.8142784524640713`*^9, 3.8142784992857933`*^9}, {3.814278687903131*^9, 
   3.814278693619913*^9}, {3.8142791146613483`*^9, 3.814279115537526*^9}, {
   3.814279151605432*^9, 3.814279152639886*^9}, {3.814296720305674*^9, 
   3.8142967409382563`*^9}, 
   3.814296810060635*^9},ExpressionUUID->"c2c43ff2-2cf5-4f3c-85d3-\
b56d45674af3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"1", "/", "25"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     SqrtBox["600"]}], ")"}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8142028109302073`*^9, 
  3.814202907475675*^9}},ExpressionUUID->"459ba7c4-814e-419c-bf6f-\
dba1c883d858"],

Cell[BoxData["0.04`"], "Output",
 CellChangeTimes->{{3.8142028046038237`*^9, 3.814202908214319*^9}, 
   3.814713450470434*^9, 3.814729439263623*^9, 3.81472983586831*^9, 
   3.8147841719668093`*^9, 3.8147852596995087`*^9, 3.814786867950658*^9, 
   3.814787174852182*^9, 3.814787243242159*^9, 3.814790564245475*^9, 
   3.814799145231966*^9, 3.814799233456134*^9, 3.814803511395391*^9, 
   3.814808750974526*^9, 3.814816021931405*^9, 3.8148170370540648`*^9, 
   3.814817200579159*^9, 3.814817935730813*^9, 3.814818377149115*^9, 
   3.814819918418643*^9, 3.814962874541292*^9, 3.8149642692031517`*^9, 
   3.814965660093655*^9, 3.814968796495043*^9, 3.814982315092791*^9, 
   3.814982431272422*^9},ExpressionUUID->"840a9792-1b46-4089-9807-\
5b0b893eba8a"],

Cell[BoxData["0.0408248290463863073`1."], "Output",
 CellChangeTimes->{{3.8142028046038237`*^9, 3.814202908214319*^9}, 
   3.814713450470434*^9, 3.814729439263623*^9, 3.81472983586831*^9, 
   3.8147841719668093`*^9, 3.8147852596995087`*^9, 3.814786867950658*^9, 
   3.814787174852182*^9, 3.814787243242159*^9, 3.814790564245475*^9, 
   3.814799145231966*^9, 3.814799233456134*^9, 3.814803511395391*^9, 
   3.814808750974526*^9, 3.814816021931405*^9, 3.8148170370540648`*^9, 
   3.814817200579159*^9, 3.814817935730813*^9, 3.814818377149115*^9, 
   3.814819918418643*^9, 3.814962874541292*^9, 3.8149642692031517`*^9, 
   3.814965660093655*^9, 3.814968796495043*^9, 3.814982315092791*^9, 
   3.814982431273953*^9},ExpressionUUID->"ce3452f0-2a5b-419f-9aec-\
205d6d404d87"]
}, Open  ]],

Cell[TextData[{
 "Another thing we see is that, - to halve the error in a Monte Carlo \
simulation we need x4 samples (that is the square of the improvement)\n",
 StyleBox["(or in other words, that the standard error decreases with the \
square root of the sample size)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.814202921268778*^9, 3.814202953554061*^9}, {
   3.8142791715404367`*^9, 3.814279198652088*^9}, {3.814279247613406*^9, 
   3.8142792510315437`*^9}, {3.814441435847395*^9, 3.814441447796068*^9}, 
   3.814442560218505*^9},ExpressionUUID->"75063719-d76c-44f7-8a2f-\
fc790ffc3771"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        SqrtBox[
         RowBox[{"600", "*", "4"}]]}], ")"}], ",", "1"}], "]"}], ",", 
    "\"\<halved the above error\>\""}], "}"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "if", " ", "we", " ", "want", " ", "10", " ", "time", " ", "less", " ", 
      "the", " ", "actual", " ", "error", 
      RowBox[{
       RowBox[{"(", "0.04", ")"}], " ", "?"}]}], ".."}], " ", "we", " ", 
    "need", " ", "a", " ", "*", 
    SuperscriptBox["10", "2"], " ", "Nsamples", " ", "boost"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     SqrtBox[
      RowBox[{"600", "*", 
       SuperscriptBox["10", "2"]}]]}], ")"}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8142029815917063`*^9, 3.814202994956642*^9}, {
  3.8142792296589603`*^9, 3.814279397348979*^9}, {3.814279615421773*^9, 
  3.814279669307521*^9}},ExpressionUUID->"773f670a-193c-4cf8-bd71-\
e2ffb7cbf503"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0204124145231931537`1.", ",", "\<\"halved the above error\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.814202987978385*^9, 3.8142029977221937`*^9}, {
   3.8142792315736933`*^9, 3.814279236708396*^9}, {3.814279346897564*^9, 
   3.814279368385448*^9}, {3.814279619622642*^9, 3.814279659355707*^9}, 
   3.81471345054464*^9, 3.81472943931429*^9, 3.814729835920781*^9, 
   3.814784171985227*^9, 3.814785259729335*^9, 3.8147868679734488`*^9, 
   3.814787174885647*^9, 3.814787243263884*^9, 3.814790564278408*^9, 
   3.8147991452656927`*^9, 3.814799233489373*^9, 3.814803511431304*^9, 
   3.814808751012165*^9, 3.814816021956481*^9, 3.814817037078849*^9, 
   3.8148172006041107`*^9, 3.8148179357607927`*^9, 3.814818377173911*^9, 
   3.81481991845313*^9, 3.8149628745758533`*^9, 3.8149642692351093`*^9, 
   3.814965660116243*^9, 3.8149687965174437`*^9, 3.814982315113112*^9, 
   3.8149824313077908`*^9},ExpressionUUID->"c9ff56d9-7916-4879-9ad7-\
dbb88e172e14"],

Cell[BoxData["0.0040824829046386307`1."], "Output",
 CellChangeTimes->{{3.814202987978385*^9, 3.8142029977221937`*^9}, {
   3.8142792315736933`*^9, 3.814279236708396*^9}, {3.814279346897564*^9, 
   3.814279368385448*^9}, {3.814279619622642*^9, 3.814279659355707*^9}, 
   3.81471345054464*^9, 3.81472943931429*^9, 3.814729835920781*^9, 
   3.814784171985227*^9, 3.814785259729335*^9, 3.8147868679734488`*^9, 
   3.814787174885647*^9, 3.814787243263884*^9, 3.814790564278408*^9, 
   3.8147991452656927`*^9, 3.814799233489373*^9, 3.814803511431304*^9, 
   3.814808751012165*^9, 3.814816021956481*^9, 3.814817037078849*^9, 
   3.8148172006041107`*^9, 3.8148179357607927`*^9, 3.814818377173911*^9, 
   3.81481991845313*^9, 3.8149628745758533`*^9, 3.8149642692351093`*^9, 
   3.814965660116243*^9, 3.8149687965174437`*^9, 3.814982315113112*^9, 
   3.814982431310442*^9},ExpressionUUID->"2621d6f7-dd67-4738-b09b-\
403010b51af7"]
}, Open  ]],

Cell[TextData[{
 "However Monte Carlo error does not belong to the dimensions involved while \
the standard error does, effectively standard integration techniques suffer \
from the ",
 StyleBox["curse of dimensionality",
  FontVariations->{"Underline"->True}],
 ", where the convergence rate becomes exponentially worse with increased \
dimensions. It can be seen that only for integrals with more than 6 dims the \
MC error starts to be better than the standard. The smoothness of the \
integral can also play a part .. where it\[CloseCurlyQuote]s narrow, standard \
quadratures have more problem sampling it than Monte Carlo.\n\nTake care that \
being the usual approach to estimate \[Sigma] as well as \[Mu] and then take \
your error magnitude to be \[Sigma]/",
 Cell[BoxData[
  FormBox[
   SqrtBox["n"], TraditionalForm]],ExpressionUUID->
  "8d831136-0f9b-4ec6-9dab-b9ad91b42546"],
 " , the MC error is just a probabilistic error bound (there is no guarantee \
that the expected accuracy is achieved in any particular case). Same goes for \
 \[OpenCurlyDoubleQuote]convergence\[CloseCurlyDoubleQuote] that means that \
you will never get an exact answer from Monte-Carlo but increasingly good \
approximations.\n\n\n",
 StyleBox["===================================================================\
=====================\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Basics of Direct Monte \
Carlo]\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nThe central limit theorem gives a more precise statement of how close ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "8797dbf0-3196-44fe-872b-0e1628ecb407"],
 " is to \[Micro]. It says :\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "ee13254c-d331-46bf-a646-283b2ccdec00"],
 " be an iid sequence such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "[", 
    RowBox[{
     RowBox[{"|", "X"}], ",", " ", 
     RowBox[{"n", 
      SuperscriptBox["|", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "f3dfdff7-efab-4813-80d4-f40d640f1d32"],
 "]<\[Infinity].\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"E", "[", 
     SubscriptBox["X", "n"], "]"}]}], TraditionalForm]],ExpressionUUID->
  "b95e32fa-dc7c-49ab-9095-5b4fcd024050"],
 " and\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "2bcae7dc-f198-44b4-b752-7834b9b69b41"],
 " be the variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "5109a5a3-08dc-4d2f-962a-8695d5f05e8a"],
 " ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      SubsuperscriptBox["X", "n", "2"], "]"}], "-", 
     SuperscriptBox[
      RowBox[{"E", "[", 
       SubscriptBox["X", "n"], "]"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"b00de52b-3881-4ae1-968a-ca485a7edc5b"],
 "\nthen"
}], "Text",
 CellChangeTimes->{{3.8142030146434193`*^9, 3.814203159137886*^9}, {
   3.814204738866695*^9, 3.814204751559657*^9}, {3.8142069062301197`*^9, 
   3.814206978767063*^9}, {3.814207739133116*^9, 3.814207739722231*^9}, {
   3.814290962371409*^9, 3.81429136705597*^9}, 3.8142914981184072`*^9, {
   3.8142919162821617`*^9, 3.8142919320765333`*^9}, {3.814293565484046*^9, 
   3.8142935831018457`*^9}, {3.814294881649482*^9, 3.8142948858285627`*^9}, {
   3.814378100603009*^9, 3.814378159593685*^9}, {3.8143783190354767`*^9, 
   3.814378321371911*^9}, {3.814378364482533*^9, 3.814378364842292*^9}, {
   3.8144659568990593`*^9, 3.814465992605508*^9}, {3.814466174070813*^9, 
   3.814466264676983*^9}, {3.814466304028668*^9, 3.814466314379037*^9}, 
   3.814794736217516*^9},ExpressionUUID->"df42ce10-d99a-40c5-b8c1-\
f29d8482cc5c"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"\[Sigma]", 
     SqrtBox["n"]}]], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "n"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["X", "k"], "-", "\[Mu]"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814291374435575*^9, 
  3.814291416356225*^9}},ExpressionUUID->"c8daccdd-b583-47e2-aa3f-\
5eb5a87d4b96"],

Cell["\<\
converges in distribution to a standard normal random variable.
This means that\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8142914244078913`*^9, 
  3.8142915133065*^9}},ExpressionUUID->"93ee72f9-ad52-4689-9a83-d2f25c26f338"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"a", "\[LessEqual]", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Sigma]", 
          SqrtBox["n"]}]], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], "n"], 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["X", "k"], "-", "\[Mu]"}], ")"}]}]}], "\[LessEqual]", 
       "b"}], ")"}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "/", "2"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814291521900238*^9, 
  3.8142916653629417`*^9}},ExpressionUUID->"dcb29aa3-7347-4289-a07e-\
7c5c439a072c"],

Cell[TextData[{
 "In terms of the sample mean, the central limit theorem says that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
    SqrtBox["n"], "\[Sigma]"}], TraditionalForm]],ExpressionUUID->
  "a1fea6ca-e10f-4cf0-a2fa-4434fd465208"],
 " converges in distrbution to a standard normal distribution.\n\nHowever the \
statement of the central limit theorem involves ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "be335c48-d26c-4fb6-80e7-7a78b76bed86"],
 ". It is unlikely that we know ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "8afcd89b-ccbc-4666-ab16-8b773dd9c899"],
 " if we don\[CloseCurlyQuote]t even know \[Micro]. \nSo we must also use our \
sample to estimate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "1d770a9b-5755-481a-b4fd-9ed902869f27"],
 ". \n\nThe usual ",
 StyleBox["estimator of the variance",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "f027f4e8-dc11-4fd6-be97-a389fa3a99e5"],
 " is the sample variance. \nIt is typically denoted by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "3e4a2c97-9df1-4306-8ee6-590faf1bfc91"],
 ", but we will denote it by ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["s", "n", "2"], TraditionalForm]],ExpressionUUID->
  "1b81c8c5-be67-479c-a9d0-cbce7cba12d7"],
 " to emphasize that it depends on the sample size. It is defined to be"
}], "Text",
 CellChangeTimes->{{3.814291688814783*^9, 3.814291767242468*^9}, {
   3.814291840732884*^9, 3.814291846892303*^9}, {3.814291882791471*^9, 
   3.8142918827914963`*^9}, {3.814291979035478*^9, 3.814292107892446*^9}, 
   3.814292274483693*^9, 
   3.8143749968342457`*^9},ExpressionUUID->"b97de6a5-8e46-4bb8-aa75-\
7fe5fbf443e6"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubsuperscriptBox["s", "n", "2"], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", "-", "1"}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["X", "i"], "-", 
        SubscriptBox[
         OverscriptBox["\[Mu]", "^"], "n"]}], ")"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814292140862689*^9, 3.814292189996695*^9}, 
   3.814786294700816*^9},ExpressionUUID->"29058122-11c6-4165-aae4-\
e7e749df4ac5"],

Cell[TextData[{
 "An application of the strong law of large numbers shows that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["s", "n", "2"], "\[Rule]", 
    SuperscriptBox["\[Sigma]", "2"]}], TraditionalForm]],ExpressionUUID->
  "a86d321a-e856-4c8e-a46f-a37e4b3846ce"],
 ". Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
    RowBox[{
     SqrtBox["n"], "/", "\[Sigma]"}]}], TraditionalForm]],ExpressionUUID->
  "d9e11394-3714-47b4-9406-2e45a9cf436f"],
 " converges in distribution to a standard normal distribution and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["s", "n", "2"], "\[Rule]", 
    SuperscriptBox["\[Sigma]", "2"]}], TraditionalForm]],ExpressionUUID->
  "ee1e6add-8fb8-4ebc-9e8d-c45528e44550"],
 " converges almost surely (a.s.) to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "ead50792-6ae4-4989-a389-0b0307aba4ad"],
 ", a standard theorem in probability implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
    RowBox[{
     SqrtBox["n"], "/", 
     SubscriptBox["s", "n"]}]}], TraditionalForm]],ExpressionUUID->
  "2201721a-3812-4517-8ebf-0906eeb001d4"],
 " converges in distribution to a standard normal. (In statistics the theorem \
being used here is usually called Slutsky\[CloseCurlyQuote]s theorem.) \n\nSo \
we have the following variation on the central limit theorem :\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "e779c5a4-fde8-48c5-80bb-5afef5fa708d"],
 " be an iid sequence such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "[", 
    RowBox[{
     RowBox[{"|", "X"}], ",", " ", 
     RowBox[{"n", 
      SuperscriptBox["|", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "c196700e-0db8-460f-891b-835da37db8fe"],
 "]<\[Infinity].\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"E", "[", 
     SubscriptBox["X", "n"], "]"}]}], TraditionalForm]],ExpressionUUID->
  "eabdbc14-eb33-4347-92f4-b2e792fb5970"],
 " and\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "baaed896-83df-468f-8ca6-b6d0b5aeea98"],
 " be the variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "d91c8d31-1276-4a29-a3b2-2ad1ca8ef043"],
 " ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      SubsuperscriptBox["X", "n", "2"], "]"}], "-", 
     SuperscriptBox[
      RowBox[{"E", "[", 
       SubscriptBox["X", "n"], "]"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"417d5bb3-58fe-4730-a272-15b2e44293ab"],
 "\nthen"
}], "Text",
 CellChangeTimes->{{3.814294311386829*^9, 3.814294587210465*^9}, {
   3.814375044534499*^9, 3.814375049414637*^9}, 
   3.814438949462434*^9},ExpressionUUID->"296fadf0-b401-4901-8ed9-\
1ed730da5b2f"],

Cell[BoxData[
 StyleBox[
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Mu]", "n"], "-", "\[Mu]"}], ")"}], 
    SqrtBox["n"]}], 
   SubscriptBox["s", "n"]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],
  Background->None]], "DisplayFormula",
 CellChangeTimes->{{3.814294608606845*^9, 
  3.814294637496891*^9}},ExpressionUUID->"9663c372-0868-4197-af29-\
6cd50537a3ae"],

Cell["\<\
converges in distribution to a standard normal random variable.
This means that\
\>", "Text",
 CellChangeTimes->{3.8142946514993896`*^9, 3.814379685071828*^9, 
  3.81456021337293*^9},ExpressionUUID->"6c87b10f-92a1-4e24-b12a-7471b48c7906"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"a", "\[LessEqual]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Mu]", "n"], "-", "\[Mu]"}], ")"}], 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]], "\[LessEqual]", "b"}], ")"}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "/", "2"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8142946770287027`*^9, 
  3.814294701178591*^9}},ExpressionUUID->"0d5e6b36-2105-40d4-96f8-\
bb9178e1a484"],

Cell[TextData[{
 "\nThe central limit theorem can be used to construct confidence intervals \
for our estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "7b9b1e48-48f3-4f99-a7d2-13edec692e01"],
 " for \[Mu].\n\nWe want to construct an interval of the form [",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "d6ffa67c-f7fc-4bd9-8bdd-a3817d391972"],
 "-\[Epsilon], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "4d195160-768c-4479-8db2-7800518b481c"],
 "+\[Epsilon]] such that \nthe probability \[Mu] in this interval is (1-\
\[Alpha]) where the ",
 StyleBox["confidence level",
  FontVariations->{"Underline"->True}],
 " (1-\[Alpha]) is some number close to 1, ie. 95%.\n\nSo let Z be a random \
variable with the standard normal distribution. \nThen note that \[Mu] \
belongs to [",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "e76ca4f2-e61c-4b70-9bfd-816e4806ace4"],
 "-\[Epsilon],",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "4ab72ab1-cca6-468c-b0c6-bc4557d8f5fe"],
 "+\[Epsilon]] if and only if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "a13658ec-dcac-4dc9-a99b-e8d273b5f9cd"],
 " belongs to [",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],ExpressionUUID->
  "24e08277-e413-487a-bc25-a11f05cf1e04"],
 "-\[Epsilon],",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],ExpressionUUID->
  "15dd115f-7274-46f0-82ca-2b24d16ff555"],
 "+\[Epsilon]].\n\nThe central limit theoreom says that"
}], "Text",
 CellChangeTimes->{{3.8142949118885593`*^9, 3.81429505293683*^9}, {
  3.814295137829112*^9, 3.814295263810131*^9}, {3.8143787531007833`*^9, 
  3.8143787947025223`*^9}},ExpressionUUID->"d2a099f7-0e64-460c-be56-\
87b468010510"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Mu]", "-", "\[Epsilon]"}], "\[LessEqual]", 
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "\[LessEqual]", 
      RowBox[{"\[Mu]", "+", "\[Epsilon]"}]}], ")"}]}], "=", 
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Epsilon]"}], "\[LessEqual]", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], "\[LessEqual]", 
      "\[Epsilon]"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Epsilon]", 
          SqrtBox["n"]}], 
         SubscriptBox["s", "n"]]}], "\[LessEqual]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]], "\[LessEqual]", 
       FractionBox[
        RowBox[{"\[Epsilon]", 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]]}], ")"}]}], "\[TildeTilde]", 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Epsilon]", 
          SqrtBox["n"]}], 
         SubscriptBox["s", "n"]]}], "\[LessEqual]", "Z", "\[LessEqual]", 
       FractionBox[
        RowBox[{"\[Epsilon]", 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]]}], ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.81429527476614*^9, 
  3.814295500012644*^9}},ExpressionUUID->"9233a9eb-6d55-474a-b8e1-\
4a3adcba05a1"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],ExpressionUUID->
  "26cffbc2-bdf4-4b1d-8982-0f0f8037c6f8"],
 " be the number such that",
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["z", "c"]}], "\[LessEqual]", "Z", "\[LessEqual]", 
      SubscriptBox["z", "c"]}], ")"}], "=", 
    RowBox[{"1", "-", "\[Alpha]"}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "75d82590-489f-496f-b370-7677b65ba60e"],
 ".\nThen we have",
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[Epsilon]", 
    SqrtBox["n"]}], 
   SubscriptBox["s", "n"]]], "DisplayFormula",
  CellChangeTimes->{{3.81429527476614*^9, 3.814295500012644*^9}},
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "c77c2452-331d-4328-b2d7-2ee8e7a14584"],
 StyleBox["= ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "761c99a1-473b-410c-b558-2980f6ccde8a"],
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 "ie.",
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["s", "n"]}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "fcde5ef8-c3bc-4fdc-a640-23c3586c7f95"],
 StyleBox["/",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   SqrtBox["n"], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "72aaee5b-52d1-4776-9f77-5ad2c44a9e40"],
 StyleBox[".",
  FontColor->RGBColor[1, 0.5, 0]],
 " \nThus our confidence interval for \[Mu] is "
}], "Text",
 CellChangeTimes->{{3.814295515662434*^9, 3.814295629951889*^9}, 
   3.814378836868976*^9},ExpressionUUID->"ac0640b4-292e-4891-87cf-\
482acd7f01be"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], "\[PlusMinus]", 
   FractionBox[
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["S", "n"]}], 
    SqrtBox["n"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814295785605616*^9, 
  3.8142958182312202`*^9}},ExpressionUUID->"bce3ea56-7054-43e9-80e9-\
398942fd1807"],

Cell[TextData[{
 "(btw, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", "c"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ad3ae69c-134e-4646-9e3e-1b04fcf1a7ce"],
 " stays for Z critical value).\n\nCommon choices for (1\[Minus]\[Alpha]) are \
95% and 99%, for which ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],ExpressionUUID->
  "4abe32fe-0bf9-4594-b424-eb10d516f32f"],
 " \[TildeTilde] 1.96 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],ExpressionUUID->
  "6ab4a7c2-4f43-4bd1-8943-0f697db48943"],
 " \[TildeTilde] 2.58, respectively.\n",
 StyleBox["(The central limit theorem is only a limit statement about what \
happens as the sample size n goes to infinity. \nHow fast the distribution in \
question converges to a normal distribution depends on the distribution of \
the original random variable X).\n\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "It\[CloseCurlyQuote]s easy to see that if we are looking for an error \
around 1std, being the estimated distribution a standard normal distribution \
(see part1 for  the 68-95-99.7 rule) we\[CloseCurlyQuote]ll fall into just \
68% of the distribution or in other words that we have around 68% probability \
to be there within 1std error.\n\nOn the other side as seen above, if we \
really want a strict confidence interval, ie. we wanna be almost (ie. 99.7%) \
sure that our estimate is almost the true expectation than we\
\[CloseCurlyQuote]ll have to take a fairly big potential error, ie. around \
3std. \n",
 StyleBox["\n\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "Eventually keep in mind that from a practical point of view, what is \
important is not how many samples are needed to achieve a given level of \
accuracy, but rather how much CPU time is need to achieve that accuracy. \
Suppose we have two Monte Carlo methods that compute the same thing. They \
have variances ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "1", "2"], TraditionalForm]],ExpressionUUID->
  "c711c42a-4843-4b00-b4a7-2db168fa7d46"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "2", "2"], TraditionalForm]],ExpressionUUID->
  "2e6c7160-10af-40e2-9c48-c086f129d5a9"],
 ". Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "1"], TraditionalForm]],ExpressionUUID->
  "8b511346-26e8-4c94-bf76-2d47f31556f3"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "2"], TraditionalForm]],ExpressionUUID->
  "3f5463e9-9069-4119-81c7-6c7b45d4bba0"],
 " be the CPU time needed by the methods to produce a single sample. With a \
fixed amount \[CapitalTau] of CPU time we can produce ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Subscript", "[", 
     RowBox[{"N", ",", " ", "i"}], "]"}], "=", 
    RowBox[{"\[CapitalTau]", "/", 
     SubscriptBox["\[Tau]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "560858fc-a72a-48ed-b9c1-1ed2f7fafeba"],
 " samples for the two methods. So the errors of our two methods will be "
}], "Text",
 CellChangeTimes->{{3.814295894993285*^9, 3.814295974268793*^9}, {
   3.8142960993493977`*^9, 3.8142962812846403`*^9}, 3.814378857835559*^9, {
   3.814378896201128*^9, 3.814378984197459*^9}, {3.814379037476872*^9, 
   3.814379079732317*^9}, {3.814379110893222*^9, 3.8143791432751913`*^9}, {
   3.814379192889244*^9, 3.8143793372913027`*^9}, {3.81437943971358*^9, 
   3.814379460701118*^9}, {3.814442804416852*^9, 3.8144428127400217`*^9}, {
   3.81489968516818*^9, 
   3.814899718628223*^9}},ExpressionUUID->"a902fd77-1ebe-4d09-972a-\
e94441174014"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   FractionBox[
    SubscriptBox["\[Sigma]", "i"], 
    SqrtBox[
     SubscriptBox["N", "i"]]], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Sigma]", "i"], 
     SqrtBox[
      SubscriptBox["\[Tau]", "i"]]}], 
    SqrtBox["\[CapitalTau]"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814296293642046*^9, 
  3.814296348401909*^9}},ExpressionUUID->"ee377539-9dfa-42f1-9a2f-\
38674b206798"],

Cell[TextData[{
 "Thus the method with the smaller ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "i", "2"], 
    SubscriptBox["\[Tau]", "i"]}], TraditionalForm]],ExpressionUUID->
  "0f342cf4-4ef7-498a-b661-06fa294ecb00"],
 " is the better method.\n\nOn a final note, take care that when "
}], "Text",
 CellChangeTimes->{{3.8142963736499567`*^9, 3.814296411626045*^9}, {
  3.814448024666093*^9, 3.814448028782283*^9}, {3.814448089782214*^9, 
  3.8144480974541893`*^9}},ExpressionUUID->"4faf4b7d-925f-4c03-ab31-\
10f7f41d2789"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    SubscriptBox["F", "n"]}], "\[Rule]", 
   RowBox[{"\[ScriptCapitalN]", 
    RowBox[{"(", 
     RowBox[{"0", ",", "1"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8144480369494753`*^9, 3.814448077179801*^9}, 
   3.81444971252675*^9, {3.814449756403846*^9, 
   3.814449760699976*^9}},ExpressionUUID->"eb361531-92f6-4da2-ba0b-\
ac817a734696"],

Cell[TextData[{
 "we\[CloseCurlyQuote]re saying that the limiting distribution for a large \
set of sample means is the Standard Normal Distribution.\nIn other words, a \
sample mean can have any arbitrary distribution.. when we go for repeated \
simulation that arbitrary distribution tends to a standard normal \
distribution, because of that is called ",
 StyleBox["limiting distribution or also asymptotic distribution",
  FontVariations->{"Underline"->True}],
 "."
}], "Text",
 CellChangeTimes->{{3.8144481123918333`*^9, 3.814448228922763*^9}, {
  3.814448295406789*^9, 3.814448316062212*^9}, {3.814448440083192*^9, 
  3.814448482136587*^9}},ExpressionUUID->"a4eca03e-639b-40b2-af49-\
9eb2574ddbfb"],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
==========\n",
  FontColor->GrayLevel[0.5]],
 "Another way to put it is that, we know from part1 (Central Limit Theorem) \
that to \[OpenCurlyQuote]standardize\[CloseCurlyQuote] a normal distribution \
we have "
}], "Text",
 CellChangeTimes->{{3.8148978182943277`*^9, 3.8148978922264023`*^9}, {
  3.814898952001803*^9, 3.814898974680448*^9}, {3.814899259103882*^9, 
  3.814899260656405*^9}},ExpressionUUID->"11250c61-ae3d-45fa-aeac-\
55a54d8927ea"],

Cell[BoxData[
 StyleBox[
  RowBox[{"z", "=", 
   FractionBox[
    RowBox[{
     OverscriptBox["X", "-"], "-", "\[Mu]"}], 
    RowBox[{"\[Sigma]", 
     SqrtBox["n"]}]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814897918890214*^9, 
  3.814897948592167*^9}},ExpressionUUID->"7669e511-389f-4233-bf9d-\
4a6c6965f3ef"],

Cell["\<\
Then for example, because the area under the standard normal curve between \
and 1.96 is 0.95, we can write\
\>", "Text",
 CellChangeTimes->{{3.814897991451672*^9, 3.8148980273395987`*^9}, {
  3.8148983288378143`*^9, 
  3.8148983348708267`*^9}},ExpressionUUID->"0e9940c5-3dd1-4b5f-a024-\
94d595959309"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.96"}], "<", 
      FractionBox[
       RowBox[{
        OverscriptBox["X", "-"], "-", "\[Mu]"}], 
       RowBox[{"\[Sigma]", 
        SqrtBox["n"]}]], "<", "1.96"}], ")"}]}], "=", "0.95"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814898034203171*^9, 3.814898082327845*^9}, {
  3.814898472370656*^9, 
  3.814898516015819*^9}},ExpressionUUID->"0291c194-270e-48b9-97ba-\
df6577a7d845"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s now manipulate the inequalities inside the \
parentheses so that they appear in the (confidence) interval form.\nBasically \
we\[CloseCurlyQuote]re rewriting the eq in terms of \[Mu].\nMultiply both \
sides by \[Sigma]/",
 Cell[BoxData[
  FormBox[
   SqrtBox["n"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8eb08014-3b54-4601-94f6-7567f4a0cb64"]
}], "Text",
 CellChangeTimes->{{3.8148983688990173`*^9, 3.814898445605954*^9}, {
  3.814901941355269*^9, 
  3.814901976883053*^9}},ExpressionUUID->"7140e757-79c4-429f-8775-\
1a35eae8ed54"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.96"}], 
    FractionBox["\[Sigma]", 
     SqrtBox["n"]]}], "<", 
   RowBox[{
    OverscriptBox["X", "-"], "-", "\[Mu]"}], "<", 
   RowBox[{"1.96", 
    FractionBox["\[Sigma]", 
     SqrtBox["n"]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814898474489519*^9},ExpressionUUID->"035c96f5-dae9-40db-b770-\
96c0b923c80b"],

Cell[TextData[{
 "Subtract ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5f73519c-6b8f-48d2-be74-fc11a1b3f181"],
 " from each term"
}], "Text",
 CellChangeTimes->{{3.814898531723178*^9, 
  3.814898546999139*^9}},ExpressionUUID->"17774b23-1b55-4fb3-a978-\
6492a56b7f04"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     OverscriptBox["X", "-"]}], "-", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}], "<", 
   RowBox[{"-", "\[Mu]"}], "<", 
   RowBox[{
    RowBox[{"-", 
     OverscriptBox["X", "-"]}], "+", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8148985574222927`*^9, 
  3.814898607571466*^9}},ExpressionUUID->"549521e0-0f5e-487d-b1e5-\
0b58098ebfa3"],

Cell["\<\
Eventually multiply through by -1 to make \[Mu] without the minus in front \
(that will reverse the direction of each inequality)\
\>", "Text",
 CellChangeTimes->{{3.814898636773651*^9, 
  3.814898703668558*^9}},ExpressionUUID->"79d3c8ed-82e7-4c0a-94a3-\
5a80cd88b32f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    OverscriptBox["X", "-"], "+", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}], ">", "\[Mu]", ">", 
   RowBox[{
    OverscriptBox["X", "-"], "-", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8148987157543173`*^9, 
  3.814898766534049*^9}},ExpressionUUID->"c3f131bb-c7d3-4da5-8514-\
fe296c44ff65"],

Cell["that is ", "Text",
 CellChangeTimes->{{3.814898892644289*^9, 
  3.814898893455303*^9}},ExpressionUUID->"ed778a08-b566-4da9-9081-\
57cae6a750ed"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    OverscriptBox["X", "-"], "-", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}], "<", "\[Mu]", "<", 
   RowBox[{
    OverscriptBox["X", "-"], "+", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814898898834496*^9, 
  3.8148989088451357`*^9}},ExpressionUUID->"8634f84c-b6cc-44c5-8899-\
6597c0745792"],

Cell["with the interval", "Text",
 CellChangeTimes->{{3.814899047602798*^9, 
  3.814899050302301*^9}},ExpressionUUID->"8aa73ae2-dcb9-4a93-80e5-\
5a2c9ee94436"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     RowBox[{"1.96", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}], ",", 
    RowBox[{
     OverscriptBox["X", "-"], "+", 
     RowBox[{"1.96", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}]}], "}"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814899063644882*^9, 
  3.81489907361375*^9}},ExpressionUUID->"63212abb-eaae-4625-8bd0-\
d8337cb62e75"],

Cell["\<\
This can be paraphrased as \[OpenCurlyDoubleQuote]there\[CloseCurlyQuote]s a \
probability of .95 that the random interval includes or covers the true value \
of \[Mu]\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.814899241125915*^9, 
  3.814899242992133*^9}},ExpressionUUID->"e10049bb-98a7-47f0-9cee-\
0b7b7649063d"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
EREREREREREREREREREREREREREREREREREREREREdF77/8BZ+oxpg==
     "], {{0, 111}, {
     452, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{452, 111},
   PlotRange->{{0, 452}, {0, 111}}]], "Input",ExpressionUUID->
  "805135da-a381-4312-a3d3-227c19ed13fe"]
}], "Text",
 CellChangeTimes->{{3.814899095663229*^9, 3.81489916703157*^9}, {
  3.8148992203327513`*^9, 
  3.814899236357778*^9}},ExpressionUUID->"a3f9f5aa-4a53-4dae-8a07-\
806407be3c80"],

Cell["\<\
However take care that the confidence level is not so much a statement about \
any particular interval. Instead it pertains to what would happen if a very \
large number of intervals were to be constructed using the same CI formula... \
aka it applies to a long sequence of replications of an experiment rather \
than just a single replication. \
\>", "Text",
 CellChangeTimes->{{3.814899538238697*^9, 3.814899611858202*^9}, {
  3.8148997954798727`*^9, 
  3.814899795929977*^9}},ExpressionUUID->"e39a9cbc-2e69-4712-adc3-\
521c22f55c6e"],

Cell[TextData[{
 StyleBox["\nExample (Confidence Intervals)\n\n",
  FontVariations->{"Underline"->True}],
 "You want to rent an unfurnished one-bedroom apartment in Durham, NC next \
year. \nThe mean monthly rent for a random sample of 60 apartments advertised \
on Craig\[CloseCurlyQuote]s List is $1000.\nAssume a population standard \
deviation of $200. Construct a 95% confidence interval."
}], "Text",
 CellChangeTimes->{{3.814445233338334*^9, 3.8144452377910423`*^9}, {
   3.814445340638192*^9, 3.814445382489195*^9}, {3.814706989606207*^9, 
   3.814706996355283*^9}, 
   3.814788934195853*^9},ExpressionUUID->"d86cd1d7-2475-45de-b0b9-\
0bc9851029d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "\[Sigma]", ",", "n", ",", "\[Alpha]", ",", "Z"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"95", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Abs", "[", 
     RowBox[{"InverseCDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Confidence Interval->\>\"", ",", 
    RowBox[{"x", "-", 
     RowBox[{"Z", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}], ",", " ", 
    RowBox[{"x", "+", 
     RowBox[{"Z", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}]}], "}"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.814445494247807*^9, 3.814445571445672*^9}, {
  3.814446979405529*^9, 3.8144471572454233`*^9}, {3.814447191405355*^9, 
  3.814447221350397*^9}, {3.814455320482925*^9, 
  3.8144553335963163`*^9}},ExpressionUUID->"f0e7df27-a963-431f-bb7a-\
ecd4457cda5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Confidence Interval->\"\>", ",", "949.3939475247336`", ",", 
   "1050.6060524752663`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814447125580186*^9, 3.814447221927051*^9}, {
   3.814455329246766*^9, 3.814455335048254*^9}, 3.814626553883545*^9, 
   3.814713450607028*^9, 3.814729439371808*^9, 3.814729835972221*^9, 
   3.814784172017272*^9, 3.81478525977884*^9, 3.81478686799932*^9, 
   3.814787175476338*^9, 3.814787243296886*^9, 3.8147905643149767`*^9, 
   3.8147991453027277`*^9, 3.81479923352499*^9, 3.814803511494011*^9, 
   3.814808751044232*^9, 3.8148160219830093`*^9, 3.814817037104136*^9, 
   3.8148172006298857`*^9, 3.814817935795857*^9, 3.814818377211893*^9, 
   3.814819918494832*^9, 3.814962874618265*^9, 3.814964269282496*^9, 
   3.814965660150331*^9, 3.814968796551126*^9, 3.81498231513489*^9, 
   3.814982431357367*^9},ExpressionUUID->"73973ca2-1a80-4209-9f96-\
da09a95a7535"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
==========\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["Now, let\[CloseCurlyQuote]s recap what we saw till here we some \
examples",
  FontVariations->{"Underline"->True}],
 ".\n\n\nLet\[CloseCurlyQuote]s say we have this function to integrate over \
(0,\[Pi])"
}], "Text",
 CellChangeTimes->{{3.814617472321447*^9, 3.814617510677874*^9}, {
   3.814620739477894*^9, 3.814620755769981*^9}, {3.814620805922974*^9, 
   3.8146208135951843`*^9}, 
   3.8146999682989817`*^9},ExpressionUUID->"1a485541-cb74-4765-ac56-\
570c61fde0ac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "f", ",", "x", ",", "a", ",", "b", ",", " ", "w", ",", " ", "n", ",", " ", 
    "tValue", ",", " ", "eValue"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    FractionBox["2", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["25", "2"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}]]}]}], 
     RowBox[{"10", " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "\[Pi]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"b", "-", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tValue", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<True value\>\"", ",", "tValue"}], "}"}]}], "Input",
 CellChangeTimes->{{3.8146176093648653`*^9, 3.814617704650298*^9}, {
   3.8146202377304497`*^9, 3.814620238178534*^9}, 3.814620571163855*^9, {
   3.8146206759396133`*^9, 3.8146207217971697`*^9}, {3.8146208270270853`*^9, 
   3.814620845319744*^9}, {3.814621552205241*^9, 3.814621595448997*^9}, {
   3.8146220050610657`*^9, 3.814622019439126*^9}, {3.814622192375125*^9, 
   3.8146221941959*^9}, {3.8149706355728617`*^9, 
   3.814970637349678*^9}},ExpressionUUID->"e70eb4f1-9b08-41c9-82de-\
a95e522fe42b"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJw1mWk8lP0Xxu2NpJAsKUUppFLJrmseyZanhaKyVEoLskWIkkgqSYqk7Hui
7FvWIuvcaiZEi2UMMrayK/3v58X/1by4P3N+9zm/63zPdT63jK2zqR0XBwdH
IScHx3+/3JVLaX27Xff83bYia8dJBh7+tMqLDH8Fmd4n5933M6BVa7xU93IV
hJu/pYUsZcDl6oHTeS716Ojoy5VKp+NSsV0o14ZWLJRsXcyQp4MxaMSfZsuA
35fBkKqbH3F3+zRH4fEOyA9+e+jT9gGuW+ojqlK+QMByucytVR8wf8Yh+6tT
Nz7EGPaX2bbCttz8UNi5Xnh6TWwRfE3gzASjqiqYCZVv8abXhmgIUS5yTg1i
4c9CYZZ7Og1cVUVqgVcHsdfnSXnqRxqEFffTvkf9wI5cB6/HIGAYp5s0Hs5G
6pPBiPJAAuJjzfp+RaOY/LPnwh9VAtHvSzm5L45D61UB56HfLdBe+8/f9Wcn
oFnEvKgw24Qt3ULMa+4/4WCt++C1eAOy0kUuFLj9QqZM+n0VhTr4frOmbwma
RLB9zcZNCm/hqq2+P/bxFDL+FuzZ/aoK83F6tsNh03j7FUtoleVodYk+5Zk4
A+9BDutrTaXQMJBd/Jowi6DKkLRzRcVo2KeRTn0+h3AZD7ceySKk5DzV6M2c
x1877amE5AKs2qBkb5OxgNOuUT7+7vn4yEm5KfnmN5h3i79PG+ehgHI5tbXh
D7wnlwv9i1worRKyt61dBO/Y3ajPFjkYC50W3dX2F7lfLTSdnF5jw+3b253t
OahbqTISYgav0Huiq1N3gIMqmmYjKUXPgmE/fa7AiZMaKjFYInziJbzc7C6I
jXBSN+m/DDIRzsSBwmfGYle4qArOEeILbzMw+tvel3uai8pj8j36TXw6Etr9
850uc1PlriRn3HychvkLOqe8F7ipZZHeRV4BqVj756Gl61Ueqq6Me9KOxylg
GdxrpPDwUv1KquRD45PxdlMzpO/xUi3WyQRzVSXBnpLKI8PPR9VmTWZnzCei
KH6jztuHfNS4A8+ZI8qJoGlp15oKL6GyDOSaDfwSMGv/zOxU6BJqZ667v2tn
POoPxR0VFKNQ03+WXjHdEQ9bDe20tMcU6p+zh7yXqMdhh1bG/gUZfqqjXNvm
st8xMHWU7IwKj8PTmDRxnGDgO6ds0YBFMeR1vu69ocxAW1xzwbzrOxgnReUk
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
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1Xe8jgUYBuBjZs/srYyQlb33bDlmtkMyz7HJ3rKzo4RsLdEeikJRibQn
RaFJtJDr+fmjP67ffT/P+53v+847zimRlJKYnDohISEVz6f6P6vK52QrHuMX
cw35IFv0L7lZn8wwfRXvkcecQmu9N3N4jXR2vaiiV6YSFbmVCpSnHLdQljKU
plR8DjdRkhIUpxhFKUJhCtGKXszmVdL6vJ4U1FvSk1m8Qhr7HhTQW9CDmbxM
avvu5NdTWMm73GiXTHO9OzN4Kc6dXTfy6cms4DC57YbSTO/GdF5MuH6yu5JX
HcpyDpHLbghN9a5M4wX+4x77PPEd4n1pEjumxvXiKl28JpccwjLeIafdYBrH
cabEdeUKne1zysEs5W1y2A2ikb6Oj+Icm8fSWT8R10ifEddef5bLdDLnkD9T
XV/MZv2LuHb6pHhf/XRcd/0Bluh15QoO6tnlQBrqzeU6zupV5QIe1RvIhziu
b5GFGUMn8644d6zlW/MOWZbp8fnmp2VtlrHbvFn+KzvK7PG7yJZs4CfzE7Ia
i9hkbiTX8Hnci3JifF/9VNzH+px4PvQDZNMH0EBfy4dxj5pH01GfGN+Xf+hg
l00OYDH7yWp3H/XjOBN4hr9pb59VbuSzeCbME+L1+vdU0GfH99bfIoven3r6
Garo83lEry9XcUwvKEfRPj5LNonX8I15uyzDNMabn5K1WMpO8yb5l0yUWeRu
2YL1nDM/Lm9jYfw9Me+M68xqPjVvlcXjveO7mpvF9eY7vbycFT+r15HLeVPP
LO+lrv4jlfV5PKwfpYA+kkT9a0rrU7k/7gX+pJ05s9zAJxSL4/G++gL2kcnc
jzr6Gj4gv3kE7fRxcT64xN12mWQ/5rOXjHZ9496L44zlSS5yl31GWSs6Y+K+
4w/udCyDvIH01Iwdo+N8coE7vCadrBGdUXHfc57bHUsr+zKPN8hgl0T1OM7I
uLb8Tlv7NDKJubwen23XJ54DfTVHyGceTlt9BNv4jTZ28b9kPR9T1Dwufl4/
STl9Zjz7+p74nfTecV/oP1BJnxvPt15PruR9Pa8cRhu9cVxfvorPlaWYEt8n
zqmsyRK2xvMhf5Wt5TVmNcOx
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
        LineBox[CompressedData["
1:eJwl1WWYVlUYBdAZOgTprqG7u6TLBsVGQMUmLBRFVEARRMEAVERFRBpBsBUL
u7u7E7tj7ccfa/Y+77nf3G9uQNHEKaMnFxYUFGz3IznSj+/kTfIWuVj2YCPT
rGfJZqzhHetr5UBG6VNlDZ7Vl8i+LNMvlh34TO/CeL0U9+vzmKO35kN9Amfq
DXhVv4FijLLeJddwCnsyzawmz+lX0zWfty7NjpyXiRTP8Wbfy7Wcyl50y755
GR7Q53MUJbJv9oNcx2nsTXdKptv7Ua7ndPahB6UoTZnMHPOT3MAZ7EtPyqbb
+1luZDr70SvnNi/Lg/oCjqZc9s1+kZtybdg/18CsFs/r19A7x1uX4yH9Eo7h
LOuGvKbfSPl83vpXuTn7nGfdnHf10bk+em1eyP3NddE78rneJ79XL8/D+pWy
Nwv1ubINH+kr5BAm6TNkozxPvJ57JffgVlZaL5RdWM9XuedyGLexW76T/E2u
ymfk5bInm5hhfb5swVres14uB7GFMbl/sg4v6ktlP5bnGstOfKH3ZVLOxyP6
pVyot+Vj/VjO1ot4I+8HFRhj/bvckn0OoF+ON6/ATv0yjqNi9s3+kFs5hwPz
DJnV5SX9OvrneOuKPKov4iK9HZ/ox+ezemPezP2XA1iV7y27soGvc8/lcLax
e84n/5Q35/rKK2QvNjPT+gLZknW8n+8jB7OVsXmWZT1W87L1MtmfFXnmZGe+
1K+XQ3Of831zbh7Tr5J9WKzPk+35VD+BmXoT3sr3y3XTu/GNXomx+l9yG+cy
27oVH+gH5V3S6/NKzs+A/F7rSjye54YTqZzjzf6W25nFwQzMvnllnsi14SSq
ZN/sH3l73hcOYRBVqUb1zBzzr7wjzySHMji/w7wKT+Z94WRqZN8s/+jemevO
YQzJvllVnsr1YjI1s29WyF352zmcodk3q8bT+hKmUCv7ZsW4W5/DEQyjdrp5
ce7Je8s4hlMn3bwE9+Yd4EhGUJd61KcBDWlEEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pFPO4XwluS/POuMZmb/FrDrP6EuZmntv3ZS39dUs0rvzrb5Sjij8//+z
ztb/Adl2wvc=
         "]]},
       Annotation[#, "Charting`Private`Tag$2666#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.02928440504687073},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, Pi}, {0.02928440504687073, 0.3183101835281689}}, {{
     0, 3.141592653589793}, {0.02928440504687073, 0.3183101835281689}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81461760493645*^9, 3.814617705338539*^9}, 
   3.8146202392192383`*^9, 3.81462057344372*^9, {3.8146207125643787`*^9, 
   3.81462072642524*^9}, 3.8146207945744867`*^9, 3.8146208486599894`*^9, 
   3.814621155359634*^9, 3.814621535800291*^9, 3.814621595849925*^9, 
   3.814622020938939*^9, 3.8146221960486383`*^9, 3.8146222501242933`*^9, 
   3.814622788564518*^9, 3.814623074879572*^9, 3.814624742553776*^9, 
   3.8146250702568407`*^9, 3.814626555409684*^9, 3.814627408003875*^9, 
   3.814699976471468*^9, 3.814703036234146*^9, 3.814704880475318*^9, 
   3.8147104015014067`*^9, 3.814711327057371*^9, 3.8147119372911386`*^9, 
   3.8147129054830236`*^9, 3.814713450660413*^9, 3.814714569446877*^9, 
   3.814723268019034*^9, 3.814729439425068*^9, 3.8147298360422697`*^9, 
   3.814784172048359*^9, 3.8147852598165073`*^9, 3.814786868036097*^9, 
   3.814787175579668*^9, {3.814787243328412*^9, 3.8147872559736433`*^9}, 
   3.814790564353423*^9, 3.814799145354062*^9, 3.814799233560721*^9, 
   3.8148035115493526`*^9, 3.81480875109076*^9, 3.814816022029256*^9, 
   3.8148170371473627`*^9, 3.814817200675284*^9, 3.8148179358350887`*^9, 
   3.814818377251831*^9, 3.814819918531666*^9, 3.81487857464291*^9, 
   3.81496287466322*^9, 3.814964269313348*^9, 3.8149656601825523`*^9, 
   3.814968796586129*^9, 3.814970639330996*^9, 3.814982315172687*^9, 
   3.814982431397962*^9},ExpressionUUID->"f973c052-1913-426a-9270-\
1ad476d1d229"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True value\"\>", ",", "0.44190672658164354`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.81461760493645*^9, 3.814617705338539*^9}, 
   3.8146202392192383`*^9, 3.81462057344372*^9, {3.8146207125643787`*^9, 
   3.81462072642524*^9}, 3.8146207945744867`*^9, 3.8146208486599894`*^9, 
   3.814621155359634*^9, 3.814621535800291*^9, 3.814621595849925*^9, 
   3.814622020938939*^9, 3.8146221960486383`*^9, 3.8146222501242933`*^9, 
   3.814622788564518*^9, 3.814623074879572*^9, 3.814624742553776*^9, 
   3.8146250702568407`*^9, 3.814626555409684*^9, 3.814627408003875*^9, 
   3.814699976471468*^9, 3.814703036234146*^9, 3.814704880475318*^9, 
   3.8147104015014067`*^9, 3.814711327057371*^9, 3.8147119372911386`*^9, 
   3.8147129054830236`*^9, 3.814713450660413*^9, 3.814714569446877*^9, 
   3.814723268019034*^9, 3.814729439425068*^9, 3.8147298360422697`*^9, 
   3.814784172048359*^9, 3.8147852598165073`*^9, 3.814786868036097*^9, 
   3.814787175579668*^9, {3.814787243328412*^9, 3.8147872559736433`*^9}, 
   3.814790564353423*^9, 3.814799145354062*^9, 3.814799233560721*^9, 
   3.8148035115493526`*^9, 3.81480875109076*^9, 3.814816022029256*^9, 
   3.8148170371473627`*^9, 3.814817200675284*^9, 3.8148179358350887`*^9, 
   3.814818377251831*^9, 3.814819918531666*^9, 3.81487857464291*^9, 
   3.81496287466322*^9, 3.814964269313348*^9, 3.8149656601825523`*^9, 
   3.814968796586129*^9, 3.814970639330996*^9, 3.814982315172687*^9, 
   3.814982431954564*^9},ExpressionUUID->"ffccc0cf-2fc0-4761-90ef-\
a2613a6ddbb4"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s calculate our estimated result with Monte \
Carlo.", "Text",
 CellChangeTimes->{{3.814622229068605*^9, 3.814622242230225*^9}, {
  3.814622287726307*^9, 3.814622298884644*^9}, {3.814622697946219*^9, 
  3.814622727534397*^9}, {3.814625051224574*^9, 
  3.814625059371086*^9}},ExpressionUUID->"61fa060a-8c8b-483d-8850-\
38e9a7275431"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"10", "^", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeedRandom", "[", "12345", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "3", " ", "equivalent", " ", "ways", " ", "with", " ", "Mathematica"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", 
    FractionBox["1", "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "0"}], "n"], 
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}]}]}], "//", 
   "N"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{"w", "/", "n"}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ests", "=", " ", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "with", " ", "this", " ", "one", " ", "we", " ", "keep", " ", "the", " ", 
    "estimates", " ", "so", " ", "we", " ", "can", " ", "deal", " ", "with", 
    " ", "error", " ", "analysis"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "ests", "]"}]}], "Input",
 CellChangeTimes->{{3.8146208772276583`*^9, 3.814620877606268*^9}, {
  3.814620909174388*^9, 3.81462092199821*^9}, {3.814621240944147*^9, 
  3.814621248114485*^9}, {3.814622033437962*^9, 3.8146220393514223`*^9}, {
  3.814622075399358*^9, 3.814622090426839*^9}, {3.814622147843095*^9, 
  3.814622170771695*^9}, {3.8146227966362867`*^9, 3.814622830043621*^9}, {
  3.81462289950104*^9, 3.814622900137499*^9}, {3.81462319333011*^9, 
  3.814623194434738*^9}, {3.8146232922211227`*^9, 3.814623295797285*^9}, {
  3.8146234270602083`*^9, 3.814623431355063*^9}, {3.8146250616872387`*^9, 
  3.814625065446598*^9}, {3.814698363572802*^9, 
  3.8146983939039507`*^9}},ExpressionUUID->"f9d1bfa4-dbad-4c7a-b449-\
a991f8b81373"],

Cell[BoxData["0.4373767994650234`"], "Output",
 CellChangeTimes->{{3.814620855246683*^9, 3.81462087830333*^9}, {
   3.814620910495644*^9, 3.814620927747315*^9}, 3.8146211577244987`*^9, 
   3.814621248853218*^9, 3.814621539437035*^9, {3.8146220456261463`*^9, 
   3.814622047440405*^9}, {3.814622093341626*^9, 3.814622096130163*^9}, {
   3.814622150156193*^9, 3.814622173662951*^9}, 3.814622252192512*^9, {
   3.814622802408032*^9, 3.814622834357402*^9}, 3.8146229013384533`*^9, 
   3.814623077107182*^9, 3.814623195866535*^9, 3.8146232969573298`*^9, 
   3.814623431911974*^9, 3.814624745830824*^9, 3.814625072958722*^9, {
   3.814626550148612*^9, 3.814626559622251*^9}, 3.814627409766753*^9, 
   3.8146999799911413`*^9, 3.814703040110873*^9, 3.814704883015842*^9, 
   3.814710403977249*^9, 3.814711329659831*^9, 3.814711939277869*^9, 
   3.814712907496003*^9, 3.814713451398286*^9, 3.814714571193036*^9, 
   3.814723270503851*^9, 3.814729440142033*^9, 3.814729836610189*^9, 
   3.8147841727040586`*^9, 3.814785260709174*^9, 3.8147868685613117`*^9, 
   3.8147871762548447`*^9, {3.814787243982984*^9, 3.8147872598202133`*^9}, 
   3.8147905649165154`*^9, 3.814799146107492*^9, 3.81479923412011*^9, 
   3.8148035121147203`*^9, 3.814808751808778*^9, 3.814816022566358*^9, 
   3.8148170376679173`*^9, 3.814817201244293*^9, 3.814817936393759*^9, 
   3.814818378064397*^9, 3.8148199190930023`*^9, 3.814878580556019*^9, 
   3.814962875423202*^9, 3.8149642699772377`*^9, 3.81496566086875*^9, 
   3.8149687972508698`*^9, 3.814982315697741*^9, 
   3.814982432078711*^9},ExpressionUUID->"e82d9fcc-d276-42a9-99f2-\
2a40ca94eb09"],

Cell[BoxData["0.4466791255949581`"], "Output",
 CellChangeTimes->{{3.814620855246683*^9, 3.81462087830333*^9}, {
   3.814620910495644*^9, 3.814620927747315*^9}, 3.8146211577244987`*^9, 
   3.814621248853218*^9, 3.814621539437035*^9, {3.8146220456261463`*^9, 
   3.814622047440405*^9}, {3.814622093341626*^9, 3.814622096130163*^9}, {
   3.814622150156193*^9, 3.814622173662951*^9}, 3.814622252192512*^9, {
   3.814622802408032*^9, 3.814622834357402*^9}, 3.8146229013384533`*^9, 
   3.814623077107182*^9, 3.814623195866535*^9, 3.8146232969573298`*^9, 
   3.814623431911974*^9, 3.814624745830824*^9, 3.814625072958722*^9, {
   3.814626550148612*^9, 3.814626559622251*^9}, 3.814627409766753*^9, 
   3.8146999799911413`*^9, 3.814703040110873*^9, 3.814704883015842*^9, 
   3.814710403977249*^9, 3.814711329659831*^9, 3.814711939277869*^9, 
   3.814712907496003*^9, 3.814713451398286*^9, 3.814714571193036*^9, 
   3.814723270503851*^9, 3.814729440142033*^9, 3.814729836610189*^9, 
   3.8147841727040586`*^9, 3.814785260709174*^9, 3.8147868685613117`*^9, 
   3.8147871762548447`*^9, {3.814787243982984*^9, 3.8147872598202133`*^9}, 
   3.8147905649165154`*^9, 3.814799146107492*^9, 3.81479923412011*^9, 
   3.8148035121147203`*^9, 3.814808751808778*^9, 3.814816022566358*^9, 
   3.8148170376679173`*^9, 3.814817201244293*^9, 3.814817936393759*^9, 
   3.814818378064397*^9, 3.8148199190930023`*^9, 3.814878580556019*^9, 
   3.814962875423202*^9, 3.8149642699772377`*^9, 3.81496566086875*^9, 
   3.8149687972508698`*^9, 3.814982315697741*^9, 
   3.814982432130246*^9},ExpressionUUID->"3230078b-fa88-49b1-b0e0-\
3ef32d2150da"],

Cell[BoxData["0.4405444897563033`"], "Output",
 CellChangeTimes->{{3.814620855246683*^9, 3.81462087830333*^9}, {
   3.814620910495644*^9, 3.814620927747315*^9}, 3.8146211577244987`*^9, 
   3.814621248853218*^9, 3.814621539437035*^9, {3.8146220456261463`*^9, 
   3.814622047440405*^9}, {3.814622093341626*^9, 3.814622096130163*^9}, {
   3.814622150156193*^9, 3.814622173662951*^9}, 3.814622252192512*^9, {
   3.814622802408032*^9, 3.814622834357402*^9}, 3.8146229013384533`*^9, 
   3.814623077107182*^9, 3.814623195866535*^9, 3.8146232969573298`*^9, 
   3.814623431911974*^9, 3.814624745830824*^9, 3.814625072958722*^9, {
   3.814626550148612*^9, 3.814626559622251*^9}, 3.814627409766753*^9, 
   3.8146999799911413`*^9, 3.814703040110873*^9, 3.814704883015842*^9, 
   3.814710403977249*^9, 3.814711329659831*^9, 3.814711939277869*^9, 
   3.814712907496003*^9, 3.814713451398286*^9, 3.814714571193036*^9, 
   3.814723270503851*^9, 3.814729440142033*^9, 3.814729836610189*^9, 
   3.8147841727040586`*^9, 3.814785260709174*^9, 3.8147868685613117`*^9, 
   3.8147871762548447`*^9, {3.814787243982984*^9, 3.8147872598202133`*^9}, 
   3.8147905649165154`*^9, 3.814799146107492*^9, 3.81479923412011*^9, 
   3.8148035121147203`*^9, 3.814808751808778*^9, 3.814816022566358*^9, 
   3.8148170376679173`*^9, 3.814817201244293*^9, 3.814817936393759*^9, 
   3.814818378064397*^9, 3.8148199190930023`*^9, 3.814878580556019*^9, 
   3.814962875423202*^9, 3.8149642699772377`*^9, 3.81496566086875*^9, 
   3.8149687972508698`*^9, 3.814982315697741*^9, 
   3.814982432186425*^9},ExpressionUUID->"5344207e-3cb8-4938-a232-\
20edb0523430"]
}, Open  ]],

Cell[TextData[{
 "\nNow, let\[CloseCurlyQuote]s deal with errors aka ",
 StyleBox["Monte Carlo Analysis",
  FontVariations->{"Underline"->True}],
 " that will return a serie of Monte Carlo statistics (MCS) of interest. \n\n\
Constructing MCSs is simply a matter of organizing a \
\[OpenCurlyDoubleQuote]generate\[Dash]analyze\[Dash]summarize\
\[CloseCurlyDoubleQuote] scheme so that particular datasets and analysis \
procedures can be emulated and studied over a wide number of random \
replications.\n\[LineSeparator]\nLet\[CloseCurlyQuote]s start by using \
Mathematica buildin StandardDeviation and Variance symbols for our list of \
estimates"
}], "Text",
 CellChangeTimes->{{3.814623328980545*^9, 3.814623389167898*^9}, {
  3.814623459165509*^9, 3.814623466252695*^9}, {3.814623713285989*^9, 
  3.814623719382345*^9}, {3.814706941300123*^9, 3.814706960332877*^9}, {
  3.8148115716696243`*^9, 
  3.814811680186942*^9}},ExpressionUUID->"b4837a16-7303-4ac3-9adf-\
c780100d085a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Variance", "[", "ests", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "ests", "]"}]}], "Input",
 CellChangeTimes->{{3.8146256058987637`*^9, 3.81462561136383*^9}, 
   3.814626084854681*^9, 3.814626292982193*^9, {3.814626347725687*^9, 
   3.8146263522078457`*^9}, 
   3.814714580466529*^9},ExpressionUUID->"047d3fb9-71d2-4f49-abe5-\
10290b84add2"],

Cell[BoxData["0.09879183546548587`"], "Output",
 CellChangeTimes->{
  3.814623450215363*^9, 3.8146247504570513`*^9, 3.814625079701577*^9, 
   3.814625611982642*^9, 3.814626097124463*^9, 3.8146262936452637`*^9, 
   3.814626353044992*^9, {3.814626548052969*^9, 3.8146265614638157`*^9}, 
   3.814699982173361*^9, 3.814703042895005*^9, 3.8147048853062897`*^9, 
   3.814710408702713*^9, 3.8147119451544437`*^9, 3.814712917360273*^9, 
   3.8147134515133657`*^9, 3.8147145813159*^9, 3.8147232724765377`*^9, 
   3.814729440257102*^9, 3.8147298367251062`*^9, 3.814784172828167*^9, 
   3.8147852608392963`*^9, 3.8147868687116528`*^9, 3.814787176409438*^9, {
   3.8147872441064053`*^9, 3.814787261760325*^9}, 3.8147905650347853`*^9, 
   3.814799146242045*^9, 3.814799234239106*^9, 3.8148035122368593`*^9, 
   3.814808751936944*^9, 3.814816022723669*^9, 3.814817037811748*^9, 
   3.814817201366544*^9, 3.814817936512788*^9, 3.81481837819201*^9, 
   3.814819919207613*^9, 3.8148785842877493`*^9, 3.814962875571209*^9, 
   3.8149642700987797`*^9, 3.814965660994843*^9, 3.8149687973764753`*^9, 
   3.814982315850359*^9, 
   3.81498243220616*^9},ExpressionUUID->"7aad2c96-9426-4804-aae0-\
7ffe51cadd71"],

Cell[BoxData["0.3143116852194424`"], "Output",
 CellChangeTimes->{
  3.814623450215363*^9, 3.8146247504570513`*^9, 3.814625079701577*^9, 
   3.814625611982642*^9, 3.814626097124463*^9, 3.8146262936452637`*^9, 
   3.814626353044992*^9, {3.814626548052969*^9, 3.8146265614638157`*^9}, 
   3.814699982173361*^9, 3.814703042895005*^9, 3.8147048853062897`*^9, 
   3.814710408702713*^9, 3.8147119451544437`*^9, 3.814712917360273*^9, 
   3.8147134515133657`*^9, 3.8147145813159*^9, 3.8147232724765377`*^9, 
   3.814729440257102*^9, 3.8147298367251062`*^9, 3.814784172828167*^9, 
   3.8147852608392963`*^9, 3.8147868687116528`*^9, 3.814787176409438*^9, {
   3.8147872441064053`*^9, 3.814787261760325*^9}, 3.8147905650347853`*^9, 
   3.814799146242045*^9, 3.814799234239106*^9, 3.8148035122368593`*^9, 
   3.814808751936944*^9, 3.814816022723669*^9, 3.814817037811748*^9, 
   3.814817201366544*^9, 3.814817936512788*^9, 3.81481837819201*^9, 
   3.814819919207613*^9, 3.8148785842877493`*^9, 3.814962875571209*^9, 
   3.8149642700987797`*^9, 3.814965660994843*^9, 3.8149687973764753`*^9, 
   3.814982315850359*^9, 
   3.8149824322201023`*^9},ExpressionUUID->"662b4cc0-5012-49b5-9ed1-\
a405436673c8"]
}, Open  ]],

Cell[TextData[{
 "We know that  an estimate of the variance from Monte Carlo samples is given \
by the average of each sample\[CloseCurlyQuote]s error squared:\n",
 StyleBox["(where ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "-"], "=", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{
      SubscriptBox["\[Mu]", "X"], "=", 
      RowBox[{"true", " ", "mean", " ", "result"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0efcd24c-14cf-4b97-90c2-add6331d9eeb"],
 StyleBox[" and ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["X", "^"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "87110190-5ddb-4b7a-a346-fa024285253e"],
 StyleBox["=estimated mean)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.8146234742857847`*^9, 3.8146234755916023`*^9}, {
  3.814623743794883*^9, 3.814623754479889*^9}, {3.814624412090173*^9, 
  3.814624414023505*^9}, {3.8146246153998613`*^9, 3.81462466838695*^9}, {
  3.8146247018891478`*^9, 3.814624723085058*^9}, {3.814626521335389*^9, 
  3.814626530828142*^9}},ExpressionUUID->"c18f279f-d9cb-4acf-938c-\
10e67650968b"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "N"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["x", "^"], "n"], "-", 
        OverscriptBox["x", "-"]}], ")"}], "2"]}], "N"]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814623771243723*^9, 3.814623798877067*^9}, {
   3.814624428291498*^9, 3.814624564843781*^9}, {3.814624603542341*^9, 
   3.814624610564024*^9}, {3.814700746463999*^9, 3.8147007472053843`*^9}, 
   3.814701019319252*^9},ExpressionUUID->"f0afe642-6fb0-4eb7-a94e-\
2be556ba4fe6"],

Cell["\<\
This is the Mean Squared Error (MSE) and the Monte Carlo Standard Error based \
on that is\
\>", "Text",
 CellChangeTimes->{{3.814700552554248*^9, 
  3.814700583493195*^9}},ExpressionUUID->"018318ee-3fb7-487d-8a12-\
31e36a0cb5d5"],

Cell[BoxData[
 StyleBox[
  RowBox[{"MCSE", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox[
             OverscriptBox["x", "^"], "n"], "-", 
            OverscriptBox["x", "-"]}], ")"}], "2"], "-", "MSE"}], ")"}], 
       "2"]}], 
     RowBox[{"N", 
      RowBox[{"(", 
       RowBox[{"N", "-", "1"}], ")"}]}]]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814700598231078*^9, 3.8147006533337507`*^9}, {
  3.814700767949988*^9, 
  3.814700803677479*^9}},ExpressionUUID->"c09ec73d-af82-4c76-922e-\
c298a767c94b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sqr", ",", "MSE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqr", "=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ests", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], "        ", 
  RowBox[{"(*", " ", 
   RowBox[{"numerator", " ", "above"}], " ", "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"MSE", "=", 
   SqrtBox[
    RowBox[{"sqr", "/", "n"}]]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MCSE", " ", "=", " ", 
  SqrtBox[
   FractionBox[
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ests", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
         "-", "MSE"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
    RowBox[{"n", "*", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}]]]}]}], "Input",
 CellChangeTimes->{{3.814622807253315*^9, 3.814622813213099*^9}, {
   3.814622917185997*^9, 3.814622963265872*^9}, {3.814622994834957*^9, 
   3.814623007614064*^9}, {3.81462304575316*^9, 3.814623047506102*^9}, {
   3.814623149140287*^9, 3.814623174879376*^9}, {3.81462330022685*^9, 
   3.814623307785654*^9}, {3.814623436690432*^9, 3.814623447223632*^9}, {
   3.814624532669403*^9, 3.81462453318395*^9}, {3.814626243842533*^9, 
   3.81462633869882*^9}, {3.814626395624103*^9, 3.814626451407258*^9}, {
   3.814700880740971*^9, 3.814700945697587*^9}, {3.8147009771082687`*^9, 
   3.8147009898001823`*^9}, {3.814701141450179*^9, 3.814701147952792*^9}, {
   3.814710389500284*^9, 3.814710391680114*^9}, {3.814711950507372*^9, 
   3.8147119507527933`*^9}, 3.8147119873375387`*^9, 
   3.814723258842804*^9},ExpressionUUID->"fe38d486-963e-4716-b8fc-\
ac3ded68c3a3"],

Cell[BoxData["0.31429892136484905`"], "Output",
 CellChangeTimes->{{3.814623153310655*^9, 3.8146231812159023`*^9}, 
   3.81462330527861*^9, 3.8146234384050713`*^9, 3.814624753222343*^9, 
   3.8146250814557657`*^9, 3.814626247675128*^9, {3.8146262794421864`*^9, 
   3.814626287321225*^9}, {3.8146263286159277`*^9, 3.814626339247484*^9}, 
   3.814626414015903*^9, 3.814626453101194*^9, {3.814626544229293*^9, 
   3.814626565921399*^9}, 3.8146999854525948`*^9, {3.814700882916806*^9, 
   3.8147008987836018`*^9}, 3.814700992353568*^9, 3.814701149221855*^9, 
   3.814702988946134*^9, 3.814703046816544*^9, 3.814704888818482*^9, 
   3.814710410305338*^9, 3.814711406334036*^9, {3.814711930113168*^9, 
   3.814711952028455*^9}, 3.8147119898280563`*^9, 3.8147129184502497`*^9, 
   3.8147134515751677`*^9, 3.814714586018097*^9, {3.81472325995971*^9, 
   3.814723277101449*^9}, 3.8147294403085003`*^9, 3.814729836772647*^9, 
   3.814784172848686*^9, 3.814785260873678*^9, 3.814786868730887*^9, 
   3.814787176444892*^9, {3.814787244125986*^9, 3.814787266708913*^9}, 
   3.814790565071224*^9, 3.814799146277111*^9, 3.8147992342764997`*^9, 
   3.814803512275738*^9, 3.8148087519777393`*^9, 3.8148160227456417`*^9, 
   3.814817037830283*^9, 3.814817201397684*^9, 3.81481793654983*^9, 
   3.81481837821497*^9, 3.814819919242086*^9, 3.81487858566462*^9, 
   3.814962875606503*^9, 3.814964270128355*^9, 3.814965661029476*^9, 
   3.8149687974068537`*^9, 3.814982315870446*^9, 
   3.814982432240315*^9},ExpressionUUID->"4e312d28-a5ed-4fad-be80-\
64d0117d07c9"],

Cell[BoxData["0.002275764278144434`"], "Output",
 CellChangeTimes->{{3.814623153310655*^9, 3.8146231812159023`*^9}, 
   3.81462330527861*^9, 3.8146234384050713`*^9, 3.814624753222343*^9, 
   3.8146250814557657`*^9, 3.814626247675128*^9, {3.8146262794421864`*^9, 
   3.814626287321225*^9}, {3.8146263286159277`*^9, 3.814626339247484*^9}, 
   3.814626414015903*^9, 3.814626453101194*^9, {3.814626544229293*^9, 
   3.814626565921399*^9}, 3.8146999854525948`*^9, {3.814700882916806*^9, 
   3.8147008987836018`*^9}, 3.814700992353568*^9, 3.814701149221855*^9, 
   3.814702988946134*^9, 3.814703046816544*^9, 3.814704888818482*^9, 
   3.814710410305338*^9, 3.814711406334036*^9, {3.814711930113168*^9, 
   3.814711952028455*^9}, 3.8147119898280563`*^9, 3.8147129184502497`*^9, 
   3.8147134515751677`*^9, 3.814714586018097*^9, {3.81472325995971*^9, 
   3.814723277101449*^9}, 3.8147294403085003`*^9, 3.814729836772647*^9, 
   3.814784172848686*^9, 3.814785260873678*^9, 3.814786868730887*^9, 
   3.814787176444892*^9, {3.814787244125986*^9, 3.814787266708913*^9}, 
   3.814790565071224*^9, 3.814799146277111*^9, 3.8147992342764997`*^9, 
   3.814803512275738*^9, 3.8148087519777393`*^9, 3.8148160227456417`*^9, 
   3.814817037830283*^9, 3.814817201397684*^9, 3.81481793654983*^9, 
   3.81481837821497*^9, 3.814819919242086*^9, 3.81487858566462*^9, 
   3.814962875606503*^9, 3.814964270128355*^9, 3.814965661029476*^9, 
   3.8149687974068537`*^9, 3.814982315870446*^9, 
   3.814982432253985*^9},ExpressionUUID->"dd1898fa-88e6-408f-ab5a-\
28a269d374b4"]
}, Open  ]],

Cell["\<\
If we don\[CloseCurlyQuote]t have the true outcome (most likely) we can use a \
fixed estimate as mean. 
Because we lose a degree of freedom in using the estimate as opposed to use \
the true value, we use N=N-1\
\>", "Text",
 CellChangeTimes->{{3.8146247864222918`*^9, 3.814624879256024*^9}, {
  3.814625097980783*^9, 
  3.814625110038846*^9}},ExpressionUUID->"0800c14e-f78c-4c89-bbdf-\
468951c45543"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "N"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["x", "^"], "n"], "-", 
       OverscriptBox["x", "^"]}], ")"}]}], 
    RowBox[{"N", "-", "1"}]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814623771243723*^9, 3.814623798877067*^9}, {
   3.814624428291498*^9, 3.814624564843781*^9}, {3.814624603542341*^9, 
   3.814624610564024*^9}, 3.8146249009078293`*^9, {3.814624987842485*^9, 
   3.814624987932189*^9}},ExpressionUUID->"c42c2e8d-3907-4d03-a3d3-\
43bef080c9ee"],

Cell["This is called \[OpenCurlyQuote]empirical standard error\
\[CloseCurlyQuote] (Empirical SE)", "Text",
 CellChangeTimes->{{3.814700039036126*^9, 3.814700065880754*^9}, {
  3.81470016557906*^9, 
  3.814700171744176*^9}},ExpressionUUID->"0a0117c6-ffde-4199-a4ab-\
921c2b626beb"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[Sigma]", "\[TildeTilde]", 
   SqrtBox[
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["x", "^"], "n"], "-", 
        OverscriptBox["x", "^"]}], ")"}]}], 
     RowBox[{"N", "-", "1"}]]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814700073901054*^9, 
  3.814700083047578*^9}},ExpressionUUID->"5cb5a728-ed9d-4fe3-9c67-\
270f783a39fc"],

Cell["And the Monte Carlo standard error based on that is", "Text",
 CellChangeTimes->{{3.814700146677878*^9, 3.814700190575549*^9}, {
  3.814700242954542*^9, 
  3.814700243292087*^9}},ExpressionUUID->"57ad8f47-75be-4ab3-9746-\
73aa64d4a0a7"],

Cell[BoxData[
 StyleBox[
  RowBox[{"MCSE", "=", 
   FractionBox["EmpiricalSE", 
    SqrtBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"N", "-", "1"}], ")"}]}]]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8147002012651453`*^9, 3.814700237173094*^9}, {
  3.814703989299362*^9, 
  3.814703992787072*^9}},ExpressionUUID->"022ddcd9-5c4d-4d45-9f81-\
6ab1bdda5608"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eValue", "=", 
   RowBox[{"Mean", "[", "%", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ests", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "eValue"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], ")"}]}]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MCSE", " ", "=", " ", 
  RowBox[{"%", "/", 
   SqrtBox[
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.814623141153336*^9, 3.814623145111*^9}, {
  3.8146249237395983`*^9, 3.814624966469523*^9}, {3.81462500422834*^9, 
  3.8146250259342127`*^9}, {3.814700266807576*^9, 3.81470029412022*^9}, {
  3.81471201949034*^9, 
  3.814712031257251*^9}},ExpressionUUID->"d5c9df16-f09a-45ea-b62e-\
11f843277776"],

Cell[BoxData["0.3143132783893946`"], "Output",
 CellChangeTimes->{
  3.814623145634879*^9, {3.814624927873478*^9, 3.814624967540419*^9}, {
   3.814625018214761*^9, 3.814625026992647*^9}, 3.814625083153998*^9, 
   3.81462511672396*^9, 3.814626461817518*^9, {3.814626546000153*^9, 
   3.814626567594635*^9}, 3.814627418569941*^9, 3.814699986911565*^9, 
   3.8147002954726543`*^9, {3.814701048011826*^9, 3.814701054603345*^9}, {
   3.81470305136766*^9, 3.814703054671235*^9}, 3.8147038340069304`*^9, 
   3.8147048905353823`*^9, 3.814710416253539*^9, {3.814712022332583*^9, 
   3.814712033169077*^9}, 3.814712920959394*^9, 3.81471345165681*^9, 
   3.8147145895082483`*^9, 3.8147232793584347`*^9, 3.814729440416112*^9, 
   3.8147298368896646`*^9, 3.814784172922905*^9, 3.814785260956555*^9, 
   3.8147868687987823`*^9, 3.814787176551568*^9, {3.814787244194161*^9, 
   3.8147872698009243`*^9}, 3.814790565169682*^9, 3.8147991463720016`*^9, 
   3.814799234343638*^9, 3.8148035123815117`*^9, 3.8148087520775642`*^9, 
   3.8148160228412037`*^9, 3.814817037908102*^9, 3.814817201505444*^9, 
   3.814817936640946*^9, 3.81481837828185*^9, 3.814819919340221*^9, 
   3.814878588755637*^9, 3.814962875692932*^9, 3.814964270215988*^9, 
   3.8149656611041803`*^9, 3.814968797475007*^9, 3.8149823159414873`*^9, 
   3.814982432343377*^9},ExpressionUUID->"e2548f74-728d-4c6d-9fec-\
312a1a4fcace"],

Cell[BoxData["0.002222641640521627`"], "Output",
 CellChangeTimes->{
  3.814623145634879*^9, {3.814624927873478*^9, 3.814624967540419*^9}, {
   3.814625018214761*^9, 3.814625026992647*^9}, 3.814625083153998*^9, 
   3.81462511672396*^9, 3.814626461817518*^9, {3.814626546000153*^9, 
   3.814626567594635*^9}, 3.814627418569941*^9, 3.814699986911565*^9, 
   3.8147002954726543`*^9, {3.814701048011826*^9, 3.814701054603345*^9}, {
   3.81470305136766*^9, 3.814703054671235*^9}, 3.8147038340069304`*^9, 
   3.8147048905353823`*^9, 3.814710416253539*^9, {3.814712022332583*^9, 
   3.814712033169077*^9}, 3.814712920959394*^9, 3.81471345165681*^9, 
   3.8147145895082483`*^9, 3.8147232793584347`*^9, 3.814729440416112*^9, 
   3.8147298368896646`*^9, 3.814784172922905*^9, 3.814785260956555*^9, 
   3.8147868687987823`*^9, 3.814787176551568*^9, {3.814787244194161*^9, 
   3.8147872698009243`*^9}, 3.814790565169682*^9, 3.8147991463720016`*^9, 
   3.814799234343638*^9, 3.8148035123815117`*^9, 3.8148087520775642`*^9, 
   3.8148160228412037`*^9, 3.814817037908102*^9, 3.814817201505444*^9, 
   3.814817936640946*^9, 3.81481837828185*^9, 3.814819919340221*^9, 
   3.814878588755637*^9, 3.814962875692932*^9, 3.814964270215988*^9, 
   3.8149656611041803`*^9, 3.814968797475007*^9, 3.8149823159414873`*^9, 
   3.8149824323454247`*^9},ExpressionUUID->"105e363e-2488-4fc8-86f3-\
d6ace74b0054"]
}, Open  ]],

Cell["\<\
BTW, if we wanna compare two error returns (from the same error model), we \
can use this formula\
\>", "Text",
 CellChangeTimes->{{3.8147030697022667`*^9, 3.814703096678513*^9}, {
  3.814703175407263*^9, 3.814703177363076*^9}, {3.81470332802134*^9, 
  3.814703343569803*^9}, {3.8147033796397543`*^9, 3.814703388752613*^9}, {
  3.8147037674933863`*^9, 3.814703768301929*^9}, {3.814703867506575*^9, 
  3.814703876327611*^9}, {3.814703913854883*^9, 3.814703923980554*^9}, {
  3.814704266432679*^9, 3.8147042761287746`*^9}, {3.814704380483837*^9, 
  3.814704382643076*^9}},ExpressionUUID->"5bc309b0-59aa-4921-811d-\
41fd1c5c3fe7"],

Cell[BoxData[
 StyleBox[
  RowBox[{"100", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SubscriptBox["MCSE", "1"], 
        SubscriptBox["MCSE", "2"]], ")"}], "2"], "-", "1"}], ")"}]}],
  FontColor->GrayLevel[0.5]]], "DisplayFormula",
 CellChangeTimes->{{3.8147031925970783`*^9, 
  3.814703244795533*^9}},ExpressionUUID->"e8cd36ab-a168-4aa3-8af8-\
753fc8c9d0b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"100", "*", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.0021999", "/", "0.0021947"}], ")"}], "2"], "-", "1"}], 
     ")"}]}], ",", "\"\<Percent\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8147032579145412`*^9, 3.814703296929611*^9}, {
   3.814703471240501*^9, 3.814703479155149*^9}, 3.814703718667639*^9, {
   3.814703842043385*^9, 3.814703844097061*^9}, {3.81470388935821*^9, 
   3.814703897589409*^9}, 3.8147041898403187`*^9, {3.8147149067641172`*^9, 
   3.814714908606432*^9}, {3.814885725391445*^9, 
   3.8148857515111303`*^9}},ExpressionUUID->"f53ccb7b-a27c-43a0-b0a8-\
a39a3d41c792"],

Cell[BoxData[
 TemplateBox[{"0.47443024515938514`","\"%\"","percent","\"Percent\""},
  "QuantityPostfix"]], "Output",
 CellChangeTimes->{
  3.814703298152137*^9, 3.814703509091527*^9, 3.814703719673833*^9, 
   3.8147038510484543`*^9, {3.814703890215939*^9, 3.81470389797856*^9}, 
   3.8147041910182858`*^9, 3.8147048943067303`*^9, 3.8147134516640787`*^9, 
   3.814714591371221*^9, 3.814714909929867*^9, 3.8147294404474497`*^9, 
   3.8147298369248962`*^9, 3.8147841740799828`*^9, 3.8147852617096987`*^9, 
   3.814786868819538*^9, 3.81478717795255*^9, {3.814787245368772*^9, 
   3.814787271340418*^9}, 3.8147905651896772`*^9, 3.814799146394308*^9, 
   3.814799234364416*^9, 3.814803512405222*^9, 3.814808752097145*^9, 
   3.814816022862918*^9, 3.814817037925784*^9, 3.8148172015285177`*^9, 
   3.814817936659589*^9, 3.8148183794631033`*^9, 3.814819919369453*^9, 
   3.814878590911757*^9, {3.8148857232745667`*^9, 3.814885752177866*^9}, 
   3.8149628757247353`*^9, 3.814964270778426*^9, 3.8149656611325893`*^9, 
   3.814968798022771*^9, 3.814982315951295*^9, 
   3.8149824328987226`*^9},ExpressionUUID->"5109eaa3-5b67-4f39-aa87-\
164967f77a85"]
}, Open  ]],

Cell[TextData[{
 "Technically we got an increase in relative precision by a 0.47% ! ;)\n\n\n\
Anyway, we see our estimated standarddeviations is coherent with the previous \
true standarddeviation.\n\nNow let\[CloseCurlyQuote]s say \
it\[CloseCurlyQuote]s not practical for us to deal with the expected mean \
before running our simulation, as seen above (7) we can use the following to \
compute our standarddeviation. This works also \[OpenCurlyQuote]inline\
\[CloseCurlyQuote] ie. for \[OpenCurlyQuote]running summations\
\[CloseCurlyQuote] without having to keep the estimates in memory.\n",
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->MonteCarloAnalysis]",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.8146251241245337`*^9, 3.81462515900097*^9}, 
   3.814626195259591*^9, {3.814627670499548*^9, 3.814627728615007*^9}, {
   3.814627773773164*^9, 3.814627796879373*^9}, {3.814629185697845*^9, 
   3.814629229615082*^9}, {3.8147035979126596`*^9, 3.814703647548213*^9}, 
   3.8147036946591043`*^9, {3.814703930417307*^9, 3.814703972401636*^9}, {
   3.814704199111393*^9, 3.814704199132189*^9}, 3.8147044077296553`*^9, {
   3.814794591508273*^9, 3.814794635227124*^9}, {3.814794685740074*^9, 
   3.81479471185913*^9}},ExpressionUUID->"b27f404e-1917-4f2c-8058-\
7b8128dcce6e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      OverscriptBox[
       SuperscriptBox["X", "2"], "-"], "-", 
      SuperscriptBox[
       OverscriptBox["X", "-"], "2"]}], 
     RowBox[{"N", "-", "1"}]]], "=", 
   RowBox[{
    FractionBox["N", 
     RowBox[{"N", "-", "1"}]], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "N"], 
        SubsuperscriptBox[
         OverscriptBox["X", "^"], "n", "2"]}], "N"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "1"}], "N"], 
          SubscriptBox[
           OverscriptBox["X", "^"], "n"]}], "N"], ")"}], "2"]}], ")"}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814627833182362*^9, 3.8146279446389112`*^9}, {
  3.8147042192268267`*^9, 
  3.81470422154469*^9}},ExpressionUUID->"aa570dca-2b86-4cd9-a26d-\
b768a48facf6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"k", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ests", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "n"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ests", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}], ")"}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  OverscriptBox["\[Sigma]", "^"], "=", 
  SqrtBox[
   RowBox[{
    FractionBox["n", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]], "*", 
    RowBox[{"(", 
     RowBox[{"k", "-", "y"}], ")"}]}]], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"note", " ", "that", " ", "because", " ", 
    RowBox[{"it", "'"}], "s", " ", "an", " ", "estimated", " ", "error", " ", 
    "we", " ", "use", " ", 
    RowBox[{"the", " ", "^", "hat"}], " ", "over", " ", "the", " ", 
    "\[Sigma]sigma"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.814627231702677*^9, 3.814627286829595*^9}, {
   3.8146273226025867`*^9, 3.814627389294306*^9}, {3.814627429616226*^9, 
   3.814627431976469*^9}, {3.814627504606968*^9, 3.814627515249405*^9}, {
   3.814627586892536*^9, 3.814627588150949*^9}, {3.814627806645154*^9, 
   3.814627807434073*^9}, 3.8147121881299973`*^9, {3.814712253354581*^9, 
   3.8147122554448433`*^9}, {3.8147128951041307`*^9, 3.814712897731533*^9}, 
   3.814714560012053*^9, 3.814787279501348*^9, 3.8147874133764973`*^9, {
   3.8148786018014803`*^9, 
   3.8148786533942547`*^9}},ExpressionUUID->"20570aa4-9568-4646-92b1-\
e9aaf256e28e"],

Cell[BoxData["0.3143116852194432`"], "Output",
 CellChangeTimes->{{3.81478724548742*^9, 3.814787281605483*^9}, 
   3.8147874143817987`*^9, 3.814790565223742*^9, 3.81479914643088*^9, 
   3.814799234395075*^9, 3.814803512440056*^9, 3.814808752127943*^9, 
   3.8148160228870277`*^9, 3.814817037946566*^9, 3.814817201551894*^9, 
   3.814817936687603*^9, 3.8148183795855503`*^9, 3.814819919399611*^9, {
   3.8148785699808483`*^9, 3.814878609541759*^9}, 3.8149628757636433`*^9, 
   3.814964270795723*^9, 3.8149656611566772`*^9, 3.8149687980417843`*^9, 
   3.8149823159867277`*^9, 
   3.814982432922167*^9},ExpressionUUID->"5908b3d8-2404-44cd-8a88-\
ff318dba758d"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[1, 0.5, 0]],
 "\nTill now we saw error analysis for a single simulation. \n\n",
 StyleBox["Let\[CloseCurlyQuote]s see how to deal with multiple replications \
of a Monte Carlo simulation.\n",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.8147070435382843`*^9, 3.814707096729705*^9}, 
   3.8147072691009007`*^9, 3.814712938390903*^9, {3.814816964091691*^9, 
   3.81481696436648*^9}, 
   3.8149714155542727`*^9},ExpressionUUID->"c3cd539c-4f36-4770-8243-\
f017e7040ddb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "n", ",", "m", ",", "a", ",", "b", ",", "w", ",", " ", "data00", ",", " ", 
    "data01", ",", " ", "data02", ",", "f", ",", "x", ",", "tValue"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "100"}], ";"}], 
  "                                       ", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "samples"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", "=", "1000"}], ";"}], "                                     ", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "simulations"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "=", 
    RowBox[{
     RowBox[{"7", "x"}], "-", 
     RowBox[{"8.5", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", 
      SuperscriptBox["x", "3"]}]}]}], ";"}], "    ", 
  RowBox[{"(*", " ", "integrand", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "0"}], ";", " ", 
   RowBox[{"b", "=", "2"}], ";"}], "                               ", 
  RowBox[{"(*", " ", "domain", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", " ", "=", " ", 
    RowBox[{"b", "-", "a"}]}], ";"}], "                                   ", 
  RowBox[{"(*", " ", 
   RowBox[{"'", 
    RowBox[{"quadrature", "'"}], " ", "width"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<true result\>\"", ",", " ", 
    RowBox[{"tValue", "=", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "}"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", 
      RowBox[{"n", "*", "m"}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"n", "*", "m"}]], 
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data00", "=", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rnm", "=", 
   RowBox[{"Mean", "[", "data00", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "m"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], "m"], 
      RowBox[{"(", 
       RowBox[{"w", 
        FractionBox["1", "n"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "0"}], "n"], 
         RowBox[{"f", "[", 
          RowBox[{"a", "+", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}]}]}], 
       ")"}]}]}], ";"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data01", ":=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "same", " ", "as", " ", "the", " ", "symbolic", " ", "above", " ", "but", 
    " ", "we", " ", "keep", " ", "the", " ", "estimates"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data02", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{"data01", ",", "m"}], "]"}]}], ";"}], 
  "                                   ", 
  RowBox[{"(*", " ", 
   RowBox[{"eval", " ", "m", " ", "times", " ", "data01", " ", 
    RowBox[{"(", 
     RowBox[{
     "that", " ", "itself", " ", "evals", " ", "fx", " ", "*", "n", " ", 
      "times"}], ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data03", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
         ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "replication", " ", "means", " ", "will", " ", "be", " ", 
    "here"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{"m", "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   "                                                           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "dunno", " ", "why", " ", "but", " ", "if", " ", "we", " ", "do", " ", 
      RowBox[{"Mean", "[", "data02", "]"}], " ", "that", " ", "should", " ", 
      "return", " ", "m", " ", "means"}], ".."}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"data02", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", 
    "                                                                  ", 
    RowBox[{"(*", " ", 
     RowBox[{"instead", " ", "it", " ", "return", " ", "n", " ", 
      RowBox[{
       RowBox[{"means", " ", "!"}], "?", " ", "effectively"}], " ", "we", " ",
       "have", " ", "m", " ", 
      RowBox[{"items", " ", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"mm", "=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}]}], ";", 
    "                                ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"let", "'"}], "s", " ", "do", " ", "it", " ", 
                   "manually"}], " ", "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
       "..."}], "."}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"data03", ",", "mm"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RnXm", "=", 
   RowBox[{"Mean", "[", "data03", "]"}]}], 
  "                                                                      ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"mean", " ", "of", " ", "the", " ", "replication", " ", "means"}],
     ",", " ", 
    RowBox[{
     RowBox[{"ie", ".", " ", "final"}], " ", "average"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Histogram", "[", 
   RowBox[{"data03", ",", " ", "32", ",", "\"\<Probability\>\"", ",", 
    RowBox[{"PlotTheme", "->", "\"\<WarmColor\>\""}], ",", 
    RowBox[{"ImageSize", "->", "Medium"}], ",", 
    RowBox[{"ChartElementFunction", "\[Rule]", "\"\<FadingRectangle\>\""}]}], 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"the", " ", "latter"}], ",", " ", 
    RowBox[{
     RowBox[{
     "approaches", " ", "a", " ", "standard", " ", "normal", " ", 
      "distribution", " ", 
      RowBox[{"(", 
       RowBox[{"thanks", " ", "to", " ", "CLT"}], ")"}], " ", "as", " ", "we",
       " ", "can", " ", "see", " ", "when", " ", "m", " ", "is", " ", "big", 
      " ", "enough", " ", "but"}], " ", ".."}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "m", " ", "is", " ", "not", " ", "big", " ", "enough", " ", 
     "we", " ", "can", " ", "still", " ", "get", " ", "confidence", " ", 
     "intervals", " ", "from", " ", "a", " ", "student"}], "-", 
    RowBox[{
    "t", " ", "distib", " ", "where", " ", "the", " ", "degrees", " ", "of", 
     " ", "freedom", " ", "is", " ", 
     RowBox[{"(", 
      RowBox[{"m", "-", "1"}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"StudentTDistribution", "[", "16", "]"}], ",", "x"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", 
          RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}]}], " ", "]"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "with", " ", "enough", " ", "degrees", " ", "of", " ", "freedom", " ", 
     "a", " ", "student"}], "-", 
    RowBox[{
    "t", " ", "distribution", " ", "approaches", " ", "a", " ", "gaussian", 
     " ", "distribution"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "left", " ", "at", " ", "16", " ", "or", " ", "at", " ", "20", " ", 
        "the", " ", "two", " ", "plots", " ", "almost", " ", "coincide"}], 
       ".."}], " ", 
      RowBox[{"that", "'"}], "s", " ", 
      RowBox[{"it", " ", "!"}], " ", "With", " ", "at", " ", "least", " ", 
      "20", " ", "repeats", " ", "we", " ", "have", " ", "student"}], "-", 
     "t"}], " ", "\[Rule]", " ", "stdgauss"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.814635706201399*^9, 3.814635889195026*^9}, {
   3.8146359445723877`*^9, 3.8146362685939093`*^9}, {3.814636336857314*^9, 
   3.8146363590177107`*^9}, {3.814636426944933*^9, 3.814636430346786*^9}, {
   3.814636566945408*^9, 3.814636569483432*^9}, {3.814636606595295*^9, 
   3.8146367114138193`*^9}, {3.814636976876095*^9, 3.814637068221266*^9}, {
   3.8146370987354116`*^9, 3.814637247252486*^9}, {3.814637363967765*^9, 
   3.814637529429102*^9}, 3.814637622890452*^9, {3.8146376648559923`*^9, 
   3.814637664895966*^9}, 3.814637737169739*^9, {3.814637773737315*^9, 
   3.8146377747234898`*^9}, {3.814637806064722*^9, 3.814637859297584*^9}, {
   3.8146378915664663`*^9, 3.814638025686756*^9}, {3.814638062495903*^9, 
   3.814638214284732*^9}, {3.8146382662156963`*^9, 3.8146382735016203`*^9}, {
   3.814638332328353*^9, 3.8146384109987164`*^9}, {3.8146384679954853`*^9, 
   3.8146387223119307`*^9}, {3.8146389764721603`*^9, 3.814639000679493*^9}, {
   3.814639061366424*^9, 3.814639065589624*^9}, {3.814639100624908*^9, 
   3.8146391613601017`*^9}, {3.814639218346739*^9, 3.81463924555336*^9}, {
   3.814639287576559*^9, 3.8146393156555033`*^9}, 3.814639374819832*^9, 
   3.814639412366734*^9, {3.8146402534120083`*^9, 3.814640337922701*^9}, {
   3.814640970220525*^9, 3.814641158093383*^9}, {3.814641230909445*^9, 
   3.8146412319404287`*^9}, {3.814702140302023*^9, 3.8147021428377113`*^9}, {
   3.814702355759859*^9, 3.81470235584519*^9}, 3.814702391711388*^9, {
   3.814702457971033*^9, 3.814702503623619*^9}, {3.814702538927895*^9, 
   3.8147025577588367`*^9}, {3.814707152576932*^9, 3.814707243504839*^9}, {
   3.8147072982897243`*^9, 3.8147073020654078`*^9}, {3.814707363269525*^9, 
   3.81470750438829*^9}, 3.814707561451941*^9, {3.814707593474392*^9, 
   3.8147075962115917`*^9}, 3.8147076774999866`*^9, {3.8147077679315*^9, 
   3.814707801769238*^9}, {3.814708055863966*^9, 3.814708056042684*^9}, 
   3.814708171094453*^9, {3.814708282350124*^9, 3.814708284600194*^9}, 
   3.8147083486364098`*^9, {3.8147087313872757`*^9, 3.814708784118658*^9}, {
   3.814708879409562*^9, 3.8147088815021887`*^9}, {3.814709041885227*^9, 
   3.814709094442226*^9}, {3.814710089888637*^9, 3.8147101001038933`*^9}, {
   3.814710169382*^9, 3.814710170495144*^9}, {3.814710459546184*^9, 
   3.814710471826602*^9}, {3.814710643953662*^9, 3.814710659477923*^9}, 
   3.814711016961986*^9, {3.8147146278956127`*^9, 3.814714673929297*^9}, {
   3.8147238165707073`*^9, 3.814723819606327*^9}, {3.814724203096705*^9, 
   3.8147242489997063`*^9}, {3.8147243055177507`*^9, 3.814724336184031*^9}, {
   3.8147244723540897`*^9, 3.8147245063015127`*^9}, {3.814724574460948*^9, 
   3.814724615339994*^9}, {3.814725537637809*^9, 3.814725541261015*^9}, {
   3.814725580499838*^9, 3.814725585042686*^9}, 3.814725732016498*^9, {
   3.814725823708674*^9, 3.814725938971343*^9}, 3.814726075280933*^9, 
   3.814726229540535*^9, {3.814726407179926*^9, 3.814726408391492*^9}, {
   3.8147264971300917`*^9, 3.8147265012488203`*^9}, {3.814729572343337*^9, 
   3.814729668604216*^9}, 3.814795524656146*^9, {3.814795681796382*^9, 
   3.814795682202095*^9}, {3.814798447281581*^9, 3.8147984969085207`*^9}, {
   3.814798636326173*^9, 3.814798637625915*^9}, {3.814798674259171*^9, 
   3.8147987182658367`*^9}, {3.814798788781843*^9, 3.814798897069517*^9}, {
   3.814798946958541*^9, 3.814799025549811*^9}, 3.814799189328895*^9, {
   3.8147992270335693`*^9, 3.814799227237561*^9}, {3.814803141568277*^9, 
   3.814803147370296*^9}, {3.814803381553248*^9, 3.814803389403583*^9}, {
   3.8148034289832687`*^9, 3.814803436527089*^9}, {3.8148034702264442`*^9, 
   3.8148034733717737`*^9}, {3.814816969988885*^9, 3.814816971900638*^9}, {
   3.814817190061743*^9, 3.814817195711191*^9}, {3.814819892092642*^9, 
   3.81481989380298*^9}, 
   3.814968953652886*^9},ExpressionUUID->"c9dcacee-fb73-4e1c-a67a-\
fd69e33d0ad4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"true result\"\>", ",", "3.3333333333333357`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 
   3.814982432958005*^9},ExpressionUUID->"80eb66e0-3c0c-4869-8cb5-\
ff565ad5b2a3"],

Cell[BoxData["3.3348993889861847`"], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 
   3.814982434826633*^9},ExpressionUUID->"ff9a914b-3274-467d-8544-\
611b5cc63366"],

Cell[BoxData["3.326144413477986`"], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 
   3.8149824350230303`*^9},ExpressionUUID->"33b07db3-2c4d-4a35-bfc2-\
eda5737236f1"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.92, 0.41600000000000004`, 0.2], EdgeForm[{Opacity[0.385], 
    Thickness[Small]}], {}, 
    {RGBColor[0.92, 0.41600000000000004`, 0.2], EdgeForm[{Opacity[0.385], 
     Thickness[Small]}], {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Ew3EcxvGfSU2mQzpnoyZlplOS2SiSpH90yE6zkaSSjDpEMsmkkqSS
ZDIjk3RIkpmZ2WHRpS5JOiQdZoeJ6rD90tvz4evrdXkOb0dgbixkMQyjvfrM
P/I5et0cqfMZ/3czYLN0rMvFeHawa0NurV3d643Kk8Gel+FNeTtdbvNvyRn7
xcLUjvy9Mn27uCu7n1uqi/Lf3L58eGCefP81/nZ2JNdMNLguj+Xuq1z47kSe
bVxL5U/l2Lyn/jEmPxXMQdlcK8blvujM+09CXvpwdlrP5WT/63JTUqbnb6L0
MBQY8dIT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xNX
ABCu7+A=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.94, 0}, {2.96, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2Ecx/HXxNghmYku2XaasmPUIWuH6bSsIh2SvHRJqlOHZJdJuqzj
YjokmS6TmcwkM8lMkomZTsl0iGYySou97/T1e3g8Pofn73m+PnN7Yd1hGMaY
te0zO/u658k6Z4z/9XaRvvNeySMDS4PBnDxnDi1P5eVEqXoWuZYLowcf8wX5
cz80sVqU/S8/8Y0b2RpW2b2Vk6ktd6IklzuBleOy/L1ov1AO5k5bmXu5/7yK
fGKPq8oP/SU7xg+HG4/y5FF4rfkkb77/XrZrsvXZr79nuX6+M+2qy/TsWrei
ZixET0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xP3APn
Q/oy
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.96, 0}, {2.98, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQfX1xgS3XdXYHBijgYdJuF7uJ4DslPL2gdBvBL983
X0r/LoK/RiYqxfo+gv+wSmSd+0MEX+zmue/BjxF8H/NOx4SnCH7TVOfunOcI
/rbPf69UvETw3wTukGt9jeArbijKmPgWwQ/j09009z2C35Pz/PfKjwj+gVML
Xbd9RvC/acT0H/qK4Ou0g1yI4IO9+xPBnwZy3m8EH2zcXwQfAjjgfFh4/qrL
2lMyOcMeFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8
YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8QHl
XfEy
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.98, 0}, {3., 0.003}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQEcDjCWSdwuTx4mBD97T8lkCRYEf4GU/l0VNgT/
WsVLNUMOBJ/r+uICWy4E394UZCCCDzItjA/BX/Xxkm+SAIL/wL93ep4Qgi+y
zv1hlQiC78XDpN0uhuDXZ4EciOBvOVG2b74Ugv8K6Lo1Mgi+fOvrwB1yCH7I
46Wzjygg+J2OCU8vKCH4QMOAHkbwv/y9AvQxgq8Z03/oqwaCDwEcDn9WgjwW
YA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8
YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4ADsI1Qw=

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3., 0}, {3.02, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQrRnTf+irBocDAxTE7fLkYdJG8KdIsITx6SL4J8r2
zZfSR/D/X6l4qWaI4JsYgwCCnzHxbY29KYI/9/3yY97mCP5l3ySBCEsEn3ON
TFSKNYJvx3V9cYEtgl8ENhDBXwE0rdMRwb+nwtY41RnBF2o+cGqhK4Lv8bBK
ZJ07gl9nbwr0MoK/GexABP/F75UfL/ki+LJA1933R/CDdsi1vg5E8GHh+Qek
LanAHhaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8
WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPEB/QPi
BA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.02, 0}, {3.04, 0.004}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2EAxvFPkum0w6RDpjpNt0UyypqoQyZtzKSSqWSyJpNUUodkkiSz
w3YbIzI7JB3qkqRTLJEU0zk7bJNEse+r/p6X1+t3eXj/XZHlwHyTYRg95rXe
wIVz933CNmT8n7225/vPoHyVOG5vDsm1B3/EHpZdbttpx6Q8fXj94ZqSjyqb
3r4Z+XasP+mblb9Pquai3GvNzckLv0fO3nQWVxblUvfL11ZUbtlJDe8vyQPl
8YN0TI4Ptj7l4nI+Yw3Kr+baZUK2hz1nd6vyyHn953FN3nAURt/WZXr+/Wvb
S09MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT9wAXyLt
oA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.04, 0}, {3.06, 0.008}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQXS2yzv1hFYcDAxRsKMqY+LYGwX92Qen2zzoEX1r/
rgpbI4If2Ds9T6gZwW99HbhDrhXB3+XJw6TdjuC/X37M27wTwVdla5zq3I3g
R6dY3/fvRfAnHPqqEdOP4B9RALkQwf9Vl7WnZDKCbwBy3lQEH2zcdAR/1kwQ
QPAvfA9+vHQ2gs8Sxqe7aS6Cb7XlRNm++Qg+0LMHTi1E8JcU2HJdX4zgw8IT
4u82e1h4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITx
YeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8YHAOMI
v5I=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.06, 0}, {3.08, 0.011}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0D1IglEYhuGPaBCHinBwkiKIEBwcHETChqTNKCEaokFoEVEnB5GGfqYo
R4NokBIRQkIiJCSkRETSNaEhwkEiqCkqWvKTbp4Dh8O1vLznng7HV7dGDMNw
Dq75nifmrY9nlgXj/3Q7X6FeXh53lU8/CvLiQbT/W5RTr7Nuy4VcWnpJ2Upy
L39Sn7qU7aNrY66yHAxPrHuv5L1aKxe4liuO/beVivye9ns2b+SZp5/tSFUe
DGsmb+WjbGxytybff85tZO7k75C5oTz8bkMerteUj81xLbn9YB6Znr7n5cNs
bMdPT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xP/Acg
JOUg
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.08, 0}, {3.1, 0.009}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQffYMCHA4MEABk3a72M1zCL5Fp2PC0wsIfs7z3ys/
XkLwF7tu+/z3CoJ/Y3GBLdd1BJ8HbCCCDzJN6TaCX75vvpT+XQR/rUxUivV9
BP9Rlcg694cIPtBx34MfI/g+5iAHIviNU527c54j+CDXVbxE8F8H7pBrfY3g
K20oypj4FsEP59PdNPc9gt8D9jCCf/DUQqCPEfxvGjH9h74i+LDwBDtz6Wx7
WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnj
w8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxgcAKlYO6A==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.1, 0}, {3.12, 0.027}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ/U0jpv/QVw4HBijQbhe7ee47gp/49ILS7Z8I/jTn
7pznvxH8Mwtdt33+i+BDACecbxq3y5OHCcHP2lMyWYIFwV8gpX9XhQ3Bv1bx
Us2QA8Hnur64wJYLwXcAG4jglwJNC+ND8Fd9vOSbJIDgP/DvnZ4nhOCLrHN/
WCWC4HvxMAG9jOA3gB2I4G85UbZvvhSC/wroujUyCL586+vAHXIIPiw8o1Ks
7wOttoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08Y
HxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8AJ0T
w9o=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.12, 0}, {3.14, 0.023}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Eg2EAx/HXJCtJ0iFJ/0xaSbKSpNYklZlskiTJFN3qMJN0yexQJNHs
EM0kdUjn2aFmJuq0w+hUmemQpNOOqfedvn4Pj8fn8nv4dga3Ahs2wzB6zWu9
7dFPf6qtZtL4Pwuly7Nch3zoWXvPd8n3iZaBF4dc/insfHTLzpXjbLlHXk3P
1dn65NPmqsX6fvkxfGcuyr/W3KA85LKOvHnytecels+/rx68I3LBF2xYGpXt
N63L62PyRO3zxfa4HKoMytfm2oFHfnVU78em5MZI5ik5Lc8Wd5tuZ2R6mp++
zR/F3fTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MR/
3BzINA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.14, 0}, {3.16, 0.023}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/TGqnHZIOmdZpdivSobLSoWVmWiQzyd+qSapNpyQ6TJJE
yS51yA4ZM6NL0impW7RLpsN0G0mKzKxDvdrX7+H1+lwej6/HXosstFiW5ft7
5g+8bnYUJtpHreZs+Qfmrifly7OPi/ugXG3kPksh2R2ND1XCcuTKnX6bknc7
y4+1aflm47jLMSN/lUK2a1b29rXlu6Ny7PD22xuTj97NhfJDcHBvbF7+MefZ
cr9ZF5eXFs3Ip3c9xVRCfup9qW8vy607J+P7K/JwJXyQWZWTI87n7LpMz/+9
5356YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnriX+1K
2GA=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.16, 0}, {3.18, 0.034}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0DFIwkEYhvE/DkLRENIWhEZB2FCbRISCg4RD2BTRFAnRUCYRESKIpEhI
iohUo2BbOEhENEWIo0PQYBENTREI4iAS1IkP7wfH8VuO7x7X9sF62GZZlvv/
mPtwZfS1HBnxWcOpXD87q1H5rRffezySxzeWao1jOXDX+X05kWMTt4HPU7ka
3c3/xOSv5nSrF5cnF95n7Ak5lC3tO5Jy6jt0P3UmP6yO2ebTcvumHvRk5Fl7
oug/lzd3lj/WsnLuqTu3dSHXnWZDuW++W5AXzXpFOWyeK8lXl2ZkerYG3cpe
emJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ64j89KvFu

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.18, 0}, {3.2, 0.038}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/WawdkmR0SZGkdOiwwyLrUHaLinRIh9ElqZ12mNllS4eo
Y2oyM3+JTDKZJKkOs8M6zuw0G5OoU5IuvS99/V5er8/l8T7f0ejeypbHcZxJ
c+17dmpP77zzf16/V9tuVu5Z65u+OZdnS5X4Q06ODaQfq3nZjc356wW5UbMD
ZTvt80JeONzp/l7KibfxGd+VXIy0EoNFueNmX0au5SGv/aC8FO1fD5XkjPnd
4q1cHt5/Xy7LH8lwcPNOHmv+pLbvZTPMLCwfneyajeXnr4mN4yeZnlMHAbN6
IUxPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE/8Bwgj
7MI=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.2, 0}, {3.22, 0.039}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E8ow2Ecx/Ffu9EOkqQlxUkUR9bSmLSLC7tIDvLnxuy4HKe15ODkIElr
tFZykOQkIcmfJa1mrSWWlraStCittkfefZ56enpdvn2fd/vM0vi8zbKsrto1
70W5c2r9vG7Q+j8/vvze1qXcc7j9Eb+SZxsmnEfX8qa/ceXsRr6/M0e2dUea
M0m5f3Vo+u1BXiz8Jj4f5djI8VclJT/FAgP1adn+N1D21KZ1ZOXg6Y6jNyfv
t07OuZ7l1+WmA++L3JJJfvvy8mifWVAObQyvLRRks13wXS6NnbSFizI9b6Pm
I7tuemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ64ipT
1gr9
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.22, 0}, {3.24, 0.041}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEQ3EAx/HnSbZnZmYyHVKZSUl26JhGkkZSh3XJ5BFJKtkh3dMhSaJO
STq9S6ZDkk7vWCRjkmQ6JNOSSSUT7a2+/f78/X0uP/7fNnthfNo0DKOzdr23
PHbasvrsTxp/pzW3NLP1Ik8Eu4/3XuX1uaeqU5Hdi4PBkzf5o2Ny032Xu9aa
bq8+5anH6/a7L3lnwFuUL725b/n3WP/uzZwNB0x59jy7HW2Q95t77mONcmG5
FE/4ZOvmcLHPkpP1QdlbSwdlp5IfsUNycXRjdz4sR46GHlYiMj1TAbP2daef
npiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Ynpie+AcOorAq

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.24, 0}, {3.26, 0.049}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLbLO/WGVCJcDAxR48jBpt4sh+HVZe0omSyD4W06U
7ZsvheC/UjPkWCOD4Mu1vg7cIYfgBz9eOvuIAoLf6Zjw9IISgg80TP+uCoL/
5e+VipdqCL5GTP+hrxoIftwukAsR/MkSLGF8ugg+2Hn6CP4/kHGGCL4xGCD4
GRPf1tibIvjz3i8/5m2O4F/2TRKIsETwgZ6NSrFG8G25ri8usEXwYeEJVHTf
v3e5PSw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4
sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCeMDAHBB
xXw=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.26, 0}, {3.28, 0.046}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQbct1fXGBLZcDAxQUZUx8W2OP4K845m3e6Yjg31Vh
a5zqjOALNx84tdAVwfd4WCWyzh3Br7U3jdvlieBvmvt++TFvBP/575UfL/ki
+DJRKdb3/RH8oB1yra8DEfw2sZvnvgcj+HtKJkuwhCH4ny75JglEIPhqhhxr
ZKIQ/Oj+Q181YhB8kG9N4xB8sHcTEHyw85IQfLBxKQh+Ghgg+LDwBDt7xzp7
WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnj
w8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxgcAHYPdFA==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.28, 0}, {3.3, 0.06}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQnQYGXA4MUDD7iMKGogwE/4LS7Z91WQg+W+NU5+4c
BN/mvn/v9DwEv8CW6/riAgR/KdhABP8W0LQ9JQi+QITllhNlCL7bts9/r1Qg
+FUi69wfViH4QMdNfFuD4D8FOxDBl9K/q8LWiOAHAF0n1Izgt7wO3CHXiuDv
8uRh0m5H8N8vP+Zt3ongq4I9jOBHplgDfYzg9x/6qhHTj+DDwnMOOBw32sPC
E8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8W
njA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+ACmd3fg=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.3, 0}, {3.32, 0.068}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2Ecx/HXymSHZHboNEWSKDrsMMki6TSpkR06jTGZNZNJEkmnZCZJ
Jkllxrwmkx2SyQ6zw67bJZkOSdIpoy697/T1e3g8Ppe///MdjWyuRh2GYUxa
134zT98T6xnXvPF/aiOlVCwr/+xtPGydyNPPY879Uzk6+7J8fCaf947c7IZe
b3Ny39rg1N2F7C/X04+XcsJ9UG1cyTfJOVfrWm73Bsr2tK+8vHAUf/styNvv
4zMDRdlc6ux4TNlazvqyPNxvLygHI0Nhf1m2t1u8lyvew4+VikzPWPZzN+Az
A/TE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MR/6Wrf
xw==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.32, 0}, {3.34, 0.059}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Ew2EAxvGfHWeHSTpMpu2UMjsVM1mLdO7PIcnM1CVZnYqkS5Iu7bhI
YpNEZpLMzMzMTJIkJpPMpEOSZCaJ9pu+npfX63N5eL+uyMrUosUwjIH2Nd+M
c+dtMmMdNf7P+2ZgKJSV3bXvraWcPOu7rKzl5f14tGu7IBeb/fOxotyabpwc
lmTPxdHHaVmO2M1F+cCcu5ZvOke2DO72PN7Kw3vB8MudvPz6c/Z5LyfGr75+
H+RqcnXEWpVtnUF5rL3mrsnr+WOH90k+751b8D/L9Y3u1ERdpueM+e2+dICe
mJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ74Dzib8zQ=

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.34, 0}, {3.36, 0.063}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg3EYx/HXJHmbTpnskMokI9MhO81KkujSRqdkIpKxpMN022FmimTa
bZJ0SEw6VKZDOnZIh5Kkw2Rm2kymkhn1rn37Pfz9fS6Px7d/MRJYshmG4f59
1p/f6M5O5c0xozWOp9uv4Ks8402OhwpybHdiM1yUz2uN+2hJLs9e9Mbf5L6T
teWdijzXNXyaqcpb4WL96F2+utmfPKvJn0Pz29cfsjthXSiHCncDz99y2jqv
LjfXNeS/6fz36EJu2m6TVy7XUz1t8p7T8+Jqlx+ipcGRDtl8PFj1mTI9mxkP
j/30xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTEP2YE
ArQ=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.36, 0}, {3.38, 0.054}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQzXV9cYEtF7cDAxTYm8bt8uRB8EsmS7CE8SH4qz5e
8k0SQPAf+PdOzxNC8EXXuT+sEkHwPXmYtNvFEPy6rD1AIxH8LSfK9s2XQvBf
qRlyrJFB8OVaXwfukEPwQx4vnX1EAcHvcEx4ekEJwQcapn9XBcH/8vdKxUs1
BF8jpv/QVw0EH+RbJm0EH+xdXQT/JMh5+gg+2DhDBN8YDBB8WHi+BPtjlT0s
PGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh
4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4QnjAwBuaLZf
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.38, 0}, {3.4, 0.051}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQbQwG3A4MUJAx8W2NvSmCP+/98mPe5gj+Jd8kgQhL
BJ9zjUxUijWCb8t1fXGBLYJfBDYQwQeZ1umI4N9TYWuc6ozgCzUfOLXQFcH3
eFglss4dwQc6Lm6XJ4K/aS7IgQj+898rP17yRfBBrrvvj+AH7ZBrfR2I4LeL
3Tz3PRjB31MyWYIlDMH/CPYwgq9uyAH0MYIf03/oq0YMgg8Lz9MLXbd9/rvE
HhaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC
+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPEBe8TuBg==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.4, 0}, {3.42, 0.041}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQHdN/6KtGDLcDAxRMfFtjbxqH4B/zNu90TEDw/6z8
eMk3CcE34lgjE5WC4KeBAYI/+4jChqIMBP+i0u2fdVkIPlvjVOfuHATf5r5/
7/Q8BL/Aluv64gIEfxnYQAT/FtC0PSUIvkCE5ZYTZQi+27bPf69UIPjVIuvc
H1Yh+EDHAb2M4D+7AHIggi+tf1eFrRHBDwC6TqgZwW99HbhDrhXBh4XnrJkg
sNIeFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxY
eML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8QFp4esD

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.42, 0}, {3.44, 0.05}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2EAxvHPJKnpkM7ZaJMS6xRlGjskO6SiSztlkWRlJrZDZCaZtCSp
JDWZmEk6ZJIkkw5d0yFJh5kd1mViXbbv09/z8nr9Lg/v3zm/Mr1gMwyjv3nN
N1mZuu1JdviM/1OYsNsGNuWfbDEwvCW7Wjf2/Sl5LjT6Obktpx9rfcEd+clx
FVnclevrS3fRPdnz0dtclK25A/no0Dzy6+/M98Wx3DLbOXh9Io/cPK/dn8rh
rsTDy5mcWfW2v2Xkd2tQNteqWdmfWi79XcqxsnuoLSfnx7/i3XmZntY3wudj
9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xA35qt/8

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.44, 0}, {3.46, 0.036}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2Ecx/HXdCqSZDql7ZRWx8kOWR1ml4wV2WFmRpfY6rRD0qWSLu3Y
SJSZ6TKZZGZmJplJZmLSKUmHJEmUxN731dfv4fH4XP7+z9eVWFtccRiGMWle
6y0GHzdGigNzxv95yh9djZ/Lo33Lg9MlOZQYivgu5J166zRwKZfHdl/DZflt
0++NVWT3w8/WalU2hzXTNfngMDW8XZcbXxPRTEP+XrI2lKdKx++Fa9leryln
rXEt+cY+ssOz57y/lWf25+PPbTn58nv20ZHNz37+3cnd3Ppsf1em54I96MRP
T0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xP3AP2feF9

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.46, 0}, {3.48, 0.033}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0DFIglEUhuEfpyhpkoKIQAeRQqKpQUIrpMGpgoZwsEhoCAqHSEdBIhqi
oS2RaAoqokGaIhoTpCEQkQgRCamIEBURIf/y9TtwuTzL4d7Xvr69FLYYhjHe
OeadO9+Z6c8N+IzuWC0T+0N5eS5UfnYU5N371Mjkq3w1urrheZOLMdv1QlEe
zmcbyyU5MH0wGyrL8ZP5w613OV1tv+xV5M/Fu7HEh2y/iWwef8krg+7b5Lfc
Wda6+JEfns786apcdwWPHmuy+dtsQ14zv9uU/57XkjPmurb8P9ae6RmtOKf6
Lk+99MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xL/k
59yE
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.48, 0}, {3.5, 0.028}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQE8DjCWadwuTx4mBD9rT8lkCRYEf4GU/l0VNgT/
WsVLNUMOBJ/r+uICWy4E3wFsIIIPMi2MD8Ff9fGSb5IAgv/Av3d6nhCCL7LO
/WGVCILvxcOk3S6G4DeAHYjgbzlRtm++FIL/Cui6NTIIvnzr68Adcgh+yOOl
s48oIPhdjglPLygh+PvngzyM4H/5ewXoYwRfM6b/0FcNBB8CeByiUqzvA71i
DwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxh
fFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wvgAwmy+cA==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.5, 0}, {3.52, 0.023}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQrRnTf+irBo8DAxTE7fLkYdJG8KdIsITx6SL4J8v2
zZfSR/D/X6l4qWaI4JsYgwCCnznxbY29KYI/7/3yY97mCP4V3ySBCEsEn2ON
TFSKNYJvx3V9cYEtgl+cATIQwV8BNK3TEcG/p8LWONUZwRdqPnBqoSuC7/Gw
SmSdO4Jfa28K8jKcv2kuyIEI/vPfKz9e8kXwZYGuu++P4AftkGt9HYjgw8JT
Wv8uyCX2sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHh
CePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8A
x7q2Dg==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.52, 0}, {3.54, 0.021}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQHbRDrvV1II8DAxS0i9089z0Ywd9TMlmCJQzB/3TJ
N0kgAsHXMORYIxOF4Mf2H/qqEYPgT3pbY28ah+Af8zbvdExA8P+s/Ag0EcE3
AhmXguCngQGCP+eIwoaiDAT/ktLtn3VZCD5b41Tn7hwE3+a+f+/0PAS/wJbr
+uICBH/ZbJCBCD7ItD0lCL5ghOWWE2UIvuu2z3+vVCD41SLr3B9WIfiw8ATp
2je/yx4WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxh
fFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxAe1T
418=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.54, 0}, {3.56, 0.013}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQXS2yzv1hFY8DAxSsL8qY+LYGwX92Qen2zzoEX0r/
rgpbI4If2Ds9T6gZwW99HbhDrhXB3+3Jw6TdjuC/X37M27wTwVdja5zq3I3g
R6VY3/fvRfAnHPqqEdOP4B9V2AB0IYL/qy5rT8lkBB/svKkIPti46Qj+rJkg
gOCf/x78eOlsBJ81jE9301wE33LLibJ98xH8fKHmA6cWIvhLCmy5ri9G8GHh
CQwEYEj02cPCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aH
hSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+
AA+W4Vw=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.56, 0}, {3.58, 0.015}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0DFIgkEYh/GPaJCICHFokoKIEBQcHBrChqItqEAawsFwkVAHcbBoqaYg
xwJpiBIRRCIiRCRERUSqNaIpDCKCmiKjpe+gh/8Lx/FbXu6eiUhiJTpgWZbH
PuY+T84OPZwNz1n/83j/vdrLyyPey5PPgjx/sPn6W5Qzb1N+R0kuLz5nXGX5
JZ9rjV/IY4Mhe6W8FBldm7mS9+rd04VrueLef1+uyB/bwUC4Kk8+/ezEarK9
rJO+kQ+P4s7dutz8ml7PNuS+/dtcS/aZ77blDfO8jnxs1nXlu1szMj23XKZE
KkhPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE/8B8BB
4l4=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.58, 0}, {3.6, 0.005}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/HWftNI2ZWKeUdGwkrSVd6lCjw3TINHYoy07TaSKZHaZD
xyQ7jUk6ZKeo49QkUTNJy0wmSdYOK3r/6ev38np9Lo/n/QZiyaW4w7KsYXPt
9/rKPq6Q9X8cI7v9taoczE6vNm/kjVav+HErF2bPPn/u5IfC5qTzXu77GyiH
zbTBupw+P/SNPcolf3Rt4klubHmO555lb63ajbzI8+P2gvL2/kxuvSXb26Vf
5fZieWCnLQdOUom9N3nZPXp68C6bYebD8kXlyPxY/hpayV92ZHp+m0oLscwU
PTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE98S+VRQVT

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.6, 0}, {3.62, 0.008}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ/U0jpv/QVx4HBijQbhe7ee47gp/w9ILS7Z8I/jTn
7pznvxH8Mwtdt33+i+BDAC+cbxa3y5OHCcHP2lMyWYIFwV8gpX9XhQ3Bv1bx
Us2QA8Hnur64wJYLwXcwBRmI4JcBTQvjQ/BXfbzkmySA4D/w752eJ4Tgi6xz
f1glguB78TABvYzg14MdiOBvPVG2b74Ugg9y3RoZBF++9XXgDjkEHxaev+pA
BmXYw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wP
C08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4A9KXU
bA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.62, 0}, {3.64, 0.003}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLd/6OnCHHK8DAxQEP146+4gCgt/lmPD0ghKCv2++
lP5dFQT/698rFS/VEHzNmP5DXzUQ/PhdnjxM2gj+ZAmWMD5dBP9UGchEBP8f
yDhDBN/EGAQQ/MyJb2vsTRH8ee+XH/M2R/Av+yYJRFgi+BxrZKJSrBF8O67r
iwtsEfziDJCBCP5KoGmdjgj+XRW2xqnOCL5w84FTC10RfI+HVSLr3BF8WHhW
A0UfVpXYw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeF
J4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4A
I2HJgA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.64, 0}, {3.66, 0.005}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ7fGwSmSdO68DAxTU2pvG7fJE8DfNfb/8mDeC/+L3
yo+XfBF8uagU6/v+CH7QDrnW14EIfofYzXPfgxH8PSWTJVjCEPxPl3yTBCIQ
fA1DjjUyUQh+TP+hrxoxCP6ktzVAFyL4J7zNOx0TEPw/IOclIfhGIONSEPz0
NBBA8OccUdhQlIHgX1K6/bMuC8Fnb5zq3J2D4Nvc9++dnofgF9pyXV9cgODD
wvNXXRbQqxn2sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE
8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4Un
jA8AG7zhGg==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.66, 0}, {3.68, 0.003}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/HXZIHTYdky0zqUPHmaTYYZKpdZp0msbs0GoymRmTSjJr
MrPtOJYuKZKkUyodk+hQSZcuiSU7bIr2T1+/h9frc3m9z9cZjs9GLIZhDHWO
eS+PdT3UlnomjP+pVy8dhwn5qZWJna/ItpD3+CYp+0++fu5X5XTvgf81JR8l
ooWPtPx2O/DYysh9I88ua1YO5kqL9jV54z142r8un012W4Y35cbe9ZRnS3Zb
s0Xftjy3MPoynZN3LpqD83n5qrNttCC3zXV35b/vFeWI+VxJrpTNken5vf95
FwjPjNMT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xP/
AiwN7tI=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.68, 0}, {3.7, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLbLO/WGVCJ8DAxR48jBpt4sh+PVZe0omSyD4W06U
7ZsvheC/UjPkWCOD4Mu1vg7cIYfghzxeOvuIAoLf4Zjw9IISgg80TP+uCoL/
5e+VipdqCL5GTP+hrxoIftwukAsR/MkSLGF8ugg+2Hn6CD7YOEME3xgMEPyM
iW9r7E0R/Lnvlx/zNkfwL/kmCURYIvhAz0alWCP4tlzXFxfYIviw8Pyz8iNQ
a4A9LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw
8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ4wMA1z3c
HA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.76, 0}, {3.78, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQbct1fXGBLZ8DAxQUZUx8W2OP4C8/5m3e6Yjg31Fh
a5zqjOALNR84tdAVwfd4WCWyzh3Br7U3jdvlieBvnPseaCSC//z3yo+XfBF8
2agU6/v+CH7QDrnW14EIfpvYzXPfgxH8PSWTJVjCEHygYUkCEQi+miHHGpko
BD+6/9BXjRgEH+Rb0zgEH+zdBAT/D8h5SQi+Aci4FAQ/DQwQfFh4QvQF2MPC
E8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8W
njA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+AN8/5mY=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], 
       RectangleBox[{3.78, 0}, {3.8, 0.001}]}}}, {}, {}}, {{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.9228, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotRange->{{2.94, 3.8}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 
   3.81498243520617*^9},ExpressionUUID->"80ded649-0027-4e21-8b92-\
2b5186e88429"]
}, Open  ]],

Cell["\<\
So what are we doing here ? We\[CloseCurlyQuote]re not here to spank frogs, \
right ? :))

We first run a single simulation (with n*m samples=10^7).
Then we run multiple simulations (each with n samples=10^4) * (m=10^3) \
replicates.

At least in Mathematica, - the latter approach is always faster than the \
former (use AbsoluteTiming to check this)

Let\[CloseCurlyQuote]s first quantify the relative % of our simulations.\
\>", "Text",
 CellChangeTimes->{{3.814708641579577*^9, 3.8147087112429743`*^9}, {
  3.8147089266795797`*^9, 3.814708978315426*^9}, {3.814709878069063*^9, 
  3.814710031047715*^9}, {3.814710205580432*^9, 3.814710252019003*^9}, {
  3.814714998764003*^9, 3.8147150087323217`*^9}, {3.814716096203259*^9, 
  3.8147161234048233`*^9}, {3.8148117556296787`*^9, 
  3.8148117652813463`*^9}},ExpressionUUID->"e5396741-248d-4e03-8a12-\
c1550f41f211"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
  RowBox[{"100", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Rnm", "/", "RnXm"}], ")"}], "-", "1"}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.814709852717937*^9, 3.814709861761644*^9}, {
   3.814714694591484*^9, 3.8147147017011433`*^9}, {3.8147148954652452`*^9, 
   3.814714897693767*^9}, 3.814715876061018*^9, {3.814715963566564*^9, 
   3.814715964058404*^9}, {3.814818557458026*^9, 
   3.814818557701455*^9}},ExpressionUUID->"a35864f0-5f70-49d5-870f-\
7dd827ce211a"],

Cell[BoxData[
 TemplateBox[{"0.2632169388894434`","\"%\"","percent","\"Percent\""},
  "QuantityPostfix"]], "Output",
 CellChangeTimes->{
  3.8147098634161043`*^9, 3.8147114211405983`*^9, 3.814713453880577*^9, 
   3.814714704348358*^9, 3.814714898269498*^9, 3.814715457825021*^9, 
   3.814715877413582*^9, 3.814715965132703*^9, 3.814726413833947*^9, 
   3.8147265484844713`*^9, 3.814729442499831*^9, 3.814729676129414*^9, 
   3.8147298389944696`*^9, 3.814784176878827*^9, 3.8147852646570683`*^9, 
   3.814786870777063*^9, 3.81478718087939*^9, 3.814787248243136*^9, 
   3.81479056725366*^9, 3.814795548627891*^9, 3.8147957048149652`*^9, 
   3.814799148752632*^9, 3.814799252498399*^9, 3.814803530551177*^9, 
   3.81480877016459*^9, 3.814816040901528*^9, 3.814817059177421*^9, 
   3.814817202084607*^9, 3.814817937310122*^9, 3.814818381015332*^9, {
   3.814818552200539*^9, 3.8148185636278677`*^9}, 3.814819920305736*^9, 
   3.814962876749695*^9, 3.8149642733123903`*^9, 3.814965663052773*^9, 
   3.814968800457807*^9, 3.814982316941934*^9, 
   3.8149824354739027`*^9},ExpressionUUID->"361a5612-38f2-4346-9ed9-\
0b4139e89999"]
}, Open  ]],

Cell["\<\

Let\[CloseCurlyQuote]s start our analysis with data00, ie. the one from the \
n*m simulation,
using Mathematica buildin stuff for that\
\>", "Text",
 CellChangeTimes->{{3.8147125951507874`*^9, 3.8147126203738422`*^9}, {
  3.814712787301056*^9, 
  3.814712805772863*^9}},ExpressionUUID->"ac882883-33df-42dc-9e21-\
2cb3ee05a1f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Variance", "[", "data00", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "data00", "]"}]}], "Input",
 CellChangeTimes->{{3.8147114594209347`*^9, 3.814711467878871*^9}, {
  3.814711586025182*^9, 3.814711596893045*^9}, {3.814711883183921*^9, 
  3.814711884923089*^9}, {3.81471249664911*^9, 
  3.814712503713945*^9}},ExpressionUUID->"e5c3e432-24ea-4a05-b22c-\
af029556e535"],

Cell[BoxData["1.7739702473685661`"], "Output",
 CellChangeTimes->{
  3.814712627300518*^9, 3.814713172838696*^9, 3.81471345389356*^9, 
   3.814713775452338*^9, 3.8147154766769333`*^9, 3.8147262453710213`*^9, 
   3.814726287447631*^9, 3.8147264178586483`*^9, 3.814726553419548*^9, 
   3.814729442528907*^9, 3.814729677888158*^9, 3.814729839010129*^9, 
   3.814784176886321*^9, 3.814785264666403*^9, 3.814786870785884*^9, 
   3.814787180888213*^9, 3.8147872482510777`*^9, 3.8147905672643948`*^9, 
   3.8147955507181587`*^9, 3.8147957057673492`*^9, 3.814799148775929*^9, 
   3.814799252540175*^9, 3.814803530604892*^9, 3.814808770197372*^9, 
   3.814816040952621*^9, 3.814817059212227*^9, 3.814817202110353*^9, 
   3.8148179373435497`*^9, 3.814818381021797*^9, {3.814818565820239*^9, 
   3.814818580012062*^9}, 3.814819920314556*^9, 3.8149628767558403`*^9, 
   3.814964273318884*^9, 3.814965663057682*^9, 3.814968800462873*^9, 
   3.814982316947686*^9, 
   3.814982435481744*^9},ExpressionUUID->"e33cdac0-9fbc-4ecc-9392-\
ce9d48c647ea"],

Cell[BoxData["1.331904744104685`"], "Output",
 CellChangeTimes->{
  3.814712627300518*^9, 3.814713172838696*^9, 3.81471345389356*^9, 
   3.814713775452338*^9, 3.8147154766769333`*^9, 3.8147262453710213`*^9, 
   3.814726287447631*^9, 3.8147264178586483`*^9, 3.814726553419548*^9, 
   3.814729442528907*^9, 3.814729677888158*^9, 3.814729839010129*^9, 
   3.814784176886321*^9, 3.814785264666403*^9, 3.814786870785884*^9, 
   3.814787180888213*^9, 3.8147872482510777`*^9, 3.8147905672643948`*^9, 
   3.8147955507181587`*^9, 3.8147957057673492`*^9, 3.814799148775929*^9, 
   3.814799252540175*^9, 3.814803530604892*^9, 3.814808770197372*^9, 
   3.814816040952621*^9, 3.814817059212227*^9, 3.814817202110353*^9, 
   3.8148179373435497`*^9, 3.814818381021797*^9, {3.814818565820239*^9, 
   3.814818580012062*^9}, 3.814819920314556*^9, 3.8149628767558403`*^9, 
   3.814964273318884*^9, 3.814965663057682*^9, 3.814968800462873*^9, 
   3.814982316947686*^9, 
   3.814982435483371*^9},ExpressionUUID->"d0616b4f-ca25-4c9a-970f-\
65d606a3309a"]
}, Open  ]],

Cell["\<\

Now go for the usual approach where we pretend to have the true value to \
compare against\
\>", "Text",
 CellChangeTimes->{{3.814712813785372*^9, 3.814712851247305*^9}, {
  3.814712969866716*^9, 
  3.8147129712860317`*^9}},ExpressionUUID->"064e2c99-6ce1-4310-9d53-\
ff6c8e58f95f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sqr", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqr", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"data00", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<variance\>\"", ",", 
   RowBox[{"VARt", "=", 
    RowBox[{"sqr", "/", 
     RowBox[{"(", 
      RowBox[{"n", "*", "m"}], ")"}]}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<std\>\"", ",", 
    RowBox[{"STDt", "=", 
     SqrtBox["VARt"]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSEt\>\"", ",", 
   SqrtBox[
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"data00", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
          "-", "STDt"}], ")"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "*", "m"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "*", "m"}], ")"}], "-", "1"}], ")"}]}]]]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814710710666909*^9, 3.814710774607411*^9}, {
   3.814711069020011*^9, 3.81471107358739*^9}, {3.814711141133284*^9, 
   3.8147111758050613`*^9}, 3.814711227719679*^9, 3.814711267362607*^9, 
   3.8147112977123327`*^9, {3.8147114544949713`*^9, 3.814711456514471*^9}, {
   3.8147116113436127`*^9, 3.814711646618533*^9}, {3.814711681156907*^9, 
   3.81471169155311*^9}, {3.814711890226179*^9, 3.8147118903852673`*^9}, 
   3.814712282246616*^9, {3.814712352852582*^9, 3.8147124716278353`*^9}, 
   3.814712645802086*^9, {3.814712702344667*^9, 3.814712711771343*^9}, {
   3.814713673536193*^9, 3.8147136806472397`*^9}, {3.814713976450911*^9, 
   3.8147139926516743`*^9}, 3.81471441027512*^9, {3.814715301011181*^9, 
   3.814715332146903*^9}, 
   3.814726301720748*^9},ExpressionUUID->"b914ebd7-5986-496e-9547-\
c32c075c2305"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"variance\"\>", ",", "1.773954960196389`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147137147629004`*^9, 3.8147139936535892`*^9, 3.814714415157167*^9, 
   3.814715419310925*^9, 3.81471547961193*^9, 3.814726249107481*^9, {
   3.8147262894314938`*^9, 3.8147263031726427`*^9}, 3.81472642018493*^9, 
   3.81472655546068*^9, 3.814729442937716*^9, 3.8147296823897038`*^9, 
   3.814729839412221*^9, 3.814784177239046*^9, 3.814785265028225*^9, 
   3.814786871135749*^9, 3.814787181256057*^9, 3.814787248598453*^9, 
   3.814790567637266*^9, 3.814795556211334*^9, 3.814795706960905*^9, 
   3.8147991491422443`*^9, 3.814799255799646*^9, 3.814803533856923*^9, 
   3.8148087735125837`*^9, 3.814816044428259*^9, 3.814817062600294*^9, 
   3.81481720218301*^9, 3.814817937387951*^9, 3.814818381078477*^9, {
   3.814818418425796*^9, 3.8148184269015007`*^9}, 3.814818578053851*^9, 
   3.814819920393755*^9, 3.814962876834833*^9, 3.814964273389505*^9, 
   3.814965663126851*^9, 3.814968800520561*^9, 3.81498231701904*^9, 
   3.814982435569083*^9},ExpressionUUID->"a9e04b19-b4fe-42a5-9bce-\
11ab9bb0c04d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.3318990052539228`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147137147629004`*^9, 3.8147139936535892`*^9, 3.814714415157167*^9, 
   3.814715419310925*^9, 3.81471547961193*^9, 3.814726249107481*^9, {
   3.8147262894314938`*^9, 3.8147263031726427`*^9}, 3.81472642018493*^9, 
   3.81472655546068*^9, 3.814729442937716*^9, 3.8147296823897038`*^9, 
   3.814729839412221*^9, 3.814784177239046*^9, 3.814785265028225*^9, 
   3.814786871135749*^9, 3.814787181256057*^9, 3.814787248598453*^9, 
   3.814790567637266*^9, 3.814795556211334*^9, 3.814795706960905*^9, 
   3.8147991491422443`*^9, 3.814799255799646*^9, 3.814803533856923*^9, 
   3.8148087735125837`*^9, 3.814816044428259*^9, 3.814817062600294*^9, 
   3.81481720218301*^9, 3.814817937387951*^9, 3.814818381078477*^9, {
   3.814818418425796*^9, 3.8148184269015007`*^9}, 3.814818578053851*^9, 
   3.814819920393755*^9, 3.814962876834833*^9, 3.814964273389505*^9, 
   3.814965663126851*^9, 3.814968800520561*^9, 3.81498231701904*^9, 
   3.8149824355706997`*^9},ExpressionUUID->"475e73bf-a45a-4f50-9f62-\
cd60443aa5f9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSEt\"\>", ",", "0.011923305106375237`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147137147629004`*^9, 3.8147139936535892`*^9, 3.814714415157167*^9, 
   3.814715419310925*^9, 3.81471547961193*^9, 3.814726249107481*^9, {
   3.8147262894314938`*^9, 3.8147263031726427`*^9}, 3.81472642018493*^9, 
   3.81472655546068*^9, 3.814729442937716*^9, 3.8147296823897038`*^9, 
   3.814729839412221*^9, 3.814784177239046*^9, 3.814785265028225*^9, 
   3.814786871135749*^9, 3.814787181256057*^9, 3.814787248598453*^9, 
   3.814790567637266*^9, 3.814795556211334*^9, 3.814795706960905*^9, 
   3.8147991491422443`*^9, 3.814799255799646*^9, 3.814803533856923*^9, 
   3.8148087735125837`*^9, 3.814816044428259*^9, 3.814817062600294*^9, 
   3.81481720218301*^9, 3.814817937387951*^9, 3.814818381078477*^9, {
   3.814818418425796*^9, 3.8148184269015007`*^9}, 3.814818578053851*^9, 
   3.814819920393755*^9, 3.814962876834833*^9, 3.814964273389505*^9, 
   3.814965663126851*^9, 3.814968800520561*^9, 3.81498231701904*^9, 
   3.814982435625545*^9},ExpressionUUID->"63da2593-4088-4200-9758-\
bde3824b5845"]
}, Open  ]],

Cell["\<\

Let\[CloseCurlyQuote]s take a full sim estimated outcome and use it as true \
value for our error estimation (aka empirical error)\
\>", "Text",
 CellChangeTimes->{{3.814713012121365*^9, 3.81471303532019*^9}, {
  3.814713281087901*^9, 3.8147132851366796`*^9}, {3.8147136084174137`*^9, 
  3.814713616473361*^9}},ExpressionUUID->"f8d88617-9790-4647-ad1e-\
68776d67fae6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "eValue", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eValue", "=", 
    RowBox[{"data03", "[", 
     RowBox[{"[", 
      RowBox[{"RandomInteger", "[", "100", "]"}], "]"}], "]"}]}], ";"}], " ", 
  
  RowBox[{"(*", " ", 
   RowBox[{"point", " ", "estimator"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<variance\>\"", ",", 
   RowBox[{"VARe", "=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"data00", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", "eValue"}], ")"}], "2"], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}], " ", "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", "*", "m"}], "-", "1"}], ")"}]}], ")"}]}]}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<std\>\"", ",", 
    RowBox[{"STDe", "=", 
     SqrtBox["VARe"]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSEe\>\"", ",", 
   RowBox[{"MCSE", " ", "=", " ", 
    RowBox[{"STDe", "/", 
     SqrtBox[
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "*", "m"}], ")"}], "-", "1"}], ")"}]}]]}]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814713049901511*^9, 3.8147131218770323`*^9}, {
   3.8147132323983707`*^9, 3.8147132350293417`*^9}, {3.814713306788096*^9, 
   3.814713347757819*^9}, {3.814713740988481*^9, 3.814713748885569*^9}, {
   3.814714005139617*^9, 3.814714026404538*^9}, {3.814714194707155*^9, 
   3.814714260291024*^9}, 3.814714412302628*^9, {3.814715359172112*^9, 
   3.8147153635562153`*^9}, {3.814726336954247*^9, 3.8147263697778597`*^9}, {
   3.8147852203848057`*^9, 
   3.814785237305954*^9}},ExpressionUUID->"8078f9d9-c18b-4a77-be62-\
8d007b4dec35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"variance\"\>", ",", "1.825138250053522`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148183811673193`*^9, {3.81481841648955*^9, 3.814818428212816*^9}, 
   3.8148199204830627`*^9, 3.814962876911448*^9, 3.81496427350386*^9, 
   3.814965663198406*^9, 3.8149688006067467`*^9, 3.814982317091763*^9, 
   3.8149824356791487`*^9},ExpressionUUID->"40181492-f6ed-4797-9e10-\
8c91dff95e31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.3509767762820803`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148183811673193`*^9, {3.81481841648955*^9, 3.814818428212816*^9}, 
   3.8148199204830627`*^9, 3.814962876911448*^9, 3.81496427350386*^9, 
   3.814965663198406*^9, 3.8149688006067467`*^9, 3.814982317091763*^9, 
   3.8149824356816683`*^9},ExpressionUUID->"a2868a36-c687-4471-b4dc-\
67e5a54ee49c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSEe\"\>", ",", "0.0030208910122830803`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148183811673193`*^9, {3.81481841648955*^9, 3.814818428212816*^9}, 
   3.8148199204830627`*^9, 3.814962876911448*^9, 3.81496427350386*^9, 
   3.814965663198406*^9, 3.8149688006067467`*^9, 3.814982317091763*^9, 
   3.814982435683387*^9},ExpressionUUID->"5c07166a-d272-4175-9fc1-\
22bff659915f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\"\<Theoretical VS Estimated STDerror\>\"", ",", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"STDt", "/", "STDe"}], ")"}], "-", "1"}], ")"}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.814715673899776*^9, 
  3.814715758137227*^9}},ExpressionUUID->"82e55449-c9a3-4838-b967-\
a1592550e009"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Theoretical VS Estimated STDerror\"\>", ",", 
   TemplateBox[{
    RowBox[{"-", "1.4121464826849173`"}],"\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.814715674807227*^9, 3.814715759420179*^9}, 
   3.814726438532843*^9, 3.8147265643142357`*^9, 3.8147294436895437`*^9, 
   3.814729692285858*^9, 3.814729840143429*^9, 3.814784177924748*^9, 
   3.814785265724917*^9, 3.8147868718126163`*^9, 3.814787181951652*^9, 
   3.814787249279351*^9, 3.814790568322462*^9, 3.8147957133928947`*^9, 
   3.814799149844674*^9, 3.814799262314782*^9, 3.814803540422226*^9, 
   3.814808780109281*^9, 3.8148160512549343`*^9, 3.814817069311557*^9, 
   3.814817202320427*^9, 3.814817937501395*^9, 3.814818381191348*^9, 
   3.814819920508307*^9, 3.814962876924321*^9, 3.8149642735262947`*^9, 
   3.814965663225122*^9, 3.8149688006265097`*^9, 3.814982317103549*^9, 
   3.814982435702853*^9},ExpressionUUID->"4d9a7a85-c4d5-439a-b113-\
a91dbc490c3e"]
}, Open  ]],

Cell["\<\

Here instead let\[CloseCurlyQuote]s pretend we don\[CloseCurlyQuote]t have a \
clue of what\[CloseCurlyQuote]s the true outcome will be, so we estimate the \
variance and std \
\>", "Text",
 CellChangeTimes->{{3.814712860563176*^9, 3.814712884793777*^9}, {
  3.814787069639797*^9, 
  3.8147870768594913`*^9}},ExpressionUUID->"5a308521-d230-47d0-b5f1-\
e33d36794717"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"k", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"data00", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "n"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"data00", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}], ")"}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<variance\>\"", ",", 
   RowBox[{"VARes", "=", 
    RowBox[{
     FractionBox["n", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]], "*", 
     RowBox[{"(", 
      RowBox[{"k", "-", "y"}], ")"}]}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<std\>\"", ",", 
   RowBox[{"STDes", "=", 
    SqrtBox["VARes"]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.814712669858412*^9, 3.814712684839019*^9}, {
  3.814712732695759*^9, 3.814712774411645*^9}, {3.81471401663913*^9, 
  3.814714030159507*^9}, {3.814714208994928*^9, 3.814714222804762*^9}, {
  3.814716169241906*^9, 
  3.814716176773497*^9}},ExpressionUUID->"f9ff74b2-37fd-434a-9f4c-\
438abd9a3b96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"variance\"\>", ",", "2.3723140276666554`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8147126773123007`*^9, 3.814712686343128*^9}, 
   3.8147127760983877`*^9, 3.8147134555434647`*^9, {3.814713763501842*^9, 
   3.814713770509067*^9}, 3.8147140314078197`*^9, 3.8147142788821363`*^9, 
   3.8147144253060513`*^9, {3.814715426858527*^9, 3.8147154403193607`*^9}, 
   3.814715487836131*^9, 3.814715768653064*^9, 3.814716185526002*^9, 
   3.814726442679785*^9, 3.814726474865061*^9, 3.814726566497527*^9, 
   3.8147294442708483`*^9, {3.814729694474951*^9, 3.814729704121602*^9}, 
   3.814729840722311*^9, 3.814784178492443*^9, 3.81478526632364*^9, 
   3.8147868723650293`*^9, 3.814787182525104*^9, 3.8147872498605223`*^9, 
   3.814790568884207*^9, 3.8147957145206013`*^9, 3.8147957669417257`*^9, 
   3.8147991504224033`*^9, 3.814799268028763*^9, 3.8148035461311903`*^9, 
   3.814808785796071*^9, 3.814816057228032*^9, 3.814817075196002*^9, 
   3.8148172023451223`*^9, 3.81481793752017*^9, {3.814818358576638*^9, 
   3.814818381214822*^9}, 3.8148184116631947`*^9, 3.814818601389256*^9, 
   3.814819920530714*^9, 3.814962876963599*^9, 3.814964273545285*^9, 
   3.814965663236158*^9, 3.814968800647686*^9, 3.814982317132695*^9, 
   3.814982435735458*^9},ExpressionUUID->"4a5845e1-bf65-4588-8306-\
c72ab3a83db7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.540231809717828`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8147126773123007`*^9, 3.814712686343128*^9}, 
   3.8147127760983877`*^9, 3.8147134555434647`*^9, {3.814713763501842*^9, 
   3.814713770509067*^9}, 3.8147140314078197`*^9, 3.8147142788821363`*^9, 
   3.8147144253060513`*^9, {3.814715426858527*^9, 3.8147154403193607`*^9}, 
   3.814715487836131*^9, 3.814715768653064*^9, 3.814716185526002*^9, 
   3.814726442679785*^9, 3.814726474865061*^9, 3.814726566497527*^9, 
   3.8147294442708483`*^9, {3.814729694474951*^9, 3.814729704121602*^9}, 
   3.814729840722311*^9, 3.814784178492443*^9, 3.81478526632364*^9, 
   3.8147868723650293`*^9, 3.814787182525104*^9, 3.8147872498605223`*^9, 
   3.814790568884207*^9, 3.8147957145206013`*^9, 3.8147957669417257`*^9, 
   3.8147991504224033`*^9, 3.814799268028763*^9, 3.8148035461311903`*^9, 
   3.814808785796071*^9, 3.814816057228032*^9, 3.814817075196002*^9, 
   3.8148172023451223`*^9, 3.81481793752017*^9, {3.814818358576638*^9, 
   3.814818381214822*^9}, 3.8148184116631947`*^9, 3.814818601389256*^9, 
   3.814819920530714*^9, 3.814962876963599*^9, 3.814964273545285*^9, 
   3.814965663236158*^9, 3.814968800647686*^9, 3.814982317132695*^9, 
   3.8149824357496557`*^9},ExpressionUUID->"b0fcf6fb-7adf-41c9-ac06-\
db458db4e687"]
}, Open  ]],

Cell["\<\

We\[CloseCurlyQuote]re a bit less precise but jeez really enough ;) \
considering we ain\[CloseCurlyQuote]t using the true nor the estimated \[Mu] !\
\>", "Text",
 CellChangeTimes->{{3.814713806665291*^9, 3.8147138581455507`*^9}, 
   3.81471474552649*^9},ExpressionUUID->"d759b942-a554-46dc-8617-\
6e13e5939cb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"\"\<Against theoretical STDerror\>\"", ",", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"STDt", "/", "STDes"}], ")"}], "-", "1"}], ")"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Against empirical STDerror\>\"", ",", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"STDe", "/", "STDes"}], ")"}], "-", "1"}], ")"}]}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814713899442954*^9, 3.814713945310247*^9}, {
  3.8147140524141006`*^9, 3.8147141737100487`*^9}, {3.8147147366645727`*^9, 
  3.814714762692114*^9}, {3.814714796354529*^9, 3.8147148778686934`*^9}, {
  3.814715068943304*^9, 3.814715119116251*^9}, {3.814715208850518*^9, 
  3.814715220949819*^9}, {3.814715504006308*^9, 3.814715505622032*^9}, {
  3.814715594360238*^9, 3.814715597264389*^9}, {3.814716180420844*^9, 
  3.814716196325416*^9}},ExpressionUUID->"0f409b9c-068b-4fde-9767-\
f63675d6118e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Against theoretical STDerror\"\>", ",", 
   TemplateBox[{
    RowBox[{"-", "13.526068163861138`"}],"\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.814714831866251*^9, 3.814714879308915*^9}, {
   3.814715097222473*^9, 3.814715120845584*^9}, 3.814715222112804*^9, 
   3.8147153909603577`*^9, {3.814715435919341*^9, 3.814715443519816*^9}, {
   3.814715492834436*^9, 3.81471550668148*^9}, 3.8147156015597973`*^9, 
   3.814715770955049*^9, {3.8147161882388687`*^9, 3.81471619742927*^9}, {
   3.814726449739275*^9, 3.814726452520022*^9}, 3.814726485377389*^9, 
   3.81472657095168*^9, 3.814729444308776*^9, {3.8147296973892403`*^9, 
   3.814729705610672*^9}, 3.814729840761321*^9, 3.814784178512664*^9, 
   3.8147852663450108`*^9, 3.81478687238868*^9, 3.814787182545601*^9, 
   3.81478724988031*^9, 3.814790568908237*^9, 3.814799150447261*^9, 
   3.8147992680741377`*^9, 3.81480354617557*^9, 3.8148087858404818`*^9, 
   3.8148160572693377`*^9, 3.814817075231661*^9, 3.81481720237298*^9, 
   3.8148179375558033`*^9, 3.8148183812421083`*^9, 3.814818437896695*^9, 
   3.814818599183893*^9, 3.814819920568919*^9, 3.8149628769990377`*^9, 
   3.814964273581106*^9, 3.814965663266749*^9, 3.81496880066923*^9, 
   3.814982317161026*^9, 
   3.814982435769376*^9},ExpressionUUID->"4eb5a756-466c-445c-ad37-\
c1d7df5079cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Against empirical STDerror\"\>", ",", 
   TemplateBox[{
    RowBox[{"-", "12.28743830906982`"}],"\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.814714831866251*^9, 3.814714879308915*^9}, {
   3.814715097222473*^9, 3.814715120845584*^9}, 3.814715222112804*^9, 
   3.8147153909603577`*^9, {3.814715435919341*^9, 3.814715443519816*^9}, {
   3.814715492834436*^9, 3.81471550668148*^9}, 3.8147156015597973`*^9, 
   3.814715770955049*^9, {3.8147161882388687`*^9, 3.81471619742927*^9}, {
   3.814726449739275*^9, 3.814726452520022*^9}, 3.814726485377389*^9, 
   3.81472657095168*^9, 3.814729444308776*^9, {3.8147296973892403`*^9, 
   3.814729705610672*^9}, 3.814729840761321*^9, 3.814784178512664*^9, 
   3.8147852663450108`*^9, 3.81478687238868*^9, 3.814787182545601*^9, 
   3.81478724988031*^9, 3.814790568908237*^9, 3.814799150447261*^9, 
   3.8147992680741377`*^9, 3.81480354617557*^9, 3.8148087858404818`*^9, 
   3.8148160572693377`*^9, 3.814817075231661*^9, 3.81481720237298*^9, 
   3.8148179375558033`*^9, 3.8148183812421083`*^9, 3.814818437896695*^9, 
   3.814818599183893*^9, 3.814819920568919*^9, 3.8149628769990377`*^9, 
   3.814964273581106*^9, 3.814965663266749*^9, 3.81496880066923*^9, 
   3.814982317161026*^9, 
   3.814982435784718*^9},ExpressionUUID->"4284f43a-1972-45a3-a754-\
bf6d363acf1f"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nTill here we saw the error statistics for the single simulation with n*m.\
\n\n",
 StyleBox["Let\[CloseCurlyQuote]s now see the the m replicated simulation \
statistics.\n",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.8147266688265142`*^9, 3.814726739189958*^9}, {
   3.8147271919740353`*^9, 3.814727203201777*^9}, 3.8147293746715727`*^9, {
   3.81481700562773*^9, 
   3.814817010080853*^9}},ExpressionUUID->"be776475-8693-40ad-85ce-\
45456beea311"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Variance", "[", "data03", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "data03", "]"}]}], "Input",ExpressionUUID->\
"6350423e-8636-4fce-9d78-38679fa88d15"],

Cell[BoxData["0.017756068208946856`"], "Output",
 CellChangeTimes->{3.814787636446044*^9, 3.8147905689288263`*^9, 
  3.8147991504675303`*^9, 3.8147991984263163`*^9, 3.814799268099617*^9, 
  3.81479955718646*^9, 3.814803546213217*^9, 3.814808785849205*^9, 
  3.814810546441596*^9, 3.8148160572803392`*^9, 3.814817075239977*^9, 
  3.814817202387692*^9, 3.814817937587557*^9, 3.814818381253228*^9, 
  3.8148184403097258`*^9, 3.814818603814043*^9, 3.8148199206069183`*^9, 
  3.814897301501651*^9, 3.814962877006164*^9, 3.814964273587562*^9, 
  3.8149656632732363`*^9, 3.814968800678259*^9, 3.8149823171685667`*^9, 
  3.814982435790566*^9},ExpressionUUID->"8dfde6dc-ffb7-4e7a-b187-\
370aa59f0432"],

Cell[BoxData["0.1332518975810358`"], "Output",
 CellChangeTimes->{3.814787636446044*^9, 3.8147905689288263`*^9, 
  3.8147991504675303`*^9, 3.8147991984263163`*^9, 3.814799268099617*^9, 
  3.81479955718646*^9, 3.814803546213217*^9, 3.814808785849205*^9, 
  3.814810546441596*^9, 3.8148160572803392`*^9, 3.814817075239977*^9, 
  3.814817202387692*^9, 3.814817937587557*^9, 3.814818381253228*^9, 
  3.8148184403097258`*^9, 3.814818603814043*^9, 3.8148199206069183`*^9, 
  3.814897301501651*^9, 3.814962877006164*^9, 3.814964273587562*^9, 
  3.8149656632732363`*^9, 3.814968800678259*^9, 3.8149823171685667`*^9, 
  3.814982435792079*^9},ExpressionUUID->"f167f724-c17a-4dbb-a68b-\
85d3706f46aa"]
}, Open  ]],

Cell["\<\
Take care these are the variance and std of all the estimated means we got \
back from replicating the simulation m times. 
So they\[CloseCurlyQuote]re very low because of this (they are all means and \
very close each) compared to the variance of the iid samples of the single \
simulation.\
\>", "Text",
 CellChangeTimes->{{3.8147993740001163`*^9, 3.814799496514819*^9}, {
  3.8148088818822517`*^9, 3.814808913514338*^9}, {3.814818619666252*^9, 
  3.814818620183695*^9}},ExpressionUUID->"a7c91594-92cd-4a6c-bbe8-\
04122ac2df98"],

Cell[TextData[{
 "\n\nLet\[CloseCurlyQuote]s compute the crude ",
 StyleBox["bias",
  FontVariations->{"Underline"->True}],
 " with"
}], "Text",
 CellChangeTimes->{{3.8147290205538187`*^9, 3.8147290296880493`*^9}, 
   3.8147293966627083`*^9, 3.814730601494135*^9, 3.814787638712636*^9, 
   3.814799467827894*^9},ExpressionUUID->"c256859e-f171-44d3-a458-\
f7f17e779cd8"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Bias", "=", 
   RowBox[{
    FractionBox["1", "m"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["X", "i"], "^"], "-", "\[Mu]"}], ")"}]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8147290378788157`*^9, 3.814729095999301*^9}, {
  3.8148123517462473`*^9, 
  3.814812353950522*^9}},ExpressionUUID->"9a25a0db-8800-4040-8f1c-\
3b16013d13ae"],

Cell["\<\

Let\[CloseCurlyQuote]s note that we just miss the squared integrand, with \
that we would have a standard variance.
Now, each replicate estimated mean is in data03 so \
\>", "Text",
 CellChangeTimes->{{3.814729283576659*^9, 3.814729298901558*^9}, 
   3.8147294071012907`*^9, {3.8147298013475037`*^9, 3.814729828956151*^9}, {
   3.814812373077416*^9, 
   3.814812435264762*^9}},ExpressionUUID->"771bf713-72f9-426f-b9d6-\
fe1626299b75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\"\<Bias\>\"", ",", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data03", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8147291578294888`*^9, 3.814729164958765*^9}, {
   3.8147292129517317`*^9, 3.8147292201320467`*^9}, 3.814729250914816*^9, {
   3.814729322908313*^9, 3.8147293304466057`*^9}, 3.814795778279006*^9, 
   3.814799057610198*^9},ExpressionUUID->"57a96140-44aa-4f4a-b1f2-\
b265dbcbedb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bias\"\>", ",", 
   RowBox[{"-", "0.007188919855349926`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.81472925281571*^9, 3.8147293313697577`*^9, 3.81472938282321*^9, 
   3.8147294443310833`*^9, 3.814729710473414*^9, 3.814729840784268*^9, 
   3.8147841785354548`*^9, 3.8147852663716173`*^9, 3.814786872398305*^9, 
   3.814787182566571*^9, 3.814787249891491*^9, 3.814790568966497*^9, {
   3.8147957744353933`*^9, 3.814795783059849*^9}, 3.814799060076549*^9, 
   3.814799150503269*^9, 3.8147992007685423`*^9, 3.814799268140399*^9, 
   3.814799506811397*^9, 3.8147995615063963`*^9, 3.8148035462558317`*^9, 
   3.8148087858880033`*^9, 3.8148160573225193`*^9, 3.814817075268037*^9, 
   3.814817202418921*^9, 3.81481793762333*^9, 3.81481838128032*^9, 
   3.814818445463429*^9, 3.814818629602356*^9, 3.81481992064566*^9, 
   3.814897303723366*^9, 3.81496287703988*^9, 3.8149642736202087`*^9, 
   3.8149656632957773`*^9, 3.814968800700248*^9, 3.8149823171909723`*^9, 
   3.814982435826446*^9},ExpressionUUID->"599f1464-7ea9-413d-a165-\
91cea80319b7"]
}, Open  ]],

Cell["\<\

This is the RMSE. Smaller RMSE values are preferable because they indicate \
better recovery of the population parameters.\
\>", "Text",
 CellChangeTimes->{
  3.81481059854046*^9, {3.814810639671608*^9, 
   3.814810685863844*^9}},ExpressionUUID->"1835c600-2b95-4966-8321-\
3dcd88e7023a"],

Cell[BoxData[
 StyleBox[
  RowBox[{"RMSE", "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", "m"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "1"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["X", "-"], "-", "\[Mu]"}], ")"}], "2"]}]}]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814810739639752*^9, 
  3.814810811662806*^9}},ExpressionUUID->"7918ff10-ceb2-4e0e-baf6-\
3f12ac673c7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RMSE", "=", 
  SqrtBox[
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"data03", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.8148104514177437`*^9, 3.814810517834385*^9}, 
   3.8148108152213306`*^9, {3.814810922543385*^9, 
   3.814810924249424*^9}},ExpressionUUID->"788715a5-29f9-4744-a3e2-\
3a342f51133b"],

Cell[BoxData["0.13337913146150168`"], "Output",
 CellChangeTimes->{{3.8148104927576723`*^9, 3.814810518858965*^9}, 
   3.814810816918648*^9, 3.814810924895734*^9, 3.814816057334189*^9, 
   3.814817075273883*^9, 3.8148172024462547`*^9, 3.8148179376525803`*^9, 
   3.8148183813029633`*^9, 3.8148184472581577`*^9, 3.81481863192267*^9, 
   3.814819920679137*^9, 3.814897307218197*^9, 3.814962877074717*^9, 
   3.814964273651883*^9, 3.8149656633170633`*^9, 3.814968800721561*^9, 
   3.814982317211885*^9, 
   3.81498243585979*^9},ExpressionUUID->"338ddbdb-f2e9-4c67-b703-\
2ccc203410b6"]
}, Open  ]],

Cell["\<\
We see RMSE resembles the standard deviation. Squaring the RMSE yields the \
mean-squared error (MSE).\
\>", "Text",
 CellChangeTimes->{{3.8148106956495323`*^9, 3.8148107288617*^9}, {
  3.8148108306946793`*^9, 3.814810840213118*^9}, {3.814810904606491*^9, 
  3.81481091205621*^9}},ExpressionUUID->"16b489ef-3f84-456d-84cf-\
7e9969d6566d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MSE", "=", 
  SuperscriptBox["RMSE", "2"]}]], "Input",
 CellChangeTimes->{{3.814810974045555*^9, 
  3.814811006219426*^9}},ExpressionUUID->"66bceca6-0197-403e-bab1-\
b62780456afd"],

Cell[BoxData["0.017789992709424548`"], "Output",
 CellChangeTimes->{3.8148110072223797`*^9, 3.814816057364175*^9, 
  3.814817075297554*^9, 3.814817202474462*^9, 3.8148179376862593`*^9, 
  3.814818381328204*^9, 3.814818448898719*^9, 3.814819920717021*^9, 
  3.814897310430901*^9, 3.8149628771083813`*^9, 3.8149642736864653`*^9, 
  3.814965663337916*^9, 3.814968800742668*^9, 3.814982317232091*^9, 
  3.814982435891828*^9},ExpressionUUID->"36117c40-632e-479b-8360-\
b309f8578c0b"]
}, Open  ]],

Cell["\<\
Because MSE values are interpretable as variance terms, a final method that \
is often useful for comparing the sampling efficiency between different \
estimators (distinguished using the subscript i) is the relative efficiency \
(RE) statistic\
\>", "Text",
 CellChangeTimes->{{3.8148110181416903`*^9, 
  3.814811056102044*^9}},ExpressionUUID->"f295a908-afd7-4ab9-9d77-\
3655d8676527"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["RE", "i"], "=", 
   RowBox[{
    SubscriptBox["MSE", "i"], "/", "MSE"}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814811843541851*^9},ExpressionUUID->"4add1605-7613-45c5-b4df-\
0a5a81ecbdf0"],

Cell["\<\
This statistic is used when we use different estimations coming from \
different approaches so one estimator is treated as the reference statistic \
and all other MSEs are evaluated in reference to it. Values greater than 1 \
indicate less efficiency (i.e., more variability) than the reference \
statistic, while values less than 1 indicate greater efficiency and therefore \
greater precision in recovering \[Mu].\
\>", "Text",
 CellChangeTimes->{{3.814811221574383*^9, 3.814811232027153*^9}, {
  3.814811268996187*^9, 
  3.8148113498646*^9}},ExpressionUUID->"13233561-7764-4b60-8fe8-4eee94cd3436"],

Cell[TextData[{
 StyleBox["\n",
  FontVariations->{"Underline"->True}],
 "The ",
 StyleBox["model-based standard error",
  FontVariations->{"Underline"->True}],
 " is computed by averaging the estimated variances for each replication:"
}], "Text",
 CellChangeTimes->{{3.8147266688265142`*^9, 3.814726739189958*^9}, {
   3.8147271919740353`*^9, 3.814727203201777*^9}, {3.8147294251491957`*^9, 
   3.8147294279370213`*^9}, 
   3.8147996036592627`*^9},ExpressionUUID->"154463fb-6633-48d6-9cb3-\
09169f5d2c74"],

Cell[BoxData[
 StyleBox[
  RowBox[{"ModelSE", "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", "m"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "m"], 
      RowBox[{"Var", "[", 
       SubscriptBox["X", "i"], "]"}]}]}]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8147267633715467`*^9, 
  3.8147268440993233`*^9}},ExpressionUUID->"9260593c-3a80-41ca-b923-\
19f697d3d883"],

Cell["\<\

All the n*samples blocks (m*replications) are in data02, 
we take the variance of each of them and plug it in the eq above\
\>", "Text",
 CellChangeTimes->{{3.814727105414537*^9, 3.814727147784327*^9}, {
  3.814727228108917*^9, 3.814727237376603*^9}, {3.814727655878002*^9, 
  3.8147276613005342`*^9}},ExpressionUUID->"bdb9977f-67ab-42a4-a016-\
9d1b6d264f14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"variancedata", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{"m", "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"data02", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mm", "=", 
     RowBox[{"Variance", "[", "data", "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"compute", " ", "variance", " ", "for", " ", "the", " ", 
      SubscriptBox["m", "th"], " ", "simulation"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"variancedata", ",", "mm"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<std\>\"", ",", 
   RowBox[{"ModelSE", "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"Total", "[", "variancedata", "]"}], "/", "m"}]]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814726891533949*^9, 3.8147269564993*^9}, {
   3.814727064939435*^9, 3.814727088384452*^9}, {3.81472715313945*^9, 
   3.8147271822309313`*^9}, {3.8147285069687*^9, 3.8147285442316713`*^9}, {
   3.814729311614891*^9, 3.814729317078726*^9}, {3.814729744061782*^9, 
   3.81472974518609*^9}, {3.814803074539229*^9, 3.8148030811065598`*^9}, {
   3.814803257215333*^9, 3.8148032804386673`*^9}, {3.814803323882517*^9, 
   3.8148033241197166`*^9}, {3.814808103502122*^9, 3.814808115778916*^9}, {
   3.814808164584209*^9, 3.8148082228137302`*^9}, {3.814808325367037*^9, 
   3.8148084448877487`*^9}, 3.814808525928459*^9, {3.814808580133669*^9, 
   3.814808689192922*^9}},ExpressionUUID->"772957e9-9fe9-4a10-a819-\
4f76666c34af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.3245427691182494`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814808565860736*^9, 3.814808626774225*^9}, {
   3.814808681892277*^9, 3.8148086901975613`*^9}, 3.814808785916685*^9, 
   3.8148160574170513`*^9, 3.8148170753434353`*^9, 3.814817202508807*^9, 
   3.814817937727888*^9, 3.81481838135883*^9, 3.814818452341387*^9, 
   3.8148186443038597`*^9, 3.814819920760702*^9, 3.814897314084024*^9, 
   3.814962877148942*^9, 3.814964273722766*^9, 3.814965663364729*^9, 
   3.8149688007700157`*^9, 3.814982317257564*^9, 
   3.814982435928789*^9},ExpressionUUID->"723aeb7a-c956-4a21-91f6-\
ac2595d3cafe"]
}, Open  ]],

Cell[TextData[{
 "\nNow, let\[CloseCurlyQuote]s see ",
 StyleBox["Confidence Level, Confidence Limits and Intervals",
  FontVariations->{"Underline"->True}],
 ".\n\nWe already know that we can be 68% confident that a random sample will \
lie within \[PlusMinus]\[Sigma] of the mean. 95.5% 2\[Sigma] and 99.77% 3\
\[Sigma].\nThe percentage value is the ",
 StyleBox["confidence level",
  FontVariations->{"Underline"->True}],
 ", and the interval within which the value of x is expected to fall is the \
",
 StyleBox["confidence limit",
  FontVariations->{"Underline"->True}],
 ".\nThis range may be expressed in the form of an upper(U) and a lower(L) \
bound where"
}], "Text",
 CellChangeTimes->{{3.814786333633595*^9, 3.8147864210474873`*^9}, {
  3.814787786265565*^9, 3.814787815202065*^9}, {3.814791959299464*^9, 
  3.814791966342946*^9}, {3.8148119147701607`*^9, 3.814811916817708*^9}, {
  3.814812590041527*^9, 3.814812612475092*^9}, {3.814813347100317*^9, 
  3.814813467946579*^9}, {3.814813500418222*^9, 
  3.814813578157415*^9}},ExpressionUUID->"12388d10-5e11-463d-95ea-\
0650a6767439"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"U", "=", 
   FormBox[
    RowBox[{
     OverscriptBox["x", "-"], "+", 
     RowBox[{
      SubscriptBox["z", "c"], "\[Sigma]"}]}],
    TraditionalForm]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"L", "=", 
   FormBox[
    RowBox[{
     OverscriptBox["x", "-"], "-", 
     RowBox[{
      SubscriptBox["z", "c"], "\[Sigma]"}]}],
    TraditionalForm]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814813583581081*^9, 
  3.814813586501319*^9}},ExpressionUUID->"7ad91b24-3384-439d-9db6-\
ba24c4c68dfe"],

Cell["\<\

We also know that to compute confidence intervals we need the standard \
deviation to relate it to the estimated output from multiple simulation \
because they approach a standard normal in distribution. And we know we can't \
have a std while we're still calculating the expected result.
We can however calculate an estimated std like this \
\>", "Text",
 CellChangeTimes->{{3.814786333633595*^9, 3.8147864210474873`*^9}, {
  3.814787786265565*^9, 3.814787815202065*^9}, {3.814791959299464*^9, 
  3.814791966342946*^9}, {3.8148119147701607`*^9, 3.814811916817708*^9}, {
  3.814812590041527*^9, 3.814812612475092*^9}, {3.814813347100317*^9, 
  3.814813467946579*^9}, {3.814813500418222*^9, 
  3.8148136044333687`*^9}},ExpressionUUID->"0f47e1f9-a405-457c-92fb-\
76870536da42"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox[
    SubsuperscriptBox["s", "n", "2"],
    FontSize->18], 
   StyleBox["=",
    FontSize->18], 
   RowBox[{
    StyleBox[
     FractionBox["1", 
      RowBox[{"n", "-", "1"}]],
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     StyleBox[
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox[
         SubscriptBox["X", "i"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], "-", 
        SubscriptBox[
         OverscriptBox["\[Mu]", "^"], "n"]}], ")"}], "2"]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814786428747836*^9, {3.814811931758437*^9, 3.8148119328144913`*^9}, {
   3.814812120780312*^9, 
   3.8148121212094812`*^9}},ExpressionUUID->"54c7186f-b5e2-4c63-affe-\
7515a5a8cb02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["\[Mu]", "^"], "=", 
   RowBox[{"data03", "[", 
    RowBox[{"[", "45", "]"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"point", " ", "estimate"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["\[Mu]", "^"], "=", "tValue"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"STDest", "=", 
  SqrtBox[
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"data03", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         OverscriptBox["\[Mu]", "^"]}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]]}]}], "Input",
 CellChangeTimes->{{3.814786489560601*^9, 3.814786495297048*^9}, {
   3.814786527500524*^9, 3.814786591892804*^9}, 3.814786861763307*^9, {
   3.814786899993225*^9, 3.814786957162046*^9}, {3.814786996560367*^9, 
   3.8147870190832653`*^9}, {3.814787443189745*^9, 3.8147874744396152`*^9}, {
   3.8147875204728317`*^9, 3.814787527854254*^9}, {3.81478755836161*^9, 
   3.8147875653838577`*^9}, {3.8147876645014353`*^9, 3.814787731028242*^9}, {
   3.814787837299032*^9, 3.8147878438242807`*^9}, {3.814788023285338*^9, 
   3.814788121064919*^9}, {3.814788320913506*^9, 3.814788326988278*^9}, 
   3.814795758606299*^9, 3.814799108731669*^9, {3.814809493118342*^9, 
   3.814809498813939*^9}, {3.81480960595212*^9, 3.814809615337686*^9}, 
   3.814809647456279*^9, {3.8148131963763638`*^9, 3.81481320071766*^9}, {
   3.8148132325092287`*^9, 3.814813233820263*^9}, {3.814813315016479*^9, 
   3.814813315466928*^9}, {3.814813917973104*^9, 3.814813946096586*^9}, {
   3.814818670830634*^9, 3.81481867904532*^9}, {3.8148973840671387`*^9, 
   3.81489738575902*^9}, {3.814900026920218*^9, 3.8149000276610737`*^9}, {
   3.8149005432274637`*^9, 
   3.814900560798503*^9}},ExpressionUUID->"4b87da94-34b4-477b-abc1-\
f4562d60cc1b"],

Cell[BoxData["0.13337913146150168`"], "Output",
 CellChangeTimes->{
  3.814786534139916*^9, 3.814786597306314*^9, {3.8147868622660007`*^9, 
   3.8147869131195583`*^9}, {3.814786959063792*^9, 3.8147869649601088`*^9}, {
   3.814786998932754*^9, 3.814787020469193*^9}, 3.8147871826123734`*^9, 
   3.814787249928026*^9, {3.814787444079867*^9, 3.814787475126185*^9}, {
   3.814787529014351*^9, 3.81478756652413*^9}, {3.81478766628759*^9, 
   3.814787732076625*^9}, 3.814787922176711*^9, {3.814788075411347*^9, 
   3.814788121949532*^9}, 3.81478832765385*^9, {3.814789325498171*^9, 
   3.814789328927237*^9}, 3.814789408930372*^9, 3.814789571136448*^9, 
   3.814790569014895*^9, 3.814795577902643*^9, 3.814795691799218*^9, {
   3.814795736990385*^9, 3.814795759371147*^9}, 3.814799112164707*^9, 
   3.814799150551963*^9, 3.81479920904175*^9, 3.8147992683149242`*^9, 
   3.814803546380021*^9, 3.814808693253187*^9, 3.81480878592511*^9, 
   3.814809414420184*^9, {3.814809493933681*^9, 3.8148094998135233`*^9}, 
   3.8148096173080873`*^9, 3.814809648673908*^9, 3.814810417880497*^9, 
   3.814812520330447*^9, 3.81481323526624*^9, 3.8148133165758266`*^9, {
   3.814813926084342*^9, 3.814813946878839*^9}, 3.814816057424547*^9, 
   3.8148170753510838`*^9, 3.8148172025158243`*^9, 3.814817937733638*^9, 
   3.814818381365961*^9, 3.814818454441111*^9, {3.814818655587372*^9, 
   3.8148186799371977`*^9}, 3.81481992076865*^9, 3.814897318198254*^9, 
   3.8148973724051332`*^9, 3.814897439494685*^9, 3.814900030236945*^9, 
   3.814900527712285*^9, 3.814900562475059*^9, 3.814901002032338*^9, 
   3.814962877155527*^9, 3.8149642737276363`*^9, 3.8149656633693867`*^9, 
   3.814968800787901*^9, 3.81498231726278*^9, 
   3.814982435933877*^9},ExpressionUUID->"b7afc304-eb90-40e5-8a92-\
bcdf6685cca9"]
}, Open  ]],

Cell["\<\
We know also that our confidence interval is calculated like this \
\>", "Text",
 CellChangeTimes->{{3.814788136589725*^9, 
  3.8147881644234858`*^9}},ExpressionUUID->"c65949a8-a7f1-4a70-94c0-\
de4ac34a9453"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], "\[PlusMinus]", 
   FractionBox[
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["S", "n"]}], 
    SqrtBox["n"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814787938076962*^9, {3.814787984784686*^9, 3.814787989620132*^9}, 
   3.814788368882419*^9},ExpressionUUID->"6d58f5fd-4a19-4e90-8729-\
9db91a8927b9"],

Cell["\<\
Where Zc is the Z value of the standard normal distribution calculated over \
the \[Alpha] (percentile).
So that\
\>", "Text",
 CellChangeTimes->{{3.814788175087431*^9, 3.814788210459571*^9}, {
  3.8147883759475*^9, 3.814788377745904*^9}, {3.814814335662149*^9, 
  3.814814349680091*^9}},ExpressionUUID->"e6ad7566-4988-45ed-b167-\
6ff6bcb5d4df"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[Alpha]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"95.5", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "the", " ", "std", " ", "for", " ", "the", " ", 
     "95", "%", " ", "of", " ", "a", " ", "std", " ", "normal", " ", "dist"}],
     " ", "\[TildeEqual]", 
    RowBox[{"2", "std"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"InverseCDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}], "//",
     "N"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Ci", "=", 
  FractionBox[
   RowBox[{"Z", "*", "STDest"}], 
   SqrtBox["m"]]}]}], "Input",
 CellChangeTimes->{
  3.814788228551882*^9, {3.8147882815587053`*^9, 3.814788341446063*^9}, {
   3.814788476452766*^9, 3.8147884787058496`*^9}, {3.814788828400262*^9, 
   3.8147888318194304`*^9}, {3.814789418732937*^9, 3.814789449150401*^9}, {
   3.814790610335227*^9, 3.814790666382449*^9}, {3.814813839698094*^9, 
   3.814813840280916*^9}, {3.814814102068225*^9, 3.814814135885548*^9}, 
   3.814897455800641*^9, 
   3.8149000419322042`*^9},ExpressionUUID->"80734e0b-43e8-4c24-9a1f-\
e56410a76184"],

Cell[BoxData["2.0046544617650968`"], "Output",
 CellChangeTimes->{{3.814788295898975*^9, 3.814788299429922*^9}, 
   3.8147883439408073`*^9, 3.814788479549493*^9, {3.8147888102088537`*^9, 
   3.814788832482483*^9}, 3.814789331938706*^9, 3.814789410100943*^9, 
   3.814789451069075*^9, 3.814789574941477*^9, 3.814790094017746*^9, 
   3.814790569049552*^9, {3.8147906115432043`*^9, 3.814790667158224*^9}, 
   3.814795580576026*^9, 3.8147991153572407`*^9, 3.814799150585428*^9, 
   3.814799211314364*^9, 3.814799268324648*^9, 3.8148035464144506`*^9, 
   3.814808698254314*^9, 3.8148087859586678`*^9, 3.81480900840908*^9, 
   3.8148093370690536`*^9, 3.8148095036613483`*^9, 3.81480965713448*^9, 
   3.814809992811345*^9, 3.814810419950182*^9, 3.814813843623314*^9, {
   3.814813930202673*^9, 3.814813948967567*^9}, 3.814814081696075*^9, {
   3.814814128202257*^9, 3.814814137067849*^9}, 3.814814540694867*^9, 
   3.814816057494301*^9, 3.814817075377874*^9, 3.814817202545583*^9, 
   3.81481788804666*^9, 3.814817937765525*^9, 3.814818182773727*^9, 
   3.814818381393712*^9, 3.814818460337249*^9, 3.814818684504878*^9, 
   3.814818871749449*^9, 3.814819920811269*^9, 3.814897256284437*^9, 
   3.8148973227451487`*^9, {3.8148974353137417`*^9, 3.814897457338571*^9}, 
   3.814900043311673*^9, 3.8149005299604273`*^9, 3.81490056528776*^9, 
   3.814901004359159*^9, 3.814962877189843*^9, 3.814964273759061*^9, 
   3.814965663389975*^9, 3.8149688008091307`*^9, 3.814982317283907*^9, 
   3.814982435963726*^9},ExpressionUUID->"1c2e03f6-b6e0-4280-84e7-\
caa8c28064a3"],

Cell[BoxData["0.008455268629903165`"], "Output",
 CellChangeTimes->{{3.814788295898975*^9, 3.814788299429922*^9}, 
   3.8147883439408073`*^9, 3.814788479549493*^9, {3.8147888102088537`*^9, 
   3.814788832482483*^9}, 3.814789331938706*^9, 3.814789410100943*^9, 
   3.814789451069075*^9, 3.814789574941477*^9, 3.814790094017746*^9, 
   3.814790569049552*^9, {3.8147906115432043`*^9, 3.814790667158224*^9}, 
   3.814795580576026*^9, 3.8147991153572407`*^9, 3.814799150585428*^9, 
   3.814799211314364*^9, 3.814799268324648*^9, 3.8148035464144506`*^9, 
   3.814808698254314*^9, 3.8148087859586678`*^9, 3.81480900840908*^9, 
   3.8148093370690536`*^9, 3.8148095036613483`*^9, 3.81480965713448*^9, 
   3.814809992811345*^9, 3.814810419950182*^9, 3.814813843623314*^9, {
   3.814813930202673*^9, 3.814813948967567*^9}, 3.814814081696075*^9, {
   3.814814128202257*^9, 3.814814137067849*^9}, 3.814814540694867*^9, 
   3.814816057494301*^9, 3.814817075377874*^9, 3.814817202545583*^9, 
   3.81481788804666*^9, 3.814817937765525*^9, 3.814818182773727*^9, 
   3.814818381393712*^9, 3.814818460337249*^9, 3.814818684504878*^9, 
   3.814818871749449*^9, 3.814819920811269*^9, 3.814897256284437*^9, 
   3.8148973227451487`*^9, {3.8148974353137417`*^9, 3.814897457338571*^9}, 
   3.814900043311673*^9, 3.8149005299604273`*^9, 3.81490056528776*^9, 
   3.814901004359159*^9, 3.814962877189843*^9, 3.814964273759061*^9, 
   3.814965663389975*^9, 3.8149688008091307`*^9, 3.814982317283907*^9, 
   3.814982435965475*^9},ExpressionUUID->"56278d72-37b0-4fbd-8f8d-\
cb5526ba8ede"]
}, Open  ]],

Cell[TextData[{
 "Here we can state that we are 95% confident that the true mean is within ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["x", "i"], "-"], "\[PlusMinus]", "Ci"}], TraditionalForm]],
  ExpressionUUID->"ab3f584d-4eb0-49e8-927d-3b95ce58d66f"],
 ".\nThat of course means for our estimated mean, that we can be 95% sure \
that it will fall \[PlusMinus] Ci from the true expectation.\nOr also that at \
the 95% confidence level, any value of \[Mu] between \[PlusMinus]Ci is \
plausible."
}], "Text",
 CellChangeTimes->{{3.814788539969721*^9, 3.814788591789769*^9}, {
  3.814788654542737*^9, 3.814788677016889*^9}, {3.814788709756649*^9, 
  3.814788742831518*^9}, {3.814789356114039*^9, 3.814789357125559*^9}, {
  3.814789397581706*^9, 3.814789404465807*^9}, {3.81478964337066*^9, 
  3.814789648365232*^9}, {3.814814365225498*^9, 3.814814417088073*^9}, {
  3.814814459882452*^9, 3.814814468028014*^9}, {3.814891918068469*^9, 
  3.814891960323085*^9}},ExpressionUUID->"e5767a12-c7a8-42d3-8e4f-\
c4c02867e166"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "data03", "]"}], ",", "\"\<-> Estimated Mean\>\""}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", "data03", "]"}], "-", "Ci"}], ",", 
   "\"\<-> Estimated Mean - Ci\>\""}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"tValue", ",", "\"\<-> True Value\>\""}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "data03", "]"}], "+", "Ci"}], ",", 
    "\"\<-> Estimated Mean + Ci\>\""}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", "data03", "]"}], "-", "Ci"}], "\[LessEqual]", 
   "tValue", "\[LessEqual]", 
   RowBox[{
    RowBox[{"Mean", "[", "data03", "]"}], "+", "Ci"}]}], ")"}]}], "Input",
 CellChangeTimes->{{3.814788787471217*^9, 3.8147888130984583`*^9}, {
  3.814789149430162*^9, 3.8147892646125402`*^9}, {3.814789525471128*^9, 
  3.8147895949083633`*^9}, {3.814789686757778*^9, 3.8147896877008753`*^9}, {
  3.814789766155355*^9, 3.8147898215098352`*^9}, {3.81478986214618*^9, 
  3.814789967125162*^9}, {3.814793733108856*^9, 3.814793744088812*^9}, {
  3.814818474833271*^9, 3.814818484625222*^9}, {3.814900211056048*^9, 
  3.814900353325739*^9}},ExpressionUUID->"627fc418-61f0-4f01-afa2-\
fe2c1afedfd6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.326144413477986`", ",", "\<\"-> Estimated Mean\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 
   3.8149824359965897`*^9},ExpressionUUID->"e14e8d99-73aa-49e0-a263-\
f71271c8162d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3176891448480825`", ",", "\<\"-> Estimated Mean - Ci\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 
   3.8149824359985027`*^9},ExpressionUUID->"5bdf45a1-0047-4aaa-ad78-\
bcb2f7d162db"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3333333333333357`", ",", "\<\"-> True Value\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 
   3.814982436000143*^9},ExpressionUUID->"0290f11a-f1ea-4ec7-a2c1-\
991ebad34b9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.334599682107889`", ",", "\<\"-> Estimated Mean + Ci\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 
   3.8149824360018167`*^9},ExpressionUUID->"03ec1576-3356-4baf-b5b9-\
0debe7d82ae8"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 
   3.814982436003325*^9},ExpressionUUID->"b81322fb-34ca-4452-b691-\
8db50924b373"]
}, Open  ]],

Cell["\<\
However, what about all the other estimated means we got by replicating our \
simulation ? Keep reading !\
\>", "Text",
 CellChangeTimes->{{3.814790392172801*^9, 
  3.814790427182952*^9}},ExpressionUUID->"42f252aa-80f3-41bc-9fad-\
7f2117c45552"],

Cell[TextData[{
 "\n",
 StyleBox["Coverage",
  FontVariations->{"Underline"->True}],
 " is another key property of an estimator. \nIt is defined as the \
probability that a confidence interval contains the true value, and computed \
as:"
}], "Text",
 CellChangeTimes->{{3.814730576787709*^9, 3.81473058587879*^9}, {
  3.814730957036695*^9, 
  3.814730958321951*^9}},ExpressionUUID->"de9b1cb1-cbc3-4e7a-b815-\
115ff93b347f"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Coverage", "=", 
   RowBox[{
    FractionBox["1", "m"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], 
     RowBox[{"I", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["X", "^"], 
         RowBox[{"i", ",", "low"}]], "\[LessEqual]", "\[Mu]", "\[LessEqual]", 
        
        SubscriptBox[
         OverscriptBox["X", "^"], 
         RowBox[{"i", ",", "upp"}]]}], ")"}]}]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814730630248811*^9, 
  3.81473074313043*^9}},ExpressionUUID->"c5b840d9-7831-4d7e-be3b-\
7863ba578e43"],

Cell["\<\
I(\[CenterDot]) is the indicator function and works simply like this .. 

The Monte Carlo standard error is then computed as\
\>", "Text",
 CellChangeTimes->{{3.8147307590133467`*^9, 3.814730782754182*^9}, 
   3.814730964419301*^9, {3.8148099068002157`*^9, 
   3.81480990781429*^9}},ExpressionUUID->"302c9dcc-b385-4bdb-ba0b-\
56bd7a0f5ce7"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"MCSE", 
    RowBox[{"(", "Coverage", ")"}]}], "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"Coverage", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "Coverage"}], ")"}]}], "m"]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81473089741385*^9, 
  3.814730931297131*^9}},ExpressionUUID->"42db5177-3e1f-422e-b9d5-\
4b3c051f89dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coverage", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "Ci"}], " ", "\[LessEqual]", 
          "tValue", "\[LessEqual]", 
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "Ci"}]}], ")"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", "m"}], ")"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Coverage\>\"", ",", 
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
     RowBox[{"100", "*", "Coverage"}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSE(Coverage)\>\"", ",", 
   RowBox[{"MCSEcov", "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"Coverage", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "Coverage"}], ")"}]}], "m"]], "//", "N"}]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814793676117814*^9, 3.8147937252812977`*^9}, {
   3.81479381300912*^9, 3.814793878930893*^9}, {3.814794530666634*^9, 
   3.8147945385446043`*^9}, {3.814794756997198*^9, 3.814794760214253*^9}, {
   3.8147947974958153`*^9, 3.81479484071835*^9}, {3.814795201488723*^9, 
   3.814795256966589*^9}, {3.81479531576226*^9, 3.814795327775248*^9}, 
   3.8147991277188997`*^9, {3.814809326101399*^9, 3.814809326235154*^9}, {
   3.81480968065429*^9, 3.814809681013942*^9}, {3.8148099310352373`*^9, 
   3.814809964718584*^9}, {3.814814520995391*^9, 3.814814530759046*^9}, {
   3.814814583073998*^9, 3.814814655410531*^9}, {3.814817853112966*^9, 
   3.814817877666301*^9}, {3.814818743417671*^9, 3.814818766365505*^9}, {
   3.814818803692874*^9, 3.814818804010396*^9}, {3.8148189349810867`*^9, 
   3.8148189351597*^9}},ExpressionUUID->"54456930-c7e4-480c-9771-\
455a030221fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Coverage\"\>", ",", 
   TemplateBox[{"5.6000000000000005`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147937739506283`*^9, 3.814793817137176*^9, {3.814793854707972*^9, 
   3.814793879959071*^9}, {3.814794532075663*^9, 3.8147945399008102`*^9}, 
   3.8147947608599157`*^9, {3.814794803583974*^9, 3.81479484149872*^9}, {
   3.814795223574114*^9, 3.814795257861965*^9}, 3.8147953285334883`*^9, 
   3.814795588499062*^9, {3.8147991225458193`*^9, 3.8147991506888514`*^9}, 
   3.8147992191752996`*^9, 3.8147992683967857`*^9, 3.814803546524185*^9, 
   3.8148087102870493`*^9, 3.814808786082509*^9, 3.814809001578315*^9, {
   3.8148093272821503`*^9, 3.8148093430754957`*^9}, 3.814809508567637*^9, {
   3.814809668496955*^9, 3.814809682154958*^9}, {3.814809938363072*^9, 
   3.814809995216002*^9}, 3.814813851181987*^9, {3.814813934477242*^9, 
   3.8148139552925243`*^9}, {3.8148144970677643`*^9, 3.814814543959128*^9}, 
   3.814814589773716*^9, {3.814814644469811*^9, 3.814814656618795*^9}, 
   3.814816057568183*^9, 3.8148170754321117`*^9, 3.8148172026054792`*^9, {
   3.814817890246107*^9, 3.81481789799607*^9}, 3.814817937833919*^9, 
   3.814818185928479*^9, 3.814818381466034*^9, 3.814818488952923*^9, 
   3.8148186910738*^9, 3.8148187278644648`*^9, 3.814818880344522*^9, 
   3.814818936077301*^9, 3.814819920901361*^9, 3.8148973305732603`*^9, {
   3.814897447330482*^9, 3.814897460621622*^9}, 3.81490005447194*^9, 
   3.8149004285814943`*^9, 3.814900575278727*^9, 3.814901008878242*^9, 
   3.814962877263277*^9, 3.814964273829398*^9, 3.814965663442296*^9, 
   3.814968800846937*^9, 3.814982317336012*^9, 
   3.8149824360419407`*^9},ExpressionUUID->"2952e5f6-a7c1-48ef-9b34-\
7a45f0ccfaf5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE(Coverage)\"\>", ",", "0.007270763371201128`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8147937739506283`*^9, 3.814793817137176*^9, {3.814793854707972*^9, 
   3.814793879959071*^9}, {3.814794532075663*^9, 3.8147945399008102`*^9}, 
   3.8147947608599157`*^9, {3.814794803583974*^9, 3.81479484149872*^9}, {
   3.814795223574114*^9, 3.814795257861965*^9}, 3.8147953285334883`*^9, 
   3.814795588499062*^9, {3.8147991225458193`*^9, 3.8147991506888514`*^9}, 
   3.8147992191752996`*^9, 3.8147992683967857`*^9, 3.814803546524185*^9, 
   3.8148087102870493`*^9, 3.814808786082509*^9, 3.814809001578315*^9, {
   3.8148093272821503`*^9, 3.8148093430754957`*^9}, 3.814809508567637*^9, {
   3.814809668496955*^9, 3.814809682154958*^9}, {3.814809938363072*^9, 
   3.814809995216002*^9}, 3.814813851181987*^9, {3.814813934477242*^9, 
   3.8148139552925243`*^9}, {3.8148144970677643`*^9, 3.814814543959128*^9}, 
   3.814814589773716*^9, {3.814814644469811*^9, 3.814814656618795*^9}, 
   3.814816057568183*^9, 3.8148170754321117`*^9, 3.8148172026054792`*^9, {
   3.814817890246107*^9, 3.81481789799607*^9}, 3.814817937833919*^9, 
   3.814818185928479*^9, 3.814818381466034*^9, 3.814818488952923*^9, 
   3.8148186910738*^9, 3.8148187278644648`*^9, 3.814818880344522*^9, 
   3.814818936077301*^9, 3.814819920901361*^9, 3.8148973305732603`*^9, {
   3.814897447330482*^9, 3.814897460621622*^9}, 3.81490005447194*^9, 
   3.8149004285814943`*^9, 3.814900575278727*^9, 3.814901008878242*^9, 
   3.814962877263277*^9, 3.814964273829398*^9, 3.814965663442296*^9, 
   3.814968800846937*^9, 3.814982317336012*^9, 
   3.8149824360444517`*^9},ExpressionUUID->"f37e0ee0-a4ec-486e-834d-\
91c41d91bba5"]
}, Open  ]],

Cell["\<\
What we have here ? The coverage over the confidence interval of our expected \
means. 

Now, one would think that if we low down the confidence level we may up the \
coverage, right ? Wrong !!
If we put the confidence level to 68% we actually shrink the width of our \
interval.. because at 68% we have only \[PlusMinus]1std, while at 95 we had \
\[PlusMinus]2 !
Some goes if we up it to 99.7.. the width becomes then of \[PlusMinus]3std so \
our coverage will be bigger .. because we have room for more error.
That\[CloseCurlyQuote]s also why a 95.5% is generally chosen most of the time \
so it lays in between.\
\>", "Text",
 CellChangeTimes->{{3.814809030109687*^9, 3.814809178272565*^9}, {
   3.814815979805149*^9, 3.814815992834323*^9}, {3.814817752401979*^9, 
   3.814817772652437*^9}, {3.814817803236433*^9, 3.8148178369826593`*^9}, 
   3.814817996394618*^9, {3.8148182554560833`*^9, 3.814818314159051*^9}, {
   3.8148184967291813`*^9, 3.814818497176652*^9}, {3.814818703724305*^9, 
   3.814818706628812*^9}, {3.814900640561646*^9, 3.8149006640284357`*^9}, {
   3.814900695462201*^9, 3.8149008783656187`*^9}, {3.814900914433271*^9, 
   3.8149009444471197`*^9}, 
   3.814901061830532*^9},ExpressionUUID->"b57cc2b3-6935-49cd-a4b5-\
680993b44bf5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"99.7", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "the", " ", "std", " ", "for", " ", "the", " ", 
     "68", "%", " ", "of", " ", "a", " ", "std", " ", "normal", " ", "dist"}],
     " ", "\[TildeEqual]", 
    RowBox[{"1", "std"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Z", "=", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"InverseCDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}], "//",
     "N"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ci", "=", 
   FractionBox[
    RowBox[{"Z", "*", "STDest"}], 
    SqrtBox["m"]]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coverage", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "Ci"}], " ", "\[LessEqual]", 
          "tValue", " ", "\[LessEqual]", 
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "Ci"}]}], ")"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", "m"}], ")"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Coverage\>\"", ",", 
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
     RowBox[{"100", "*", "Coverage"}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSE(Coverage)\>\"", ",", 
   RowBox[{"MCSEcov", "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"Coverage", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "Coverage"}], ")"}]}], "m"]], "//", "N"}]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814809200099482*^9, 3.8148092001874228`*^9}, {
   3.81480924620205*^9, 3.814809263847419*^9}, {3.814809309721188*^9, 
   3.814809310729076*^9}, {3.8148097193588743`*^9, 3.8148097430212727`*^9}, {
   3.814809803572793*^9, 3.814809803707114*^9}, {3.814809981212658*^9, 
   3.814809986115653*^9}, {3.814814505700877*^9, 3.814814505966464*^9}, {
   3.814814675868744*^9, 3.814814718071774*^9}, {3.814817910604946*^9, 
   3.81481791614126*^9}, {3.814818053797307*^9, 3.814818134299967*^9}, {
   3.8148181926211987`*^9, 3.8148181999494553`*^9}, {3.8148182969306793`*^9, 
   3.8148182985680323`*^9}, 3.814818812358397*^9, {3.8148189487807703`*^9, 
   3.814818948930373*^9}, {3.814818984645274*^9, 3.814819011841218*^9}, {
   3.814819127808835*^9, 3.814819142003995*^9}, 3.81490006688006*^9, {
   3.81490062173413*^9, 3.814900621933485*^9}, {3.814900848911664*^9, 
   3.814900849743978*^9}},ExpressionUUID->"2fee6fb7-a1ef-4771-9605-\
6211d950a1ab"],

Cell[BoxData["2.9677379253417833`"], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 
   3.814982436051196*^9},ExpressionUUID->"f2341a6e-cae6-4c9a-91c7-\
6bceac63c59a"],

Cell[BoxData["0.012517379857984049`"], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 
   3.8149824360526752`*^9},ExpressionUUID->"49ac62f0-37f5-4268-a5d9-\
f518c06a06ae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Coverage\"\>", ",", 
   TemplateBox[{"7.6`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 
   3.814982436069394*^9},ExpressionUUID->"8a983432-4d54-4231-92aa-\
9178aec14b26"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE(Coverage)\"\>", ",", "0.008379976133617566`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 
   3.814982436082542*^9},ExpressionUUID->"383de3ef-c97d-49ed-9a1c-\
50a3b5caf48f"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["[check this eventually]",
  FontColor->GrayLevel[0.5]],
 "\n[Probability and Statistics for Engineering and the Sciences.pdf] -> A \
Confidence Interval for a Population Proportion, pg.280\n[Monte Carlo \
Simulations: Number of Iterations and Accuracy.pdf] -> A Priori Estimate of \
Number of MC Iterations, pg.7\n\n\n",
 StyleBox["[check this eventually]",
  FontColor->GrayLevel[0.5]],
 "\n[ConfidenceIntervals.pdf] -> (IV.b.) Unknown Variance and the use of \
Student-t distribution\n[NormalVSTdist.pdf] -> Confidence Interval Estimates \
for Small Samples of the Mean\n\n\n",
 StyleBox["[check this eventually]",
  FontColor->GrayLevel[0.5]],
 "\nComputes the number of simulations B to perform based on the accuracy of \
an\nestimate of interest, using the following equation:"
}], "Text",
 CellChangeTimes->{{3.8147281975769253`*^9, 3.814728333528817*^9}, {
   3.814728375500723*^9, 3.8147283810852747`*^9}, {3.814728413683156*^9, 
   3.814728424952242*^9}, 3.814731006763883*^9, {3.814814218660611*^9, 
   3.814814255476015*^9}, {3.814819334602777*^9, 3.814819375083221*^9}, {
   3.814901442957382*^9, 3.814901443946123*^9}, {3.8149031250114*^9, 
   3.814903132952866*^9}, {3.814903281418343*^9, 
   3.8149033345745897`*^9}},ExpressionUUID->"939102b3-ecdf-4913-a35d-\
9c501846a2dd"],

Cell[BoxData[
 RowBox[{"B", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       FormBox[
        SubscriptBox["Z", 
         RowBox[{"1", "\[Minus]", 
          RowBox[{"\[Alpha]", "/", "2"}]}]],
        TraditionalForm], "+", 
       FormBox[
        SuperscriptBox[
         RowBox[{
          SubscriptBox["Z", 
           RowBox[{"1", "\[Minus]", "\[Theta]"}]], ")"}], "\[Sigma]"],
        TraditionalForm]}]}], "\[Delta]"], ")"}], "2"]}]], "DisplayFormula",
 CellChangeTimes->{{3.8147283945472813`*^9, 
  3.8147283957535677`*^9}},ExpressionUUID->"ffeab87f-4843-437a-9654-\
262b6bd65b3e"],

Cell[TextData[{
 "where \[LineSeparator]\[Delta] is the specified level of accuracy of the \
estimate of interest (i.e.the permissible difference from the true value \
\[Beta]), \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", 
    RowBox[{"1", "\[Minus]", 
     RowBox[{"\[Alpha]", "/", "2"}]}]], TraditionalForm]],ExpressionUUID->
  "6842022d-25ee-4f1d-97e8-3f3751a35153"],
 " is the (1 \[Minus] \[Alpha]/2) quantile of the standard normal \
distribution,\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", 
    RowBox[{"1", "\[Minus]", "\[Theta]"}]], TraditionalForm]],ExpressionUUID->
  "b5fd96df-9802-4ecf-8581-dd367babc632"],
 " is the (1 \[Minus] \[Theta]) quantile of the std normal dist with \n(1 \
\[Minus] \[Theta]) being the power to detect a specific difference from the \
true value as significant \n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "080708b3-4441-458e-bb6d-12fe674efea8"],
 " is the variance of the parameter of interest."
}], "Text",
 CellChangeTimes->{{3.8147281975769253`*^9, 3.814728333528817*^9}, {
  3.814728375500723*^9, 3.814728397394442*^9}, {3.814903360970594*^9, 
  3.81490343448026*^9}},ExpressionUUID->"ad89ff4f-4fb8-4d3c-b6e9-\
268f93a9ad3b"],

Cell[TextData[{
 StyleBox["\n\n\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["Now, let\[CloseCurlyQuote]s see what\[CloseCurlyQuote]s the impact \
of using a general uniform sampler VS a specialized one.",
  FontVariations->{"Underline"->True}],
 "\n\nFor general uniform sampler we intend white noise. For a specialized \
one let\[CloseCurlyQuote]s take the OwenScrambledSobol sampler.\nWhite noise \
tends to \[OpenCurlyQuote]clump\[CloseCurlyQuote] samples in some zones, \
while Owen has better distributed numbers over the sampling interval 0-1."
}], "Text",
 CellChangeTimes->{{3.814969098489843*^9, 3.8149691316919737`*^9}, {
  3.8149692507164288`*^9, 3.8149694709028463`*^9}, {3.814970758419526*^9, 
  3.8149707751610193`*^9}},ExpressionUUID->"94afe4b5-03e3-4bbb-8a81-\
bc7aa6ea1779"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"dwn", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10000"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dwn", "]"}]}], "Input",
 CellChangeTimes->{{3.814970820050036*^9, 3.8149708535254374`*^9}, 
   3.814970950097843*^9, {3.814970985675365*^9, 
   3.814971034564406*^9}},ExpressionUUID->"06cc8a49-b281-406c-bd37-\
b371460c7c02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.026962`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8149708485047483`*^9, 3.8149708541348963`*^9}, 
   3.814970950710475*^9, {3.814971000970364*^9, 3.814971035362989*^9}, 
   3.814982317391768*^9, 
   3.8149824361157713`*^9},ExpressionUUID->"ca821ac9-763c-41d1-be98-\
a0ca1834d2f0"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw0XXtcjM3bT5IQkhCSkIQQegjhixBCkURhpUjClg7b0Xbeztu2bdsBi5Ak
IUnCSgghhJAsQgghhPDe7+d3zfPP8xmzM3OdT3PN3RDX7cvc1dXU1HRGqKn9
////91/LzLxHx3XGTXo4k/4BLjNvDtE410RjLXwZ8vcK3+0DjXVgZ7FCOWue
ksZ6kPf8MK7vmjs01sev2+MxIPI1jQ0wttV+xJ2en2hsBJGssG7Dq1c0HopC
a8lHmyNsbIxbrvMv66R/pLEJij42m7h3ukdjU+jPPHDbsICdNwrKxDNJtXuv
0dgM/GBDz+v7LtN4LNrMekza8/gujc1RXuXa1WTlfRqPh3mvsgFdbzH8J6C5
78InX1+z8yZCGRZycZYd288C5aVL3Px3NtL4P8g3a+lW3Gum8SRoiZ+ldDpb
RePJ8Hraofi02TMaW8Ljn55E9OsJjafA9JXhKG1ZNY2nwi2keO0o9Qc0ngbT
Ux9ttlZdpLEVHhyqm6LwZPyZDi3N3Wl1Ee9oPANZQ2YoCj8zes/E9d8nai7b
MX4AnpsvnnWqJ/iFALTytb4/Lqb5WWgdXDrj1rh6mp+FmJmTltSdf07zsyFN
HDVncneij3A2SjP1j2w2uUTzc7D7/cMdv3q8pfk5MHKpfNKcfoDmreGr693u
6U/wCa0hrBNWzN6+h+bnQtr4N/bu/Dqan4upRyye91/O8J0H5a7v6Z/mq2h+
HkxMt9+2PvmG5ufDo9vZiGZDNj8f9frCV7Vlj2jeBlXFZqP1AkhehDaw1NMO
jP7znuYXQO6f2TM9vYHmF0BNr/Pie2kyml+IkJKMqvZ/RA/hQqgtHjBzjZyt
XwTPL32LPb8SvYWLUDHS2XFIbybftnCaMSFw08tamrdF8o5RwRd+MX4tRtmb
mcsuy0jfhIuB4Odlo4dk0PwStLtGZvi2kTwLl6DmXR9FoOtZml8KgXnA+4m3
GH5LMTa4IerxT6ZPduA7/JrxYz7JO+xQmuB9dJL9Vfq9HWT3J+ara5B8KO2g
GDpaJ176mNbbw2GqTrzfULbeHpUpdhcdYxi+9kgc9WnA4X2Er9IeFhr1/8rA
8FsGWNoHbPp3i9YvQ/POlVtP7WTywI29d2lpGBO/lMvgtHdXf9Ou9Hu15VCr
W+Fwsd9TWr8c6F7o34Ppo3A5LN8N6O1kSfPK5dDa0z9QWfKS1jvg+9fEi+ta
SD7hgBzFFB0/c8JP6IACtZsTey8n+VY6wCn5Ro12Hsmj2gqU9itU/dhM8GIF
lKs73RC0MvhXAH7jo/84ltL6Feg6Rs190RwmH45Y+Ppzf/utxF84QjX08oPL
swppvSN0JnU8OPA+wat0hPGJ//bfCGb2ayVm8KdsHhFH9MVK6PSaeLbXcAb/
SnQt3F3wfAnJv3IlRPlnQn/EMv1wQuO4FwfOmJB+wwk6V/xe9Pdl8uaEuhw1
16d7ami9E5pGeoWm1F+h9auw7dTPId+fvqD1q8B/G5Y/dC/Jg3AVTFTPVif7
kX4oV2G106cX6W/Z+athGL4o8F0rzWM1Wn7tUYXoM3uxGsrkzp7OS9No/WpY
yyJnjptP+qLmDEGvn5veX66k9c7IPzBtaVQA0UvojIpv81unJTD5dYbd1AEZ
dbeZfXNBq5FSX3sbo78LrA2WfW7gsfNdENPjkarSkMZKFyj3rvzJ33KI1q9B
s3UvS7UfbP0aGL2OeHn0D/kj4Rq0HTh56PQswle5Bu2KHr5H79J+amvhOsPn
i7MFW78WOu5HKlMTSV6Fa2H0sHPU9835tH4tzGd0+dd1O/Nv62D+cMz1vt1P
0/p1eKx3rDnWmvFvHdQsvd3kOwNp/Tr4O17XfL6a6T8PapMehfTsTfbUiIfk
vc7u3xaRfIIHuNxy1WsjfHg8NF380rPTUfJfQh5Uuzqd8lMn+VbwYD4z1/fg
dIJPyYPGrWuxRYMJHhUPQt25n56X3Kbz10Ma9CZpdivpk9F6xBx06HZyMZOH
9djY8PJhx8Xkz3jrIZTVHT2iVND565Gbtuzh2s80r1iPd0XQay8h/6tcD8WY
EXN77D9C53PrB4vu356RSue7wja7Z/OOCHa+K/hLJ0ZNnFNG57tC0H5vQ8Rt
8t88V6hdVsYtt2H21BWtZZ5FSW5EH4Ur6hvf+Hc7wM53hY+86cXa2aSfKlcY
Ta7s2HfZDTp/A4ydl0QqL5O9MNoA5dfwqz8dyT9iAxqXOR5vjyJ5522A0679
a/vGEzzCDeAfbJ048iLJv2ID2oYXuen2prFyA+zcy4zut5K9UG1AUX5cbsJQ
Fq+5oXLckgnuAwg+Izf4PCn8udeB9AduMLeZ8nnt6iI63w3K5d2qvVW0XugG
vc0tkYl7yT4o3CDU2L3vwPY8Op8bf7+zdtzt43S+Gzx6LEz8kcfiD3foVK71
63rxAp3vDlVJ290feRTfwB1t3uPlZm2kLzx3vP5wXXfCDZJfoTsGKDu1tgwg
+6ZwBwJVs0vnM3vtDo/Hj736F5B8q9yx+uWzXtUmZK/UNmLJ6tVeo6MIHqON
aP+zK3oUn/wNNkI413ShtzrJD28jWr500k3ryfztRgiSsrx/L6d4UMH9fvI4
Xb0fIjp/IyybLfUHuZB8qDYi2WewjeFHFh9ugselM695mRV0/iYosxqyvPgn
6PxNsKsOHePsQvrC2wTZGi+fY7XMv23C9/sffnl1pP0Um6A+taUtQEnypNwE
NeP9B6Pu+NH5m9CQ1TTuv08sfvfA2qnOYwqSid9GHtgYs8giMpj2hwfaFpk5
HzlA8RzPA2pdzbL+Dt1P53Pjfelxy2qO0fnceMSZ5FFzmb/3gN1ihbUqi+RX
5QFe1J4xwTdJXtQ2Y2PsKPHv+0z+NqO0sFr74jGKx7EZqriIfQ5PSX54m2ET
ate859R1On8zfkXnNB5JIPgVm2H1yvrrrX/MX24GT+fI3NNTSZ5UmyEclKu9
T203ne+JpplPrYvyCD4jT4iStcT60cwfeqJ53kbN4Ltk73ieEKw4ufG7A4vX
PFHsfGr17wqm/564FbU/L0if+RtPzn/PNe55iOyzyhPGn8/1XdLE+L8F2Bl0
VTqdyd8WOA279L3oOtEHW5AsvGOweRmzf1tQObJLZa2U6CXcgpCJAT19qik+
VWyBx699eW9+3KTzt6Bmyai+JmJmf7ZAecDrzd/9LL/xQpHd6wm/vhI9jbxg
vdf+8I4eJN/wQvkRvYYWFm/zvNBQ+ttWpxPTPy/4L8sN5rWSfiq8cHBRyzH+
X8JH6QX52QHiwP3M/nghXjIt6dUJli9thdL3ZYcSyXk6fyvsImcqzWYz+m+F
4LzWoYvrKd7gbYXOON6G6Z/IHgm3wmuyeWLsFNpfsRWN4Vcnz65i8r8VWknd
XlnvYvq3FUWFJ5KqWs7Q+dtgutpP6+EGipeMtsHCYkbwX2eiN7ahrPdGDF1I
+sLbBrMOxsVbmpn/2wbfASWjrYtoXrENLRN3Vd7pQ/qr3IZJ645Xj85g/m8b
FG8Ktn5+z+Ln7Wj8lvpcj8mT0XbOv7n0GmaYTOdvh3TXfunHesoPedtRV9Ap
f2IfsgfC7Xj3IeCWyTlm/7ZjXsKTnz4LmP5th0qWMPCpLcWTqu1wufSg/sNu
ln/y8fj15EmnUsjf6/BhuT+72/I68m9GfGi59xm2r5T8jTkfObPcxj5m9gJ8
dD3c8VqfHzS246Po5OH6DSrKV3l8VH3be+p0MO3H5yPmn1nnEcOZ/PKhnHjx
a/OZ8v+NxXyE6P67NkbI7BkfbUqNFXaPKN4v4sPB+/HZnzPJfiv5aDnpV6tx
kuS/hg818Qv9DoXbCV8+BAdnqF+0ovkWPmxEn7v0W0hjNW/wV9TMuBNF/NDx
BkbdPzdrH+U/Rt7gbYitOzGS5N3cGw7vLzkPW8f8gzfKd+SPW19H+Nh5w8C2
/Vz0TvI/PG/M6Nkw++8Lkne+N9o+z+tb38zyZW+M+icRu08k+ou9UWc/XiPu
AP1e4Q2bok7id/FEjyJvqK1aqS4KoPhF6Q3h5ZQepzPI/9R4w+2xYZcfS2g/
lTeac1M/r35L8LV4w0ujzliWwPjvg7FrH01525X0RccHxWoXYD2L4k8jH2wU
h+TMGEnya+4D3qQsM0cD5p984BN1Z8zTXNIXOx/U1fm4mcxg/sIHs7W+Zt8+
T/aD7wM31QH5AncWn/tAeX/e8F/7yV6JfVB0U7jSv4LZMx+IBydN9nxG9rOI
Gy9QN35dS/mt0gdqaoM1nxaKCX8fCO4Nr1Y/TPZMxcE7/7Hc34H8d4sP+H06
OoUFkb6o7cCSVfrLgtbSWGcHqux85IsdWDy2A8U/R3breZ/mzXcAaR99bU6S
PmIHLCWRb6w7kL2224HqWbPPpW8h+vF2QJD3rlB4kejP34F3MDCKmU30EO5A
7snzYU43KD8Q70DNpOW33LNI3hQ70DDAa12Pe3R+0Q5ojnpnqfWHxZfcePz7
rNYH9PuaHRggnG+0eiXRV7UDspylUcMvkH1u2QGl+8E8pzCKt9R8obbriOMi
M5J3HV/wBiaf8jQifhj5gm+ZfujWIvK/5r4IMb91dGMTiw98YeVyS782h/C1
84XLUvvhK+QsX/BF4buCysa/dD7fF/LDfryrNyn+FfrCN8s/+E4e2QuxL7yc
W4tKnJg994XKYNrCsedJnos4eBWTXBzNBYS/L3bHN8uuXyV+1fii9vjZFWEn
CR6VL6YeWXL3noTJvy90voSPHjiCyb8f1Ha7vj6vHkP4+0He015b9YT8jZEf
dAqn5Z2SEX3M/TChMFvxcAnzD35o/ZPaaZOA4e+HmrL+VTuzmb/0Q1HIvw/q
o0nf+X6Q1N09OXEIi9/8ILy7rof7MLKPYg6eaCHPLI/iR4UfjJp/9LN+RPpX
5IeIQw1B/kZED6UfrP9bcGRtL7KHNX6oW73RcZac4Ff54bVmW0msN8Hb4gf+
tf4W3WQsf/fHgyOTX3g/ZvbfH81TBzzuV0vybOSP2ovDe3Zk8mzuD35g555/
LFh+5g+Hurs+B18S/e380TCr+5X9f1m84o+m6145sgtkD/j+MNr3KGrP9xLC
35+j/8ncBn2aF/tD+2+fpvdbWT7hj4rx5a71cQx/f1ivWTg5ZT6r5/jD64Xj
HD6L/2r80a5beymL6YvKH2ad6keU3qL8rsUftvdfeG0RsPgnALllh9X1nWms
EwCtRtfluu0sHw5ATFiC51CWf5gHgNf795aI+5TvIgA55vmufT4y/xcA5ahu
EXnuFA/zAvC4RDTg2xiiDz8ANaOuCIrKiD7CAPh+O9d2aTzT/wAk/rA+svgh
wasIgNW2FUJ3Vr8pCoDw+g1nO5mE8A/A98hR7l1f0XwNN7/esqCzmMWbASh/
Mcr2yXDib0sAvHKG9dZg+qQmgFP2yAdKJ+KnjgADpnhlf7pB9sVIAKNT43+N
jCP/bC5A4bBj3T0HsfqAAB6Z0U9fKEn+7ARoWbDm0IZ9zP4JoDY71MttKekP
X4CoOa0xcWqk70IBtg3/Onf0Ceb/BFAM9GkSdKb4TMGdL9N/5POI/FuRAHbP
9/9eYcXiW25/q0rniHLm/wQw80/IOCtg/Bdg7EudxsLPhE+LAHoyl7KfCQz/
QPgIU6xGPiH7oBMI1R0Nq0W3qb5jFAiv4tprqkrCzzwQeJ8+1yqLyX8gjOJi
ZP2TKN+2C4Ta3Len/11PIvwDsc1ae1zwK+b/A6H4pn9p8SOKH4SBqBVefGw0
iuRHHIiCLzfuu9wj+ikCYSr6K7vyjOx7USD+Kl90XXKH1ZMCESVfr9f6mvar
CYTGQYfGAeaUP6kCofd8ua2oA9nTlkBcn/v8eHcfVn8Lgmu5pWTLBqKPThDE
WmEnO+uSfBoFgffbzV5URPpgHoSQ3DcHl4eRf0YQjL/fWZlZQPbNLghWf34P
iHxF+/G49epe96+WEz/5QUi2CdXefYf5vyAMLZHXml8j+oiDuIzDMG3rVOKP
Igh2vumetkYUbxQFwb+706bIiayeGIQ8gy3PDkdSPFwThPPPTMaNYvGUKghm
X7IlivkM/yD0OOEuzx7J8o9gFL2o+Km5juyNTjCM19kPkLmxfCAYyuzeW2eb
Ur3fPBi7NQefCTRn9c5glN79G6fhQfGAXTBkzsJBJmo0zwtG3cCpG1bImP8P
hq3vj5v5vdl9RDBObDv+bN8eypfE3Hkj3gpe6EoJ/2A0HFn+zLqI9isKxgCT
J88ut7P8Khhq5/y2a42OI/w5fOb9SjGfSvRRBUNngmnWy48UP7cEo3bN/eF7
zrP7hxDUxETf+2ZF8ZROCMaWf5rWsJfl4yGw+93R9lE34p95CMzyLlVGb2P1
8hAIdc+PU/tH8ahdCPh6v1cbKsh+8UIwgL/t4xkhs38hML5XGre5guVPIWj8
DsdnPSjfE4cgUfGgauZHkmdFCMTm72Njs5j9C4H+Ivud/a9QfKEMgaB63cWE
ZKJHTQhsrj+vWTma6imqELS3r72Y8YDyqxYO3vZdevY3KF5UC8XQTllm+dOY
/IeiqrhcL3oQyYdRKARhdhnSPBb/hsJtwHONmLWkjwiFx9wOFzVGUT3MLhT5
cWYn4rVonhcKXtuzu+abaMwPheR1TvbAAMb/UPRwe+lyfQiz/6GwVA0K0D3N
6pmhaBF1zp9nwOL/ULRe7bh7jhbZT2UotI+OXnP9LslrTSjUsvo4O16i+psq
lIv3DP2O2JM/aAmFMGHetGN5VN9UC4M4e4GoxonmdcIwVDKqqqqU4DUKg1rR
h4XSjWGEPzf+46yemEz3TwjDX0ePuD2WLP4Pg8dDjZHykcQPXhiipik83/oS
vnzuvD4GI4NukP8UhkHlO+ppr3i67xRz66s3pQuO03pFGPoOuuQLZn+LwqDl
M6apVE72QxmGXOnHN8WOpN81YViWuKSsPZbJfxhODEw/W/Caxb9hiM/2Xtft
CrN/O2FdEan+zZPkVWcnIq69NSjvRfbDaCcspMv75Hxl8c9OWB3qWn6S1Quw
E+UvNfd5hpE82u1ESb+ldUMO0HreTjh5/pl5dDP5B/5OCFfGPJpbR/QW7sRH
31aD4TOY/d+JHhKTR3HuzP7tRFWSUqfvbtKfop2wGTe8U/EIVt/aCd9TYrlX
GsN/J1xWpK+p7cri352QTkozbikgeWnZiUT+yG3ozvAXomV4bk337ef+N9YS
onpfoGBGKM3rCNFoUuG8awXpq74QQe+O7bcJIH4YCaHmJZ4gl6T/b2wqhK1g
mqfhefIH5kJojJ+fa3WG5MNSiPM3dGPeRhL/IITq0ZHkKFYfteHOe3h3Z5aK
9NVOCIu3K76/dCJ8nIS4pXuubAi7L+YJwXv0Jy26mejpIQQuJ+9c4M/kTQij
1HHr1MUkDwIhCoJLR8yYyfJPIcy79ep56gHZR5EQzcu3Ze0JYvoohLTtcPDZ
NWTf5UL4bOUpJrUx/gjROln72vtVZK/yhCid2MTzdaf1RUK4njie5XKE4C3l
4OnWb3aMDdW7lEIUTbJwLqqm86uEUBqXZaw4cJT4KYTuoptmYQkEfx1Hz9mZ
xT1/sXq2EFkr7+pHGNH+TULUKP8s2PuMxfscf4ZoKA6Ghfxv3CbE7lkny6dr
s/w3HI/vOJ487E72Tiscv3p6ClsKaawTjo+6nc++r6H99MPR3pg1qecKFh+E
o23t6flnBhD/TMOhbLZ/tzWe4jPzcMzztB4YN4302TIc/KaIpQd6sfpiOMy6
jG9VX03zNtz6s3e6icopX7cLh0tQznmDBKKnUzjyQmb+998wZl/Dkf/Qunmq
Afkrj3AMfT3x36U65m/CodBKGZN/hfYXhEP+rNc9jGT9DOFoetDwzu4j5V+i
cBhtNcic4Ub1RXE4bP+a2ZQsI3mUc+MlvUbumE7rFeEonu675qoeyXteOPS6
r58wZx7Zh6JwwPDHnjVlVH8r5fafsf6nzlPKD5ThkN6/FbTPkOKpKg7eYbqi
1xtJHmrCEXL/adSuOKJ3XTgqVtvH3rtL+KnCUfd37Y/NlkTvpnC4Vn7ep9mL
6NMSDsPIN6m/RpH/aguHKih7YOcFrP4ZAYvT09RHjiH/ohUBtZgWQcbbKOI/
Nz4vuHo0YD3xPwJOM28utconfI0i8G6b9tLRukR/0wgo123o5/KWxcsRwP6C
HQ25BcT/CGgc+jNgsxqr70agxkrL+Yw36YNNBDRvGoqLdpG820Ugd09kmc4p
klenCLjtfywrFJL+8iJQ7P6703tNgt8jAo6vJqtchzP+R6BoFSbw1EieBRx8
3fr2Vlwg/IXc+ZlXSnpPonqRKAI9YgLXNxeSfokjIB6nuKebQefJI9D1y+Rt
luqs3h0Bnv3BifuN6T4kLwL6lz/0HHCM8p2iCHyU/dIYsp7sRWkEdhtMNEue
zOL3CGhvML/gtZ/kpSoC/gc07sx6SvyqiYDJrKc3K6vo/LoIGBnqbFLnk79S
RWBG11FDPUpIvpsiEOXhMiNDxuKdCNQmmYzMrCB5aItAdYPGymQflv9EQv+e
bdf/TCl/0orErcH24fvZ73UiEbV3ybjLA4ie+pGA9/TT6XGUvxtFQrj14KZj
6XSfYhoJ87u6BYWzyV6aR8I3oPSaJIb4ZxmJpmnj5i8YzupHkdj2/tTMf22E
r00kJF5PQ/mb6Xy7SNSKrDp8tyT5coqE1XKvoZI8Vl+NhPW1xcMfaFO+48HB
V9L9hE0u3Z/yI2E6KbW9dxbFg4JIOBl6TDjgzurnkbgbUGo3Mpn4IYrEL5ee
b8/EkDyJuf1qxnR/NjyT+B8Jg+NPD/Zxo98rImEWoZH8YSDlD3mRqMvy3myb
T/woigTvy0akeVC8U8rtN2i/2dzrZF+UkVC8eP6wtxnFa1WRUJn8GvrtA/G3
hqPnswgji21EjzqOHzcuvq+X0fmqSDQc2hX8KJXo1xSJtconD7xukvy2cPD2
22tzdAH5z7ZIqNWV1UjWziX+R8FwiHHEaR+ir1YU3Hq9uij/RPDrRMFo99Uc
9+eHif9RqMCHbT4iFh9FweunXGP6PdJX0ygoL4c37LhF8aV5FFqVlVds3Uh+
LKNQpHZKZ6cj6R+431fuSn2QT/M2UVB7cXhBnr0/8T8KTt2Dh0hYPOAUhcI5
RlP1D9B5PG791CMVDtcY/6PgsHDhg+O7WL4dBXmovMffRcz/R0HDdNGF4hfs
/iEKtnuKp5n0IHkVRSGk06iQZUdIvsQcvO6/VttGkL7LowC9v9KQfUQPRRR0
dfq8X5BO++VFQVb7yml3G9G/iKNnQ1mnEcOY/49C8/4z4YGrWT9NFBRVzqoH
NVQPrYpCaVr/XUHxhE8NR7+fg/RdDpF/qIvCki37vC4uZfVdbr/JU9QudST4
mzh+ZN9Y07aE8G2JQnEPcVzkR5pviwJvzbVdSht2/xuN2UPvBZYtIn5rRcPz
ZKbEcA3z/9E42LUtV2MZ4aMfDQ+Rb/MqTVYfjMb1lAmRY/cQfqbRsPOXdrn2
l+p55tFQUw0JCt1vRfyPRovVoRXCXVR/RjQK7SaKxowiebaJhn5DyZ8yS/LH
dtFwmt8pWDqY9neKhm5h5d0XrF+UF426fpOOdogh++kRDWNpQ/eXsTTmc/D0
HzzKdQfRUxCNxhdxtkdLWf0pGsKJqTMW/iV6iaIh/9jsFfSMfi+OxsKyj1tf
phB8cm6/C465HZ+w+7ZoKHKW6W39TfdjedGIf3l+g8lb8tdF0bDZM31MmSPF
R6XR4HVqOlhnyu4no1E+rMcH+Q/S96po2E5OK+/vzOL5aODKq8Odzcm/1HHw
GhydNHkD43802ifeGbX7LYv/opHnYXL7gDvJUwsH362K+REzSH7aoiGwPBky
ezS7f4+B0N9JMThPTvyPwcZuwurUTNpfJwbluxfHnrlJ/lw/BtbuNz5HLGb9
AjEwSq7z39r1FPE/BuZNYwz2rid6msdgXp+oey9Dab1lDGykRgktl0mfwe3n
NGdLTTca23D7vW088/gpxQd2MVBLWVPZqZ36n5xiIA51fTfcgvVDxAAjxFF2
nUgfPWIQpTPVUWct0Y8fg9qasz0j3cn+CWJwJa7J305G8AhjoLnx1x2rfkQ/
UQx4x5sS4i0pnhfHwK3s49ErCsZ/7vzu+yR3x1G+r+Dm+aH2N3aRPcyLQVXD
xcC+u1j8F4MeM9Vib1wk+1Eag75tm967T2T3sxz9P52cpD6d4oWqGPj4j+n1
hvUP18RA3ePgdUEb8//c7zukTCg4eJD4HwPDiQvnzs6i+aYYOO7Ze2/tWpbv
xkDLCCKH+RRPtnHwmVc56BkQPdRiofv4ct7hb0z/Y/H3y79nM71J33ViUVA3
6NeDriTv+rF4Hf+iU+Mqlv/FoqjT3csjp5O+mMYi5+yRtPPzyX6Yx8JUM3/4
GB6L/2NhrfH4QZ2MxoiF79VevzWbSB9tYtHQmrTqszW7T4hF6eeg2LnlZL+c
YmH8r4dD56skz7xYeG3r1OntBRb/xYK/vW6kYwX1e/BjIeBvg9dv0j9BLHSs
hGPOPCH5F8ai7OW/rgZejP+xqDtr+M34K+mvmIPvkkbkwa2En5zbb5GofNNT
gkcRi+s6ZedvdCB88mKhOB27yK43yWtRLGwnje9kcIn8SWksmhTHHH75k/wo
Y2H5XhxZNILkpyoWHl43W2RX2H0OR1+/yTEfWX5Vx8Fz1OKM3Q/ir4rDp6ZE
87WI5LWJG9cd6WKkYvfdsVB6Dp017Szlx22xUPuo59A2mN1/i3BX601S/z90
npYIBXu2SsJW0LyOCNdtw/bPMGH8F6Gpz99J6z1Yv5wIvuuKMt7eI/xMRSgd
4PdltzrVO8xFOLEgZK5yLuFnKYLKsuTT77ss/xNBXJFwO6yc+GcjQrnXh2HJ
Aew+lTuv0Hn8mHAW/4lgq9Zr+gfWH8gTwVAwJ/z+ONJPDxH65iwYczOS+X8R
BuxUPht5g84XiDCjtim5z1jm/0XYVhtXFB5O8yIRTDRmeRt+ZPwXwWjHj8Ur
n5H9lYvQEv5ivvFyVp8XwXSe/c+0oYz/IuiP2F4zeje7rxDB6xE2WUoJ31IR
St6rRgwexvpJRXC6kloZwPrDq0QQ5j1bMi+G4KkRYahvJea8Y/ovwvf2T9Eb
ten3KhEUFlYJfd+w/E8EC6NN9S4XWb2bG5f4d33G/F+bCMreUQUfJ7P+/TiY
vX5vE2JF8qMVh1v/PnU2DSb4dOIg9LsUU7yW/LF+HDYO3xY9VI3dj8dBkXDw
lOEIkg/TOGhIExU9mX0xj8MXtR8z+wyn+NUyDsVf2i+tGszq53Fom3rvaGpf
0iebOAjWbHXaxif47bjz24NeLn9F+DrFQUdfV+/gIzqPFwcvyRdJ4iqC1yMO
xh4puR8/Eb343Jh3Yc2+QrIvAg5eleP6twtZ/S0O+h4Zw1KNSV5F3Hk1448M
3E73N+I41PX513PsYJIXeRz6ntIb2Tif6KeIA7/lv80R+0n+8uLg4lNedu07
u6/m6PvgdkiRLvmz0jiY95bO2eZJ9l4ZhyjlLefV7D6kKg7qfy9MnrKF9quJ
g43B2+99OtP5dXEob3Gu/FDO/H8cRNZ5T1PyiZ5NcfDo+CTplZTV++Ng6K81
TGpD+tUWB+k/XnqYK6v/x0M/qPenC6wfRSsezc8//nkXRfU+nXg4ZB7Yaj2H
4NePh6lRH52RLWS/jLj1HeccDZlJ+mIaj4h9YwocXdl9UTx2f7O+61pFY8t4
jKrQH937HMGDeCBi2PqbriR/Ntz+1Vu+FIrpftouHk7uNeUdPlN+7hSPsl6h
D7VyGP/jYccPdp5XQvmVRzz0fnURvm5j9fZ4lCcXfSz7SP5YEI9qzWVfmlk+
IeT263xoRdl9Fv/Fw7B4V8wBE5InMbefzlPDtBjaTx4PszON52Ne0n6KeEhj
H3n3/0H0z4uHjbVj2c+dxJ+ieNSWre9yyo/gLY2HS/iRir+7iF5Kbr7evUvB
SYrHq+JRXDtB934q4388rL5d69uaSPDWcfyZuWBPn13sfo+bX3L1WPAUssdN
8VA5hTdOXEz3ly3xKFj84PvEU8TPNo6eBQ+mHv/L3g8lQN6secXDkPbTSkBB
yry7mpbM/ydAMfL4tsg2iif1E6DmkPtu4Be6fzZKwJUB5W+OrSZ+mibgwcR8
B7N6Fv8lwGDSl3uRWkQvywQYx27Q1erI8v8E2AbFl6WwfimbBIi0G7cvvsvu
ExNgdqjrt3PbSf6cElBpaBd5+xLrB05AzKGRczrnMfufAN45rU7nWb8xn8PH
x/fSpigW/yegJcGpg/480k8hd77OZN4hEH1FCRCbdvys9CT4xQlQPq9eX+ZH
9keeAFXrK/sZHVi/aQJKT1xfZr+I/GVeAmrCttw8M4/d1ySgzWK89tVVNC5N
QLmJ4n7Pjuw9SwJcNs1M7fiT5qsS4CE93Vs3l93nJMAhZIxsYiTZx7oE6C//
9diSvVdSJaBkYVKRREzy1ZQAvnuobnouu+9PACa7d3AQnCT+JyDRdc2t5nyW
/yWiqWduwyRj0i+tRPCdFx2a1ET3rTqJUCSXFndYQ/mafiI2hgxbf9GT3Q8l
QnzWot+0U/SewjQRIZqfF4doED3ME1GX2ffkUR/SZ8tEqP3iD15jvY34n4iq
qwuO6+tQPG+TCOXTWP+ld6h+Y5cIY9NMh3VeFA84JcLu4pT5Q+ex/hoO3qD0
eU1X6P7CIxFy+a0ltxbQ7/nceW7jFxpWUf1bkAj1vruTrg4negsToW+Xat87
n+yZiDv/9oytFz32Ef8T8e794NKlLL+XJ8LlhN4IGbvvUXDjGw9rP59g9X/u
PEvLTdU1BH8Rt3/Z7yaBBfmf0kQIhnbz36TL+re488bv/jSlherBVYnwvf5c
UFPP7jMT0fZf8dtnrP+6LhEVSxcfvjSK7IcqEQ7eE0w39WH6nwjh+QOyybdZ
/S8RRrNXD+20iNn/RLSoXf3Z8Tbla2pJqLrHM9R9RfKslQSl0rb9zR+6H9VJ
wmpXG4stV0ie9JNgd7CqeU0fdj+chMq+qkvlKrJ/pkkQDinWlS1PJP4nIaI2
4c60chb/JcEsbfXPtFhW/01C0ZyjP++MZ/c/SShY8nla3E36vV0SDAQNBz52
J/o6JXH01Fn0+S2NeUmwOel9v/wh0/8kmEwO6HXHl9bzud+vP7BSrx/9XpCE
PJWR++AUVv9LwvV4/7yNf0gfREk48VQtPfg9q/9y+/ffuWdiJ5JneRKCPL5d
dh/J7mc5+h2YciFtFNE/LwmtG56/+qvD/H8SbmHHRd4Zpv8cvq7Tno0/QfRX
JsFpzM4LejVUn6xKwovgwKdnJzL7nwTtNsfhC9OoP6kuCbx5/lUDfpB8qZIg
UHdSOlkS/ZqSYMnfc6wTWP7PndcO3pNAsvdtSZz/dlrYfT97T5qM9gM3ferN
aH+tZLwof+l+eQmr/yaj6PbyD5L9VO/VTwa/aeHm2oFU7zBKRqt2VfyxNlb/
TwaKayq8T5C9NefWVw7v+ozpr2UyRL8vOufFsv7ZZNTcd9Tup2D1/2TU99e1
XZHG8n/u94N3DV3YxvifjKYhy57bXSV95SXD9PnXx/0HkX/zSEadnWx41RvW
b5aM8sNLRRMZfIJkNGZ6Z864z95vcPC6p/Rc/IviVVEybrVMWTnnDeEv5uCf
8+7BjWyyL/JkCJrL/oz7RPRUJGPqorIhwfXkj/KSYTbHyrzlLulfUTIOtr25
M1GX1f+TsWyhm9fQU0z/k2H00UaxSov8XVUy3P667vM5zPrZkqHau+fTv0cE
b10yfHXtIu/as37+ZKipLfabsIXuX5s4eHsNOjd8JvGrJRnGD7okjTlL8tmW
jKybdoPWW7H3BymoTJ1qNe8+yYNWCmZI1xmM/8D6AVPgef/phigjgkc/Ber/
7agYaUb6YpSCxPMZ732KGP9TkDNX61vTMOKfeQoiiryfadez+98UeF289V+4
N8ED7vwYQ7PUKzS2SUHRYVsNA0vin10KSnXksvcuJE9OKVz+/jWl7AV7j5QC
6bGug3ux/T1SYCo4H/zqFckzn1t/qv+9twG0nyAFQtnz98OXsvwvBR4OJW3t
UUR/UQq05tZapzWwfswURIlqDTSZfZOnQHC12TC8jPVnp8DqWE3q0FIW/6XA
cuuJmU5bmP6nQC/Y9G73bYz/3HmS4Knj/MgfKlOgGmgR3K+Vxf8cfXv/GDjg
IOFTkwKbmymvS/YRves4frjnptscoPNUKchLGjonO4/0oSkF11d/9jI/SflZ
SwrsHgTkBcygfLQtBU4C15J8Vs9SE0Ntz9h1p1l9V0OMj8a7VtltpfVaYrRZ
1gjNDlI8oi2G3kO3hFOsXqQjxjIDjzlHg4meemII313TfuBE9l9fjJYRei0a
TQSvAbefxsCOjSksfhBjW0xFjtsiil+MxXAJ+LPmcirpu6kYISPX1H+/RfQz
E0MZoVuj+EH0MRfD7qsypaEryY+FGE0G8T27apH9sxSj3LvKftQRkm8rMVr3
9J5QEcP8jxh1n09vOj+E9N9aDM+D/LnZ7wkfGzH4Bqfv9TYmfbHl6GVjb+0W
w/pdxDDivX8TyCf9d+D2++B7KuscyZOTGKrlAuter6i/yoWjR76z428e2Q8e
h8+l22mHF1C9yE0MY0HjmHSQPffg8HnRd9SFzsQvLzF4W94v3xBB+sAXo2F4
+aJJk+l8XzF8bqeeHf+J3XeIkdzPTnNVP5LXEDF03hodenCf3X9z/BQ67Ksa
TvYziptX/dZyOUP2WCRGqc2Ly/L7pA+JYhTue7TvnwXrVxND/3be4JDdxD+p
GOIrNz5st6D7H7kYbncqHvO3kP/MESOrU2eHNW2sfs7Ro7Bow8Vs6v/JFUO6
/kpq+SmS9zwxaobe/8J/Sfl5AUd/1/YrIYdYPyQnr9NbJz2UEL7FYuw70uo8
SZ3Wl4oR1nPG9BXs+wPlYlh5B01eyurPSjHe3Y3uWBJB/K7k4OO3J1lcI/mv
EsNXcfv3jcUkj9ViaC5sdbvezOwzh5/SuGjKRNKfWo6fTzBwloD1a3DyNN3c
pW4PyU+9GBZbHhSVZLD+RE4+j91UNbmSfDaKYT45TORygsXznHyV/td9u4zi
62YOf+WAho91JqTfHP1OzOm8Zzbdp7Vy8v3c4+Bme/K3bWJYH3v6ZWYmyWu7
GBMG6n++yPqb1VJh8T7nb4cHdJ5GKmo/X7/oNojVA1MRZf5OeZ5H+qWdiroO
kV0uRpH86qRy8cR7j50ryD/ppaLtYc4Mm13EH/1UvO563N0ijOhvkArrQ/17
rGX5l1Eqig71MfmVTvgZp+Lvql5qQvZ+zzQVNe5/cX00yZNZKiSSDp1sNrL3
GKkoWV7pW2NK51mk4mOONPjKUuK/ZSpyKgJX9DQkebdKhdqDRccOVDD9T4XB
2XKsnEPwW6cClzM1qweQ/7RJRVftISemsv5521TUj8ySzD/D+p25/RbueN4s
oP5Qh1TwL5cldc6h/ZxSIRwzfOVj1p/skoqmKe8urGf+jpcK3g1Zzh0niv/d
UpFfllBwjPVneXD4BP0c4WVP+HmlQh5RWH3ZivU3pMJOYpWLZyS/vqlQ9Dkb
FthK9BJw/LhrrympJPsdwsFXY27mNJviGSFHP9ddwWMtiJ5RHL5XJ013GM/q
4alwUcu4OVdA+pKYirCMJdN5n2hezPH/7n9pxu0kD1KOniO6rto3lvyvPBUO
Zy0ebyokfHNS8fi/aasWj2P1s1QkTut84lQ0yWsuR/8NIR3sp+eS/nPyd+Bo
zdfZ9PsCjp5LC30LzlN9oygVVl3sL+3OJ3oXp0KQ9+Pc5QtUXytNRUvphHlj
QijeL+fosXJY8usLZD+VqZjg/1J/TyzJSyUnb1smv6waT/luVSpeRGlHj/1G
9K3m5Hcpb1xsEOlrDQdvx9+eSx+QP6/l5Le599Hx7H66jqN3UsmqbiNoXJ8K
y4++TT7ZZA9U3Pp19UdWZVM805iKu3zfS6PVif9Nqahat7p46CyCt5nDv87I
5PxL0peWVIg/88avXkzxTWsqinW6bCj6RfRo4+B1Cvi6QUz8b+fka59f+YJ4
9v5aApstMb7XN5H91ZCA36Vq+JQ7rB9AgrxRUU2Hr1J+os2Nd8amqb+k83Qk
aLR13KlvTfDpSaBXHbznyT+ip74ETrc23O2gJP4aSABvn0ml1nSekQQCp79H
tDyJP8YSjLVq/jVQn/UTSDh9vS4Y22Er6b8EQpGl+4VCpv8SVGpPj5i5k/y3
hQTxaov/mr9g900SrP2p9O5gSmMrCTycrEL77KTzIYFdl/ZVn9cRPtYSKF6f
C59xmPqVbCRQnum5qWQlwW8rQfXkf0/iXjP/L4Hx1b+JIQ/JXztIYHT/U0Rh
BtljJw4/81sFWc/Iv7pI4D9BbVLibVa/4uAfOlk/XUr0cuPgabg+veYn4efB
jW0N312QEP29JJiwSavbfPb+kS/BvPIfV576Mv8vQUSPlQeKr7B+J47eU581
5bN+1BAJQkQtQ/x92Pc5JGiZFrfh2ijy91ESnL9T9dST+XORBGaVmkXLp5I8
JHL7BfpfVuyi+0exBNLwAQqj+URfqQRTK0e2rU0n/sklMI99e7OnGcljjgRt
R52jd6wjeii4+ZQxlQ/3kj/KleB7oUfK2wdk//M4/j+O/XRlpyvpP8ePczpD
UvYS/4o4+rb20fopIvtTLIFPyLH76VuY/5fAcVGN1ac82q9cgtILRx2tV7H+
KwncZBnaqgVk3yol8DwVtEuvkOhbJUGV/fBv/BSiVzUHj9e0dJUv3ZfXcPLf
LdXK253wqZXAYY5f/sERZB/qOH5J+x+5q0n41UtQk1Aad/QwyZOK22+jS85M
Z7KnjRI0/H1xawjr32mSoLbs7bmbkWQ/mzn+Wf64vy6Z9fdw68U/bwS18kj/
JfBteuJ55BXRv02CHImJ2fcmgq+dk4/86C9p9iz/S4PRt/FX7/jtJf1Pg/bx
XYM2ryB/o5UGYW2HU+9MKH7TTkPr6Pf6HiJ2P5SGOnubQa/XEX310rD7Pn9T
1knWL5KGj5vs9fJ4tJ9BGrTeN75ztid+GaVBsOPOgr/jiB7GadDUwJ01Rqye
nAa13ZeDntt5kv5z4w+ndzfUU33KPA2uBmdW8juRfFqkoerupSe/VhE8ltx5
XTIt0kfR+VZpKLW/3ByxlPQVaRCL1tTEZlO92DoN+fkFU6d+pN/bpKH9etud
uVep/mqbBpvq0rWvq1l/WhrqJ2yZv7+E+OfA7R962M9zDd2/OHH02WR1/cFe
0kcXbryqv3h7AHvPnoa2fR/dZ24meN3SsDrtyyBvVn/y4OZnK87OTqP40ysN
is0PvcM+sP6WNLg5R+gWfSJ58+X49UTn3JttVO8VpMFq3aPnp1TE/5A06Pzx
ePNoJL3nEqaB71/goMfeu0elQZRk7ajD6ClKw9+7OzJ67yd9SEyD5P7i/xaf
prE4DR5hJnsEH+j+Ufr/8hJfUq8i/sjTUGMzPjOM5Xs5HP+Or09fMofyHUUa
VE3Lp1Z0pv6NXE5+/K901rdi+p+GSXLn9MGs37WAo/f008+6mxE9i9IQE2yF
rsNY/J8GuW9ofQd2P1iahq5VBTrH7ckelHP0THSLlSxg/p+Tjy3VrzZ+JntS
mYYrDn63evqxfDwNXyra9xRLCf7qNESdPDNx7zj23jQNJjzRpecsP6zl8LN0
bfN+T+8l6tJgsTZTevgp2Y96Tt/2/2nO3Uz8UHHw5NYVNIup/t6YBuWFzwPG
VrF6bhqqm8d4/3xL+DRz/Nx/paXoNq1v4eQzeOhF2x4038rt/7Ch/7thZN/a
OH3Q+u5YXUj0aef0t/CuQ++R7PtJUrR82pLv+5PiYQ0p+LtN3ga9oXxLSwp5
cJX6+SuUz2pLUe9T0vnPSZIXHSkWrtqh3oPRX08KjykXFu9g7zH0pTA5sjZg
kpzobyBFvJ967b1kdn8sxTvX6E7bsmhsLEVQ1dx5M/oRvU2lEJzccUwmo/zT
TIq6ac2nZ21l90tS1JjnzNknIH2y4PCJr79sOpXwsZSi/KdLyYcNpD9WUtgM
NzW77cvqT9w4xdDtOrt/tpai7U3ojifWdJ6NFFW3jlsO1iH62kqhdeP35lL2
nsmOW59a8yVoEcX3DlI01T1sO9qf9Sty8BUqur7qT/GoixQ6S/jzjn5k3/OR
QngkevE4S4o33KS4FfH0+QXWj+YhxW7n3LPXAsl/e0nh8HyM5ffh7D0xd94y
haj/A5IHXymUFj903ZfQ/gIpco4MtjjenexriBSKZbMfNWym+FEoRXteyWzF
I9L3KCm+l3RxzDtC/BVx9H8/vZd2K+2fyNFj0pJvi4Ko/ivm9mu6cOLvWdJX
qRSVH77xg9rZfakU6He1tM2Gfp8jhZrx110jMqnfVSGFT1onZR27X83l4Nfd
2nGGNvXb5klhUP9uaM9NxM8CKTTy688vZPasiOP3o07DFyjIHhRL4RW9b/HQ
X4RvKSefQ1xHFlvS/uVS2I3/2sVqDcGj5Ohn4Tm3w0rS90oOvlhrTWt3X9J/
KbS75lgY7KT4pprTh7mZ+6ZK6Pc1HH3tfRwny8if1ErhtKj2zhN1kq86KeZ1
XrCrSYvkv57jZ/bfYzeesPif+318D/NVv0hfG6XIe/Mo91U3wrdJiqIZkj/T
rhI+zRx/qkJqhn5h93tS5K9t97vDvifWKoXbmPjG5dcJvjYpKhaJTkZaE33a
OX7YbPprmZ9D+p8OE59gdYvlLP9Ph9XaBaNyh7D3AOkw3jB+Tut00g/tdGwU
HTE8+IN9LyEdom6vvm1/zfQ/HR6xVkevMX3T5+bLW7VXmZF8GaSjeNywB79P
Er2M0qEf1rVg3xjyl8bpsCs/YHBhP/VnmKYjpOvH9c7s/sUsHXpzYvTmf2Xv
sdORGNhlyE0/kj+LdPCbsruMY/0Mltx5ws5/S6oJfisO/rGb1K3Z9xiQjrBx
9uqL2ftj63TEWI8ZcV1A9LPh5is3bg8pYPl/OtzWm/f2Ze9x7NLRUPvCZ+9p
5v/TodzSqjHCgfn/dLQj69zw3QSfSzrUc4YvecreR/C4+ZxSt/b/CD+3dNis
vjC/W3fm/9PxMbDRpdGV6O2VDsXKfaJpA9l70nRof+io/+Q0y//TYdA7tIuD
Jet3SUfO0tkbl4YTfCHpOPE7ZE13dfZ9Ro4+sy/u7v6a8I9KR4vb+3NNK5j/
T4fQSytxxTTKDxLTUTN8RU+nKLq/EnPzWbrh28vJ3kvTYSvx7JSYz+J/jh7u
wxa3fqN4I4eDt27ZtG988r+KdFhodru5bC3FM7npWD1qys9SIav/pSPqWYh1
3kf6fUE69iWJurWx/omidLj81o4+fIzkoZjjf+1FzbBtdF5pOtrs/EfWPSX8
ytMxVo+3VKbLvh+TDtPgSiehBsl7ZToEJqMzAhrYexwOPv/Lmhfv07g6HaUX
PW5+DaR4pyYdvIFD3l0fy/w/x5/m0runA1i/fjrqcn6ua9hG8ljP7X+rTXYp
nPVvcPgYLH42qZjpP6d/AfZzN08g+92UjtmbM5ODFhB+zZy+bDp/4eVX9p4v
HfUjR151XE+/b+Xg8U8pvZzK3ntw/BqoqqhrI//Yng7x0EmlFufZ9yNlqP25
PfZ8FJ2vIUP50esr4/eRvmjJ4Pa26/opSYSftgw6yaHHF9VSvUJHhtJFf791
aiZ7qidD44y9riviWfwvg9HT504p5rTeQAbMefTi+mN2fyRD0fjf086zfh5j
bv7IOsnJPoSPqQwGgyYEhFcRvmYyyD/0jM/5RvuZy9DcYYvGoG9kbyxkmGG1
+8zeZaz+J4Pw1YDn09n3aq1kGJrg4LRUg73fl8Hmn1vwmgraz1qGdrvDNre3
EX9sZIhq1fZZ9obobyuDY0heGI/VA+1kcBpxQGCsR/s5yNB3y2I9b3Y/4iSD
3s7i9BlPaL0LR78O14+lHGX1fxkUvXPuPvVl+i8Dv9t4+dejVM/wkGFqR+eH
qptkP7xkKB4aO873LuHHl0Ey4e9t4yga+8ogyOs1dR97ryaQcfa6+J5Ck9aH
yFC5IDRzxFz2fUoZ6ov0t0rY+8woGV5c/jTiijb9XiTD2udNuq/6ET6JMlhu
2Vwy5wDBJ+b4/dtghOUIWi/l4D9gu7jtLNXP5Bw9F464368LyX8OJy8msUa5
11j/jAwWJ3bZt94jeczl6Ll8vePeYNZPw8nDtNW2O3vT+QXcvPHUISm1VC8q
4uCZuHNW5giS12JufufboxM6kvyVyqBcWzr5cyvlI+UyaMY2fK5fy76fIkOV
xtKHiUNov0oO/rlD5/Yez95jyZB3I/5Yv3CCt1qG62dvRJXqs/5sGW5pj5SM
fUL2pJajp0R4Sn8S+ds6br+G2C+z2P1ovQwuNj8sVMzeqDh+TmhpevaK/H2j
DOYRY7ferqR8tEmGtrQ8JE8heJpl8OiiPkv/IuULLRw9v61eovCi/KVVhsev
zQrms+9htnHykDxgQ9cBdD/YzsHTIWTUFfYeWy0D8szwityzRA+NDKjlP+n2
JYG+P6OVAdPuWy9I7tB9mnYGYqTnuhTvYd8LyeD41Xp/2Rk6Xy8DdvnD1n/S
Zf1iGfC17Xe2j4LwM8jg5NHrYRarZxtlAFMyItJeEj7GGajbfXrDZ/a+wDQD
5XUVNRUiivfMMlBqk5O0in1v0zwDB9sLAwL3E74WGXDdO+XotBayZ5YZMHtR
kbHBk8X/GVB199jimc2+X5ABpVvfJ5H6JK/WGcj7dyx7tC3lPzYcPaquDF4+
jfaz5eCt/X2sYRHZP7sMaG7Yl5zL8lUH7veSYx0j+gpJ/zOwcFj2Vxl7/+CS
AS+fojOGy8i+8Dj8RgwI9RbQvFsGGjv1cbSZTvmiRwZECbvfvGbfL/TKQHFx
5LmGCtI/Pkcvhxid6ULSF98MlM1sDFWvIvkScPDYb/nkpMnu/7h5648ir9Hs
+0MZML75vO3tcoovozJQc2ed+fIjJG+iDOTmaa6eq036m8jB4/R+47Qkkidx
Bq6/MZug/ZvoKc3Au54TLRvVmP/PwJLBbx9oVhB9cjh4XnfZrGpg+X8G+iJL
U9OC6JubAUGw9jOtbWTv87jxqqUTch4RPQoyoL7INOvxb9Zfl4FR/8Vp2+VS
fFOcAal+h+WHJ5I9KM1A1VFzL9V64n95Blq6/TlWqsb0PwOzU82DNW0I3soM
aEydN0GH9XNXZYA3efLZHk20f3UGDPK/pmolsu+tcPja+EWW7yL4azNgmGMm
dG4k+OoyoJUWOMXnDeV/9RmobOZ1Pl3BvgfIweOSKZrL8Gvk6K8+q6lPBdGz
iZOXEq0ldbYET3MG9g2cWHmimta3ZCCqwsRr007m/zOw+2jR54JlRO+2DDyo
TagtLGP5fwbEYYd+bX5A8ZyaHLs7potT2fcHNOSIEvZ/sXMIq//Jkff13gLb
MFqvLQfMn/NyrrDv5chRuubJ9zBWH9PjxqJbtQWXKB/Wl8P6ZKr3wW/s/k+O
ipG33+XPZvovh9KnC79kIvUzGcux78Palf/dJvxM5bDNOR/R+ID2N5PDPO7P
8lu27H2JHNWtt2Z+92D3f9zvT95wCfIh/bLk4O/257jkG9X3reRoG/J61LgP
7Hvdcrh8qzpYy77PYy1HS+v8GrX1dF9vI0eMbOKmUVOZ/5eD17nt4SKWr9tx
8K/o3iV8LemPAzd+Ylx4w4D2c5KDP861Q34AxYsucmQFVE493creL8uhOhnX
nj2U4HWTQ3G++FTuBdJ3D2793i8rf9nTei85tk3f5ROVy/y/HAabr+1ev5r0
01cOfcupNbcaiV4CDt7nqwLqBlI/Y4gcRoH3bugNZP1PcogODMvdMo7Oj5LD
SdfN+mI7ya9IjpzQ009XODP/L4dW3I6IU+Es/+fw3aX/OnwJ2XepHP7HL9hE
P2H5P/f7mwO783JZ/V8OHY1eP6+NY9934eBrvX3c8g/xI1eOuiwv87uGhG8e
B+/oZ2pbHAm/AjmEa68sRSjdlxbJUZI65/O1N2Q/i7n1Vxzuap0nf1Aqh+6Q
rmMvzKX9y+UYZWOutqE7+34O9/sPU5Ll7D1lJScvgZmHpLYkv1VyNHqaBBtu
Yff/cqg5dFisK6Hzazh+/uw/4MIg8qe1HD4XtQ6d1iT7XMetLz3fNUzG6n9y
fHfMPhd3i73flaPqlSJr11jidyOHn47x2TP7KT9vkuPgC9UCQ/a97mZO//pc
kNveo/igheP345QHBvlkX1o5fPy6Hza6Q/6rTY4az909/NaSfWjn9u9yNutj
GKv/Z8Ks779dad+IvhqZSP6BrQNnEz5amVA+tOig6UL4aGciYuTW/AFXmP/n
5g9v/LLcmuivlwmb5+YeDaGEj34mErtsze8wjvhvkImctZaZYSsJf6NMVA82
L1w0nsX/mVh2Yo5/4Qam/5mw+J4xxOAPnWeWCVOdAYG1rB5sngmJIHdpyGnS
N4tM1AhONEVFkH+yzITo1xmzfTMpHrHKhF5LYoe8ruzvFWRC5/3VhOqz1O9s
nYm6pVXrl18heG0yofJ8mHh8GPHbNhMtY9rm+7Pvodpx60/kHMptIvvikAmH
NcoOGdasXzkTTmOXdTuwge7vXDJhVbza7Vocq/9lwsfXecDeEUQPt0zwP4xY
fb6Cfc8iE1F/vM9e2EK/9+Lgn1S21ciavW/hzj+VK/5zkeD35fAf+M802oT6
FwQc/QpX9zw9hPQ7hPv9mQv6Mdns++WZCAn+PePgS5b/Z+LXV57vYT9W/8tE
+acYk4ZDFA8kZkKrZtanA00UL4szEb83/47uRBb/c/Jjk3QrNZ/G8ky0dUn1
PVJN9M7JBB5Kx+08TPdNikzYpjxoObSU5f+ZkM8bfeo6+95iHodvxKzCT/6E
bwG338if8SWVLP/n5M3pQ+CLdtLP4kw0txcu+ulJvy/NhPV6u2sXvSieKOf4
e383Tngz/c9EkTz7XI9pdH4lh3/fa6e8epI8VnH0lDmU5M0h/ajOxLaPM77M
/c6+t8mt337O770+q/9lws7nW2nEKfKvdZx+fRuStjaT+FefiaHPeA9Lb7L3
exz9f3kKVm+lemEjJ9/7HlWPtif5a+L4Nfpr2pl3ZM+bMxE2/G/LTGtW/8vE
iTi1h9O3kH60cr+3NZ405xSL/zl+fG7f3WUv4dvO0T9okfXRINb/n4X2o5/V
xQNJvzWyoJobs7zbZxprZaFCHmp1v4L5/yyI9lln7mH36zpZiPrpXOLH8lO9
LBTNDDuh60L00s/Ci+61X+dNZv1/Waj8GlrY0459PyYLfC+18of/SD6NsyDs
dVl2KoH1/2VhbPeDjhlzab1ZFiZ1DDRJZfGleRaqF1iOPStj9b8s+OScCfuz
jPTHMgsTtP51qbQne2HF/X7m8V6/stnfW8hC7dfmaUvY98Sss/B3ifeGd12J
PzZZ8OpsN3PlGZIP2yyEzHkW8CiD7I1dFq5ErKo/OYzgc8ji/MOekWYmVN92
yoLi6OOtO0bQepcs4EjvqxVPKd7hZSHPIT7pmDPZDzduvt9u/oeTFH94ZIG3
kT/Sk/WXeXHnxT8pmjqW3f9z9CvzN7T6Q/mLbxZ0BFlWmu6UjwmyoPXrgGAI
uy8PyYL49698dSX7fjbHzwmPx18ZTvhHZSGG93LvoC5M/7n56wke016RfCZy
+O/4tvfHUfY+nuNXQYpPx3HU7ynNQs6ytvRV99j3Ujj4PJc5v41m+p8Ft7Yl
Azza2PedsyD93vhPtYf0M5fbv7BFs6sX+55CFmrsigZ9zyF6F2RBe/K1l6Lx
7HugWVjdY4aD2lLSh+IstAS8MlnmzL63wZ0/ttT7axDRszwLGwtKiu/qsPt/
Th5yb28tucz0n+Nf6vzftk10f1qVBX0Xzuvokj5Wc/ieTNnf+Jq9z89C6def
0WNWUv5am4XEM76a59nf/6nLwsEfdWG+Z0ie6jl8bPam/ppN9y+qLEx9Uzmu
xIbo1cjJd3T38TvY98KbsvBFw0+3aAqL/7NgN2OO87JN9PsW7vw5jYbVx+j8
1izUcbI5mH0vpS0LXXN6Oemyv7/TngVL0wv7hndk93/ZKE9c1OftdcofNbKh
StK2/niO4i+tbNhNc1k4V072UDsbvLWGix0PUf1XJxs6P+xmd+WTv9XLRv7s
bupeQ9l7EW59+/pqx1EkXwbZmGF7dFWAkL0fz8b1NWc0Z70ieTPOhtGrY2Kt
euKHaTaiFP2+JngQ/cyyUbMo0+9BGdHPPBtWBh1G1D0mfCyyYdDTZNHmbPbe
jIP39ZsBzUbEf6ts1Lvd7WD/m+QN3H5TUnacOMz6f7PhlP72xZoOFC/YZKPQ
pq77+TrCxzYbwomP+1fNoPfAdtlQvr5pG7Ce4gOHbPS12N4v1Ij01YnD3zr9
Ws541v+TDcFFrdLXR8i/8bKhcd62IIp979mNW1+1IV7nBPHfIxsvkr42rmH9
AF7ZGOUT4++dwt43Z6N90D+3rEE075sND4ObFffDyN4JOP482jXgjxXFByHZ
MB7mdX4O+96EMBtF5cllYwtZ/282RNPC/XJ3EP6ibBTf7P9/PH17OFbd87ck
SZIkSZIkIUmSkDRJUtFBkoQkSZIkSZIknVBJErnd7vNRkiRJkkdSSZIkSZIk
SZIkqd71u95Z3z/3tfdea9bMZ2bWYdZMvN02nM8kZkBg5Gi1kCf0fjT5P+Fm
in8d2uOUDFh9VTU3XJnO/wm+Pq6JvmeM9oJB+P1925diY7RXrAxw+cqs86T7
TzxC/z/1Nfk0P68oAyx394WlTMP5U3YG+J0Yt+Yah57/ZUB1IO9YkT89/8+A
qBnfrObZYn+FhP5Vs6c5zsfvizNAwXfKoTcS1JdSIu/OBfd103A+VE7+nxf1
eg+NX6rMAGPzkt4vqmgvqog8dwdPctal+38ZIHNzR8aNyYiHugyw/ynkxNVR
/SftOYjdHFuQf00ZkOQ2rGsGzYfQQv63YjUkXEN9aiPPdbXfzs/D+mcdGZDW
OabUrQf1tysDQqobf7+h9yF7MsBt6an0Pa6oT30ZIDq714btQef/GXAi0k+5
7DnSM0TwUutb75xF6+UxIGrMb9kTaji/kGNAy5iKvem38L0CA/JTipz/JdPz
fwbIzEvQsjxI82UywD/DPn2uNeJRjQEqAaMHVZ4hvjUYwFj7vOP7B+r/GeB5
3Zl/nofy0WFAv8W/n6F70Z7pMSDEwFzd9AKeVxgw4O9G7rldjlT/GdDzV+vd
7giq/www2z4vtlsP35szQCnMXGvzO8S3JQNKGTfrF8/E9zYMaHX89k9pGN3/
Y0BEmLlg5QK0b/YM0Glb+GqMKvX/DFj984d+7nV6/s+AxM9O395w8XktA/zk
+5+NoPcNXRnAmn9twWFPlKc74ceTkn/+Mfi9JwNE+yWXR0yk+SsIfQ9Vjisu
wfWSHwMsQ89PsH2D9jSAATkhn6drWdLzPwb4KoTJGxZR/0/G7zauPjAQ9TGM
ASbuJ/ZfoPU4Ikh7nQVjrtH4pCjyvOSP7uF07C+GAUOHYvkf7yKe4hgQszGp
feadY6j/DAi3i9/8fgLKJ5EBHRlOcR93oT4mMUDul4f/8UnYfgoDbAyDfg4d
ovrPALttz3xH0vvVDAZ4pBZUZF+m+T0ZAN8/BV2ci/aZxwC3V1vnbntO8ykQ
/qRsl9m7E/dbshng1F314GMIzQdL6HXZXajVivEC+QSfMsrLruavQP1nQEpw
f3bWesRDMQO8f0SsCVGh+VcY4BPdnrl3POK7nAGuUWodHyvp/J+MR6S9KHYH
+ocqBijmhpWnu9D5PwNS393c5vGdxv8TeVfnztATof9pYIBjTZnziX+oT00M
MP76cc7hXXT/nwG53bM8d1xHebcR+vcuGqdohfjoIPqp82tjrAs+d5Hxasxe
3dZC8zsyQHB76+il6qjffQxoql9zzeMByn+A6NPriE03JqI/HyLtWz7mb7JB
/shkQovm59YAGo8qlwkyyRLhDh+Mv1bIBBNG9I3XE7A/pUzwaZIdFXIS929V
MoGR/m7x2lfIH7VMqLr1otewEenVyAR48fne6/kYr62VCdW/fu/+uofmVyfv
a1VKZn9G/6lH2o+1E27MovqfCU4NH86sofGMxpnQVfhf08eV9H5ZJvztUVr9
Zwxd/xP6/ea5qmnj/NsyEwJeTBqa+RvtoU0mSHrNP5jReAvIBAdOfGS0DY7P
PhMMVjKK13zF+bJjJpTOO37zFY2Xd8qE4CC7nXMP0HofmWCZuvXftmy0d66Z
cLbh7b8FM+n5XyYonEv1rJ+N/tyT0LPQRTf2N13/Z0KM/3LDggvU/2dCr+v4
Y49t6fo/Exoctrxa+ZSe/5Hn5rtZv/9XTyUT7A/MMjt5BvEWlgmmgVN+blPA
8UVkQpD0toM5jd+JygSbSbfDi9PxfUwmnMoVtxtux/VHXCbUXfYcMopCfTmV
CWFbrKtdRiI+EjMhqa8sKtUD5ZuUCfqz0hVqV6A9SskE5tCezWGhNF9aJuhw
Dr3u9sd4DgaRX9b7nIu0PhKLtG+qZL1nGNLHywSW2ver22l9IFEm5F64VrBo
BOIrm9C7/UHF7Dso/9xMsF72b/irx8jf/EzIF/8oMZxJ820QPCyxuzW/G/19
MWl/xMn29kc4vynNBOVPxsfjTJAf5YS+HM5Wa7r/VEn0w7fT6b+9OH+qIvgs
Dxu5fBbNN0/we+FG1xxdlFcdoU9hbaQdzd/WkAl+of9u+AhwPE2ZEHH7adLT
KbQ+A5Hn5atTi54i/9oIPicb/ecziO11EDym1pw53YHr4S7yfGnGSMV6ev5H
+HOA9bl9PuKjj9A3gdfRew/twUAmlKc9VHA+i/IayoSoV9zn3Rtp/VMmJH6I
9lxD80PIMaGnd/RW9524v6XAhDq3ido/xiI/lZgQZaz3ZOQPHJ8KE5w+vd2y
8h3yT40JPk937PR4T/MFMWGl20P/PBqvocUE++sDr3pofhodJsT3hG6dYIP8
0WOCSmVSwvY5GD9vwIRSry7uiVjUZ2MmNIyctDAyB8dvygSZKweKJx5D+2nO
BIaMw8cfU2i+QdL+jbytV/yQHzZMcBxxf+LHnzT/FBOYs7Tv5NF87vZMSD67
ZrmXNvLTkQki63sBy6aivXJigueT7+vtKmm+Z8Iv38OtHoFIvysTVvvNWvf2
C81XywQ339mTbyWhfnsyQdZH9dCCCrr/z4SQ/rSI8nkYr+LHBHWrkmOea5He
ADI+I6+PJTG4Xg9iQtqSyQmji7H9EPI+Syd4fBjWdwtjQlXB/Q1nA6n+M0Gh
TatjdTriPYoJrreeqt/h03q2TOi04QW+Gof2NY4JA0smBsyfTPNhkvZ9Rinu
WobyTmRCb/PWkEJ/Gv/LBI+ucVENlnT+z4Sm81193x/R8z8mmEbcPtVF518M
go/Jc4t1z1P/zwS5OJOt5w6iveExIX/xqPCCEHr+T/A1X8l14S3EazYTOsb/
8Dn4l57/M+GE/EX11bfo+R95nrDV3/AHzbfIBP0/Ap/Xp7C/YiYoia8JLXfR
+myE/ymR029Nx/lMOcHb6YbNjj8Qf5VMYHXYxJSNxPlJFRNy3+7+V9mH65Ma
JvTPaZv1xxrlWceEU18G8x7lYH8NTKhvHPVEJp6u/4n8pLZe9bQ+awsTrKPe
3rnkhfrRRviVk1l8pgz76yDyW7Pp4bg9iO8ugsc/Fm391N/3MAF+X7dd9hrn
L30Ej28Mvq3+Tdf/pH0rFw3vZLRnQ0zQOOlzdngIzf+TBfkz2gN6pfT8Lwsc
jx8usXyL/k8hC6y3TU7LS0L6lbLA52HyuJnqaI9VskBn6OurXi7Sq5YFpZ2B
kbq9OB/WyCL4rS1u4eB8UisLGtZ+rW2i9el0skBtmlnZeZo/Ty8LtI/q1vd0
4bNBFgTYtybK0/yYxlkg2f0n9rYE6TfNAl5N68QBe8SLeRYE/dnYVRRD4/+y
wK80b65zP+qvTRaEV33o03ek9XuywDctnhlP84nZZ4HT5fjg8iJsz5HQ/6VJ
ceVqxLsToe/I5dvzNFE/1mZBeVfy28RD9Pyf8O/UunJlVWzPPQsUOE3n7Jfj
/MMzC2rs/rzU8sRnH/K+sXvBwRbEq18W9Gy/kGuaj+0FZMHgqa+Gr3jI/6As
yP3He6dO8z2EZAELKrd9WYPzibAsEByNm1FF490iyPPuyDvTaL7BqCzQGBd3
iUPrYcRkQdfbla7vvyCe40j/efNZW/j0/k8WiDQ/MVK86fl/FgRmfhmhSesX
JGVB7OObSmu6EV8pWdCxeZnX6f/d/8uCssQFZ7gpVP+zQGujoXzqWWyPlQWK
QdscXK7ifJiXBWtrH3Q9FeN8RJQF1ReGDdtJ94uzs8Dcov9rIK3flpsFhc4c
pTtedP8/C0xM96r41dLzvywoOXunc9ZjHH9xFoTNG550WxXpKyX4Uaiz/7IM
17/lWRBx8LpTnwzqW2UW2HxdoPTEF/ldlQXuw7e9uPWK3s8neHEKmDbWBfW5
7v/4F5ej5UfP/4i+qP3+dOISjqeJ8GdFo1KdP83fQN4faVtrF0Hv/xL5TFuX
tLyVxv9mgZyM38Ojx9FedRG8Os9LUNpJ8zsSvL9mMiseYH99WRA32/pOKI0X
HSDtLdw0zyQQ2x/KAs6mqJkPLWj+ZxZoOHgrbh+H/cmywD/r2cR7S+h6gAXy
hm6y7R8R7/IsWD0o/8Wjj8YHs0BFNavi/ie0l4os8Jx00XoSk8YLsqDBnj3s
1y/EmzJ573r9/Zksen+ABcofIrrPbMD2VVlgfPiTrdQN/YEaC5Sq1wxMovX1
1FlQuLX4rJIH+n8NFrhadHQfuoLtabLAfDI3bdxJGm/AAh3vr6oNusgPbRZo
pVcu/NKDeNFhQcxZHcXFC3G/WJcFp2L361j243xIjwUyY7e7B8xHe6jPgrUz
1A8uMqT5jliQxmjf36iB+mvEAnuXtZHHrdHfG7Oge6tCfborPpuwIMTo/o6J
tN6FKel/XGu2eSv2b8aCJsc5B1Z00ftMLDDbwe6t0kH7Y8GC0tRNZeo29H4D
C2p6RhS10Hq91ixwyh389f0j0m9D2n9/PTnoHdoHWyKvqcMuzD1G61exIOml
akr/bLwvbMeC+PtjFXp3oD7bs6DZ0chHRP27A3m/ft1nk+80XzMLvAemqS75
hP2vZEGQ1TzBihDEmxML3P89UUih8cmrWaDXOSD/8iba47UsCOtTvvyW7k+5
EH5nX3Au2oH0u7LAYIG2284d6C/cCF5vz9K2e4jv3Qk+D8t86BiJ/3uwoGjT
pr63KkivJwuCI8wCan8hvrxZYLl82VRTev/HhwWNAzNqrtJ4eV8iX8sxamMb
6XkMC+BNyvyBe1iPx5/w89fkV8s8qX0m/H+813yWC8Z7B7Igf4Ofn68h2pcg
gs+nVVavxyH/g1lQlTytS5lH81OxIFfuv4m35yPeQ8lzxHG1ROrPw1gQlTxP
WvUd7U84kdfbjZV7M6h9J/wym6X4+zW+jyTy3fo1a+k9HE8UofdCggdPB+vz
RLOgf4/8wjYnWn+JBWod86/l0f2GWBaEah+Qe66J44tjQUp71ZGaJsTfCRa0
rJwpW7cJ4w9Okf4XKww0BsX+/+d4FlRHrfrPiEPjRViguiRpWEcq4uksC0yj
26fP+EXrfbGgxHTDALcGn5NJe179J4IKUL9SiL7EnmFdnYn2JZUFxdvDlnX+
h/hLI/r2RNYx5CX2d5kFrHizwgEt6m/I9z573W7Won1ksqCiIDVF6EbrtbLA
pv7rQSGNl+cQ/KgNi58bjHjlEfxOVZ/8bDbKQ0Dsw0uFhr++dH1K/meWL5Nr
QH2UEP7ILi5hzMb97Wwir/vWJdEsXD/mEDyZedkHiDB/Xi7RpznTn8ycgfTm
sSAwRClPKY7GsxN8G80eV0n3WwtYoNjEHbmG5pMoZMGjCEbHxGc4niJiX1do
bp66FcdbTPRnm+OWiCeIjxKCj/N9w7PSaf45Fgz5HTn56Dnis4zgP3lO8dRz
NB6OBYMKqq8tFNG+VpD3oePu8vcgfiuJPsnbS0fMQbw8IvLdxDv49wnOb6pY
oH9OOGoOzU9dTezlhuufJwTgfLuGBQG9S1v6tyH/awl/VvFq4wR4PlpH7HdP
Qsur5dh/PXmfsHgweCmNr2dBfebtjCA5lH8j+f7bV/6zBKwP38SCxPWqZyc8
QPw2s6Bv472rjBrsr4XIx2yLxk153L9pJfr3vWNVvADXF20sUIjlXtQcj+Nt
J/L9o2m0+DXuV3UQemZcNTzXiPzsZEHHId3qf4vofT3i/9weGCwZRP50E7wY
nL3vFkzv7xL6NHp382vQXvQS/5bwZqiJh+31Ef4VTT8FBkh/P8HffwkmWzfh
/s8Akd+mhivnFmN7gyxgKDi+u7sB8ThEvp9r+jXxLvLnLwssIpYWXthA65+x
4dGDuooJtD6oLBuSZu1RS6T15eXYYGZc8uHCQaRfng3BPWnVx6/RfHFsqDRP
H5+Tj/xSZENEwSy7z1E0XpgNvPa5+0JpvVdlNpTeEy7KZ9F6s2wQpQe1r6lC
f67KBletNcbe+nQ/kQ0BEcPPbaL1QtTZ4JMftTDfAOdnGmzQUvPZPIrW+9Bk
Q9i2kdfUaL58LTY0jVkQuNsK29Nmg68LQ3hJjsYfskF5DmPo5AT8X5eMHzwq
F35D+vUIvcu2x6ysx/1nffJ+xiEeIxXjOwwIfZc0zpzejHgyYgOrV0mY9Anx
YsyGlhXMjCtbUT9N2FBmwlDa8AjlYcoG+/SBBVI5nH+asSHN8MBDzhT0T+ak
vd1bjA/rIz4s2BBS5HwukO4PWZL2yzZe3KiK9YKs2WD+4cbAFGecb9mQ9sv7
hs+Zid/bskF38/enZXto/CMbYg57y83kov+yY4NMnMZ/LqlYT86eDcYVPS3x
N7E9ByKvz36yT2k9ckc2SA58vx7igvZoJRvcVxdHZFSif3Yi7X1r6ZFXPIj+
nw1K18fc2+ZD87uxIdHZ7L/Jw9A+uZDxLhqzd54l2ktXNhgl7vqXFI/yciN4
Wvxe7j9aL8WdDQwdrQllatifB8GHomdVwD7Uf0821MQlrKt/hvrkTfDatvxw
WRw9fyX8eS6/ucEW5ePLhqGljctqJmB7fmxwMWOuyruI4/NnQ9fwUuu/etT/
k+dVtlflLqH/DmRD7emkdqNE5E8QG9pWKvq7nUH+B7Ph1J6vwbX0vkkIGywt
TQ3UaL6SUDL+HcLIUyUojzA2rFz050PcL9T/cILntwvNbzRj/xEE/5rPlnZc
QH5EssFN9VPvxceIryiCF5OjmkryeB4VzQYDhxuqcyi/Ywg/DCM32zgg/mIJ
vmM2Gu3RxvlgHHn/g9FZUYftn2CD4wfHsy3DEe+n2NCx78kfI7qfEs+GEyn3
lFc8pvfFifzbjzemRJxD/8+G3MfLDM2SUb5JxL4IV3o6FKN8kwkeFQtmjqf3
UVPY0Pda+4+PIvaXyoZY7tN1VhbIvzSC/9LX4eNG43z6MhtMFm3svLeLxpuz
Qe38ilGDdP+FSfAQvaMsehzu37KIvmwSdPY8Qno5BL9Bu0IF9D4Djw1yZ4be
5u1D/RMQeQW9ujuVxnuI2JBvPO31PkWkX8KGnrYardPb6X0VNgTKfBqja4HP
OWT8I9fFl01C+5VLntNXbo2uQX3PI/yNb6h4uRDtVT7p/0WB9U+a76+ADQN+
pYkfaL2TQsLfbMGn57qY/6+IDSqzk1LP0npexYQem8Zjwx/g9yXkWc7zi5kD
3f8m/P6Rrlhjg/GmZWwoef1KJnIR9f9sKM86ljJoj/KvIPTp26Sr3MP5eCUb
6sa7lK+j5ymP2NBg8t+ZlzzkZxUbmndoHkzcj/yvZkOy15xfbixa34jo6+qd
xZyNiL9aMt4HX61baf2VOjb8LZbWznHB9uuJfR+/cetu+n0DwYduUNWUPfh9
I5HnGW31Bdn0vi0b7FY9ye8wR3vXTMb/e9b0b7tR31qIPVMe+509CfnVSugL
SVj1MhHl2caGaoVP+/bQ9Xo74dfBlwFRnifR/xN957iEfRuPeOxkQ/FIQU7l
FxqvQ/TzhLbnl1M4H+hmg/pRxqqEafi+hw1BRyeNG1mG9rWX4HlOQKvKSbQf
faS/GRMtajdj+/1sqFD7bc2l+fQG2OCknp3y33r8fpDg6fP0UePccT95iPy/
MdKmVBfnU38JXqRdp78X4nmMDAeG7MaIpi5FectyoFR6aU3uP8S3HAf8eBrz
3LMRP/IciJkw+WjfNHo/iAMR98JmiKKQX4ocgO2V/zluxvNYJfI+8HRzwiTE
izIHtJZ4HphLz79VOOC9JTAhbxzyQ5UDnVfS3LQe03hC0l7p4/1XFan/54Dy
hGrpu17khwYHCk5eCGo6g/RrcmAgff1t43B81uKA0sFvOi9p/WZtDjRoDuQ3
rqH1yzhQPP942P69SI8uGf/x1BlmtB6rHnl+XphwPQTj5/U5kKx9uqLoMs13
y4GwE10DLU2or0Yc4Bj+CUs0QPwZc0B0Rk9hw318b8IBmT0yqp6zMR+xKeGv
QVPkFDrfM+NASsf946qZOD5zDjCedz4pe4LvLcj/139fHcnG9aglkR87Lr/3
MPLfmgPM3PuapsGoLzYcyE/+VLD+PK6vbMn/LnnDWzbheSxwoMeqQHT9NeLP
jox3Q7TRL/aF//9szwGDyIodUnre4sCBosWSJC81ej+aAyHabyuqDBDfKzkw
6KwvTAxB/juR/sSNP8/kUv/PAZ8XHSOOVdD87hxwD1k3J60e9dOFA7kbH+R/
+4j8dyV4WXMqIrsa5ePGgYAUkcpXGg/pTuhV2d6n2or1xzzI/wfKOc+243rR
kwMtKk0G6bZo77w5YMrudKt4iv7VhwN1ViPCLA6h/vuS/nobK/7bhv37ccB3
T8+YPDnkpz8HPC+WXJS7Sv0/6f/f1MXlsRivE8gB6+uHh5VuQPkFkf9/KezM
v4z6GcwBne9eqmEP0b+GcCBu4liDY7TeZCjBC/dUyeyJ6J/DiL412gc3tmI9
xHAOFKpOZjgk0vMdol/jGwKFDJxvRhJ6bsixS9Yh/6MIvvJ0C/6+xvFEc0D1
jD1Mr6b1bzjQqjZrwrhZ+H0sB4LWtpza8gLXg3GEn9fCzxV0o7xOcOBUp9vG
+g9oD05xoHGf8MGoRBxvPHlvK7PvRyTKM5EDXZObWdtuoP84S+Rvkfd83Vlc
3ydxoPaQINS/EP9PJvqeN/fVhVScv6VwwMZv6rmGd6g/qQRPGR17lDqwvTQO
OPyShj1eh+O5zIGcZUop2dMR7wwib53eYalB+MzkQNuo/GbpdfTnLA4keZ0Z
7nsC+c3hQOjZwRdXTel9FDKerAMzFLvRXwg4UHPHP019iNZ7IvrqFqxqfAH5
JSHynfnz6o+J+H02+d4mM6P4Nq4Xcsj4pyler7mD/Mwl3zeXdrQl435THnn2
C6ju2IL2Lp/wX9utZtMaPF8p4EBepzyvh95nKSTynmmiPyYc8VfEgahIP60d
MvS+G9Hvnx9HaBnieruEA/28Sa9MKD9Kif3IPTu7TpWu/zmgO2LKj14L5Gc5
4ffJPz8O5eP8toIDFVsUJ3ofRH2pJPq71s3gjhGu/x4Rezja/EvOP9TPKjLe
JXYDt2h8TzVpj5vLPPWD1usm+mcTuCjxE7ZfS/jfEJzqG4p4rSP2RSmzbPZ/
aH/qCZ4nvr199Amth8YB3taTTs/ycH7YSOz9V0XdB7QeTROR77OFsabZiJdm
gq+OC84OF5BfLRzwj7ROAH+0n61E/yxtToAuzcfDgfZ1p14UKOB424m8r7bM
/l+9jg6in2vrc8dfRHl3EvrmR/uo03oDXRwo+SW8fygI/+8m9qh7r9PXDtwf
6SH6fGxd7KMS9I+9BC9X0y1WH6XneQS/HsNO3RqB8cj9HFBJn2HxQB3xMkDw
bPa5xtoD8TtI+H3F+VfLdbR/Q2S861epTm1Gef8l3295ONfOBMcrw4U0+4Ls
ymN0/58LopSYTxcD0F7JcaG0Imq8mg7KS54LPfrts4MsEL8KXJA43didDmgP
FblgfnOq0pAr4k+JC8W1GcdcXuL4lblgGqjdN7KI1hfhgvrf37lfxyB9qlzw
S5s9MmU3vU/EhXjPqWWtNJ+COhcU/h1yqveg9Wi5wLKtONK4CunX5MIJmzve
i8yo/+fC2o4N+5dRfdPmgmXF5F+7ltD9fy4wGfmf1xSi/9LlgtnDDcPLV+N8
QY8Lzbmfn1m7Y3/6hB8+OYffuOH6wIAL5YfPbP1I64UacSHkr8DZxB7lacyF
vgV9+yxlkR4TLlx2ubu+7T3NX8IFH61rOXOikT4zLtQqVi/53/1Hcy4ki69s
c6L7RxZcGGg14g3poLwtCX3QcyHaHdu35oLKqtGJ6fT+mQ0Xor4dTrXdg/y0
Jfyd4v6Rq0PrV5PxHJk2e+16xKsd4afB9ButQ2gv7LmQtNrl5X+ViD8HLgRM
Cr3P/EzzdXPBOL9TMCoO7cdKLkQYluXfC0f/6kTo/aOqsf4hym81FwxyXM/P
tKT1Pbigddvu2/anqM8u5H2zdd3YX0iPKxdqVnkHF1L/5cYFtbV17qr3cPzu
XAj6udp1uyfd/+eCo4Eua0wvjt+TtCfZ5HDeA/npTfB40tfrrgGtH8gFl2ub
L2bto/v/5P2JgLFmtTQeiwt22x1nzKHnvf5csJm//Usjl8ZncyFY4+/V904o
n0AuGH32+hh+muZr4kLuHZ+fh2fgfnkwF/L3NAw9Gkbzt3ChcOJ7i6L3yL9Q
LrTfb15w0RnHG8Yl+hvo+fw18jucCzoXbFPf7kN5RpDxNWbWbjRBeiIJ3kZ+
MXaj9wWjuNB17dpyjWWIj2gi32DJsvR6Wv+GPIeNHl04G/EXS/RlQomd9Tl6
H5wLnmsCCuc9Qvt6guDrc3LAkggaH07wfy9hSkMN8ieeC6csX2Ss3YT6kciF
7FELLcf5oL6fJfQ/mjog3EPr65HxS3s2aHdg/8lc8OZtinYNxfZSuCD3de/B
/Z6on6lckDkdvUCexqencWEo8KXhN5of9jKRj4X8oJ0Xyp/BhcqLe99XrsL+
mFxo6TAc+UEP98tYXGD4ptqM3Yvfc7gg+LW19OZbmo+KC9bNHs3d6mi/BFxY
PXTywYanaA9EZPzlk8qUQlCfJFzQPvSk9yudj2dzgTfkZbPtEfI7h4w/aPTt
C3swnimX6Pf4whcbab28PMKP9K45X8X4fT6xd4rtYaW03kgB0ddDKS5VXsjP
QoL3Z8+m/3mA74sIXnZut9xD49eKiT5ezwqKP0TX/6T/56/3BjjgeqaU2KtT
L8aul0X6ywi/9LUW3NiN85tyLkQeulg9qQj5X0Hw7vt+fvR6tF+VxH6lrHl/
zx/peUTwPomRdf8PjZch9AzrXf9fMa43qrmgN20ZP6aL1rcg8hw15XhOAp4f
1XLBZFOQo+FelGcdF0K3hwzuV8P+67kQWJ3Qd8ka5z8NpP3sWBuLURiP2siF
2K9ZzsXn8fsmLnSoRyy4ZEX3/4m/e+B77PUotDcthJ+fvF8b9CK/WrmQZzL9
bmggjq+NC/Y/c0//c8b22sn42k6/tdqA+Osg47k66nAevU/aSfzj+ywXbVqv
vIsLFivXzfm4BO1LN7GfIWNPvk+j8ftE/7q0hGqvkH+9xL4NqNjKzUD70Efo
61PwGnkH1+/95Fns/HHUUbzfOcCFuM4Roa003maQC93nFir9vE3jfYi/ay89
bEfnx3/J/znWw0pz8fxJhgcKTVWO2YvQv8vy4ESdNWM3ve8txwPWm9FN/zRQ
X+R5ELfgivEMJcSnAo+sr8Nq8v/n/3nQVjq3ZMRFGi9M2j+RcHeCLNpDZR6c
GrRIzpcif1R4ENbUUp+yDfGvygPrqVp5IztpPCEP3A9MKLhjg/So80DdSLql
+zDNL8yDShOBg0kS2htNHuRF9UbHLKH5xnhQ53ek/UAHtq/NA/uEXafneFP/
z4NGeaebnR+RPl0eFMaY6lrrIP71eBDdULdY8SL+r88D16YQ6+FP0B4akO/3
jLvHeon/G/EgrSN9KZzA7415EDhj0zhNJeS/CQ9kGu48DPqF57GmPBi6pOmj
/RXX32Y8sHv5Z8Dmf/kMeKB212tYH60/YcGDkM3nrjjK0P1/Qo+5Wb85rT9n
zQOdkvLPr47S/X/C/3vsMDsa/2LLgxbptMSRmTT/MQ96thbqZSchPu140Pz+
pXq4J/LbntBX3z+3/BLqmwMPTB7kvh3uT8//edAx2UpQno36upIHjkFfMqbc
w/MpJx48Kj991kEL21vNg4KbV8fcSqb1fQg/EtQCM+xxfuFC+HVkY5SVN9Lr
yoMq32tWm4+jvrjxIHevvvDwGpyfuPMgSU7o8fMo6p8HoT/Vie9H72d6kvFJ
1l33f4b65c2DyyMl2bz71P/zIOaNq3DrRtxP8SX84683+jYd8e3HA97Op4pa
1mgf/XlQfj/u6JEQlEcAD5r6v/8Ztx/9RyAP+menbPpA74MG8SDA1u2y+ACu
J4J54JSwf/RcGp8dwoMgq9qYaLq/HkrGq3d8i9YKfB9GnrsHj+n1UP/Pg7Ib
B3Lbx9H7XYQfWpqzznfj+jKSB277uUWlNXT9zwNf+9FSlU1ov6J5UJqoc9PB
F/MhxfAg3Or6lg+0HlUsD7riav0n03jiOB40PB4evfQGrm9OEH5ta43xnI/7
56d4wCkPCgz0wP7iSftyw1qKttN4MaIPSiohD9lI/1nCz+Upwjxany+JB3Kz
bwpsG3C8yTzIr/q9xuE63f8n8su7MH5KHNKTSvD2RGfse5rfII3Yp/EuvNQu
bP8yDwzW16kbqdDzfx6Izow1+OKJ+GASfpoed95G60uyyP8X0+9ZjcLxcXhg
xDwZmETzYfF4AIuP/n3KwPMKAbF/hvkxlZq03jsPBp8khGu9Q3lLCJ4rJtne
pPur2UQ/18zc7mGA/M3hQc2FB5yu1TR/DcGPXp1IrQblmUf+b9thyvFH/5LP
g95b5f42Z5G/BTxYO2rFtsFC1K9CQr92S4bVJeRHEQ+MrZyPJzsiPcWE/lvm
V0z20fN/ghfZ+nHzNyNeSkl/c/TGdPzB+2tl5H1zU8ZiOxoPS+T56Pwu3VvI
rwpij64lTp6bhfpYyQMBR6W7mu53PuKB7tAhZouE5svlQXz3bveibqS/mgey
cTfVd9P7BDWEXrN3hxIuIX21PNBYanm9hE/X/8T+y7re+BaI95XqeaB/vW6p
E71v1kDodf/V8I9F9/95MDDH9X5xKc23QfjTyl7wrh3XY81kvN1We1VjkP4W
HqTy2L+P0PPMVtLeJd24+VPofTyCX2aVxpZYxHs70efHY5xN22l+fiLPzPqh
XReRX52k/ZbcR1Me4nyki9hf3TFv3rvS/X+Cx8KFk5+/o/V5eeCjmLTqbAvy
v5f4U1HC/rXbEM99xB/qiNpXv0L+9hP837/mu5vODwd44Hcl7Xn5e8TPIA9i
k/7q7wuh9T7I9+7n7xx6gPT/Jfb7vtVT9/+d//MhatKdnrwxyH9ZPkQ8uZ32
Txb5JceHnuaZ/O4xyH95PpgekxaNyUZ9UOBDjNmRqH+5eD9GkTxHxuUv3oHn
A0p88FHY/vZIOc5XlPkQYhUqWaGN+FThQ4DhpF8/x+L8X5UPQ3Pn6J1VwfGp
8aH2QML3HppvQJ20FxmjtXQqvV/Ih2IdztuaRWgfNPnAitHNe1OI8tPig6Nd
//JDv1He2mQ8v/1M214j/3X4UPZa1ilyJOJVlw9y2qrDnLtpPDIfuo53hO+9
jf5Rnw8qJ/fuu7wc+zfgA2ytjS85j/gz4oOTZ+Kt1iF6/s8HjQlnWpdJcP5t
QsbrKMt3p/XqTfngF3XwWdBypMeMDwP/Uh8lArZnTvi1frb59Qqkz4IP5TZP
2F776fqfD6VdGrMCTXA+Ys0Hmf7qYzZ+29H/88F45vFcYT32Z8uHqrluNoun
0/qbfGCwQ1ruKCG+7PjQbbgwT0L3w+z54D45ZsXZ30iPAx8a19ZlZ8qjPBz5
kNbr3H89C/G6kg/xt2PzR81F++1ExlP/qyajDPm1mg8tTcXv/Kxp/B8fzC04
5pWl+L0LHxR8EyIPKKI/deVDh0vRlgR9nK+48eFsp7ylgIH4dudD7p+fvZVq
dP3PB4Pns0ZeiEH8ePKhzmVY/9JQ7M+b8GPHt/y2Y7R+JB+atkkmbqH5K3z5
4OaiOyX9EV3/88Hsb35wkSW+9+eDrOa/N15P6P0swu9b+55aBWL+g0DCzzV+
PjP7kd9BfAheMXadIA/5FUz6D5RevOlF1/9Efot1e+snYTxRKBlvw+1pL47S
+9xE/gWbH25Zjt+H88EzUN55ugOt70Tw4/3hisYrtEeRpP2MnxUjI9BeR5Hx
3811nl+P/Iom7eXZH9E+g/oRw4dKr4z2JAMcXywf8h9b925IoPlgCF5zPrwT
xuL7E0SfFj1+cOkq3f/nA89cdq+LL13/E/nIj60VaNL9fz7Ebtyr3rQb/z9L
9EXztvspa5yPJfEh9LW/ROMIjf/jQ0pIxsIZBjSfFB/aKrLv64lxvp5K9JeX
pJpuh+fnaXwYfDS9M04ex3eZtH9vwc5RXRivwyDjWTbSfkE94pfJB4cjZ1dE
HqT1Z4j8pJoHmybh/RkOH7ytbNLbXWn8H/n/xbxJLEUcj4DwQ9Ff35ze/xTx
Qcv15JXrc1C+Ej6Eb/is+G428iObD4W5/QdWnkF55hD7GOKrkxNB68OT91lh
Wko0/34eH/TGHWtumEDvs/NBV/KlscMC9bOADxVH2R6LaX2sQmJfHGXiDszC
8RXxwYS5Q8XTiN534UNSyXRtW5r/sYR8bzXWrdYQvy/lg7yvvFovrTdVRuzb
T7uWdTS/TDkfarYkjpavwPlFBZHXzrNrzcPp/Vg+qNW9iLL6jO09Iv+bDOMu
0qf35Yj83KWiRpo/u5rof+r35pZ4tBc1RN//3gsMfYLrz1qiDzKZMjxl3D+o
I+3/+nbPZA/yo57Y/637rw16IX8byHjy2rw5O9E/NfLBn2f7Opbel27ig3bv
omjjcyjPZj4EjrTc5UrPd1rI/y/t8hZm43qvlQ+qn99s8ZqN8mrjg8fvSDge
iPxuJ/atp3RS1Qykp4PQ4+PpPEwd++8kz/kxcr/u56D/J/7V4o/eG7rf0c2H
AmWP9lmHkZ4ePhjNPLHzzAqkt5foT8OCWqD1Xfv4sLpmSBBK893188H6giS4
Lobm9+ODJGXH6JrT2N4g0U+v45erQ3B+OUT6T+XcSL+L9P8l+qEzslb8Fs/f
ZATw96/K6oyb2L+sAIo2Kr3sHaL5wAUQdth6wci7+CwvAEstt1uzT9H8AAJw
XydbG0Dv/yoKoGn8LgsVev6hJIC0P0m3GhfifrCyABpfddj/+I/WlxZA5f6Z
yce+on6rCiBp6gH2FBHGL6gJQONHXf/q6zhedQEY7Nln/MGa3i8WQOCKqD7H
iTT+XwCuW8qTrRk4/9MSwNrYxkiRD45fWwDKsvbibj2af1gACmETLI4aYv+6
AjCTfbQkdCXNRyKAgUn3m7J8cP6kLwAZ90fFnFpa757QM2X9RpWJKH8jAcjJ
7HJbeAD/Nyb9q0pluvMw3t6E/N9SFvM4Dc9zTQUQujV7/IhnOD4zAax+3LU2
kZ43mwsg/9zeZ/POozwtBKA2YffjL+/RvlsKgDPMgPMpAufT1oTeZUsLBGmo
jzYCSFwcfCCUSff/BVDId2p+l4L6DQIYKj5TUKqP/duR9x1jgsM303yIAojQ
i95UDMgvBwHoJM88Y1uC9sRRQOxF9sSdSag/KwXgp+adcGk+/u8kAK0UZvTT
YXT/XwAxuS2BjQWY/2stkb9DvOa3pdT/CyBgq0q3/Uxs31UAUdv3SG/Q+B03
AUDwU5hpjOsfd9J+VuC4jTT/twd5/3swr20Q99s9BcCazdh4/A2et3sTvE9b
93AYze/lIwDtt62f7ukgP3wJfQEZn3L1MZ7Aj/z/89+fJpoPy18AK3t2tixx
wPEECKB/4DXXlYXyDhSAqqzl/TfadP+f0PM+ICR6A64PggVgw5LfnkXrUYUI
QO+ayZHQsYi/UCJfjffRq87g/2GEP+/ORa3wxvldOOHvU8fC2jp6/k/kq6St
GZeP9EUSfVj5wrnvD+Ilishn8+f1r+XRnkYLoEUzu2cFH+15DNFvi2VJA4uR
/7EEn2t2epY7Uv9P9OPXE5nNDqhvJ4g8/L5UXhiJ8VenBKD+q3RVmTvKJ57g
L529YW85zRdB9Jc76v6ncuT3WQHk8lexv9P4yCTC3+lbIz/7of1PFkD5OOVG
m3CaT1YAzYyFjrXvkb5UATRYPZ7FovYzTQC1073359L19GUBhPStvCgSY38M
AVSVztS3p/UbmYRfF5aGfd2C9LME4MHUOeszD+nlCMDc8LlBkxH1/wKw8FeZ
EzAL9UcggBLO3NgYWs9dJAD5PctNHtD6WhIBOGmm22nMwflntgC6DLWu5x1D
e5kjAMf6WQe1lOn6XwCMfROYxXbYfp4Aeob9mqvTguvzfAG0b4o/NXEs2ssC
Yl9v7do/hY30FQpA8HJq3XMzpL+IyGOj7NzmLJrvnsh/Teq/b59RPiXEPl54
X9S0HJ9LBVA6O79q9QnER5kAWpWzf12OQ/0tF4Dp7H8zmcm4P1dBvm9J29T7
F/17JcGj3BmViY9Rno8IPqJ/Gx3Kw+cqwi9e8opntD5jNZF30WT1kEJc79YI
oHe0T8H0zzj+WvJ+rpFM+2SaT5vgJeGsrXgC8qOeyFd/9ZMzVXgfuoHYi4Zz
q7reoH9pJPQb6j8ZN5bW2yT2auT88n10ftQsgM4FCetXjEB8tBD5K5r3H6H3
g1vJeGx03nmdwvVbG7EH75MPX/x8Bv0/0WelFXzfm8jfDsLf8wwp9xzqU6cA
fPd8KD99nObrIf0XNJwGC1z/dBN8e96Yp5mO+Osh8lbu2FGcgOf1vQIIP3PW
VOiM+t0nAH8r85z8o9hevwC8D4/10R9P7/eS90eyfmyi+fkHBWAcw7Q7sgL5
PUT8x/jk5SY0H8Ffgs+ZX31G0XqJMkLINhg30Lidxv8LoXLVrfAj49BeyQnh
lJFg08lBpF9eCGFKbaXxf1CfFITQoefhG2WH/kFRCHUx87heV5B/SkIYmPi9
eflx3M9SFkLMWuP4dLofriIE+az61Of76fm/EBhjFn98G4nyUhNCwL53xUUB
6F/UhRB89VYY5xaOX0MInv92SRdfQX3TFIJqzoHPG+4gvrWE0HJv4nR5Zzxv
0xZCk+P9I5eqaP4xIehUqbP92Lhe0BWCljBDSxqA7/WEIONZrDFxsSf6fyGk
jVAy+fQK7aEBaf/F+g3SZnr+T8Z7MuncWin6L2Pynr2zSkDjEU2E0FlctHvE
W5q/VAiJH98mH9Kn8f9CMAWP5v00P4S5EIaOq29c/BPfWwhB4VjcPI9pKC9L
Io+DI26kfEQ8WwuBdxC2GBjSfIdCgD1XX2aE4XzKVgismnlJW61xfgpCuMxd
cWr3dtRXO9J+Y8KdFHV6/08IkgDH3KRS6v+F4Hb9fXYbC+XlKAQng40xe2i9
2ZVCKB4eeLDPmdZLEcLa4ysi39D80KuF4Lvxhm1dNerbWiGoiLYYnNmA8nYR
QoiST9zyo4h/V8K/OJ99R4YQr25C6PPzPio8jP7Qnbwfc5Az/jHy10MIipd+
bLlH7y96CqFqfMLn6xcRH95C8OuytPuwAPnjQ+SltSPURxbl5Uvw925BqMlH
uv9P8LG8+8vTlXT9LwTRD5aa9CHKJ0AI3tNGxn2ZiPIPFEJu0dIcNRvsP4i0
92Ce/NiR9P4fae9jzFGn+9T/E3k/ztV4MIj7Z6FCMDFpVtMYwP7CyPi69k1Q
ovnHwwn/O3Kn3qX36SKIPsl2TnnJQX2MJHiISti5bjut9yQEyz0nx8vuRLxG
C6HUe9ifgmso/xghNCzcsrLxJPI3luCdu6vBwAbr2cYRvHj1/ukOx3xAJ0h7
f80FBYPU/xN582ROZ/5DPMYLweeEnlrPSrr+F0L+75nZDFcc/1lCr1zG5CeT
0V4nCSFndWZAtDfiJVkIdiFeOfer6f6/EP7mifgq2xEPqUJQ3iT3eMssml+W
9P/HzLLBle7/E3k2dFzsY+L+JYPYt7ft4sSDdP9fCEmy4gtqG3D+yBJC2Ryf
uddp/WgOwd/2HC31WWgveYReleOHslbjfr6AyK/zwKKLNB+BiMjb8kj5sB94
viMRQvyPytcHWuj6n+B1ot7PgTrsP4fQZ1d9YmUn/p8rBNcPNzN62MjPPCLv
24fv6NP6bPnkud2pr/QSntcXkPbW9vpfoftHhcT+xihHJf1B+1gkBPUfbSfD
Vej5vxBaxY58bgb1/6Q9kfXLi3KIh1Jijw7dL9g8Dr8vE0Lt8Oc154KQv+WE
f/u2isJvI30V5P/JPVaWd2l+PCHkjVnOCr2D84VHxF/0LZTbxKb35cn3kgeK
qlsQj9VCMBd0r7A9jfytIfq/eOSaxctQ/2uFUDARPAJMsP86gjfl6YWlNH9k
PbFnvFA3PRrf2ED02zZdQfU0ft9I9H+MzFT3cXT9T/4Pyf7l74r61kzGU+Ff
P8ua5t8j+LYvLf95EuXRKgQbuR2vrefSejzEn5RdNltB/UW7EHreJmTPGUJ/
2EH0W5y9d4sx6n+nEAS63HcJXHzuIngb9Wkll9aX6xaCwaOdynEfaf5+wp+1
5lac50h/L2nvo6vrrlzUxz4yvncVyqGfcbz95P8Xj46W6dD7/USfPbY6/+ah
PAcJXi2WHstahOvNISF0KXlUP6L3rf8S/5U3nDMwA+2LjAh87mntkiun8f8i
6Hbt3pcQifKUE0G5F99B9yLql7wIaotip9Woo74riCCAHb/NWg3xpSgCN8UF
J8Kicf6hJIKQDoPmvFP4rCyC0gtnFv+3C8+/VUTQ65ExfvJhbE9VBFXbDC21
BlE+aiLQ4tp+P0HzL6iLQOZRqMu5AryvokHojVu8yYyeF2uKwLWn++qe57Te
KBnf+Hhtz0KMJ9YWwWV2wNXd23C8OiJouXl72iwJ6reuCAIPNC/9o0Tj/0SQ
pPK8qtMD90v0yXjXZ82Rp/l0DETQqjfLKec79mckAr/jI5sNLqJ8jEVgxruh
I55E/T+hv+nOZ5/1GA9jSvjzxeXiuqto/81EkP0+3X7nX3r/TwRO3anSrgDk
h4UI5F4s7A3Spet/EXT5f5y+m9aPtSbj3VD71Z5+byOCGmNFdk4uzt9tRXBi
gtGqkJc0/5kIIkTpbWtHIX12IkgVj3+sQOcT9iKIeSBJ2lmL8yMHEQxkTVG5
5Iz21ZG8V36ePYLWl1spgp4pXzp5TegfnUTQMFT4wK0F368m8l/p8v32JLRn
a0Xgea9q8aK32J+LCGxq9Oe+oPlqXAn+lNziLzXT+D8RNL6bfNH2L47XnbTn
aO5sMBzXBx5Enk1uKxdJkL+ehN5zr/d6zcbzA2/Cb87K4ug6jJ/1IfSbvv+S
2Yv5aXxF4Dj/Yt1QM9ojP8K/Z/vCn7zE/Wh/EayVO3lY7gnOpwIIvecLPrco
0Pg/ETDOvXr0xgznJ0GEPmPnf9+voP0IFsHq96tLJL9p/nYyvgUuRZsW0fv/
Iqj8eVYhZSSuh8NEcCqr4NxmA8RDOBmfXVbDEl1c70cQeTY3L3pUjPOxSDK+
OWm7lT/g/1EiSHE6tyfzOfIrWgQmNsftZtH4lBgRqAgmRobTfBGxItBealn4
rhXxHEf6b+5d9JiJ64ETIijaPTPNi+ZDPSWCuvm67adofE484Uews9nzXzRf
vAjqzWUUO49he2dF4O7dmm6+GPGbJALWtomiwhHI72TS37HKPbIyKJ8UEQDf
2ctQC+WXSuT/2Wz45CjsP43ok0HXOee9Eej/RcBcIadkOB/xwxBB7G6142sM
6P0/8j0nc+DGG8QfSwTBzi3jRJa4fuIQPA5vsUroR3nzCH52a+7WHk7X/yKQ
jBrusOcb8lMkgn5zd3lbWcSvhMgn5MPGqFl4vpItgiGr+N/Nafh/jgiCvC+8
ekvrs+eKQOPxRpM/35H/eSKIu56Y2XkG+ZFP9LuFechxHD4XELyWJ6UlKuP+
YaEI9H4t4R02Rv4XEX0uu94UG4L2vpiM52Da/Ek+6H9LRNDhnBrna4r6Xkrs
rcYl18M7kL4ygr+4kIU+6ejfykl/rUX7JR/Q/1SQZxOTt3kvLqH/F4G1o9Pp
5vVofx8Rfj27drb8AMqritjTYCtGNo1XqRaBUsewW1e20fyZRL4/Qi+0/kB7
USuCTtdGiWYzzadH5MVas3urryH6fxH4d4+/c4nmw2kg9JxvrbOl66FGgsfL
/UtS99P4f+KP3goGztN6OM1E/04mh84+huNtEYHOu42DzO1Yz7xVBKKz7uol
t5CfbYSeqH/DFI5h++0iUDf49qKI7i90iMB0+KDyf/L0/J+MZ5TcS52pl9H/
k/GGfrj8gOYv7Cb2uYUTcLAP9096CH1p7788VUJ59RL74Xcpb/Ji9Hd9IjA+
/SvgigPisZ/oc9eThfV81K8B4o8WTpj/LhHnf4PEPp0tTD5P758PEX7ktP01
3kr9P/FnLZnKb5/h/qiMGIZyT4TvykB+y4ph4OOzkw20PqOcGJp740riAd/L
iyHOoWuxujHOVxTEELPimEjUi/dPFcVgmqymvm0Z0qckBrOSvrGzaX4eZTGU
cgqGh3/G/BgqYtDzyFu0Jh3Hp0r63zE9cSrNX6smBvvksfUn6P6Euhhk9guf
O5nj9xpiyB1Vmv/lHvanKQadCw7nk/NRP7TE4L7Y2EGhD/21Nvl/q4rNfwm0
/qgYWoTK9z6sRnnrisHg9KHb2YEoXz0xJE616DD3RX7qi6HA+tDRkvk4HgMx
WGePLP8sS/0/Gf/5Oz17mYh3YzHYzZVbLZiA9sGE0DOBrZvERnmZioHX/0Rr
9DWc75uJwfWu8oKaJHr+L4YI92PamRX0/r8Y/mrMMYum+5+WhJ/ZNUUDAZno
/8mzbH9Y0RHUJxsxyLluzfYbg/TZiiGgbnZ59AfEAxB6lRuj85RR3+3I85Qn
MaZjkV/2RD5RPgrhf3H+6iAG9W2n134zpPXRxaDQdeBS+Sa6/y8G8w252b2B
iHcnMXREzvV8dprG/4khZPgr5fQilNdaMcjfXLYr9hLN/yOGmkfpIyxHID5d
xRCla2/Z8hzl5SaGMKuJ720/4nzXXQw9ys1eF+bh/MaDfH/zzqh/pxEfnqS/
KNPf5rfxe28yvjd/4mfR/V8fMUBy79XuBsS7rxhUJhhtT1yK6zk/MVSxO5US
RYg/fzE0aMS9y6P1eQOIPFRf3dSh+QkCSfvGp1z8StA/BRE8TX7nGLIe7X0w
kc8VL3+FDTT/jxjyGUMRdfT+fCjB59UJWrsvYrxtmBgcYrvPex1GvIWLoTBw
XELrK1rfUQzx2q2T/Kvx/0gxOH6yeTxnHs4nogh/5y1NuTAb30eLIWfWHaV7
dL0dI4YU5SvJq0Ro32NJ+14q28rDcfxxYkiSct/oLsH56QnS/pMtdw4cov5f
DIP2eXaK9ehv48n4diS3fDVDfiSKQfvLDOtfPPz+LMG7waua0/00f6wYFL9U
z59E64kniyHUe9dUZVqvOUUMrKBcq65YfE4VQ5/Y91AOjbdLE0PxxNclXZfp
+l8MWmZG35LofXcGsSeyGq/WKeL+LFMMkdnD1+wR0PqTYlDj8h9yaL5kjhg6
V+p7zvZEfvEI3q7tND5QSeP/yf+qIxS30vWgSAxp/cZ9QPczJGKo1J12NyoC
95OyCR7h6ruRjXT9T+zhzx0jvPNp/Qoi75KQYV8aQtH/E/wZbRz56TDqZz6x
t4ckOdqL6P1/Maz9Z7WioQXtQyHhz7qJc1bk43ymiOD1w8c9b5ajfy8m+J/z
wU7rH+pniRi67hkeG/4O9alUDD6jTEZoPUT+l4nB8vOWqiIVnI+Ui6H736ol
r2k9gwrS/joHwzW2tD4uaY8T0/JmOj4/It/fn7L120F6/08M0SXLNzPnIP3V
xF7qydW00fozNWKwYWyYVxqI/9cS/S8zCzV5gvFidYQf614d6LSi+X/EELT7
iuwPHZRXA5HPirEMziccTyPR5xEB1m3DcX3ZRPzb7S/MT7FoX5oJvUmPvlxu
pvX3iH3d17/6tSbKp1UMol1rWpnWaL/aiP3y/ON4wgf52U78nWj8hrSn1P8T
fTgTkPztEY6vUwwrnRdkTdCn9XqJf1E7mGNUjevxbiJv7dxr210w/qNHDEZd
7z+OU0X72Ev8Q+4+w9RRNJ834ded4ANrqH73i8Fv1MuSKb9RXweI/o28d9Dv
Lj3/F0NrwSc99j5a708MzO0H2L/dkN6/hP7AH/VnViB/ZCSQUqkpe+Aw8l9W
AqX/tu3ath39h5wE/vbeSqmg+fvlJWDvLV84KxzlqyABx53Li8ppfW9FCcgY
Gmz5QO2rkgS0d/jUFdJ4XGUJ+NU9+NvWifqqIoEuo4cdTfboH1UlUDN54q6P
S/C8XU0COrsWutkmof1Ql0CQXHGZyAv5oSGBiKLh2oZq+L2mBMpnMmwdBrA9
LQloTV3OUNZE+6stAdWRK7cM0P0QHQm4rYn8F66G9kBXArqL9L8V0/sFeoQe
nZDD93agP9SXgFKg88dSmn/MQAKw9tN30RPcPzCSQM/g7BQnRRr/L4EGGOES
eBv9hYkEBmoyXJ3peYCpBNq+236UnMb1opkENIRHC/efRn01l0C4lSD9rh3y
z0ICzDdDmS26KA9LCagY353a+Rj5bS2BwhX31bZcpvVOiTxy1GdGvabx/xKw
jWX4H6f5xYGMb+GC1cfmo77ZSUAtsDxg/BHkj70E9Jk2X0a4Y/8OEmiRWDh1
DuF5uiPhr5XjqB9PkL8rCX6sNz00ofsrThLw2Vu9/+dRnB+vloBI80K9dS69
/0f4c//NyIJrqN8uEjB3/9OV1ojycyX9gbfZwc34vRvBX/+oA5zPKC938szh
XfoqwPF6SKDvUbtjsB/1/xIy/0hdMmc96rc3oVclPvj+PLr/T/AzXrhHpIXt
+xI8Wo3rWkjXC34SCKieGmRih/sd/oS/O4+0v1qH6+sACcgyRrs9rEd5B5Lx
xp7mW73E+UuQBOpDp/UW0niSYAk4zH7ltKCXxv9LIH996KyLnah/oRLIEcS8
6WvD9sIk4LQxZUYx1b9wCZjx9wof/6P7/6S/EAfrQ7b0/j/BZ1vBEhkjbC9K
AmHnhxg6t9AfRhM88O221Cfh/DuGyGPm5UmjltP7f4Q+Y+HzD5U0HzQZ/5E1
Y6cvw/GfkIBAdfHYE9q0Pjzh/+jkW1fN6f6/BNyv2l99T/PjJ0qAIb99RiLF
71kJnOrJ6h34TM//iX5/s/i5zwnjQZIlkP2sw/QYC/1PCrEvu/XvzmtBeaZK
IES0zm8zjfdNk0Dl3ICwcXXofy+T/5cnMJOv0nqTZLxFtpfc66j/J/TEx64s
y0N6WBIw0tliNzQS7S+H0FNzfbZqE/pTngR4Z1yWiSvRHgskoNlw/fCQPF3/
S6BiwTgXiTY+SyQQNUP6urwV9TFbAkmdu+N5bWjvciQQM8bS5Ichtp9L9OWR
+EfFTvQPecRemmmsT1hI61lJQGHbpIORkTj/KSB4XbT0geMLxEMh4bfimN7L
C9C+FxF8hE5zsj1K9/+J/ngsrQnbgvwtkYBL0T+j2U9p/TvS33y5H0waH1dG
8GSyc2t7NfqncmLfVF7MbqTnvRUS6P205UUzXe9UEv6+zo+SuY7nKY+IPQk6
N+zYAK2XSfBVkNJ/4iHOh6oJ/fF2718CyreG8OOZ4/UbAXjeVEv0M8ry2yBd
P9QRfWtbW3f1KX5fT/iValCnJMXz3AYJBH8qvtpJ9z8bib6ptM07rYz4aCL9
D8Z1qlWjvjaT9g6w7h2pR/62SMBgb3DzOVvERyuxrxsT1Z5lIz/biD03itpu
vhrtXTuxJ+du9rB+4Hg7JHD588Y7CnuxvU4JeEo/C45ORnvTRfAaOzT63Vbc
n+wm9tpwI3eGCOfvPRLozlzT6RiL+t4rAdfeLwbhZ2k+XwmYLqxi6B9D/9ZP
+i9qG9j/Hu3VALHn/RltR7rx/0EJlHHd5pXQejhDxJ6Pu245/SHqz1/C39bc
A6qrkT4ZKfhoL93hQutNyUrB4CSrLCyM3v+XQktgwByLrej/5KXQrXjY3Wwm
rQ8sBcuDP/JeNSO+FaVQtemQ5hdX9GdKUnC0/yh7mIH8Uib9WRQaHdqH6xsV
KdQsFc3Q6kI8q0qh68LZlBX0fo2aFGTYm70WT0B7qi4F9RVzmO9oPTMNKYTU
s34l0XyUmlLQu75+yZ951P9LAbKbvd6JcX9CWwprreYe0Y5G/utIweOg2tcv
tdierhRYY0PvZZ9Bf6UnBbeT9pfG30U86UvBISQr/P14Gv8nBVNdNi/5J+53
GRF+LT84xtWI5v+RgtaEiV6HaHyyCXmvumHS7xG4/2NK+HNu1649qYg3Myn0
iTybXv+h9QylkFi48Up1O/ZnIYWAbZv8PBfR+qZSkM+Xbc6g+msthTpBy3Fp
L66vbaQQu5T3eiyNJ7WVgs7lBQsW0XzIIAVfvmKCQznaAzspBH3Ky+gPRrzY
E/45Lv5tysf+HAi/ij0V/tHzXkciP68JD2ABjf8n7VvdPJI7C+fjTuT9PP1/
rhK0B6ulUPA9WKxzGf9fKwUb95vV/kL0hy5S6Bw3OGtIQvP/SEFh9PA8vpDm
/5VC8L/E5nDqX9ylIKood8+fhHj0kEKHXtrHBTtQXzwJfrarHj/WhPL0lkKS
47FDUb1Irw95P3/SGPkb2L8vwdOBVQKVTWi//Qj9xr+sntP7A/4E7/zExDvb
UR8CpFC2N+TKr2DU/0AppAXZTdXagf40iMj/3I/v4YHoT4OlYDspYeIfc1q/
WQoxmeH7nqfg/k0oeV5rNa52Kc3/J4Vet+cgsET9DpeCceYbOd1C1N8IIh8d
4e/vP1E+kYRfBYL4iXqob1Hk/c9ww4xdNP+fFJRLN1Xs+knrvxB+2Ot47R1D
4/8JPyZHhC8ewP3QOCnYj/G4M/8Z4uEE0d+AN4y79Xi+corgeYr61NvXafw/
wafWe5nR9D5dohQiHLQvSx8i/85KIXvkXr8zTXT/n7w3mrPivzCkN1kKLlPv
hRw+h/qQIoXcOX9yM+eh/U8l9IYxzFZuwXjbNEJv4VPReQMP9P9SKOX/6Xpr
jfhjSCFVLy3RnOYHY5LvV45p9X93CP2/FE6Jijbd1Ec8cAg9bQzlgPl0/18K
GjJPY+xp/LBACnkp1VtdU6n/J/9f0d7/4gWOT0Lkd2DjqotDiIdsKfiNZF86
NgbxmiOFoVH18/tp/flcIp9xSX8TQ9Ge5xH6w4atq12H9i6ffD/5c5LMeBr/
J4Xa6c9OC+j9uEJCn5ZVSmw0zu+KiPzLzE3HeuP4i6WQXPBrfYMu6n+JFAq9
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
74z20+833MXOJ9nChy/6VgqjthKfuvBhQ5XaNm92vs5WPihNXfslZxett3JF
vs46HqO2nObDtvHBdP8Wjbomtv8f9bdizZt/j6l+dz5U+vlOOzVA+tzOh8/3
G8vX/Sa87MD6YsJnTRxE/umB9jsbtHIPu09uJz6vvZc0k0/j8V3oP6PsT32N
IX/bzYc6p4Nh/96z+/8Qf08lMz+ZEN738CF+2MgcP3ZehRf6E3e5tdlLilfe
fJBLbTAXNpO/+2C8OlFZ9YDFz71YHioe4/qa8oF9fND5kM/1Zudt+yL+3KOa
LrP7tPzQ3lZnH4/IJj7ej/i66xcc4MzO/0P8Obu7eR6l/M2fD5kbXwfdeE3y
H+TDhLFLih+w+wgO8eH36ZOb69n5DwGIL77vrLKVhIfDyGeG73qkThOejiBe
hrtLqnwhPjjKhzwTpcg9rsSngWiv2Uf6zimRvMf48K9RpuQXO88uiA8mvLf3
d38mfB3nQ/sZ9VbJ49ReMOqrutW2bCHZJwTjdYPV+TFxFG9PYP/r/RcbTWPn
/yE/dAq7q8YTnkPRn0O79n+bQXg/hXjtHvq1ld3XFYb63rIyQ2hC+jmN9gKD
Uflf2f5/rD/I+MnfIuKjs3wIzhqTvDqInodj/PBe8Nyzkuo7xwfz49u6N5QR
X0RgfOjbbafKzrM/j3hJS7l4cCTFu0g+VAe9/yLN1i9eQP9avurO049UjuJD
zI6R4YZp9H006q++olCb7QeL4cOJmdOObgyj/l3EeFo+dtjTcMJjLNpPo2Pu
TRX633kJ8e5jUnRASOuf4/hwZofR1keb2Pl/qK+F4lNPmdL8eTwfkidt0H1u
Se0l8CH9/JtAn73kP4mor8bfQXFv2fl/aL+uv1ZFQwjfV/lg8ez709InxKfX
kN8qpFYpsvO0kxBPx18oRGtT+9f5oOIw6PUzcXb+Hz5PaLRY9pL226VgfzM+
T50WQvpJ5YOHztMiBXZfVBra/6HCr3h2fl465hvuh2vHjWXr//kgr6k7reQa
vZ/Jh+F70jpDWf54gw8uEof2fbnF1v/zoayq43niEMJfNuLlTs2/51NpPUUO
4sN0Q9pwLeLbm8i3fS9GdGrQ+ai3MH+VLTOKYPs1czHfa7jgYiNB6xlu80Ej
z6y5h8W3O9jfevXFt7fTevg81J9HvJ50Kukznw/K6vY/OuPofQ4fltTd73jM
7hvkov3yyweurSV5eBi/v7X6Zf5i43/MZ65aBxxj68sFmK+syOpuFyP+EKJ8
9d8PC/mUL4mwP7HlvISldN5dAcaDZRPfzNtK+L6L+ti0dcOgMMo3ChHfmsea
57H4W4T40L68ssaVzpe6x4flx9bsvsnup7jPh/LZix+EsvNGH/DhvtrMhyuL
Sf/FmF+oiFuNdqT+PUR+zbtb2f2Q8FKCfMPTdipl5ys9wu/dwT7jLNm3FPN5
x4R1+XPZ+f8oj6h63dk6mo8rQ/+AIg/7ShqvPMF8RXfbx0/sPsZy5P8/SbPM
OKTvCoxPf9aM8plK/lWJ+HmeUbOPnd/3FONNhrNxroDKVZifLs1+42hG45Fn
qO/H+wOHjie8VaO+WtWWTFclvnqO8XCW/9M9gYTvF+hPPqq2lfvJXi8xPuXU
f99/kvivBv3z8L0dKZfY+n/078HTo07OIn+sxf5/de+3Yed5vkZ8ye9V2PCV
+O4N4sVj6h03F/o/+xbrlw76O0GJ5KnD/l8s9lg2mfzxHfJ5y05z5Rvs/j8+
9C6KdPBXY/P/2J+7DxeteU3xuwHxtHSf25Ae6k8j+tPhjn0O7D7SJuSDJO7o
OQ/Y+n/sj/3SxcWypP8WlOfMis/V+sTvHzBe1ce41rL/vx+xfqXlRe8fkjyf
+BAkOUtt5HXCy2d83yEgY6sG2/+P9jeTFFRcCfiv/AX5IiOmrO4O2acN8eDp
tOdwA+Xf7Zhf15eUiG0h/+tA+z28m6L/lI3/0T/Sp8o92k/x/SsfZukZTFPp
Jjx/w/xeLk5ebz/h8Tsfbpf+jm5j+9F+4HgkyWxOawX1/ycfwvaeezrvErXX
hfH6qMj5tgS9/wvHnx3+y/wXEV5/I1/eMVxyQpbe78bxqsZBe8XZpL8exKuc
y9L2dzTe/IP9i7m7e8kF6m8v5vP5vlpP2Xltf9E+hz6M4/qz/f+oH88bCveW
U/zrQ7w0R4ywukrt92O+nWtn/dqL+jeA+fSanGc7L1N8EBPAif7Cbrsuyg/F
BTBu9ujuVnZfsoQAhs/xazI/Tv4gKQAl9d26d2vp/4aUAI4cWW+3ku1XHySA
xI3yPfXmpF9pAYDfDG1VPq03GyyAIsHpX0EO5N8yAnD+tCvFOZbsKSsAA63C
mD5/0oecAKLCR/7uX0z+PATlDdlbIR1P/i4vgOSN19xvPSJ/URBA8deemDFB
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
B2+25U6l8g0Rss8tdePe8OsZVfH/+3Uvh9vQ/MdQIRuhHeKiUk76oCZkqk8j
xbcukv8bJmTKOzOW+vfi9/8Lme3Bzw3bulJ7aQjZjf1dnrnx+YQmym++3e91
Jtm7lpB5zG2+bbqD2l9byEz31vVPuUry0BGyWAN73eddqb11Ia9pM5XmraD5
sOEo3+OVjirzyH+OEDKnEy+7LtTn7/+D/jgkTA+eSPqkJ2Rq2Ra2cpH8+f9C
ZmEyTmNDDb1/lJAZ9r+W+CaJ4q8BeETMlaoEyo9HC1l62+MhXX5R/jZGyLwW
1jvIbqP4OVbIzHQvZos/0vfHCVlC2sElxu30fkMhe6ud7dozm/zzeCE7p/7I
cEoJsZGQybGrQc+C6fcT0H6vZNd/7U7jLcZoL41AN6fZ/P5/6Hda5PjV02h8
ZhL0O2bnpw3apB+ThexBY7Nm5jCyRxMhCyv5XO2WT/3XKUIWtCk/LYO/v2+q
kHET1ssEy9J65WmQd9pZW4EK1c8U5f+t/LRqGcX76dB/4bflXYLJ/5gJmXlo
SL/2CCrfDCGbLyt8G8efz8/w+8hc3c5wyi9mQh9+K31MukLj7+ZCJl804JIS
v/9nFvRHLdbvhRH1Vy3w+8iVGjZi8jezIZ9dqS8K3vHr/2H/sjGa0+XIn1vB
XgfvcpxpwJ//L2SafcZU2aygeDUH9X3nd/isNt03M1fIAuIHlUyeSu+3wfMx
5bGxE2n/la2QbV8d0rRhIdnLPHzvQfy2J0tJ/+2gf2qB3zaJKd7Yo7x3tq2y
zUyU8nzoT0evJatvkf0twPv1X7fFRNP7HKCPgV01Kl5SfRyFzNJ62KGu6qQP
TvBXxklVw7tR+zpDf7TOmY7S5M//F7JuCTdvfeXPY14I/a1m+h065N8XwR5W
7/wzpYb0YTH8Xfz204dUqb/iivp3a76g8Y7i0xLI743TxSf36H1u8B/BbLca
v55+KfRj4xSdZZNp/tsd+qib90VOjeYvlglZyYr7zRsG0nioh5CpJC1YfFOe
7G+5kE0abdXb7SfZiyfq2/1Jz2b+fPcVkG/5QbWmW9Q/94L8NnjVtNfS91ZC
fu+jH/f+QvnWKiH7U5IRnqBE/nk16h/eXhN2kOZvvdH+sT+ubHhH+rQG8Uap
8Ii4K5XHR8h8H2b7CzPJX64Vsnp5Yc49/jw6X8in4kK5oQfpl5+QeW983j5u
KI3f+EPfd+5b7pxI8WId9Dexbm+/Guq/B6C+s+18TvPzhYGQv82TjVqbqbzr
hax97KxMrf2UT2zA+1bpq81TIH0IQv1fy5y10aD8ZKOQ5aXXhJjy/cdNQjYg
ZvTrsbL0vmD8vsqm/lg30rfNQjZ1+quCsW9IX0KELLwmr0oyhuJXqJB90eo8
mcCfZ7BFyIyHn+Ds11K+FyZkmwUWNefmUn23Qj8063w37SB7Dof/WXbC+lc6
1XebkNUWzO5X9ZLez0Her3w529kkvwiUN6vT8ngElX87/MOPcRFGc+h7kWjf
C5G79cbT+tIoIdtRu8HkCz+fGS1k5RKxm8k10t8dKN+OsZOV7Wk+MQbxKM3c
YwW/vmAnyvMgqSJoNsWLXYjXLTIlcnkUn3ZDP8usrQ5bUP32CJl2Z2JG0SIq
Xyye1xo4Nz4g+9uL+jR3txhey/f/haxJZ9+MN7Yk333wB9NcVjUMJHnEC1lm
QlnbpPf0/v1CViCzrHbwHspHEvD+7Ix3sfz5Lwegv6X5Yc2vyR4T8fusXxF3
ksh/J6E+E66J3Y358/9hb9Zpu6Lkqb4pQrb706h3bT/5/j/0W6S4MWoX1fcQ
4mvvgYGDi/n7/6CfBx+1BPP52REh8zzQS/yTX8+QCn+mo6DjNpD0Mw35zdc0
d7NGao+j+L7KNHf3rmQ/x9B+HaXb27rTerF0cO8hW2v5+9aOC1lqxKOFIv48
mxN4f9yY2nvDqXwnoV/WHslrhZSPZOD/r4698xhE8eoUnnfn3Ez+UHufFjK7
naPrvPnz2c4I2Wk5R+WHJ0lemYh/zy0WZT6j52dhHzMT7Pby/vcc7Dm9t//p
LfS+8/A/WW26O6po/OYC/PP7JfoVRdQ+F4UsZ9LeX6LL1H6XkA+c/7ntdxD5
/8vIpyJ0PJ+bk/yz8D3d7CtqKSTPK5D31eZ3zkX0/Wz83js/4Iwj1f8q2rt1
1MpoZfK3OfA/q3/tl3RQfLyG+Lfhk+hkO30vF/nB92CxfyjlX9fRfk4f3Rby
6/NvQN87BwiXnSZ9uQl/bumUu06Dn/9HfEjrvfkVf35bPvxDm0OJqB/9vgD+
c1lN+Ddr8scCtFfN8vcj3lP+JsT797+uVt/C9/+FTGmgwY2ZWWQvYvi756F+
B/nzMQqhvyUvKy9rkX1JUL9oD7WbEqr/LbRXQsN2Dz+yn9uIL8ueOl1ypPrd
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
tn4ifQpEefsOdS8+RfVdD//uU/A2aADVZ4OInei9x904n+w3SMRGHXoU9NCL
7GMj4gusd2gH+adNsKcek1Or+PNRghEfN6+8f8yQ5L8Z9uPQ5brHRn79P+wz
0LxHkC7Zayji77D/zLa28+v/Ud9X1vFcNj//j/Lq/W7fNcpcylvx3K1j/gm+
Px4uYgnx4Uoh0+h72yC/iJyeOVr8/D/81cPW809ek/+PgH2ZBP3xkKH/bxex
UIOeM26c5+f/UT6zbQL2keQZJWK5JkXi7/z6w2gRcwm7N7yJX1+/Q8QUNN/W
DeTnr2JEzEGw7fnajfT/nSI2P2LX39mXKN7uAtsPvnTwG7XPbsTzRysnmGbT
+/egPZxHzrNMoOex8I97d/1S0qX67EU88XapuMjf/xYnYsLrGpOD+fmvfajf
pVSVljKSb7yIlfw03+ZpSv5nv4h5Td4cUZ5I7Z0gYpMCImQdB1B9DsAf2O0v
nGZF70uEPMN/Bqy4zff/RextiOvGumoqTzL8+/f4O3d16HkK6nex+tPKSir/
QdjLq8udSttIvodEzOPP7ogXleQ/DsNfGu3drVVG4ylHEE8i1JScF9D7U2Ef
sy7KND7lz/9De2xrz2i7RvI+Cv96+GToujbyJ8dEzFNdEv6Kv489HfXvHvSO
KyX9PA79nNMnMMycP/8f5Zkw8YPmZPKHJ0XsWzineuAD+YsMESuILLdv4s9L
OgV9vOQasv4Sf/6/iO0Qr+604NdvnsH7LPusUTrEn/+P/zdv/bXtKN//F7Go
ylVtWXx/4Rz8U6/F+fGOFD/PQ1+f9/cMdqH2vYDvTfgv+VVqoJQvoj7PHl/R
MKLvX0J7uQ4/O01M378M/z2l7e6lIaTfWSI2ur3/m8sDyT9ewftimg2uB9P4
cjbel6StmeNB8f4q/NO7kKCNMcQ58NdLD250b6b6XEN+UdtQeJzPL3ORfzXb
227ZQfHwuojFvj38esUD0ocbItbbUv9xVij5m5uI74Nkxt8cR+XLg72V+K5r
eM7f/wd/1eGQddeE9pcUQL8+thaPlKHxUwHyGVGv64tF9H0h7L/vnPjek0gf
RNDn55M3fvtK8hGL2KUx00vVrtP7C+HfFx5VfLqN9EsCexllpzbDl9Z33BKx
nWLt4AR+/+ZtyMuuM7jHZDof5I6ImUS8+iZbRPGpCPFYreIPSyX5FsNefze8
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
teb3b0xof2BN7yl7umRTf0aIQpPrjAPfoui/wYY+0R4zZjG/s8L7LkK6cY/+
EZy+Mjf0ShWfPxL9f78wq/kw5QfutbbFT9GN/7fG+8rkR4r2Uv5gR90Hp2vv
8f1GiUKC4UUnCzfqP3h7q339stXpH0fDH68OXqaRy+tgedLU65Ua/L7AX7Cn
QUfDMrZzfBDs9nZ6ZXE5/a+AePCtbJxtAuMf2PL7yDjrSPr/MYiPIa8vDHGn
foHXWS0K8FKW9v+LwnCX3bNspf2lYNnoYZGeHG+V/S0KX8vuH/1LTv8OjijT
fSlE8Po49F9wmG50KP0zuKPSIt/E+/QP49H+IrMZp6T9t2C33l8TsxppnxMQ
b438CnaNY/0CvpY/+3Eg91PKJkI/72p66QRJ5//DX7w+PLr2OvNHG/jbEdfL
lngz/wfHH9vnrhjB+nsS8htn1a6u/N6FHCxvGdrN+PPG39cni8Jqm4nD9HpS
v8HeOz26NDWxf23xfPvmqqw4+h+w0bHAgQt38brdr/hRmbg0k+MrYCf9D3tM
h0nz/6Lg/M01pVJO/QM3nN455X0i2z9VFJK2VQ5xSWH9AM7VUPPdfY753zS8
T5x+pd945j9gvSXReZnaHN+YDnkMOz4zTTofFhzrdH/iH5vpH2Ygnuy06xqv
TPsC37t8+su0NNYv9tDfsu/Fypf5fmCvx1UZXxKpPzNFYYdrrxiTjowv4Oi9
/dN7D2R96QB9ufc9tmEx17+CVXX8n0zleVyyWaLwuW53q5eTmF+B4/3uDjnT
lfY1WxQ29zWyvnmP+g22WLB49RPp/L05olDgb+Lt+YP2D7a/879eveXMHxzR
3vmKc0kjGJ/AxsbeU3uEs3/mwh+seP/I+Q7jC9hCz2N8vrT+xQn5SPhGWWxv
5l/g9I36M0ul8d150OelJr7zLtD+weqXeyTJVDh+4Izf/7u9/jS/xyYHD91k
Y2K1hPY9H/EhuVTRcyefD46dWbMzQRo/cxEF5ZBFj/SmMb6AK3JWjM3sRfm6
isLU2eWz/rKjfwMXxViU+Vuyf90QH6tbfK+58P7g4d/VT4YtYHx1h30NNeih
VsfzGcHTe+X7OU2i/BeIwuOHzzJNXZmfgIOqXvcfnE399YD/PfAhbsgj6i/4
hf7xfjbvab+eiC/hcV55afSf4OHdw3sfqaN+L0Q+plJ70n4S9ROsV6RR/Goh
4+MiUfALtGm7ejflC86aOisgW4fxcbEo/Dc3x+euNH8LDo/PeaWtR/3wgj61
ON8+68D4Ay5dbHx9i3S+0RI8L8t+aesA5s/gzQFj7BvDpO/Twn4/PG6j3pP+
BVxfmN3QsyfHd5aJwoMJjz5YHeL7g0tVx8hvv6N9Lkd7X5hkRo9i+8AxDolP
Ck+wfStgX1bek2z9KX9wtJm2a44J1x95i0JYiveq/22i/oBVJwd/2fqQ8cNH
FEaHKSW4cL5FDpYrR54IKOb8hS/uN954xe1rnN8Dp8yrdSgcRv1ZifhyeVKx
/0uOb4B9Ywtj1fJoH364n7HLjldJ7B+wy4jueWqvaL//iMLWReWqQivqF/jr
LquA79L4uz/61/5rtNFi3h8cP/bT40pz5p+rUJ/cdVcOLWZ8Ad8r0s9doyTN
/8Oe6o526C7V1+Cs0ONJnQZT/9agvest9Kv38Tq47UyHD8EJ0v5/xIvn7jq3
tKk/4LgpY9smpNF+16J9hnp3haX0n7/Y01x27QHffx2eF/fs1X7pfCGwjWz9
pDZH2P/r8T7uOjWbv9M/gDN2mCy4Gkb/sQH63ydyTvV86h8485DmjjHpzK8C
RSGvrdKaNG3KF2x8fUl9WaC0/x/+saRXp6KV3J8NtlwwqvvPaPqXYOi/0vmL
t5rp/8DOP29OGJjK/8shn42B+2KzOX4HdtJLnuGST/mEIN94tLGkoIT53S8+
WLraV4pfG5FvK9WZ56hwfAA8VSdf13Uk+38T8kXbWg2TufTP4EjfhKx6aX5p
M/xH2Zexs45QPmALZVXR9Tntawv81SZ/ufcdXgfHlaRXCNep31tFYXfe0p5m
Dyg/cGxy1d9HEtn+bai/R0caDxhF/w5+7HR506nOzF+2w37li4d3DM766/9j
jyWq
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10000.}, {0, 0.9999196747960897}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8149708485047483`*^9, 3.8149708541348963`*^9}, 
   3.814970950710475*^9, {3.814971000970364*^9, 3.814971035362989*^9}, 
   3.814982317391768*^9, 
   3.814982436233995*^9},ExpressionUUID->"1e58f6c9-df51-4e6b-b6dc-\
66aa4ead75df"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "works", " ", "if", " ", "github", " ", "directory", " ", 
     "structure", " ", "is", " ", "the", " ", "same", " ", "as", " ", "the", 
     " ", "local", " ", "one"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "adjust", " ", "accordling"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"NotebookEvaluate", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Samplers\>\"", ",", 
      "\"\<OwenScrambledSobol.nb\>\""}], "}"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814970899431088*^9, 3.814970925258792*^9}, {
  3.8149725638227863`*^9, 3.814972615731189*^9}, {3.814974171675775*^9, 
  3.8149741720335617`*^9}},ExpressionUUID->"eedbf07e-2904-48df-8e14-\
5db988b08972"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"dos", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"owenScrambledSobol1D", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10000"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dos", "]"}]}], "Input",
 CellChangeTimes->{{3.8149709419992*^9, 3.814970971855275*^9}, {
  3.814971049306546*^9, 
  3.814971062484337*^9}},ExpressionUUID->"6f256afd-c58e-49a1-966e-\
3ef74b678ac8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.171437`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.814970933396647*^9, 3.8149709759995832`*^9}, 
   3.814971065263547*^9, 3.8149713029609823`*^9, 3.814982319816114*^9, 
   3.8149824386401167`*^9},ExpressionUUID->"b5f88c0d-69e7-45e3-b2fd-\
45ca0805e7ae"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw02wVQVe3axnH7NVDpLrEbFQuDy8AOQJSQshWL7th0w+6k7FZULFDAFhNB
BGm7uwXlW2e+5z4zz5xZ72azWPu/fnP7zJrdb/V2h3WdOnTooD64Q4f//f//
/++TzZZg8fwtwQ9s2H+AYobgpnzGY3bcHXqP847oPr7HjtURdPl3U+Dl1+xY
Gx0EHn/a+U3sWB9Len87tLj3M3ZsjK93NGy/3jnOjs0hWhi5QrTwPTu2QOoc
zX6pcyrZ8QDMr/C7Mq/iCTseBEmucIEk9xI7HoJJQiOtScK37HgYVtkpsrzs
HrHjEbh04OHTiwdesONROKtruuSs7lF2bIl3Xf8deNv1AzseAzVNXXM1zYfs
eCxaB1lGtA5qYcfjME1qsGuqtJwdW6HLsNqznYe9Ysfj0S+zsdk8s5EdT8CM
p+OjZzx9zo4nQiQ0HioSnmfHk6B/fKq1/vF37Hgy+va339Wn/312bA10rjpp
0/kpO56CL25iky9uV9jxVGzeWWe9eecbdjwNvuaqOb7m9ex4Onidz2zkdX7J
jm3we6puh99TE9kx0MW42b2L8cf/P+YBEcuqY8KXVbPXZ+D4p8/PCz6x/rwZ
CKnK7h5SdZu9PhO7BoW+2jmI9efNRB9hc1tvYTN7fRbsd2qH2+9k/XmzsPex
zpC9j0+x12dj6q/G/lN/sf682fhSWtX2ubSKvW6L8/on4or1WX+eLWQZ/C/S
jDL2+hys7R3eYW1v1p83B6r3zvHK97Xs9bmI8z4tjPVm/Xlz8T5Xd+b73L3s
9XkwODR9qsEh1p83D3N2yES2O2rY6/MRfttuY/ht1p83H3s6KLft6XCTvb4A
/yXUmv+XwPrzFmBr14bzW7o2sNcXIrdP9YTcPqw/byHUT+gbqp84y15fhMmb
2npP3sT68xYhXmAnjRNUsNcX492Jk9VvT7D+vMUYnCi7OCjxOnt9CQ66F9Ue
cGf9eUvw7Ieh/bMfdez1pTh0OJh38DDrz1sKhUq9u0LFZ6/bISzRRhmayPrD
DorqB+nyauafZ4cD2hqv9muz/mV2SFDmtsUr77L322NIemjF4HTWH/YwtW36
ZmLL/PPsIfMtdJf5sv5l9jg2UOvm0YEn2fsdwO96oS2rK+sPBxw5USk5fIL5
5zng4pnKr2VnWP8yBzwOEoU/DrrM3r8MsqetPrKnrD+Wwfjao8tG15h/3jJM
bta9OamZ9S9bhqaDRp8aDx5i73dEl5kllzvPZP3hiK17Hnpzi73fEeqhdof6
hrL+ZY7otlpf1nX1Dfb+5cifIc/Im8H6Yzm22Zj03WbD/POW4+WFU/YvL7D+
Zcuxxt50x2r7Evb+FfB41aZ0f8X6YwUiZBq+ETLmn7cCftH+s/yiWf+yFeh1
QXK454Wr7P1OePDX1fPBX9YfTrDLXTnJLpf55zmhLcTpZ2sI61/mhOf6Jh2e
629l73fGgwhPtwcR1N8ZunXVv3XqmH+eM/JO+tbnnqT+zshUy6nPULvD3u+C
5BWKfUkrqL8LLBbmNfVbyPzzXBB7wyoh5gb1d8GJm7pWJ26eZu93hY8iR8NH
Qf1d4TRfa53TfOaf54oCr7GWBV7U3xW9vwu69f5+kb1/JRSLVqbLF1H/lRgx
XD58xHDmn7cSfzuf7vi3M/VfiZoWdY+alnz2fjecbDGdcLKF+ruhtW/NQm6x
97vBYi//Q7+91N8NM9eoZsxcc4u93x1Wz+St455Rf3ccEbqdPixk/nnucFh9
ytRhNfV3R7XY6OADcTF7vwfmdJr607YT9ffAgtF2p+ePZv55HpB817ok/k79
PfC+Tdfzfds19n5PvB8WtuX9MOrvia7TXG90mcb88zzxoaHm5/sG6u8Ji4lG
Df0mqtj7vRB0t/Rm4F3W39wLvTo4NvfswPzDC9e8Bd7XvFl/Ly+csc6LP23N
5j/PC8++n3v89Dvrn++FLa25Fze3Mv9lXlC3Llyrbs36t3jhkFC9/yFhATv/
KugE5szWCWT9zVfh2HAH42PDmX+swuDfmj0H/2b9vVbh6HDN5CPD2fznrUJ4
afjY8FLWP38VUke4bEwdwfyXrcLU+BXpU+JZ/5ZVaPIzGdXkd4SdfzWMx+S+
NxrD+puvhpXPirvjfJh/rIatpvqv2Zqsv9dqXLJV2FyyZfOftxrdDM+2dDVk
/fNXo/Fq482Gq8x/2WrMqQ4cOqea9W9Zje0jTTpuH3mBnX8NPuRGDP6Qy/qb
r0GPJfbPuy9h/rEGt6Zofb85hfX3WoOR9eKWEfVs/vPWwDTWdbZpLOufvwbX
Nqu2X9vM/JetwYsJP51eTGD9W9ZgTorhJ9uUVHb+tTg4zObkgWHUfy0eqy3n
FvOPtRjUZG8zqIn6r0V/E+Pw/iZs/vPW4lo3g8Kr3aj/Wqx9lHd/zSPmv2wt
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
+/ngkvM6wdQ/Ed8rV5h/ryT/iThka5lx0Jb6J6J7nX5o9zqa/4kYFx1iOy6a
+ieiab375Kb15D8RmVkSzcws6p+IulNmPnWn2P6/LBH2D9vW2j+k/olof2o/
r/0p+U+Eh/tXAw936p+In7Y643/a0vxPRNXlIknlZeqfiONlquMFZeQ/EXH2
TuPi7Kl/IqanqZtPT/Nh/ZMwY2FpOxZS/yQ4n1ju6XyC/CfBVHpfaiKl/kkY
+N3EZOB3mv9J6B48+cl/wdQ/CeOmezqMm07+k7Dkq+PVxV+pfxJ0F+m16ixi
+38k4d3hnK9vD1P/JFipicyt1Mh/EppdNUObXak/d77eGjbde9P8T8Jc7ylG
c72pfxKSNjr/SNxI/pMQM0WayptC/ZNwKUsr/2IWe/7PS8L8e6aT59+j/kl4
tagm7eUi8p+E7Sq7v9tU1D8JjQlG+o0JNP+T8KlMnvmxjPonYemX7C1Lv5D/
JHR1PGXV1ZH6JyFsg+Gd0A1s/1+WBOFk4+XCydQ/CceC7U4eDSb/ScgrF53P
Laf+STilK3U4pUvzPwmd9FxdO+lR/yRkLXA9m7mA/CdB9im4SvqJ+ieh4IZZ
2bEbeax/Mv79zSv9+5f6JyNhvrg9fj75T8aA5fd/919O/ZMRXGR2KKiI5n8y
zB64lJo+oP7JEO9uEoh2k/9kVJqIv9w3of7JKA7WeFYUTPv/ZETau3+OsKf+
yVgS4jB7SQj5T8ao2w4PR96m/snY8VJ4Of8lzf9kDI4zEg+Ko/7JcPNW6Lp5
k/9kPD8n9Xp+jvono7XRbFBrI3v+z0vGa7Pcmldm1D8Zu/tL3Xb3J//J0B5X
EaM1jvon43K5ov5SOc3/ZGSPD5maPZ76c9db2LjrfiH5T4b/3+Wlfn+pfzJy
ooyF2VG0/0+G1aG25VaHqH8yvqsJAr+rkf9kWBhr5fczpv7JGD9IPHr8IJr/
ydh7Mqxqz0nqn4y72vV772iT/2RM1qqZP1mL+idjC0/z1WZeLOufgr6douf3
7UT9U8CPrI7mFuufgoXPj09Z+Jz6p6ArLzu3C4/mfwrEE0NrRBOpfwre7/Qs
freT/KfgywmrqC8nqH8KmoJ1vjcG0/4/BVM+Ri6f8pH6c78/bdmirmnkPwXC
HmP1hD2ofwpu1vH73ayj+Z+CXKPwwFwj6p+CztXO1ztVk/8UlPg+fHjBl/qn
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
FivEKgvqn4UCvuaTY3z2/J+XBe3q6Y+1qql/Fg6urlnCLdY/Cz0T1NN6JFD/
LBy9rDp85DLN/yyMafqVYdlE/bnP66Zx8Mqb5D8LvZdUS9WWUP8sfDxnWPzh
HO3/s/BoSFv3R0Oofxac7O3WOdmT/yyUV1Udu1FF/bNwdrFu+5nFNP+zUNXR
ekBVR+qfhREbDNOGbyD/WUh4fGZtwmPqn4VJwcbak4KzWX8+8l57pue+Zv27
8OERoa3jEcH8d+djzFyNY5ZzWX81PrI/551QfWbzX52Pr9ddZn+9zvpr83FY
4dHjsIL51+ejqKfV73M9WX9jPvBEI9/mCdv/m/MxbvHfgeMWs/4D+NBbWNmD
W+x+4uPWwy9dbj1k/Ufw0R6vmfEvns1/Sz4qxEZp98SsvxUfUR4uUVEezP8k
PhKO/piccJT1n8pdT5Spw5go9vwffPztEDXobwfWfzYfc0xWvLY1Yf7n8WFs
8amrsQXrv4iPxbGK8kWxbP7b8ZE2qnZ/6ijW35EPrST3IVpJzL8zH9UvT2U/
eMn6u/Ghsd9Yor6f7f+9+Nh7pmHy3jOs/1o+dIfZj9Mdxvxv5COzi5Z7ZhfW
fwv3/nnaSerz2Pz34a5nb53lmL2sfwAfP4attP8xjPkP4aNvV6czfbqy/hF8
OMj0ujvIktj9z0eBfumfY/qsfzwfrz2qr73yYP6T+eD99L0b/ZP1T+ej5HJ2
l5LLbP7z+dho/jtpgznrL+Zjl8KzYKeC+ZfzEb3b8UnUbtY/mw+bSzp50y+x
/X8+H+5/L5x0+8v67+aj8xlRZqczzP9+PlJNTyhTTFn/w3zESflacVI2/wv4
KOs1xaesF+tfyIdhi3OIYQvzf5YPiy1Bsy22sP7n+Wh8oTu28QV7/l/Gx4Gj
psf3H2X9r/Dhe8zpss8x5v8GH+tvWm5bf5P1v819XkbKo8eM2Pyv4KNf7Nk9
5rGs/wM+DHobx+n3Zv5r+Zjbq9p8bi/Wv4GPk7n6fidz2f6/hY/K7W6DK7ez
/s84Lyq+9JyK+X/Fx9Yz4wZvPcP6v+PDSinztVKy+f+JDy+XOqWnC+v/jY/N
rcps71bm/xd3/gPBl+ccYP3buPOZqutXmtL3/wXQizHbpBdD/gUwqXN8ZVxH
/gUw0NS4rq9J/gUIyDAdEJDB5r+6AEWpisJzqeRfAK9FuSZei8i/AFcDAwqv
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
cVED+RdDejp3g/Q0+Rfjl7qV5y918s/9PgON8fkGtP8Xo9It8s59N/IvxoxV
wgasIv9ihFwVKoKvkn8xdtzXNN5xn+a/GI0pKv/GFPIvxsNwRWV1OPkXw/SM
dL7pGfIvxqx5Zp9mzmPP/yGGp3rJeQ918s/9vVNXGPyaSv7FmGBtuXO8NfkX
o/qVYmb1K5r/YryZdDb29STyL8bVPTnCK3vIvxiFn74fPPmJ/ItxzMjY55gR
7f/F6LjP+L+O+8i/GH2NNWb1NSb/YtRqax2v0Sb/Yjj0Fr+w703zXwyDoqL9
+kXkX4yZPY3OzuhJ/sXob/ZTt78Z+RcjuU5DP7kuhvkXw7xnXrVZT/IvRsPG
6sP1G8m/GPbvxsy0f0f+xVh6NHv20qM0/8UomXTu4YVJ5F+MNefNNq45T/65
31ek7dxQRP7FGGKqkz/YlPb/YpQ//Vty4yn5F+Mgv2ozt5h/MZZ1HrtuWWfy
L0bMN3457xvNfzGgu5Jb5F+MQTedRQNvkn/u/gh/eKMhnPyL4TZNL3flNPb8
v4y7f0tKOi4uIf9iRCTpBUYkkX/u825Uz7VvJP9ipDsrq9Ocaf6L8VgoF7UI
yb8YdhOzdyydSP7FiNIINI7SIP9iWC/RL568hPb/YrRHuJm2R5B/MQ4VVjw6
WEj+xbDav8zBaj/55+6Hu7KLNXdp/osxd27d7jlzyT/n61rdPG4x/9z9ezy4
x4Tj5F+MESlaXUak0Pf/JTgvs+l+Xkb+JZj+Trt52jvyL8HJ7p/VTnYn/xIE
PDW96v+U5r8E3wWh674LyL8E+iFNGXoh5F8Cw/Xf2gzWk38JpH+1tkr/0v5f
gjQt97RULfIvQSeZ5qpOMvIvgeWeL22j95B/CSqmi5ZUTKf5L0HHr1O8On4l
/xI0vzHQa35D/iWYdPXh54lXyb8E2lWG3bSr2PN/SLDbKXfybifyL8GUhIdZ
1gnkX4K3awq6vl1D/iVomaS/sWUSzX8JJnjoXxrvQf4lMDdw32RuQP4lWLj7
e9GC3eRfgqyjprpZR2n/L8Hgn8bKQT/JvwS3zwgW3D5D/iWYuU5kP3Md+Zdg
Tbnk7epymv8SFD1RLip6Qv4lqNu1su7RLvIvQQ/vGvMe3uRfgtXQ5a3CHOaf
O97k+X7VJvIvge4Tia/uE/IvwY9jx51/HCP/EnQOMZnSOYTmvwSV8855Vs4j
/xIkbTU7nbiV/Esw/+G3J/Mekn8JqsJ1HavCaf8vgU7WBR2dLPIvQdlarR+l
a8m/BL99vjT98iH/EpzNFJw8k0nzX4Jry8P5V5eTfwm66+of/U+X/EvQwVy6
u92M/EsQItLIDBax5/9lXN9vpi/efCP/Evw3sWZvt4nkn7t/C9QrDArIvwTn
JqvmnptM81+C2X/0M2b9If/c/VFg7NdSQP4lgK/EFL7kX4Jx04wGjJtG+38J
1um1pa/VI/8S2PbhS2f3If8SpL8W/Uh7Tf4l6H9YesjiMM1/CT6PV2Z/Gk/+
Jdjf1zVrX1/yz91/F3/aL7xI/iUIGmAwKWgAff9fii3389y33Cf/UsTZODrH
2ZB/7jhMIIsNI/9SlPiarSnxpfkvRcCH0Kf+H8i/FAuuebgsuEb+pQgbrD0h
bDD5l+LQBvX/Dm2g/b8UBd6NYQXe5F8Kdw3hPzcN8i9FzMcTm2M+kn8pprlr
vp/qTvOf+/t3tsZt3kn+pXiqqXj0RJP8S+GheLjEQ0H+pVD1Ny5T9mfP/yHF
6eEe608PJ/9S7LOX3t5rT/6lOKhmd+aAGvnn3t9DMU3Vg+a/FHk9nBfm9SD/
UvB+ub+L/kX+pdz+dnla9g3yL4XdPxMLu3+0/5eiMMP4w8kM8i/Fqq0ak1dt
Jf9SbByt1WXjaPIvRd9c8YU+uTT/pbitLDpwS0n+pRg+S6U5fBb5l+Jz/+Cf
n/qTfylMdpqeNd6ZyfxLcX2C2arrE8i/FDvHVY/nFvMvxbcrn62+XSH/3PXa
Zmvn2dL8l2KArktVf13yz/VpN2uY2k7+ufMJA0TGQvIvxdUt2p2vbqH9P3d/
1Uw7F1tD/qWI/ln1O+on+eeu3/rLww3W5F8Kcz9+lLkfzX8pJk1TDZg0jfxL
kbtL3zR3F/mXordtkFFvW/Ivxftybe335ez5fxl3v/FMu7rzyL8U8y87zZx/
mfxz9+8rn7zQV+Sfu78yDPc8yaD5L8W7syG93p0l/1I4b3ZTOG0m/1KUTqnu
XjqF/Etxy8Ngyy0P2v9L0brEbXHrEvIvhfY19ZXa18i/FL/kX9V+ycm/FB86
671635nmvxQ3tlmPvLGN/EtxvkRZW1xC/qWIz3WyiM8l/1Lcf6XzruIVff9f
hhvHPYuvHyf/MhQkiOXHEsi/DLctNSS3LMm/DJ+7ms7/3JXmvwzPCh7VPC0g
/zIc7WTKO9KJ/Mtwda728Ktzyb8M8fs1p8Tvp/2/DDMHuzvOHEz+ZWj5pdmh
5Rf5l8FTeMLDU0j+ZTAsFQ00LKX5L8OEe8WV4++Rfxm273l0e9se8i/Dn9bT
u3+3kn8ZtjTqJ25uZM//IcPQLbkBQ7eQfxmyXkvHZL0m/zIsdPKpXOBE/mVw
PqLf5nSE5r8MmWsnNWesJf8yhLiaZAW7kn8ZnASB+1YIyL8ME7uZhU7sRvt/
GUbcMX46/A75lyGv1v5Bbi35l2H3LK2ru2aRfxk2G0h+ehvQ/JdhWU2d/rIa
8i+D3QejpXYfyL8M5QsnepUvJP8yjK42tBxdHcb8y6Dr7vlKx538y9AppXol
t5h/GfRjj4/VjyX/MhgV5tw0LKT5L8PSdZOdlq4j/zLYmnmqZpuRf+71J98u
LXlC/mXIKNM7k15G+3/ueoobu20uJv8yYKpoC6aSfxksZzr8Hj2T/HN/j4eg
o74HzX8ZJgetjJ8URP65+2GJvNOEJeRfBs2hE7I1hpJ/GfxmaQb5zWLP/8u4
31db4q1fS/5lsApzejMujPzL4JHOd/dIJ/8yvPttdOPtb5r/MjQ+0N/S+ID8
y9C7ya1JrYn8y9A8u1qneTb5l+FvlWHI3yra/8sQadG2JtKC/HM+Ftq1xS0k
/zLYNH5Nn95I/mXYECL12hBC81+GDz3qOnzoQf5laPVz5f/xI/8yjP/oNH38
R/IvQzc7k+7d7Oj7/3L8flZ65Ncz8i/HinUPDi5fR/7liFpwvClyAfmXw++W
maXfLZr/csTfDFXF3ST/chRmmpoUZpJ/OWZ2/NY+oyP5l8Nut8Ywu920/5ej
95xpq3rPIf9yXF/uEHl9Ofnnfn/TCa34JvIvx7ALwlHDLtD8l+OWvHXgLTn5
l+P0QpfTpxaSfzm27H4YtGU3+ZfD7J/pRrN/9PxfDq8+Hk2efci/HFk9dD2y
epB/Oc6MtNt5eiT5l+PkcYOgk8dp/stxaNAv20ODyL8cs+Q5k2bJyb8co98E
+ox+Q/65810xFnleof2/HO9KI36+LSX/cny0FKz9aEn+5XDu63/bqS/5l8Mg
VOxgEErzXw7lkbBZyiPkX46u1vVZXazJvxzv+5zJfteH/MvxwUOn+wePBOZf
DhMNs1RjDfIvxxssd30D8i/Hxvbjgze2k385/jwzjvrzjOa/HJNGhfaaNIr8
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
wcZ85J89z1fDT92+4v1/Plnw6mvMecg/n3KaPfdfbEb++XS5vcHLS+2Rfz49
uiporrgK//kUyHd5HsBH/tn10uCLAUuRfz6J1xnPF69D/vnkd8Gol98F9P98
+tcyKP6WJfLPp7Yn473bnkT++XRN1RRwTYX886lvFyNBny7wn09fWyIGfW1B
/vnk/s3C2v0b8s+nEfe/LR5xH/nnU6KR5csEI5z/80kRIqiUhyD/fOodn2zZ
Ox7551Pzavfqn6uRfz5lWZlfOmsF//lk7h6eZuaO/POpf8eg0w4dkX8+Fem8
+Nd0yD+fdny2DdnxGf0/n+Qt1j3kLcg/n3inS+ayweWfT2lrR55LXYv8s/n9
avIl4Cv859PW15b6W18j/3w6kBXwdH8W8s+ed8kYVcIS5J9Pf/Uzi27bz4fL
P5/OLa6vylqM/LPf+5HUkPoD+Wf/L1/4IEGO/PPpsB9/5WE/+M+n9lMql7Wf
gvzzKX6HXXTcDuSfT0bViXmG1cg/uzY1fW9oiv6fTwkHg/LjDyL/fLoeZfSl
KAr551NYZGjbsEjkn0/dsgw+ds2C/3w67h/w/Zg/8s+nW91Tw291R/75ZGr4
UGdiiPzzyamNwSKnNjj/59OxluCWoy3IP59WDjT7tmIg8s+nfy4V11+9hPzz
ybNjxgLPjvCfT8lfU98lfUX++TRNU+PKBpd/tn7CvTyaw5F/PtUutXKsXYr+
n0+dLFtsO1ki/3zabez+d5Qx8s+nfs9KQ/s9Q/75NOdYsmr2MfjP6jkhL+qv
Ccg/nwzMLfsZmCP/fMq87dN05jbyz6d5keY/5kbi/X8BRVbumRVZifwL6Ovg
solscPkX0IUdZ0+c34H8C+jgLGH7g7Pgv4DuPncpuPMc+RfQ2XrbX5n1yL+A
qoaUja8agvwLSDNUP1c9FP2/gGIXR82NXYz8C+hK20V7rrRF/gX07fGDT18f
I/8CurfR8NLdjfCf/f30r7ivp5F/Af31l19T27+Qf/Z8cRfsIuOQfwHdVFtf
uKHG+b+AHPru7uTQF/kXUM8ZD4PZ4PIvoIB27gYB7ZB/AUUNs0iIHAb/BTS5
o/n4yR2RfwH1fl5b0es58i+gB9fPT39wHfkX0EKVzSF3Ffp/AdUduHyq9gDy
LyBZlEFHWRTyL6Bg+1J1kD3yL6BCVeKkQhX8F5Agflw2Px75F9Bqr+pRbHD5
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
RM8kyRlPJVz+ZWy9RBSXPY/g6q8QkeFa89GGazn/Vex66o9Cg6lc/TUi2ja+
tn7reC7/OhEdvWKy7ugVrv6nWX7n2i6Nmcv1/5ls/b7l1Xq95eqfJaLvCQYb
vidw+c8WUW5UaWZOFFf/C6zeWUlJ7lmc/zkiOvenqsu5P1z989h6TA24p5/K
5f+yiGbv8rGZvYur/xURrZttd3Xt7E2cfyJavduu4+rdXP0LRTShxmvphBou
/0Uiupx51uByJlf/GyLmDd/ienvO/1si2u+Zu2O/J1f//9jzzhX2OjqXy/8d
Ef17e2uXf29z9b8nIqdKU32nSq7/L2beZEyc3ZrB1f8By+sCo8hlC7j8l4no
69IHRl+XcvV/KKKdP+Iywn9w/j9i+9F8q3m187n6V4loqqPvwSmOXP5rRGTW
ZnSgWRuu/nUsX7f1xzXf5s7/H4vowzPbl++fcfV/yq67pJx534XL/3MRTZNv
rpoq5+r/UkRLVmesWrKa879BRB9fjTX/+Iqr/xuWj8Sa2IuJXP7fsfW1xKu1
ZQlX/w/Mi0NW5+SHuP7/k4jG6FlPHaPH1b9JRBED9c0iBnL5/8L2v+9hZ3Z/
5+r/TUTHGpOrjjZy/v8Q0fsBVV3fD+Dq3yyiXi7+Y3u5cPlvYfmrT5m0r56r
/x92PdnKad9kvP8vprN36yeevQv/xfSyg2fXlx3gv5gGrC7ZOmA1/BdT2xF2
t/RGwH8xWX6zCLT8Bv/FtKXVNmpLK/wX05WxZQ/zx8J/MXXZpz+5yz6u/9cX
U+32KKva7fCf/d0xfl0XR/gvpkPNI6Yfaob/YnLobXioX2/4Lybt5YgazWX4
L6aIwZVj2eD8F1PwoQsGwYfgv5gKptm8uzKNO/+3F9OmEX8MN42A/2L6sdV0
z4+t8F9Mbwz0P742gP9imr0gLWXWAvgvJrn52HyZOfwX09Gr/JdHrsJ/Mc2p
8Bo9pwL+iyl0tM0/W0Zz/b+TmDbweCfW8+C/mGLmGPjHzIH/7PMuYee3uMB/
MR0uNa46VAr/xeQavat+YjT8Z/e7qXomG5z/YmrvfNGlvTP8F9MFW0vzC7bH
OP/FNGlASPdJA+A/m/8uSV87d4H/YrpTs9D0Tg38F1N/fV7X/vrwX0xf2vsd
+twe/ovpVk3Izls18F9MT447H3x8HP6L6V2qcf93qVz/7y6m6/dsnhbdg/9i
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
X05jP+nvHfMJ/b+cMnbnr8nYDf/l9MLZ0OeFM/yXk8sXw9KxX+C/nCaaGr6Z
YAr/5XQuMyPkXCb8l5NwdJqpcDT8l9OPE94F30/Afzk9/m6TU/8d5/9y6j/x
yrT+E+G/nGTrTDvI1sF/OfW0cbLtaQP/5XQ41EJ0KBT+y2mXafijnabwX053
y2qf3ymD/3K6+ag8+sYj+C8nvek2dnrT0f/LaX3iZd26RPgvp4CFcTr/hfBf
Tr2Gn/PoNRz+s/n+aTzV7Sf8l5P4ZFWz6CT8l1PHbVZ9Om6D/3LSTBzzWj0R
/sspZ79Fm5z9Rzn/5XSnz57y233gP6u/lVdxeyv4Lyf9koUJPUvgv5xy+/Gy
cvrBfzkVdHIputIJ/sup6pbQseoW/JfT9MNlo6cfhv9y4rUa389oRf8vp9s3
+PNv34D/7POFHv2nF8J/OckdDJ/KHOC/nNRO+v5qJ/jP6uMYkd/DEf7LyXuv
7yuvvfBfToM8ve8M9IT/bH3+Ngnf/Rvn/3J6Heda2RAH/+X0sqliKhuc/3KK
/u60Lvo7/JfTh9b0+vet8F9OR3Tm1kd08J/NT0DgwtwA+C+nBIekT/EO8J/9
ntrC4LUa/b+cgtxrSgLd4b+cBj5zHzrwGfyX038nzv377wn4L6fMxWa6M4vh
v5wiIpt3RUTCfzkFJlmWBSTBfzlVRpsFVkbDfzlZKc1iLZXc+//RcpqhE75y
08F/OfW+ZKzX+xL8l9MK++EDVtjDfznNmWpbOHsq/JfTUdXOxCMq+M8+P6Du
4vIB8F9ONSGJXjUh8F9OyxwMjyx1QP8vp38m8WVXJ8F/Oe0senAxvAj+y8kw
JmuPYQz8l9Oh70YHDn6H/3ISVQf0FFXDf1a/VIsPL1Lhv5wOvrxgd/Al/Gfr
q5eFZlovnP/Lado2wa+p2+A/m+8Kb4//KuC/nMbNcMp3mQH/5TShNHXghFL4
L6fSqPAHD6Lgv5zslwTtsl8C/+X0JWbU9C8x8F9O76V2hu+l6P/l5Fge2Mux
HP7LacTzuMkjnsN/OS0PMSpdFgL/5TR6XtK80fPgv5xUV5uHqq7Cf7b+i6z0
vIvgv5xOeOzYH+MB/+WUNMngU+KkLZz/cnKaVfDecRb8l1P9+aSYuvPwn81P
UsmmaUnwn62PVpv/erXCfzl5bN05zWMr/JdT2ni7/NTx8F9OkxoT/7g2wn85
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
RxOPPnwE/5VU9DQhuOgp/FdS8aj4xPuj4L+STD31Z5h6wn8ljRptpXAeDf+V
lHn+kTMbnP9Kujt/+/q78+G/krKcjVdmOeP8X0l0XNCejsN/JW0uTnm0qRj+
K+mfF5vX/PMC/ispV5rulyuF/0qadGHsskkX4L+SlFsDnyq2wn8lNYzeVvJq
NPxX0m09iza39dD/szy4BXbc5wb/lbS+3L1pXTn8Z8+TlOCdmQT/lfR8UkrO
s0nwX0nmS5sNzZfCfyVtl1r+vU0K/5WkTqgwVSfAf1bvD8YN2R+49/+jlTQ7
f1L/2fnwX0l3hGX5t4XwX0kHXAzO73eB/0qKHiT4s2cQ/FfSgPy06QPy4b+S
MuwE5hl28F/J+ssvVY6z4L+S2r427N32Nfp/Jc1xrLWZ4wj/2fr/GH8l6yP8
V9LcjBG95mbAfyXZnDRaYXMS/rP1eeOX3pAb8J99Pjdtzdxc+K8k108XPFw/
wX8lxbmZj45zw/k/y+eKK1kBK+C/kppaHqY2tsB/tr/4Ov390xf+K2kkz7xq
BA/+K+nPRvOtfzbCfyXFz+Z3jp8N/5V0PCMp+HgG/FdSgo9debwP+n+2314N
vFlzFf6z9fdvSdmmf+G/kkrmeTQVz4P/bP7GJ0n0xsN/tj4qq1LPVMJ/JY1o
DHgyvBH+KynK7WJ8pBv8V5JXgU0br4Iozn8lWXuETLH2gP9KWpySZLM4Bf4r
6XTMQtvTMfBfSbvT+bt2p8N/tr9uTEt+txH+K6m+h3BtfQ/4z9bTh8SZdz7A
f7Zecs3WDshF/68kfnbQC142/Gf7ob1Hn1328J/5MT9LTzcf/iupZrOBfs1m
+K+kjeEBUzaGw38lvfZIlTZ4wH82P/ajP5yxh//seeSGPU7Lcf6vpCsVgor8
CvivpBcrfQJfrIT/bL86XJylOQz/ldR62+rYn9vwX0nPasLbPauB/0r6707N
t3/vwH8lrZubNH/dXPivpMLTljsKT6P/Z/vHIN5l10HwX0llPrFjy3zgP9t/
SsIi/ymB/0rKn2r69+Wp8J/th3/tumjyF/xX0vXFVQ+KFsN/JU15ZnZi8jP4
z9aXoXXRJkO8/6+ip28Ljj95C/9VlLQz8UDiTvivovbTz15qNx3+q2jhT7td
C3/CfxXduO5ne+M6/FfRSkHwkRUC+K+iLZ2y/bZ0gv8q0jUatNc1ov9Xkcf8
oHUe8+G/it7Nj3d6Nx/+q+hKeVNtfjn8V5H7yXj5gpPwX0V+KQE7/FLgv4qq
/NNWV/nDfxW11Xnn6Ongv4qKZ9p+uj8T5/8qcvkr+N+xf8F/FZVZJReWWsF/
FUXZuysi7eG/ikafsJgy+gT8V1HD0EftGobCfxW92Me3erEP/qvo2Yvzqqcv
4L+K2mRbf2g9h/5fRW7ZvC1u2fCf/Z5jCT/SEf6rqLFjWPSnjvBfRcenGN8/
NgX+qyhGlpd4XAb/VTRgSEZr/yHwX0WzOlycNKsD/FfRBjIz30CHOf9VdM+y
dfA9S/ivohW+Xu4rfOG/ijy/DJ/u+QX+qyjuvnVR7H34ryLL3pUii97wX0V7
eHY5u3nwX0WvldmtDUr4r6JVFSZNKyvQ/6vI4s/EaRZ/4D+7v3OlQ9jg/FfR
Npumuq028F9FyRmx95Iy4L+KPnbKcPrYCf6riPfCdwbvBfxXUdimb2vCNsF/
FS2oN22aX4/zfzZfOkF9fx38V9FsjVnsLA38V5Hzv07fRv4L/1U0zszyhosZ
/FfRyOicAyOi4b+K1nSy3rymE/xXkX7npN36neG/iiYdNue7Hkb/r6Ls9S2S
c+vhv4oiBfp/IgTwX0VbsxMKw7Lhv4rapZiNb5cC/1W0K6CqfGcA/Gf1/OP/
7e4f+K+i31qzpy1a+K+iaDf9btFueP9fRa/227V9tR/+q+h8XVlrdh38V9F3
fYMr3/Thv4o0BwU9NAfhv4rOHv35KPMo/FdR/MxgTdxM+K+i3jvKWnrtgP8q
6t7RaHP3juj/2d/1opp76cF/FTVdMcxvvAL/VSQ7N8JMdg7+qyhvbUJg3lr4
z9bny4g2ni/hv4pi7/md/vse/FdRYPXD2IBq+K+igLdWzf5vcf6vorfT63q9
nQ7/VRSsSn4WpIL/KroYtXnVxSj4r6KEzebtEzbDfxWVTE89Ujwd/qsoZbjN
veTh8J/NZ66X6/lc+K8i21W2CTar0P+zPL1v4cW+h/8q2sRbWLSRB/9VtCMi
zGFHBPxX0Vp5kv1aOfxnefuVvn7PL/ivomEJAWzAfxV9i/Tp/i0S/qvIZrZF
G5vZazj/VXQ9vF5WFA7/2fOVlcfFl8F/tt4vbJk27gL8V5G9Ib+NvSH8V9Fi
97SbIe7wn+13U+y6PpsC/1V05P7WXkfuw38Vff5t+rLpN/p/FQ3iBfUfxIP/
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
MvzX0g6vuB07vOC/lrZus7Ldug3+a+nC7NQv52fDfy2FDPLuFjII/mupYLNh
85XNOP/XUr/q4PX9quE/W1+7zdwm7Ib/WuL//ekN72/4z/bLz1ah4z/Df5a3
ipzxoRXwX0vZ1dZDsqvhv5amzkjqM3UG/NfSsiLLyGVF6P+1ZNirZYJhL/jP
8jxfX75oPvzX0pa6hDlb6uA/2393JP+n2gH/tbSki3/Yki7wn63XbVXL2eD8
19L8d2b75r2D/1riudhE8lzw/r+ONr0Sqje+gv86mr4scfP0ZfBfR3Ez41pi
Z8J/HZ29IQw/ewP+68jllkUfl1vwX0fqY8Fr1Mfgv47utTXOvdsW/uvIKc/g
hGMe+n8dZU0LMsqaBv91VLHQMPvhQvivI5Oa+JPGNfBfRw8z42c+zIT/OtqS
HtB2Szr819GgeWmdBs2D/+z7lcnlZ5Xwn/3/XVvDh3dx/q8ju+7BStvu8F9H
j7p511R0g/86Kh/mNLx8GPzXUVSBxbXIAvivo7v9zB/d6Qf/dRTCC0oP5sF/
HU1oGJU4vgH+s+ertD7+sBL9P7v/y7yszZfhv46qnEs6scH5r6P0bgn26d3g
v46+bk4882Uz/NdR39P+S/uehv/s867VL9Nc4b+OUrv76KV2h/86mrHfxH3G
/oOc/zqaZFR/yNUI/usoxa08MdkN/rP10XJ25KYW+K+jzLfWAZlv4b+OfIda
hPkOhf86uhFd350Nzn8dvdKU1b3UwH92f3kmjul56P91dP2TzfTrn+C/jmrE
pW3Z4PzXUR/TB759TOG/jk6fir1+6hT811Fym0uuyW3gv470Pz+60vMz/NfR
0uUPvy5ZDv91ZGBk+lLfCOf/OhonCn7sIoL/OmrI9El9lQn/dfTkavHWJ1fh
v440k9JtNZPgP8vHMXPbuGPwX0ftTQOl7Uzhv46OtzuvO9YO/uvo9Xvzmob3
6P91JFkc2F2yGP7ryOaEfrDNCfivo6u5n/+6mgv/Wb3OmHlMOgP/ddTRfdz1
Du7wX0dFjy2dih7Df3Z/0u/j46TwX0dzDxoUzTmI9/919PZkQcabk/BfR0f/
NRYc+Rf+s/mxLfEcZwv/Wb2ybfcXZcN/tl8crhwz/TD815FqkeCmchH8Z88T
8eWGdQT819GtnUZ6t3ai/9fR2q42N9Z0hf86uiSPv58nh/86OnU5NF53Gf7r
6HGAkeXjAPjP6v3W6lPPt/BfR/V1fq/q6uA/q0f56PHty+E/+7yH1TB9D5z/
6+jj/D9jPs6H/2w9n0t+6XMO/utIsTnzhXwz/NeRZXDqUstg+M/mb1b42Tez
4L+OOg2uHcAG57+O1p9NGr3+LPzXkVt3W2u37uj/dRT/ouZN3Av4z+Zrr8Ff
Nnvhv45mbz+XM2s7/NfRuuNJA9cdh/+6/3+fu6Z9I/xn97fXig34r6PFoWM0
IaHwX0dXDhiysZTzn/3/lj0jO2yB/zpqeydJo3cH/rP9Ld/gwJ18+K+joP42
7kH94b+OmoNc9jQHwX+2X4TUL2SD819Hl2+Udbl8A/7r6ECmadsDmej/deST
8nuPTwr811GEp9GxXZ7wX0erV2eNXL0a/rP9qSyub0oZ/NfRyykBri+nwH+W
j4nmbSdNhP86kvVInibrAf/Z/hqo71sViPN/Hb1osDV90QD/2Xq2qxjPBue/
jkpUxYNKVPBfR8uCrMyXBcF/HY1+nTr9/2i2y6iqtq8N4Ip6baUbjt0BYoIx
7VZSkRAVsQMVAxBsxaY77D7n7ERRwbgWXlGQEkQM7ATFVnjX/2U/H9aHNYiz
z55rrmf9xh67/xvkP9vfw7y0RWHI/zO0f+HX9/sWIv/PUNOvFtuafIX/z9Da
Vuur1rRC/p+hZ30dzzzti/xn6/VX1GDdX8h/tl5zYg0/5SD/z9C6Dr9K13ZA
/rP70z2xNrY78v8M1eSvDanJR/6foW+9zJ9/7YX3/9VkffXScOuryH81mVi4
XjS2QP6r6aKfbehFP+S/mkKaqfqFNEP+q6nT35L1nf4i/9VU8d66W8V75L+a
Zg8o6Dd7APJfTa2v67ZpfR3+Z78f5D2qIgj5r6Ybw/Q33BiG/FeTc+XKw06V
yH819WwZ+aRHS+Q/+/2zwUXXzyL/1fR6WEnCq2HIfzVt2Bl7N3Qn8l9NTSKs
ohtH4Pm/mgIGZZ1eNQj5r6Yjs4ynHZmF/FdThKljtwhT5L+axi5P+HfMcuS/
mr7q/Vj3VQ/5r6Y9Jd61u0uQ/2oaXPZ11OAy5L+aHi+y6vF4EfyvpjFRf26O
jkL+q6nWW+96jTfyX00N+7uMa9gf+a+mopfROwtfIv/V5L271MF7N/JfTZ3X
eXbsvA75r6aTg74POzkI+a8mr6um5zyvhin5r6YnnTdsfNwZ+a+mBvpulTr6
yH92/4rzPocWI//VVDzUMrVoKPJfTU1bm91s0hr5r6YuV3wWdLmC/FeT5Zbo
YMstyH81Ff5raFP4L/yvpoVXvW8suIr8V9PqWwZLVt9C/qvpUhv92Kw2yH81
FXQLP5XfDfmvJlXX33utuyL/2XoOi99mFYb8V1Mjx9jIho7IfzWlpBu1S0nH
83/293HWi1RxyH+23mqm73eqQf6rqXlleP/mlch/NYU9M0/d8Qz5rya/UwOb
+51C/qtpnZOX6Ton5L+aXrZzE1+0Q/6raf42s9fztsH/bL24erXd44r8V1O7
T7oh7T4h/9n17DQY7LwT+a8mKShutBSE/GfrNSjo++Eg5D/7+1SPd21Tkf9q
6r0tblbvbch/Nb3wM2ED7/+rqc1JH43qJPJfTQmioRgvIv9ZfTuu8G/aEfmv
ppVu1n9WuCH/1WSsNntppEb+q+lju9QGH9sh/9X0fkbfNe9nIP/VdNZCv81Z
C/hfTdcHhfS8Pgj5z+qV4xzeMAf5r6ZzYX3mngtD/qvp6seo3Vc+Iv/VtOjR
7zGLHiH/1ZQfMyP8fgzyX01DK9KnDq1A/qtpxBSzXiOm4Pm/mr6srHn8eSXy
X012JUVmbCj5ryb1cJubZ4Yj/9Vkf8v05qBbyH/W/4EP1NWByH82X+T9qHoR
8l9Nw3Z+tRq2E/mvJv2tqgy9rfA/2//yyxpV5CP/1dTrjd6+nm+Q/2qq8hAN
qjyQ/2p65BKjLXNB/rP6Xi891+s68l9NHXI8jTrkIP/Z/XQ969nIFfnPvt9K
fRu7lSuV/FfTtMlp46ZNRv6z67vg5qt/Afmvpjvh/OX/wpH/amr5KiWtxSvk
v5ru+f+8cNcf+c++Tz+fm8/6If/V9Ks6IPlnNfJfTVGLTJZELYL/2fo/nfl+
92nkv5rkxgay1Bj5z/Yvnz6dT/og/9V02kJv2mkL5L+aji+/sOD4cuQ/2//9
TCe89kP+q8lp6Ld0x6HIfzU1vm1g3Pg2nv+zfsieOexFNvKf7Q+jpxcmj0b+
q+lmiuOQmynIf7Y/p1rsqUlF/qup8uZA38qbyH811a+1DKhfi/xX02HHGO0h
R+S/mv5zMj9/2wn+Z/vFUMsta4ci/9WUti78Yeo65L+a9O4ZHNS9h/xXk9Ai
9gHfAvnP6q1rPrqDLvJfTd/Heuz+Nhb5r6agb8VHA78h/9Vk1lDVwqwh3v/X
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
RxOrlPxfwlHWZIeEzMlK/ZdytKRL/KwlXZT+X8ZRvk7/3/d1lPov5+jFF93N
z78oz//9OTJ8mvrM4KlS/xUsD1oUt2ejbr6So5XHHY+sOK7UfxVH1/2S3l7z
U/I/gKNFL0yzF75Q6r+a1SPc8svccKX/17Dr913doImvUv+1HJ1MsHh+IkHx
/zqObBsMbmzbQKl/IEdVPRynVfVQ+j+Io8Rq8XBCtVL/YI72/zSO2/dTyf/1
HAV2/9UssLtS/xCOlg9LrF42TOn/UJYHj9au2PNIqf8GjlTmFl4qc+X9/40s
f+499hhzT6n/Jo7aNCjYpmqg9P9mjmYvzqudtVip/xaOdg1Lc9w1TMn/rWx/
qM6o0a1W6r+NI/+fqQH+P5X+386u10H6Z7+DUv8dHJWm6oaUpir+D+PoYsDf
lxcClPrv5OhZV32dZ12V/t/FrueH/jfVD6X+uzma1zNyo19PJf/3cOSc9fuq
U5ZS/70c7ew9Y+TO3kr/72P9tS29R+Q2pf77ObrrZ2V91095/h/Ofm6TNSfS
Rql/BOv/VbFW31cp/R/Jkdog11xtoNQ/ivUDmZ2eTEr+R7O8sPjx6ouFUv8Y
jsQbVhnCDaX/Y9l6LijsW1Gg1D+Oo17trBr1aqf4P56tr7TBT1ekKfVPYPvd
ZL3I1ZOV/k/kyM7e7kcfe6X+SRxZlxlaWZcp+Z/M8m3Lr961W5T6p7D1sDDJ
IXCh0v+p7Pw14PuUWQOU+qex/iw3XzCjfFfd/ADLm+4bgkZ1V+p/kNWndcyj
ktZK/x/iaPxjvmrcY6X+h9nnmyZ3tzZV8v8IRxaNf3pbNFbqf5Rdz8PHJTUP
lf4/xhG3U/Lmdir1P876Z49h8+t7FP+f4Kjmzt/8v3eU+p/kKLgg6klQgdL/
p1j/dHP2bNJNqf9plq8multamij5f4ajLZ2Dr2/urNRfzdGy1AdFS1OV/tew
84l30a0F3kr9tSwv7Yyc9e2U5/8cR48Ssno/SlDqz3NkWREXYlmh9L/A7v/f
8Ot9/ir1F9l59Vqif6drSv5LHO0+/KPl7sNK/WWWJ6OSvzcfpfR/Otv/ermZ
3O6l1P8s+/xCs1H6hYr/z7Hzlvef4aO9lfpnsPPj79wQNurm5zly2ZRf7rxJ
qf8FjjJnxvXMnKnk/0WORqwMujB8pVL/TI527CrVbt+l9H8WR7f2D/C7tV+p
/yWOPh00PvDxoPL+/2W2vxxK255wSKn/Fbb+T0ff+HZa6f+r7HzVLcLTrZtS
/385urnQ2vbmQiX/rzEvHMw453VQqf91jv70s979u5/S/zfYed+temmZm1L/
m+w8PFr/76nRiv9vcaRrG/Kkta1S/2x2nn/snLD2sdL/t9n+vr3Po8ztSv3/
46jHLYPv3W8p+X+H7bcFF1z9CpT653CUszFhdM5Gpf/vcvT6TfqLV2+U+t/j
qEG1WbROtfL8P/d/+ZfaamiIUv88dl67E/v15B2l/++z9TFO1+LROKX++RwZ
V8SvMa5Q8r+Ao21r44O2rVXqX8hRXEiKf1yI0v9FbD/YvPqqsFmpfzFHGwpV
/4UWKv5/wPa/x+t7XHys1L+E3a8felkPfyj9X8rRWtcvA9e6KvV/yNH8RTGv
5i1S8r+MI7PsRFOzbKX+j1i/FCT5NClQ+r+co/ee09u+91Tq/5idp02NdMl0
dd38CdsfRmx46TNCqf9Ttl8ddQuuOKr0/zOOliZX+S1NVupfwfaPwpTz7oVK
/j9n9Qke9CUzWKn/C+aXzo992aibv2Tr/7ekzf6t1P8VR6t6msSv7Kn4/zXz
2NFHceFHlfq/Yfu7uUGqn7nS/2/Z/jrN+cGXaUr937H7NUyv/8VhSv6/58h8
/kN78/lK/T+w++H/YBobdfOP7Pw14Jtf7wFK/T+x86G9gY3GXnn+X8nR85vl
bCj1r2Lr03W67WlXpf8/M19F2ATkRij1/8KR1cUkY6uLSv5Xs/Pnvfg/Xe8p
9f/KzrfPy54HPFf6/xvLJ3c5xsldqf93dn79x/x7zD+K/3+w86ndn7INdkr9
f7L9f35uCzbq5r84anrFJbTpFaX+vzn60Ck2630nJf//MD9ZJkYnWSr1/8t8
5FIaxEbdvIatlx/ft8/7odS/lp0ns61d72Tj/X+ewr5c8gn7Av/z9MQzOuyx
J/zPk5uPU7qrD/zP06ZtqsmbtsH/PK14YNZ1xQP4n6dHGTOTyjLgf546GroO
7WgI//PUra/ekm594X+elnhmhi32hP952rVAf8SuBfA/TxWXhR4Vl+F/nnJu
6O+7cwP+52ne/ocn/fbD/zyNW2n2ZexK+J+nT1xRy08c/M9T139Uul3/UZ7/
67K/N8o64WcE//Pkahd7xMUO/udpxhDuhfsQ+J8nl98JUc6/4X+eDgx1P5A2
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
S/A/T51n/5jceTb8z9PIaSnvR0yD/3maGvt1/dRY+J+n9DaqHult4H+ebG5b
jrS5Df/z1K4wb3PbQvif5cOoVdq4UfA/y+OmRmq/pvA/y7v8XyO65MP/bD97
mjT181P4n+XFpLjouZPgf9b/OqaVx3XW1c2fsOtzr3WZ6g7/s/zYFOPouQn+
5+n4VqfDx7bC/+x8eNyq5uhx+J+nPb4Z4bt94X/mG900x2u68D/z2quAvDuv
4H+2/l+bOHKv4X+edl9K+bbrEvzP0ykbg5anbOB/dp4dLQypHQ3/87R6vN6U
1ePhf57GrPC8OnoF/M8TUXzNMIL/WT16FvmO7An//88T+qZ3GirP/yt5yn9U
vjT/EfzPk9Nak7+Oa+F/tr52c+sn74b/2f7z0iL18kv4n6dJ+fF9J+XD/2z/
v5/cx/g+/M9+n/p9ukzwP0/La8wzltXA/zyFdxrsF94J/ufpxXDHuS+Gw/8s
P0vtlgeWwv+snr7GbMD/7HzYsrRDz5bwP6tHqHne7lD4n6fUtwO6pr6F/3nq
e8qqwO4U3v8XSPeJz63WT+B/gbosNkzovBj+Fyh2Kr8rZir8L1DvXNXw3rnw
v0BT7iXYTLkH/wt0bnPqwnOb4X+BDBtGWxs2hP8FCkzU6xeYCP8LdJu81dkE
/wt01Tsy6Yo3/C/Qq9L7f16Wwv8CVZ2K1Ks6Bf8LNDfFov/cFPhfoBujE3Zd
Hw3/C7TuQPrJtQfgf4E2HrdO3HAcz/8Fqm5mHfWlGfwvkItO7A5nHfhfILGr
42yxK/wv0IyDCXvdD8L/Ag1uf+6oQ3v4X6BTESl7T0bA/wJt+7B64rYP8L9A
r59Zdn39DP4XaM+Fi4v2XID/Bdo/NOLOvqHwv0A6zaJO128G/wtktSz6teUy
+F+giBMeeeEn4H+BogYkVUQOgP9ZfZtOH63bFP4XKPGj4caEj1vr5m0EUhum
JZwxhP8FOjvBjQ34X6Bfv/V0fv2G/wUa9T3598jv8L9AY7ok7BzdBf4XaMhu
n6VDdsP/7O/VBat+qeF/gXrGGKl6xsD/Avl/t6pe/h3+F2i3xoXfpYH/BXqn
12fbWz34X6CE87pDEs7D/wK5Nf59yLUx/C/Qf7Xxg/6rhf/Z+vWN1Yv1hf8F
KnY2/ljkjOf/7H4cqVmTeAT+F0iTVXxLnQX/CzTuRrjVuBvwv0C5nRKn5HaC
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
4n8Otgmqcj9hk6J+iefBQo93PguJ/zngbttv5W4T/+PnP37daOFx4n8OOrzS
X9rhFfE/zkufWD3eh/gf1yfInDtMIP7nwPaXXbHNL+J/PN88tVQ0PYn/8fy8
1PrZ5BLxP94XO4erdelM/I+84R52ZZk78T8H+jKVFfoy4n8OPLz11nh4E//j
/WO1U4DyauJ/Dq5Nc6hOmUb8j/ujUC3wQyH5f7wP3N/VzeQ+8T8HLnMdrzvP
Jf5HHkpINZYlEP9zEB6n9y0sjvgf98vd2xYj7hL/4/nTknAru4X4n4NWa5O0
Fmvifw7Wu+peW+dK/M/BnGnS8XOmEf9zMMHfym6CP/E/ztP84j3a+cT/HPTv
HpVp1J34n4MbKlmrbqgQ/+N5O6uySTaL+B/zaI4+2d5E/I983k+GD/3+n4eh
zXzkkGbifx6yZ5UczZpF/M+Dvk2hqb4N8T8PGVdkzelXiP95sC5+ttq6mPgf
62sv9lldI/7noZ+OeptMh/ifh9vOKtq3nYn/eTB1aHU3dSD+52HHlrDkgC3E
/zyEPyjqHf6A+J+HuT9V18z9SfzPQ+RBs12RB4n/efi2PPbL1+XE/zzo5Zat
08sl/ueh4qJsWMVF8v88WOpO1bfUJf7noWVklHfLSOJ/HtpM6ia0mRD/87C2
XGfc2nLifx5GGGtPHGFM/M+Dcbbb5bHZxP88/G02qfjTTPzPw2w36b1ZbsT/
PDRey2n7dY34nwenTtY2Tp2I//F96aYvv61L/M+Dobn6KkNz4n8epBlZ8XoZ
xP88/Ctd0uVfKfE/D7ma0edyNIn/edC2UbutZbNPUffjIaeL7GV2F+J/HlS2
aKiqbCH+52HFKxVh+Svifx4cQ6UVDqHE/zzsHRP7Zs8Y4n8eoi55TIm6RPzP
w9EbvjuP3iD+56Grm8beLm7E//g+Prdaz/5M/M/DsgPhwUsPEP/z8EJZdfoL
ZeJ/HuruhBrU3SH+58FWWtViIyX+56FbtdOvrtXE/zwEbI3SDNhK/I/7qVir
LKyY/D8PM9N3acxMJ/7Hz58UfTIyififB5fS1KfOpcT/PLxcGRdYs5L4n4fT
SU6S00nE/zwEGUrHBhkS/+O/b2CiPdOA+B8/v6F20ndD4n8eOm5t6dJxK/E/
D7XJksq3ycT/PBw/P87o+Hnifx6W/tXyWvqX+B+/r6XLza6WxP88DCyNsxlY
SvyP74d3DLLhif956HJU9WTno/T7f9yfJ2SVf04Q//OwpaXEBB9FPYOHO10L
b+V1Jf7nweiBwQ3DB8T//39fOmujkoj/8fxY8WIAPop6Dg/91/hO7r+G+J+H
+GtqKXHXiP95KNPJ/adMh/ifh5shNr1vhhD/83Dt0o8F1y4R//Pwqpva+5fd
iP/x77cvmR/VTvzPQ03Ds4wXDcT/PCx6rFlg+Zj4H9dNdOUvTMj/8/DaLWnx
azfif+ynCIfp0gjifx56eBUkdvci/sfzSjNmrqkm8T9+X9sY62xb4n8e1DtU
L8JHUTvwwKWUZuamEP/j+fTVYOS3r8T/POS35zjktxP/4/l5qVAVH0XtwkOf
tZvzeq8l/udhUHOkMLCZ+J+H8Z8qd4z/RPzPg1JGfEWnDOJ/HhYvKx+0eBnx
Pw/7xqrhY6uoPXn4vLx95+flxP88vGnVePa6lfgfz4sL9a+0LhD/8wA2iWPB
hvifh9/wbOpvIP7H97e5Zhw+inoVDzsrfDfvrCD+56FBWbNDgzLxP64fSnyz
4xDxP57XAeHvdQOI/3n4uXvT3YbdxP/4PjJVEntnEv/z8Nb575S3zsT/PCj3
jOmh3JP4H89nydaDwyXE/zg/pqr4zp1K/p8H//a2I9vbif95KB3tOLR0NPE/
D5cyN5ZezCT+5+G9st7Nd8rE/zw8aJw480Ej8T8PoSkJc0JTiP9xvwSU+psG
EP/zYLBdb47BduJ/HjZq57Ru0Cb+5yFYzWpesBrxPw8LXxXnLnhF/I/7Y4/m
G6s9xP88jJmmazpmGvE/D9/14wy+6xP/8yC/33SGv0/8j/tfU7vkhSb9/p8H
30qZim8l8T/ul5ElFvgo6r08BG6xXhS4hfifhwkzZPdNZxD/8+D57tliz3fE
/zy0P0v62/aM+B/342j1S51GE//zkGgi2ZRoQvzPg9bynYLmcuJ/HtZ3DgtY
35n4nwfJ600ektfE/zy8WxVWVruK+J+HuKt/udirxP/473XW6abVmfifB1lY
1GRZGPE/D82J0m9NieT/efg0yED/0yDifx7CZpbNw0dRh/EQ0TV1d0RX4n8e
OhnppHU0Iv7n4XqX5uDULsT/+P1fugW3vST+58H8Xul683vE/zw8zNGvepBD
/M9D0SFXp6JDxP84n7YVjsVHUcdhf/Yv9vvcn/ifh+FnI1YNP0v8j/0c6m+8
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
5HBxUMCR5EEsf6x3Jjj57Uxg/e8oh1GuN+eNcmX5Y/1opIb6o5HM/zvh/I1p
i6mPYfljPfWVY/+pr1j/O8thQItVYv8Wlj/Wv+Vx4c1yNv9d5PDl9Db+82mW
P9aP5jxfjY9ifQnu79G/HNpGs/yxflqpM+NpJeN/Vzk0urZIG11Z/linN0tm
pjez/nfD/g0sHmsXyPLHOs1FSz/Nhc1/dzlobo4L09jM8sf6T7BLvz/BrP89
5PDhqN/790dZ/lhPPqgpnXyQ/f7fUw5Dz/B6Q8+w/LH+cDHi1PuLrP+XyuH4
cGvp8eEsf6zrvA1Of/dm838Zfr+TkwLaTrL8sQ4wfeGFj2J9uRz87DIyttqx
/LHuYKHq18GC8f8KnP9jqrXWjWH5Y326Omzu6WrW/ysx70NpMukhlj/W5U/U
4sqesPm/Ct9XaUDf9FKWP9ae+54NxUexvhrv9x/KKv0+sPyxnv1FJ2PWF+b/
12A/7Zjae/8Olj/W4U81z4Y9Zf2/Fu8D80Ldjeax/LGW1Gpvl9Sy+e+F9+ut
MS46W1n+WDvudst22M36f50c1PZFLlbbx/LHel2VrN+6Ksb/65FnXiQcvPWC
5Y914N/Cefgo1v+RQ1/7BvO+9ix/rOvWR37+vp7Nf285pNyfvCrlPssfa1l5
/HxZOev/DXI44dLUmOTC8sd6a7vGmK3tWxTrG/G+MLPmcNeZLH+sz5yP1D5z
nvW/D86LxPoS00SWP9bfihNrvhaz+b9JDvr+mYLUn+WPterAmqMqA1n/b8Z5
/yejfuoflj/WeoO0onQHMf73lUPOWbfK7LMsf6zjdWxXx+uw/t+CeTmmec12
ZPlj/WnScaVPk9j83yqHy6v0TC6vYvljXb85ZkP9Ztb/fnj/M210OmrK8sda
Y4RagfoI5v+3yWHVXYPylXdZ/ljLHLU8ZY6s/7fjemhBx1WhLH+s12bqDV6b
yea/P/JR/sQ5a/JZ/lgHvUvoF/SO9X8A9ruz/cV8Z5Y/1gE9dTP8ezL+34Hz
3jinqcSY5Y+1z4rQcT4rWP/vxPuzXK1XRznLH+sQQ81BIYZs/u/C76cfV/uv
Pssf651WlTd2WLH+3433kd/l5od+s/yxnvPXYMWcv+z3/4F43v7gi2b8YPlj
nexcMhYfxfoePO/cVdR+u7P8sc4LlF0QA9n834v3mWfPHkuesfyxbst2j2nN
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
rFfL4d8T474eOcHyx1qQaUXLZWz+v5BD1trKqVlrWf5Yh9yKk4bcYv1fg/Mv
tjz1RSzLH2v7Thp29p3Y7/9f4ry4KXMIv8nyxzokWP1GcDDr/1dyGDveZ/fY
8Sx/rAdrGVQP0mLz/zX2043M3rE3WP5Yq/R5US3pw/r/DZ5nM3+uWzKT5Y91
Vozq68wYxv9v5eDcv/qDU3+WP9bWdWG61nWs/2txv0SkBQ+NYPljrXwh/Fev
C2z+v8Pz6X42t+A+yx/rjpee5XW4xPr/vRw+t209+qmN5Y91ULp21qF05v8/
IL96JU3Q92L5Yx1Uq1lxqJb1/0e8r9umrnG0ZfljrZKp3Uclk83/T3i/9NRu
8fdk+WMdapf465gd6//PyEvRkZ3zoln+WPsPl0VuH874/wt+v0dT+gx7xPLH
uke5im6Pctb/X+VQNVvNuWo2yx/rJOXIuUnKbP5/w/tDkf/FlCKWP9YZb+Jj
0t+w/v+O79vyVlSmJcsf682t2ic3tW5TrNfJwd15d4SbM8sf66/77Jd+3cf6
vx6/74Hj/VQOsPyx7nMq8ULvU2z+/8D1ZZnXJctY/li3qcp2tamy/m/AefDO
7uaMdyx/rOe/1DKY/5Lx/088/7nqfztxLH+sO46zTe8wjvX/L9wfs4rqnGax
/LE2X3z84ZTFbP43In9vzF65ZiPLH2vlmdpblWey/m/C+8CIstjPI1j+WN/X
Vv1yT5v5/2Y5HHtusPTYc5Y/1qd9tV6e8mX9/xvvqyEbVS1DWP5Yv32t1/bm
NZv/f5A3imL+3C9i+WO9vFBqtbyQ9f9fPH+na9y/NZ3lj7V3k66qdxPj/xY5
9BycENZjMMsf674zC3rho1hvlcOGqnGXvatY/liPWxlVb7ySzf827GfluFA7
ZZY/1o0748Y07mT934732c9+Zj6fWf5YJ4frB10Ip9//CyB51S7v+4r8vwDf
16of+raW/L8AbYvq77QuIv8vwL/lsgtHysn/C+CTH2vpk0/+X4CvgS9G4KNY
VxKgVxe78p5dyP8LcDRaZeLRaPL/AmhPd5urPZ38vwAvPIpU8VGsdxEgpOrH
3JAq8v8CzEpR9Z6VQv5fAK+EgACvBPL/AhjOfXap31zy/wIMO9UYMvQU+X8B
euQazOqRS/5fgN693J8q9yL/L8ClDmXpFzuQ/xdg+5C64duHkP8XYNpZnTdT
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
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10000.}, {0, 0.9999669294338597}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814970933396647*^9, 3.8149709759995832`*^9}, 
   3.814971065263547*^9, 3.8149713029609823`*^9, 3.814982319816114*^9, 
   3.814982438747861*^9},ExpressionUUID->"fae4f905-f2b3-4bdc-b842-\
fbcc4af149f5"]
}, Open  ]],

Cell["\<\
See how the rectangle is more evenly filled with OwenScrambled(OS) than with \
WhiteNoise(WN) ? Yeah, OS is really slower compared to WN.

So, let\[CloseCurlyQuote]s see how it goes by sampling a function with our \
two different samplers.\
\>", "Text",
 CellChangeTimes->{{3.814971111761568*^9, 3.814971191905328*^9}, {
  3.8149714649211807`*^9, 
  3.814971489399988*^9}},ExpressionUUID->"83c80b82-a50b-4fb6-8479-\
5cbdcd47f34f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "f", ",", "x", ",", "a", ",", "b", ",", " ", "w", ",", " ", "n", ",", " ", 
    "tValue", ",", " ", "eValue"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{"Sin", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"b", "-", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tValue", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<True value\>\"", ",", "tValue"}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8149691635554256`*^9, 3.814969227592331*^9}, {
   3.814970554434956*^9, 3.814970617931953*^9}, {3.814970734098982*^9, 
   3.8149707367527246`*^9}, 
   3.814971242282837*^9},ExpressionUUID->"b915d6be-98e9-4b30-9f62-\
16867521c9cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True value\"\>", ",", "2.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814970609730605*^9, 3.814970623174066*^9}, 
   3.814970699403825*^9, 3.814970738035819*^9, 3.8149712056068993`*^9, 
   3.81497124493841*^9, 3.8149718960460863`*^9, 3.814972804776066*^9, 
   3.814973729660355*^9, 3.814982319960243*^9, 
   3.814982438816094*^9},ExpressionUUID->"187c1ab0-3655-4b59-b290-\
0982b1ac3272"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
0hi0xJes0hYW4H+KxO+q
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1FXUVkUAhtGPbunOH+nuTimlu0W6u0GUlm6ku7uVFAQllQ6lUbobBHMf
8GKv58zcvrNOWPMuNTuHD4VC4YgX7n3z/P/9q0bXZXqC8L4H6DwO8ZaG9OBr
9vCU0lSnHWP4htvkJhc5yUF2spGVLGQmExnJQHrS8SFpCSMNpahGW0azhVuk
piRVacMoNnOTVJSgCq0ZySZukJIGdGcqu3lCcSrTihFs5DopqE83pvAdjylG
X2bxI6+oREu+YgO/k5zPmctB3lCPrkxmF48oSh9m8gMvqcgCjvAXLRjOen4j
GUs5Hmxqr/56hsi+5+gB/qAu54jqfpHG0p/1H7oQ2/mURtRJGkN36kOKENf5
F42mi/UDPar/0ps4zqc1ks7QmLpPX/AJZ4nibr4e5k+ac5II7ofpOq6RlCUc
C4XePdB+Mpv9vKYOC/mJv+nMRHbwgML0Yjp7ec7HNGMoa7lKEmrTiQls5z6F
6Mk0vucZFWjKENZwhcTUoiPj2cY9ClKezxjMai6TiJp0YBxbuUsBytGEQazi
EgmpQXvG8i13yE9ZPmUgK7lIAvJRhsZ8yQouEJ94wY7BVsHewYbBOwi2CvYm
erBv8EaCrYgc7Bm8iWAjgv9GXj6iEV+wnPP8B1u4ggc=
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
        LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$5219#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0000000320570674`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {1.0000000320570674`, 
     1.4142135520381258`}}, {{0, 1.5707963267948966`}, {1.0000000320570674`, 
     1.4142135520381258`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814970609730605*^9, 3.814970623174066*^9}, 
   3.814970699403825*^9, 3.814970738035819*^9, 3.8149712056068993`*^9, 
   3.81497124493841*^9, 3.8149718960460863`*^9, 3.814972804776066*^9, 
   3.814973729660355*^9, 3.814982319960243*^9, 
   3.814982438843741*^9},ExpressionUUID->"dbc0f8f2-15d2-477c-b9e3-\
9816e2a532a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"estsWN", "=", " ", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"meanWN", "=", 
  RowBox[{"Mean", "[", "estsWN", "]"}]}]}], "Input",
 CellChangeTimes->{{3.814970692654283*^9, 3.8149707153338547`*^9}, {
   3.814971235917231*^9, 3.814971236792202*^9}, {3.814971354400186*^9, 
   3.8149713579564753`*^9}, {3.814971652773589*^9, 3.814971652862934*^9}, 
   3.814971927756565*^9, {3.814972040201088*^9, 3.814972055273883*^9}, {
   3.8149727553645697`*^9, 3.8149727648147173`*^9}, {3.814972838819154*^9, 
   3.814972897340735*^9}},ExpressionUUID->"3eec1d6f-6b00-4e38-b640-\
589438fbf1d9"],

Cell[BoxData["1.998631398101547`"], "Output",
 CellChangeTimes->{3.814972898110718*^9, 3.814982320029931*^9, 
  3.81498243889268*^9},ExpressionUUID->"19a42143-eade-4b92-a7b1-cb6f13c0d35a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"estsOS", "=", " ", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"owenScrambledSobol1D", "[", "i", "]"}], "*", "w"}]}], "]"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"meanOS", "=", 
  RowBox[{"Mean", "[", "estsOS", "]"}]}]}], "Input",
 CellChangeTimes->{{3.814971233869563*^9, 3.814971237559931*^9}, 
   3.814971273725567*^9, 3.8149713270856752`*^9, 3.814971363473518*^9, {
   3.814971658714141*^9, 3.814971658800509*^9}, 3.814971929863625*^9, {
   3.814972770125421*^9, 3.81497277325324*^9}, {3.8149728217622004`*^9, 
   3.8149728241467524`*^9}},ExpressionUUID->"c82b1cea-c11d-4eac-b971-\
eef2bfbe57cc"],

Cell[BoxData["2.0000085025470096`"], "Output",
 CellChangeTimes->{
  3.814971283004772*^9, {3.814971314046977*^9, 3.8149713367722692`*^9}, {
   3.814971369163501*^9, 3.814971381705851*^9}, 3.814971662035759*^9, {
   3.814971918737084*^9, 3.814971935591393*^9}, 3.814972776271632*^9, 
   3.814972827690292*^9, 3.814982322328113*^9, 
   3.8149824411146517`*^9},ExpressionUUID->"b1f33fce-2d68-434c-a626-\
5eae11e78ef6"]
}, Open  ]],

Cell["\<\
To measure the impact of using a different sampler we of course will employ \
the error metrics we used above.
So let\[CloseCurlyQuote]s start by getting the standard deviation and its \
assoaciated Monte Carlo standard error and bias statistics. \
\>", "Text",
 CellChangeTimes->{{3.814971513944922*^9, 3.814971570533622*^9}, {
  3.814971790630356*^9, 3.814971837565248*^9}, {3.8149742303308573`*^9, 
  3.8149742393107452`*^9}},ExpressionUUID->"1363e0f5-27f8-49a2-9adb-\
914a674af7bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sqr", ",", "MSE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqr", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"estsWN", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD WN\>\"", ",", 
    RowBox[{"MSEwn", "=", 
     SqrtBox[
      RowBox[{"sqr", "/", "n"}]]}]}], " ", "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{"aka", " ", "standard", " ", "deviation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<MCSE WN\>\"", ",", 
    RowBox[{"MCSEwn", " ", "=", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"estsWN", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
            "-", "MSEwn"}], ")"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
       RowBox[{"n", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]]]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Bias WN\>\"", ",", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"estsWN", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.814971692827911*^9, 3.814971712780716*^9}, {
  3.8149717500636044`*^9, 3.81497177348746*^9}, {3.814972071143879*^9, 
  3.814972082029039*^9}, {3.814972222679284*^9, 3.8149722583831673`*^9}, {
  3.814972351717309*^9, 
  3.814972359498349*^9}},ExpressionUUID->"fc97234c-0895-4b2e-bbb8-\
14a2f8ee54e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD WN\"\>", ",", "0.1953349958980998`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814971698482657*^9, 3.814971774244939*^9}, 
   3.8149718412485247`*^9, 3.814971939438899*^9, 3.814972083370818*^9, 
   3.8149722597085447`*^9, 3.814972371665535*^9, 3.814972904986614*^9, 
   3.8149823223762083`*^9, 
   3.81498244119771*^9},ExpressionUUID->"4395f1c3-70cf-4559-bd67-\
666ae74a8708"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE WN\"\>", ",", "0.001623090328825737`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.814971698482657*^9, 3.814971774244939*^9}, 
   3.8149718412485247`*^9, 3.814971939438899*^9, 3.814972083370818*^9, 
   3.8149722597085447`*^9, 3.814972371665535*^9, 3.814972904986614*^9, 
   3.8149823223762083`*^9, 
   3.8149824412061157`*^9},ExpressionUUID->"ced51d46-eb80-47f1-9228-\
6632bd4845f5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bias WN\"\>", ",", "0.003148319260096364`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.814971698482657*^9, 3.814971774244939*^9}, 
   3.8149718412485247`*^9, 3.814971939438899*^9, 3.814972083370818*^9, 
   3.8149722597085447`*^9, 3.814972371665535*^9, 3.814972904986614*^9, 
   3.8149823223762083`*^9, 
   3.814982441207757*^9},ExpressionUUID->"5f85c0bf-e217-4c95-88a0-\
df8f7553d11b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sqr", ",", "MSE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqr", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"estsOS", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD OS\>\"", ",", 
    RowBox[{"MSEos", "=", 
     SqrtBox[
      RowBox[{"sqr", "/", "n"}]]}]}], " ", "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<MCSE OS\>\"", ",", 
    RowBox[{"MCSE", " ", "=", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"estsOS", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
            "-", "MSEos"}], ")"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
       RowBox[{"n", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]]]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Bias OS\>\"", ",", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"estsOS", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.814971854873446*^9, 3.814971857708522*^9}, {
  3.814972089276265*^9, 3.81497209215998*^9}, {3.814972299791966*^9, 
  3.81497232959512*^9}, {3.814972364900826*^9, 
  3.8149723682816887`*^9}},ExpressionUUID->"42bc8ce6-fc0b-484a-a6c0-\
ace28c361b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD OS\"\>", ",", "0.1954243794524834`"}], "}"}]], "Output",
 CellChangeTimes->{3.8149718621230793`*^9, 3.814971942541068*^9, 
  3.814972093402555*^9, 3.8149723302378387`*^9, 3.814972373805825*^9, 
  3.814972906874648*^9, 3.814982322403379*^9, 
  3.814982441227509*^9},ExpressionUUID->"0a2ad642-b8f3-49fd-8ce4-\
ac99ac4f5a83"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE OS\"\>", ",", "0.0016220778754823433`"}], "}"}]], "Output",\

 CellChangeTimes->{3.8149718621230793`*^9, 3.814971942541068*^9, 
  3.814972093402555*^9, 3.8149723302378387`*^9, 3.814972373805825*^9, 
  3.814972906874648*^9, 3.814982322403379*^9, 
  3.8149824412425613`*^9},ExpressionUUID->"a3a80b6a-fac9-459c-80fc-\
32739c8b58e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bias OS\"\>", ",", "0.00027899372003405934`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8149718621230793`*^9, 3.814971942541068*^9, 
  3.814972093402555*^9, 3.8149723302378387`*^9, 3.814972373805825*^9, 
  3.814972906874648*^9, 3.814982322403379*^9, 
  3.814982441244481*^9},ExpressionUUID->"c1d13a0d-2bdb-48a9-aa10-\
2e148d91fd29"]
}, Open  ]],

Cell[TextData[{
 "First let\[CloseCurlyQuote]s just note that with the STD and MCSE because \
of the squaring and then the square-rooting, - our errors look not so much \
different.\nBias instead, being an order of magnitude less for the OS \
sampler, gives us a somehow better statistic.\n\nWe can however also use a \
derivation (",
 StyleBox["dependent t-test for paired samples",
  FontVariations->{"Underline"->True}],
 ") of the so called T-test that gives us a nice value that effectively seems \
characterezing a bit more our error."
}], "Text",
 CellChangeTimes->{{3.8149721168137083`*^9, 3.814972194662711*^9}, {
   3.8149725119604597`*^9, 3.8149725409392*^9}, 3.814973910111484*^9, {
   3.814974063293282*^9, 3.814974113354401*^9}, {3.8149742481079693`*^9, 
   3.8149743337197447`*^9}, {3.8149796357387953`*^9, 3.814979651622328*^9}, {
   3.814979735301855*^9, 
   3.81497974265644*^9}},ExpressionUUID->"fd6ea253-f2d5-4f08-b266-\
0df71c0717ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DTtestwn", "=", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"meanWN", "-", "tValue"}], "]"}], 
   "MSEwn"]}], "\[IndentingNewLine]", 
 RowBox[{"DTtestos", "=", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"meanOS", "-", "tValue"}], "]"}], "MSEos"]}]}], "Input",
 CellChangeTimes->{{3.8149723833500767`*^9, 3.814972481565661*^9}, {
  3.81497266033475*^9, 3.8149727346206007`*^9}, {3.8149729122863827`*^9, 
  3.814972937258833*^9}, {3.814973721949533*^9, 3.814973781460616*^9}, {
  3.814973871592043*^9, 3.814973900727881*^9}, {3.8149798079112263`*^9, 
  3.814979824243546*^9}, {3.814980398172556*^9, 
  3.814980416352429*^9}},ExpressionUUID->"b89f26ec-75ec-40f8-9380-\
11850cf081b5"],

Cell[BoxData["0.007006434725945624`"], "Output",
 CellChangeTimes->{{3.8149723916633883`*^9, 3.814972482466275*^9}, {
   3.81497268882407*^9, 3.814972693908249*^9}, {3.8149727240792227`*^9, 
   3.8149727355132437`*^9}, {3.814972908738052*^9, 3.814972938124257*^9}, {
   3.814973762907628*^9, 3.814973782702602*^9}, 3.814973903290558*^9, {
   3.8149798157724648`*^9, 3.814979824904916*^9}, 3.814980419382496*^9, 
   3.814982322413849*^9, 
   3.814982441251019*^9},ExpressionUUID->"48fb5f3c-78c6-4751-aeae-\
25f478fa1add"],

Cell[BoxData["0.00004350811824702481`"], "Output",
 CellChangeTimes->{{3.8149723916633883`*^9, 3.814972482466275*^9}, {
   3.81497268882407*^9, 3.814972693908249*^9}, {3.8149727240792227`*^9, 
   3.8149727355132437`*^9}, {3.814972908738052*^9, 3.814972938124257*^9}, {
   3.814973762907628*^9, 3.814973782702602*^9}, 3.814973903290558*^9, {
   3.8149798157724648`*^9, 3.814979824904916*^9}, 3.814980419382496*^9, 
   3.814982322413849*^9, 
   3.814982441253229*^9},ExpressionUUID->"0de6a965-2028-4f27-bb6a-\
b203526323a1"]
}, Open  ]],

Cell[TextData[{
 "We can also use another derivation of the T-test called ",
 StyleBox["Welch\[CloseCurlyQuote]s t-test",
  FontVariations->{"Underline"->True}],
 " to compare directly our two estimates"
}], "Text",
 CellChangeTimes->{{3.81497990848316*^9, 
  3.814979932397685*^9}},ExpressionUUID->"b4624ad5-49c6-498c-b0a2-\
66daa23db091"],

Cell[BoxData[
 StyleBox[
  RowBox[{"t", "=", 
   FractionBox[
    RowBox[{
     SubscriptBox[
      OverscriptBox["X", "-"], "1"], "-", 
     SubscriptBox[
      OverscriptBox["X", "-"], "2"]}], 
    SqrtBox[
     RowBox[{
      FractionBox[
       SubsuperscriptBox["s", "1", "2"], 
       SubscriptBox["N", "1"]], "+", 
      FractionBox[
       SubsuperscriptBox["s", "2", "2"], 
       SubscriptBox["N", "2"]]}]]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81497995285252*^9, 
  3.814980019477747*^9}},ExpressionUUID->"d06e1b58-4240-4ac7-8bf7-\
541047540ecf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Twelch", "=", 
  FractionBox[
   RowBox[{"meanWN", "-", "meanOS"}], 
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["MSEwn", "2"], "n"], "+", 
     FractionBox[
      SuperscriptBox["MSEos", "2"], "n"]}]]]}]], "Input",
 CellChangeTimes->{{3.814979898203693*^9, 3.814979899527993*^9}, {
  3.8149800590556393`*^9, 3.814980195087036*^9}, {3.8149803179647627`*^9, 
  3.8149803277479553`*^9}},ExpressionUUID->"a14745ab-772b-4d71-82cd-\
1670bb1780dd"],

Cell[BoxData[
 RowBox[{"-", "0.4983936037054847`"}]], "Output",
 CellChangeTimes->{{3.814980126089905*^9, 3.814980165581142*^9}, 
   3.814980200978097*^9, {3.814980319481576*^9, 3.814980328480735*^9}, 
   3.814980420798335*^9, 3.814982322436091*^9, 
   3.814982441284636*^9},ExpressionUUID->"371f186f-b4a6-45dd-a004-\
388fc33e5fe0"]
}, Open  ]],

Cell["Eventually the T-test is given by", "Text",
 CellChangeTimes->{{3.814980366063629*^9, 
  3.814980374254129*^9}},ExpressionUUID->"38370620-a21b-4cb2-938d-\
89ef0bcca2b9"],

Cell[BoxData[
 StyleBox[
  RowBox[{"t", "=", 
   FractionBox[
    RowBox[{
     SubscriptBox[
      OverscriptBox["X", "-"], "1"], "-", 
     SubscriptBox[
      OverscriptBox["X", "-"], "2"]}], 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{
        SubsuperscriptBox["s", "1", "2"], "+", 
        SubsuperscriptBox["s", "2", "2"]}], "2"]], "*", 
     SqrtBox[
      FractionBox["2", "n"]]}]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8149803831180477`*^9, 3.8149803844238577`*^9}, {
  3.814980424642638*^9, 
  3.814980502031908*^9}},ExpressionUUID->"88aca169-0a9a-46bb-979d-\
7431cb5410df"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"meanWN", "-", "meanOS"}], 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["MSEwn", "2"], "+", 
      SuperscriptBox["MSEos", "2"]}], "2"]], "*", 
   SqrtBox[
    FractionBox["2", "n"]]}]]], "Input",
 CellChangeTimes->{{3.8149805288797092`*^9, 
  3.81498055324774*^9}},ExpressionUUID->"e70cc6ab-8ac7-4ba2-85f5-\
05cf9b49c90a"],

Cell[BoxData[
 RowBox[{"-", "0.49839360370548474`"}]], "Output",
 CellChangeTimes->{3.814980555505659*^9, 3.814982322457156*^9, 
  3.814982441317544*^9},ExpressionUUID->"1dcd5001-0dbb-46a4-96b6-\
33134a26088b"]
}, Open  ]],

Cell[TextData[{
 "Result is the same of the Welch\[CloseCurlyQuote]s t-test because n is the \
same for both estimation there while it could be different as opposed to the \
T-test.\n\n\n",
 StyleBox["===================================================================\
=====================\n",
  FontColor->GrayLevel[0.5]],
 "Now this error estimates do tell us something when compared against \
different estimators of the same parameter (here mean).\nWhat they don\
\[CloseCurlyQuote]t tell us is the variability of our result compared on \
successive runs of the same simulation."
}], "Text",
 CellChangeTimes->{{3.8149805953614187`*^9, 3.814980644277708*^9}, {
  3.814980782789727*^9, 
  3.814980901858964*^9}},ExpressionUUID->"26f5d126-c7da-4d36-af0d-\
56143517141d"],

Cell[CellGroupData[{

Cell[BoxData[{"meanWN", "\[IndentingNewLine]", 
 RowBox[{"meanWN2", "=", " ", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanWN3", "=", " ", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanWN4", "=", " ", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanWN5", "=", " ", 
  RowBox[{"Mean", "[", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], "]"}]}]}], "Input",\

 CellChangeTimes->{{3.814981041133875*^9, 
  3.81498113007749*^9}},ExpressionUUID->"98ebd454-9aef-4aa2-aca1-\
49004f2f104f"],

Cell[BoxData["1.998631398101547`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 
   3.814982441351678*^9},ExpressionUUID->"cbea1d7c-b800-488e-b385-\
165b08920bc6"],

Cell[BoxData["2.000085001768323`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 
   3.814982441386862*^9},ExpressionUUID->"85983120-6ae4-40de-8fd5-\
7c20eab2917d"],

Cell[BoxData["2.0003759987935648`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 
   3.8149824414224577`*^9},ExpressionUUID->"5e1c14b3-4a36-4e57-b892-\
596a1942bdbe"],

Cell[BoxData["2.002850803010762`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 
   3.814982441458191*^9},ExpressionUUID->"846dd9e0-4e7e-4c3b-8fbd-\
e9fe7ef5c666"],

Cell[BoxData["1.9992496233137507`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 
   3.814982441497044*^9},ExpressionUUID->"e6ce681f-1288-4b74-9731-\
4a782bd3c017"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetPrecision", "[", 
    RowBox[{"meanOS", ",", "18"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"meanOS2", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Mean", "[", 
        RowBox[{
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"i", "=", 
               RowBox[{"i", "+", "n"}]}], "}"}], ",", 
             RowBox[{"f", "[", 
              RowBox[{"a", "+", 
               RowBox[{
                RowBox[{"owenScrambledSobol1D", "[", "i", "]"}], "*", "w"}]}],
               "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], "]"}], 
       "\[IndentingNewLine]", "meanOS3"}], "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", "=", 
                RowBox[{"i", "+", "n", "+", "n"}]}], "}"}], ",", 
              RowBox[{"f", "[", 
               RowBox[{"a", "+", 
                RowBox[{
                 RowBox[{"owenScrambledSobol1D", "[", "i", "]"}], "*", 
                 "w"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], "]"}], 
        "\[IndentingNewLine]", "meanOS4"}], "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", 
          RowBox[{
           RowBox[{"ParallelTable", "[", 
            RowBox[{
             RowBox[{"With", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"i", "=", 
                 RowBox[{"i", "+", "n", "+", "n", "+", "n"}]}], "}"}], ",", 
               RowBox[{"f", "[", 
                RowBox[{"a", "+", 
                 RowBox[{
                  RowBox[{"owenScrambledSobol1D", "[", "i", "]"}], "*", 
                  "w"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], "]"}], 
         "\[IndentingNewLine]", "meanOS5"}], "=", " ", 
        RowBox[{"Mean", "[", 
         RowBox[{
          RowBox[{"ParallelTable", "[", 
           RowBox[{
            RowBox[{"With", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"i", "=", 
                RowBox[{"i", "+", "n", "+", "n", "+", "n", "+", "n"}]}], 
               "}"}], ",", 
              RowBox[{"f", "[", 
               RowBox[{"a", "+", 
                RowBox[{
                 RowBox[{"owenScrambledSobol1D", "[", "i", "]"}], "*", 
                 "w"}]}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], 
         "]"}]}]}]}]}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", "5"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ddddd", "[", "x_", "]"}], ":=", "x"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParallelTable", "[", " ", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", "i"}], "}"}], ",", 
          RowBox[{"ddddd", "[", "i", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "u"}], "}"}]}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"ParallelTable", "[", " ", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "u"}]}], "}"}], ",", 
          RowBox[{"ddddd", "[", "i", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "u"}], "}"}]}], "]"}]}]}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.814981458689967*^9, 3.814981777581563*^9}, {
   3.8149818122352047`*^9, 3.814981824835367*^9}, {3.814981878089332*^9, 
   3.814981944267727*^9}, {3.814982011904797*^9, 3.814982075616452*^9}, {
   3.814982131332909*^9, 3.8149821975911293`*^9}, {3.814982353160206*^9, 
   3.814982363463746*^9}, {3.8149824232652483`*^9, 3.8149824246135483`*^9}, {
   3.81498253088733*^9, 3.814982551966434*^9}, {3.814982588778604*^9, 
   3.814982686041481*^9}, 
   3.814983047978841*^9},ExpressionUUID->"b8f1c06f-92f6-4a1b-a904-\
51df8c618bd4"],

Cell[BoxData["2.00000850254700957009390549501404166222`18."], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 
   3.81498307391292*^9},ExpressionUUID->"ff7e5eb9-b48b-4a37-a76a-\
d38cd41c81fe"]
}, Open  ]],

Cell["\<\
We already see what\[CloseCurlyQuote]s going on here.. for replicated \
simulation those with the OwenScrambledSobol sampler \
\>", "Text",
 CellChangeTimes->{{3.814981243723913*^9, 
  3.81498128235463*^9}},ExpressionUUID->"c6581a0b-1225-46b1-a397-\
e50d103cda1f"],

Cell[TextData[{
 "\n\n\n\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.814206514347506*^9, 3.8142065147064*^9}, 
   3.814291772303742*^9, 3.8142918130733747`*^9, {3.814291851167037*^9, 
   3.81429185157169*^9}, {3.8142918871671333`*^9, 3.814291887482181*^9}, {
   3.814295266573827*^9, 3.814295267226817*^9}, 3.814296846577601*^9, {
   3.8144462918802977`*^9, 3.8144463260086107`*^9}, {3.814451771911031*^9, 
   3.814451773396213*^9}, {3.814455501253792*^9, 3.814455506803145*^9}, 
   3.8146203377913237`*^9, 3.814620589089204*^9, {3.814902554232074*^9, 
   3.81490255551381*^9}},ExpressionUUID->"5c9c99b3-94f4-4132-a6fb-\
449cc95d2c55"],

Cell[TextData[{
 "\nTODO: \n-> see examples for MC error estimates in -> Monte Carlo \
Simulations in Physics.pdf (desktop)\n-> see Error Estimates in the MC \
Method.pdf (3.44)\n",
 StyleBox["\n-> \
https://bookdown.org/kevin_davisross/probbook/sec-cdf-method.html\n-> \
https://bookdown.org/kevin_davisross/probbook/law-of-the-unconscious-\
statistician.html",
  FontSize->12],
 "\n\n-> ",
 StyleBox["https://www.scratchapixel.com/lessons/mathematics-physics-for-\
computer-graphics/monte-carlo-methods-mathematical-foundations/sampling-\
distribution\n",
  FontSize->12],
 "->",
 StyleBox[" \
https://www.scratchapixel.com/lessons/mathematics-physics-for-computer-\
graphics/monte-carlo-methods-in-practice/monte-carlo-integration\n",
  FontSize->12]
}], "Text",
 CellChangeTimes->{{3.814125751264777*^9, 3.8141257802898893`*^9}, {
  3.814125887840865*^9, 3.8141259075949802`*^9}, {3.814125965128297*^9, 
  3.814125983354628*^9}, {3.814126949998987*^9, 3.814126964895047*^9}, {
  3.814211187847974*^9, 3.814211223867049*^9}, {3.814296586810855*^9, 
  3.8142966005571747`*^9}, {3.814297092026329*^9, 3.814297141164838*^9}, {
  3.8143797289247923`*^9, 3.8143797522114964`*^9}, {3.814379850606473*^9, 
  3.814379903659883*^9}, {3.814455405504868*^9, 3.81445541185261*^9}, {
  3.8144638241416073`*^9, 3.814463830857748*^9}, {3.8144642017411833`*^9, 
  3.8144642044480543`*^9}, {3.8145600895973473`*^9, 
  3.814560117410755*^9}},ExpressionUUID->"7a769433-7f23-44b2-8245-\
714925b5b37e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Basic Calculus with Mathematica\
\>", "Title",
 CellChangeTimes->{{3.813924504576889*^9, 
  3.813924527840707*^9}},ExpressionUUID->"9949c8f5-aa9b-4581-b0b9-\
c9443bb2c0db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Integration", " ", "Basics"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Use", " ", "'"}], "ESC", 
      StyleBox["\[ThinSpace]", "InlineCode"], 
      StyleBox["int", "InlineCode"], " ", 
      RowBox[{"ESC", "'"}], " ", "to", " ", "enter", "\[Integral]"}], " ", 
     ".."}], " ", 
    RowBox[{"and", " ", "'"}], "ESC", 
    StyleBox["\[ThinSpace]", "InlineCode"], 
    StyleBox["dd", "InlineCode"], 
    StyleBox[" ", "InlineCode"], 
    StyleBox[
     RowBox[{"ESC", " ", "'"}], "InlineCode"], "to", " ", "enter", " ", 
    "\[DifferentialD]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Use", " ", "CTRL_", " ", "to", " ", "enter", " ", "the", " ", "lower", 
     " ", "limit"}], ",", 
    RowBox[{
    "then", " ", "CTRL", "%", " ", "for", " ", "the", " ", "upper", " ", 
     "limit"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "or", " ", "use", " ", "the", " ", "Basic", " ", "Math", " ", "Assistant", 
    " ", "palette"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"1", "\[IndentingNewLine]"}]], 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"%", "//", "N"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "//", "N"}]}]}]], "Input",
 CellChangeTimes->{{3.797257264887967*^9, 3.7972574953548727`*^9}, {
   3.797257525437728*^9, 3.797257535517048*^9}, {3.797346194882132*^9, 
   3.7973462183068523`*^9}, {3.797346253268834*^9, 3.797346256555151*^9}, 
   3.797346308803203*^9, {3.7973550546188498`*^9, 3.7973550871076307`*^9}, {
   3.797355138422392*^9, 
   3.797355165560734*^9}},ExpressionUUID->"4c0c436f-7298-4f57-a662-\
e8eb47dd52b7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "18"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", "\[Pi]"}], "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.8149824508771544`*^9},ExpressionUUID->"980433d4-0082-4e0a-b691-\
b845626d338a"],

Cell[BoxData["0.8356488482647209`"], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.814982450878866*^9},ExpressionUUID->"683d293c-afc3-456d-9396-\
02cda03a6907"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "18"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", "\[Pi]"}], "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.8149824509492702`*^9},ExpressionUUID->"d65292d2-7f27-4cb9-9f2e-\
b918bf0eb1bf"],

Cell[BoxData["0.8356488482647209`"], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.814982450951429*^9},ExpressionUUID->"d3ca0570-43c4-4a00-9b2a-\
b67e4071b3b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "Pi", 
    RowBox[{"(", "\[Pi]", ")"}], " ", "with", " ", "integration"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"see", " ", "LightTransport"}], "\[Rule]", 
    RowBox[{"theory", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{
       "2014", "MonteCarloIntegration", " ", "to", " ", "integrate", " ", 
        "it", " ", "with", " ", "rnd", " ", "samples"}], ".."}], " ", 
      RowBox[{"aka", " ", "'"}], "crude", " ", 
      RowBox[{"qMC", "'"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], "=", 
     RowBox[{"4", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"x", "^", "2"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "//", "N"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"1", "\[IndentingNewLine]"}]], 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{"%", ",", "20"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Pi", " ", "with", " ", "20", " ", "digits", " ", "precision"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797269739722774*^9, 3.797269787300434*^9}, {
  3.7972698425866947`*^9, 3.797269970970564*^9}, {3.7972700030131073`*^9, 
  3.797270014466847*^9}, {3.797270055281499*^9, 3.797270100953642*^9}, {
  3.7972702513696747`*^9, 3.797270264667993*^9}, {3.7972703865059357`*^9, 
  3.7972704691499777`*^9}, {3.797270530827697*^9, 3.797270577196252*^9}, {
  3.7972706201943903`*^9, 3.7972706289027147`*^9}, {3.797270970277197*^9, 
  3.79727100634536*^9}, {3.797271059172687*^9, 3.7972710740016947`*^9}, {
  3.797271260343335*^9, 3.797271260433234*^9}, {3.797271681047991*^9, 
  3.797271682803088*^9}, {3.797356862689966*^9, 
  3.797356878367152*^9}},ExpressionUUID->"fca270d9-9637-460b-89c1-\
7672688f1315"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451010571*^9},ExpressionUUID->"8516b6fb-f74d-4d97-a07a-\
e43910e8fe00"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.8149824510127583`*^9},ExpressionUUID->"0af98e0d-eb63-4a1b-8414-\
ac18779cba97"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451060011*^9},ExpressionUUID->"c576a6be-747b-49d3-9900-\
c21392110352"],

Cell[BoxData["3.1415926535897932384626433832795028842`20."], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451062085*^9},ExpressionUUID->"e70d6c94-2d59-46c1-839a-\
a7ae6b431fea"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
D69z6P9cn46I
       "]]},
     Annotation[#, "Charting`Private`Tag$7372#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.0000000408163268`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {2.0000000408163268`, 3.9999999999999982`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451101501*^9},ExpressionUUID->"f20ce231-f964-49d9-ae6f-\
3856823117e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Integration", " ", "Strategies"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "tutorial"}], "/", 
     RowBox[{"NIntegrateIntegrationStrategies", ".", "html"}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<MonteCarlo\>\""}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<QuasiMonteCarlo\>\""}]}], "]"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<RiemannRule\>\"", ",", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<Right\>\""}]}], "}"}]}], ",", 
      RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<NewtonCotesRule\>\"", ",", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<Closed\>\""}]}], "}"}]}]}], 
     "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7972731864252243`*^9, 3.7972732539990473`*^9}, {
  3.79735528028811*^9, 3.797355295852742*^9}, {3.7973553494512243`*^9, 
  3.797355365149374*^9}, {3.797355925430747*^9, 3.797355941475882*^9}, {
  3.797355981098081*^9, 3.797356001889526*^9}, {3.797356036778438*^9, 
  3.797356083736657*^9}, {3.797356885098261*^9, 
  3.797356888699877*^9}},ExpressionUUID->"9e2072b0-cb51-42ff-8ac3-\
5c9434373ad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.019122`", ",", "3.255069225485037`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.8149824511383*^9},ExpressionUUID->"015ad695-cc11-441e-a0c6-2d9941daa5cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.053857`", ",", "3.286321016176149`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.8149824511845083`*^9},ExpressionUUID->"fbdff9f3-af10-40a5-8aba-\
d8c708c50023"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.045337`", ",", "3.2542281563791757`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.814982451230772*^9},ExpressionUUID->"f4c25b08-08d3-48d7-a876-\
894ebbcc32d3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.110933`", ",", "3.286261779209878`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.81498245134217*^9},ExpressionUUID->"93b07636-4eef-49fa-8aa4-\
71f2335f97cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"1", "-", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "N"}]}], "Input",
 CellChangeTimes->{{3.797346240061912*^9, 3.7973462425588627`*^9}, {
   3.7973544048712053`*^9, 3.797354447188352*^9}, {3.797354524724935*^9, 
   3.797354678140542*^9}, {3.797354811594798*^9, 3.797354813958242*^9}, {
   3.797356902691381*^9, 3.797356915913137*^9}, 
   3.798203241592535*^9},ExpressionUUID->"376445e5-4685-4b68-af91-\
4163ff0537e4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7503#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.798203248141898*^9, 3.798370602708959*^9, 3.7984806151211576`*^9, 
   3.799316713690572*^9, 3.799328231359671*^9, 3.799416751658656*^9, 
   3.799944183555297*^9, 3.813924611664537*^9, 3.813924976087632*^9, 
   3.813925059625227*^9, 3.813937129295833*^9, 3.8139391270533247`*^9, 
   3.8139556616915197`*^9, 3.813957239117146*^9, 3.813957481951008*^9, 
   3.814004879819951*^9, 3.8140209947264223`*^9, 3.814021225679098*^9, 
   3.8141036909642982`*^9, 3.814103883105946*^9, 3.8141039577298117`*^9, 
   3.814104059772245*^9, {3.814104098148693*^9, 3.814104121837831*^9}, 
   3.814104153624383*^9, 3.814104263143869*^9, 3.814107777268898*^9, 
   3.814713456446774*^9, 3.814729445202478*^9, 3.814729841649901*^9, 
   3.814784179364232*^9, 3.8147852672420387`*^9, 3.8147868732494097`*^9, 
   3.814787183579771*^9, 3.814787250738797*^9, 3.81479056993097*^9, 
   3.81479915150117*^9, 3.814799269212039*^9, 3.814803547353861*^9, 
   3.814808786909402*^9, 3.814816058452427*^9, 3.814817076266057*^9, 
   3.8148172034463253`*^9, 3.814817938691896*^9, 3.814818382300171*^9, 
   3.814819921858677*^9, 3.814962878086928*^9, 3.814964274732239*^9, 
   3.814965664328732*^9, 3.8149688017885103`*^9, 3.814982332641736*^9, 
   3.814982451387611*^9},ExpressionUUID->"cb0a1cf6-264a-4d05-9169-\
e13f733e9fb3"],

Cell[BoxData[
 FractionBox["\[Pi]", "4"]], "Output",
 CellChangeTimes->{
  3.798203248141898*^9, 3.798370602708959*^9, 3.7984806151211576`*^9, 
   3.799316713690572*^9, 3.799328231359671*^9, 3.799416751658656*^9, 
   3.799944183555297*^9, 3.813924611664537*^9, 3.813924976087632*^9, 
   3.813925059625227*^9, 3.813937129295833*^9, 3.8139391270533247`*^9, 
   3.8139556616915197`*^9, 3.813957239117146*^9, 3.813957481951008*^9, 
   3.814004879819951*^9, 3.8140209947264223`*^9, 3.814021225679098*^9, 
   3.8141036909642982`*^9, 3.814103883105946*^9, 3.8141039577298117`*^9, 
   3.814104059772245*^9, {3.814104098148693*^9, 3.814104121837831*^9}, 
   3.814104153624383*^9, 3.814104263143869*^9, 3.814107777268898*^9, 
   3.814713456446774*^9, 3.814729445202478*^9, 3.814729841649901*^9, 
   3.814784179364232*^9, 3.8147852672420387`*^9, 3.8147868732494097`*^9, 
   3.814787183579771*^9, 3.814787250738797*^9, 3.81479056993097*^9, 
   3.81479915150117*^9, 3.814799269212039*^9, 3.814803547353861*^9, 
   3.814808786909402*^9, 3.814816058452427*^9, 3.814817076266057*^9, 
   3.8148172034463253`*^9, 3.814817938691896*^9, 3.814818382300171*^9, 
   3.814819921858677*^9, 3.814962878086928*^9, 3.814964274732239*^9, 
   3.814965664328732*^9, 3.8149688017885103`*^9, 3.814982332641736*^9, 
   3.814982451634738*^9},ExpressionUUID->"b497e523-e8a7-4fa3-9a11-\
90e38fe1875e"],

Cell[BoxData["0.7853981633974483`"], "Output",
 CellChangeTimes->{
  3.798203248141898*^9, 3.798370602708959*^9, 3.7984806151211576`*^9, 
   3.799316713690572*^9, 3.799328231359671*^9, 3.799416751658656*^9, 
   3.799944183555297*^9, 3.813924611664537*^9, 3.813924976087632*^9, 
   3.813925059625227*^9, 3.813937129295833*^9, 3.8139391270533247`*^9, 
   3.8139556616915197`*^9, 3.813957239117146*^9, 3.813957481951008*^9, 
   3.814004879819951*^9, 3.8140209947264223`*^9, 3.814021225679098*^9, 
   3.8141036909642982`*^9, 3.814103883105946*^9, 3.8141039577298117`*^9, 
   3.814104059772245*^9, {3.814104098148693*^9, 3.814104121837831*^9}, 
   3.814104153624383*^9, 3.814104263143869*^9, 3.814107777268898*^9, 
   3.814713456446774*^9, 3.814729445202478*^9, 3.814729841649901*^9, 
   3.814784179364232*^9, 3.8147852672420387`*^9, 3.8147868732494097`*^9, 
   3.814787183579771*^9, 3.814787250738797*^9, 3.81479056993097*^9, 
   3.81479915150117*^9, 3.814799269212039*^9, 3.814803547353861*^9, 
   3.814808786909402*^9, 3.814816058452427*^9, 3.814817076266057*^9, 
   3.8148172034463253`*^9, 3.814817938691896*^9, 3.814818382300171*^9, 
   3.814819921858677*^9, 3.814962878086928*^9, 3.814964274732239*^9, 
   3.814965664328732*^9, 3.8149688017885103`*^9, 3.814982332641736*^9, 
   3.8149824516369753`*^9},ExpressionUUID->"5a70b699-f466-4369-bad0-\
26dc012ac65f"]
}, Open  ]],

Cell["\<\
see this: https://www.maplesoft.com/applications/view.aspx?sid=4009&view=html\
\
\>", "Text",
 CellChangeTimes->{{3.798203230892971*^9, 
  3.798203238757854*^9}},ExpressionUUID->"62166b37-f963-4c96-8e1a-\
e7922ca7bff4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11047#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7973564149902782`*^9, 3.797356637542911*^9, 
  3.7973566699782543`*^9, 3.797357023840321*^9, 3.797418337797895*^9, 
  3.7974204551521482`*^9, 3.797420575557581*^9, 3.797432861639811*^9, 
  3.797503470109438*^9, 3.797530943360157*^9, 3.7975332056069393`*^9, 
  3.797533972312314*^9, 3.797535187233479*^9, 3.797700318027183*^9, 
  3.79770305001057*^9, 
  3.797704865186887*^9},ExpressionUUID->"8bb6959f-e345-4108-b8f3-\
531158254a89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Hit", "-", "or", "-", 
    RowBox[{
    "Miss", " ", "Monte", " ", "Carlo", " ", "method", " ", "to", " ", 
     "calculate", " ", "\[Pi]"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "area", " ", "ratio", " ", "of", " ", "a", " ", "unit", " ", 
     "circle", " ", "Ac", " ", "over", " ", "a", " ", "unit", " ", "square", 
     " ", "As", " ", 
     RowBox[{"is", ":", " ", 
      RowBox[{"Ac", "/", "As"}]}]}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]r", "^", "2"}], " ", "/", " ", "4"}], 
      RowBox[{"r", "^", "2"}]}], " ", "=", " ", 
     RowBox[{"\[Pi]", "/", "4"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"We", " ", "shoot", " ", 
    RowBox[{"(", "n", ")"}], " ", "rnd", " ", "pts", " ", "over", " ", "the", 
    " ", "square", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"+", "1"}]}], ")"}], " ", "and", " ", "consider", " ", "a", " ",
     "hit", " ", "for", " ", "those", " ", "pts", " ", 
    RowBox[{"(", "m", ")"}], " ", "that", " ", 
    RowBox[{"satisfy", ":", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[LessEqual]", "1"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Hence", " ", "\[Pi]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       RowBox[{"m", "/", "n"}]}], " ", ".."}], 
     RowBox[{"ie", ".", " ", "ratio"}], " ", "of", " ", "hit", " ", "vs", " ",
      "shot", " ", "time", " ", "4"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"see", " ", "2013"}], "-", 
     RowBox[{"Math", " ", "Numerics", " ", "and", " ", "Programming", " ", 
      RowBox[{"(", 
       RowBox[{"for", " ", "mechanical", " ", "engineers"}], ")"}]}]}], " ", 
    "..."}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "or", " ", "MonteCarlo", " ", "Integration", " ", "in", " ", "a", " ", 
    "Nutshell", " ", "for", " ", "better", " ", "area", " ", "estimation", 
    " ", "tecniques"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "inside", ",", "insidepts"}], "}"}], ",", 
      RowBox[{
       RowBox[{"SeedRandom", "[", "n", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"insidepts", "=", 
        RowBox[{"Cases", "[", 
         RowBox[{"data", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], "<", "1"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inside", "=", 
        RowBox[{"Length", "[", "insidepts", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "@", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "[", "0.004", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"0.86", ",", "0.5", ",", "0.74"}], "]"}], ",", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
                 "Black", ",", 
                 RowBox[{"Point", "[", "data", "]"}]}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{"format", ",", "500", ",", "350"}], "]"}]}]}], "]"}],
              ",", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<inside: \>\"", ",", "inside", ",", "\"\<\\toutside: \>\"",
                 ",", 
                RowBox[{"m", "-", "inside"}], ",", "\"\<\\ttotal:  \>\"", ",",
                 "m"}], "}"}], "]"}], ",", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\[Pi] \[TildeTilde] 4 \[Times] \>\"", ",", "inside", ",", 
                "\"\</\>\"", ",", "m", ",", "\"\< = \>\"", ",", 
                RowBox[{"4.", " ", 
                 RowBox[{"inside", "/", "m"}]}]}], "}"}], "]"}]}], "}"}], 
           "]"}], ",", "\"\<Label\>\""}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "\"\<random seed\>\""}], "}"}], ",", "1", 
      ",", "1000", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "64", ",", "\"\<sample size\>\""}], "}"}], ",", "64",
       ",", "8192", ",", "64", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"format", ",", "False", ",", "\"\<large format\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
    RowBox[{"AutorunSequencing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797356613388928*^9, 3.797356616696006*^9}, {
   3.797356712805265*^9, 3.797356809944097*^9}, {3.7973569718650312`*^9, 
   3.797356986015039*^9}, {3.813955056781818*^9, 3.8139550608322573`*^9}, 
   3.813955097167153*^9},ExpressionUUID->"948b9986-d6c3-4908-9152-\
819a13babc64"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`format$$ = False, $CellContext`m$$ = 
    64, $CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 1, "random seed"}, 1, 1000, 1}, {{
       Hold[$CellContext`m$$], 64, "sample size"}, 64, 8192, 64}, {{
       Hold[$CellContext`format$$], False, "large format"}, {True, False}}}, 
    Typeset`size$$ = {350., {188., 191.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`n$7982$$ =
     0, $CellContext`m$7987$$ = 0, $CellContext`format$7988$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`format$$ = False, $CellContext`m$$ = 
        64, $CellContext`n$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$7982$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$7987$$, 0], 
        Hold[$CellContext`format$$, $CellContext`format$7988$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`inside$, \
$CellContext`insidepts$}, 
        SeedRandom[$CellContext`n$$]; $CellContext`data$ = 
         RandomReal[{-1, 1}, {$CellContext`m$$, 2}]; $CellContext`insidepts$ = 
         Cases[$CellContext`data$, 
           Condition[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}, $CellContext`x^2 + $CellContext`y^2 < 
            1]]; $CellContext`inside$ = Length[$CellContext`insidepts$]; 
        Text[
          Style[
           Column[{
             Graphics[{
               PointSize[0.004], 
               RGBColor[0.86, 0.5, 0.74], 
               Disk[{0, 0}, 1], Black, 
               Point[$CellContext`data$]}, ImageSize -> 
              If[$CellContext`format$$, 500, 350]], 
             
             Row[{"inside: ", $CellContext`inside$, 
               "\toutside: ", $CellContext`m$$ - $CellContext`inside$, 
               "\ttotal:  ", $CellContext`m$$}], 
             
             Row[{"\[Pi] \[TildeTilde] 4 \[Times] ", $CellContext`inside$, 
               "/", $CellContext`m$$, " = ", 
               4. ($CellContext`inside$/$CellContext`m$$)}]}], "Label"]]], 
      "Specifications" :> {{{$CellContext`n$$, 1, "random seed"}, 1, 1000, 
         1}, {{$CellContext`m$$, 64, "sample size"}, 64, 8192, 64, Appearance -> 
         "Labeled"}, {{$CellContext`format$$, False, "large format"}, {
         True, False}}}, "Options" :> {AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{395., {254., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.814708853168428*^9, 3.81471345675108*^9, 
  3.8147294454830837`*^9, 3.814729841891478*^9, 3.814784179642208*^9, 
  3.814785267582692*^9, 3.8147868734790277`*^9, 3.814787183864979*^9, 
  3.8147872510225554`*^9, 3.8147905701608343`*^9, 3.814799151772119*^9, 
  3.814799269460451*^9, 3.8148035475995483`*^9, 3.8148087871787043`*^9, 
  3.814816058713024*^9, 3.814817076501512*^9, 3.8148172037006207`*^9, 
  3.814817938921784*^9, 3.814818382577606*^9, 3.81481992209282*^9, 
  3.8149628783656263`*^9, 3.8149642750260477`*^9, 3.814965664583611*^9, 
  3.81496880207251*^9, 3.8149823328695717`*^9, 
  3.814982451740122*^9},ExpressionUUID->"3d5a7fb3-078b-43e2-9a2d-\
c9be3eb9d2fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "tf"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", ",", "t", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "+", 
       RowBox[{"RandomReal", "[", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], " ", "2", " ", "Pi"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"u", ">", "1"}], ",", 
        RowBox[{"2", "-", "u"}], ",", "u"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tf", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"f", "[", "]"}], ",", 
      RowBox[{"{", "1000", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "tf", "]"}], "\n", 
 RowBox[{
  RowBox[{"Histogram3D", "[", 
   RowBox[{"tf", ",", "Automatic", ",", "\"\<ProbabilityDensity\>\"", ",", 
    RowBox[{"ChartElementFunction", "\[Rule]", "\"\<FadingCube\>\""}]}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{"tf", ",", "50", ",", "\"\<PDF\>\"", ",", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{"tf", ",", "50", ",", "\"\<CDF\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"tf", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SmoothDensityHistogram", "[", 
    RowBox[{"tf", ",", "name", ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "name"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"name", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<StandardDeviation\>\"", ",", "\"\<StandardGaussian\>\""}], 
      "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7973561311647177`*^9, 3.797356182328328*^9}, {
  3.797356653777383*^9, 3.797356662997353*^9}, {3.7973569312472897`*^9, 
  3.797356933004239*^9}},ExpressionUUID->"18461649-926a-4072-81cc-\
be0ec371c4a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.0064789999912235365`"}], ",", "0.004864893434353037`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 
   3.8149824518168364`*^9},ExpressionUUID->"bdbacb38-c444-467c-9b12-\
608b2524a2c5"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
   RGBColor[0.880722, 0.611041, 0.142051]], 
   StyleBox[{{}, 
     {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
      RGBColor[0.880722, 0.611041, 0.142051]], 
      StyleBox[{
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., -0.6, 0.}, {-1., -0.4, 
                 0.}, {-1., -0.4, 0.125}, {-1., -0.6, 0.125}, {-0.8, -0.6, 
                 0.}, {-0.8, -0.4, 0.}, {-0.8, -0.4, 0.125}, {-0.8, -0.6, 
                 0.125}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{49.98570818763403, 
              76.79624486971173}, {-12.882422397326366`, 
              14.541075647629341`}}]},
           StatusArea[#, 0.125]& ,
           TagBoxNote->"0.125"],
          StyleBox["0.125`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.125, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., -0.4, 0.}, {-1., -0.2, 
                 0.}, {-1., -0.2, 0.35}, {-1., -0.4, 0.35}, {-0.8, -0.4, 
                 0.}, {-0.8, -0.2, 0.}, {-0.8, -0.2, 0.35}, {-0.8, -0.4, 
                 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{57.51367569592937, 
              85.96126454711734}, {-41.799973541078344`, 4.897527825540365}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., -0.2, 0.}, {-1., 0., 0.}, {-1., 
                 0., 0.15}, {-1., -0.2, 0.15}, {-0.8, -0.2, 0.}, {-0.8, 0., 
                 0.}, {-0.8, 0., 0.15}, {-0.8, -0.2, 0.15}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{69.08862383985344, 
              94.79152564995886}, {-32.74534182073427, -4.387230338072513}}]},
           
           StatusArea[#, 0.15]& ,
           TagBoxNote->"0.15"],
          StyleBox["0.15`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., 0., 0.}, {-1., 0.2, 0.}, {-1., 
                 0.2, 0.35}, {-1., 0., 0.35}, {-0.8, 0., 0.}, {-0.8, 0.2, 
                 0.}, {-0.8, 0.2, 0.35}, {-0.8, 0., 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{76.67394973417356, 
              103.30504015516766`}, {-58.55852479265586, \
-13.33285639750828}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., 0.2, 0.}, {-1., 0.4, 0.}, {-1., 
                 0.4, 0.325}, {-1., 0.2, 0.325}, {-0.8, 0.2, 0.}, {-0.8, 0.4, 
                 0.}, {-0.8, 0.4, 0.325}, {-0.8, 0.2, 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{85.89643150838198, 
              111.51855060715519`}, {-64.27906635391834, \
-21.95759765127177}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., 0.4, 0.}, {-1., 0.6, 0.}, {-1., 
                 0.6, 0.1}, {-1., 0.4, 0.1}, {-0.8, 0.4, 0.}, {-0.8, 0.6, 
                 0.}, {-0.8, 0.6, 0.1}, {-0.8, 0.4, 0.1}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{95.87179271756756, 
              119.44764001397918`}, {-52.78279313173394, \
-30.27841538055769}}]},
           StatusArea[#, 0.1]& ,
           TagBoxNote->"0.1"],
          StyleBox["0.1`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.1, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.8, 0.}, {-0.8, -0.6, 
                 0.}, {-0.8, -0.6, 0.15}, {-0.8, -0.8, 0.15}, {-0.6, -0.8, 
                 0.}, {-0.6, -0.6, 0.}, {-0.6, -0.6, 0.15}, {-0.6, -0.8, 
                 0.15}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{53.71645209331061, 
              81.46202712161917}, {-0.4759715832102387, 30.16284648129693}}]},
           
           StatusArea[#, 0.15]& ,
           TagBoxNote->"0.15"],
          StyleBox["0.15`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.6, 0.}, {-0.8, -0.4, 
                 0.}, {-0.8, -0.4, 0.25}, {-0.8, -0.6, 0.25}, {-0.6, -0.6, 
                 0.}, {-0.6, -0.4, 0.}, {-0.6, -0.4, 0.25}, {-0.6, -0.6, 
                 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{62.813018737667136`, 
              90.80832874555915}, {-18.90203097231138, 19.923938334838994`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.4, 0.}, {-0.8, -0.2, 
                 0.}, {-0.8, -0.2, 0.275}, {-0.8, -0.4, 0.275}, {-0.6, -0.4, 
                 0.}, {-0.6, -0.2, 0.}, {-0.6, -0.2, 0.275}, {-0.6, -0.4, 
                 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{72.43335651627213, 
              99.80335892800626}, {-30.263958456702184`, 
              10.077219377463521`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.2, 0.}, {-0.8, 0., 0.}, {-0.8,
                  0., 0.425}, {-0.8, -0.2, 0.425}, {-0.6, -0.2, 0.}, {-0.6, 
                 0., 0.}, {-0.6, 0., 0.425}, {-0.6, -0.2, 0.425}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{80.7665798238194, 
              108.4665556710931}, {-52.58247948400644, 0.600579548849808}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0., 0.}, {-0.8, 0.2, 0.}, {-0.8, 
                 0.2, 0.325}, {-0.8, 0., 0.325}, {-0.6, 0., 0.}, {-0.6, 0.2, 
                 0.}, {-0.6, 0.2, 0.325}, {-0.6, 0., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{90.74287482019561, 
              116.81594878647357`}, {-51.90851400673181, \
-8.526459897761427}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0.2, 0.}, {-0.8, 0.4, 0.}, {-0.8,
                  0.4, 0.2}, {-0.8, 0.2, 0.2}, {-0.6, 0.2, 0.}, {-0.6, 0.4, 
                 0.}, {-0.6, 0.4, 0.2}, {-0.6, 0.2, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{100.26875758798741`, 
              124.86828514768753`}, {-49.11783634552789, \
-17.32289412166989}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0.4, 0.}, {-0.8, 0.6, 0.}, {-0.8,
                  0.6, 0.325}, {-0.8, 0.4, 0.325}, {-0.6, 0.4, 0.}, {-0.6, 
                 0.6, 0.}, {-0.6, 0.6, 0.325}, {-0.6, 0.4, 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{108.13013753394779`, 
              132.63914080740994`}, {-67.82303409495462, \
-25.806366653311215`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0.6, 0.}, {-0.8, 0.8, 0.}, {-0.8,
                  0.8, 0.075}, {-0.8, 0.6, 0.075}, {-0.6, 0.6, 0.}, {-0.6, 
                 0.8, 0.}, {-0.6, 0.8, 0.075}, {-0.6, 0.6, 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{117.20236489924346`, 
              140.1430215590254}, {-54.20856474935057, -33.99328751445938}}]},
           
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -1., 0.}, {-0.6, -0.8, 
                 0.}, {-0.6, -0.8, 0.15}, {-0.6, -1., 0.15}, {-0.4, -1., 
                 0.}, {-0.4, -0.8, 0.}, {-0.4, -0.8, 0.15}, {-0.4, -1., 
                 0.15}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{57.98832028688389, 86.41746906946759}, {
              15.01948666869496, 46.77436905584227}}]},
           StatusArea[#, 0.15]& ,
           TagBoxNote->"0.15"],
          StyleBox["0.15`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.8, 0.}, {-0.6, -0.6, 
                 0.}, {-0.6, -0.6, 0.275}, {-0.6, -0.8, 0.275}, {-0.4, -0.8, 
                 0.}, {-0.4, -0.6, 0.}, {-0.4, -0.6, 0.275}, {-0.4, -0.8, 
                 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{67.08807195009716, 
              95.95036849495139}, {-6.3803998809008675`, 
              35.883213959612725`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.6, 0.}, {-0.6, -0.4, 
                 0.}, {-0.6, -0.4, 0.3}, {-0.6, -0.6, 0.3}, {-0.4, -0.6, 
                 0.}, {-0.4, -0.4, 0.}, {-0.4, -0.4, 0.3}, {-0.4, -0.6, 
                 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{76.96345416998844, 
              105.11429239120085`}, {-18.334469686222505`, 
              25.42192543980139}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.4, 0.}, {-0.6, -0.2, 
                 0.}, {-0.6, -0.2, 0.375}, {-0.6, -0.4, 0.375}, {-0.4, -0.4, 
                 0.}, {-0.4, -0.2, 0.}, {-0.4, -0.2, 0.375}, {-0.4, -0.4, 
                 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{86.13392255175506, 
              113.93025612044917`}, {-34.464990244281765`, 
              15.365546202653036`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.2, 0.}, {-0.6, 0., 0.}, {-0.6,
                  0., 0.35}, {-0.6, -0.2, 0.35}, {-0.4, -0.2, 0.}, {-0.4, 0., 
                 0.}, {-0.4, 0., 0.35}, {-0.4, -0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{95.72680135686065, 
              122.41770884571228`}, {-41.0702697521032, 
              5.6910142438541556`}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0., 0.}, {-0.6, 0.2, 0.}, {-0.6, 
                 0.2, 0.4}, {-0.6, 0., 0.4}, {-0.4, 0., 0.}, {-0.4, 0.2, 
                 0.}, {-0.4, 0.2, 0.4}, {-0.4, 0., 0.4}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{104.52031569854444`, 
              130.59467676606627`}, {-54.157878173895625`, \
-3.6230137128323037`}}]},
           StatusArea[#, 0.4]& ,
           TagBoxNote->"0.4"],
          StyleBox["0.4`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.4, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.2, 0.}, {-0.6, 0.4, 0.}, {-0.6,
                  0.4, 0.35}, {-0.6, 0.2, 0.35}, {-0.4, 0.2, 0.}, {-0.4, 0.4, 
                 0.}, {-0.4, 0.4, 0.35}, {-0.4, 0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{113.47924679417483`, 
              138.47789091494252`}, {-57.88169081818323, \
-12.59631940022794}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.4, 0.}, {-0.6, 0.6, 0.}, {-0.6,
                  0.6, 0.25}, {-0.6, 0.4, 0.25}, {-0.4, 0.4, 0.}, {-0.4, 0.6, 
                 0.}, {-0.4, 0.6, 0.25}, {-0.4, 0.4, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{122.15845579287135`, 
              146.08290142817384`}, {-57.07948578746651, \
-21.247263252042274`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.6, 0.}, {-0.6, 0.8, 0.}, {-0.6,
                  0.8, 0.375}, {-0.6, 0.6, 0.375}, {-0.4, 0.6, 0.}, {-0.4, 
                 0.8, 0.}, {-0.4, 0.8, 0.375}, {-0.4, 0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{129.8923967234067, 
              153.51370581125246`}, {-75.69308692552583, \
-29.592909799244097`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.8, 0.}, {-0.6, 1., 0.}, {-0.6, 
                 1., 0.125}, {-0.6, 0.8, 0.125}, {-0.4, 0.8, 0.}, {-0.4, 1., 
                 0.}, {-0.4, 1., 0.125}, {-0.4, 0.8, 0.125}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{138.0012193978979, 
              160.63414154057128`}, {-61.78321567979809, \
-37.64914002067704}}]},
           StatusArea[#, 0.125]& ,
           TagBoxNote->"0.125"],
          StyleBox["0.125`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.125, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -1., 0.}, {-0.4, -0.8, 
                 0.}, {-0.4, -0.8, 0.2}, {-0.4, -1., 0.2}, {-0.2, -1., 
                 0.}, {-0.2, -0.8, 0.}, {-0.2, -0.8, 0.2}, {-0.2, -1., 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{72.6350996212828, 101.41515563082582`}, {
              16.19552872345846, 52.86500840605868}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.8, 0.}, {-0.4, -0.6, 
                 0.}, {-0.4, -0.6, 0.3}, {-0.4, -0.8, 0.3}, {-0.2, -0.8, 
                 0.}, {-0.2, -0.6, 0.}, {-0.2, -0.6, 0.3}, {-0.2, -0.8, 
                 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{82.0217739102294, 
              110.75192446933653`}, {-3.2665439106359884`, 
              41.729763648004635`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.6, 0.}, {-0.4, -0.4, 
                 0.}, {-0.4, -0.4, 0.275}, {-0.4, -0.6, 0.275}, {-0.2, -0.6, 
                 0.}, {-0.2, -0.4, 0.}, {-0.2, -0.4, 0.275}, {-0.2, -0.6, 
                 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{92.12137736502079, 
              119.72347923492902`}, {-10.864247736624861`, 
              31.03877016920137}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.4, 0.}, {-0.4, -0.2, 
                 0.}, {-0.4, -0.2, 0.225}, {-0.4, -0.4, 0.225}, {-0.2, -0.4, 
                 0.}, {-0.2, -0.2, 0.}, {-0.2, -0.2, 0.225}, {-0.2, -0.4, 
                 0.225}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{101.89824493893573`, 
              128.35083726962387`}, {-15.88362695533246, 20.76596218256016}}]},
           StatusArea[#, 0.225]& ,
           TagBoxNote->"0.225"],
          StyleBox["0.225`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.225, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.2, 0.}, {-0.4, 0., 0.}, {-0.4,
                  0., 0.35}, {-0.4, -0.2, 0.35}, {-0.2, -0.2, 0.}, {-0.2, 0., 
                 0.}, {-0.2, 0., 0.35}, {-0.2, -0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{110.40853427161043`, 
              136.65343359373446`}, {-36.29112292570106, 
              10.887273946455608`}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0., 0.}, {-0.4, 0.2, 0.}, {-0.4, 
                 0.2, 0.325}, {-0.4, 0., 0.325}, {-0.2, 0., 0.}, {-0.2, 0.2, 
                 0.}, {-0.2, 0.2, 0.325}, {-0.2, 0., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{119.3508172814552, 
              144.64926706422034`}, {-42.78082252967279, 
              1.3804515442464123`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.2, 0.}, {-0.4, 0.4, 0.}, {-0.4,
                  0.4, 0.25}, {-0.4, 0.2, 0.25}, {-0.2, 0.2, 0.}, {-0.2, 0.4, 
                 0.}, {-0.2, 0.4, 0.25}, {-0.2, 0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{128.02322040830302`, 
              152.387297897052}, {-44.58610135843382, -7.775114473193625}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.4, 0.}, {-0.4, 0.6, 0.}, {-0.4,
                  0.6, 0.55}, {-0.4, 0.4, 0.55}, {-0.2, 0.4, 0.}, {-0.2, 0.6, 
                 0.}, {-0.2, 0.6, 0.55}, {-0.2, 0.4, 0.55}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{135.6906553831036, 
              160.31473250113544`}, {-79.7240698624661, \
-16.598538230946062`}}]},
           StatusArea[#, 0.55]& ,
           TagBoxNote->"0.55"],
          StyleBox["0.55`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.55, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.6, 0.}, {-0.4, 0.8, 0.}, {-0.4,
                  0.8, 0.375}, {-0.4, 0.6, 0.375}, {-0.2, 0.6, 0.}, {-0.2, 
                 0.8, 0.}, {-0.2, 0.8, 0.375}, {-0.2, 0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{143.87549556818328`, 
              167.59349547585032`}, {-71.58421920979863, \
-25.107571730981334`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.8, 0.}, {-0.4, 1., 0.}, {-0.4, 
                 1., 0.25}, {-0.4, 0.8, 0.25}, {-0.2, 0.8, 0.}, {-0.2, 1., 
                 0.}, {-0.2, 1., 0.25}, {-0.2, 0.8, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{151.42417992403247`, 
              174.47320055792215`}, {-68.27465206957213, -33.3187240639415}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -1., 0.}, {-0.2, -0.8, 
                 0.}, {-0.2, -0.8, 0.3}, {-0.2, -1., 0.3}, {0., -1., 0.}, {
                 0., -0.8, 0.}, {0., -0.8, 0.3}, {0., -1., 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{87.41656970083085, 116.7473567379609}, {
              12.782525959024731`, 59.094350512217815`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.8, 0.}, {-0.2, -0.6, 
                 0.}, {-0.2, -0.6, 0.325}, {-0.2, -0.8, 0.325}, {0., -0.8, 
                 0.}, {0., -0.6, 0.}, {0., -0.6, 0.325}, {0., -0.8, 0.325}}, {
                 
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{97.39169532417337, 
              125.87696282386689`}, {-0.06361760121998827, 
              47.70671717604027}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.6, 0.}, {-0.2, -0.4, 
                 0.}, {-0.2, -0.4, 0.425}, {-0.2, -0.6, 0.425}, {0., -0.6, 
                 0.}, {0., -0.4, 0.}, {0., -0.4, 0.425}, {0., -0.6, 0.425}}, {
                 
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{106.62076421754342`, 
              134.64563302632212`}, {-19.500927791925946`, 
              36.77836890535015}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.4, 0.}, {-0.2, -0.2, 
                 0.}, {-0.2, -0.2, 0.275}, {-0.2, -0.4, 0.275}, {0., -0.4, 
                 0.}, {0., -0.2, 0.}, {0., -0.2, 0.275}, {0., -0.4, 0.275}}, {
                 
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{116.69136569580658`, 
              143.07435665941415`}, {-15.266751525929834`, 
              26.282069180963482`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.2, 0.}, {-0.2, 0., 0.}, {-0.2,
                  0., 0.35}, {-0.2, -0.2, 0.35}, {0., -0.2, 0.}, {0., 0., 
                 0.}, {0., 0., 0.35}, {0., -0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{125.40808846673634`, 
              151.18252654323715`}, {-31.41054605661759, 16.19269331161184}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0., 0.}, {-0.2, 0.2, 0.}, {-0.2, 
                 0.2, 0.375}, {-0.2, 0., 0.375}, {0., 0., 0.}, {0., 0.2, 
                 0.}, {0., 0.2, 0.375}, {0., 0., 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{134.02141787039346`, 
              159.3246020755385}, {-42.614432286161275`, 6.4870276460219}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.2, 0.}, {-0.2, 0.4, 0.}, {-0.2,
                  0.4, 0.325}, {-0.2, 0.2, 0.325}, {0., 0.2, 0.}, {0., 0.4, 
                 0.}, {0., 0.4, 0.325}, {0., 0.2, 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{142.4090737174967, 
              167.06619481630807`}, {-46.68475575045166, \
-2.8564087339302944`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.4, 0.}, {-0.2, 0.6, 0.}, {-0.2,
                  0.6, 0.375}, {-0.2, 0.4, 0.375}, {0., 0.4, 0.}, {0., 0.6, 
                 0.}, {0., 0.6, 0.375}, {0., 0.4, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{150.3550306262032, 
              174.69346227440138`}, {-59.44072340593685, \
-11.857522721785443`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.6, 0.}, {-0.2, 0.8, 0.}, {-0.2,
                  0.8, 0.225}, {-0.2, 0.6, 0.225}, {0., 0.6, 0.}, {0., 0.8, 
                 0.}, {0., 0.8, 0.225}, {0., 0.6, 0.225}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{157.78622764138143`, 
              181.46058187674356`}, {-54.258500415900045`, \
-20.534788764706775`}}]},
           StatusArea[#, 0.225]& ,
           TagBoxNote->"0.225"],
          StyleBox["0.225`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.225, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.8, 0.}, {-0.2, 1., 0.}, {-0.2, 
                 1., 0.2}, {-0.2, 0.8, 0.2}, {0., 0.8, 0.}, {0., 1., 0.}, {0.,
                  1., 0.2}, {0., 0.8, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{164.95727599929597`, 
              188.260053980099}, {-59.907910488108385`, -28.90537543035029}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -1., 0.}, {0., -0.8, 0.}, {
                 0., -0.8, 0.325}, {0., -1., 0.325}, {0.2, -1., 0.}, {
                 0.2, -0.8, 0.}, {0.2, -0.8, 0.325}, {0.2, -1., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{103.38686003993077`, 132.4253903351305}, {
              16.328393319181735`, 65.46718798379}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.8, 0.}, {0., -0.6, 0.}, {
                 0., -0.6, 0.175}, {0., -0.8, 0.175}, {0.2, -0.8, 0.}, {
                 0.2, -0.6, 0.}, {0.2, -0.6, 0.175}, {0.2, -0.8, 0.175}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{113.99892301598092`, 141.33620509277694`}, {
              19.34107274210789, 53.81848661908886}}]},
           StatusArea[#, 0.175]& ,
           TagBoxNote->"0.175"],
          StyleBox["0.175`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.175, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.6, 0.}, {0., -0.4, 0.}, {
                 0., -0.4, 0.3}, {0., -0.6, 0.3}, {0.2, -0.6, 0.}, {0.2, -0.4,
                  0.}, {0.2, -0.4, 0.3}, {0.2, -0.6, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{122.93925680552181`, 
              149.8909195081991}, {-2.420960565730212, 42.644790220035745`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.4, 0.}, {0., -0.2, 0.}, {
                 0., -0.2, 0.425}, {0., -0.4, 0.425}, {0.2, -0.4, 0.}, {
                 0.2, -0.2, 0.}, {0.2, -0.2, 0.425}, {0.2, -0.4, 0.425}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{131.78225365792213`, 
              158.46874997013217`}, {-23.95088966213126, 
              31.917625055199927`}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.2, 0.}, {0., 0., 0.}, {0., 0., 
                 0.25}, {0., -0.2, 0.25}, {0.2, -0.2, 0.}, {0.2, 0., 0.}, {
                 0.2, 0., 0.25}, {0.2, -0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{140.83544901952314`, 
              166.44720616295706`}, {-17.338042505286708`, 
              21.61074858606341}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0., 0.}, {0., 0.2, 0.}, {0., 0.2, 
                 0.325}, {0., 0., 0.325}, {0.2, 0., 0.}, {0.2, 0.2, 0.}, {0.2,
                  0.2, 0.325}, {0.2, 0., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{149.18252654323715`, 
              174.46223657745855`}, {-33.27023113495568, 
              11.699935121537173`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.2, 0.}, {0., 0.4, 0.}, {0., 0.4, 
                 0.3}, {0., 0.2, 0.3}, {0.2, 0.2, 0.}, {0.2, 0.4, 0.}, {0.2, 
                 0.4, 0.3}, {0.2, 0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{156.9880879624744, 
              181.95287237848794`}, {-39.81771819913014, 2.162785716664189}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.4, 0.}, {0., 0.6, 0.}, {0., 0.6, 
                 0.35}, {0., 0.4, 0.35}, {0.2, 0.4, 0.}, {0.2, 0.6, 0.}, {0.2,
                  0.6, 0.35}, {0.2, 0.4, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{164.5076712524629, 
              189.43888302088726`}, {-52.75805548063171, \
-7.021440824543504}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.6, 0.}, {0., 0.8, 0.}, {0., 0.8, 
                 0.3}, {0., 0.6, 0.3}, {0.2, 0.6, 0.}, {0.2, 0.8, 0.}, {0.2, 
                 0.8, 0.3}, {0.2, 0.6, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{171.7567100744547, 
              196.23273036866468`}, {-56.46945139717381, \
-15.871978525837392`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.8, 0.}, {0., 1., 0.}, {0., 1., 
                 0.3}, {0., 0.8, 0.3}, {0.2, 0.8, 0.}, {0.2, 1., 0.}, {0.2, 
                 1., 0.3}, {0.2, 0.8, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{178.74954715032118`, 
              202.98514477658767`}, {-64.34782435007826, \
-24.406688695672827`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -1., 0.}, {0.2, -0.8, 0.}, {
                 0.2, -0.8, 0.25}, {0.2, -1., 0.25}, {0.4, -1., 0.}, {
                 0.4, -0.8, 0.}, {0.4, -0.8, 0.25}, {0.4, -1., 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{120.2270034462626, 148.46109076467837`}, {
              29.365561549853524`, 71.98853680229632}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.8, 0.}, {0.2, -0.6, 0.}, {
                 0.2, -0.6, 0.275}, {0.2, -0.8, 0.275}, {0.4, -0.8, 0.}, {
                 0.4, -0.6, 0.}, {0.4, -0.6, 0.275}, {0.4, -0.8, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{129.76912437853952`, 157.34728182493075`}, {
              16.007788457621864`, 60.06968536003844}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.6, 0.}, {0.2, -0.4, 0.}, {
                 0.2, -0.4, 0.375}, {0.2, -0.6, 0.375}, {0.4, -0.6, 0.}, {
                 0.4, -0.4, 0.}, {0.4, -0.4, 0.375}, {0.4, -0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{138.87054088066932`, 
              166.13910173852102`}, {-3.8874641171524047`, 
              48.64228449256043}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.4, 0.}, {0.2, -0.2, 0.}, {
                 0.2, -0.2, 0.275}, {0.2, -0.4, 0.275}, {0.4, -0.4, 0.}, {
                 0.4, -0.2, 0.}, {0.4, -0.2, 0.275}, {0.4, -0.4, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{147.84759585794023`, 
              174.20975654287952`}, {-4.720514180024068, 37.6765521935312}}]},
           
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.2, 0.}, {0.2, 0., 0.}, {0.2, 
                 0., 0.3}, {0.2, -0.2, 0.3}, {0.4, -0.2, 0.}, {0.4, 0., 0.}, {
                 0.4, 0., 0.3}, {0.4, -0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{156.11046151707302`, 
              182.22580197624671`}, {-16.742546895543413`, 
              27.1450652040715}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0., 0.}, {0.2, 0.2, 0.}, {0.2, 
                 0.2, 0.275}, {0.2, 0., 0.275}, {0.4, 0., 0.}, {0.4, 0.2, 
                 0.}, {0.4, 0.2, 0.275}, {0.4, 0., 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{164.014150656816, 
              189.74657998814138`}, {-23.836423394614727`, 
              17.022530029408053`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.2, 0.}, {0.2, 0.4, 0.}, {0.2, 
                 0.4, 0.3}, {0.2, 0.2, 0.3}, {0.4, 0.2, 0.}, {0.4, 0.4, 0.}, {
                 0.4, 0.4, 0.3}, {0.4, 0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{171.61984966882991`, 
              197.19674160619792`}, {-35.08681431706735, 7.285580122669572}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.4, 0.}, {0.2, 0.6, 0.}, {0.2, 
                 0.6, 0.35}, {0.2, 0.4, 0.35}, {0.4, 0.4, 0.}, {0.4, 0.6, 
                 0.}, {0.4, 0.6, 0.35}, {0.4, 0.4, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{178.94409927059078`, 
              204.5552529401355}, {-48.22243076369902, -2.08740418760749}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.6, 0.}, {0.2, 0.8, 0.}, {0.2, 
                 0.8, 0.25}, {0.2, 0.6, 0.25}, {0.4, 0.6, 0.}, {0.4, 0.8, 
                 0.}, {0.4, 0.8, 0.25}, {0.4, 0.6, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{186.00223823778873`, 
              210.72596631652672`}, {-47.68461343798316, \
-11.116455947217602`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.8, 0.}, {0.2, 1., 0.}, {0.2, 1.,
                  0.3}, {0.2, 0.8, 0.3}, {0.4, 0.8, 0.}, {0.4, 1., 0.}, {0.4, 
                 1., 0.3}, {0.4, 0.8, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{192.8085106312332, 
              217.60169741446302`}, {-60.11416015846943, \
-19.82016450322142}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -1., 0.}, {0.4, -0.8, 0.}, {
                 0.4, -0.8, 0.075}, {0.4, -1., 0.075}, {0.6, -1., 0.}, {
                 0.6, -0.8, 0.}, {0.6, -0.8, 0.075}, {0.6, -1., 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{137.29481256056454`, 164.99714133526908`}, {
              51.4630253634807, 78.66364948827437}}]},
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.8, 0.}, {0.4, -0.6, 0.}, {
                 0.4, -0.6, 0.375}, {0.4, -0.8, 0.375}, {0.6, -0.8, 0.}, {
                 0.6, -0.6, 0.}, {0.6, -0.6, 0.375}, {0.6, -0.8, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{146.32800361386896`, 174.37352201993048`}, {
              12.511405697181985`, 66.46513970296331}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.6, 0.}, {0.4, -0.4, 0.}, {
                 0.4, -0.4, 0.425}, {0.4, -0.6, 0.425}, {0.6, -0.6, 0.}, {
                 0.6, -0.4, 0.}, {0.6, -0.4, 0.425}, {0.6, -0.6, 0.425}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{155.1408519109758, 
              183.02631040586644`}, {-3.0107905062706664`, 
              54.77529417974667}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.4, 0.}, {0.4, -0.2, 0.}, {
                 0.4, -0.2, 0.275}, {0.4, -0.4, 0.275}, {0.6, -0.4, 0.}, {
                 0.6, -0.2, 0.}, {0.6, -0.2, 0.275}, {0.6, -0.4, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{163.46994951187395`, 190.43721019882662`}, {
              0.7279711019703825, 43.56294661940501}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.2, 0.}, {0.4, 0., 0.}, {0.4, 
                 0., 0.475}, {0.4, -0.2, 0.475}, {0.6, -0.2, 0.}, {0.6, 0., 
                 0.}, {0.6, 0., 0.475}, {0.6, -0.2, 0.475}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{171.46921309279907`, 
              199.27079523569176`}, {-27.892545002031724`, 
              32.79942587742992}}]},
           StatusArea[#, 0.475]& ,
           TagBoxNote->"0.475"],
          StyleBox["0.475`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.475, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0., 0.}, {0.4, 0.2, 0.}, {0.4, 
                 0.2, 0.3}, {0.4, 0., 0.3}, {0.6, 0., 0.}, {0.6, 0.2, 0.}, {
                 0.6, 0.2, 0.3}, {0.6, 0., 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{179.15785450216129`, 
              205.6563329225925}, {-21.072292350004744`, 
              22.458311162993255`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.2, 0.}, {0.4, 0.4, 0.}, {0.4, 
                 0.4, 0.25}, {0.4, 0.2, 0.25}, {0.6, 0.2, 0.}, {0.6, 0.4, 
                 0.}, {0.6, 0.4, 0.25}, {0.6, 0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{186.55362196180104`, 
              212.41012156501088`}, {-25.771456956209036`, 
              12.51521550434903}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.4, 0.}, {0.4, 0.6, 0.}, {0.4, 
                 0.6, 0.225}, {0.4, 0.4, 0.225}, {0.6, 0.4, 0.}, {0.6, 0.6, 
                 0.}, {0.6, 0.6, 0.225}, {0.6, 0.4, 0.225}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{193.67293684229432`, 
              219.02220143646375`}, {-32.436553179742816`, 
              2.9475937447516998`}}]},
           StatusArea[#, 0.225]& ,
           TagBoxNote->"0.225"],
          StyleBox["0.225`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.225, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.6, 0.}, {0.4, 0.8, 0.}, {0.4, 
                 0.8, 0.375}, {0.4, 0.6, 0.375}, {0.6, 0.6, 0.}, {0.6, 0.8, 
                 0.}, {0.6, 0.8, 0.375}, {0.6, 0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{200.53101538174684`, 
              226.8054239286929}, {-54.31314298627349, -6.265428113176526}}]},
           
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.8, 0.}, {0.4, 1., 0.}, {0.4, 1.,
                  0.2}, {0.4, 0.8, 0.2}, {0.6, 0.8, 0.}, {0.6, 1., 0.}, {0.6, 
                 1., 0.2}, {0.6, 0.8, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{207.14197724693355`, 
              231.63373234214006`}, {-47.08764926921975, \
-15.143204933538286`}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.8, 0.}, {0.6, -0.6, 0.}, {
                 0.6, -0.6, 0.125}, {0.6, -0.8, 0.125}, {0.8, -0.8, 0.}, {
                 0.8, -0.6, 0.}, {0.8, -0.6, 0.125}, {0.8, -0.8, 0.125}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{162.86683855864715`, 190.44498009084813`}, {
              41.71938943567814, 73.00990130018387}}]},
           StatusArea[#, 0.125]& ,
           TagBoxNote->"0.125"],
          StyleBox["0.125`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.125, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.6, 0.}, {0.6, -0.4, 0.}, {
                 0.6, -0.4, 0.35}, {0.6, -0.6, 0.35}, {0.8, -0.6, 0.}, {
                 0.8, -0.4, 0.}, {0.8, -0.4, 0.35}, {0.8, -0.6, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{171.30261007765222`, 199.74736970753008`}, {
              9.895061906297236, 61.04846479006077}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.4, 0.}, {0.6, -0.2, 0.}, {
                 0.6, -0.2, 0.25}, {0.6, -0.4, 0.25}, {0.8, -0.4, 0.}, {
                 0.8, -0.2, 0.}, {0.8, -0.2, 0.25}, {0.8, -0.4, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{179.39380358597242`, 206.86060060469697`}, {
              8.59378583947965, 49.581087707018824`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.2, 0.}, {0.6, 0., 0.}, {0.6, 
                 0., 0.3}, {0.6, -0.2, 0.3}, {0.8, -0.2, 0.}, {0.8, 0., 0.}, {
                 0.8, 0., 0.3}, {0.8, -0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{187.16110911101492`, 
              214.65215454341117`}, {-6.179213876596009, 
              38.577779217686825`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0., 0.}, {0.6, 0.2, 0.}, {0.6, 
                 0.2, 0.525}, {0.6, 0., 0.525}, {0.8, 0., 0.}, {0.8, 0.2, 
                 0.}, {0.8, 0.2, 0.525}, {0.8, 0., 0.525}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{194.6235927520139, 
              223.7407479968222}, {-37.04521050232333, 28.010927720163437`}}]},
           StatusArea[#, 0.525]& ,
           TagBoxNote->"0.525"],
          StyleBox["0.525`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.525, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0.2, 0.}, {0.6, 0.4, 0.}, {0.6, 
                 0.4, 0.375}, {0.6, 0.2, 0.375}, {0.8, 0.2, 0.}, {0.8, 0.4, 
                 0.}, {0.8, 0.4, 0.375}, {0.8, 0.2, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{201.79885293841662`, 
              229.34660134038}, {-32.179226200449946`, 17.855069495982654`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0.4, 0.}, {0.6, 0.6, 0.}, {0.6, 
                 0.6, 0.275}, {0.6, 0.4, 0.275}, {0.8, 0.4, 0.}, {0.8, 0.6, 
                 0.}, {0.8, 0.6, 0.275}, {0.8, 0.4, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{208.70315898625356`, 
              235.02183383597307`}, {-32.106047244994585`, 
              8.086683841678223}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0.6, 0.}, {0.6, 0.8, 0.}, {0.6, 
                 0.8, 0.1}, {0.6, 0.6, 0.1}, {0.8, 0.6, 0.}, {0.8, 0.8, 0.}, {
                 0.8, 0.8, 0.1}, {0.8, 0.6, 0.1}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{215.35157424877596`, 
              239.62506772380294`}, {-25.584713721940744`, \
-1.3159887897940337`}}]},
           StatusArea[#, 0.1]& ,
           TagBoxNote->"0.1"],
          StyleBox["0.1`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.1, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, -0.6, 0.}, {0.8, -0.4, 0.}, {
                 0.8, -0.4, 0.075}, {0.8, -0.6, 0.075}, {1., -0.6, 0.}, {
                 1., -0.4, 0.}, {1., -0.4, 0.075}, {1., -0.6, 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{187.8337214753765, 214.91242645653745`}, {
              41.003760748043526`, 67.46665661882554}}]},
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, -0.4, 0.}, {0.8, -0.2, 0.}, {
                 0.8, -0.2, 0.2}, {0.8, -0.4, 0.2}, {1., -0.4, 0.}, {1., -0.2,
                  0.}, {1., -0.2, 0.2}, {1., -0.4, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{195.67405827894143`, 223.3322636566134}, {
              18.863964605909167`, 55.73544855661477}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, -0.2, 0.}, {0.8, 0., 0.}, {0.8, 
                 0., 0.25}, {0.8, -0.2, 0.25}, {1., -0.2, 0.}, {1., 0., 0.}, {
                 1., 0., 0.25}, {1., -0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{203.1971076986264, 230.9236975608728}, {
              3.8686783512454497`, 44.484248931876515`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, 0., 0.}, {0.8, 0.2, 0.}, {0.8, 
                 0.2, 0.3}, {0.8, 0., 0.3}, {1., 0., 0.}, {1., 0.2, 0.}, {1., 
                 0.2, 0.3}, {1., 0., 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{210.4217480059861, 
              238.2972573966541}, {-10.700940335988264`, 33.68418747299951}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, 0.2, 0.}, {0.8, 0.4, 0.}, {0.8, 
                 0.4, 0.175}, {0.8, 0.2, 0.175}, {1., 0.2, 0.}, {1., 0.4, 
                 0.}, {1., 0.4, 0.175}, {1., 0.2, 0.175}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{217.36538894760844`, 
              243.54567836776857`}, {-9.07678724737184, 
              23.308663620643294`}}]},
           StatusArea[#, 0.175]& ,
           TagBoxNote->"0.175"],
          StyleBox["0.175`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.175, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, 0.4, 0.}, {0.8, 0.6, 0.}, {0.8, 
                 0.6, 0.075}, {0.8, 0.4, 0.075}, {1., 0.4, 0.}, {1., 0.6, 
                 0.}, {1., 0.6, 0.075}, {1., 0.4, 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{224.04411181529161`, 
              248.72099044096663`}, {-9.698122083265261, 
              13.333127777893296`}}]},
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ]},
       FontColor->GrayLevel[0.4]]}, {}, {}},
    FontColor->GrayLevel[0.4]]},
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{280., 223.},
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1., 1.}, {-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.271810960030505, -2.347081411018176, 2.0793522385587324`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 
   3.814982451986308*^9},ExpressionUUID->"cbfa1268-3959-43c2-9fe9-\
7ba6a2ee2fb6"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
IVdN483nnGw8cP4VKS2cCkFjhpE1pRT8H5+ZrfQ=
      "]]}, {}}, {}, {}, {}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{236., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.989184959773049, 0.9733472638634241}, {-0.9758529159666184, 
   0.9875084279117752}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 
   3.814982452062397*^9},ExpressionUUID->"260b3567-3756-45c4-8840-\
be76ea7ffea7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd3XuskHUdx/Ezac7IdLoUM1vqbCo575qiKKFOwSxvQ5v32wQNb2XOTa2F
eTtmmmXmXYl0ObXpMi+EGHhp5XVLQAtvqeFAIUIJQdLt8/qw8Rd77/D7nu9+
e/3x7Nmenc1OPPPQU9YYGBg4cs2BgU//vXfv+294YNrA9PPunzTknksHph9x
wMQ7Tn1q5WP60PV+sO749T5uH/TyRReMP2p5+4DJl84bP2VZe5/vXj1uwvtL
23vt8usZE3b/sL37x7dvf9qkJe2dn/rdzac9s7i93dUPDD192H/aw78z9bzT
T1jYPnDfK/4ya9yC9uiXbpw8+915q+aPv+fCORe93d5+2bQjXl7/zVX7b3T7
SQ8e9Gp7xJ4zhz107uz2lse/89eHb36hvdVaGwycN/hEe+ioibfPm3hf+8rb
zv/TWofeuXfvY9ONnrro4hntr88ff9/IG55vj316v4/2OGdW+5jfbL7/iLFz
27tN/+GYTa55o/2Nbc8480sr3lp1/qajf7nxhHntw4Ye+OgX/z6/ve3Um866
ctOF7Z0WXzvkypcWrZo/fPC6wSsXt0ee8OOtB0cvaY++/vypVyz9oL3/c2d9
+4p7l7a/ueb4Ny4/eVn7kJHHnXv5xsvb474/bq3Ln1/RPurug2687JKVq/Y7
e/Nh+94yMErzN/bNB9ba5OiVj/Gn+dP8af40f5o/zZ/mT/On+dP8af46P/40
f90//jR/mj/Nn+ZP89f7iD/Nn+ZP86f50/z1fPxp/jR/mr/Ojz/NX+8z/jR/
mj/Nn+ZP89f94k/z99sTjh86964V9af50/xp/jR/mj/Nn+ZP86f50/xp/jo/
/jR/3T/+NH+aP82f5k/z1/uIP82f5k/zp/nT/PV8/Gn+NH+av86PP81f7zP+
NH+aP82f5k/z1/3iT/O3xmtrr33bko/qT/On+dP8af40f5o/zZ/mT/On+dP8
dX78af66f/xp/jR/mj/Nn+av9xF/mj/Nn+ZP86f56/n40/xp/jR/nR9/mr/e
Z/xp/jR/mj/Nn+av+8Wf5u/YYx/+/Imjl9Wf5k/zp/nT/Gn+NH+aP82f5k/z
p/nr/PjT/HX/+NP8af40f5o/zV/vI/40f5o/zZ/mT/PX8/Gn+dP8af46P/40
f73P+NP8af40f5o/zV/3iz/N3yP/OGXdLX62tP40f5o/zZ/mT/On+dP8af40
f5o/zV/nx5/mr/vHn+ZP86f50/xp/nof8af50/xp/jR/mr+ejz/Nn+ZP89f5
8af5633Gn+ZP86f50/xp/rpf/Gn+Njxq/fXefuWD+tP8af40f5o/zZ/mT/On
+dP8af40f50ff5q/7h9/mj/Nn+ZP86f5633En+ZP86f50/xp/no+/jR/mj/N
X+fHn+av9xl/mj/Nn+ZP86f5637xp/k7Z8609e/aakn9af40f5o/zZ/mT/On
+dP8af40f5q/zo8/zV/3jz/Nn+ZP86f50/z1PuJP86f50/xp/jR/PR9/mj/N
n+av8+NP89f7jD/Nn+ZP86f50/x1v/jT/D17xOlfOO3cxfWn+dP8af40f5o/
zZ/mT/On+dP8af46P/40f90//jR/mj/Nn+ZP89f7iD/Nn+ZP86f50/z1fPxp
/jR/mr/Ojz/NX+8z/jR/mj/Nn+ZP89f94k/zN/ylYRtu8+dF9af50/xp/jR/
mj/Nn+ZP86f50/xp/jo//jR/3T/+NH+aP82f5k/z1/uIP82f5k/zp/nT/PV8
/Gn+NH+av86PP81f7zP+NH+aP82f5k/z1/3iT/N3yeEzh723zsL60/xp/jR/
mj/Nn+ZP86f50/xp/jR/nR9/mr/uH3+aP82f5k/zp/nrfcSf5k/zp/nT/Gn+
ej7+NH+aP81f58ef5q/3GX+aP82f5k/zp/nrfvGn+Zs55fUdj//j/PrT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+dH3+av+4ff5o/zZ/mT/On+et9xJ/mT/On+dP8
af56Pv40f5o/zV/nx5/mr/cZf5o/zZ/mT/On+et+8af5u+COEbv+6+B59af5
0/xp/jR/mj/Nn+ZP86f50/xp/jo//jR/3T/+NH+aP82f5k/z1/uIP82f5k/z
p/nT/PV8/Gn+NH+av86PP81f7zP+NH+aP82f5k/z1/3iT/O3863X7j7+3bfq
T/On+dP8af40f5o/zZ/mT/On+dP8dX78af66f/xp/jR/mj/Nn+av9xF/mj/N
n+ZP86f56/n40/xp/jR/nR9/mr/eZ/xp/jR/mj/Nn+av+8Wf5m/+jfP3nD/p
jfrT/Gn+NH+aP82f5k/zp/nT/Gn+NH+dH3+av+4ff5o/zZ/mT/On+et9xJ/m
T/On+dP8af56Pv40f5o/zV/nx5/mr/cZf5o/zZ/mT/On+et+8af5O2CHwR+9
NmJu/Wn+NH+aP82f5k/zp/nT/Gn+NH+av86PP81f948/zZ/mT/On+dP89T7i
T/On+dP8af40fz0ff5o/zZ/mr/PjT/PX+4w/zZ/mT/On+dP8db/40/w9NHzk
pf+eOKv+NH+aP82f5k/zp/nT/Gn+NH+aP81f58ef5q/7x5/mT/On+dP8af56
H/Gn+dP8af40f5q/no8/zZ/mT/PX+fGn+et9xp/mT/On+dP8af66X/xp/rba
4v2fLrzt+frT/Gn+NH+aP82f5k/zp/nT/Gn+NH+dH3+av+4ff5o/zZ/mT/On
+et9xJ/mT/On+dP8af56Pv40f5o/zV/nx5/mr/cZf5o/zZ/mT/On+et+8af5
22GP0VsvunNG/Wn+NH+aP82f5k/zp/nT/Gn+NH+av86PP81f948/zZ/mT/On
+dP89T7iT/On+dP8af40fz0ff5o/zZ/mr/PjT/PX+4w/zZ/mT/On+dP8db/4
033+e+j6lz+z212rnv/Sff5L9/kv3ee/dJ//0n3+S/f5L93nv3Sf/9J9/kv3
+S/d5z/zPf+l+/xnf89/6T7/pfv8l+7zX7rPf+k+/7kPz3/pPv+l+/yX7vNf
us9/6T7/Oe/5L93nv3Sf/9J9/jPf81+6z3/u0/Nfus9/6T7/pfv8l+7zX7rP
f/bz/Jfu+5cLZr3/yHb37t33L+m+f0n3/Uu671/Sff+S7vuXdN+/pPv+Jd33
L+m+f0n3/Uu671/M9/4l3fcv9vf+Jd33L+m+f0n3/Uu671/Sff/iPrx/Sff9
S7rvX9J9/5Lu+5d037847/1Luu9f0n3/ku77F/O9f0n3/Yv79P4l3fcv6b5/
Sff9S7rvX9J9/2I/71/S/G0z/5p75371ifrT/Gn+NH+aP82f5k/zp/nT/Gn+
NH+dH3+av+4ff5o/zZ/mT/On+et9xJ/mT/On+dP8af56Pv40f5o/zV/nx5/m
r/cZf5o/zZ/mT/On+et+8af7/cfy6w5+57gX6k/3+490v/9I9/uPdL//SPf7
j3S//0j3+490v/9I9/uPdL//SPf7D/N9/5Hu9x/29/1Hut9/pPv9R7rff6T7
/Ue633+4D99/pPv9R7rff6T7/Ue633+k+/2H877/SPf7j3S//0j3+w/zff+R
7vcf7tP3H+l+/5Hu9x/pfv+R7vcf6X7/YT/ff6T523XIW2Ne3WZ2/Wn+NH+a
P82f5k/zp/nT/Gn+NH+av86PP81f948/zZ/mT/On+dP89T7iT/On+dP8af40
fz0ff5o/zZ/mr/PjT/PX+4w/zZ/mT/On+dP8db/40/w9+dmd9pn1v7n1p/nT
/Gn+NH+aP82f5k/zp/nT/Gn+Oj/+NH/dP/40f5o/zZ/mT/PX+4g/zZ/mT/On
+dP89Xz8af40f5q/zo8/zV/vM/40f5o/zZ/mT/PX/eJP8/e1y0bdcuqbb9Sf
5k/zp/nT/Gn+NH+aP82f5k/zp/nr/PjT/HX/+NP8af40f5o/zV/vI/40f5o/
zZ/mT/PX8/Gn+dP8af46P/40f73P+NP8af40f5o/zV/3iz/N3/cG37nhzTFv
15/mT/On+dP8af40f5o/zZ/mT/On+ev8+NP8df/40/xp/jR/mj/NX+8j/jR/
mj/Nn+ZP89fz8af50/xp/jo//jR/vc/40/xp/jR/mj/NX/eLP83fo1dd9avj
fj+v/jR/mj/Nn+ZP86f50/xp/jR/mj/NX+fHn+av+8ef5k/zp/nT/Gn+eh/x
p/nT/Gn+NH+av56PP82f5k/z1/nxp/nrfcaf5k/zp/nT/Gn+ul/8af6G/HyX
X7yy4YL60/xp/jR/mj/Nn+ZP86f50/xp/jR/nR9/mr/uH3+aP82f5k/zp/nr
fcSf5k/zp/nT/Gn+ej7+NH+aP81f58ef5q/3GX+aP82f5k/zp/nrfvGn+Zsy
9oyn795rYf1p/jR/mj/Nn+ZP86f50/xp/jR/mr/Ojz/NX/ePP82f5k/zp/nT
/PU+4k/zp/nT/Gn+NH89H3+aP82f5q/z40/z1/uMP82f5k/zp/nT/HW/+NP8
jfnb40/OW7So/jR/mj/Nn+ZP86f50/xp/jR/mj/NX+fHn+av+8ef5k/zp/nT
/Gn+eh/xp/nT/Gn+NH+av56PP82f5k/z1/nxp/nrfcaf5k/zp/nT/Gn+ul/8
af4WHLTBE1tOWVx/mj/Nn+ZP86f50/xp/jR/mj/Nn+av8+NP89f940/zp/nT
/Gn+NH+9j/jT/Gn+NH+aP81fz8ef5k/zp/nr/PjT/PU+40/zp/nT/Gn+NH/d
L/40f9c8N37GKUcuqT/Nn+ZP86f50/xp/jR/mj/Nn+ZP89f58af56/7xp/nT
/Gn+NH+av95H/Gn+NH+aP82f5q/n40/zp/nT/HV+/Gn+ep/xp/nT/Gn+NH+a
v+4Xf5q/XQ6Z+vjkz31Yf5o/zZ/mT/On+dP8af40f5o/zZ/mr/PjT/PX/eNP
86f50/xp/jR/vY/40/xp/jR/mj/NX8/Hn+ZP86f56/z40/z1PuNP86f50/xp
/jR/3S/+NH9zXlx3+uvTltaf5k/zp/nT/Gn+NH+aP82f5k/zp/nr/PjT/HX/
+NP8af40f5o/zV/vI/40f5o/zZ/mT/PX8/Gn+dP8af46P/40f73P+NP8af40
f5o/zV/3iz/N34WHnzTtK+csqz/Nn+ZP86f50/xp/jR/mj/Nn+ZP89f58af5
6/7xp/nT/Gn+NH+av95H/Gn+NH+aP82f5q/n40/zp/nT/HV+/Gn+ep/xp/nT
/Gn+NH+av+4Xf5q/zV56cOoxX11ef5o/zZ/mT/On+dP8af40f5o/zZ/mr/Pj
T/PX/eNP86f50/xp/jR/vY/40/xp/jR/mj/NX8/Hn+ZP86f56/z40/z1PuNP
86f50/xp/jR/3S/+NH9PHDH00Rtnr6g/zZ/mT/On+dP8af40f5o/zZ/mT/PX
+fGn+ev+8af50/xp/jR/mr/eR/xp/jR/mj/Nn+av5+NP86f50/x1fvxp/nqf
8af50/xp/jR/mr/uF3+avwlzjnl4zuDK+tP8af40f5o/zZ/mT/On+dP8af40
f50ff5q/7h9/mj/Nn+ZP86f5633En+ZP86f50/xp/no+/jR/mj/NX+fHn+av
9xl/mj/Nn+ZP86f5637xp/n7yT2zXxm8dWAUf5o/zZ/mT/On+dP8af40f5o/
zZ/mr/PjT/PX/eNP86f50/xp/jR/vY/40/xp/jR/mj/NX8/Hn+ZP86f56/z4
0/z1PuNP86f50/xp/jR/3S/+9IKz//uHnQ4ZmL7Oi+9N+ufGq/4egz5j8sk7
ztx+YJR2Xjv/5Wf2OXrqjgOjnNfOr96r/35/D8LPtZ+vvr95zx552F2LP/27
FaMf3me/T/7ft66YscXFp35yj2k/P2TkOptsMWFglJ9r+65+3u93fvXf77yf
r/73Lcwzf/Xfb97/AflHXNM=
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
+jgdZInmyiEyOMz59voOllkHY/BBL6WLXDuZC56dZbC7cebbmeOgcqGnc4S1
RhelR7nQxzlalmiudPeuRzmvr6+b7zjaWD19XeXaw1zw7OUZ8OvtnO8b9Cs9
CLNjjfG95D8/j2r6OCfKEs2VPjLo67ymNXOefE40Bh/0Uk6Va39zwR59lZPl
d6pzGJ/kupqezgBrjS7K2eVCH+cseaKvcro1PdN5O32nWe+zjLXVN1CuZ5sL
noM9A37nOm/uW4+X7XnGuB/aJGPLhT7OMFmiuXKBDC503kXf+fIZZgw+6KWM
kOvF5oIn+irD5TfCeWdzDCkXejqXWmt0Ua4qF/o4V8oTfRW0V/gcvcJ5b32X
+bYrjfXSN1KuV5kLnmM8o5/vZt7M/cfJEh2Vcebi95xnlQt9nBtliebKdTK4
wXlNa+Ye+dxoDD7opdwq1wnmgif6KjfL71bnZ+qbUC70dG6z1uiiTC4X+jh3
yxN9lTus6V3Oz9U30XrfbWywvtvlOtlc8JzqGfCb5vxU33qtbO8xdoq+8eVC
H2emLNFcuU8G9zsfoe9e+cw0Bh/0UubIdZa54DlbBqONM7/EHNPLhZ7OQ9Ya
XZT55UIfZ54s0Vx51Ls+7hz+6LI87DvmGRujb65c55sLngs8A35POYfT087h
h4YK/z3G71Dxezf8Pg71Rv/k+XKhlfOCXNFfeVYezzuH32LXwQYNlSWyetk5
LF903d3GX7R+6JksLxf6Ne/IDH2VV6wfeiavlwutnDdk+5rralo8L8vvLdc9
YG60VKaab6ksl7lupvFlcnrdvPB7zztRIzRLvrbe6Kl8KCd0UD6WK/or78vj
Q+fw+9R1sEFDZYWsvnAOy89cN8/4Z9YLPRN0TuaY+z35oa+yUobfer+aVs63
cv7adTUtni9k9r3rFpkbLZUF5vtStj+47gXjzNE6QR8D3YyaHgpzGKOv8qs1
Rv/k93KhlfOHbFa5bqnxVdb6L9fBDA2Vf2Tzn3OY/O26N4z/bb3QM0HnpKZf
wxzm6Kugt0K90DNBU6WmlcOcPkNrhXU1LZ7/ZIaGCutgRm60VOgR8rEOtuiv
sA72xNFhqWkM/SzDdfy3V3zolqBnQo3RP0FXpaaVwxw26K+gwwID4sxhiIYK
62CGhgqaKLBBO4U57NFdYR3siTNfIpNf7LN1/XdgmKOvgt4KcXRCuF9NK4c5
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
B9BGDTo=
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1: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
CafJnccVyolvp76qX/Avn/qpcR//l0/VTtlHFhPfK//Oct0/3+tXI90XRzj9
9Pp3/CGip6FPziarkP3MKeY6/tPT+UGn3mcSTqv0O0/+4/TGrWW3/nHaceWT
MJ8NBZ557ReyyPuO0dr4ZRyY2L5izZz+EwrsarddV9pHw7qr1PkzxOdkrz92
eKyH5BQZxzZXko/q2uqsH5N8lGg8b0+oDRW6HSnzpm4SH/JffPdGopu3quZS
W4eoMCpjj69PJfdi7ZfQ+Z2JmjPr0sfeFGDraubX5g4aMm2ifl/uI7zXFfbv
DymEqfbBW5tk6UgLpIbPybKwM9ejQeB+EdrvP9SwdKFjq6RNV4UtC7KBv6cP
pBWDs/zgjMtHOqQ0+fbsi2Mh4FrhZoeOEnCtqR86tagBW8/ybhjvYmH0xEvD
32JliGsMKD11vAGyV5Sdz6qw8Z+7f7jHrnK8vrw1i/KhAQm8H541XmRjxLbD
m8ewAl+EbJfcmW3A/ZOPJRd8YIO6LpD2dmUlXD/tLuLSbISvtcjZ2U42Il+G
nvvypRJb5Ov8l55ohH3MlXvGAhwMZIffO7i4CvS7B/m/+TSib/SmzgkZDjqp
gT+thaqwQvNZFe+1RnxU3PkjgdTTFc9VVX2vxN+Dl3wHyTpjDu4reRZxIHD8
vOqoYiUyL3RTL+9sRJhdxBv1bjbm5I9uCzKrgKkBkxn3twHBHf58JZlsmImG
vpQwLIeVx7DGhY8NcCq/t3SFFxsbWV+cr60sw2MJAc8Y5wYkn2c6rd7Kxh2N
PbobB0ogop3+c0qoAav5ZVR+9rJw+qzQqeTPxZj2+jYn/ZmO3CCFNR6JLNR1
m9jKRxVhN+PF1QniQ5Z8cqluJz7kKn2X3pknhbiXaLz37io67AVNBupXseDH
u+jCnQ8FSA7U4i5n0SAZLtUxOsDE12qXO7GTVLjscs6IeEtDX4BgwNgPJhpL
HtLcjlMRMS/bqYPo+E936YwiouP1PA0rFgxRoDvhsrnWmYYBi70syk2Sa0bO
59MjKBjLVjZfZ0pDjmL+r5ozTIRpFZu5HKVgl9ioq70WDRpMvnMppM+Fcpt2
qBGuswzKRgYIF8Ml2gf4DjFhExwWpkX0zng9S9eTcLTiK20mi3AU9FmoZi/x
4cVSqxZ/JtytaBxX+k6467isOS0ym483GSVr2ITT5zJ5vkcIp3GV36Q3kzyu
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
zJNfglHTVOiPFWydIz7VXX5RMoy3BDp6T3gWh9BgnfaWa/cVJv6Es52lf5Xh
GG3TrRcWdFy+u8hsgMyhlJmf6wK5avjmqSox/Rtxt5L+w3kN4XeM/XxVQh10
MoftHs00Ic765GGrj2SP7X1h1a1Oh3PCb0rR/Racm18Xm2zPwnhe+LKQvlb4
xXBPLotpw+Us8y7jXAZcrkiH7SQcp86p6j+Z64B7+q2tgqc7UDfJE/Psaxfo
MuItf44xcMOi71ZAYzMCF4wPHiU+6Xqore9pKxNCyg9UOalUHKEuDeIWHYLK
drmwpYFsZCmanvbXaEBx103n0dIh6DJrdFmHulFFeRhVR3pajq1dS7bHMMQe
dNsWCPTi/fGSvhdTrVD0LU0tlCQe6uBkPfWoD5LNSVLlbp14Jym2fjJ9BKkD
ci++/+lHo6y17DX5fzm7gOuU8aYtg3jXlXzlYdc/fre7x3y4enAIg+++YO2P
f/xuWpsweoX/7/5QpjAP/ePRIPVQvwXho+ao2f390//OQ8aexNtYD+NL6h25
idF/57NqkRfLp4dwRcbNc9eWf+cPP1gdtdo5hKI/5dr61f++7qKj8YkTMoPY
w9UTnvmFhSvxt0fjkkfgv54qFj7WD/MV70+xxJkkP1/VWUiMYLOFSoVzdB9e
PZdfsNGpEzc3NS2KvzqM149F+kX5ehEVo8U/b6wVOUpbrywoH4J4xHRfxuFu
fBc+0vcurxHsz+UTH5cQrucNJzHD2Ah8bGZpY9iAyVSf9KvL+3G2dvWic2wm
4mpPMWffU/HxQsA3UXoXyl+L5Hc4MCB3d+S80udmvNj1XXv/CANakVIB/sS3
rlpO304264DkhfVFnDxtSM803PItsQ37rXs3ab5gwEdH+cWifXTsKvjicTG+
BV4nLUdY1iyc+O/Tk0epdXj6OLi6e64J5mvagt3es1GaqaLuvq4aP8XOx+aR
OReQOrdYl8w5X/e9rq1jZZg+81afcpSOnY8kdQzlWAhZEHNg21wxHiUJ63sG
0TDBU3Jm0SUmBDZwnuflKMK1hTvYglNUHB29sLj5NwN5k1d8b7wtwPt3QU6L
46nw2z68QOUVA73B8wJ9vxTg3U2H1ZyEX2r2c4Fqwm8G9fopPv4i3MiuEdpL
+L22Kq78HeG3Knm7YCp3CQ5eKb19M5jkfpLKi6rLTKxa4DUkN1lGcrnfsMWc
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
A/Nn7++/T+eP/nEric7/PwqS0wQ=
      "]],
    AspectRatio->1,
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    Method->{"GridLinesInFront" -> True},
    PlotLabel->FormBox["\"StandardDeviation\"", TraditionalForm],
    PlotRange->{{-2.0931160054824067`, 
     2.0772783095727823`}, {-2.0662479662481092`, 2.077903478193266}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd3WlslWUexuEiiihK0BBEiAh1wYVRhCg4JBaURasYBY1OrKNRZGxRKSCE
DIiQ1MEFgaq414AIaEgLSgKiIwcbwwlRqaJ0ItpaW7qgpZxqZuKCaCZ5rj9J
PzW/PHne99zJ9aWf3iH3zJxy33F5eXm398jL+//f5z6+bue1gzoz6/M31FTu
y2X+t7Cz16iCXPSmohGbCnd2RM/OLJk49LhD0Zfnf17XffwP0T+XDZ7b8NjB
6PdbZ57yQbY1elFhZu1LJ7VEj6vsPWbe9Qeij+/z971Tnm6Mzs6uLL60piG6
78ZfuvXPr49+ufTF4Z+v2x89+IpRdz154X+i1/+27+lrKr+IHvbhw/8+Mvyz
6GmnDq2dUbw7uvTFaSPrS6uP7Zk4fsia3NboIe8t2tbrjzXRRSP7bbh117MF
ese8wk2bG9+Jnrr5H782F++MnnTeRRVz7slGj3m5vaDbHXuiX1h626zsW3uj
T6t+9+re59dGP3XkzL63vv5V9AmjFjS/MqguOjP6oTtmTW6IPrJv0EfP9WqM
vnJOzbB3dzdFz+uzeNXXS5ujt1QOP3p0Qmt0rvC76fnHH4z+S1t5zYTq76NL
Hrt6dPHi9ugN+T+tXnZVR/SBzNqTNh85HL3ykou2F9flovkbWVpx8YGOw+FP
86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+Yv9iR/mj/Nn+ZP86f50/xp
/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/wNeKV92wMjOsKf5k/zp/nT
/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP81f7En+NH+aP82f5k/zp/nT/Gn+NH+a
P82f5k/zp/nT/Gn+NH+aP82f5k/zp/nrtmvM+P/ObQ9/mj/Nn+ZP86f50/xp
/jR/mj/Nn+ZP86f50/xp/jR/sSf50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/N
n+ZP86f50/xp/jR/mj/Nn+avLffkZ49s/z78af40f5o/zZ/mT/On+dP8af40
f5o/zZ/mT/On+dP8xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/m
T/On+dP8af40f5q/moH7i3r83hb+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/z
p/nT/Gn+Yk/yp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+
NH+aP83f1okXHlw+tjX8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8
xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5q/
ilnz555R1hz+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+Yk/yp/nT
/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP81f2avZbquz
TeFP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+Yv9iR/mj/Nn+ZP86f5
0/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/zNyPZbfkGvxvCn+dP8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/MXe5I/zZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af6m/HjfgLdvbAh/mj/Nn+ZP86f5
0/xp/jR/mj/Nn+ZP86f50/xp/jR/sSf50/xp/jR/mj/Nn+ZP86f50/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+Zv9l9LJs85ty78af40f5o/zZ/mT/On+dP8
af40f5o/zZ/mT/On+dP8xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5q/sSt7Ti/b+FX40/xp/jR/mj/Nn+ZP86f50/xp/jR/
mj/Nn+ZP86f5iz3Jn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/vVvWL1o1ojb8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On
+dP8xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40
f5q/b8ZMeGH99r3hT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Yk
f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP83XJO
9q6ZS/aEP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+a
P82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zl9vTvbx8RTb8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8xZ7kT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5q/Zf8cW72lYmf40/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f5iz3Jn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/N93wa8vG27aEP82f5k/zp/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+aP82f5k/zN3j5nvM+rFkV/jR/mj/Nn+ZP86f50/xp/jR/
mj/Nn+ZP86f50/xp/mJP8qf50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/mj/N3+KTz3/z+W9XF/Cn+dP8af40f5o/zZ/mT/On+dP8af40
f5o/zZ/mT/MXe5I/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/m
T/On+dP8af56Vr3U+a+pW8Of5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+a
P81f7En+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/z
p/m7/+KVk9YMrA5/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/sSf5
0/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+bvk0en
9nv01N3hT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Ykf5o/zZ/m
T/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8Df+yX3PRHzXh
T/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Ykf5o/zZ/mT/On+dP8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8FfY99LeK+V+EP82f5k/z
p/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zt3DHjeOWddaGP82f5k/zp/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+aP82f5k/zV3X/5gsWlOwPf5o/zZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f7En+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On
+dP8af40f5o/zZ/mr+H00/uUNNWFP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+a
P82f5k/z90T99gXDqhrCn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/N
X+xJ/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f5
e31LyeG1JY3hT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Ykf5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8vf/4wHsH
Dj0Q/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/mJP8qf50/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/N35d3flL7TFNz+NP8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+Ys9yZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f4dGPFJ48urW8Kf50/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP8xd7kj/Nn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/mj/Nn+ZP86f50/xp/nr0vGTHkqKD4U/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+aP82f5i/2JH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+aP82f5k/zp/nT/J1dV3/ZL/1/CH+aP82f5k/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+xJ/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+aP82f5m/0OyvWle5rD3+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+xJ/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+a
P82f5u/mpWPPbCvvCH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+x
J/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5u/y
qvm7Lh2aC3+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+xJ/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5q+6/82LZ5zQ
Gf40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af5iT/Kn+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/PeGNs1oyVbnM3Yfe+3HF
9GPfY9DjTjxa3/BgrkC7r91f2DRt7eTnj3nW7nftru+P74Gkc+286+/3vPZt
I6eWteQy3Xte9t2g13KZtgF9b1i3LlegnZ99dH/5N5/mCpxrv7frfe93v+v7
3Xfe9fsWnhf/33V5v+f9CUDZ558=
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
+jgdZInmyiEyOMz59voOllkHY/BBL6WLXDuZC56dZbC7cebbmeOgcqGnc4S1
RhelR7nQxzlalmiudPeuRzmvr6+b7zjaWD19XeXaw1zw7OUZ8OvtnO8b9Cs9
CLNjjfG95D8/j2r6OCfKEs2VPjLo67ymNXOefE40Bh/0Uk6Va39zwR59lZPl
d6pzGJ/kupqezgBrjS7K2eVCH+cseaKvcro1PdN5O32nWe+zjLXVN1CuZ5sL
noM9A37nOm/uW4+X7XnGuB/aJGPLhT7OMFmiuXKBDC503kXf+fIZZgw+6KWM
kOvF5oIn+irD5TfCeWdzDCkXejqXWmt0Ua4qF/o4V8oTfRW0V/gcvcJ5b32X
+bYrjfXSN1KuV5kLnmM8o5/vZt7M/cfJEh2Vcebi95xnlQt9nBtliebKdTK4
wXlNa+Ye+dxoDD7opdwq1wnmgif6KjfL71bnZ+qbUC70dG6z1uiiTC4X+jh3
yxN9lTus6V3Oz9U30XrfbWywvtvlOtlc8JzqGfCb5vxU33qtbO8xdoq+8eVC
H2emLNFcuU8G9zsfoe9e+cw0Bh/0UubIdZa54DlbBqONM7/EHNPLhZ7OQ9Ya
XZT55UIfZ54s0Vx51Ls+7hz+6LI87DvmGRujb65c55sLngs8A35POYfT087h
h4YK/z3G71Dxezf8Pg71Rv/k+XKhlfOCXNFfeVYezzuH32LXwQYNlSWyetk5
LF903d3GX7R+6JksLxf6Ne/IDH2VV6wfeiavlwutnDdk+5rralo8L8vvLdc9
YG60VKaab6ksl7lupvFlcnrdvPB7zztRIzRLvrbe6Kl8KCd0UD6WK/or78vj
Q+fw+9R1sEFDZYWsvnAOy89cN8/4Z9YLPRN0TuaY+z35oa+yUobfer+aVs63
cv7adTUtni9k9r3rFpkbLZUF5vtStj+47gXjzNE6QR8D3YyaHgpzGKOv8qs1
Rv/k93KhlfOHbFa5bqnxVdb6L9fBDA2Vf2Tzn3OY/O26N4z/bb3QM0HnpKZf
wxzm6Kugt0K90DNBU6WmlcOcPkNrhXU1LZ7/ZIaGCutgRm60VOgR8rEOtuiv
sA72xNFhqWkM/SzDdfy3V3zolqBnQo3RP0FXpaaVwxw26K+gwwID4sxhiIYK
62CGhgqaKLBBO4U57NFdYR3siTNfIpNf7LN1/XdgmKOvgt4KcXRCuF9NK4c5
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
B9BGDTo=
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1: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
IdHShcC6rxvbUzuxxcmp4Esr6d2z2vdYjrcg6sAejpQuBQtmHzm8tYsOzYOy
20u16zGSHXWLotGGnB0lL1/dYeLvuLqbaEo1xv0OmNQ5tKDjygIjG2EmVl8Y
4LYnlcNWjHdd/k8TZlaYxr9pomPdid62zoO/ELtgb4bvmWYMuXdIPzFmQLLw
4Zr2wN/Qi1Lf82h2K5okvF48iGGiL9D9sY9MI9YVPPb0bmlDcYv3gTfk/bI5
N/756bXj841LthDsQJnVLydrHTpKrBMemhjS0Pr8SpLWrS5cj93WN0+Git+f
HtSq6nWjetY+HWd1Ghak6axp8m+HVspHD5eDLDxkzN24/hEdZrXGCz49IT27
KLFfidaPqdu8uW1zCH+v+xDuNK8en6j6H9f5cfGw8ZrQubPdmDFKPfbkThO6
BKOz/Pu4CEurv6TzoAfJEuL7l3i3otZ0/9835N7pDf9pG/kSzry2meUe2I7r
/zYOCPvy8OIhd1HcYC+aVrjPyvpOgYeYbMG+CB5oX1RTm9b3ITY5QnrDng4s
WG178Hs0D4LCVQtpBn1IDlNZMHa2A1MXJ9cN3+GhooG+xmNrH6QKOk6/v9oB
au7BeQkkB69PlziGHOjDliTpr2JZHXA90H5H8RUPtWNxL5uu9OGRL8vyhlwn
5ky6jU794KFfZlxFgOjRbevgoT0vOrHwUL3F+2Yerv0L/rdtqA+nPobON9Hr
gnZw7bomDtGR6+W0xytJb1hq2qTxqQuzVCPZ56YIt4eVimaas2DrRFkRLkFF
7mDv3joxPjSDtWfLebFQUS/vOKRNRVm6/N1iWT5+Veuo/7nNQt24mNlGZypk
wvbeD1jNR8TpzwWGn1mIVJC6RL9DhcIpx8BEXT6WZTlcDO9iwebqYE7LTyry
6Rkvdmzn41ObcqfODAvWq8xTlrOp2O9qWBtpyseLlPAyF1E2Nnl4N+4YoWJB
RMwlZT0+BC44+LV3s5A0ND8os4KKggPbb3VL85EznqhYFsHCwFerBzsPUfGs
MUakspb4kl7HnghGH5wnDvzMlemCyP0jsubkHk+8tBs1GepFnt2OlZ55FDir
HFpkP8JFycWKIe7XHlwzUNhX/bkVcHjpaOrExTlx6XX6Jt3gGrxcHCLfhPWb
2l4/MevHkeLaF/fSGPD+tTn+x7p6UGWXf+nu60XPOeeZhUp0nLv9imK8twUH
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
+VYS3YhOzFXesYwGoa77Mt/etCO9fzNXurgLxaHXf2gmd4L2bHrMnMyP7oMd
QucNmzE9+lnEJ7kdzbsb0zyPMjBLdfK6kgoFt0NKY2bt70DmmEkCb4CGJRdH
qx4V0BH81iTGey/J2Tv0fzaOnbiuXb2icKYXoh+2KCio0mG8/w7dQbsFE+oN
jwZp/SiSFd7TI8HE7GW5r88srIfxrm3uJ0nODtolFEUJ94AZq706ZLgZi+0M
fxsf4kEqTNRUNbMXw3GUZo4CBXsvdwVd6+LhoZ3Sv7rZLITWPOguc+/Cb7nB
pwU7yH0dNT/EE2Ij7ITnuzweFa15ltcrCC+NBuvcmkV46ZTCiF4b4Xs4irnu
J73s3O2wz3akl40PLPn0kfSyhnf1R7eV8OHRLqj13pSDTq/tGtrBhMeidt37
lEd47Fra57pNHMw6WfG4xo0O298bbM2f8JGd0Z1U0k/6zdd1jp+k6Lh57yBb
N4CPrBTT8LsRZD75T+b4x9HQNxrirUk4LfnGx33ChNPkd058f0c4zc1JxaWR
8LBdbEmW0jQLI3ab35cRHp45aipTTDihIVF5YIxwwoaE/1YliNLAOEVdxSH6
lcxertB0ho2ofbX2PwJoOLVW12c14eTjEhf2s/8QHlhqP1SoRIfIKi3mTQof
JwV44ycDObgLt+3mxf/T77yF5ibyNA5aC/qXS5v+T6eHDRSN3kr2w/RdYtb1
+/9bF/X3rzTv5UB9xknp7T4G2o/X+R+n83HpyXSf6C0ORryR79VMh5TTrb3T
H/gIXGA9S4T0Zdl5wkfiCO+lHbukNUF091fhucHFN2zYyMt92vyTBhfvZa0/
ffio3Kzv4OvNhsucNP35Z2k4b//G7jxZvyKmopzlxYa125IlKmdomNzI2hl+
jY/S1M2+lEfk3rOVYm0yaQi/dfhX2QM+XoX91hMgPrziYfyrxzM05OoYNNmS
89FIn3XQbYKNv1GfNzor03FP6tfTFzF8WO3pb1pXyIZ+8OgGxQ4anvEyRp5Y
8eH7R/nxY2U2NHabF8ZK07C+pzp+PZWHbYzRTf6ihKsndETbvbpQPW7uydzK
g/3tt7uKL/XiuECzVkRiO1g93e4jl7lYdlzD1Ot2N5oqxsdC65tw9tadjYoZ
HAQG/5FO8GUgXprXUkSvx/kNFt6FMj1wOYyeW+ReVUTmf3h6rg2pVNNz9a1U
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
Ju2Asz2YcfCCmrIPHy7s1Jyzk/3YIBur+qi7G3vli3Y+38fHrACj45uj+2Hj
Pf3rqpYu3Fzgs7FWgY8NbdK64hv7YXVpp5cKsxNJ0pPaU0mv7qNwG2b/7MMc
1e9JnWadULIJ8DgynfBD2JNWK3Yf4s6c/uCythM1JTNPnJ3Bh2nozQLlwT6E
vdk5z2lTJ4bT9i4tI+tvS9dMGybrT77+MjiymVzf2Gm9uigfJ4Z52df7yPVr
Z1k6K3ai+E3bFvVpfGhSxeuu0/qw/bLrxmmLO/FQJiiJJsKHAy3T6COrD1rq
ixk+Cp2gHDq+bjW5/tQzLhtcuX0Yj5geEq7eiWNT0i+0/+WhIjXS60lrH5bV
P5yc+bcDB692nN3cw8MS1zl284L6cMB+7v3DazowI8V8VeNdHlzzvyRIV7AQ
XxTcv9C6Da+uCqKXLiX9yK3yzeFEJhpiT9yXvtAM05Vl9O2k5/u8NbG7so6B
XKdZU1XLmiFpFOD85H4feuXTC39k0LDvssoX8bYO1A1+GxMl+tMr5lZNylNh
sWDB+ycCCupCjA+EvOnGw0Opy5yDSd/WW7CxqoKGI8OfUrC2FVvOvI9atrUL
Bn3NRvJvSO/dse5B4LavWKOXsOTnmQ4sOti2/jSHCVfVi5mDT2uQVlW0Lulr
Gxboj1QLRzBQJRofNze3CmofTTcv/dCK5d+vRkY/pmP3BWEvzfUVCKe0flAU
acXSPym3+8ToCC+W6A5LL0e1Z4f2/LgW+MUKSYy9pOFUQKO30pcydB+d0yZn
3YK6uMRVCf6kl28rSz6dWo628/aVF+61wO6UutN5st9koObw+KIKqDZGdOFv
C+KizizjTaPj5Yz6DYMXqpAw5qX36mkrHvtWhedH0fHqfcb3vPU1cLC3Gvzx
ug0mQl+bUzwZCH26drlwUwMCLl5UObapA/o5O7OmfWDia6KinPKxFqx4d/WO
+Egnwo2vznbhMeAgGaC350YXFFovux6Q7cEe9YibXbJ0UL2fO6tdosHr61yX
rQW9kBifWX+moxfMU2vn7U9lwSY65/r0IzRsXudFiLYTqierVfc1sOHwZJqM
bTUdzoqvrDfNa8XfaoH9Z84gTJYbZAnJMWGXWzeuv7cJpyvVFmw9ysPRWI4g
cScLFs3RjOlShMdm2r/ckMzDPjDOhAyysFBvRP1kXhvqp6ReuEzyvSstbLh2
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
/acI53/s5vG9
      "]],
    AspectRatio->1,
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    Method->{"GridLinesInFront" -> True},
    PlotLabel->FormBox["\"StandardGaussian\"", TraditionalForm],
    PlotRange->{{-1.0698935996303804`, 
     1.054055903720755}, {-1.0521677123489694`, 1.0638232242941261`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 
   3.814982452295459*^9},ExpressionUUID->"d51a08d5-3d8b-487b-81a0-\
f93af8ccff73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Generate", " ", "a", " ", "list", " ", "of", " ", "points", " ", "in", 
       " ", "a", " ", "unit", " ", "disk"}], ".."}], " ", "new", " ", "in", 
     " ", "M"}], "-", "11"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pts", "=", 
     RowBox[{"RandomPoint", "[", 
      RowBox[{
       RowBox[{"Disk", "[", "]"}], ",", "5000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", "Red", ",", 
      RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797256102432488*^9, 3.797256110239242*^9}, {
   3.797256149424138*^9, 3.797256198474135*^9}, 3.797256939766809*^9, 
   3.797257053998226*^9, {3.797354937751997*^9, 
   3.797354940471698*^9}},ExpressionUUID->"13da31f6-caac-41db-91c1-\
c42adf52cd7b"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], PointSize[Tiny], PointBox[CompressedData["
1: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
bw2Kh+17YSbVD8F24jJcDsHx/qKXkdSMis5OO90fcmAsc75Rb0Yekqwk1z1I
qwKbLu+qLPd8JO1N5BTXv0da+1BmOonojUvT7cK/PgBzB/uESVMq8ux/Cifk
JgPNbI3Ew9dFyBvJoVFHklB/ofzfT3kCDEkVOrzy/iCypjwnboRwQWqgjnfm
0BCIGyqcWXKA8Ntn2rfq/dKwfo7JqZHEHqQGxZ5PHiT84lavQPFJCzBv5BTN
ERoG+uuDmiE1VZDw7Hzj8nUjyL4/b+RnWzOSzjMfxL7xAJZU9XzdyREkMxIP
kfdz8HDwZZdql0FizztU248VAb0oYzdPqgxmLv37wmHyoBCuqphV94HXSaMH
Of19kP2m+3yJCjF3Oxl+sfKlQH+VKPlOJRPUXlxZ+IbSDEKfzC00e3nIW+hV
pKiWAW0vjG9QgweBqu759OBMBfBGRBX2rW7EsZig9e8r88BD0XaLjQzRK5j6
KnYgEYdzPtaGxBDerN2+J9SuEHh7qhLthL9h+r/18zd+aQKKm9oqr0A2cOq3
/zC/WgGFXubX12wToNLryRXHgoZB3PZ8/PHKcqA4ztNkXM/DANUKz1tVo8C9
bPviQBSRw7L7bw2/J7guwHXT9fAMoJYZt1cDCxTLStu7tTpQKtk3Zu1QO1So
nftw2FOA5L1N77berYOE7a4y2xNakVE4etSsuRNoG26uueWSBlOV31+mnB8F
o7azh74EtWLAKk/ni8u7gEyzrzPVyECPbWHV524SnpDYfbfNL4vwuW2fXOf3
onj4P2lZIok8LLXHybs6gRT65uDjfiJnB84UZYe2oQcraMlOWjeYVOdHPcsY
AJuitw6GbU3ArPygN+2XROSSJZOcNoDpFhM+JbebIPuRy5Lfy74hSerW0klu
BjCSDQMmW6rQY9kPnz9H6sHL92ausFsPOn14NSi/sRdIz502f2Y9Qcfrf17/
WCFAWoTBiYktjRhyPyMScgWQvjRRIWK6HqzDfaZG5fpQKfZY90wzH1lfxQwN
NZtQ8fBo49Fjo0D7qzRv4dJiTLltf5cmQfRiJLRlyyehVCbX5fMSPtYLpjNb
TXpA79WmAXElARZSrOb+Cu5BzqanzgL1LuS9uaoY8yoTyM+7Ll5c1wyW5Xdv
HPfpA/ogr09EpQPV242Xn/kwCPa7f6W+mdePLN6B4DVeuWD990ae5YU+UJP7
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

    "]]}]], "Output",
 CellChangeTimes->{
  3.813924716829486*^9, 3.813924976933675*^9, 3.813925060438485*^9, 
   3.8139371300678377`*^9, 3.813939127850934*^9, 3.8139556626094522`*^9, 
   3.813957239935912*^9, 3.813957482822487*^9, 3.814004880569271*^9, 
   3.814020995727768*^9, 3.814021226632403*^9, 3.8141036918301*^9, 
   3.814103884003907*^9, 3.814103958600828*^9, 3.8141040605802937`*^9, {
   3.814104099041275*^9, 3.814104122671955*^9}, 3.814104154423415*^9, 
   3.814104263939962*^9, 3.8141077781582327`*^9, 3.814713457573904*^9, 
   3.814729446176352*^9, 3.814729842494958*^9, 3.814784180403018*^9, 
   3.814785268350216*^9, 3.814786874003742*^9, 3.814787184584508*^9, 
   3.814787251696267*^9, 3.81479057073158*^9, 3.814799152444046*^9, 
   3.81479927006236*^9, 3.814803548228697*^9, 3.8148087878014097`*^9, 
   3.814816059241652*^9, 3.814817077080401*^9, 3.81481720421663*^9, 
   3.814817939455494*^9, 3.814818383283105*^9, 3.814819922662372*^9, 
   3.814962879087501*^9, 3.814964275679068*^9, 3.81496566518944*^9, 
   3.814968802790246*^9, 3.814982333394876*^9, 
   3.814982452331101*^9},ExpressionUUID->"580697cf-b131-4d04-bbcc-\
20cf5ba5e1ba"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "multiple", " ", "lists", " ", "of", " ", "points", " ", 
    "for", " ", "a", " ", "unit", " ", "disk", " ", "region"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalR]", "=", 
     RowBox[{"Disk", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pl", "=", 
     RowBox[{"RandomPoint", "[", 
      RowBox[{"\[ScriptCapitalR]", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "200"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"\[ScriptCapitalR]", ",", "Red", ",", 
        RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"pts", ",", "pl"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7972563037859898`*^9, 
  3.797256355459469*^9}},ExpressionUUID->"c66e0bbd-85a1-4c1f-9b84-\
2b923eb99f19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{DiskBox[{0, 0}], 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
6Q==
       "]]}}], ",", 
   GraphicsBox[{DiskBox[{0, 0}], 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
8LzCrQ==
       "]]}}], ",", 
   GraphicsBox[{DiskBox[{0, 0}], 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
ASKuw6U=
       "]]}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.81392473010611*^9, 3.813924976944192*^9, 3.813925060455114*^9, 
   3.81393713011483*^9, 3.81393912790198*^9, 3.81395566262258*^9, 
   3.813957239962735*^9, 3.8139574828314323`*^9, 3.814004880605644*^9, 
   3.814020995740316*^9, 3.814021226653968*^9, 3.814103691894032*^9, 
   3.814103884054112*^9, 3.814103958663959*^9, 3.814104060656095*^9, {
   3.814104099089039*^9, 3.814104122721324*^9}, 3.814104154471355*^9, 
   3.814104263992437*^9, 3.814107778167541*^9, 3.814713457586546*^9, 
   3.814729446191124*^9, 3.814729842528775*^9, 3.814784180413022*^9, 
   3.814785268360519*^9, 3.814786874017468*^9, 3.814787184597278*^9, 
   3.8147872517049427`*^9, 3.814790570744595*^9, 3.814799152455599*^9, 
   3.814799270084489*^9, 3.814803548267044*^9, 3.814808787825737*^9, 
   3.8148160592800617`*^9, 3.814817077121463*^9, 3.8148172042478247`*^9, 
   3.814817939468184*^9, 3.8148183832936*^9, 3.81481992267281*^9, 
   3.814962879097591*^9, 3.814964275693927*^9, 3.814965665201836*^9, 
   3.81496880280088*^9, 3.814982333406028*^9, 
   3.814982452369488*^9},ExpressionUUID->"1834c9c1-6073-49ce-8144-\
148b7c584413"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Gauss", " ", "Fit", " ", "to", " ", "List", " ", "of", " ", "2", "D", " ",
     "Points"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"data", ",", "fit", ",", "sigma", ",", "x", ",", "ampl"}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"data", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.05", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "51"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "64"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35", ",", "107"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.45", ",", "113"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.55", ",", "162"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65", ",", "163"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "167"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "182"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.95", ",", "187"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.05", ",", "165"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.15", ",", "168"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.25", ",", "151"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35", ",", "143"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45", ",", "121"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.55", ",", "130"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.65", ",", "109"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.75", ",", "91"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.85", ",", "91"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.95", ",", "63"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.05", ",", "48"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.15", ",", "34"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.25", ",", "29"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.35", ",", "24"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.45", ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.55", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.65", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.75", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.85", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.95", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.05", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.15", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.25", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.35", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.45", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.55", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.65", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.75", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.85", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.95", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.05", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.15", ",", "0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"model", "[", "x_", "]"}], "=", 
     RowBox[{"ampl", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"x0", ",", "sigma"}], "]"}], ",", "x"}], "]"}], "]"}]}]}], 
    ";"}], "\n", 
   RowBox[{"fit", "=", 
    RowBox[{"FindFit", "[", 
     RowBox[{"data", ",", 
      RowBox[{"model", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ampl", ",", "x0", ",", "sigma"}], "}"}], ",", "x"}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ampl", "\[Rule]", "274.765"}], ",", 
      RowBox[{"x0", "\[Rule]", "1.02404"}], ",", 
      RowBox[{"sigma", "\[Rule]", "0.614853"}]}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", "data", "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"model", "[", "x", "]"}], "/.", "fit"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "4.2"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.797253945913721*^9, 3.797253961701927*^9}, {
   3.797254016831555*^9, 3.7972540183131723`*^9}, 3.797254079013918*^9, {
   3.7972547442749166`*^9, 3.797254748030479*^9}, {3.799944171132131*^9, 
   3.799944178285556*^9}, 3.799944218937296*^9, {3.814021044758622*^9, 
   3.814021051096747*^9}, {3.814021095991585*^9, 3.814021097289757*^9}, {
   3.8140211727264442`*^9, 3.814021192413229*^9}, {3.814021280058638*^9, 
   3.814021281274919*^9}, {3.814103720473785*^9, 
   3.8141037206996393`*^9}},ExpressionUUID->"50666653-0e9d-4f92-b668-\
f30d32c72d5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15`", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35`", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45`", ",", "113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.55`", ",", "162"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", "163"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "167"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", "182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.95`", ",", "187"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.15`", ",", "168"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.35`", ",", "143"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.45`", ",", "121"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.55`", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.65`", ",", "109"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.85`", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.95`", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.05`", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.15`", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.35`", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.45`", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.55`", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.65`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.75`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.85`", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.95`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.05`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.15`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.35`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.45`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.55`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.65`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.75`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.85`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.95`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.05`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.15`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813924762229682*^9, 3.81392497696387*^9, 3.8139250604784937`*^9, 
   3.813937130161346*^9, 3.813939127933939*^9, 3.8139556626497297`*^9, 
   3.813957239977409*^9, 3.8139574828530893`*^9, 3.814004880625415*^9, 
   3.8140209958596888`*^9, {3.81402103139797*^9, 3.814021051894793*^9}, 
   3.814021098780402*^9, {3.814021174814144*^9, 3.814021226671468*^9}, 
   3.814021387372998*^9, {3.814103691936695*^9, 3.814103721496586*^9}, 
   3.814103884121744*^9, 3.814103958728311*^9, 3.8141040607088346`*^9, {
   3.814104099142602*^9, 3.8141041227713823`*^9}, 3.8141041545047283`*^9, 
   3.814104264024589*^9, 3.814107778205971*^9, 3.814204636035263*^9, 
   3.814713457626442*^9, 3.814729446229393*^9, 3.8147298425799723`*^9, 
   3.8147841804367723`*^9, 3.814785268380187*^9, 3.814786874040328*^9, 
   3.814787184619763*^9, 3.81478725172274*^9, 3.8147905707708483`*^9, 
   3.8147991524774942`*^9, 3.814799270108471*^9, 3.814803548325951*^9, 
   3.81480878786924*^9, 3.814816059312838*^9, 3.814817077147615*^9, 
   3.814817204278137*^9, 3.814817939492839*^9, 3.814818383316166*^9, 
   3.8148199226948957`*^9, 3.814962879122772*^9, 3.814964275713431*^9, 
   3.814965665220889*^9, 3.8149688028245497`*^9, 3.814982333429552*^9, 
   3.814982452411289*^9},ExpressionUUID->"1d5fb2b4-7f7f-4585-9a1b-\
106b9077fb97"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ampl", "\[Rule]", "274.7647620320732`"}], ",", 
   RowBox[{"x0", "\[Rule]", "1.0240389337064897`"}], ",", 
   RowBox[{"sigma", "\[Rule]", "0.6148525530609263`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813924762229682*^9, 3.81392497696387*^9, 3.8139250604784937`*^9, 
   3.813937130161346*^9, 3.813939127933939*^9, 3.8139556626497297`*^9, 
   3.813957239977409*^9, 3.8139574828530893`*^9, 3.814004880625415*^9, 
   3.8140209958596888`*^9, {3.81402103139797*^9, 3.814021051894793*^9}, 
   3.814021098780402*^9, {3.814021174814144*^9, 3.814021226671468*^9}, 
   3.814021387372998*^9, {3.814103691936695*^9, 3.814103721496586*^9}, 
   3.814103884121744*^9, 3.814103958728311*^9, 3.8141040607088346`*^9, {
   3.814104099142602*^9, 3.8141041227713823`*^9}, 3.8141041545047283`*^9, 
   3.814104264024589*^9, 3.814107778205971*^9, 3.814204636035263*^9, 
   3.814713457626442*^9, 3.814729446229393*^9, 3.8147298425799723`*^9, 
   3.8147841804367723`*^9, 3.814785268380187*^9, 3.814786874040328*^9, 
   3.814787184619763*^9, 3.81478725172274*^9, 3.8147905707708483`*^9, 
   3.8147991524774942`*^9, 3.814799270108471*^9, 3.814803548325951*^9, 
   3.81480878786924*^9, 3.814816059312838*^9, 3.814817077147615*^9, 
   3.814817204278137*^9, 3.814817939492839*^9, 3.814818383316166*^9, 
   3.8148199226948957`*^9, 3.814962879122772*^9, 3.814964275713431*^9, 
   3.814965665220889*^9, 3.8149688028245497`*^9, 3.814982333429552*^9, 
   3.8149824524141006`*^9},ExpressionUUID->"281a0d1e-7dc8-40fb-9edb-\
474c8d1b9637"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdkD9LQmEUh9+0zP6pg4NrDg4iLS0u4dtWk9HgoBIqVxv7Cn6Nmlz9FkJr
QZOTQ0GDIIREUUSS3vt73jfwwOXw3N89zzncw87NZTdmjCmunrDf3YY1rJio
juxxVPfi/rnV+yfyC9uLaiwe1e3jQ1gTsW1a+V7ggPxV3ArwTcXPAftm+Hr4
3/j+mvm5eBCQv3NPF98Hvg77P+E2/i/uucL3Dbfw/cANfL/cU8O38CzfH/+n
yrxh7ox8Az6lx+gn7Hdcxh+HS/g24QK+LThHT3iWz3Ee3zacwZf0LN8O7O7e
dWzkczyvyLcHZ/Htw0l8B2u+lJ+XL+Vz+dI+13zG71f+z0vuUqJW
       
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
P/8QvGY=
        "]]},
      Annotation[#, "Charting`Private`Tag$8403#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.15}, {0, 187.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813924762229682*^9, 3.81392497696387*^9, 3.8139250604784937`*^9, 
   3.813937130161346*^9, 3.813939127933939*^9, 3.8139556626497297`*^9, 
   3.813957239977409*^9, 3.8139574828530893`*^9, 3.814004880625415*^9, 
   3.8140209958596888`*^9, {3.81402103139797*^9, 3.814021051894793*^9}, 
   3.814021098780402*^9, {3.814021174814144*^9, 3.814021226671468*^9}, 
   3.814021387372998*^9, {3.814103691936695*^9, 3.814103721496586*^9}, 
   3.814103884121744*^9, 3.814103958728311*^9, 3.8141040607088346`*^9, {
   3.814104099142602*^9, 3.8141041227713823`*^9}, 3.8141041545047283`*^9, 
   3.814104264024589*^9, 3.814107778205971*^9, 3.814204636035263*^9, 
   3.814713457626442*^9, 3.814729446229393*^9, 3.8147298425799723`*^9, 
   3.8147841804367723`*^9, 3.814785268380187*^9, 3.814786874040328*^9, 
   3.814787184619763*^9, 3.81478725172274*^9, 3.8147905707708483`*^9, 
   3.8147991524774942`*^9, 3.814799270108471*^9, 3.814803548325951*^9, 
   3.81480878786924*^9, 3.814816059312838*^9, 3.814817077147615*^9, 
   3.814817204278137*^9, 3.814817939492839*^9, 3.814818383316166*^9, 
   3.8148199226948957`*^9, 3.814962879122772*^9, 3.814964275713431*^9, 
   3.814965665220889*^9, 3.8149688028245497`*^9, 3.814982333429552*^9, 
   3.814982452482087*^9},ExpressionUUID->"eb2c7f81-9a26-4c70-8ad0-\
88f2d1f57c1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DiracComb", " ", "to", " ", "sample", " ", "a", " ", "function"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"x", ",", "a", ",", "b", ",", "c", ",", "e", ",", "f"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "=", 
    RowBox[{"ae", "^", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "b"}], ")"}], "^", "2"}], "/", "2"}], 
        RowBox[{"c", "^", "2"}]}], ")"}]}]}]}], 
   RowBox[{"(*", 
    RowBox[{"gaussian", " ", "fnc"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DiscreteDelta", "[", 
         RowBox[{"t", "-", "n"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "Infinity"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797255470988173*^9, 3.79725547098936*^9}, {
  3.79725562956135*^9, 3.797255633747191*^9}, {3.797255673188201*^9, 
  3.797255695466146*^9}},ExpressionUUID->"a9dcfb52-6260-43dd-ba26-\
78819309c69e"],

Cell[BoxData[
 SuperscriptBox["ae", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["c", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "x"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.8139248046455927`*^9, 3.813924977025189*^9, 3.813925060541829*^9, 
   3.8139371302470016`*^9, 3.813939128062064*^9, 3.813955662715385*^9, 
   3.813957240042429*^9, 3.813957482903195*^9, 3.814004880696825*^9, 
   3.814020996205942*^9, 3.814021226753038*^9, 3.8141036922034473`*^9, 
   3.8141038843742533`*^9, 3.814103959116777*^9, 3.8141040609874163`*^9, {
   3.814104099395235*^9, 3.814104123117055*^9}, 3.8141041547999163`*^9, 
   3.814104264310297*^9, 3.8141077784551353`*^9, 3.814713457758254*^9, 
   3.814729446323331*^9, 3.8147298426594563`*^9, 3.8147841805027533`*^9, 
   3.8147852684432173`*^9, 3.814786874109074*^9, 3.814787184683429*^9, 
   3.814787251785029*^9, 3.81479057085032*^9, 3.814799152553636*^9, 
   3.814799270202675*^9, 3.814803548436924*^9, 3.8148087880129538`*^9, 
   3.8148160593870068`*^9, 3.8148170772222357`*^9, 3.81481720434734*^9, 
   3.8148179395662613`*^9, 3.814818383384553*^9, 3.814819922780994*^9, 
   3.814962879194281*^9, 3.8149642757871647`*^9, 3.814965665285317*^9, 
   3.81496880289049*^9, 3.814982333491742*^9, 
   3.814982452491372*^9},ExpressionUUID->"207d14a1-9f38-4575-97f7-\
2a426d96aeb8"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{0., 0.}, {0., 0}}, {{4., -0.7568024953079282}, {4., 0}}, {{
         5., -0.9589242746631385}, {5., 0}}, {{6., -0.27941549819892586`}, {
         6., 0}}, {{10., -0.5440211108893698}, {10., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., 0.8414709848078965}, {1., 0}}, {{2., 
         0.9092974268256817}, {2., 0}}, {{3., 0.1411200080598672}, {
         3., 0}}, {{7., 0.6569865987187891}, {7., 0}}, {{8., 
         0.9893582466233818}, {8., 0}}, {{9., 0.4121184852417566}, {9., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.8414709848078965}, {2., 0.9092974268256817}, {
     3., 0.1411200080598672}, {4., -0.7568024953079282}, {
     5., -0.9589242746631385}, {6., -0.27941549819892586`}, {7., 
     0.6569865987187891}, {8., 0.9893582466233818}, {9., 
     0.4121184852417566}, {10., -0.5440211108893698}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 10}, {-0.9589242746631385, 0.9893582466233818}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8139248046455927`*^9, 3.813924977025189*^9, 3.813925060541829*^9, 
   3.8139371302470016`*^9, 3.813939128062064*^9, 3.813955662715385*^9, 
   3.813957240042429*^9, 3.813957482903195*^9, 3.814004880696825*^9, 
   3.814020996205942*^9, 3.814021226753038*^9, 3.8141036922034473`*^9, 
   3.8141038843742533`*^9, 3.814103959116777*^9, 3.8141040609874163`*^9, {
   3.814104099395235*^9, 3.814104123117055*^9}, 3.8141041547999163`*^9, 
   3.814104264310297*^9, 3.8141077784551353`*^9, 3.814713457758254*^9, 
   3.814729446323331*^9, 3.8147298426594563`*^9, 3.8147841805027533`*^9, 
   3.8147852684432173`*^9, 3.814786874109074*^9, 3.814787184683429*^9, 
   3.814787251785029*^9, 3.81479057085032*^9, 3.814799152553636*^9, 
   3.814799270202675*^9, 3.814803548436924*^9, 3.8148087880129538`*^9, 
   3.8148160593870068`*^9, 3.8148170772222357`*^9, 3.81481720434734*^9, 
   3.8148179395662613`*^9, 3.814818383384553*^9, 3.814819922780994*^9, 
   3.814962879194281*^9, 3.8149642757871647`*^9, 3.814965665285317*^9, 
   3.81496880289049*^9, 3.814982333491742*^9, 
   3.814982452779459*^9},ExpressionUUID->"4332b48c-d3ef-4871-859d-\
84c87d627c10"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Integrate", " ", "a", " ", "fnc", " ", "over", " ", "a", " ", 
       "parametric", " ", "domain"}], " ", "..."}], " ", "new", " ", "in", 
     " ", "M"}], "-", "11"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"f", ",", "x", ",", "y", ",", " ", "region"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"region", "=", 
     RowBox[{"ParametricRegion", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"s", " ", "t"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "^", "2"}], "+", 
           RowBox[{"t", "^", "2"}]}], "\[LessEqual]", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "t"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", 
    RowBox[{"region", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "None"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"x", "^", "2"}], " ", "y"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"x", "^", "6"}]}], "-", 
      RowBox[{"y", "^", "5"}]}]}], ";"}], "\n", 
   RowBox[{"val", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "region"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "visualize", " ", "the", " ", "convergence", " ", "of", " ", "the", " ", 
     "Monte", " ", "Carlo", " ", "statistic", " ", "as", " ", "the", " ", 
     "sample", " ", "size", " ", "increases"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "uncomment", " ", "it", " ", "as", " ", "it", " ", "takes", " ", "time", 
     " ", "to", " ", "get", " ", "resolved"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"ListLogLogPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "^", 
          RowBox[{"Range", "[", "20", "]"}]}], ",", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RegionMeasure", "[", "region", "]"}], " ", 
            RowBox[{"Mean", "[", 
             RowBox[{"f", "/@", 
              RowBox[{"RandomPoint", "[", 
               RowBox[{"region", ",", 
                RowBox[{"2", "^", "n"}]}], "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "val"}]}], "]"}], "\[IndentingNewLine]", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7972565134658337`*^9, 3.79725659934874*^9}, {
  3.797256635580101*^9, 3.797256662784531*^9}, {3.797256696832965*^9, 
  3.7972566987042007`*^9}, {3.7973550066369867`*^9, 3.797355010753405*^9}, {
  3.7999448651079283`*^9, 3.799944866503223*^9}, {3.81392500680132*^9, 
  3.813925038411024*^9}},ExpressionUUID->"38fb45f3-5ac6-4c1b-baf4-\
19e233542134"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
7/Jk
   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxNmgv819MZx8/vL138u+rC2GYVthlbVmQuUaTJNXIZhlzmWohRq5k2ZMZc
IptJ7m2ysmjU3KZlZE2FuU4IxUyaZoS2z7vz/r/s9fo9r+d5zjnPuX3PeT7n
POfX89jTDxzVVEo5Y71S8ivtGqWcFdou8i2hsZG/Fd45fHxo58jdw38cGhi5
ffg5oR0ibxj+o9CAyBuHXxjaI3Lv8CtD+0feJPzi0J6Rbw9dbZ3PhDqlI6eG
b5m0a0MHRn4oNCXyweE7h88OnRT5UfoX+cjwb4bfHjoq8j2hOyMPDf96+I2h
wyN/KfznoX0izwj9xr59Nfw6638qdF/kk8N3Df9Do/Znx/BZoe9F3iF8Zuj4
yF8I/1lor8iDwh8MjYp8f+iP9v/J0KLIJ4QvD70R+Yfhr4RWMHfhe4cvDJ0b
+bvh/wj9NPJe4QtC3498QPjf+AbYhZZGPi/8O+GvMdeRDwp/nm8Qed/wp0Jj
S52bXzs/R4e/S78jrx/eLnP+q8jHR/5P6IrIJ4d/Grom8h7hfwqdEfnY8NXM
Y+Sm8Nax/UXk10Kroo8J/7CQWcusYX001TpPS/56lt8z8p9DoyN/L3xN6KrI
h4S/xNqKvJr1lPKXuEYmu05Ym993fU4NnavMGhzjOmy2TP/IHUxnDXcM/0Fo
x8hdmL/QLqy78HGhnUpd4+fZ1q2s9aZavmvSzg/tWuoan+A6/3z4JaFvR94o
/ILQ7qXujwvcI58LnxgaHLlH+E9CgyLfFPqh/fxt6CJtu1n/bqXulUvcL18M
v9S1vSlrJDSk1H020fU81rEw3s3CLwvtXeo6vcy1+rvQJG3ZZ790rW4V/qvQ
IZE355uEDoj8tfDrQ4eWuoeucB9twRoJDYv85fBfhA6K/BXrHM4+K/XbMW/4
ANrFD2wQfnZo+1L3H/Uf7J6+rVH3Nft+qul9wm82vWf45aF9I29jme9EfrhU
W/q/dfgNocNK9QHY4gf6hk8LHR152/BbQ9+N3Mtx7Rf5G+E3hY7AH/Bdm2r6
70vdR4y9Ed4j6ddG3j7yb0PHRu4fPiN0XOTHQne57/A30/1Gd1qG7/it8N81
qn/Ax9zTqH5mpun4mT/Rtv1nf7zsHtkl/N5G9VcLQ3NsFz/0cKP6IvzZXMvs
Fn5/6LRSfdsDjerfBljmlMg72YcTIw+0zMhS/S5t4Xt3D38kdDr9DM1zbc8u
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
mN1Gpcqcz9EfUSd9ijpn7EfUySPeQuxsY/tGe/SPdM7lW6tvY5+nqh/sOKaa
N7/U+Hs326duytxoHufz+eqUI55P3K17qfGuPtbP2R/9cOeDc/+2luesj00f
56SPtjebxv3gz6XeEeC3aLeVdTC3tzrfh1iG/O7OJXPKneg26+P+wr2HuB5n
eO4ij5d6H3lcnbeIae6tfUwn7XOO6Tb7Sn5f9+ZN9ov6H7ON37vGWF+dTCet
r7bTtL/Bb8OZmZhbP/0D6wA/2Nt0zsbk4Ue3c49PV8enwaebxz3nL6Xeg9iX
/f0W3IOIM3I3Wai+vWWxwZ8hw/F1xAS4p/CWwv2JuoY6Hzs4JzOds6NMn2ne
k46Zft6lfoLt0uaG4X8tNX7KWuWOhX686ejk4W94v8HnzFI/wHHNcGykzbIc
cSR8Fn7sbnXOvdznFpUam12kTqx0Salx2K6mk/aVUu9P5J3kPtjZvYA8W/2p
lrVe6p0LnTvgU+rkzXZ/sP6fdC6YlyW2sYvE3XCA47nPup52vjZUnuP3u89y
fMf+lu1jPuW4by52/HP9jnzDfn5PdO5fc237ZOdggPPwmjb9XHesvxGhZ0u9
qxKH5r2P+PLXS73DohNfekZ9oGtxkGsV+UF17q/EiLkPgnkP2QZpsx3LZqax
Fx60rhG2Tz9GWp66sOF++3ypd+Hn1fGvnBWId7MHuQujDzb9EfNon/bAa+7K
7L0D3YPz3IcvlvqW1qHUey/6maaj72H7tAlG4NOJjyNzX0Yfbvp8814o9R4N
zhDH5l1t21Lv38SFR5tPOWLIL5lHHJ27ODbcu18uNYa+Qan3dPSzTUcfYn3Y
tbMt7Pd0LvmeDevYy3pI29v0V7Shb9zZ0YkJEFse6rrCdkHjszdP9LO0fcK+
Mg7GCs4udB2dZlsLbY86iQm0vAOgc/fkzMjZET9HDIE1Svzn1VLfCZqUiTns
4zpjv7H2kBepk0853hEWWY51uI1rkrVH7AHfg78iFkEe/pk08vDX3LfeLfXO
9Xqp77XtlYktoBNr4M2YeAUxB+Lp3JffUOeNghgFMdmxppPWbFu0g28kn7eH
LaybNohdUDdt8LbMm/Iw1w/ppLXRljb2dxyLHeez2hA/WaGOPfEO3kvOD71V
auyDNw3eOw6xfvJ5q16/1FgJeZR/s9QYC28dvFMMtzz1UEdr60PnPeUFy02w
Tto+yO83wm9KHS/ZNut1qf3+Z6nxGuyI2fBe8mP7QPttzaccsZ2l2o/WFjv6
/472h/o92Sft3IsrXPOMiXrHW56yrUrt+wuO/13XBPbvl/q+wnfkzYU3fv6b
QSwBnXgC4znc+aG/3OEPM59y2Cxz3IxrZakxo3e0Xab9Kr93G+s5zLG/Yd5E
5/4I5x+bFe5h0t80b5jfYlvX0XL1N/3+E2yffvAOtVwb1vYq26Mf/3LMjJc4
DzpxpBX29yL78IptrXROW2n7lnPA/ueNB9+CTyEGxX8rPij1PxDcj95VJ95F
PuXwFR+Yd7Rp2OHTiGXxvwTiacTP+E4/9XuhH2U+5fA7yHD68Krr+jz34jHu
x//Yb8bLmw57uFn5Pfc8sS7Gc462K7VnfMTZ8GUr3aP4hyNNo11icbRBvG6V
Nhc7P2+r0w7t/aylP877++4l/CT14TfBdeIL/BeEexnxOPQBpq8276NS4wA9
S5WJ36Gvi/GVGtPjvyLE9I4zjf+gfNV00npphz1xRf5zwhvn1qWWpy5siBNy
7uKctpM67438/4RzDGe5j9R5q1qjvtj2aW/d/1Ua9R2OWN+n6vw/hTc13gip
52N14mZr1U+0fdrk7PdJqe+InG2IR6JfZTo6efh34nv81waQxM+yHnBaxFoG
lppPOXw7aeTR17XaEMf7b6lvjZwriO+hX2M6OnndHSPzid1a22OMjG+bUv/P
QMwFvFvPeSCdb3mq35q4JvrPnY/TnBNsiXu2vJeiX6stNqc6DsYKxq2LqTZq
vBSO/ql1Emtt+a8QOt+CNchaxKcTa2Ud8H7aqlHlrZVbm8f/mnhb/VqpMnHa
UeZT7jrXEnWNNJ9y6952GzVGi97auqiHNHTixm3tI32An+48IJOHznsr78Fb
lRqnbduo8dtm82kLjs67bnv5FNPPtE7qIXZ8hmlrXM+ktbE8dXdQZz+Mdh+1
tR/0oaUN7DkDc8bmLE9sGZsrXLOcv1m3vV3ntEWsGL3l/3vEk1dbnhgyNvhK
Yk9baosN9sSkuTtwtoejz7Ge1foo6kPf0zJzTD/e/jEe4ti0gY8iRk3ciHgU
8XD8Lj4Zjo4v6+66u9Z00prtJ3XRV/KJ/bK2GQfjYV9Tdw/XMfFdYkabmk5a
X21pA3vKEDOn3P8AMS01iw==
        "]]]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwt0s9LFGEAx+FZS7PULK00rcMe1Gy3IgxZUoSIQJFC8qAi4g9qMcG2Qggi
6KAigh0UEpQICfoH6tA5IUKJkAgiBEGQwINJBHYw0OdlOzz74TuH3Zl3Nj6Q
uX0/FkXRKxY4S6ELKX3NGYrtBn1DJXH7pr6ngjq7V5c4Tcq+o18oJ2l36iJl
JOwO/cApLts9+omTXLK79SMnaLQH9SulNNlD+o0S6u0B/czx8Ax2i77jGFfs
Pl0Oz8J1O6M/OMoN+6GuUsQeQ67NaqRV0qdTukN1OBe7Wd9Sw1U7rSuc4649
rbvU8iiWPeN8Pa8P9KXmaULDS5jXg5rUYZ3TA3pB0zqj/7jINXtYv2dvMWr1
8VjXyaHffq5/w3fQZY/rdvgNOuxR3SKXdvuZboZ7otue0N8cos1+qj/DM9Bp
j+kvDtNsj+gaR+ixJ/UPBdyyn+hG+H9xz37x/6z3AdCYQJc=
      "]], 
     LineBox[{167, 30, 266, 54, 160}], 
     LineBox[{170, 32, 293, 81, 187, 31, 273, 61, 167}], 
     LineBox[{172, 34, 355, 143, 249, 33, 276, 64, 170}], 
     LineBox[{189, 35, 278, 66, 172}], LineBox[{218, 36, 295, 83, 189}], 
     LineBox[{324, 112, 218}], LineBox[{324, 13}]}}],
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-0.9999993814810022, 0.9980095440811697}, {-0.4999403247175081,
    0.499977518357928}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81392504617892*^9, 3.8139250608308077`*^9}, 
   3.813937130592559*^9, 3.8139391283649054`*^9, 3.813955663279498*^9, 
   3.8139572405887747`*^9, 3.8139574834841137`*^9, 3.8140048809606733`*^9, 
   3.814020996766412*^9, 3.814021227405321*^9, 3.814103692450696*^9, 
   3.814103884856062*^9, 3.814103959718869*^9, 3.814104061321059*^9, {
   3.81410409969587*^9, 3.8141041234594183`*^9}, 3.814104155084734*^9, 
   3.814104264652993*^9, 3.81410777878633*^9, 3.8147134583826113`*^9, 
   3.8147294469163647`*^9, 3.814729842961728*^9, 3.814784181094449*^9, 
   3.814785269037177*^9, 3.814786874380102*^9, 3.814787185285626*^9, 
   3.814787252344379*^9, 3.814790571120995*^9, 3.814799153191718*^9, 
   3.814799270480919*^9, 3.814803548734913*^9, 3.8148087886060057`*^9, 
   3.814816059753656*^9, 3.814817077599889*^9, 3.8148172046289873`*^9, 
   3.8148179398229933`*^9, 3.8148183839704933`*^9, 3.814819923107449*^9, 
   3.814962879817387*^9, 3.8149642763859386`*^9, 3.814965665881276*^9, 
   3.814968803475656*^9, 3.814982333749242*^9, 
   3.81498245321071*^9},ExpressionUUID->"b562fa8c-566f-4197-ac3c-\
f0b7e0f3ef8f"],

Cell[BoxData["0.8126984241758055`"], "Output",
 CellChangeTimes->{{3.81392504617892*^9, 3.8139250608308077`*^9}, 
   3.813937130592559*^9, 3.8139391283649054`*^9, 3.813955663279498*^9, 
   3.8139572405887747`*^9, 3.8139574834841137`*^9, 3.8140048809606733`*^9, 
   3.814020996766412*^9, 3.814021227405321*^9, 3.814103692450696*^9, 
   3.814103884856062*^9, 3.814103959718869*^9, 3.814104061321059*^9, {
   3.81410409969587*^9, 3.8141041234594183`*^9}, 3.814104155084734*^9, 
   3.814104264652993*^9, 3.81410777878633*^9, 3.8147134583826113`*^9, 
   3.8147294469163647`*^9, 3.814729842961728*^9, 3.814784181094449*^9, 
   3.814785269037177*^9, 3.814786874380102*^9, 3.814787185285626*^9, 
   3.814787252344379*^9, 3.814790571120995*^9, 3.814799153191718*^9, 
   3.814799270480919*^9, 3.814803548734913*^9, 3.8148087886060057`*^9, 
   3.814816059753656*^9, 3.814817077599889*^9, 3.8148172046289873`*^9, 
   3.8148179398229933`*^9, 3.8148183839704933`*^9, 3.814819923107449*^9, 
   3.814962879817387*^9, 3.8149642763859386`*^9, 3.814965665881276*^9, 
   3.814968803475656*^9, 3.814982333749242*^9, 
   3.814982453236177*^9},ExpressionUUID->"e6ed1348-e9ad-4e6b-9d5c-\
6fb351cc8a6d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Use", " ", "Monte", " ", "Carlo", " ", "sampling", " ", "to", " ", 
    "calculate", " ", "the", " ", "area", " ", "of", " ", "the", " ", "white",
     " ", "area", " ", "in", " ", "the", " ", "figure", " ", "below"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pannter", "=", 
     RowBox[{"ImageData", "[", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"ColorConvert", "[", 
         RowBox[{
          GraphicsBox[{RectangleBox[{0, -1}, {2, 1}], 
            {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0.5]], 
             PolygonBox[{{0, 0}, {2, -1}, {1, 0}, {2, 1}}]}},
           ImageSize->{36.90625000000041, Automatic}], ",", "GrayLevel"}], 
         "]"}], ",", "\"\<Bit\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "100000"}], ";", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pannter", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", "pannter", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", "pannter", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
             "]"}], "\[Equal]", "1"}], ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"{", "n", "}"}]}], "]"}], "]"}], "/", "n"}], " ", "//", 
     "N"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Compare", " ", "with", " ", "a", " ", "direct", " ", "count", " ", "of",
       " ", "bright", " ", "points"}], ",", 
     RowBox[{"1", "s"}], ",", 
     RowBox[{
      RowBox[{"with", " ", "dark", " ", "points", " ", 
       RowBox[{"(", 
        RowBox[{"0", "s"}], ")"}]}], ":"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "pannter", "]"}], ",", "0"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "pannter", "]"}], ",", "1"}], "]"}], "/", 
     RowBox[{"Length", "[", 
      RowBox[{"Flatten", "[", "pannter", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.624648919665183*^9, 3.624649006936673*^9}, {
  3.6246504654194727`*^9, 3.624650497776582*^9}, {3.62465059782165*^9, 
  3.624650633113064*^9}, {3.687615604610732*^9, 3.687615611211031*^9}, {
  3.814020930998931*^9, 
  3.81402096980761*^9}},ExpressionUUID->"d08b281f-7d33-4797-b03c-\
35c295ec3043"],

Cell[BoxData["0.36432`"], "Output",
 CellChangeTimes->{
  3.814018301280291*^9, 3.814020876632453*^9, 3.814020937351972*^9, {
   3.8140209708977823`*^9, 3.8140209971618757`*^9}, 3.814021227811795*^9, 
   3.8141036928129473`*^9, 3.814103885393886*^9, 3.814103960274366*^9, 
   3.8141040616928263`*^9, {3.814104100071755*^9, 3.814104123848596*^9}, 
   3.8141041554717817`*^9, 3.8141042650322943`*^9, 3.8141077791727743`*^9, 
   3.814713458772029*^9, 3.8147294473362617`*^9, 3.8147298433413982`*^9, 
   3.8147841814570293`*^9, 3.814785269397785*^9, 3.814786874736751*^9, 
   3.8147871856442137`*^9, 3.814787252705584*^9, 3.814790571478076*^9, 
   3.814799153559369*^9, 3.814799270859765*^9, 3.8148035490998507`*^9, 
   3.814808788971114*^9, 3.8148160601130323`*^9, 3.8148170780123262`*^9, 
   3.814817205016941*^9, 3.814817940169756*^9, 3.814818384335478*^9, 
   3.8148199234606733`*^9, 3.814962880183117*^9, 3.814964276754119*^9, 
   3.814965666249412*^9, 3.8149688038353653`*^9, 3.81498233409529*^9, 
   3.814982453582966*^9},ExpressionUUID->"af3540c2-6c10-4041-914a-\
983232eaa38c"],

Cell[BoxData["0.366691015339664`"], "Output",
 CellChangeTimes->{
  3.814018301280291*^9, 3.814020876632453*^9, 3.814020937351972*^9, {
   3.8140209708977823`*^9, 3.8140209971618757`*^9}, 3.814021227811795*^9, 
   3.8141036928129473`*^9, 3.814103885393886*^9, 3.814103960274366*^9, 
   3.8141040616928263`*^9, {3.814104100071755*^9, 3.814104123848596*^9}, 
   3.8141041554717817`*^9, 3.8141042650322943`*^9, 3.8141077791727743`*^9, 
   3.814713458772029*^9, 3.8147294473362617`*^9, 3.8147298433413982`*^9, 
   3.8147841814570293`*^9, 3.814785269397785*^9, 3.814786874736751*^9, 
   3.8147871856442137`*^9, 3.814787252705584*^9, 3.814790571478076*^9, 
   3.814799153559369*^9, 3.814799270859765*^9, 3.8148035490998507`*^9, 
   3.814808788971114*^9, 3.8148160601130323`*^9, 3.8148170780123262`*^9, 
   3.814817205016941*^9, 3.814817940169756*^9, 3.814818384335478*^9, 
   3.8148199234606733`*^9, 3.814962880183117*^9, 3.814964276754119*^9, 
   3.814965666249412*^9, 3.8149688038353653`*^9, 3.81498233409529*^9, 
   3.814982453585209*^9},ExpressionUUID->"7fcbbac7-9a12-44d7-a151-\
17716225bc0e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Stochastic Processes\
\>", "Title",
 CellChangeTimes->{{3.8138462517291737`*^9, 3.813846259130912*^9}, {
  3.8140209796837807`*^9, 
  3.8140209807188463`*^9}},ExpressionUUID->"ef3d9b47-8133-456b-9e36-\
b6d0253b0d6a"],

Cell[TextData[{
 "\nTill now what we\[CloseCurlyQuote]ve seen it\[CloseCurlyQuote]s more \
about general statistical methods powered by probability theory. The average \
life expectancy of a population, what\[CloseCurlyQuote]s the probability of \
having a female baby after two males ;) etc. If you\[CloseCurlyQuote]re still \
interested in that, better go elsewhere to study them in detail.\nFrom now on \
we\[CloseCurlyQuote]ll focus on Computer Science and Computer Graphics \
probabilistic/stochastics approaches.\n\nLet\[CloseCurlyQuote]s start trying \
to understand what is a determinist approach vs a stochastic one.\n\nA \
deterministic model generally does not include elements of randomness. Every \
time one runs a model with the same initial conditions he will get the same \
results. Most simple mathematical models of everyday situations are \
deterministic, for example, the height (h) in metres of an apple dropped from \
a hot air balloon at 300m could be modelled by h = - 5t2 + 300, where t is \
the time in seconds since the apple was dropped.\n\nHowever let\
\[CloseCurlyQuote]s say that we can\[CloseCurlyQuote]t exactly measure the \
height from where the apple is dropped and neither exactly the time it take \
to fall on the ground, or better let\[CloseCurlyQuote]s say the those measure \
are slighty different every time we redo the simulation. How to deal with \
that ? With a probabilist approach. A probabilistic model includes elements \
of randomness. Every time one runs the model, he\[CloseCurlyQuote]s likely to \
get different results, even with the same initial conditions. A probabilistic \
model is one which incorporates some aspect of random variation.\n\nA \
deterministic model is a model where:\n1 - the material properties are well \
known, i.e. deterministic. none of them is random\n2 - The applied load are \
also deterministic\n\nA Stochastic model has on the other hand:\n1 - random \
properties; or normal distribution (of a given mean or standard deviation)\n2 \
- the applied load is random variable, e.g. wind Load, earthquake (vibration \
of random amplitude and displacement)\n\nA deterministic model is one that \
uses numbers as inputs, and produces numbers as outputs. \n\nA stochastic \
model includes a random component that uses a distribution as one of the \
inputs, and results in a distribution for the output. These distributions may \
reflect the uncertainty in what the input should be (e.g. a deterministic \
input plus noise), or may reflect a random process (i.e. a stochastic input).\
\n\nFor example we can use a deterministic approach if all we want is to \
shoot a couple of rays and analyse their hit. \nHowever it\[CloseCurlyQuote]s \
better we use a stochastic approach if you wanna run a simulation with \
milions of rays and evaluate their intersections. \n\n",
 StyleBox["The notion of a ",
  FontVariations->{"Underline"->True}],
 StyleBox["stochastic processes",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 " is very important both in mathematical theory and its applications in \
science, engineering, economics, etc. \nIt is used to model a large number of \
various phenomena where the quantity of interest varies discretely or \
continuously through time in a non-predictable fashion. \nEvery stochastic \
process can be viewed as a function of two variables - t and \[Omega]. For \
each fixed t, \[Omega] \[RightArrow] Xt(\[Omega]) is a random variable, as \
postulated in the definition. However, if we change our point of view and \
keep \[Omega] fixed, we see that the stochastic process is a function mapping \
\[Omega] to the real-valued function t \[RightArrow] Xt(\[Omega]). These \
functions are called the ",
 StyleBox["trajectories",
  FontVariations->{"Underline"->True}],
 " of the stochastic process X.\n\nNow, let\[CloseCurlyQuote]s start to see a \
bit more in detail a stochastic process.\n\nA stochastic process {Xn}n \
\[Element] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalN]", "0"], TraditionalForm]],
  ExpressionUUID->"c1d25e19-c825-4728-8ffc-de5bb5e797a7"],
 " is called a ",
 StyleBox["simple random walk",
  FontColor->RGBColor[1, 0.5, 0]],
 " if :\n- X0 = 0,\n- the increment Xn+1 \[Minus] Xn is independent of (X0, \
X1, . . . , Xn) for each n \[Element] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalN]", "0"], TraditionalForm]],
  ExpressionUUID->"11edc315-6d3b-4955-a26d-be0f6e1833ed"],
 ", and\n- the increment Xn+1 \[Minus] Xn has the coin-toss distribution\n\n\
On the other side, a random walk is called \[OpenCurlyQuote]simple\
\[CloseCurlyQuote] when the size of each step is fixed (equal to 1) and it is \
only the direction that is random.\n\nBelow are all applications of a simple \
random walk using different Mathematica approaches that have all a common \
thing ... \n",
 StyleBox["a random variate to generate the next direction",
  FontVariations->{"Underline"->True}],
 "  :\n"
}], "Text",
 CellChangeTimes->{{3.8138592644623137`*^9, 3.8138593316257687`*^9}, {
   3.813859393860957*^9, 3.813859483477968*^9}, {3.8138597001987133`*^9, 
   3.813859755392466*^9}, {3.81386081779856*^9, 3.813860820899151*^9}, {
   3.813860873823965*^9, 3.813860874429655*^9}, {3.813860929666375*^9, 
   3.8138610100155067`*^9}, 3.813861057318317*^9, {3.8138611179993973`*^9, 
   3.8138611399539757`*^9}, {3.813861233023218*^9, 3.813861269265029*^9}, {
   3.813861317058166*^9, 3.813861323449184*^9}, 3.813861460944309*^9, {
   3.813861497409163*^9, 3.8138616310387774`*^9}, {3.8138616713104553`*^9, 
   3.813861698763214*^9}, {3.813861943931481*^9, 3.813861981281354*^9}, {
   3.813862025034768*^9, 3.813862040358706*^9}, {3.813863045148032*^9, 
   3.813863236467307*^9}, {3.81386327417715*^9, 3.813863276881937*^9}, {
   3.813863311913457*^9, 3.813863341920793*^9}, {3.813863383592916*^9, 
   3.8138634080742083`*^9}, {3.813863465993485*^9, 3.8138634783132477`*^9}, {
   3.8138635429855003`*^9, 3.813863617006116*^9}, {3.8140069469625397`*^9, 
   3.814007104188313*^9}},ExpressionUUID->"c1cf8328-d9cb-476f-a543-\
3635f52b5fc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"size", "=", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", 
     RowBox[{"Line", "[", "\[IndentingNewLine]", 
      RowBox[{"Accumulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"size", "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", "x", "]"}], ",", 
             RowBox[{"Im", "[", "x", "]"}]}], "}"}]}], ",", "Listable"}], 
         "]"}], "\[IndentingNewLine]", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "\[IndentingNewLine]", 
          RowBox[{"Accumulate", "[", "\[IndentingNewLine]", 
           RowBox[{"RandomVariate", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", 
               RowBox[{"Pi", "/", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"10", "^", "4"}]}], "]"}], "]"}]}], "]"}], "]"}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Cyan", ",", "l"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.813845901888069*^9, 3.8138459018895683`*^9}, {
  3.8138459756318483`*^9, 3.8138460464602613`*^9}, {3.813846096727118*^9, 
  3.813846131651429*^9}, {3.813846163620575*^9, 3.813846177749082*^9}, {
  3.813846227158746*^9, 3.81384623942699*^9}, {3.813847406339579*^9, 
  3.813847424431275*^9}, {3.813864660330968*^9, 
  3.813864664900196*^9}},ExpressionUUID->"7c8ad749-3856-4e2f-ac63-\
7d5724014ada"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
K3LfyMuTJR+u7D90lon5q7/+Y03Ik5Swot2PdG1x1afT1emwPCmLj1u2cJ0t
LisGX3HtkiU37ub79WXbIiqq9kLMiAzR2ZenI0W9/zR0YulXcWky0bP++MnF
tggT+Z0oYyZBFozsW54qYAt2bMb0wl8ihD/w5HBEFRN+z3fYzfwTJE+eae4t
DWFCfq3FHyseUSLznaHs/YeBxb/vcnL/iZElJ5ewxZ8w0P0o+JrnRilyPzhk
m+9dqn61SXmB62SIZx/P9bPVDNh8Wt45R+WnE/rapE6aiSd5adKlrXLkppNv
QpMeE22TGYOLHiqQjWH3VzxOYeKgpoyNnY0SeaPx30TzLBP7RRYxB+2USKZP
g0Z1si009huOSH9UJJJdRs+EJmxR2vfn+bS/IuHS02/N0rLDnme3Hf3slIn+
8rqdnFA7CDvcdZmZUiGZBz7cKaTWK2xdrbrVQo207JXU6M23RaPfphvHYtRJ
StKanoxKW1ga7ItbaaVJSpc4GQ9mUeuXuv1dbqZFDKYmju9JssWIT0RMpJE2
4dBKGbtKbPFkfa1GgaoOSQj3t7Sbb4s7x/mWXf2sQ4pXZvvTLW1xqvv3Jk6X
Lrnku/7oM+r+pkseX7rXqUcK/Qe2CvjYQi80KEXpqT5xSW1+t8bDFpf4vwlV
PjEgCdms0XcRtvC4Wra+6aEhCY7srLyqaIvEaC752SNGRKvlbHmmly12D+f0
xO02JvF7a66kvGHCKqjj7PUxY+LMfpMlsYwJg/GH+3LVTch8hzclvF8ZWCV5
2C7/njHxlf2WcHQXAyGhQU9PhZuQgz7NY7zSDIRdjvSV/mRCzv+0j5MossGl
UPfXzaamJOyr4uD6ozbwF1G7fN/UjPR+fuySX2qDkGcTiiWm5qRxU5fuB2pe
GaZSiscELUht9T6zfD8G2l36l+gfMycXMmwtzqxnwJSpXzVSYEHcn+QXSlUw
EDA3x1rBsiR3trtt2CvOBMl7EdKbbkmYlbw3SllMtJtVVqhNWRIji7ya9XVM
DDEu3Ac3jWyR68qcY9iiSP+JN92URp4uXmMqvsoWD34IVTdW0kgZV9WpK1K2
6HtePzAhQid0R70j8yVt0Xn1zuzYfjopcf3u5vqFiZa6W/FreazIamXh0YYp
av4UL198k2pFRM3PMT/eYoJu5OO9/I8VCcq65xm1kAnpja/vRllZky0M4rHp
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
LeA0iKUVnWtlITmQfFyWRTja2z7U8t1i4fUIxzGs9xtHMP+Ru/VrFv7UFTb9
uTPImRrKOdNpwob+xYczsYfHOS4bB5yqqP2+rLnf2rZ8jmOo+eZdvwsbwj11
/z5e5CWTDxnNRsvYuBGRHH2tVJB41XUEnS2mvk+Ye28nI0rOm81L1b7Chv1x
H56bvJLk4KaS1lYHNszany3lXidFmP05o6WEhc2i9Y/pw1JkQ92j3bruLDjx
l3c4b5AiHftXLAz87ASrS0uZzWelyYmxnid7opxgqrP+ZJGINFnHOB/ZO+eI
hW8bjp52lCGZ+5WaC/454setKxPLHWXJ0bGWArQ7oqNst2+nrjw5ct1vcHC1
Ix6p0087iyqQ9LiLI4K/HODOf0nCLUKe2Bxy/9VzyAHhrS+2VzcpkFfTnkJu
KxwgH9BqUlmmRC4G0J8F/rPH+fW2luJ9yuRIx/HnfR/scfHg/E3Bn1RJ6TEV
cdVsexzeYPKyMVGdMN9Kn5BQsMePph1XjOvVyFzLf6eTb9mBtyDdXy1Blew7
V7/+trMdwhMzFqw9oUJ2tTknRejZwW5hUorSJSWS/WT/yTlvOxQZXHC90aBA
BN/NFIsM24KueWXxPR95YspIOZl+zRZuqWa8PwtlybxFR89sPkHpgWX+8YLH
ZcjvfT16aXq2kJtxSj/AJUPM2VyZL64zsXJBYYCpmjSZ6zFLyT7IhOv8pf0G
0RLk+QPlklJ5JhpVdrGWdomRlSOnnG2rGTj0zrnhq4sI6Q9jCMctYWDB5eab
B+sFyaeuEuuN0pRelfB+8tCbjyx16RYjLTbIXBgaGzbFRQKe0q8UnbPBEM9B
+/P2U5xk4S7tM8U2kGZFux33HuIE5ZYmN5bb4BS99NmW0m6Or2ZI/DMNBkK2
tZlsP/+Vk2Ke2653iIF9nZVGZv9+cfITE98e5mLi736a+uLhAc7HatnepHgm
hh+ez2pvH+Fs4EtdkzDARMXHAw+N+kc4v+p4lsrFU372zcDV+wEjHKb7n5Lm
j7bw9r8c/nP5BId/8ctigwA78B8/I8xY84/TEPvopz+ljxL8fztc2jLH2Rlz
/lu0qj0it9emGJbwkECi/0e0kPKvlqsilDp5yekFR2S1Kf4eCP5ZmePITx6p
7+jLSnDA1yN8py9S9RnQjSzbMeCAzguPXkezBEl1S/vAsxWO+KQmN/aB4pt3
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
L3651xT3/Rebew5QiX9KOl1N+i1j82HTwhoqPrPujK0MNsWhA0/3fKukoiqH
d6OCKumHqLB12+KpeGfgeHZ2uSnGTzzSfWNDRfv+fB+1VaZo1WI5FAhT8XRs
zaCkjClWfC+a0B2ggNM4qqSKZYpPjQYHQr9SMLjEbePkRVKPqx/PMecouGnl
6DDVbIrMyLubX8xTMDpSKPpVwAzDnj7CQwTfuvfybmLDDM90gyv++0LB0e/5
MnlHzPCwTEb5lCSV+M6y99EkH/MffujZE/wJs4+yz480w6RSpM7XJCrmJ7fZ
DNqboaA718CtlQqnjrNxX4zMYDJw7Zx0CxUfM07Ejiw2g83jx4eOd1Bx5Mjz
DLvnpngTnKBXUE9FyOD6tH1kHnzThexDiqhYIZnkJEAxxVrrb/ZG16noG+wV
b1lhitT8qhajavI9WdufyR0m6KetDl90moq5X9T1Ps9IP+u1eKlTqbjvIGJi
9tQEbp3eIesJv+ZsX/pI9BKZn5jUa4YCVCzUrxyiE3z6q9g+ZKlFxc3FM+HK
EiZokwvoCCH1ztTh2RujQPBpaujVuTtU3BPtW/yQk8zHLzZNjdR7e5vw/EqC
jx/LDg8O/6PC3vfhnkyiY81q8o/tlqKR/btbBOuM8YufkfafCg18tRvPN58x
Rt/WRU3JcjT0Kpiv46MbI+oCBy1mMw2Lqqsal64wRqPC4v1+2jToTZulZDYb
QV7Z5MVHebKfoa758IIRTnT4B4z+osLTdOSxSIERdHWW7o57Td7LkBY0JL6r
rEh8+E8+FS92nzQIW2+MVTGXRk+GUqEfxPkrW8MYKy6coVi6URF06UXurmBj
LNUOeN9iS0Vp7YYl0w+N8XdzxtjnQPK94KMV30ZJPBHXy6NJP27+Eulwf4sJ
0haFeV8uJfkfdrBcxzKB+pHRspJwKsITtox9Jr6q8f7GxhoW4SfVjBzhYyaQ
zTcTe074gqlv+9yJ+Bwfj9g7+3QJnxR8aUr4aoLHTras++S+a78qWmKIbzot
9Po0L+ErrjLOuyYGppgNKl99GFRMcwvzjR8h+DkoKTZmTMXhuR8bP5ab4k9e
8mATBxW/r/Me67lriiUzS+rrXlPgr2O/fEOCKSLCa3+vSqUgwCXxSHopwfs9
2TENDRTQwlVv3B0wBYdMaKHJYioMM1eeZnKZYdxWvOjcAgVz95peGVPMsK+p
4EC1KhVv2A36hVvMsKKsU1YomIrvk6djGOvNsP2kaUxbLhXdbSrHKudM0ZgQ
YiQ5QoXgjck9omS+nN8oNGwh/RB6cSmlaakZPnzeWyfiSMOpmC16zbJmaJta
FrfVm4YDznR7Q18z6Cnl6QsH0DD6Vduo6o4Z7nyNqI4wpyG6ZTjfs8sM+ats
r/LtpCFmaOnxnDXmYNaWP98RRQM9ZG2jxCfCSw4+BlwVNKguU3JKfm2Gqcuq
RovnafDMil2n/MwM50RTNk8o0ZFwsHMilZy36br2KnEfHc5OFjcbfphhfWhY
o1c2Hfvc1+ftfG+GGF5+Ze03dNhl/Wof5zJHRkKsyKLlFqgW6eRhbDPHZsPe
/jJjC/R3hdz/SnQ2Y+7Jku5jFvj3LWr6C+FV59bh46OPLWB3jPfjLXXCc56/
YoT6LSBEuexeT3hv/fFYgxBBS2Tt1nEe0jXHfmEKf4CZJfJcXZ7/W2uOCL8m
gTQXS/TGJb7eRnR+0a1szmJTSzQpru+7kUHyN7R4mzwsIb98rXKdmxmenshO
TDGxxKD99ZT+/8yQSzlol/6fJXq+n6ZyEB/0eU9gwYiGJawDVr1l5pti62+v
qxeNLfHv8c+2PQGm2Jk24NLrbwklDe4eY+J7X22LbFRmWKLhgbFXHPHNs+rR
d+/JWmK5x6tF/96aoP6iK4/fjAU21SjHeD4xwdnLghdzhizwLWT2s81BE6Ln
PG8+L7VA1UzLoXIa8eFLLl3gO2qBwuRa72otEzRLZinYGVhghj9Jto740BuZ
5o4BKywgtejCf39XEP0jUnfK8i0dajUUV4wbo9pFftkBUp+YCc/APlGif2L5
pWYu0yHhXrH68Q4TOAe0fhR+SEff41UbNxMf/pBDZ9+VBjq0IrJ6hhtNMH7/
14OgZjqy6spuvucj88E+3eyaTgfryF0nU6I3OjU017z1oaOEzb4RTnytCNdk
sWI4HYqRyUsGukm8wieFi0LpyHRav2H5NROIWSSrxdrQEdkt7eLvawLxLp4d
O0zp0Eu2fuUjawLuPYs9dnHQ8WDM48H8RhMosxjDTa9pyObsYCsRPF1/O3Rs
oZAGq6loDydjEzhW8n0SLqDB8fl+HtsTJhhy1s91iKChtPhp8PFbRP89iz87
YEhD4eVVnyOKTbCHM2LTykU0CM3rWN0tMME5+pWcC80E7/pO9eztMcGp3Irx
Q01UbH13Sm8fibfLLd20fY6K5H8VyjZEHy0PNOU+so6GEoeax6tIPXivi9nX
ETznGFWdDps3hry2q5vBSvJ9lw26n58Z4/GOsOf3RWnYOvQ5s/K4MZ6plTat
tqeBvf3rifFUYxT8sAi0T6Sha6XEsV2njeG+clBY4i0N1gon3uyMMobv7bDu
xcJ0BK3aEalzjNSz4BH1lREdb2O3c4zcNcbB4ECtFXtIvnhpFy9/JHxSuUSl
jELH8ZDnUgdJvY/1HTUKX0sHk8kpHGVmgrUse8HtAzTYD7JZ8j4mcHIpnIpt
InjyJrWCJ8sEU6VrL1a/pEGfXZZ077MJxkYWf1nUTsOJ7xJDQhKmMOt7Jp6Q
QkOWOlfjMg1TbCvhW8afToPf7fXqB0JMUSK25F1PJQ1ObJOPc3mm4JSblmiK
oYEpdeXk7zqi//qFOaypNLycXRU1X0X0TFSmi7sPDW0eF6bUzpri4P7EV3Xk
fJWHU/EA0SfvNAcFvB/RoKS5unzLFlPc9b/Q/qSThg/XIrszpkzQIrwaN4Zp
UDeWsPF4ZAKpaW3+yDEaoqZWT4QEmWC44WPkZfL+6oH4g4LEH0hvosVybafj
ovOa2pu65P1fk0UDT9HBKVmfGS9gglfXjPatqaUjgN9iMW0N8SPjA09FO+hY
fFBhuO+9MaY/np4XGKDDd/eue61XCB96XedYNE+H/vPdt6pdjfHm0na/qXUW
CBa6gvtbSX1KBjYfGaVjXdqx6tK/Rth1pyf/0AM6ZGQ8ZwoJ/+Z+kA0SCqLj
w8lvH0YmiH/TWPsqSY0Ox8bDurI9RuBo33D1v780BN2ffLib+LUzSI4cJfk1
szax/ylsDEf6y2qjUzSw1pdK188ZwbVE1SCU5Jfv3WXX+mEj6BVMXbFdRep7
beDsGJ8xNOpnu1qIHrC0uX1Ck2KM8/0KX1SrCB85j+dc8jbGRIN2SsJFKi5h
r4hdojE4vxw98Jnw813jAT7qTWNklx6KFlOgwpYp6pn9zhhiM5UclaJUHFg3
lflzpQl+7Jj/+aeXAteevKVcxJ91v+5TVnpAQf67t9MPmSaYlbnKKXqC+AGn
xVaixH9YXkh+GJRCga/fqshVRH+l80tTtrRS4Mxhc+gV0WvLNziePMRPRaRS
djzfKKnvuPe3g8SvnnFOrLlE1lHZLrGZZ8j9caWZf5aY4m8+b/fXbCr2HFoW
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
Z0kqfrktVwmdZiJuQNPddzcVY1sluLWJHlmZGfyg5SYVb7dXxnX+JvqjIOBg
EpmH8al8Dq9xJv6m3n5lu4aG7DC9kKtEz6cmZ0p5WdKw9Mm68adTTLSnKtVt
iaWhcF+1tAy5P3vxj6Jlr2jYNf2y3W4xC/umcmhH/tFwYn3qiCu5Xy8++pW0
JB1yz0WuR3aQ/jp5MmG9Gh1aN5V/7SlmYvfd/xSUGHSUlee1ZZB+7jfN7hXy
p6Nl5lzuqmNMdO/f0qy9k44iHuHr6qQ+Io26tDxDOrzSuIQSTJiAZyt/rjAd
6ttV3ZscmdB/+WH1004ajLfmx3l4M2Gks4TLoPD/+Fb2MMSaiV03Pnxo+EDD
xUe5Y1akfjOZGeKKxTQszGemP1nPhG/EUocKgm+CA38vl88y0NI3HZ+USsMn
jt08NT0MeKwbj9V5SfDuxKeWdqJvghby55cs0CD09+datw4GjtA8Ln1bS8cW
0PlufWdgTn7+bbcdHdfW7BmrmGPg11cusWOudKRdt07cLUbm98OeOa0EOkIS
j2R8UiTxRvBcKm+k4/WwiUMO6TdfuvXpzX/oGGTpSimwmXgcY5FTMENHY035
k2XBTNj7OZ8X6qODFp3+6dBFJg6opjWuqaIjWmSP6TMy7ywFlVXhXXQ4fd03
JV7PxNtdTbdrRSzgrbjJOIzMZ1JH0qTTdgtwZiwT29ZJ8q9EETweZ4G9e7bk
DZP+czWwmaQ1kvNZWVyizUy8NLt2fYDDElfzRcpW9BL9cv1g1G1YomY/q7pk
lMS35vTnSVdL9OvPfLlF8LN/wOy6yjVLuIYZ/vwiwMJJu6r9W3os8fKCaCxl
JfGvfqtb5FdbYevF+YU3pH/WFO66LW9nhaU2N3/+ImtX94QQrWgr9J6Lto1Z
w4K/uq+I4RMrLOR2Ka6TZeHdPV968hcrqLS07kwHC8Y3zsilVlnhfxRdeTiV
XxfNTJMGSRo0SCVknocV917TNd73vfciiV80kpmUJCGJhFLGSmlQhhJJVKQk
RKgkRWlOGZKp+M7353mOc96z915r7bXVU4Et185VOTviXfJH7dQ4G6xqlVLW
2Un8iG/5sIUzub9jJPBRhCOeb/Z3+xFig+3rMqVWkXn5uF7DzdwsG9SE+3n/
u0Xm018rPfWO2aClucamjvgd86NuUubRNsjOFP6S9pv0q5oXuoGWNnBUnFP0
Z8oRwkaCKWm2Nrj7vML4jRyZtyLyeCMyNtjw+WEyR40D04n+35S0DZTUQs+x
Hci8eTvwG/czGyox48MiZL6qUFuw89RDNholBN4qEL8jk9SZl9fNhpVe/+6t
GzjIKWvJkR5jY9rEnuUtc8l8FX3+gPsIyaft3+ltA2Se36+lvuUfG36KBZKj
LY7IOSRC6c23QVhz4obem45Q6xa5NtnHxviL9Ob//32qoF7FVQoFbLyLcJy7
gMR/e+vg9B3+bKSZdLacSXIEv0FGYo8XGylfbWUlihxh/+GPaIUNG2ujRUwT
Gx1xQLpDsteTfD9jbInqd0dovPuat34rG2XXldcoz+BgQbHa9j8abATbhNjr
LedAZM191zIBNlJ/J2rN0CTzcfqcpZtqrPH41sIGEwMOnOtWbLuWao3QySeq
q0h+nEzu3BnZb43pCqaRb3w4cD35cEZ4mTXyB1/9ad7HgeWRae23v1iT/i70
zzSJ+LsVclf67ltDO/jLD8crHHibT81bd94aFsX2Ch5kHuZEXLh6bp815hW8
5v56ywH7RZlbhYk16mlbb81vHBz+UJYmIWSNos/Jy1x+cyB0ao/G+horsBZL
HN/2h4OZ21TWdcdYQX/s+uxVZP6OKRbRPhpmhWMPaf+45RRMmV+V7J2s4KXV
/eO9AYXr5XnM5bJWGD7RvHsUFPHn26ZCXlvi6yVu2xUjCnT2p2rRHEtMJWy6
16hGYaD3ydbX2y2xOlzzXQ25b+H5tAt+pH+POqgt8ZpN4cWrvwNtsy0R4Dtz
3iHyvihX63I26fdygqc/ihN/+ey5+TH+ZwvIzPfSP1dG/Kt98tKcAtKf+r7f
eHaZg+k1Ktv/HLTAcKmSxX/JZJ7vShaqyLYgfvGBs2Qwid/FNzr8gQV0l7V9
UXUh/jahdqdzswUET1t0zzEk9ZKxNgwhfmP1ifl+LUs5mBtC1XlHW2AT4+qv
/JkctAZHRJ8nfkByx+r61wrkfXcCb0TTFkiPbnXezOJAJ8Z+7f5NFnDlLKhQ
9uJg9dz+QS7DAuoGOa7NUcQvGx/Zo65I/M2Ji9Ui54jfHfXf0t5njm0zm1su
5RO/f4JhJlNojp6nW9aOF3Mg3a/D3kT8/fyqktELZP8Ea5QVxzRHV++K57tr
OKTveLlfkTdHyeL0sB5S78iVzHlRfSykBHjPWfaL8O/3TOajchakNXMVf5N6
Lnl0NntGMQvc4ymZl1ZQcC5vHH2WzoLAebFdV0wodD5TuLconIU5DlHLBDZR
iH190kIshQWEzLeYG0ZhNEIh2PoAC2nnM/fxTlNoOGLy3IPFwv69wYHfLlEo
X7PildZ0FiSFupuf3aDAfa34cPIDE/JXnGT2NVBwjzhcJ3GBiZOfY4IvNVLQ
/bYmRDifCQcqOSO4j4LbuWg/n11MGAxXuLR9JffbjtncWM9EjZvEke+fKLw6
PSckVIwJwZv7lI6S+zyvPI8xaGMgnC2217WcghjvY6rSSQZeSX462l5FYVOZ
s8whVwai2iLrc5rIOuxKW40jA99PUOJShRTkXgsf3mvFQGLwlllOxwn+Xl6M
/RHLgMPzKtdtMRQuuLlkpuYw8J+RmuqqCxQCBGW0igMYWLuJcdq7gsKTm3EX
j3oyUP8s8NX51xRKE0f5P9zJ+dkyVSfHKchvavoTpcDAkyD7tIKfFM5cv7e+
T42Bshv21PrZNBoSO8zG7BjI+7jYdbcijVOF63xXb2Hg5J6DER6WNBzyZ+/5
rchAaminpIoLjZCDPREdv83gQZ2uYe6mcXjJuwcCX8zA3bB8ZU48DU/z2pe7
3psBPj/eReTTUAp+dvyeAAPD6eae2x7TuFe/3VG0zgzJd/8567XT6JRcPVv1
vBmm5BscdlaQ9+hoKBmXmiG+wvi7aBaNWI6q3pl6M3gG6zgUHaCx6Gii0NlJ
M9RbO+6ZRb5f0PrXvMWAgYrbFYreQTRaP9y3ehTIgHffDK12LxqKlu+nkqIZ
iNy2WuO3OY0eDYWfBokMlLxXvm6ylob99h8RhccZENp/vG6jOI3Nb68+Si1j
4JvqiL7hLwpfDUbzw9tJ/o9Fdw08p+AUK9C+Yz4T3wsb1op3UvCSPPA5z5IJ
AfbJO8I/KEhcEdlqEsbELd2s2JfTSDy2lqsu5DGhr3SK7l1I8qt566FfIBP2
q4ZNqtaT73NHbnsaMxEgoF/aY0hD/ucCjxurmKirai5skKORZZz0NpfsX8jR
E3gkSCP+l6fvyD4mLovI/80eo/C0sWXxvEImRg4KRbyfScPL6F9XwCcmrhkk
qvxYQuOYGj8t8wsT1NaXhz+T++dEPb0hfIuJzGmBSqPraNRkO/kYZDCROOEQ
W0DOd5VcjUo9zMSy7Sub7hO8rLjh1Cl/jInk/BadcYLf8b3GbW3XmUgNKfr0
8CaFe6lnLljeYEJhUUHdqxQKvUPpKWnkff/2bBM3iCJ82xurI2RC7rvQ8vBL
KIUtiZVzDhL+CDuHh7cfoTCmIHlJUIaJpJFG7fuEv8cLC7Zfm8PEN1aN5tHH
JN+ytT7qYGLp6yMLxt4Q/CpEVK23YWLeXcMp278UkhO826e8mLikOLzx1CIa
yXvi1gz5MzF5maEsqkdD3eP5wXuGTGR4D26cbkXyIabxVWOKgfNWbuwWRxoD
3y9pCE4n/K9QK3Lxp3EkWDbfR4uJ5VIzk7viaJip3RGuI+9PLzSu9rtCYyTJ
NdHXmYlK43umcY9IvjquLnygQL43pnVoeweNS5GVXQu/MtB5X7d/vIdGo9om
DeXbDPx7mbsz6w+NwijDlwJpDMwr+8afmMvFXMNNgweDGDAY26diosyF+uxY
3kM9BubeFZtbocvFhNI3VdO/hF9rj6Ulb+Si8e5Jv8kqM+Qd2/u71YoL0Y9n
50xGmuF8DnfuIYqLnOA/qxvMzcCLH13T6s6F8Ei42uX5Zgi7r5ftHsjFg9SO
x8+/mmLWAXvrM8e4uNh3TpcpboanC469r7rMxbX/ZFN01pjh0qvxqAcPuXCI
4+pf4ppBU7/+oeFrLs7n5p/ftM0MHQyRq8vHuPC1+fKak2uGkoOVa+2EeSi4
lhRzt80M30s0ZuTJ8KBU0W4+Qvj75ESlMEuXh/7Nx9gW3WZ4VFnP9OfycFPx
qMP1JQziR3oFJNx5sBLIfbvDmQGXstUeoTt4+G9m+bpkop9i58K3+8TxMF3u
8ryUOAZctYx6rp7lwWirlet7wncuxZkYrOLBPs1r9gzy85oXlm6++IYHxY8S
S5OJvorLlpZZTPDQ6LWX+dibAb+CrkoBaT4WnCjIWnmNgYePI1doL+VDSto9
wbmD6LFwpGenBh/rLSU19zUy8HjNHC0bDh+7dr5P25TPwOurEmNuPnxs0F3G
NSHnL9Sqq7ol8pGjxbS9fIOBRm2hKa0CPvwHSjOazjFwQNT4j1QjH5O3zG4s
8SH19Qo5MviOjyY1+e8TZgw4r2tI73zMxwqTcyvshBm4u/yxUO5DPtKsT31J
I/rqXKMi+vQSH3nKfgU6/WbI+PjBReQIH9Jtn7ZtLDKDBrdgzfcYcv8Dg2px
PzPENfipfoznI8wjOtVEzQzKQ7x08zg+9nxQ+es6bgrlGRqTlWf4GNsc9yj7
kSkWrfOI/0rOe63uX695xBTrP1Bn/iaQ/GzdofaKb4q7H0qLD+XycX7ewRRp
O1N829k/uLKGD+HBm/qPIkzhn22k+eUlH/d7Pk+bec8UUfGrTsq08rGmJds1
fcwUj3UOuag84uPfFa9vnhpmaJiTn7rnNh9qz9S///I3g4VawgTjLh/m69Rs
O4vNUPvaWGRnKR8K49FCBV/NUOh6L3MOOS84/Op5ba8ZzlXFR4x+5GN/75sn
+qS/6NTYrjkv6AQzj77LX7QYuHxTT6dJygkvdOdyNxF+vQndKvVXxgnWr8r5
rqQ+vyfpP7aSTtB3bxCoqGTA87CUSssvPmTzslQ9qhjAJrOMlmd83L4X/fDE
RQZKYzg7HG/wMS4e+i6thYGM7lgvmQwS7wwjj5NzmTh+LC4jLp0PmZhCC2s9
JnS3242du8nHSJbGyB2i9/8e1E87eI8PjWMbs9WLmegz9Bb5+4QP7UjPrcyf
TEj2jf85RvKl1i3kDxUWXreEXqt5zkeMY2Xi250seKr71UTU8XHuc+KJU/Es
MCwsNaeu8QlPf96LesrC4taEO7EEbwPTdx9cK2oOcQn9IH4FHwclD9mdgjle
PbrF3UbOJ71PnTx9wBzLbwuIOTbzMVhdnuKcYA6tVUvtgkj8xSuMpMTJ+oVS
rGYQyY/olaoVc2lziDDc7SaWOWF/q6f1qRXmeJhQ7TGp5oQqd/ErQu9ZKDwy
b4+NihPC65d8ED7PgsRGncJiso7+/lO1NICFp4burnUMJzx4Mzer0IGF55RI
0Xs3J5wTWWAxasiCsBPj8roDTticOq50R4+Focb2lXLZTji59vXutsUs5HdK
0DvvOEFCWV3Ia5SJrbKuO+a0O6Frp+glPGPiTFdLXcJdJ5R4WTvon2Ri5s+M
sFmFTgj+sJnV7s5EUdVClly1E3g9Lzm/V5B+JLJAYc19J4x9NHnf8IeBdMGW
5OjLTthd7La1qZSBjlvBd36T9ePBI1ubgol/kF4WNEjW0Y0zauU5xA9lfVXY
kugE1Z/caXYaDIi+ro7O8nfClePz387+Y4aTOxaqcnc4YdcXfE3oMENVwKyo
QrYT1B8V3LKRYMCrIalti44THq257vxRl4ElL7h3J1aQ+9fNFHK1IP5rk3fK
T4LnNwOhZwoInr1jm2hOL9GXTdeeZTgxoLAzpu0lwY/SqeCV808wMD/Tp6W7
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
Q/jmvK/lfP8LC/yrqj3wmbzvv7T2PjbRn1/F3hpRtTSuX35689VWCwT2cjU1
Oog/1UhPVFQk+mWUozhG8LGpuGJh/S9zXP7k9Uua3B+VYju+TM4COxZL/jxL
9LM7vWiX0CYL0F1n9B9P0niy1OD8twALSBgZT5fpodHyeuYUCxa4dT6hRLWJ
xk/RgRtmZP0v8nSJKslf9N/s4VFhEk9pyXP58zS+M0ZTLr82h5tN+5OVR2kw
0x2yluWYo/vbqm5PMh8+bmhsOetmDkZO3mo3Ms8rGDa9mdIwh7NmXuawB/Hr
Ztv0o0RJ/Q7MdQ/dS+a5XXZiS6XIvtkj08rTNKap12VpEv5LD14ovkn0vHFb
vpsi4b+f1Bnzppc0lq5ua77Wx8K7gmVpv37TCNk3ef/RdRYMMsI33/1DI3xm
hOxQEAvXJ+dkS5P8Xub/Zy2qzYKwh8+03C80Zjw+UvdajoW5Vi/qL4ly8eBF
cn5sPxPKty9VqxP9tlAq53oTvsnJsqXyFLnQUdnX1RrDRKNSt00o6Wc7dslM
f8Vigr01QVsNRK+t6Nxry5nYHXesvduJC+PCtroL1oRPj6e+pflxIbzt4miS
NxPrE9Mj7xzjYtC1YnEamIhNFDh94P/zoFSPwVlhJkb2Npy3I/pzK9EsMq+d
Ab0tx8dSyLzZlzhmfOYfA4mFfk9TdnDR9aC548FnBn55n0qPsObim0zJ2p5W
BmTlaquklIm/Cpzm61bGgPGDAFOfOaSfc88+Uopg4LJwd+AyAS7k3G+u/Mdi
IFfnV89TMj8Vt3a/1Zdj4LVAzo7bBL9GHSd2KX42wwffd35rSL52h7s8Ky4y
wxsfptzvURr2/R/szSPMsHeeCz+b+OXbA4dWLIUZ4rZtDa/9SuOU77bnmYJm
mL3CUufsIJkP1i7W3//QFBuS5MQGCN9nImg++4wpplqNfDitNDTSfLcb+Jni
ZfWAgdsdGlyrav70E6YQn2i+mE7mmY7dEWk5t01RYXfCM4jMOzKznJy2/DZF
8/t33yYJfjzqDh9ZLWOGsIKQ37GpBC8dHQNf7c0wvypo2DaXzA8BPXdYx8j7
5rUdZZB5qFhcTmQsywzdAQ9/RiWR/n4xJcRjlxlKhe5Ofd1Pzt9Z3O9gagZN
o3jnoJM0xKNyjh9kkXwomr/6j8xLN/Jezc1fb4YbpT0CfsQfPJlNP3giYoZr
qin/DH7QiDQfYqLZFJWqcRUP/9GYnhp3fiTFFD+sRt6IEH5OHZ8/sZE2RYfF
+zM7xwjfJ8Zq2hVMMWLwwOe/D4QvS0pEw2VMMVuP/qrxkMY7r3TRUilT5Fdp
q5leIPy6O62tyt4UJuXt7uvP0HjfLLHxWLQpfOhkpnQsycftxW9PkvwVvb4a
dpnMTzMriyqTCkzxwH2333Jr0p+fHR7vf2sK/ZrWKSUyr4nXBtmu/GWKpMZ3
cToLadSbao/LfzLF9/b394+MUPgb43L3fokprgSvVdnwgcKV9js9Ommm+KCu
dv7pIwrBkarT0pzJ+xbva46/S+F5i8fGSllTxA300ZvuUEifsfWW1EJTPEd3
v+1rChfnmYTUqphiy551EhKjFJgT+bHvV5gik1e00Z18f3pwfsgTHfK9H0ty
/Mk8/O+nYGOXDTnvd6hgH4fMozOnHHZ7muKbiVOKIZmH7fMqXtVqmuIvFaUp
FkND/YbtQc+pjZijvkytMI3GU4WLg/VvN6L4WVu47k0agimS59KubkSZ3SH5
u0Rfx49XzbmTtBFjUu/sBEj+q1cdiMfljXCoevK0Zhrhr1bUrar0jbhzQ4M1
Yznp9x0R7AeuG/FiUFKyah0XZm7drS6rN0Iv6lD3W13iV99f7C78Cmz/fmW3
DeGjkdBqE+FKYG127W8P0q9VRw8Wv8sF1i19njZM+FTpeFEt3AvYcu11oJAg
8ctptzY+1ASqhLaXdPXR8GzRd9sjBtyeu6yPRfQvZuNm4T0LSBsx+mc5i+ij
vzTll7cYiH55VFST6CdT3spv9K4JNlxa3lpH+uHVJb5fLfkm6PJZScUT/WZm
hA1HMU3wxjq/Ur2axt8ArajxNBOceEKtufaahnC/1JoT5HtjFpd9N336//zd
pfRBFLhlvWvcheill1KCW0eCCQ63fuxhiHARuLbaRUvSBN+Puyhnk3ydk473
/Z1ljBMLVr8qIfpSdunLHM12Y1Tde2X0kvTX/a/31X9yN0bsmg0/Bh6R9bf/
BMP/GGFxXHf4/38fMYORVN5aYITmwrh80Qwa8ms6Hl3cZoTdT1uW+hykYZyd
1dc2aIgrItN0nQJIv5bZ5el4zRCSUk83XODTWCzjaCf9whBRCSFHt+oTPpwu
etAHI9z/L/+bEJtG86pZ8tRVI6K/z5cpbabx5r+LtZYLjTE1e4/giA+Nz9Iv
OC+3GyOrK0jsHOHT0qqNVSIfjXGvs/TP2wgadhHcmEyOCTI2bxSr3kNDLv3E
QpdcEyjFzh99coSGmPG67CNJJnibef6b72Uaprz/VOTmm0Ausei9BMn/Fu45
1uLTxnh2dFBInfD3h3zDnRNLjHE9N6ayhejR+SUj7JTrRkjYMrP3AZlPNic+
XJhrb4TN0/4+qSbzyfTvQ/Pqmg3hfD/gphHJV/EJN34UxxBCXz86XyX9unbj
2M6P3QbYxnSJ2EXOd3//JN6x1QDcwNyiWIKP65lxyoV9+vi4WvuKNtGTM4rR
v7/u10eGWr68M+HHw/KSfkzTx+m0PJGFZH7apLIor+eQHsZ0krNzL9LImKem
ZyOqB9t1B4r/kv1eIa7ZzKO6MHQfZdqQfbFFreqL1HWhG0kbJtwleNrQmVLH
1cUnhXWpWp00RDbYjC6V1IVSgbly+TCNhtW6nxvydEAdeLKLQfyKxVORc3P/
6uCWfbb0SsI3t800l+Wri6G9fo3HCJ82h5W8O6evixffNT4cIP0tPVBiq1e9
DlLHFg8tJv3tZm/3VIiPDka0JWpekn6z5c/FlMp/2pDX9N1YSL4/GV+QGRuv
DaszPqmGjTRs5DVWH5+jjdr1bU+cid6+ltwjN5GphS1lmSqLib7/a+lqODKg
hRMpkrtWkPvK2gOsZqzTxiz/h1N/CB+W5YjufXVRG03mb3vmzeYi89vtuoYl
Ohh9LTfNlPBZ/cJquj1BB4czN4gZE/33WPtSKnOWLg7Znf7rRPih1uo/q9RI
F1Eib7xvkH7or6e7bZjEM3QpbUE00ScNm0avF+46KPiaLW1G6vPf4LGLLXo6
iFFou99F+t3E1YOr9zZoI9Vhg67BYRqBGsJzsl5rY+rKqk3eW8n+nBq/+93a
uKX8sS6YQfDyVDF9jbIORGKXadYr0vBN+vX5P54OpjM1hE7OJPo5/nGBRo82
6vlrvlpPo2Ft26iQeEkbO73088qJ/g/3lAoaqmujTjqoq+8FhbkL5sb5tmkh
qrl415oHFKRF5U/TzlqY5WUpllhGIVz6rZ3RB02ovvvS3ZpPwe2vvX5PpSaC
Rp6n6iZQEFOPe8RI1ETHtEa3w3sobA1cyjearQWNiZY2dV8KddvsfASCtDDU
vUZYzpXCrxC1A83lWhBNWn5NNpSCzN10/805Woinyn7sSKOwptBWe9ZjLaS1
H7R5cYuCoKZR4p1bWljoGvHraDuFUzHMBpN9WsjolfgnMEhBqMhZxGWFFp73
qWnr///Pu05n+hfJaOHR8t2CNhUUctyvus4X0sK/bQsuVGdQqBIYORIqoQXh
Bt13DfsoRPxa11ycrYlxc4bimp0Ungiobpm2QhMj9Jle2a0UHiXltgTd0YDr
aMnDIXsK095Xb7Zq0sBY8rdrXDUKtppsozvPNcC12HjGZS4F5TUe7zJjNPBR
lkWfG+EgddbZqhhNDfj9iSme/46D4TsFcT9K1KEUlPj5dA8HR9X+7H1kpQ4n
XoRI2TMO8hV8ORlNapgyrnHa/5IDp5HSWI1SNZQ01M/59IeDaVZGu5Z2qOF5
QdqewgUU/hzTPG3gqoYHp3xNz8+ikK0x+KTTTg0umY67gpQpjLp7/Kt4qQpK
sTf9kC6FGI/lVU++qmLlxKpSVT4FOTWPwJ87VMGwzXQvcaJwaK3I48m1qvje
f6zPPIictxj4IMFTBc/seMqqFAqRXjaF/nGq+BLy7lhCEQXnq06tAmGq8FOY
d8ehmbznY6vysxeqiB1/9czlE4Vixos1uTZqaBxtHAap16ajiRcKbqqhXq/a
IVmERnCyYZj0TzWM5N14IfOVgkPdyLFJBXW8Dfk95NNA8lueLhYgqo5f+o/W
779O4b+600JND9TwMGhl695kCrM9S9ZZm6rh01jtYuZJCp5FC9V1f6ji1uqL
H06GU1imH3HhUrAqFL7my/4kePzyNOfNSN8GvFy10UYvgMJYXYwgHboBqluE
dzVyKXz9ksW4s1cFpwVXnV3lTOFfCluvtlIZZc1X3u1gUFjsu3pC6L4SrhmV
2W0AhcZffh0RNevxmzVD059J8mFh5ZIlsR4ofdLq70LhwEf271/N6+HvvmxP
LOGHKvW7MyFFCfK8lWEOhykcdzwtxRdUxoGWvFOK5wjeC9eEBhorY+/KzwnM
+xRmLgl2Lpivgt4X20QmWih8Fl5WOnlHBc1h1QyNb4SfZ71vfC/dABWfq4lR
vQTf1WWPZdRJveaG9sz9S2HB6tpLN86oYll5TTeL5HePzbxAyxFVaF5cZenf
Su7fE+fh6KuGmmFes/gTCg1XX8tl/VLDQOY752u1FExFdwqP0+rwNG/8G3SD
gqvSI0Xd5+q4P/DMeC3xhw/nvHjzzUQD8dn8gxfrKdwX7T+pWKEBl8X32YLV
FGqDuk7zCT9+yZ6uijtPgW/9bqbITE04vQv1GY2mEKg453NbmCaip9Tn/yZ4
22S4/qH2Hk287DL4sIDUo1m6sVvnlSb+LApc88SMAttNvWBQVwvpc5/Na1Oh
8GJTwNLB21qIuX5MXXgDheildX5js7VhKCgpWcqicM3x+vDlWURfq/efveVF
8G+VunokThtyrSLneT4U2uffsJz6qw3PYJ8C2y0UbEKuPc4L08FMRm+8Fqm/
qs33selvdXCo93fKDHKfzS69nQ4Wuui613xHS5NCQqNRXX6WLrzW6n3atITk
c5H9hXBxPdz+rL+9YjqFJpEzdkb6pP+uYwWZ9HFg6i6+/WysHvpDlmtVt3Jg
tfzLbwzrQYJ3f4rVy0FVxenBlQv04V7n2sgQovBjLZ2h91gPjs02fpfJ/Yyy
rOQdTH0cv31DU3Ql0dtpM2IcHuqDaTL7l7oCBcfDh+uH1QzQ2GtY+H99UExU
eLuw0ACLPRxPD80m+N1gZb75qAFsJxYKs/s54B3e8iVpugGmm05vOvyTg9pj
fzuOVeojWSv51HAbB/yXuZMnjfVx/9OpdJEODtByggr5TuI77uTmMsBBhMLs
F0/09FHXt7j6Kom34rGV0AcbfVy/5y7PVKTw6aM15fxMDxMCAy2+q4k+ivs8
jrHTw8aQFuajVRTiA/nGTvP1UDYaESJM+PTrmu2ChEZdHJx44vaS5P99c8Ho
VLMuZpd5e7WFUei/+/h+i6Qe9C/1j9w6RfDsORbrqa2Hqm0NknqkXzwz0NKz
j9fD6Uj3asVGCvoT+XqrBfUxsjCQIdlBYUVyfUXfQX1cWrxmx+U2CslG+nMa
B/Uh+m8ilUn649IM256n/gYYeyuvEU/Wx//dEMwYNMChfRl/nvZQSHV6dWfR
ewPoz9joPIfge17Exx1xYQbQ/PpqtmkhhdsCbM4BRQM8/nTYy5K8b/k//ivJ
lQbYucNWzSWYwi0XyaZUfQOYFhd+HCT4dnjU639iXB9fDZs+GRoQvd2ev373
AX3sXZpS5qdB4Wh8mpQmSx/fnl5ee0OaQlle8yWDV3pkQGGKO4pSyNLQu7zZ
Xw93eS9u3lhEwbiem/VpUBd9ulyDJ+Tnz6aI14766yJ04asPHQvJPCfwV/fF
H+JnHlyovyRHIf9J6+YHXTqwLI6YEDch/TdleWinqw7oo/Xv7Eg9don6LZEf
1IbdkQbDMw4U/B/HebRFaWPkZ+XBNncK15cmCtZ4aWNCpTJ08iCFqLcv5+r6
amOl9QOpL2cpzPliIjn+TwsVHeGPuSQ/7foOc8W/a0FSSynhbxNZL8tffpX4
MZuAwtZeomdeO6vOpJ/RhlmZSO2OcQqTcZ8yVWfqIN7uafo1cRpBh8oCF/nq
IOGqjO/1JTQ22mT7GXzSwX8n7/q4zKGx3H2/6m0HXXw8yuBMTFJQf15+4Uys
LhTfpIT8JvWjE45P3/leF3/oOZ7bnhK9bQ2o/WGph7ltvt6ptyls095jtGud
HjKLLP+dPUPq0Zy1JJvgVYB/2Vya+IWM8PT2zRp6WH36qXE30feLAWq7a8Z1
kbmvq1uJ5G/eOb/fatZ6eHFXUs+C8LFpJUN1kZcenqyP0Z4i9ZqSq3XIYetB
dsHSJbmfOdiaLibc3aOLqwLUmfF2DhQjNR2ueOridNiZF2jioDRn31TesA5K
XZOHaqo4eOr4L3RDqg4a0icbRK5y0Kf2UsJvji7io5dNcs8TPjfUSZ6O1sUE
2zbT/yQH5w4cfGz5UxfXZXcXdV7iQNa6/ESHpx7OrDrYYXGTg4wsQcWVxXow
mJG7XLGRAwuZb7f/zdVH5LnjVQvek/vF9csmk/TR6fajZu4nDiTFN53bN4fM
J18a6/q+cHBZdPrgWx/Ch08XIuyJns1i1GckFhiAoTwQlFjGQUCl6Ybd4oYw
dzj15eFZDu4I7Oel/DJAwC2Ru1siOThwy1nq5j4DOMZP5dcFcODalxzVMJfs
3+90eObOAVUU+UWTzDt3rx7UWG3GwY2dMQZa3vrwdd/2YBpZa8v9+PH6px6c
XHi1yyw4SG7aXWPkqwfnZ2bBu8n+99z4Jna/Ljjf60wDTTn4MHABYad1cerH
nhyl9RwsKWjsCNqgiy3b5ZRDjTiYF/ixIfarDoptE5OYfA5ebZV2vRmggzui
Anm1WznQ2nNy+Lm9DgZKG4qOR3GwyPa1/SVZHXg+6PqaQOILL6gWvcTUgZ3S
2OtiUq95XdY1qasIXu9utjvaxUHDnKVBV8m80csJfGr1gYPCZNwMXq+Nddfz
Nzf/IO8tXZLaNK6FjYH0rh1ETx0+qZxofKSF6BvWr/LWUChsaudrsrWw++Db
8A5V4mcE/kfRecdT/f1xvIwWZYui7L2uce+1XyIJ1733cy99S2kQKiWU0jQr
IyMVpcxkVCiJBg1FiYwSUaJUSjSohPid35/nce7nc8Z7vJ4vbkn+2mhvho1p
r1rqCZ/2hDrs3fzUFD7Z7Q2DhEf4gT3C6u6msAtyW3TZnI/x3e+l1EZMIH5o
faos6cdPuqqevAoxgfcvC/ldWqT/vmwK6BsxhpS9l00tWQ9h3qe/DBsTS6nq
/2Q20dPlba16O0xwPuvPQ3MRPk49mnT68dwE5xxyRFsJ77L/uyh1KNIED01M
0pQJ79aqHXLpXGmCOS+KwwMf8PAsPHSWxwtjzJZ7H3i3goc7c3Yqi8YY40u1
WXgPyXe1lUccnm8whlDy0fwkopcBnYU1sX9pMMotoYfO4ENovmPMg2bCi0de
n6hYQs5XcYnZoG6MyOWNq/3opJ4ttCpe1dCgmGqpF7CSjz5D5nT3ARo4ymvj
OgjPZ113CI0nvLieyZ/JjyD6MFgizX1jBCy2Kvh8ktTvfx8KT6wzwqK09kvf
SP++fX2n4uHbhjB0151YRvjS9OOC/qQuA3iZpJycIPwiq/t2RuEbfVx4F+b7
I47odbhIitGIHmIH5zXKHSL3daF8tEZbDyFSiimrib/Q9dyno1qvi2P590pa
Xfm4GHTdL/auHprazfnSJF7l/c9+bjinj8ufLxbauxP9NldjfEgzwNOVKTIW
pN90HNoQnptmiKNO4vGPCa//Mx7Ufr7QiOjMT9O5pF/n6B2vKLIwwsiL1D02
yoQX/Fe+WCZihJ4vmgPRhCc2XVRwT7I2wmyu7MBCUs/Rh7xXl+oaQZuRqe9f
R+rpkEK2pL8hfKuvZMy9zcO9rvnN2f4GSKret2K4ikfyZ/GsuEl9PPpZ4PI1
g4c91W3WHzP1odZU90/1EA/H8d+1jg36OPVtNU9uPQ8/nUu8sFQf74Q66rTB
Q/xdhaLmHXrYmRBuM67Fw+lPY0tEU/SwKu73C/u5PEgc5ggqcvQwdX5ZNfsL
hea2Uc71cF1sEZ3oOd5B4UK9Aa3luC5appZnpldS6Ngwc9zASBdGUDRqOUNh
11t2uHq+Lm44aJusPkhBWzI3oKhOFxvDlldkraOQGdx9zMhAD6WnOHs9QSGl
uG+D9VI90C7xQrYoUXjT9gjvd+sizTtKaescCgvOD/67FaoDBRnRsVZhChsD
EudP7dEG96XO+ikyf/j1nk3XerVR92Kok6ZBwWqs9rr9BR1sOTEk1WlBIelD
sWl8ii5YNr463Y4U5G+rW7iS8/KU1RR3LafQ6VBBe5Osjxd2Zx5xVvz///s5
xX+VaIAZZglnKRcKcirlkiO7DWE6ve6e7GoK4gHPP2yTNcLZV9sf7QuksNPh
zdypeCOk8TfmKh+gCOe9r38tQsNRkaXZJ8j5B/IFHjIP05AXw3LbGU9Ba9Hv
qVvEb+XMPhOvkUFByL+hpXW1MeaeqGm5cpnCxFbBPb/uGuOFaFyQD7nPw0vj
JhSIf13Lkj7zkzwfcY+7gnIzgcLIas3sAAqXTgRzC8m8R3pguCOLglfn/FB2
lAnEqrfGzTalQG1qEPcbN0Hbr4+/XLUo+H5v2rt7mymWdbfVuMhTcGXnzXnQ
Z4qeAMYGqfkUlvyUkp1rbQa5oe3Uhd9cJNhuu86qJLwQUs5XmEGh5YHOAUkG
Hef0C0WMprgI699WcjKVju3d0p0saYro0vv35uIMOCn9uDCLvO+/6S6NSC8G
xi30V1SMcOH4tSlZi/B81f6q4VU/uPB3bdV/OcKAXvSX5c9audh9W6ONac2E
rc8y3ulKLjSdhrRf3mQSXm276VhGPi9YvyXrLhPMoTR5djIXP2lnm0a7mbjY
HcxdFMRFj2v3TKFTTDiUhibt8eDCTmuu9KEoJpQTeGUP6VxUrHJt2KXCRGWp
vftHZS4230q/9LOZASXDQM/AuVw81Rot/byBAc0x+c9r5LkIbIkY2TRAR9zO
JUUnF3Bh3PsgN3gbHU/PWCXGynBhcOHKtbFJMxyOrXt5TZ2Lyokm79EWM6wa
uxh0cTYXQwc61hX8MkMVq8praoCDVT94Q0a3zXBziX3tkUYOBkK3Bma8MsOe
ozb+QVc4qN8Q8mmaR8ey53PspC5w8PPPYLzkVTqE5j3ZvTiRg1dtoosiftCx
z9hTYHcwB+nPZ/ts3cLA1lvuoxcPcojfoZ5s+sCAgqEbKzOGg6xF4pWDFBO0
IYtevdMcaH4TpTsTnmdlv4+oSuLgzSWfDr0RJlwVg7KGd3LAZFg3qAubY5zx
rc6Wy8HRsDvZVQbmiLzMHJgw5uC7jE//nY3m6FXedT1XhgPeh02v11aag6N4
Y3CbPgdpEkHUnjkW6Ik9d17fkYPW3RK8ATcLZAU9jv2wgYPjLz4Iy+ZZwIbb
0DQjjIPm82c5KdkWKJLvZEync+Cr8TQ4cIsFlqzmb+it4GARdyZzg7QFaPsT
fj9p4mDn5+8Hz3EJf3hUXX3/mYO9gjfXvdS1gPV1ZlfoHC7KUx6t+XLJHJ8Z
/j9OknjezCz7VWxsjvkjj9bzpjmYs+CzVAbJl40BYnGPZbkwXfT6jMAlJhqU
hmjeplyMOt/e+WQTE8IX/p145sZFmWCk3af9TMiYqnANd3Dh7u+/8Vo0E9s3
Hvy9OJGL8ZVP+xavY2LUczY37jLJF92Ax3V/GJirxaYW3uPib6SQ3fujDGz8
N1cut5mL96nbVEzmMXAiqVSqrJ0Ls+mWxvzLdIi1GI103uVCZ4dJ3/hKOgw+
Xt0WeomLM5/uVx/m0DF63Wl+RDwXX5Ne9A7o0PHojLDdlwCS//v85Zs/mEFz
+fW4cS4X2+qGh9ceNcMvv7fsjVZcePxVflE+xwxWMfepaXBR2nHq0PRCM4zF
t2c93MBF++Le26dyTFH+uMVhkLyvT0rs+BUtU0QeUVu6dRMXNcoXHL5MmMDk
iM7GQAcuFBoKbuwuNEFIYa2Anh4XmUzPXflaJrh5+9fvIB0ueg8UVYs1G0O1
pFmPZcfFUsHZP2ceNUbhfO+Ru55cTC5sKfBYboyT2a2XGXu4OJ1ZtIQapOH3
sgcZf45z0ZjGzDl9koaeZ59XhOdzYZ8lqtcbRUPYzg8aFo+4oOk9sJok/XNh
scK2uy+5uLxkUeXZHhpce+4uOED6VeGZeraWpDF26k7a1ElRWLhRS4teSEPS
th7ebXUKUdEMuVveNFw/oaL7kOjPU5Nh38kFNLRf3dl29z8KCo1P3A82G4G1
PaHl2C4KRzf/3PffDiMEtwpqrI+lkMhf6hLbZ4jRE5PeKUkUZs9jqD0WMMQF
fmyMRxaF5z+h/kjeAJzbNqUyJyjUX87VmOWpj1Erm/+2F1C4+2NLgk2KPkYY
iw6X15F+b+Y8b6+YAcQ2dYXFvaNwU1dZ/kSfAWY6NA63jVI4piudX0nGvzR3
DbdJ8/DArt9GMdcQ8podU8PaPDDdQ3bdNSDqO3r+7B1bHmKfH7lblmqEuy/t
67bweFBfGLuD1mIER6PQ7nOBPNgJ2uTkzaehT8LeojSeh33rP9zT3UCDQ4Lo
d7ULPDDKPq4qcqNBUt91uKOWB4Ed8TQWRcNmGZXMF4SX9xhVn8oMpeGCfeZI
lAAfj/d2vOF+oiHIcHddqQQfm/mF2x86GOO4QZZYIuHX4FMxXRGlxvjvlqQT
g/DvT/0wtWTCt0bvdLZz+XxsyPgtdpDwb+jetT/8CW9Ftp+enn/IBIL/RiZc
d/NhPmPmzDd3TXDa0HTd3WTitxtKy+armIKnNXTRMZ/w1Zr607LZpnjrvbOw
LIsPulX27ieKZjhxYLnEbTJfc37NPMsYM7Q12dHfnSC86JCvsVaIjuu/Pq7W
SiLr5V9YNrGfjg1v9MPizxK/GX1sxdtBOsnLz4Mz4vnw0lvHjN5H/PfksLDa
AT58AiWe+B2iY+sdqWeaa/kYteiLL1WgY/25F5UHVvBhm6jacuw3qb+vu8V+
EJ6H97nQk6T/8148XPljDh+hYlIiyUp0TPtsHm/8wkO+/FN/4TtmmFcJ8emX
xD9ldtscv2QGm0cKWvbEvw1E1hzlrDZDjd2ltOpMHmb9iIoe/GkK9irZ4VgS
P6fvz8biLpvi8wZ91+adPKTM3Hy03N8UDtarky+7E55cuej8RZgiQf3YxxUM
Hn79J9Ur98AE258FvdtvTPxXv2HEn2ATWOdPvuTL8zBjrbyenCHhiRcdHiZT
FN5ZHj1XKWgC5zo/KbleCtsN0tc3OJpgg371q5cPKZwMq2Je2WCCpkGXpeH5
FL7siLqy/aQJhFoK4iyPUfD0zd2YKWUK1p7yuOeEX64Gbm/YEmEKK6ZdhOM5
ChoXafONZ5jhtMrJZ1eyKeQVfVOM9jBDyj+RX6Kk3gY2GSXp3jSDk2Nn7M7z
FI7kedCDW4kf873d3X2H7MdcfhftsxnOpt68wHpN1qutz7Qi93uipy+C9pfU
5+iJtNIsOlbeFbupNUmhcLGC3+lfdKL3MqN9UjxwFcx0Vygz8PvJrD+/aDz8
+S/wZOtxBkq7BeZ+JX4148Ea5UeCTKjrTt1czSb1ZjnHSdeJiQ/jqXN8t/Kw
v2Vb9K0UJiIdzuucjubBN+l3widxcxzhPLOlH+PB+bC52JsYczyYte0c/dT/
f96oWn7xpTkehg82zinhYa5x4AXVenPI+9kFNBL/HyiQdtHP0gIVZW0ztt7j
4YaYj4XJbQswTvg+O0v87NX3gsprJiwgGaY38jmXh+SMNVKZZCxbVPLncyQP
4o8L5ERCLOEksUrXdw8PO9xkt10cssSrkb3iaeHEL2vfn3QMsILwMe9M+xge
LncqCoV/toId87lvLvEPzqNLU6ekrVE6MNYRu4EHh4+8chcfa/zX2rF124r/
94PNQ2+uWGOptE2zpT7xm79mX2bxrUk/1rVfL8tDfUHN7arvVni+o+Q/BwEe
zqttNZM6bIUVLupa8SMUAjbM2ENNW+Kl89CmxB+ED+ltq1T///eHGI022iR+
4zFB6Z2qllh0qqc66gWFnMh697F8C1D3lp2seEZhj3Pxi7UMwgcVXw+09FA4
k/fMOvWpOc62W9VIfqegc8hU9R25b9GtVTst///3tOV0GK3XzaHpLCAQSvxK
8ABzodUZc1T0XtpDT6fQdPZ8UMkWwgs1zPrwfRQe7AmU9c8xx97CLa+uEr8S
IpL24o6SBf6IS/pvX0P4/rz15nn+FmBWDKt32VLYXRn74d0zCzRcLKU36VGo
ifGZYSRhiWvK+c+3SxBej645eTDOEm//itbSZ1M4d+54+qY/lpiqs1bbTPRq
1bOi+wv3WGH0x6cDiWOEpxcdY2X8skJPJPX4KuHl/Nj4onfrreFR+8fxdR8X
myTLo5c+t0a+v418wzcuAi6qHlZxs4GPuWNdLnm+OWf9vbslNrBr+7Yum/D3
StEPB5v+2eCwW7XDU+KPLsxrU59TY4PlVztoccsosHsYw6+jbbDwwLmbuusp
rPqPZSuiYIMP62cHxAZRePRpi+uZB9b4znbfuJ3U85dwTwuuuzXKj4sWyhJ/
0vCb4RHaYYVPh69Kfc2kYPNZ6rH0f1bQOd8UUk/8Dd1vU5ZwnhW0IuRzqioo
NL40Hq5ttsJZ2sf28ucUsty6is5kW6Ei2XtbCMkHaviWLLvXColRUTmm83nw
+bqRXyNljUtZOzUjdXg4+33cScTDGsfrlif3LSd6KHvyYYGYNehpk9czSL4m
sUqPiF6wwkEBlxnfg3h4EnAOojQrnD5xQ/i9Nw8i4W+KaySsYNI9+rDbgYcj
EZ2cB7WWmOmlUr9fl4eQWV3T5+dZIUjPMrJdnIfgCRv2tLkVNJ/f9llM8jdY
kPbO9oYVxiUcT20bpFB0/8zJ0X4rpPwMukcn/rnVJLOrrdoK9anicSWaPPzw
rS2L/GIFh7facpfIfq3Oed0WkLWGwIJb0bVkP5U24q82kfhutjk0MHGQh8ju
FXdUXlnj9WPL46+Pkvos8iu6v9gG3yay0mIDeHiYn2K0R90Gi5w20XJcyftP
KPbGDlhDckCn5oARD90tMY1pJF7VIpmTXyXI/mXKz+eTfPm1LF2Y/pPCt+U7
ptbybFAhUP9VmtQLp0rydO0tG8wrXs1ivqHQ/1tX8oCFLbInP3st7qYg872r
5qybLTzdz5tG3KbgLDOtZvrRBmO9BXH/CilUZfoGyPrbIKUmyCImj0KzruuU
6GwbzA4a+XwxkYLRPd9NC0qsoV739uvFPRT0LhwwH3GxRq5hsJm89//r+2Vj
VJcV7p+9MMeRT+4z8H3yg7tW0Kuqnxwn/vXxtVW5ux5Y4WPQm6ZJ4i9HubqR
NiNWsNnsa+H3hwt2akrLB09rCDvGhYz3c0lc1wSZdFvjinqOCGeAi3OVSgX8
VTbYX3PCcel3wtvCe2Mjikh9TP/QLJxDoV3g46ykSnL+PuG8UOKPd+rZ0y8n
22BzxsSuEUcKiilKl9+9s8Gcsj/8faQ+liYLCjUp28IvQG3nf/uJnpyO2Hfn
uC2a80fexieQ+roS2uv50hYnDQQrP1ykgF89s2+G24K2+4hTSQ3hw9ZXn2M2
2IL9/nrHRXLfFT9Wuz0usIW/ht1fyzEKK6i5ZglnbRFk/FtcXI6HFVZn7B1n
ALntSxQ2k/w0EapMbtMDHjD1n3kRfTr/lXbk9VbAYfY9mqUzDy96Zx85kguU
Ri97K7yGh1uTCwU+RwOpampzfUJ5KKiOlUg8CjSlVsxdd5oH0Ql4yMYBpsK7
szxu8ICwbwEHosg8R2tYh/CI8O99vw2KgHV+y2bN/s7DgVFzg8NPgYX6ivLz
RPjQz68+dFDEDscias4cJuOZQb83K7nYYVeQR/xCwju15vwZFnF2CCyIid05
n4/5Z6+/XHrTDjkx0erFf3gw/0nvMC+2Q1nxYZP4Th6qSpTlC7baYc5Zw8qu
Fzz49dKrdurZoa4ua+F/RB/nchvsxYaBj327/xrV8fDl5K3ivGvAYiXrl6xb
PDjO6uifDAZshkKy86p50HZ2e/LaArD60Nq5jOjtEto2B5YAcDmfzrQi865z
n93/GmcLeambxaxyHja8b79qrW+L001Opw6f54G31lGt7LYNXoyncxwu87A8
Q+/4fpI/m5PN5vx4SvR383NB4a+kv6psWLbiEw8sTovnH5Ivb+5r1xjP5iNA
fy1COaR+fEtDHy3kY/XXBNqlG7bo13JYPFeXj9vzU9TCZYC/GirjpYp8pA2X
3Go1AGR/9C13nUH4UopVITgTUDTb8/nnZx6M7uRt6yyzhc/3lgCzVh6u+IbL
FNbYYve1/dh8lezH4Y7crNe2hAO219me4EFLa8+nikpbvKmwXpMcwoOmWIXN
NXdb9GRI5054ET6UCDqlJWGL1G+uP0fteUgbS2NdTrXBrlFtrXxrHu7f7upv
H7LBydovvsMaPCjJsMfeMGyRN9F26rkoD6HFweET3rb49jAv/MkwBUvbTeN+
923x4Wl02udOMr5yYzqp3hYJtxIkR6ooWJtSd0+LAM8mjBP7iV9K9/SjwkQB
kdBqjw+HST+wWyFT322LU8fs3Z+Q/uC0+kel0jpbBAiq52qQ+ptcJl949r0N
+mbv7JF3p3C2YSLo8hYb9OZqxL/0Iv054XNpJGyIXygrjyX+bk9xxJwlu22g
lbbw+DpVCj2bkoxtPW3gtizv/CwhCmV+IuWWIuR9uzR3ig5ycXBnW1X1CWto
JB+QRC8XUk97zChFa5x4lrHi31cu/BTmJLo+tcLdG/2eicKkPy2nFW3It4KG
k3n6EjUKsWrFDw+7WGGDjiP/kwUF8/jvkX6yVog42O3+RJGCT9aDv7UHrPBz
nc3zE/MovD4n+6tozAoLvN5MZ0gS/hVrCCufZY2ClBlpW40JbwzfbL392ApN
p0fObHUj+jtn7Q5nIWucHm1prd5KwX/91tvqn6xgEDC76CPh5d9PlWwk9lph
0jmT1kT0uVPkWj3L2QqpruybpYR/Hjsqj0WyiD5+KNS40kFhteAk79mEJcyU
MqTZRA8OWu+SO7eS8If5uxlVRM/e6P0enCR6FrLty+15C3kwDL/onsGwxjGn
WGFhZR4aXTMd9IkeK9wMlPk5k4c1RfuNj+tbw3dqJPfMewoizaf1aU/Ifmy5
f+40U5gqHE2t9CDvH2r8sO0+BffeQ6ar+yyhv61cueA6ia9hk1T1JUtEX2Lb
padRMHU/o+m8yxLHzvo13SN8dvhabHQYZYmlm9+0v/ekcOD40Xc2yy3x+7ff
dTErsn9P7p4L9y3xIuNYcQzRj+8WgjljplawnPd2MI/wT+rEacvxa1YQl46/
IqhMgffBc9tRst8J8ygedCi4li1mPV1tjWsCL/scnSjUxdnMORlmjcn4BDdH
PwojMm2fq62ske29p397FIVMg8zuZDlrsJzTBpbmUni7a/DmvStWWLxKesGD
cvK+9aEWi1dY4dHOVxq9xO+P2K81frvdCmUi1tvXf6BgNUNzUJjEd+bnK/2y
xJ/oBHPua4lYY+a1fxfcyX1fWiieUeZojXYpu3tFJoR/iufZbS63RsLV9r5E
wi8RxYkvxzutcfO+db064YkzwQ0NHzOs8f5P0bjDYR4+Hct1X6pkjfDNF88t
IX7g553Vo4OXCH8pRIvEEb/C4E8wGwjfJO5q8p5P9IFnMxZf02yJIdfC28o+
PCx6O89LZNwSHlYJk0OEXw5nuSiw/KwQvVd2yTIz4ofmGi0Y/GgFZaVTnY+J
n+TFnSu2Ivmh7tjoXu5CxseqJD8VWeOwp8LnwdU89Eq7etVst8Ye8eC7OmQ9
EyMR7jdta3TVtjW4pfAQtGJRvmGLFXY1lF1fWkj4yFZU9grHCt65Vad5+eS8
G89ZKLRZouHzyM2EbB7uHDQ4yjhhic78EHYbOc/Sq/vDfFIsUV84sq+N7P+x
UX6iRY4lKpebb5Mg+1/eXz082GmJN3JnD9pp8bDWs0migtRDa8pzZ63FPEjp
PTp7JcwKzgeGWxf9o7Ams/uDc4EVGCENF0zfknoqeucq8o7M+zsm1T2g0BF1
TmEdyZf6OxqGNFJfkyPSkjufWoNfUrOo4hEF/SbpKcN2a+hfcnQ7T+LNrzNW
dTWywaZ1KlhI4g2RgU+VcjZ4/nFwQTxZP2CgIbl/gQ0OPVB7H2zJg7rpPE7v
Bhs4yR+bM4vPw/djafe/mJP51mzPiGAejI2de/uarTHybIfoDnL+rQPZa/MP
WsNMo6hg5BwPz017G1nTVlg7f/dHGeIXK2orcqjjpP+MnNyfX8bDsxdR8b4k
/ltkT81ufszDrKylQW7tlqi9oiV1/zUP1ldb5L56WaJbabvl1wEeqtONnJa/
tUDm4GPr5I/k/d+C3nnmWSCrp3l/hwAf5Sb7nzBMiT979ppWKcnHwirR0dxJ
cwiOK6TEGfLhdcmWPfbJHEVFt2WWsvlY5304ruGFOZKa7DIe7ODjZbeqXMhh
c6gdk1547ggfJ4ZCj0mYmiN6hoLn3QA+dq641dxbycS7385npn34CE7jKAu6
MdE0EMWcDOXjN7vXyUaDiekVQ099//99NEPNpw++MnDlCNtx6iofxoeXZsmm
MJBKLQ7nPeZjba1OzZ0nDLxmDcYLf+AjWi5s/pw2BhqTI/mjQu5Yp1NbK8Jj
ILFgz/jwDHfMX3v+yuXvdBTNM17nL+OONX6jQgdT6BBrlPNs0nHHwY0jVVtd
6RhK2O5Qs9wdf3t1LFoM6Nhdo63T6+OOGNV7luoOdDx/vvvM9mh3XNVUzhG6
R8ePejGFgwnuSPrNesswZsDF1lb5x1l3vPil+Sg6kgEr4cky4Uh3NDEFP828
z8ChlYE2cr7umDlzU+uKIQbiVWV7JZzcMfan3K5/IxOx3tJ9by3coaV4yVtf
iAk303X9UuruWOXvuOhRLAOKcV++7jBwB++7TX29PAMWStclhq3d8ca+/5JW
MR27bFcXO5B5a4m+yqwaOkrv6ouWLHDHVvOr5XhEh+YB3rybw3wEppYNJIfS
8aE+t3Z/Ox+dDqf2GfrQ4TDoV9xSwYdoktjc3mg6eO2dVO9pwoNj5ryOYTrG
frWrDEXzwfiervVjFQPjo7X/jNL4UIldJMQuZGAha46gfBkf328dcxJKY+DF
ccsvTc18LEg9tnFjJwOORU4ruYN87H5Bu1zmyoTHf7XTo2/42M696zVhzETE
jLihjBo+zoouXm9fxQBDnycVRfajc1IjVtycgV/W7f/J3uQjd3ncBambdHiZ
zIzLr+JDftFg7V5zEs/491latwnfFv17lXDLDAvU256y7vLB2q5w3eY/M9w7
IsRvLuYj9sHnM0cFzaDgacNsO8HHty3pNvMtzTCyqEjo324+Mllco////kxA
/G/olYN8vFl0iea/lA7X/tuFLsl8yOyxr3TUp+PE5bzti8l5Cwx6m9O20NF9
zrSP38iHp8KamNvjZpA94NXFe82Hj5ngzanzZpj3qcR5008+Nq5M2H/CzwxG
ibSR/8TckVJ+aoc2ywzQtrtSSOL36r6n42kNM0SlX27VZbnDjy3PXlFoinqX
JoYn5Q6+0L2+2TGm2DNw8NCSIHcsfNNpLbDDFGu+3/mYnkzGvv9Wbf9hglMz
94X9SHPHZiosbW2pCbq6mv6uLnfHEYaxXmSdCYxnWg+2tbnjZmvsWkeaKYrv
bDgV1u8O5UP+4UKRplD8eEjB7Z87ZrMLfx7jmkK0b+zW4CIPFPH2XbvfaoKz
9qX5TQoeONi28pOOpwk2XNpf1anlgarSG/KP+ozRHfHlzj9jD4iKb7nSGWOM
qfKpHctWesD/gOK34yrGWNvZYLlrnQdaFm/duKychi397Jxl2z1go2hZcNma
hqyutlfnN3iAvV1vwbHHRmD06J+LIvOK/rmxc3lG2HE7b33rhv//e2HTErmr
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
bNv2wzRX1FRr8o+RY768VJDaTlc4CIcI0klec2t/qND8wBVWc/18r8VTEf1j
jdr0H1eoPFxwNJC8PzWJG4Hu066QffPx6JEmsq9EWmdpdblCzEO7ZUKaBocH
Ncsb3ruiinWX5celQXdH8qQCOc7KWYk1mTTE6ebt2fDdFZ8k/RwDXtJw7EOq
0OcRV8woqhrdF6dDBdd7+pXcIFm8XlHfmQ7vl3b51aZu2KegnLY8gY5vwq2X
UkLdsDRa1vRXAB1W4qefJF5yQ2rS64lF5L18KrlhnfjNDYt7VJ+eIsdO5bg0
KO+OO5S9yxzI/tJ8OHTHheeOM4aKt0sOk/21oCfMa5U7nm1f4RxUT8e/+pA7
yxXd4Xb2XKd1D6nDJnm2WT1uSHSvd/9M5sjQIZ+a/Otu2D1rVrvrGB0G3Sf2
zYki99M1sUqog44vz3w8lcn96iWU/Mn9Rkf/M1+5zL+uWPPv/qMIkg+/PHks
qfTIFbR53d4vWkj+aVuYXSJwhY+yIe/NWZJ/claetyx2xbyAs5mU9XTsAGK1
b7pCvyazl6dGh1nmju/u98h8qL7E90wbDbX09yu/XnPF/dnyxqL5ZD0/H53/
Y6srzGsYFxx2kzlK19T++HpXGK/+WvedTkP3hv+sq/1c8ZHCnD1vLg3jduEv
vUjdLBvtk2kmdXnp6bK+BlI3h3uazjwmfVOqP7Mv5S2Zf7vff6vpoiLy8sLr
LrNdUTdcFJFA3rdmX0De+aXkfVaFv3AmdVtp42T9ARJvUyybPWlkXzo82379
rr4r9PQ8hjRJ/iltrJ67WobEh/ySpV5/aXi5ZtuFlF8uKL//ZeKKHsk7HzWP
rxt1Qa1aZWjFZlK/QhY9k1riCl5GGEvrHFnPNI9jHBFXhNdJ2F9opkM31do3
r94F6jKVxavJ+7gaeDiGOO6C7a9HmZmLSX1+mz4UFeOCA+cOMn6zyXVqlrCs
rV0QdWHTyw5Sr12/L052VnVB21vDRzO5LjDdfkP7MPncKYXVikZPXSB48MTA
JN0FyzJOMYs/uaBszd5twgIXiNaULX4+5YIQEYeyvx0uqBB9US6wcIXhfhOu
xBxXdKf+Pq0aStZ1TpCY3yJXxAzqM4RI/zJ6ZIiX/cUF/Q9+blxc54pZ6eai
/6PovMN6ft8o3kCSkiZSihShNLTH+ey9GjLSNBJCQ6m+GppKSXaojIjsIhEi
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
xNMZkwh/d8c/1VZ2wtripF62Xej3qmz5Un1cf7LiDKlfPSIk7jZ4va4Oy1yg
9v6lQ/aSq90DUk9td9DC92V+oYM7paGwPP1hdQdlsWJZIx3O0FIbg9+kVqdU
LNa5F9BhmwWhm1X60DY5eYNr70k6VC1+vdfr895WQKgsx+kKHaIP8ryQiTla
ve5F3ZLDJJ89T70kZ7Oqt3pWLzoitoQOMst2Xt1e/aO6b0R1V+lzOuhfFQlt
zJqsftOdcYBWS4fl1xq/zPJNV/94bDZR1EfOayh3sW/MV3+zLj62d4YO+zmR
Y5Qt3Jh9IFz5OjnuD1McLjnAg/veDIVvX84AzWf2s+6z3LjpRnG4oQXpT4lV
hWfLuVCOwzmXs5kB3iGCNVxxvHhrQWFpFRkfdoNStc8UHz7i3hSZRfKDsToX
RvE1Xrwid4TTdI4Ba1Om5z6H8+H6oYta0iQ/cD9hcuNnAD9KrHj7a5HMl5Cb
fOV20sK4ii9ZW5/Ee0sl19UjL8Rwn+jGo8ffMiByYviftLckLp/hd5V7xQBj
uegQuV4pHGJ1O1K/MODPTwnrE7kyKLW0+XTXOAOERs13p+6Txf7ji9P5Swi4
Xzvr6/9aFv9EDt7kVyf7dZDQeWuWLP7ewLQxBgLscv+tekiVxZ+7hH5IbiP5
7iLjqImZDH67HnqHzibgoVe5yQuWFCpyRqlcm8j+/9Y51f+dBG7PPfKfzn8E
PK9bcyv5vijmuGrwRVgT4Hcn9fskrxB2Zov7qa8nwKq/brTXSwidogJJcknA
r9tFAm9viuLip7fWy+QIODYqLRpqJYHNdNWZCWOyngvmZ0rDJFEiwsxgqRMB
nDvaRlWG0tjWsN3yBYMApZ6ZmuEly3CT3HXu7F0ETNTwM/sEl+EpoQreS2T/
Nx5LsntXLYMO9+OH114n4NVJt/92HZRFTZpn745SAnpLzyxu9F2O25hpy4Lb
CEizKxxYSpFDy7/m1xRGCZDJ2WOvIySPi63ME00iTKAP3dJ22SiHmfzuERn6
ZL8bVxq9mySH7SOz3oz1TDB5Rhj9/CqPhpHBRz75MGFQaSVvzCpFfBA/U/Aj
nMTj3yo+ifrK+KJ9e///+crkQIXAhWIVTHdf6LYk+UxtDleDzIQq3k2K4WkL
ZoLpRIfl8QpVvKP5Vyw3iwlW3TtjmvXU0MPuzB5KCROqDpfpTBFqeL49Viyr
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
wvDz/wBwptb/
    "]]}]], "Output",
 CellChangeTimes->{
  3.813845903901312*^9, 3.813846023599612*^9, {3.8138461171615973`*^9, 
   3.8138461366446247`*^9}, 3.8138461801550694`*^9, {3.813846230693232*^9, 
   3.8138462400378532`*^9}, {3.813847407088175*^9, 3.813847425338678*^9}, {
   3.813864661396385*^9, 3.813864681165333*^9}, 3.81392410119116*^9, 
   3.813924612115697*^9, 3.81392498351623*^9, 3.8139250609832973`*^9, 
   3.813925107345027*^9, 3.8139371307722673`*^9, 3.813939128551057*^9, {
   3.8139485863592587`*^9, 3.8139485955615664`*^9}, 3.813955663460692*^9, 
   3.813957240756968*^9, 3.813957483650622*^9, 3.81400488112953*^9, 
   3.814007111280677*^9, 3.814020997380834*^9, 3.814021227956998*^9, 
   3.81410369295679*^9, 3.814103885660779*^9, 3.814103960469306*^9, 
   3.814104061834895*^9, {3.814104100215289*^9, 3.8141041240289297`*^9}, 
   3.814104155622067*^9, 3.8141042651934958`*^9, 3.814107779369252*^9, 
   3.8147134589955063`*^9, 3.814729447573285*^9, 3.8147298434858093`*^9, 
   3.814784181697112*^9, 3.814785269622414*^9, 3.814786874877342*^9, 
   3.8147871858724318`*^9, 3.814787252923416*^9, 3.81479057163062*^9, 
   3.814799153792922*^9, 3.81479927103475*^9, 3.8148035492463818`*^9, 
   3.8148087891949053`*^9, 3.814816060275551*^9, 3.814817078198722*^9, 
   3.814817205162684*^9, 3.8148179403177443`*^9, 3.814818384568869*^9, 
   3.8148199236110353`*^9, 3.81496288042898*^9, 3.8149642769744673`*^9, 
   3.814965666467696*^9, 3.814968804076478*^9, 3.8149823342680483`*^9, 
   3.81498245372396*^9},ExpressionUUID->"27e71245-0e7b-4dad-a25b-\
3c169f7eb576"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"random", " ", "walk", " ", "for", " ", "\[Omega]"}], " ", 
     "\[Element]", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{"ie", ".", " ", "at"}], " ", "any", " ", "new", " ", "segment", 
     " ", "we", " ", "can", " ", "turn", " ", "up", " ", "to", " ", "360", 
     "\[Degree]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"randomWalk2D", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Accumulate", "[", 
      RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"DiscretizeRegion", "[", 
           RowBox[{"Circle", "[", "]"}], "]"}], ",", "t"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], "//", 
     "ListLinePlot"}]}], "\[IndentingNewLine]", 
   RowBox[{"randomWalk2D", "[", "100", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "forward", " ", "biased", " ", "random", " ", "walk", " ", "for", " ", 
       "\[Omega]"}], " ", "\[Element]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"ie", ".", " ", "at"}], " ", "any", " ", "new", " ", "segment", 
      " ", "we", " ", "can", " ", "turn", " ", "up", " ", "to", " ", "180", 
      "\[Degree]"}], ",", " ", 
     RowBox[{"aka", " ", "never", " ", "look", " ", "back"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hemicircle", " ", "=", " ", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Pi"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomWalk2Dforward", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Accumulate", "[", 
      RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"DiscretizeRegion", "[", "hemicircle", "]"}], ",", "t"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], "//", 
     "ListLinePlot"}]}], "\[IndentingNewLine]", 
   RowBox[{"randomWalk2Dforward", "[", "100", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"use", " ", "'"}], 
     RowBox[{"sphere", "'"}], " ", "instead", " ", 
     RowBox[{"of", " ", "'"}], 
     RowBox[{"circle", "'"}], " ", "and", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], " ", "instead", " ", "of", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], " ", "for", " ", "3", "D", " ", 
     "walks"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.81384640321416*^9, 3.813846425406901*^9}, {
  3.813846462822544*^9, 3.813846524677104*^9}, {3.813846623465032*^9, 
  3.813846686585334*^9}, {3.813846738158218*^9, 3.813846823477771*^9}, {
  3.813846866364492*^9, 3.813846879842493*^9}, {3.813846916554977*^9, 
  3.8138470085657387`*^9}, {3.813847440722952*^9, 3.8138474442756557`*^9}, {
  3.8138504098264837`*^9, 3.813850453362646*^9}, {3.813864704792873*^9, 
  3.813864710346952*^9}},ExpressionUUID->"f171ce58-9374-4ae7-8550-\
ee8a5605daea"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
FwP+DTQsEFA=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.483394336033326, 3.4784488443376316`}, {-2.180982104552055, 
   7.225714988791221}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813846409979599*^9, {3.8138464823237047`*^9, 3.813846485293374*^9}, 
   3.8138465252731123`*^9, {3.813846652557856*^9, 3.8138466875420227`*^9}, {
   3.813846736908052*^9, 3.81384677392624*^9}, 3.813847136389312*^9, 
   3.8138473693641148`*^9, 3.81392410121634*^9, 3.813924612140717*^9, 
   3.813924983540765*^9, 3.813925061008547*^9, 3.813937130833633*^9, 
   3.813939128587967*^9, 3.813955663498867*^9, 3.8139572407944593`*^9, 
   3.81395748369034*^9, 3.81400488117766*^9, 3.814020997419609*^9, 
   3.814021227996965*^9, 3.814103692982345*^9, 3.814103885844221*^9, 
   3.814103960496893*^9, 3.8141040618610697`*^9, {3.8141041002920303`*^9, 
   3.814104124183568*^9}, 3.814104155664893*^9, 3.8141042652224207`*^9, 
   3.814107779398736*^9, 3.8147134590369253`*^9, 3.814729447616439*^9, 
   3.814729843538484*^9, 3.81478418173547*^9, 3.814785269660503*^9, 
   3.8147868749028597`*^9, 3.814787185916464*^9, 3.8147872529603777`*^9, 
   3.814790571658317*^9, 3.814799153834021*^9, 3.814799271064149*^9, 
   3.8148035492814827`*^9, 3.814808789234322*^9, 3.814816060304182*^9, 
   3.814817078227365*^9, 3.81481720518918*^9, 3.814817940345583*^9, 
   3.8148183846086693`*^9, 3.814819923639429*^9, 3.814962880470725*^9, 
   3.814964277011722*^9, 3.814965666504669*^9, 3.814968804117981*^9, 
   3.814982334294745*^9, 
   3.814982453764904*^9},ExpressionUUID->"32b860ce-d7f8-4e07-9b22-\
51eb59eefe98"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.990752232835272`, 0.39705174292155443`}, {
    0, 67.05278085756494}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813846409979599*^9, {3.8138464823237047`*^9, 3.813846485293374*^9}, 
   3.8138465252731123`*^9, {3.813846652557856*^9, 3.8138466875420227`*^9}, {
   3.813846736908052*^9, 3.81384677392624*^9}, 3.813847136389312*^9, 
   3.8138473693641148`*^9, 3.81392410121634*^9, 3.813924612140717*^9, 
   3.813924983540765*^9, 3.813925061008547*^9, 3.813937130833633*^9, 
   3.813939128587967*^9, 3.813955663498867*^9, 3.8139572407944593`*^9, 
   3.81395748369034*^9, 3.81400488117766*^9, 3.814020997419609*^9, 
   3.814021227996965*^9, 3.814103692982345*^9, 3.814103885844221*^9, 
   3.814103960496893*^9, 3.8141040618610697`*^9, {3.8141041002920303`*^9, 
   3.814104124183568*^9}, 3.814104155664893*^9, 3.8141042652224207`*^9, 
   3.814107779398736*^9, 3.8147134590369253`*^9, 3.814729447616439*^9, 
   3.814729843538484*^9, 3.81478418173547*^9, 3.814785269660503*^9, 
   3.8147868749028597`*^9, 3.814787185916464*^9, 3.8147872529603777`*^9, 
   3.814790571658317*^9, 3.814799153834021*^9, 3.814799271064149*^9, 
   3.8148035492814827`*^9, 3.814808789234322*^9, 3.814816060304182*^9, 
   3.814817078227365*^9, 3.81481720518918*^9, 3.814817940345583*^9, 
   3.8148183846086693`*^9, 3.814819923639429*^9, 3.814962880470725*^9, 
   3.814964277011722*^9, 3.814965666504669*^9, 3.814968804117981*^9, 
   3.814982334294745*^9, 
   3.814982453784913*^9},ExpressionUUID->"c992e252-0611-4058-ad5a-\
6086f8a9297a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"2", "D", " ", "simple", " ", "random", " ", "walk"}], " ", "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"step", "[", "position_", "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", "=", 
         RowBox[{"2", "Pi", " ", 
          RowBox[{"RandomReal", "[", "]"}]}]}], "}"}], ",", 
       RowBox[{"position", "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"walk", "[", 
      RowBox[{"n_", ",", 
       RowBox[{"origin_:", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
     RowBox[{"NestList", "[", 
      RowBox[{"step", ",", "origin", ",", "n"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distance", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"EuclideanDistance", "@@", 
      RowBox[{"aWalk", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "calc", " ", "dist", " ", "between", " ", "first", " ", "and", " ", 
     "last", " ", "pt", " ", "in", " ", "the", " ", "walk", " ", "list"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"draw", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Yellow", ",", 
         RowBox[{"Line", "[", "aWalk", "]"}], ",", "Dashed", ",", "Green", 
         ",", 
         RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"aWalk", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "]"}], ",", "Black", 
         ",", 
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Point", "[", "aWalk", "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], "\n", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"step", "[", 
     RowBox[{"{", 
      RowBox[{"10", ",", "0"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"walk", "[", "50", "]"}]}], ";"}], "\n", 
   RowBox[{"draw", "[", "w", "]"}], "\[IndentingNewLine]", 
   RowBox[{"distance", "[", "w", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.813847540004753*^9, 3.813847674953102*^9}, {
  3.813847720552286*^9, 3.813847756804975*^9}, {3.8138478171967163`*^9, 
  3.8138478528764763`*^9}, {3.813847919523765*^9, 3.813847979981798*^9}, {
  3.813848022573563*^9, 3.813848070045754*^9}, {3.813849227544361*^9, 
  3.813849236637508*^9}, {3.813850278473023*^9, 3.81385028040508*^9}, {
  3.813850478922635*^9, 3.8138504846569767`*^9}, {3.813863428995867*^9, 
  3.813863430072359*^9}, {3.813864087304076*^9, 
  3.813864120531784*^9}},ExpressionUUID->"dee57b5a-658d-4194-8efa-\
998b785bdd01"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 1, 0], 
    LineBox[{{0, 0}, {-0.49046829328373354`, 
      0.8714590370656222}, {-1.3695302696152674`, 
      0.394751535794562}, {-1.2514267507632857`, 
      1.387752824230171}, {-0.4588830737248054, 
      0.7779376719206167}, {-0.45837952989042396`, -0.2220622013011787}, \
{-0.9030940384892361, 0.6736101750964174}, {-1.7759217662168014`, 
      1.1616386145442994`}, {-2.7692778381478447`, 
      1.2767199525523698`}, {-2.5035317571014732`, 
      0.3126768931361965}, {-3.321154157776674, 
      0.888431710670641}, {-3.4675626025269666`, 
      1.8776559356600013`}, {-3.4200748343995016`, 
      2.876527755203566}, {-2.4457341353095967`, 
      3.1016059684917376`}, {-1.9915958719272397`, 
      3.9925371879088467`}, {-1.0477618926184231`, 
      3.662117122685676}, {-1.9970796799695711`, 
      3.976435016892673}, {-2.6721775438767312`, 
      3.2387068324317636`}, {-2.0088756115096267`, 
      2.490354945604407}, {-1.0142422248634033`, 
      2.3868927487948284`}, {-1.907700895765374, 
      1.9377473342684373`}, {-2.723996267688916, 
      2.5153820508291775`}, {-3.6991054613947507`, 
      2.7371072418886433`}, {-3.374282088983164, 
      1.7913325452852908`}, {-4.367534867327029, 
      1.9073020167516754`}, {-5.159375080073792, 
      1.2965736995130186`}, {-4.917517896581736, 
      2.2668855580375293`}, {-5.658427461178516, 
      1.5952807508115767`}, {-4.794895874510444, 
      2.0995755047269045`}, {-3.8753621382403365`, 
      1.7065644261793187`}, {-4.751940076022437, 
      1.2253044974571359`}, {-3.8777795924066463`, 
      0.7396673398130698}, {-3.5912995206761313`, -0.21841886116327192`}, \
{-4.53277245753291, -0.5555074387897947}, {-4.544860752713529, \
-1.5554343726802795`}, {-5.444456408597289, -1.9921581479834645`}, \
{-4.454079948571201, -2.1305578135401233`}, {-5.332891024501526, \
-1.6533879351716485`}, {-4.333979364368836, -1.6067457305608799`}, \
{-4.658506235283685, -0.6608692533958025}, {-5.52832699426914, \
-1.1542371153790967`}, {-6.475460340852861, -1.4750772995660535`}, \
{-6.92620423830105, -2.3677306135201417`}, {-7.347430746314391, \
-3.2746860859370006`}, {-6.391314962031749, -3.5676751762553742`}, \
{-5.952238754858, -4.4661249991692165`}, {-6.923862426247909, \
-4.702657113679685}, {-6.137584796398759, -5.32053047351874}, \
{-6.900779551600824, -5.966699000787022}, {-6.386956719314427, \
-5.10880268011582}, {-6.4863452303736935`, -4.113753975845812}}]}, 
   {RGBColor[0, 1, 0], Dashing[{Small, Small}], Arrowheads[Large], 
    ArrowBox[{{0, 0}, {-6.4863452303736935`, -4.113753975845812}}], 
    {GrayLevel[0], PointSize[Medium], 
     PointBox[{{0, 0}, {-0.49046829328373354`, 
       0.8714590370656222}, {-1.3695302696152674`, 
       0.394751535794562}, {-1.2514267507632857`, 
       1.387752824230171}, {-0.4588830737248054, 
       0.7779376719206167}, {-0.45837952989042396`, -0.2220622013011787}, \
{-0.9030940384892361, 0.6736101750964174}, {-1.7759217662168014`, 
       1.1616386145442994`}, {-2.7692778381478447`, 
       1.2767199525523698`}, {-2.5035317571014732`, 
       0.3126768931361965}, {-3.321154157776674, 
       0.888431710670641}, {-3.4675626025269666`, 
       1.8776559356600013`}, {-3.4200748343995016`, 
       2.876527755203566}, {-2.4457341353095967`, 
       3.1016059684917376`}, {-1.9915958719272397`, 
       3.9925371879088467`}, {-1.0477618926184231`, 
       3.662117122685676}, {-1.9970796799695711`, 
       3.976435016892673}, {-2.6721775438767312`, 
       3.2387068324317636`}, {-2.0088756115096267`, 
       2.490354945604407}, {-1.0142422248634033`, 
       2.3868927487948284`}, {-1.907700895765374, 
       1.9377473342684373`}, {-2.723996267688916, 
       2.5153820508291775`}, {-3.6991054613947507`, 
       2.7371072418886433`}, {-3.374282088983164, 
       1.7913325452852908`}, {-4.367534867327029, 
       1.9073020167516754`}, {-5.159375080073792, 
       1.2965736995130186`}, {-4.917517896581736, 
       2.2668855580375293`}, {-5.658427461178516, 
       1.5952807508115767`}, {-4.794895874510444, 
       2.0995755047269045`}, {-3.8753621382403365`, 
       1.7065644261793187`}, {-4.751940076022437, 
       1.2253044974571359`}, {-3.8777795924066463`, 
       0.7396673398130698}, {-3.5912995206761313`, -0.21841886116327192`}, \
{-4.53277245753291, -0.5555074387897947}, {-4.544860752713529, \
-1.5554343726802795`}, {-5.444456408597289, -1.9921581479834645`}, \
{-4.454079948571201, -2.1305578135401233`}, {-5.332891024501526, \
-1.6533879351716485`}, {-4.333979364368836, -1.6067457305608799`}, \
{-4.658506235283685, -0.6608692533958025}, {-5.52832699426914, \
-1.1542371153790967`}, {-6.475460340852861, -1.4750772995660535`}, \
{-6.92620423830105, -2.3677306135201417`}, {-7.347430746314391, \
-3.2746860859370006`}, {-6.391314962031749, -3.5676751762553742`}, \
{-5.952238754858, -4.4661249991692165`}, {-6.923862426247909, \
-4.702657113679685}, {-6.137584796398759, -5.32053047351874}, \
{-6.900779551600824, -5.966699000787022}, {-6.386956719314427, \
-5.10880268011582}, {-6.4863452303736935`, -4.113753975845812}}]}}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.813847586489656*^9, 3.813847604786889*^9}, {
   3.813847738917753*^9, 3.813847758662787*^9}, 3.8138478829764357`*^9, 
   3.813847920889474*^9, {3.813847955107581*^9, 3.813847974373514*^9}, {
   3.8138480352342463`*^9, 3.8138480708728247`*^9}, 3.81384923759235*^9, {
   3.813849364828124*^9, 3.8138493708358393`*^9}, {3.813850281300033*^9, 
   3.813850284085143*^9}, {3.8138504918600807`*^9, 3.813850494671752*^9}, 
   3.813863432254814*^9, {3.813864088015332*^9, 3.813864124851383*^9}, 
   3.8139241012830257`*^9, 3.8139246121871347`*^9, 3.8139249835774603`*^9, 
   3.813925061049095*^9, 3.813937130912012*^9, 3.813939128679549*^9, 
   3.813955663627657*^9, 3.813957240843829*^9, 3.813957483732456*^9, 
   3.814004881239066*^9, 3.814020997494741*^9, 3.814021228145966*^9, 
   3.814103693031592*^9, 3.814103886030624*^9, 3.814103960662183*^9, 
   3.81410406191173*^9, {3.814104100351385*^9, 3.814104124408556*^9}, 
   3.8141041557365017`*^9, 3.8141042652743073`*^9, 3.814107779458461*^9, 
   3.814713459096472*^9, 3.814729447679356*^9, 3.81472984361369*^9, 
   3.814784181778372*^9, 3.814785269701621*^9, 3.814786874947734*^9, 
   3.8147871859774303`*^9, 3.8147872529987392`*^9, 3.814790571700819*^9, 
   3.814799153881568*^9, 3.81479927111541*^9, 3.814803549330564*^9, 
   3.8148087892793493`*^9, 3.814816060349474*^9, 3.814817078275215*^9, 
   3.814817205233309*^9, 3.814817940389545*^9, 3.814818384653631*^9, 
   3.81481992370992*^9, 3.814962880514277*^9, 3.814964277051064*^9, 
   3.8149656665438623`*^9, 3.814968804163651*^9, 3.8149823343552313`*^9, 
   3.814982453901075*^9},ExpressionUUID->"f531050a-cc5b-40d5-891e-\
b273981e58dd"],

Cell[BoxData["7.680862335791391`"], "Output",
 CellChangeTimes->{{3.813847586489656*^9, 3.813847604786889*^9}, {
   3.813847738917753*^9, 3.813847758662787*^9}, 3.8138478829764357`*^9, 
   3.813847920889474*^9, {3.813847955107581*^9, 3.813847974373514*^9}, {
   3.8138480352342463`*^9, 3.8138480708728247`*^9}, 3.81384923759235*^9, {
   3.813849364828124*^9, 3.8138493708358393`*^9}, {3.813850281300033*^9, 
   3.813850284085143*^9}, {3.8138504918600807`*^9, 3.813850494671752*^9}, 
   3.813863432254814*^9, {3.813864088015332*^9, 3.813864124851383*^9}, 
   3.8139241012830257`*^9, 3.8139246121871347`*^9, 3.8139249835774603`*^9, 
   3.813925061049095*^9, 3.813937130912012*^9, 3.813939128679549*^9, 
   3.813955663627657*^9, 3.813957240843829*^9, 3.813957483732456*^9, 
   3.814004881239066*^9, 3.814020997494741*^9, 3.814021228145966*^9, 
   3.814103693031592*^9, 3.814103886030624*^9, 3.814103960662183*^9, 
   3.81410406191173*^9, {3.814104100351385*^9, 3.814104124408556*^9}, 
   3.8141041557365017`*^9, 3.8141042652743073`*^9, 3.814107779458461*^9, 
   3.814713459096472*^9, 3.814729447679356*^9, 3.81472984361369*^9, 
   3.814784181778372*^9, 3.814785269701621*^9, 3.814786874947734*^9, 
   3.8147871859774303`*^9, 3.8147872529987392`*^9, 3.814790571700819*^9, 
   3.814799153881568*^9, 3.81479927111541*^9, 3.814803549330564*^9, 
   3.8148087892793493`*^9, 3.814816060349474*^9, 3.814817078275215*^9, 
   3.814817205233309*^9, 3.814817940389545*^9, 3.814818384653631*^9, 
   3.81481992370992*^9, 3.814962880514277*^9, 3.814964277051064*^9, 
   3.8149656665438623`*^9, 3.814968804163651*^9, 3.8149823343552313`*^9, 
   3.814982453906681*^9},ExpressionUUID->"3c57aa87-1dbe-48ef-adba-\
5204657b767f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"3", "D", " ", "simple", " ", "random", " ", "walk"}], " ", "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"step", ",", "walk", ",", "distance", ",", "draw"}], "]"}], 
    ";"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "comment", " ", "this", " ", "out", " ", "to", " ", "have", " ", 
     "everytime", " ", "a", " ", "different", " ", "random", " ", "walk", " ",
      "as", " ", "above"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "12345", "]"}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "change", " ", "t", " ", "to", " ", "Pi", " ", "for", " ", "forward", " ",
      "only", " ", "directions", " ", "for", " ", "example"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"step", "[", 
      RowBox[{"position_:", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{"2", "Pi", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}], ",", 
         RowBox[{"p", "=", 
          RowBox[{"Pi", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"position", "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], 
           RowBox[{"Sin", "[", "p", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], 
           RowBox[{"Sin", "[", "p", "]"}]}], ",", 
          RowBox[{"Cos", "[", "p", "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"walk", "[", 
      RowBox[{"n_", ",", 
       RowBox[{"origin_:", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
     RowBox[{"NestList", "[", 
      RowBox[{"step", ",", "origin", ",", "n"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distance", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"EuclideanDistance", "@@", 
      RowBox[{"aWalk", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "calc", " ", "dist", " ", "between", " ", "first", " ", "and", " ", 
     "last", " ", "pt", " ", "in", " ", "the", " ", "walk", " ", "list"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"draw", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Cyan", ",", 
         RowBox[{"Line", "[", "aWalk", "]"}], ",", "Dashed", ",", "Green", 
         ",", 
         RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"aWalk", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "]"}], ",", "Red", 
         ",", 
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Point", "[", "aWalk", "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "->", "Large"}], ",", 
       RowBox[{"ViewProjection", "\[Rule]", "\"\<Orthographic\>\""}], ",", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Pi", ",", 
          RowBox[{"Pi", "/", "2"}], ",", "2"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"distance", "[", "w", "]"}], "\n", 
   RowBox[{"draw", "[", 
    RowBox[{"walk", "[", "100", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.81384872297688*^9, 3.8138488088780727`*^9}, {
   3.8138488450839252`*^9, 3.813848845802086*^9}, {3.8138489399491043`*^9, 
   3.8138489773392553`*^9}, {3.813849023469557*^9, 3.813849128495755*^9}, 
   3.8138491707476463`*^9, {3.81384925294363*^9, 3.813849349690893*^9}, {
   3.8138494070440063`*^9, 3.813849442166738*^9}, {3.813849494775017*^9, 
   3.8138495516539497`*^9}, {3.813849649820855*^9, 3.8138496510322113`*^9}, {
   3.8138497509362288`*^9, 3.8138498378071823`*^9}, 3.813849896647738*^9, {
   3.813850014659485*^9, 3.813850034885206*^9}, {3.8138500701226482`*^9, 
   3.8138502152043037`*^9}, {3.813850307882167*^9, 3.813850328175942*^9}, 
   3.8138504719248667`*^9, {3.813850504756618*^9, 3.813850505000374*^9}, {
   3.8138505352919207`*^9, 3.813850588179611*^9}, 3.81385063676729*^9, {
   3.81385890968373*^9, 3.813858915625421*^9}, {3.813863423029768*^9, 
   3.813863424019745*^9}, {3.8138642481790648`*^9, 3.813864317048265*^9}, {
   3.813948608564208*^9, 3.813948610271838*^9}, {3.814021409865103*^9, 
   3.814021415913371*^9}},ExpressionUUID->"7a1273cd-3f66-4022-8667-\
d22a98700929"],

Cell[BoxData["7.680862335791391`"], "Output",
 CellChangeTimes->{
  3.813925133558794*^9, 3.81393713097329*^9, 3.813939128730955*^9, {
   3.813948611219714*^9, 3.813948613861416*^9}, 3.813955663674077*^9, 
   3.813957240877688*^9, 3.813957483761889*^9, 3.8140048812836018`*^9, 
   3.814020997553772*^9, 3.814021228179023*^9, 3.814021416758788*^9, 
   3.814103693074842*^9, 3.814103886083829*^9, 3.814103960722322*^9, 
   3.814104061952668*^9, {3.8141041004000683`*^9, 3.814104124458255*^9}, 
   3.8141041558208323`*^9, 3.814104265332164*^9, 3.8141077795095987`*^9, 
   3.814713459158909*^9, 3.814729447734779*^9, 3.8147298436610622`*^9, 
   3.8147841818027573`*^9, 3.814785269726491*^9, 3.814786874974752*^9, 
   3.814787185999413*^9, 3.81478725302343*^9, 3.814790571761825*^9, 
   3.814799153916161*^9, 3.814799271138557*^9, 3.81480354937045*^9, 
   3.814808789315526*^9, 3.814816060376195*^9, 3.8148170783168*^9, 
   3.814817205263994*^9, 3.8148179404184513`*^9, 3.814818384679858*^9, 
   3.8148199237342777`*^9, 3.814962880550178*^9, 3.814964277081469*^9, 
   3.8149656665668173`*^9, 3.8149688041869287`*^9, 3.814982334376495*^9, 
   3.814982453928959*^9},ExpressionUUID->"ca95081d-60fe-46d3-8b96-\
bd62fc60ea9b"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 1], 
    Line3DBox[{{0, 0, 0}, {0.6227311982038221, 0.5940276124634627, 
      0.5092514608860639}, {0.8221750883310794, -0.36140978323235773`, 
      0.7268784757461102}, {0.9862690500444247, 0.618212817108599, 
      0.8426918283028919}, {0.9264914418447443, -0.17425531571339736`, 
      0.23571497864588542`}, {1.009380527505149, -0.4895808460740223, 
      1.1810716358822813`}, {0.35894275354818084`, 0.11784285368342107`, 
      1.6371057916018756`}, {-0.35913625548453754`, -0.09360772290660108, 
      0.9740438107536775}, {-0.578430733732698, -1.0582767611299346`, 
      0.8280178592822496}, {-0.4788342404144672, -0.10374202867925675`, 
      0.5470481401593086}, {0.07711952351573259, 0.6217520193258796, 
      0.1413711767007405}, {0.07075015156341216, 0.3290287095789983, 
      1.0975471516299187`}, {-0.42363068012058425`, 0.576507207311953, 
      1.9308190078828944`}, {-0.46361531459731764`, 0.35947836137554245`, 
      0.9554730646210834}, {0.23338496037429646`, 0.9038877211567103, 
      1.4221732528277662`}, {0.6178036500108526, 0.26192636225658583`, 
      0.7587669785604672}, {0.4138193136329379, 
      0.31591728181578194`, -0.2187172264871715}, {0.07082178909105269, 
      1.252680815406362, -0.1492421928921527}, {-0.8303534688408241, 
      1.0767216085285327`, 0.2468910069363149}, {-0.9998076530048788, 
      1.030335717457094, 1.2313368554108783`}, {-1.602790730254664, 
      1.3250257480624494`, 1.9726661981541656`}, {-1.010637831425024, 
      0.520331841870849, 
      2.015358840913289}, {-0.8029367616907502, -0.34915772564546477`, 
      2.4635197022248634`}, {-1.7129732832606281`, -0.6226790336085839, 
      2.1520399701408293`}, {-1.7347605539444346`, -0.7440918056488834, 
      3.14440293479723}, {-1.566261453691294, -0.22604637267160832`, 
      3.982995197213996}, {-2.3036037329531447`, -0.6021410843904207, 
      3.421854278165953}, {-2.193221325716764, -0.9845754856379749, 
      2.5044886733413954`}, {-2.0620506149448303`, -0.03073944072479684, 
      2.2343201258382277`}, {-1.2873570448473208`, 0.5588989148276712, 
      2.462741845713892}, {-1.4220259335153165`, -0.31405707094661794`, 
      1.9939005747854828`}, {-1.3238259948369078`, -0.1061626946945704, 
      2.967110059103391}, {-0.9368540354836776, -0.21809815803084598`, 
      3.8823822343179635`}, {-1.1699207976717345`, -1.0207244936895106`, 
      3.3333186226386604`}, {-1.9674520205689356`, -0.9287708148636676, 
      2.737090084698309}, {-2.230709498037316, 0.03490139499950484, 
      2.7821608345746416`}, {-2.2709686282815555`, -0.030624975668698207`, 
      1.7851224716321565`}, {-2.7985383818268215`, 0.7639690209234979, 
      2.0856063076763403`}, {-1.8929990618142214`, 1.0765990553187508`, 
      1.798794520078374}, {-2.5816508468588526`, 0.5359764381696464, 
      2.281998312263096}, {-2.230543796184852, 1.4314642740461254`, 
      2.00845603990969}, {-2.023676427155628, 0.4530997927592676, 
      2.0054839384268224`}, {-1.157514816835328, 0.22989487418076957`, 
      1.5583333719173844`}, {-1.7950644003661833`, -0.3553164691045424, 
      2.059390466697843}, {-2.6094337717853957`, -0.906053179493159, 
      1.8763833555666043`}, {-1.6576865677955337`, -0.6308858865648593, 
      1.7405149611549837`}, {-1.8895620971895781`, -0.6407433594799646, 
      2.7132104783112823`}, {-2.307835633897635, 0.26687791365711433`, 
      2.7488597845985248`}, {-2.2475336640410317`, 0.2775936036590589, 
      1.750737123589771}, {-2.9240596761164133`, -0.2790403207803222, 
      1.2685844204462604`}, {-2.258016364443887, 0.00327726942330292, 
      0.5781620242003739}, {-1.7996183908794072`, 0.8330861799265945, 
      0.8964205195800236}, {-2.192572866488212, 0.5573444491076889, 
      0.019178661262715835`}, {-3.103122950568308, 0.35537661801260845`, 
      0.37988288855216573`}, {-3.8602448087149708`, -0.11120316616994375`, \
-0.07735861974373232}, {-4.474139509324141, 
      0.2871317926799883, -0.7588735184231372}, {-4.549024873130336, \
-0.3983722640979543, -1.483080926855692}, {-3.573021644674984, \
-0.22425137291281916`, -1.6138464165600612`}, {-4.267412703069773, 
      0.2717049490823709, -1.0924555989439786`}, {-4.457348130508649, 
      0.8229644644196452, -1.9048825065201154`}, {-5.272581436463422, 
      1.303898597928002, -1.5822418145908141`}, {-4.830894649786972, 
      1.4100492639139024`, -2.473109267462554}, {-3.936863828254682, 
      1.552728844749815, -2.0484312395840356`}, {-3.0007253297524876`, 
      1.3677949582201758`, -2.3475034202279392`}, {-2.9510953890233926`, 
      1.3286151602575815`, -1.3495045162130919`}, {-3.4543723525206356`, 
      0.5336547612148735, -1.0107564358246512`}, {-3.209738526180269, 
      1.0561710217697744`, -0.19397552978815846`}, {-3.3832295996779034`, 
      1.4950625759003273`, -1.0756075681859847`}, {-3.30790430695208, 
      2.0052072772281417`, -1.9323913705439215`}, {-3.521907127711369, 
      2.5102420440432667`, -1.096243849459837}, {-3.949123919310423, 
      2.6123318642746094`, -1.9946109690612517`}, {-2.9620365334926153`, 
      2.525343556973411, -2.129115716755295}, {-2.840423046468032, 
      1.5522841292799847`, -2.3249868732604413`}, {-2.6812449382440007`, 
      1.1481192230784276`, -3.22571605478911}, {-3.5711147434020427`, 
      1.4762950872974043`, -2.908805449078104}, {-3.037952633135808, 
      0.9626469603480979, -3.581043328000383}, {-2.3948632183745153`, 
      1.4593930184127815`, -4.163863504743756}, {-1.8130086712018196`, 
      0.6661019048559548, -4.343124473965244}, {-1.524351819349986, 
      0.16359891260900272`, -5.158089482209063}, {-2.358853797137907, 
      0.580960983732829, -5.517832933372914}, {-2.384864167884058, \
-0.0974569288660172, -6.2520485668748655`}, {-1.7775205597599573`, 
      0.4478367474761995, -5.674304204538037}, {-0.8904097548028017, 
      0.07658296273076581, -5.400068818344974}, {-0.7484450703017352, 
      0.5553794044836111, -6.266440560566133}, {-1.355453106007213, 
      0.5375108365156439, -7.0609353427187616`}, {-0.6280201966982725, 
      0.167875032972708, -6.482825720593771}, {-1.6076043656701438`, 
      0.19850887427266733`, -6.284138973006276}, {-1.4762508494431907`, 
      0.23643203408143793`, -5.293529015593705}, {-1.4182836823481744`, 
      0.15904467887911566`, -6.288843541155233}, {-1.4893172121661904`, \
-0.24452532235445418`, -7.201030743294097}, {-2.48616247954964, \
-0.2729394240116258, -7.275139796197469}, {-3.386472077049451, \
-0.695283930290787, -7.380343154820377}, {-3.304114592762171, \
-0.9207704512196828, -6.409584135464258}, {-2.5593952697978697`, \
-1.1961727022993318`, -7.017487688755283}, {-2.9474189901290613`, \
-1.4620978677657923`, -6.135035764380943}, {-3.415181765249569, \
-0.6428654746922424, -5.803288462431785}, {-3.5510427740667883`, \
-1.0379944261429492`, -4.894764991073652}, {-4.290539491637808, \
-0.38278647609029637`, -5.049190205625836}, {-4.246586987608019, \
-0.4808531639579821, -4.054981423668961}, {-4.8372035839197185`, 
      0.23841603439723985`, -3.6891619921749252`}, {-4.870671023325116, \
-0.7329605806554349, -3.9243372507130077`}}]}, 
   {RGBColor[0, 1, 0], Dashing[{Small, Small}], Arrowheads[Large], 
    Arrow3DBox[{{0, 0, 
      0}, {-4.870671023325116, -0.7329605806554349, -3.9243372507130077`}}], 
    {RGBColor[1, 0, 0], PointSize[Medium], 
     Point3DBox[{{0, 0, 0}, {0.6227311982038221, 0.5940276124634627, 
       0.5092514608860639}, {0.8221750883310794, -0.36140978323235773`, 
       0.7268784757461102}, {0.9862690500444247, 0.618212817108599, 
       0.8426918283028919}, {0.9264914418447443, -0.17425531571339736`, 
       0.23571497864588542`}, {1.009380527505149, -0.4895808460740223, 
       1.1810716358822813`}, {0.35894275354818084`, 0.11784285368342107`, 
       1.6371057916018756`}, {-0.35913625548453754`, -0.09360772290660108, 
       0.9740438107536775}, {-0.578430733732698, -1.0582767611299346`, 
       0.8280178592822496}, {-0.4788342404144672, -0.10374202867925675`, 
       0.5470481401593086}, {0.07711952351573259, 0.6217520193258796, 
       0.1413711767007405}, {0.07075015156341216, 0.3290287095789983, 
       1.0975471516299187`}, {-0.42363068012058425`, 0.576507207311953, 
       1.9308190078828944`}, {-0.46361531459731764`, 0.35947836137554245`, 
       0.9554730646210834}, {0.23338496037429646`, 0.9038877211567103, 
       1.4221732528277662`}, {0.6178036500108526, 0.26192636225658583`, 
       0.7587669785604672}, {0.4138193136329379, 
       0.31591728181578194`, -0.2187172264871715}, {0.07082178909105269, 
       1.252680815406362, -0.1492421928921527}, {-0.8303534688408241, 
       1.0767216085285327`, 0.2468910069363149}, {-0.9998076530048788, 
       1.030335717457094, 1.2313368554108783`}, {-1.602790730254664, 
       1.3250257480624494`, 1.9726661981541656`}, {-1.010637831425024, 
       0.520331841870849, 
       2.015358840913289}, {-0.8029367616907502, -0.34915772564546477`, 
       2.4635197022248634`}, {-1.7129732832606281`, -0.6226790336085839, 
       2.1520399701408293`}, {-1.7347605539444346`, -0.7440918056488834, 
       3.14440293479723}, {-1.566261453691294, -0.22604637267160832`, 
       3.982995197213996}, {-2.3036037329531447`, -0.6021410843904207, 
       3.421854278165953}, {-2.193221325716764, -0.9845754856379749, 
       2.5044886733413954`}, {-2.0620506149448303`, -0.03073944072479684, 
       2.2343201258382277`}, {-1.2873570448473208`, 0.5588989148276712, 
       2.462741845713892}, {-1.4220259335153165`, -0.31405707094661794`, 
       1.9939005747854828`}, {-1.3238259948369078`, -0.1061626946945704, 
       2.967110059103391}, {-0.9368540354836776, -0.21809815803084598`, 
       3.8823822343179635`}, {-1.1699207976717345`, -1.0207244936895106`, 
       3.3333186226386604`}, {-1.9674520205689356`, -0.9287708148636676, 
       2.737090084698309}, {-2.230709498037316, 0.03490139499950484, 
       2.7821608345746416`}, {-2.2709686282815555`, -0.030624975668698207`, 
       1.7851224716321565`}, {-2.7985383818268215`, 0.7639690209234979, 
       2.0856063076763403`}, {-1.8929990618142214`, 1.0765990553187508`, 
       1.798794520078374}, {-2.5816508468588526`, 0.5359764381696464, 
       2.281998312263096}, {-2.230543796184852, 1.4314642740461254`, 
       2.00845603990969}, {-2.023676427155628, 0.4530997927592676, 
       2.0054839384268224`}, {-1.157514816835328, 0.22989487418076957`, 
       1.5583333719173844`}, {-1.7950644003661833`, -0.3553164691045424, 
       2.059390466697843}, {-2.6094337717853957`, -0.906053179493159, 
       1.8763833555666043`}, {-1.6576865677955337`, -0.6308858865648593, 
       1.7405149611549837`}, {-1.8895620971895781`, -0.6407433594799646, 
       2.7132104783112823`}, {-2.307835633897635, 0.26687791365711433`, 
       2.7488597845985248`}, {-2.2475336640410317`, 0.2775936036590589, 
       1.750737123589771}, {-2.9240596761164133`, -0.2790403207803222, 
       1.2685844204462604`}, {-2.258016364443887, 0.00327726942330292, 
       0.5781620242003739}, {-1.7996183908794072`, 0.8330861799265945, 
       0.8964205195800236}, {-2.192572866488212, 0.5573444491076889, 
       0.019178661262715835`}, {-3.103122950568308, 0.35537661801260845`, 
       0.37988288855216573`}, {-3.8602448087149708`, -0.11120316616994375`, \
-0.07735861974373232}, {-4.474139509324141, 
       0.2871317926799883, -0.7588735184231372}, {-4.549024873130336, \
-0.3983722640979543, -1.483080926855692}, {-3.573021644674984, \
-0.22425137291281916`, -1.6138464165600612`}, {-4.267412703069773, 
       0.2717049490823709, -1.0924555989439786`}, {-4.457348130508649, 
       0.8229644644196452, -1.9048825065201154`}, {-5.272581436463422, 
       1.303898597928002, -1.5822418145908141`}, {-4.830894649786972, 
       1.4100492639139024`, -2.473109267462554}, {-3.936863828254682, 
       1.552728844749815, -2.0484312395840356`}, {-3.0007253297524876`, 
       1.3677949582201758`, -2.3475034202279392`}, {-2.9510953890233926`, 
       1.3286151602575815`, -1.3495045162130919`}, {-3.4543723525206356`, 
       0.5336547612148735, -1.0107564358246512`}, {-3.209738526180269, 
       1.0561710217697744`, -0.19397552978815846`}, {-3.3832295996779034`, 
       1.4950625759003273`, -1.0756075681859847`}, {-3.30790430695208, 
       2.0052072772281417`, -1.9323913705439215`}, {-3.521907127711369, 
       2.5102420440432667`, -1.096243849459837}, {-3.949123919310423, 
       2.6123318642746094`, -1.9946109690612517`}, {-2.9620365334926153`, 
       2.525343556973411, -2.129115716755295}, {-2.840423046468032, 
       1.5522841292799847`, -2.3249868732604413`}, {-2.6812449382440007`, 
       1.1481192230784276`, -3.22571605478911}, {-3.5711147434020427`, 
       1.4762950872974043`, -2.908805449078104}, {-3.037952633135808, 
       0.9626469603480979, -3.581043328000383}, {-2.3948632183745153`, 
       1.4593930184127815`, -4.163863504743756}, {-1.8130086712018196`, 
       0.6661019048559548, -4.343124473965244}, {-1.524351819349986, 
       0.16359891260900272`, -5.158089482209063}, {-2.358853797137907, 
       0.580960983732829, -5.517832933372914}, {-2.384864167884058, \
-0.0974569288660172, -6.2520485668748655`}, {-1.7775205597599573`, 
       0.4478367474761995, -5.674304204538037}, {-0.8904097548028017, 
       0.07658296273076581, -5.400068818344974}, {-0.7484450703017352, 
       0.5553794044836111, -6.266440560566133}, {-1.355453106007213, 
       0.5375108365156439, -7.0609353427187616`}, {-0.6280201966982725, 
       0.167875032972708, -6.482825720593771}, {-1.6076043656701438`, 
       0.19850887427266733`, -6.284138973006276}, {-1.4762508494431907`, 
       0.23643203408143793`, -5.293529015593705}, {-1.4182836823481744`, 
       0.15904467887911566`, -6.288843541155233}, {-1.4893172121661904`, \
-0.24452532235445418`, -7.201030743294097}, {-2.48616247954964, \
-0.2729394240116258, -7.275139796197469}, {-3.386472077049451, \
-0.695283930290787, -7.380343154820377}, {-3.304114592762171, \
-0.9207704512196828, -6.409584135464258}, {-2.5593952697978697`, \
-1.1961727022993318`, -7.017487688755283}, {-2.9474189901290613`, \
-1.4620978677657923`, -6.135035764380943}, {-3.415181765249569, \
-0.6428654746922424, -5.803288462431785}, {-3.5510427740667883`, \
-1.0379944261429492`, -4.894764991073652}, {-4.290539491637808, \
-0.38278647609029637`, -5.049190205625836}, {-4.246586987608019, \
-0.4808531639579821, -4.054981423668961}, {-4.8372035839197185`, 
       0.23841603439723985`, -3.6891619921749252`}, {-4.870671023325116, \
-0.7329605806554349, -3.9243372507130077`}}]}}},
  ImageSize->Large,
  ViewPoint->
   NCache[{Pi, Rational[1, 2] Pi, 2}, {
    3.141592653589793, 1.5707963267948966`, 2}],
  ViewProjection->"Orthographic",
  ViewVertical->{-0.0007651849360223063, 0.0023611168622103313`, 
   0.9999995521630854}]], "Output",
 CellChangeTimes->{
  3.813925133558794*^9, 3.81393713097329*^9, 3.813939128730955*^9, {
   3.813948611219714*^9, 3.813948613861416*^9}, 3.813955663674077*^9, 
   3.813957240877688*^9, 3.813957483761889*^9, 3.8140048812836018`*^9, 
   3.814020997553772*^9, 3.814021228179023*^9, 3.814021416758788*^9, 
   3.814103693074842*^9, 3.814103886083829*^9, 3.814103960722322*^9, 
   3.814104061952668*^9, {3.8141041004000683`*^9, 3.814104124458255*^9}, 
   3.8141041558208323`*^9, 3.814104265332164*^9, 3.8141077795095987`*^9, 
   3.814713459158909*^9, 3.814729447734779*^9, 3.8147298436610622`*^9, 
   3.8147841818027573`*^9, 3.814785269726491*^9, 3.814786874974752*^9, 
   3.814787185999413*^9, 3.81478725302343*^9, 3.814790571761825*^9, 
   3.814799153916161*^9, 3.814799271138557*^9, 3.81480354937045*^9, 
   3.814808789315526*^9, 3.814816060376195*^9, 3.8148170783168*^9, 
   3.814817205263994*^9, 3.8148179404184513`*^9, 3.814818384679858*^9, 
   3.8148199237342777`*^9, 3.814962880550178*^9, 3.814964277081469*^9, 
   3.8149656665668173`*^9, 3.8149688041869287`*^9, 3.814982334376495*^9, 
   3.814982453945196*^9},ExpressionUUID->"0e00d1bd-2149-47a0-94d8-\
e88fcd261199"]
}, Open  ]],

Cell["\<\

Simulate and plot multiple paths of the following stochastic difference \
equation, 
for any initial condition \[Pi]0\[Element](0,1): \[Pi]t+1=\[Gamma]\[Pi]t with \
probability 1/3\[Pi]t and \[Pi]t+1=(1\[Minus]\[Gamma])\[Pi]t with probability \
2/3\[Pi]t, where \[Gamma]\[Element](0,1) is a parameter.\
\>", "Text",
 CellChangeTimes->{{3.814033307582952*^9, 3.814033322725789*^9}, {
  3.814126771237859*^9, 3.814126786769628*^9}, {3.8141268189672003`*^9, 
  3.81412683849028*^9}, {3.814380628204583*^9, 
  3.814380632277377*^9}},ExpressionUUID->"33ab6bbc-7f4e-48a9-a807-\
2db4e2ddeb8e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"pi0", ",", "gamma"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pi0", "=", 
  RowBox[{"RandomReal", "[", "]"}]}], "\n", 
 RowBox[{"gamma", "=", 
  RowBox[{"RandomReal", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"nextpi", "[", "pi_", "]"}], ":=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "3"}], "*", "pi"}], ",", 
      RowBox[{
       RowBox[{"2", "/", "3"}], "*", "pi"}], ",", 
      RowBox[{"1", "-", "pi"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gamma", "*", "pi"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "gamma"}], ")"}], "*", "pi"}], ",", "pi"}], "}"}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{"nextpi", ",", "pi0", ",", "20"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "trajectory", "]"}]}], "Input",
 CellChangeTimes->{{3.8140340167618856`*^9, 
  3.8140340885615473`*^9}},ExpressionUUID->"ee17fe73-72d1-4703-9da7-\
b956bb731a18"],

Cell[BoxData["0.876608492574193`"], "Output",
 CellChangeTimes->{{3.81403328012189*^9, 3.814033284763454*^9}, {
   3.814034032981138*^9, 3.814034089228672*^9}, 3.814103693099783*^9, 
   3.814103886149399*^9, 3.8141039607818127`*^9, 3.814104061977598*^9, {
   3.814104100428569*^9, 3.814104124524105*^9}, 3.814104155856921*^9, 
   3.814104265346637*^9, 3.81410777953898*^9, 3.814713459182032*^9, 
   3.81472944776409*^9, 3.814729843712538*^9, 3.814784181816358*^9, 
   3.8147852697445602`*^9, 3.8147868750352707`*^9, 3.8147871860283546`*^9, 
   3.814787253044402*^9, 3.8147905717788258`*^9, 3.814799153942813*^9, 
   3.81479927115658*^9, 3.8148035494116*^9, 3.8148087893451*^9, 
   3.814816060398102*^9, 3.81481707833357*^9, 3.8148172052938232`*^9, 
   3.81481794046655*^9, 3.814818384699213*^9, 3.8148199237546673`*^9, 
   3.814962880574718*^9, 3.814964277106238*^9, 3.8149656665836887`*^9, 
   3.8149688042443333`*^9, 3.814982334391469*^9, 
   3.8149824539535093`*^9},ExpressionUUID->"39c269ec-9e3e-4e26-a312-\
8ae197dc8a89"],

Cell[BoxData["0.5219642502018771`"], "Output",
 CellChangeTimes->{{3.81403328012189*^9, 3.814033284763454*^9}, {
   3.814034032981138*^9, 3.814034089228672*^9}, 3.814103693099783*^9, 
   3.814103886149399*^9, 3.8141039607818127`*^9, 3.814104061977598*^9, {
   3.814104100428569*^9, 3.814104124524105*^9}, 3.814104155856921*^9, 
   3.814104265346637*^9, 3.81410777953898*^9, 3.814713459182032*^9, 
   3.81472944776409*^9, 3.814729843712538*^9, 3.814784181816358*^9, 
   3.8147852697445602`*^9, 3.8147868750352707`*^9, 3.8147871860283546`*^9, 
   3.814787253044402*^9, 3.8147905717788258`*^9, 3.814799153942813*^9, 
   3.81479927115658*^9, 3.8148035494116*^9, 3.8148087893451*^9, 
   3.814816060398102*^9, 3.81481707833357*^9, 3.8148172052938232`*^9, 
   3.81481794046655*^9, 3.814818384699213*^9, 3.8148199237546673`*^9, 
   3.814962880574718*^9, 3.814964277106238*^9, 3.8149656665836887`*^9, 
   3.8149688042443333`*^9, 3.814982334391469*^9, 
   3.814982453955471*^9},ExpressionUUID->"aa7b9e2d-714c-42db-986e-\
36bce7fcdcdc"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7DsEHjjo8r6xhwo4aPw4OnWRx10on8PhrEH5
lsD/p6F8AYcdWtuMtK32QvkiaHwJNL4MGl8Bja+ExldB46uh8TXQ+FpofB00
vh4a3wCNb4jGN0LjG6PxTRwMiicy1H5cDeWbwvkAWeNQoA==
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 21.}, {0, 0.876608492574193}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81403328012189*^9, 3.814033284763454*^9}, {
   3.814034032981138*^9, 3.814034089228672*^9}, 3.814103693099783*^9, 
   3.814103886149399*^9, 3.8141039607818127`*^9, 3.814104061977598*^9, {
   3.814104100428569*^9, 3.814104124524105*^9}, 3.814104155856921*^9, 
   3.814104265346637*^9, 3.81410777953898*^9, 3.814713459182032*^9, 
   3.81472944776409*^9, 3.814729843712538*^9, 3.814784181816358*^9, 
   3.8147852697445602`*^9, 3.8147868750352707`*^9, 3.8147871860283546`*^9, 
   3.814787253044402*^9, 3.8147905717788258`*^9, 3.814799153942813*^9, 
   3.81479927115658*^9, 3.8148035494116*^9, 3.8148087893451*^9, 
   3.814816060398102*^9, 3.81481707833357*^9, 3.8148172052938232`*^9, 
   3.81481794046655*^9, 3.814818384699213*^9, 3.8148199237546673`*^9, 
   3.814962880574718*^9, 3.814964277106238*^9, 3.8149656665836887`*^9, 
   3.8149688042443333`*^9, 3.814982334391469*^9, 
   3.8149824539958553`*^9},ExpressionUUID->"03a66277-a40c-487b-9d51-\
6bc35a2fe0ab"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1224, 1367},
WindowMargins->{{Automatic, 24}, {0, Automatic}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"DarkThemeCol.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 317, 5, 98, "Title",ExpressionUUID->"81a7a06d-52c2-4d11-913b-a8af72b73d32"],
Cell[900, 29, 416, 10, 54, "Text",ExpressionUUID->"2eae75d4-ca88-44fb-8a4b-ce9471ca3ecb"],
Cell[1319, 41, 399, 12, 56, "DisplayFormula",ExpressionUUID->"7a6594ca-5f65-4643-81bf-070972108567"],
Cell[1721, 55, 2213, 52, 223, "Text",ExpressionUUID->"fc817aa9-4e27-4cda-a5d2-c90744d66bf9"],
Cell[CellGroupData[{
Cell[3959, 111, 1039, 28, 95, "Input",ExpressionUUID->"06cb5373-a65a-45ae-a358-685a790c2a6e"],
Cell[5001, 141, 14539, 256, 258, "Output",ExpressionUUID->"9405a511-f081-425d-b925-11f2ebd03ed5"]
}, Open  ]],
Cell[19555, 400, 642, 14, 159, "Text",ExpressionUUID->"16cf7a31-0bd2-4869-8567-e52be2e652e5"],
Cell[20200, 416, 1380, 37, 163, "Input",ExpressionUUID->"98489bbf-6370-41e4-acd1-12eea7aa7e00"],
Cell[21583, 455, 866, 18, 117, "Text",ExpressionUUID->"b2689eb9-38ca-4d95-9543-2ec0a5a86aeb"],
Cell[CellGroupData[{
Cell[22474, 477, 1852, 45, 147, "Input",ExpressionUUID->"01fda80a-9471-4390-801a-580cf7589d8a"],
Cell[24329, 524, 26416, 671, 174, "Output",ExpressionUUID->"d42bb41e-4cef-41c5-ad91-d0bdd2b30c8d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50782, 1200, 1402, 41, 117, "Input",ExpressionUUID->"f38abcd7-c3c7-4f49-9ba8-e9e7a92e33d9"],
Cell[52187, 1243, 1334, 22, 50, "Output",ExpressionUUID->"9514a35b-44fa-4690-ae43-33d3cdb8989d"]
}, Open  ]],
Cell[53536, 1268, 683, 13, 75, "Text",ExpressionUUID->"c9f93fc5-88c4-4b69-a77f-37fc6cd3f55c"],
Cell[CellGroupData[{
Cell[54244, 1285, 546, 11, 47, "Input",ExpressionUUID->"81c82f7e-ec77-41d8-a7df-0888f842c71d"],
Cell[54793, 1298, 1295, 19, 50, "Output",ExpressionUUID->"8e0187c1-b006-4762-901f-d5f45e4c98dd"]
}, Open  ]],
Cell[56103, 1320, 255, 6, 33, "Text",ExpressionUUID->"518b6630-cd81-4b3b-ad25-18b1f582a02a"],
Cell[CellGroupData[{
Cell[56383, 1330, 837, 20, 71, "Input",ExpressionUUID->"c4175dc0-418a-4098-b3e8-c5c8ef537c32"],
Cell[57223, 1352, 1278, 21, 41, "Message",ExpressionUUID->"2c75ad41-b48d-4548-91e6-4b3faf7f081c"],
Cell[58504, 1375, 1270, 21, 41, "Message",ExpressionUUID->"dc23c131-1009-42d4-8c99-98f395840901"],
Cell[59777, 1398, 829, 13, 50, "Output",ExpressionUUID->"be6164bc-7519-4695-9d8f-95043e60d85c"]
}, Open  ]],
Cell[60621, 1414, 838, 16, 96, "Text",ExpressionUUID->"c95b5967-6242-41bb-a727-e0f1a1324488"],
Cell[CellGroupData[{
Cell[61484, 1434, 444, 14, 63, "Input",ExpressionUUID->"872a2ab5-bda8-402c-995b-f3038e2706d1"],
Cell[61931, 1450, 1034, 16, 50, "Output",ExpressionUUID->"70b21aa2-f51e-4832-a37a-47e62b1c1768"]
}, Open  ]],
Cell[62980, 1469, 1380, 32, 159, "Text",ExpressionUUID->"d77cc4b7-e60b-4440-af54-0c22cca304d8"],
Cell[64363, 1503, 620, 20, 70, "DisplayFormula",ExpressionUUID->"e944003f-a0d6-4af6-b736-4b594cdd9c83"],
Cell[64986, 1525, 1589, 44, 72, "Text",ExpressionUUID->"0092a223-5f26-4bdb-8379-10a5ea4351a8"],
Cell[66578, 1571, 447, 14, 32, "DisplayFormula",ExpressionUUID->"e57af973-5461-46d6-972e-2129f57dfda6"],
Cell[67028, 1587, 229, 4, 33, "Text",ExpressionUUID->"19247c26-c3a8-4372-b60d-338afe186874"],
Cell[67260, 1593, 743, 24, 70, "DisplayFormula",ExpressionUUID->"0201b2b7-a1ce-4d26-89bb-efc89dfef6a7"],
Cell[68006, 1619, 1263, 30, 40, "Text",ExpressionUUID->"38621163-7005-43f3-9d5b-84fd4085dd3c"],
Cell[CellGroupData[{
Cell[69294, 1653, 2109, 53, 174, "Input",ExpressionUUID->"d050fa1f-3566-4f69-8922-e750c989866f"],
Cell[71406, 1708, 1385, 20, 50, "Output",ExpressionUUID->"7ddd7c30-a05e-4085-ba44-f3a4abf888bb"],
Cell[72794, 1730, 1382, 20, 50, "Output",ExpressionUUID->"1ffd9dba-3285-4643-86c9-040387aeb7c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74213, 1755, 243, 7, 47, "Input",ExpressionUUID->"b1dd140f-8956-42d7-bf19-50ed627216b6"],
Cell[74459, 1764, 936, 14, 50, "Output",ExpressionUUID->"8cd4fd05-2f27-47c1-a843-395f9e102bbb"]
}, Open  ]],
Cell[75410, 1781, 1653, 31, 196, "Text",ExpressionUUID->"e0bd3e94-c21b-4eba-906b-d950772cf66e"],
Cell[77066, 1814, 516, 16, 56, "DisplayFormulaNumbered",ExpressionUUID->"159d8802-76fb-47e1-96e0-75d45c3e4846"],
Cell[77585, 1832, 163, 3, 33, "Text",ExpressionUUID->"42372d52-a2f9-42d1-bd82-55e453477733"],
Cell[77751, 1837, 1026, 33, 35, "DisplayFormulaNumbered",ExpressionUUID->"9a8aab9c-32f8-4357-81e3-5d1f602a8236"],
Cell[78780, 1872, 226, 5, 33, "Text",ExpressionUUID->"23e56697-34e5-43cc-a12d-c305af272077"],
Cell[79009, 1879, 604, 19, 56, "DisplayFormulaNumbered",ExpressionUUID->"3a0ea884-3577-481e-adb2-310d5d800509"],
Cell[79616, 1900, 392, 10, 33, "Text",ExpressionUUID->"f2d96c82-b23f-4ec3-854f-ba52e489b966"],
Cell[80011, 1912, 1160, 41, 58, "DisplayFormulaNumbered",ExpressionUUID->"9d10da2e-31ef-4f8a-8d01-d3b1a5e0b887"],
Cell[81174, 1955, 199, 3, 33, "Text",ExpressionUUID->"7f4d0690-3cfc-4e82-b10b-50335ef0fc48"],
Cell[81376, 1960, 1710, 58, 117, "DisplayFormulaNumbered",ExpressionUUID->"fe7bfd64-c27c-48c7-acf3-ab51115df657"],
Cell[83089, 2020, 900, 25, 89, "Text",ExpressionUUID->"3a38d5e8-0c4e-43fc-a071-e1d65ed7add5"],
Cell[83992, 2047, 3611, 123, 385, "DisplayFormula",ExpressionUUID->"e71733bb-8150-48f0-ace3-f1a338c75b47"],
Cell[87606, 2172, 673, 17, 61, "Text",ExpressionUUID->"f57a00cc-ad4d-49fd-bf3a-5b2c52209fc0"],
Cell[88282, 2191, 1747, 60, 91, "DisplayFormula",ExpressionUUID->"9df1a3ee-a988-4b0b-a881-cc6a507fc862"],
Cell[90032, 2253, 252, 7, 54, "Text",ExpressionUUID->"05cce0bb-6549-4c9b-a058-1a2c434b7911"],
Cell[CellGroupData[{
Cell[90309, 2264, 847, 27, 104, "Input",ExpressionUUID->"f149ad1b-afd7-454c-bf83-ee1c4b6074bf"],
Cell[91159, 2293, 811, 13, 50, "Output",ExpressionUUID->"ab2af1b9-60ea-42bc-8d49-7a4dd4ee598d"]
}, Open  ]],
Cell[91985, 2309, 5822, 130, 550, "Text",ExpressionUUID->"27a56ffe-7920-4d57-8ea6-79cd1d832806"],
Cell[97810, 2441, 1194, 34, 70, "DisplayFormula",ExpressionUUID->"0653af52-3b3f-4fea-b453-f7e5c99cb461"],
Cell[99007, 2477, 188, 3, 33, "Text",ExpressionUUID->"034a8b73-6909-425d-b53f-76eed01bb7e6"],
Cell[99198, 2482, 439, 13, 54, "DisplayFormula",ExpressionUUID->"fa044ac4-375d-4efe-bbd8-4f75c27a2d50"],
Cell[99640, 2497, 194, 4, 33, "Text",ExpressionUUID->"22eef3e5-cfb1-41ba-b58a-2c05892456fc"],
Cell[99837, 2503, 744, 27, 27, "DisplayFormula",ExpressionUUID->"2cb99a40-cc16-4479-8d68-3ad5a5408791"],
Cell[100584, 2532, 266, 7, 54, "Text",ExpressionUUID->"70ca3db4-d6b4-43c9-8a62-0a4da6ed8536"],
Cell[100853, 2541, 1671, 52, 151, "DisplayFormula",ExpressionUUID->"a46c7281-2c4a-4a3b-82b9-21298957692e"],
Cell[102527, 2595, 622, 18, 51, "DisplayFormulaNumbered",ExpressionUUID->"d4a478ad-077f-41cf-ac05-45a284edd5e8"],
Cell[103152, 2615, 243, 4, 33, "Text",ExpressionUUID->"dc9b2615-1b37-4b39-a150-98a9da8e90ed"],
Cell[103398, 2621, 425, 14, 70, "DisplayFormula",ExpressionUUID->"cb3545fd-8777-42c2-838d-e3ac50b92dba"],
Cell[103826, 2637, 747, 18, 56, "Text",ExpressionUUID->"76a6a178-a58c-49b6-bd02-c18b12f680ec"],
Cell[104576, 2657, 689, 19, 35, "DisplayFormula",ExpressionUUID->"1c79ed8a-7794-4139-9011-b75665f55682"],
Cell[105268, 2678, 787, 19, 59, "Text",ExpressionUUID->"4f10aaa8-3aee-47df-9a5a-8c23898ae3a6"],
Cell[106058, 2699, 1683, 51, 123, "DisplayFormula",ExpressionUUID->"742ddbab-4106-4c72-b723-671beca58f68"],
Cell[107744, 2752, 1079, 29, 124, "Text",ExpressionUUID->"e24319e6-eaed-448e-af8c-8c301c74496d"],
Cell[108826, 2783, 512, 16, 70, "DisplayFormula",ExpressionUUID->"4601084f-5f58-4d57-833f-dcb95de905c6"],
Cell[109341, 2801, 198, 3, 33, "Text",ExpressionUUID->"412b5f70-4a09-44c3-b568-00139ad11eb2"],
Cell[109542, 2806, 593, 19, 53, "DisplayFormula",ExpressionUUID->"02b1982a-714b-40b6-b07e-24dccbabc700"],
Cell[110138, 2827, 161, 2, 33, "Text",ExpressionUUID->"43ab4e9e-2efb-462d-a412-89ff65b7410b"],
Cell[110302, 2831, 646, 20, 53, "DisplayFormula",ExpressionUUID->"eb80da83-1a7d-405a-b20d-495c92e9293f"],
Cell[110951, 2853, 286, 6, 54, "Text",ExpressionUUID->"80d7fe3d-237e-4087-b22b-cb27d34a2513"],
Cell[111240, 2861, 639, 21, 86, "DisplayFormulaNumbered",ExpressionUUID->"fe7c185c-27b8-417a-9358-06c2890e3c80"],
Cell[111882, 2884, 303, 7, 33, "Text",ExpressionUUID->"5c1a4235-3837-4fc8-aff6-aa4728d68502"],
Cell[112188, 2893, 1042, 20, 177, "Text",ExpressionUUID->"877ede12-46a5-47ca-a3a6-97445396ad33"],
Cell[113233, 2915, 429, 11, 54, "DisplayFormula",ExpressionUUID->"b8daa8fc-f74d-45ea-97e8-045e56c679a7"],
Cell[113665, 2928, 34520, 573, 373, "Text",ExpressionUUID->"0c578683-82df-4d87-91a7-03c1eb5a2c14"],
Cell[148188, 3503, 490, 14, 57, "DisplayFormula",ExpressionUUID->"48b9e1d9-1310-4188-955d-394601600ea9"],
Cell[148681, 3519, 30060, 515, 548, "Text",ExpressionUUID->"d6f97f75-8b7f-4150-8a81-0f25323dea35"],
Cell[178744, 4036, 8470, 229, 530, "Text",ExpressionUUID->"44a96503-23f5-4c81-bb2c-a89559c1bb62"],
Cell[187217, 4267, 625, 20, 44, "DisplayFormula",ExpressionUUID->"10cb2dc8-596c-4dbb-a2da-f584cd944be6"],
Cell[187845, 4289, 569, 15, 39, "Text",ExpressionUUID->"072c55d0-27f1-49bb-bab2-50bb3f031b2f"],
Cell[188417, 4306, 428, 13, 35, "DisplayFormula",ExpressionUUID->"70b025ab-3598-4bfc-a41b-1b0b681de6a9"],
Cell[188848, 4321, 626, 15, 67, "Text",ExpressionUUID->"6b89f3e7-9d03-4dde-9a17-d11150b4185d"],
Cell[189477, 4338, 474, 15, 44, "DisplayFormula",ExpressionUUID->"16b7ace2-9f57-4f66-9b0b-4cfc0106653d"],
Cell[189954, 4355, 1778, 49, 105, "Text",ExpressionUUID->"51a178ad-3228-48c2-a28a-a637f24c0090"],
Cell[191735, 4406, 1673, 54, 70, "DisplayFormula",ExpressionUUID->"af86503c-da67-42a2-8405-b6d42236e4dd"],
Cell[193411, 4462, 2744, 46, 99, "Text",ExpressionUUID->"c7cd07a2-9e7d-4dd8-96d6-daf05b79437f"],
Cell[196158, 4510, 2259, 75, 70, "DisplayFormula",ExpressionUUID->"f2639d95-4267-4e40-bfb7-8530957e948e",
 InitializationCell->True],
Cell[198420, 4587, 1312, 34, 39, "Text",ExpressionUUID->"04d1c359-3700-43a6-8c71-e8307ff56370"],
Cell[199735, 4623, 563, 18, 51, "DisplayFormula",ExpressionUUID->"68bda62b-52cd-48af-8a15-0826fd67d33d"],
Cell[200301, 4643, 1781, 44, 130, "Text",ExpressionUUID->"3140814e-1c43-48db-9811-4615869b1e16"],
Cell[202085, 4689, 1302, 42, 115, "DisplayFormula",ExpressionUUID->"716d3ef9-ddad-4986-8ef2-10ee56fb079a"],
Cell[203390, 4733, 706, 18, 75, "Text",ExpressionUUID->"b8c5eed3-d76c-469f-876d-1839d0e93e84"],
Cell[204099, 4753, 2361, 79, 136, "DisplayFormula",ExpressionUUID->"f3734048-33ca-4039-895c-9c38c6d67426"],
Cell[206463, 4834, 1349, 34, 135, "Text",ExpressionUUID->"cf238d45-d57b-41a1-aff7-549c02105c72"],
Cell[207815, 4870, 577, 13, 32, "DisplayFormula",ExpressionUUID->"e5674680-8339-441f-b7d8-a1fe6178b9c6"],
Cell[208395, 4885, 3927, 101, 252, "Text",ExpressionUUID->"0cf988df-c900-420c-a03f-273eac332201"],
Cell[212325, 4988, 525, 14, 70, "DisplayFormula",ExpressionUUID->"637ac7b9-21d4-416c-9192-54bdea03fcca"],
Cell[212853, 5004, 817, 21, 51, "Text",ExpressionUUID->"80244e20-2091-40e5-b86f-acf7e0cd3ab9"],
Cell[213673, 5027, 639, 21, 70, "DisplayFormula",ExpressionUUID->"1d1dbed5-189c-45b8-8225-68bc5975f732"],
Cell[214315, 5050, 1110, 23, 60, "Text",ExpressionUUID->"b21abe3d-9148-40a6-82f7-5ce8c15cffa4"],
Cell[215428, 5075, 428, 13, 57, "DisplayFormula",ExpressionUUID->"7c323f50-2d6f-46c2-8437-4ca66fe31f4e"],
Cell[215859, 5090, 2081, 43, 215, "Text",ExpressionUUID->"c2c43ff2-2cf5-4f3c-85d3-b56d45674af3"],
Cell[CellGroupData[{
Cell[217965, 5137, 352, 10, 79, "Input",ExpressionUUID->"459ba7c4-814e-419c-bf6f-dba1c883d858"],
Cell[218320, 5149, 750, 11, 50, "Output",ExpressionUUID->"840a9792-1b46-4089-9807-5b0b893eba8a"],
Cell[219073, 5162, 769, 11, 50, "Output",ExpressionUUID->"ce3452f0-2a5b-419f-9aec-205d6d404d87"]
}, Open  ]],
Cell[219857, 5176, 627, 12, 51, "Text",ExpressionUUID->"75063719-d76c-44f7-8a2f-fc790ffc3771"],
Cell[CellGroupData[{
Cell[220509, 5192, 1144, 33, 143, "Input",ExpressionUUID->"773f670a-193c-4cf8-bd71-e2ffb7cbf503"],
Cell[221656, 5227, 1000, 16, 53, "Output",ExpressionUUID->"c9ff56d9-7916-4879-9ad7-dbb88e172e14"],
Cell[222659, 5245, 921, 13, 50, "Output",ExpressionUUID->"2621d6f7-dd67-4738-b09b-403010b51af7"]
}, Open  ]],
Cell[223595, 5261, 4057, 100, 407, "Text",ExpressionUUID->"df42ce10-d99a-40c5-b8c1-f29d8482cc5c"],
Cell[227655, 5363, 472, 16, 68, "DisplayFormula",ExpressionUUID->"c8daccdd-b583-47e2-aa3f-5eb5a87d4b96"],
Cell[228130, 5381, 254, 6, 54, "Text",ExpressionUUID->"93ee72f9-ad52-4689-9a83-d2f25c26f338",
 InitializationCell->True],
Cell[228387, 5389, 1061, 35, 68, "DisplayFormula",ExpressionUUID->"dcb29aa3-7347-4289-a07e-7c5c439a072c"],
Cell[229451, 5426, 2060, 53, 182, "Text",ExpressionUUID->"b97de6a5-8e46-4bb8-aa75-7fe5fbf443e6"],
Cell[231514, 5481, 631, 20, 68, "DisplayFormula",ExpressionUUID->"29058122-11c6-4165-aae4-e7e749df4ac5"],
Cell[232148, 5503, 3303, 102, 239, "Text",ExpressionUUID->"296fadf0-b401-4901-8ed9-1ed730da5b2f"],
Cell[235454, 5607, 406, 14, 61, "DisplayFormula",ExpressionUUID->"9663c372-0868-4197-af29-6cd50537a3ae"],
Cell[235863, 5623, 248, 5, 54, "Text",ExpressionUUID->"6c87b10f-92a1-4e24-b12a-7471b48c7906"],
Cell[236114, 5630, 952, 31, 64, "DisplayFormula",ExpressionUUID->"0d5e6b36-2105-40d4-96f8-bb9178e1a484"],
Cell[237069, 5663, 2094, 57, 228, "Text",ExpressionUUID->"d2a099f7-0e64-460c-be56-87b468010510"],
Cell[239166, 5722, 1790, 59, 104, "DisplayFormula",ExpressionUUID->"9233a9eb-6d55-474a-b8e1-4a3adcba05a1"],
Cell[240959, 5783, 2030, 67, 94, "Text",ExpressionUUID->"ac0640b4-292e-4891-87cf-482acd7f01be"],
Cell[242992, 5852, 418, 14, 57, "DisplayFormula",ExpressionUUID->"bce3ea56-7054-43e9-80e9-398942fd1807"],
Cell[243413, 5868, 3581, 81, 359, "Text",ExpressionUUID->"a902fd77-1ebe-4d09-972a-e94441174014"],
Cell[246997, 5951, 485, 17, 64, "DisplayFormula",ExpressionUUID->"ee377539-9dfa-42f1-9a2f-38674b206798"],
Cell[247485, 5970, 554, 13, 80, "Text",ExpressionUUID->"4faf4b7d-925f-4c03-ab31-10f7f41d2789"],
Cell[248042, 5985, 526, 15, 43, "DisplayFormula",ExpressionUUID->"eb361531-92f6-4da2-ba0b-ac817a734696"],
Cell[248571, 6002, 704, 13, 75, "Text",ExpressionUUID->"a4eca03e-639b-40b2-af49-9eb2574ddbfb"],
Cell[249278, 6017, 559, 12, 75, "Text",ExpressionUUID->"11250c61-ae3d-45fa-aeac-55a54d8927ea"],
Cell[249840, 6031, 366, 12, 66, "DisplayFormula",ExpressionUUID->"7669e511-389f-4233-bf9d-4a6c6965f3ef"],
Cell[250209, 6045, 312, 7, 33, "Text",ExpressionUUID->"0e9940c5-3dd1-4b5f-a024-94d595959309"],
Cell[250524, 6054, 541, 17, 67, "DisplayFormula",ExpressionUUID->"0291c194-270e-48b9-97ba-df6577a7d845"],
Cell[251068, 6073, 604, 14, 81, "Text",ExpressionUUID->"7140e757-79c4-429f-8775-1a35eae8ed54"],
Cell[251675, 6089, 440, 16, 54, "DisplayFormula",ExpressionUUID->"035c96f5-dae9-40db-b770-96c0b923c80b"],
Cell[252118, 6107, 351, 11, 39, "Text",ExpressionUUID->"17774b23-1b55-4fb3-a978-6492a56b7f04"],
Cell[252472, 6120, 562, 20, 54, "DisplayFormula",ExpressionUUID->"549521e0-0f5e-487d-b1e5-0b58098ebfa3"],
Cell[253037, 6142, 279, 6, 33, "Text",ExpressionUUID->"79d3c8ed-82e7-4c0a-94a3-5a80cd88b32f"],
Cell[253319, 6150, 501, 17, 54, "DisplayFormula",ExpressionUUID->"c3f131bb-c7d3-4da5-8514-fe296c44ff65"],
Cell[253823, 6169, 150, 3, 33, "Text",ExpressionUUID->"ed778a08-b566-4da9-9081-57cae6a750ed"],
Cell[253976, 6174, 501, 17, 54, "DisplayFormula",ExpressionUUID->"8634f84c-b6cc-44c5-8899-6597c0745792"],
Cell[254480, 6193, 159, 3, 33, "Text",ExpressionUUID->"8aa73ae2-dcb9-4a93-80e5-5a2c9ee94436"],
Cell[254642, 6198, 518, 18, 54, "DisplayFormula",ExpressionUUID->"63212abb-eaae-4625-8bd0-d8337cb62e75"],
Cell[255163, 6218, 342, 7, 33, "Text",ExpressionUUID->"e10049bb-98a7-47f0-9cee-0b7b7649063d"],
Cell[255508, 6227, 9815, 169, 144, "Text",ExpressionUUID->"a3f9f5aa-4a53-4dae-8a07-806407be3c80"],
Cell[265326, 6398, 546, 10, 75, "Text",ExpressionUUID->"e39a9cbc-2e69-4712-adc3-521c22f55c6e"],
Cell[265875, 6410, 657, 12, 138, "Text",ExpressionUUID->"d86cd1d7-2475-45de-b0b9-0bc9851029d5"],
Cell[CellGroupData[{
Cell[266557, 6426, 1454, 41, 227, "Input",ExpressionUUID->"f0e7df27-a963-431f-bb7a-ecd4457cda5d"],
Cell[268014, 6469, 935, 15, 53, "Output",ExpressionUUID->"73973ca2-1a80-4209-9f96-da09a95a7535"]
}, Open  ]],
Cell[268964, 6487, 637, 15, 138, "Text",ExpressionUUID->"1a485541-cb74-4765-ac56-570c61fde0ac"],
Cell[CellGroupData[{
Cell[269626, 6506, 2373, 65, 271, "Input",ExpressionUUID->"e70eb4f1-9b08-41c9-82de-a95e522fe42b"],
Cell[272002, 6573, 14403, 253, 248, "Output",ExpressionUUID->"f973c052-1913-426a-9270-1ad476d1d229"],
Cell[286408, 6828, 1553, 24, 53, "Output",ExpressionUUID->"ffccc0cf-2fc0-4761-90ef-a2613a6ddbb4"]
}, Open  ]],
Cell[287976, 6855, 359, 6, 33, "Text",ExpressionUUID->"61fa060a-8c8b-483d-8850-38e9a7275431"],
Cell[CellGroupData[{
Cell[288360, 6865, 2487, 65, 289, "Input",ExpressionUUID->"f9d1bfa4-dbad-4c7a-b449-a991f8b81373"],
Cell[290850, 6932, 1614, 23, 50, "Output",ExpressionUUID->"e82d9fcc-d276-42a9-99f2-2a40ca94eb09"],
Cell[292467, 6957, 1614, 23, 50, "Output",ExpressionUUID->"3230078b-fa88-49b1-b0e0-3ef32d2150da"],
Cell[294084, 6982, 1614, 23, 50, "Output",ExpressionUUID->"5344207e-3cb8-4938-a232-20edb0523430"]
}, Open  ]],
Cell[295713, 7008, 981, 18, 180, "Text",ExpressionUUID->"b4837a16-7303-4ac3-9adf-c780100d085a"],
Cell[CellGroupData[{
Cell[296719, 7030, 390, 7, 71, "Input",ExpressionUUID->"047d3fb9-71d2-4f49-abe5-10290b84add2"],
Cell[297112, 7039, 1187, 18, 50, "Output",ExpressionUUID->"7aad2c96-9426-4804-aae0-7ffe51cadd71"],
Cell[298302, 7059, 1189, 18, 50, "Output",ExpressionUUID->"662b4cc0-5012-49b5-9ed1-a405436673c8"]
}, Open  ]],
Cell[299506, 7080, 1311, 36, 57, "Text",ExpressionUUID->"c18f279f-d9cb-4acf-938c-10e67650968b"],
Cell[300820, 7118, 725, 19, 53, "DisplayFormula",ExpressionUUID->"f0afe642-6fb0-4eb7-a94e-2be556ba4fe6"],
Cell[301548, 7139, 240, 6, 33, "Text",ExpressionUUID->"018318ee-3fb7-487d-8a12-31e36a0cb5d5"],
Cell[301791, 7147, 776, 25, 70, "DisplayFormula",ExpressionUUID->"c09ec73d-af82-4c76-922e-c298a767c94b"],
Cell[CellGroupData[{
Cell[302592, 7176, 2100, 55, 193, "Input",ExpressionUUID->"fe38d486-963e-4716-b8fc-ac3ded68c3a3"],
Cell[304695, 7233, 1543, 22, 50, "Output",ExpressionUUID->"4e312d28-a5ed-4fad-be80-64d0117d07c9"],
Cell[306241, 7257, 1544, 22, 50, "Output",ExpressionUUID->"dd1898fa-88e6-408f-ab5a-28a269d374b4"]
}, Open  ]],
Cell[307800, 7282, 412, 9, 54, "Text",ExpressionUUID->"0800c14e-f78c-4c89-bbdf-468951c45543"],
Cell[308215, 7293, 718, 19, 53, "DisplayFormula",ExpressionUUID->"c42c2e8d-3907-4d03-a3d3-43bef080c9ee"],
Cell[308936, 7314, 281, 5, 33, "Text",ExpressionUUID->"0a0117c6-ffde-4199-a4ab-921c2b626beb"],
Cell[309220, 7321, 545, 17, 71, "DisplayFormula",ExpressionUUID->"5cb5a728-ed9d-4fe3-9c67-270f783a39fc"],
Cell[309768, 7340, 242, 4, 33, "Text",ExpressionUUID->"57ad8f47-75be-4ab3-9746-73aa64d4a0a7"],
Cell[310013, 7346, 407, 12, 51, "DisplayFormula",ExpressionUUID->"022ddcd9-5c4d-4d45-9f81-6ab1bdda5608"],
Cell[CellGroupData[{
Cell[310445, 7362, 1386, 43, 173, "Input",ExpressionUUID->"d5c9df16-f09a-45ea-b62e-11f843277776"],
Cell[311834, 7407, 1376, 20, 50, "Output",ExpressionUUID->"e2548f74-728d-4c6d-9fec-312a1a4fcace"],
Cell[313213, 7429, 1380, 20, 50, "Output",ExpressionUUID->"105e363e-2488-4fc8-86f3-d6ace74b0054"]
}, Open  ]],
Cell[314608, 7452, 637, 11, 33, "Text",ExpressionUUID->"5bc309b0-59aa-4921-811d-41fd1c5c3fe7"],
Cell[315248, 7465, 416, 13, 49, "DisplayFormula",ExpressionUUID->"e8cd36ab-a168-4aa3-8af8-753fc8c9d0b0"],
Cell[CellGroupData[{
Cell[315689, 7482, 706, 16, 56, "Input",ExpressionUUID->"f53ccb7b-a27c-43a0-b0a8-a39a3d41c792"],
Cell[316398, 7500, 1141, 18, 50, "Output",ExpressionUUID->"5109eaa3-5b67-4f39-aa87-164967f77a85"]
}, Open  ]],
Cell[317554, 7521, 1316, 21, 177, "Text",ExpressionUUID->"b27f404e-1917-4f2c-8058-7b8128dcce6e"],
Cell[318873, 7544, 1040, 34, 74, "DisplayFormula",ExpressionUUID->"aa570dca-2b86-4cd9-a26d-b768a48facf6"],
Cell[CellGroupData[{
Cell[319938, 7582, 2074, 56, 154, "Input",ExpressionUUID->"20570aa4-9568-4646-92b1-e9aaf256e28e"],
Cell[322015, 7640, 657, 10, 50, "Output",ExpressionUUID->"5908b3d8-2404-44cd-8a88-ff318dba758d"]
}, Open  ]],
Cell[322687, 7653, 643, 14, 138, "Text",ExpressionUUID->"c3cd539c-4f36-4770-8243-f017e7040ddb"],
Cell[CellGroupData[{
Cell[323355, 7671, 14275, 348, 867, "Input",ExpressionUUID->"c9dcacee-fb73-4e1c-a67a-fd69e33d0ad4"],
Cell[337633, 8021, 2897, 44, 53, "Output",ExpressionUUID->"80eb66e0-3c0c-4869-8cb5-ff565ad5b2a3"],
Cell[340533, 8067, 2831, 41, 50, "Output",ExpressionUUID->"ff9a914b-3274-467d-8544-611b5cc63366"],
Cell[343367, 8110, 2832, 41, 50, "Output",ExpressionUUID->"33b07db3-2c4d-4a35-bfc2-eda5737236f1"],
Cell[346202, 8153, 72676, 1303, 250, "Output",ExpressionUUID->"80ded649-0027-4e21-8b92-2b5186e88429"]
}, Open  ]],
Cell[418893, 9459, 875, 19, 180, "Text",ExpressionUUID->"e5396741-248d-4e03-8a12-c1550f41f211"],
Cell[CellGroupData[{
Cell[419793, 9482, 590, 14, 47, "Input",ExpressionUUID->"a35864f0-5f70-49d5-870f-7dd827ce211a"],
Cell[420386, 9498, 1123, 18, 50, "Output",ExpressionUUID->"361a5612-38f2-4346-9ed9-0b4139e89999"]
}, Open  ]],
Cell[421524, 9519, 338, 9, 75, "Text",ExpressionUUID->"ac882883-33df-42dc-9e21-2cb3ee05a1f7"],
Cell[CellGroupData[{
Cell[421887, 9532, 415, 7, 71, "Input",ExpressionUUID->"e5c3e432-24ea-4a05-b22c-af029556e535"],
Cell[422305, 9541, 1033, 16, 50, "Output",ExpressionUUID->"e33cdac0-9fbc-4ecc-9392-ce9d48c647ea"],
Cell[423341, 9559, 1032, 16, 50, "Output",ExpressionUUID->"d0616b4f-ca25-4c9a-970f-65d606a3309a"]
}, Open  ]],
Cell[424388, 9578, 292, 8, 54, "Text",ExpressionUUID->"064e2c99-6ce1-4310-9d53-ff6c8e58f95f"],
Cell[CellGroupData[{
Cell[424705, 9590, 2439, 68, 246, "Input",ExpressionUUID->"b914ebd7-5986-496e-9547-c32c075c2305"],
Cell[427147, 9660, 1132, 18, 53, "Output",ExpressionUUID->"a9e04b19-b4fe-42a5-9bce-11ab9bb0c04d"],
Cell[428282, 9680, 1130, 18, 53, "Output",ExpressionUUID->"475e73bf-a45a-4f50-9f62-cd60443aa5f9"],
Cell[429415, 9700, 1132, 18, 50, "Output",ExpressionUUID->"63da2593-4088-4200-9758-bde3824b5845"]
}, Open  ]],
Cell[430562, 9721, 379, 8, 54, "Text",ExpressionUUID->"f8d88617-9790-4647-ad1e-68776d67fae6"],
Cell[CellGroupData[{
Cell[430966, 9733, 2004, 59, 187, "Input",ExpressionUUID->"8078f9d9-c18b-4a77-be62-8d007b4dec35"],
Cell[432973, 9794, 425, 8, 53, "Output",ExpressionUUID->"40181492-f6ed-4797-9e10-8c91dff95e31"],
Cell[433401, 9804, 421, 8, 53, "Output",ExpressionUUID->"a2868a36-c687-4471-b4dc-67e5a54ee49c"],
Cell[433825, 9814, 424, 8, 50, "Output",ExpressionUUID->"5c07166a-d272-4175-9fc1-22bff659915f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[434286, 9827, 467, 13, 47, "Input",ExpressionUUID->"82e55449-c9a3-4838-b967-a1592550e009"],
Cell[434756, 9842, 1018, 17, 57, "Output",ExpressionUUID->"4d9a7a85-c4d5-439a-b113-a91dbc490c3e"]
}, Open  ]],
Cell[435789, 9862, 377, 9, 54, "Text",ExpressionUUID->"5a308521-d230-47d0-b5f1-e33d36794717"],
Cell[CellGroupData[{
Cell[436191, 9875, 1636, 50, 176, "Input",ExpressionUUID->"f9ff74b2-37fd-434a-9f4c-438abd9a3b96"],
Cell[437830, 9927, 1343, 20, 53, "Output",ExpressionUUID->"4a5845e1-bf65-4588-8306-c72ab3a83db7"],
Cell[439176, 9949, 1339, 20, 53, "Output",ExpressionUUID->"b0fcf6fb-7adf-41c9-ac06-db458db4e687"]
}, Open  ]],
Cell[440530, 9972, 323, 7, 54, "Text",ExpressionUUID->"d759b942-a554-46dc-8617-6e13e5939cb1"],
Cell[CellGroupData[{
Cell[440878, 9983, 1192, 28, 71, "Input",ExpressionUUID->"0f409b9c-068b-4fde-9767-f63675d6118e"],
Cell[442073, 10013, 1401, 23, 57, "Output",ExpressionUUID->"4eb5a756-466c-445c-ad37-c1d7df5079cd"],
Cell[443477, 10038, 1398, 23, 57, "Output",ExpressionUUID->"4284f43a-1972-45a3-a754-bf6d363acf1f"]
}, Open  ]],
Cell[444890, 10064, 639, 15, 138, "Text",ExpressionUUID->"be776475-8693-40ad-85ce-45456beea311"],
Cell[CellGroupData[{
Cell[445554, 10083, 201, 3, 71, "Input",ExpressionUUID->"6350423e-8636-4fce-9d78-38679fa88d15"],
Cell[445758, 10088, 692, 10, 50, "Output",ExpressionUUID->"8dfde6dc-ffb7-4e7a-b187-370aa59f0432"],
Cell[446453, 10100, 690, 10, 50, "Output",ExpressionUUID->"f167f724-c17a-4dbb-a68b-85d3706f46aa"]
}, Open  ]],
Cell[447158, 10113, 540, 10, 54, "Text",ExpressionUUID->"a7c91594-92cd-4a6c-bbe8-04122ac2df98"],
Cell[447701, 10125, 369, 9, 75, "Text",ExpressionUUID->"c256859e-f171-44d3-a458-f7f17e779cd8"],
Cell[448073, 10136, 530, 16, 59, "DisplayFormula",ExpressionUUID->"9a25a0db-8800-4040-8f1c-3b16013d13ae"],
Cell[448606, 10154, 445, 10, 75, "Text",ExpressionUUID->"771bf713-72f9-426f-b9d6-fe1626299b75"],
Cell[CellGroupData[{
Cell[449076, 10168, 676, 17, 47, "Input",ExpressionUUID->"57a96140-44aa-4f4a-b1f2-b265dbcbedb0"],
Cell[449755, 10187, 1087, 18, 53, "Output",ExpressionUUID->"599f1464-7ea9-413d-a165-91cea80319b7"]
}, Open  ]],
Cell[450857, 10208, 298, 8, 54, "Text",ExpressionUUID->"1835c600-2b95-4966-8321-3dcd88e7023a"],
Cell[451158, 10218, 501, 16, 70, "DisplayFormula",ExpressionUUID->"7918ff10-ceb2-4e0e-baf6-3f12ac673c7f"],
Cell[CellGroupData[{
Cell[451684, 10238, 616, 18, 73, "Input",ExpressionUUID->"788715a5-29f9-4744-a3e2-3a342f51133b"],
Cell[452303, 10258, 582, 9, 50, "Output",ExpressionUUID->"338ddbdb-f2e9-4c67-b703-2ccc203410b6"]
}, Open  ]],
Cell[452900, 10270, 348, 7, 33, "Text",ExpressionUUID->"16b489ef-3f84-456d-84cf-7e9969d6566d"],
Cell[CellGroupData[{
Cell[453273, 10281, 204, 5, 49, "Input",ExpressionUUID->"66bceca6-0197-403e-bab1-b62780456afd"],
Cell[453480, 10288, 478, 7, 50, "Output",ExpressionUUID->"36117c40-632e-479b-8360-b309f8578c0b"]
}, Open  ]],
Cell[453973, 10298, 396, 8, 54, "Text",ExpressionUUID->"f295a908-afd7-4ab9-9d77-3655d8676527"],
Cell[454372, 10308, 283, 9, 27, "DisplayFormula",ExpressionUUID->"4add1605-7613-45c5-b4df-0a5a81ecbdf0"],
Cell[454658, 10319, 610, 10, 75, "Text",ExpressionUUID->"13233561-7764-4b60-8fe8-4eee94cd3436"],
Cell[455271, 10331, 506, 12, 54, "Text",ExpressionUUID->"154463fb-6633-48d6-9cb3-09169f5d2c74"],
Cell[455780, 10345, 450, 14, 70, "DisplayFormula",ExpressionUUID->"9260593c-3a80-41ca-b923-19f697d3d883"],
Cell[456233, 10361, 370, 8, 75, "Text",ExpressionUUID->"bdb9977f-67ab-42a4-a016-9d1b6d264f14"],
Cell[CellGroupData[{
Cell[456628, 10373, 1764, 40, 193, "Input",ExpressionUUID->"772957e9-9fe9-4a10-a819-4f76666c34af"],
Cell[458395, 10415, 659, 11, 53, "Output",ExpressionUUID->"723aeb7a-c956-4a21-91f6-ac2595d3cafe"]
}, Open  ]],
Cell[459069, 10429, 1095, 22, 138, "Text",ExpressionUUID->"12388d10-5e11-463d-95ea-0650a6767439"],
Cell[460167, 10453, 640, 23, 62, "DisplayFormula",ExpressionUUID->"7ad91b24-3384-439d-9db6-ba24c4c68dfe"],
Cell[460810, 10478, 786, 14, 96, "Text",ExpressionUUID->"0f47e1f9-a405-457c-92fb-76870536da42"],
Cell[461599, 10494, 970, 34, 68, "DisplayFormula",ExpressionUUID->"54c7186f-b5e2-4c63-affe-7515a5a8cb02"],
Cell[CellGroupData[{
Cell[462594, 10532, 1985, 43, 122, "Input",ExpressionUUID->"4b87da94-34b4-477b-abc1-f4562d60cc1b"],
Cell[464582, 10577, 1781, 26, 50, "Output",ExpressionUUID->"b7afc304-eb90-40e5-8a92-bcdf6685cca9"]
}, Open  ]],
Cell[466378, 10606, 218, 5, 33, "Text",ExpressionUUID->"c65949a8-a7f1-4a70-94c0-de4ac34a9453"],
Cell[466599, 10613, 464, 15, 57, "DisplayFormula",ExpressionUUID->"6d58f5fd-4a19-4e90-8729-9db91a8927b9"],
Cell[467066, 10630, 355, 8, 54, "Text",ExpressionUUID->"e6ad7566-4988-45ed-b167-6ff6bcb5d4df"],
Cell[CellGroupData[{
Cell[467446, 10642, 1502, 38, 184, "Input",ExpressionUUID->"80734e0b-43e8-4c24-9a1f-e56410a76184"],
Cell[468951, 10682, 1555, 22, 50, "Output",ExpressionUUID->"1c2e03f6-b6e0-4280-84e7-caa8c28064a3"],
Cell[470509, 10706, 1557, 22, 50, "Output",ExpressionUUID->"56278d72-37b0-4fbd-8f8d-cb5526ba8ede"]
}, Open  ]],
Cell[472081, 10731, 1048, 20, 78, "Text",ExpressionUUID->"e5767a12-c7a8-42d3-8e4f-c4c02867e166"],
Cell[CellGroupData[{
Cell[473154, 10755, 1378, 34, 163, "Input",ExpressionUUID->"627fc418-61f0-4f01-afa2-fe2c1afedfd6"],
Cell[474535, 10791, 1546, 24, 53, "Output",ExpressionUUID->"e14e8d99-73aa-49e0-a263-f71271c8162d"],
Cell[476084, 10817, 1552, 24, 53, "Output",ExpressionUUID->"5bdf45a1-0047-4aaa-ad78-bcb2f7d162db"],
Cell[477639, 10843, 1541, 24, 53, "Output",ExpressionUUID->"0290f11a-f1ea-4ec7-a2c1-991ebad34b9e"],
Cell[479183, 10869, 1551, 24, 53, "Output",ExpressionUUID->"03ec1576-3356-4baf-b5b9-0debe7d82ae8"],
Cell[480737, 10895, 1458, 21, 50, "Output",ExpressionUUID->"b81322fb-34ca-4452-b691-8db50924b373"]
}, Open  ]],
Cell[482210, 10919, 255, 6, 33, "Text",ExpressionUUID->"42f252aa-80f3-41bc-9fad-7f2117c45552"],
Cell[482468, 10927, 423, 11, 75, "Text",ExpressionUUID->"de9b1cb1-cbc3-4e7a-b815-115ff93b347f"],
Cell[482894, 10940, 668, 21, 59, "DisplayFormula",ExpressionUUID->"c5b840d9-7831-4d7e-be3b-7863ba578e43"],
Cell[483565, 10963, 350, 8, 75, "Text",ExpressionUUID->"302c9dcc-b385-4bdb-ba0b-56bd7a0f5ce7"],
Cell[483918, 10973, 415, 13, 56, "DisplayFormula",ExpressionUUID->"42db5177-3e1f-422e-b9d5-4b3c051f89dc"],
Cell[CellGroupData[{
Cell[484358, 10990, 2097, 52, 145, "Input",ExpressionUUID->"54456930-c7e4-480c-9771-455a030221fa"],
Cell[486458, 11044, 1789, 28, 57, "Output",ExpressionUUID->"2952e5f6-a7c1-48ef-9b34-7a45f0ccfaf5"],
Cell[488250, 11074, 1726, 27, 50, "Output",ExpressionUUID->"f37e0ee0-a4ec-486e-834d-91c41d91bba5"]
}, Open  ]],
Cell[489991, 11104, 1263, 23, 138, "Text",ExpressionUUID->"b57cc2b3-6935-49cd-a4b5-680993b44bf5"],
Cell[CellGroupData[{
Cell[491279, 11131, 3136, 81, 306, "Input",ExpressionUUID->"2fee6fb7-a1ef-4771-9605-6211d950a1ab"],
Cell[494418, 11214, 1328, 20, 50, "Output",ExpressionUUID->"f2341a6e-cae6-4c9a-91c7-6bceac63c59a"],
Cell[495749, 11236, 1332, 20, 50, "Output",ExpressionUUID->"49ac62f0-37f5-4268-a5d9-f518c06a06ae"],
Cell[497084, 11258, 1447, 24, 57, "Output",ExpressionUUID->"8a983432-4d54-4231-92aa-9178aec14b26"],
Cell[498534, 11284, 1399, 23, 50, "Output",ExpressionUUID->"383de3ef-c97d-49ed-9a1c-50a3b5caf48f"]
}, Open  ]],
Cell[499948, 11310, 1323, 25, 306, "Text",ExpressionUUID->"939102b3-ecdf-4913-a35d-9c501846a2dd"],
Cell[501274, 11337, 639, 20, 55, "DisplayFormula",ExpressionUUID->"ffeab87f-4843-437a-9654-262b6bd65b3e"],
Cell[501916, 11359, 1243, 29, 141, "Text",ExpressionUUID->"ad89ff4f-4fb8-4d3c-b6e9-268f93a9ad3b"],
Cell[503162, 11390, 978, 19, 201, "Text",ExpressionUUID->"94afe4b5-03e3-4bbb-8a81-bc7aa6ea1779"],
Cell[CellGroupData[{
Cell[504165, 11413, 544, 14, 71, "Input",ExpressionUUID->"06cc8a49-b281-406c-bd37-b371460c7c02"],
Cell[504712, 11429, 337, 7, 53, "Output",ExpressionUUID->"ca821ac9-763c-41d1-be98-a0ca1834d2f0"],
Cell[505052, 11438, 141398, 2334, 253, "Output",ExpressionUUID->"1e58f6c9-df51-4e6b-b6dc-66aa4ead75df"]
}, Open  ]],
Cell[646465, 13775, 855, 19, 71, "Input",ExpressionUUID->"eedbf07e-2904-48df-8e14-5db988b08972"],
Cell[CellGroupData[{
Cell[647345, 13798, 531, 14, 71, "Input",ExpressionUUID->"6f256afd-c58e-49a1-966e-3ef74b678ac8"],
Cell[647879, 13814, 309, 6, 53, "Output",ExpressionUUID->"b5f88c0d-69e7-45e3-b2fd-45ca0805e7ae"],
Cell[648191, 13822, 131478, 2171, 253, "Output",ExpressionUUID->"fae4f905-f2b3-4bdc-b842-fbcc4af149f5"]
}, Open  ]],
Cell[779684, 15996, 440, 10, 75, "Text",ExpressionUUID->"83c80b82-a50b-4fb6-8479-5cbdcd47f34f"],
Cell[CellGroupData[{
Cell[780149, 16010, 1785, 50, 274, "Input",ExpressionUUID->"b915d6be-98e9-4b30-9f62-16867521c9cb"],
Cell[781937, 16062, 432, 8, 53, "Output",ExpressionUUID->"187c1ab0-3655-4b59-b290-0982b1ac3272"],
Cell[782372, 16072, 8971, 167, 252, "Output",ExpressionUUID->"dbc0f8f2-15d2-477c-b9e3-9816e2a532a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[791380, 16244, 897, 21, 71, "Input",ExpressionUUID->"3eec1d6f-6b00-4e38-b640-589438fbf1d9"],
Cell[792280, 16267, 188, 2, 50, "Output",ExpressionUUID->"19a42143-eade-4b92-a7b1-cb6f13c0d35a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[792505, 16274, 840, 21, 71, "Input",ExpressionUUID->"c82b1cea-c11d-4eac-b971-eef2bfbe57cc"],
Cell[793348, 16297, 416, 7, 50, "Output",ExpressionUUID->"b1f33fce-2d68-434c-a626-5eae11e78ef6"]
}, Open  ]],
Cell[793779, 16307, 496, 9, 54, "Text",ExpressionUUID->"1363e0f5-27f8-49a2-9adb-914a674af7bd"],
Cell[CellGroupData[{
Cell[794300, 16320, 2136, 64, 228, "Input",ExpressionUUID->"fc97234c-0895-4b2e-bbb8-14a2f8ee54e6"],
Cell[796439, 16386, 424, 8, 50, "Output",ExpressionUUID->"4395f1c3-70cf-4559-bd67-666ae74a8708"],
Cell[796866, 16396, 432, 9, 50, "Output",ExpressionUUID->"ced51d46-eb80-47f1-9228-6632bd4845f5"],
Cell[797301, 16407, 430, 9, 53, "Output",ExpressionUUID->"5f85c0bf-e217-4c95-88a0-df8f7553d11b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[797768, 16421, 2013, 61, 251, "Input",ExpressionUUID->"42bc8ce6-fc0b-484a-a6c0-ace28c361b69"],
Cell[799784, 16484, 370, 7, 50, "Output",ExpressionUUID->"0a2ad642-b8f3-49fd-8ce4-ac99ac4f5a83"],
Cell[800157, 16493, 378, 8, 50, "Output",ExpressionUUID->"a3a80b6a-fac9-459c-80fc-32739c8b58e0"],
Cell[800538, 16503, 378, 8, 53, "Output",ExpressionUUID->"c1d13a0d-2bdb-48a9-aa10-2e148d91fd29"]
}, Open  ]],
Cell[800931, 16514, 955, 17, 117, "Text",ExpressionUUID->"fd6ea253-f2d5-4f08-b266-0df71c0717ae"],
Cell[CellGroupData[{
Cell[801911, 16535, 722, 16, 108, "Input",ExpressionUUID->"b89f26ec-75ec-40f8-9380-11850cf081b5"],
Cell[802636, 16553, 520, 8, 50, "Output",ExpressionUUID->"48fb5f3c-78c6-4751-aeae-25f478fa1add"],
Cell[803159, 16563, 522, 8, 50, "Output",ExpressionUUID->"0de6a965-2028-4f27-bb6a-b203526323a1"]
}, Open  ]],
Cell[803696, 16574, 340, 8, 33, "Text",ExpressionUUID->"b4624ad5-49c6-498c-b0a2-66daa23db091"],
Cell[804039, 16584, 615, 21, 100, "DisplayFormula",ExpressionUUID->"d06e1b58-4240-4ac7-8bf7-541047540ecf"],
Cell[CellGroupData[{
Cell[804679, 16609, 486, 13, 94, "Input",ExpressionUUID->"a14745ab-772b-4d71-82cd-1670bb1780dd"],
Cell[805168, 16624, 332, 6, 50, "Output",ExpressionUUID->"371f186f-b4a6-45dd-a004-388fc33e5fe0"]
}, Open  ]],
Cell[805515, 16633, 175, 3, 33, "Text",ExpressionUUID->"38370620-a21b-4cb2-938d-89ef0bcca2b9"],
Cell[805693, 16638, 660, 22, 100, "DisplayFormula",ExpressionUUID->"88aca169-0a9a-46bb-979d-7431cb5410df"],
Cell[CellGroupData[{
Cell[806378, 16664, 392, 13, 96, "Input",ExpressionUUID->"e70cc6ab-8ac7-4ba2-85f5-05cf9b49c90a"],
Cell[806773, 16679, 210, 4, 50, "Output",ExpressionUUID->"1dcd5001-0dbb-46a4-96b6-33134a26088b"]
}, Open  ]],
Cell[806998, 16686, 774, 15, 138, "Text",ExpressionUUID->"26f5d126-c7da-4d36-af0d-56143517141d"],
Cell[CellGroupData[{
Cell[807797, 16705, 1641, 51, 140, "Input",ExpressionUUID->"98ebd454-9aef-4aa2-aca1-49004f2f104f"],
Cell[809441, 16758, 220, 4, 50, "Output",ExpressionUUID->"cbea1d7c-b800-488e-b385-165b08920bc6"],
Cell[809664, 16764, 220, 4, 50, "Output",ExpressionUUID->"85983120-6ae4-40de-8fd5-7c20eab2917d"],
Cell[809887, 16770, 223, 4, 50, "Output",ExpressionUUID->"5e1c14b3-4a36-4e57-b892-596a1942bdbe"],
Cell[810113, 16776, 220, 4, 50, "Output",ExpressionUUID->"846dd9e0-4e7e-4c3b-8fbd-e9fe7ef5c666"],
Cell[810336, 16782, 221, 4, 50, "Output",ExpressionUUID->"e6ce681f-1288-4b74-9731-4a782bd3c017"]
}, Open  ]],
Cell[CellGroupData[{
Cell[810594, 16791, 4523, 117, 347, "Input",ExpressionUUID->"b8f1c06f-92f6-4a1b-a904-51df8c618bd4"],
Cell[815120, 16910, 247, 4, 50, "Output",ExpressionUUID->"ff7e5eb9-b48b-4a37-a76a-d38cd41c81fe"]
}, Open  ]],
Cell[815382, 16917, 274, 6, 33, "Text",ExpressionUUID->"c6581a0b-1225-46b1-a397-e50d103cda1f"],
Cell[815659, 16925, 764, 14, 138, "Text",ExpressionUUID->"5c9c99b3-94f4-4132-a6fb-449cc95d2c55"],
Cell[816426, 16941, 1484, 30, 231, "Text",ExpressionUUID->"7a769433-7f23-44b2-8245-714925b5b37e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[817947, 16976, 183, 6, 160, "Title",ExpressionUUID->"9949c8f5-aa9b-4581-b0b9-c9443bb2c0db"],
Cell[CellGroupData[{
Cell[818155, 16986, 2343, 62, 319, "Input",ExpressionUUID->"4c0c436f-7298-4f57-a662-e8eb47dd52b7"],
Cell[820501, 17050, 1880, 32, 67, "Output",ExpressionUUID->"980433d4-0082-4e0a-b691-b845626d338a"],
Cell[822384, 17084, 1718, 25, 50, "Output",ExpressionUUID->"683d293c-afc3-456d-9396-02cda03a6907"],
Cell[824105, 17111, 1880, 32, 67, "Output",ExpressionUUID->"d65292d2-7f27-4cb9-9f2e-b918bf0eb1bf"],
Cell[825988, 17145, 1718, 25, 50, "Output",ExpressionUUID->"d3ca0570-43c4-4a00-9b2a-b67e4071b3b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[827743, 17175, 2550, 62, 362, "Input",ExpressionUUID->"fca270d9-9637-460b-89c1-7672688f1315"],
Cell[830296, 17239, 1701, 25, 50, "Output",ExpressionUUID->"8516b6fb-f74d-4d97-a07a-e43910e8fe00"],
Cell[832000, 17266, 1716, 25, 50, "Output",ExpressionUUID->"0af98e0d-eb63-4a1b-8414-ac18779cba97"],
Cell[833719, 17293, 1701, 25, 50, "Output",ExpressionUUID->"c576a6be-747b-49d3-9900-c21392110352"],
Cell[835423, 17320, 1739, 25, 50, "Output",ExpressionUUID->"e70d6c94-2d59-46c1-839a-a7ae6b431fea"],
Cell[837165, 17347, 6339, 119, 252, "Output",ExpressionUUID->"f20ce231-f964-49d9-ae6f-3856823117e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[843541, 17471, 3414, 97, 186, "Input",ExpressionUUID->"9e2072b0-cb51-42ff-8ac3-5c9434373ad2"],
Cell[846958, 17570, 1754, 26, 50, "Output",ExpressionUUID->"015ad695-cc11-441e-a0c6-2d9941daa5cd"],
Cell[848715, 17598, 1760, 27, 50, "Output",ExpressionUUID->"fbdff9f3-af10-40a5-8aba-d8c708c50023"],
Cell[850478, 17627, 1759, 27, 50, "Output",ExpressionUUID->"f4c25b08-08d3-48d7-a876-894ebbcc32d3"],
Cell[852240, 17656, 1757, 27, 50, "Output",ExpressionUUID->"93b07636-4eef-49fa-8aa4-71f2335f97cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[854034, 17688, 1032, 27, 163, "Input",ExpressionUUID->"376445e5-4685-4b68-af91-4163ff0537e4"],
Cell[855069, 17717, 6657, 125, 252, "Output",ExpressionUUID->"cb0a1cf6-264a-4d05-9169-e13f733e9fb3"],
Cell[861729, 17844, 1364, 21, 64, "Output",ExpressionUUID->"b497e523-e8a7-4fa3-9a11-90e38fe1875e"],
Cell[863096, 17867, 1360, 20, 50, "Output",ExpressionUUID->"5a70b699-f466-4369-bad0-26dc012ac65f"]
}, Open  ]],
Cell[864471, 17890, 229, 6, 33, "Text",ExpressionUUID->"62166b37-f963-4c96-8e1a-e7922ca7bff4"],
Cell[864703, 17898, 5800, 113, 252, "Output",ExpressionUUID->"8bb6959f-e345-4108-b8f3-531158254a89"],
Cell[CellGroupData[{
Cell[870528, 18015, 6146, 157, 531, "Input",ExpressionUUID->"948b9986-d6c3-4908-9152-819a13babc64"],
Cell[876677, 18174, 4125, 80, 547, "Output",ExpressionUUID->"3d5a7fb3-078b-43e2-9a2d-c9be3eb9d2fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[880839, 18259, 2709, 73, 416, "Input",ExpressionUUID->"18461649-926a-4072-81cc-be0ec371c4a9"],
Cell[883551, 18334, 1279, 22, 50, "Output",ExpressionUUID->"bdbacb38-c444-467c-9b12-608b2524a2c5"],
Cell[884833, 18358, 336236, 6518, 256, "Output",ExpressionUUID->"cbfa1268-3959-43c2-9fe9-7ba6a2ee2fb6"],
Cell[1221072, 24878, 23091, 393, 271, "Output",ExpressionUUID->"260b3567-3756-45c4-8840-be76ea7ffea7"],
Cell[1244166, 25273, 149746, 2485, 449, "Output",ExpressionUUID->"d51a08d5-3d8b-487b-81a0-f93af8ccff73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1393949, 27763, 972, 26, 94, "Input",ExpressionUUID->"13da31f6-caac-41db-91c1-c42adf52cd7b"],
Cell[1394924, 27791, 104282, 1711, 393, "Output",ExpressionUUID->"580697cf-b131-4d04-bbcc-20cf5ba5e1ba"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1499243, 29507, 998, 28, 117, "Input",ExpressionUUID->"c66e0bbd-85a1-4c1f-9b84-2b923eb99f19"],
Cell[1500244, 29537, 14159, 239, 215, "Output",ExpressionUUID->"1834c9c1-6073-49ce-8144-148b7c584413"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1514440, 29781, 5111, 141, 324, "Input",ExpressionUUID->"50666653-0e9d-4f92-b668-f30d32c72d5f"],
Cell[1519554, 29924, 4061, 106, 117, "Output",ExpressionUUID->"1d5fb2b4-7f7f-4585-9a1b-106b9077fb97"],
Cell[1523618, 30032, 1558, 25, 53, "Output",ExpressionUUID->"281a0d1e-7dc8-40fb-9edb-474c8d1b9637"],
Cell[1525179, 30059, 13891, 244, 256, "Output",ExpressionUUID->"eb2c7f81-9a26-4c70-8ad0-88f2d1f57c1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1539107, 30308, 1343, 38, 117, "Input",ExpressionUUID->"a9dcfb52-6260-43dd-ba26-78819309c69e"],
Cell[1540453, 30348, 1409, 27, 59, "Output",ExpressionUUID->"207d14a1-9f38-4575-97f7-2a426d96aeb8"],
Cell[1541865, 30377, 4786, 104, 252, "Output",ExpressionUUID->"4332b48c-d3ef-4871-859d-84c87d627c10"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1546688, 30486, 3825, 100, 347, "Input",ExpressionUUID->"38fb45f3-5ac6-4c1b-baf4-19e233542134"],
Cell[1550516, 30588, 20352, 349, 381, "Output",ExpressionUUID->"b562fa8c-566f-4197-ac3c-f0b7e0f3ef8f"],
Cell[1570871, 30939, 1178, 17, 50, "Output",ExpressionUUID->"e6ed1348-e9ad-4e6b-9d5c-6fb351cc8a6d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1572086, 30961, 3056, 78, 255, "Input",ExpressionUUID->"d08b281f-7d33-4797-b03c-35c295ec3043"],
Cell[1575145, 31041, 1082, 16, 50, "Output",ExpressionUUID->"af3540c2-6c10-4041-914a-983232eaa38c"],
Cell[1576230, 31059, 1092, 16, 50, "Output",ExpressionUUID->"7fcbbac7-9a12-44d7-a151-17716225bc0e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1577371, 31081, 227, 7, 160, "Title",ExpressionUUID->"ef3d9b47-8133-456b-9e36-b6d0253b0d6a"],
Cell[1577601, 31090, 6106, 96, 1125, "Text",ExpressionUUID->"c1cf8328-d9cb-476f-a543-3635f52b5fc6"],
Cell[CellGroupData[{
Cell[1583732, 31190, 1691, 39, 278, "Input",ExpressionUUID->"7c8ad749-3856-4e2f-ac63-7d5724014ada"],
Cell[1585426, 31231, 206493, 3385, 465, "Output",ExpressionUUID->"27e71245-0e7b-4dad-a25b-3c169f7eb576"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1791956, 34621, 3527, 88, 347, "Input",ExpressionUUID->"f171ce58-9374-4ae7-8550-ee8a5605daea"],
Cell[1795486, 34711, 4818, 93, 256, "Output",ExpressionUUID->"32b860ce-d7f8-4e07-9b22-51eb59eefe98"],
Cell[1800307, 34806, 4791, 93, 268, "Output",ExpressionUUID->"c992e252-0611-4058-ad5a-6086f8a9297a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1805135, 34904, 3189, 83, 301, "Input",ExpressionUUID->"dee57b5a-658d-4194-8efa-998b785bdd01"],
Cell[1808327, 34989, 6815, 116, 465, "Output",ExpressionUUID->"f531050a-cc5b-40d5-891e-b273981e58dd"],
Cell[1815145, 35107, 1705, 24, 50, "Output",ExpressionUUID->"3c57aa87-1dbe-48ef-adba-5204657b767f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1816887, 35136, 4990, 118, 416, "Input",ExpressionUUID->"7a1273cd-3f66-4022-8667-d22a98700929"],
Cell[1821880, 35256, 1216, 18, 50, "Output",ExpressionUUID->"ca95081d-60fe-46d3-8b96-bd62fc60ea9b"],
Cell[1823099, 35276, 16025, 235, 753, "Output",ExpressionUUID->"0e00d1bd-2149-47a0-94d8-e88fcd261199"]
}, Open  ]],
Cell[1839139, 35514, 597, 12, 75, "Text",ExpressionUUID->"33ab6bbc-7f4e-48a9-a807-2db4e2ddeb8e"],
Cell[CellGroupData[{
Cell[1839761, 35530, 1195, 35, 186, "Input",ExpressionUUID->"ee17fe73-72d1-4703-9da7-b956bb731a18"],
Cell[1840959, 35567, 1026, 15, 50, "Output",ExpressionUUID->"39c269ec-9e3e-4e26-a312-8ae197dc8a89"],
Cell[1841988, 35584, 1025, 15, 50, "Output",ExpressionUUID->"aa7b9e2d-714c-42db-986e-36bce7fcdcdc"],
Cell[1843016, 35601, 2303, 52, 258, "Output",ExpressionUUID->"03a66277-a40c-487b-9d51-6bc35a2fe0ab"]
}, Open  ]]
}, Open  ]]
}
]
*)

