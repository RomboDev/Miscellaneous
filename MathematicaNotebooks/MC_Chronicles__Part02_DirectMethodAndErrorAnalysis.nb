(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2335317,      44309]
NotebookOptionsPosition[   2285409,      43659]
NotebookOutlinePosition[   2285754,      43674]
CellTagsIndexPosition[   2285711,      43671]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["[Monte Carlo Direct Method]\n[Monte Carlo Error \
Analysis]\n[Estimating the Monte Carlo Error]\n[Basic Calculus with \
Mathematica]\n[Stochastic Processes]",
 FontSize->12,
 FontColor->GrayLevel[0.5]]], "Text",
 CellChangeTimes->{{3.815048632999316*^9, 3.8150486956622972`*^9}, {
  3.815048783368227*^9, 
  3.815048835770391*^9}},ExpressionUUID->"ddd2209c-4640-49d6-8c1e-\
c8bbb82adde6"],

Cell[CellGroupData[{

Cell["Monte Carlo Direct Method", "Title",
 CellChangeTimes->{{3.814096680466717*^9, 3.8140966855719423`*^9}, 
   3.814113764173698*^9, 3.814114935137991*^9, 3.8141152811426153`*^9, {
   3.8141802549692373`*^9, 3.814180256046546*^9}, 3.814204617870545*^9, {
   3.815048662788829*^9, 
   3.815048665713654*^9}},ExpressionUUID->"f6a27679-6c10-4557-b8a0-\
1d2ba267be51"],

Cell[TextData[{
 "Monte Carlo integration uses random sampling of a function to numerically \
compute an estimate of its integral. \nSuppose that ",
 StyleBox["we want to integrate the one-dimensional function f (x) from a to \
b",
  FontVariations->{"Underline"->True}],
 ":"
}], "Text",
 CellChangeTimes->{{3.814097031383604*^9, 
  3.8140970468347673`*^9}},ExpressionUUID->"e61efb75-03d4-434f-ad14-\
189e24d86602"],

Cell[BoxData[
 StyleBox[
  RowBox[{"F", "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814097091786824*^9, 
  3.8140971255387278`*^9}},ExpressionUUID->"24366592-25e3-4586-8333-\
25d31c8e6608"],

Cell[TextData[{
 "The integral sign \[Integral] represents integration. \nThe symbol ",
 StyleBox["dx",
  FontVariations->{"Underline"->True}],
 ", called the ",
 StyleBox["differential of the variable x",
  FontColor->RGBColor[1, 0.5, 0]],
 ", indicates that the variable of integration is x. \nThe function ",
 StyleBox["f(x)",
  FontVariations->{"Underline"->True}],
 " to be integrated is called the ",
 StyleBox["integrand",
  FontColor->RGBColor[1, 0.5, 0]],
 ". A function is said to be integrable if the integral of the function over \
its domain is finite.\nThe points ",
 StyleBox["a and b",
  FontVariations->{"Underline"->True}],
 " are called the ",
 StyleBox["limits of the integral",
  FontColor->RGBColor[1, 0.5, 0]],
 ". An integral where the limits are specified is called a ",
 StyleBox["definite integral",
  FontVariations->{"Underline"->True}],
 ". \nThe integral is said to be over the interval [a, b].\n\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{"Now", " ", 
    RowBox[{"let", "'"}], "s", " ", "first", " ", "approach", " ", "it", " ", 
    "with", " ", "classical", " ", 
    RowBox[{"integration", "."}]}], TraditionalForm]],
  FontVariations->{"Underline"->True},ExpressionUUID->
  "7caa597e-651a-4a8b-9550-3ea13dfb130e"],
 "\n\nOur integrand is the function : ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"7", "x"}], "-", 
   RowBox[{"8.5", 
    SuperscriptBox["x", "2"]}], "+", 
   RowBox[{"3", 
    SuperscriptBox["x", "3"]}]}]], "Input",
  CellChangeTimes->{{3.814099327212634*^9, 3.814099456903468*^9}, 
    3.8140994899816837`*^9, {3.814099556757195*^9, 3.814099559228497*^9}},
  ExpressionUUID->"7f1d7fd5-df10-4711-8de2-30ed21fc458e"],
 " and its domain \[Epsilon] R[0,2]."
}], "Text",
 CellChangeTimes->{{3.8140971490786343`*^9, 3.8140971783484898`*^9}, 
   3.814097234627434*^9, {3.8140982655508966`*^9, 3.814098275717971*^9}, {
   3.814099062904105*^9, 3.81409906605221*^9}, {3.814100885874774*^9, 
   3.8141009433644*^9}, {3.814101274905099*^9, 3.81410129643498*^9}, {
   3.8141021412020683`*^9, 3.8141021642166452`*^9}, {3.814103755786273*^9, 
   3.814103769410499*^9}, {3.814104445220669*^9, 
   3.814104468532771*^9}},ExpressionUUID->"58d9731d-0d3d-4779-8e7e-\
dd8fcc4f3d68"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "x"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"7", "x"}], "-", 
    RowBox[{"8.5", 
     SuperscriptBox["x", "2"]}], "+", 
    RowBox[{"3", 
     SuperscriptBox["x", "3"]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.814099327212634*^9, 3.814099456903468*^9}, 
   3.8140994899816837`*^9, {3.814099556757195*^9, 3.814099559228497*^9}, {
   3.814101882921534*^9, 3.814101893090066*^9}, 
   3.814101924481963*^9},ExpressionUUID->"171bbb12-0127-41db-bfbc-\
3c670d321208"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
i9L+7/dFvv//93+/r/zf+v8BjIGPBQ==
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwl1Xe4j2UYB/DfoSR7Nc1jpGRG2ZsSUg7Kyjg2dY6RPbP3XhnZipAIUaGl
QRkt7WG3aG/53Pnjc93f+76u9/297/M87/VLTk1PScuQSCSSeCPpcn096XK+
TT6gtmMX/+kbq+t5Vr5AdXkRQ+S1fMmt+kk0lbszl3e4wWwgFeTylKMsZSgd
11GKW7iZJnRjDm9zvWsfoWQ8B12ZzSGuMx/ATfLddGEWB7nWvD8l5MGs4Yv4
LbOJNJJTmclbXGPWj+LyIFbzeTyX2QTukjszgzfJZ9aXYvJAVvFZvIPZeO6U
N3OOSvrZdJKnx5qTV59OUXk756mmXxjvK6/kU0rqx9FQ3sRZKupn0VH+hdry
UqbFPpJHTiNZvhhrI69jm9xS3coPclV1Qayh3Dr2lz/k+uqKIDdTN/KJvDvW
mrE00L+qtmEHf+v3xnuzmqf0+9XmbOaMfk+cL2bSQf+yen88Fz/rX1BrsYSp
+qbqkxyQc6sPU0T+l0byWp6RW6hP871cRZ0fey//Tj358SB/TAn5UerLGzlN
Bf0MHpSn8Bq59A9RWO7Hcj6iuNkY6sntmRzrQE6zPhSS+7KM4xQzG01duR2T
eIUcZr0pKKezlA8pajaKOnJbJsY6kd2sFwXk/NwY31Z8H/EdxHmPMxznMs4D
bZjAS2RzXU/yyrVirxkf+0NW8x7kkdNYwgckm42kpryBU5TXT+cBeRz7yKLv
Tm55K99RWT8v9kv+jbrych6T36eIPIIa8l80lFfFXsv3qZs4KZeLMx1nRG4V
e81Pcs24V5xDuYn6BHvl59Sr6Uau2Ee1LTv5J543vmPWxHmJtVFT2MK3+ufV
O5gbex/7FO/Kdn7Vvxj7wjIW6+9RN/CeXFgdTnX5TxrIK+PZ5Hvje+CEXDbO
Nq3kH6kR94ozGfcns9yVnPIWvuF2/Zw4X/Ii3qWQfhjV5PV8TRn9FFrKY+J7
4ip9F3LIvVnIMQqaDaWqvI6vKK2fTAt5dKwHmfSpZJd7sYCjFDAbQhU5hVHs
4UqzzmSTezKfI3FmzQZTWW7OSHZzhVknsso9mMfhON9mg2I/4kwwIvaXjGYd
yRLrEmvLcHaRwbxDnAG5Es0Yxk6S4vsmc6xJvFc8a/x+3DOupWLsKUPZkUj8
/8fYnkuRYdFM
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
        LineBox[CompressedData["
1:eJwl1XWUlWUQB+Clu7t36e5ulm5YQLqWsCgBCQMETBqkVBAVCUlBSVvKBLsx
AAHFBgQF0WeOfzw7v5lz7j33e9/5zialjk8ZlyYhIeGIP1EHxR92K9PpSh3S
ko70ZCAjmcjM4Pgse+Q76EZdsjDEPC175TvpTj2yMtQ8Hfvku+hBfaaYFeW4
/DA3ko1hZunZL99NTxow1awY78nLuInsDDfLwAF5Bik0ZJpZcd6Xl3MzOUg1
y8gL8kx68aC+Kt/J62kU56IvwQfyCm4hJyPMMvGifA+9eUhfjZPyBhrHGelL
8qG8kltZoq/Hj/J2cjFSn5mX5Fmskpvyu9yHuXJ1Tslb1O5slJ9Q2/CX3CTO
XS7FR/IzaldWyavVlvH9XNI/p/blIGP0S9X6cR6cj9+lpvAaO/Tr1Pa8wjX9
HnUAh8mtH6VmifvlZf1GtTOz5UfUZvwh71T7cIM8T63BaXmr2oNN8pNqW/6W
m8a+yIl8HN/FGrkVf8pjY2/kBvwkP0seRuuzxu+V59CX+fqafB9nQ7PYLX0S
n8iPMo68sYdm2XhVvpd+NCdf7Jx59jgb+T7604L8FKAghShMEYpSjOKxfz6X
g9fl+xlAy9hZs9J8Kj/GeErEvpnljHuSH2AgrWJnzcrwWdwtEygZ+2WWi0Ox
zwwiOXbUrCyfx/lxG6UYE/cX9xj7y2AW6GtxRt5M69hJfTm+kB8PcjKX5Yks
kxvys7xD7cVO+Wm1A//IiXFfch6OyJvULsyNs1ebx/vEBf2u2JE4J4boF6q1
4/3mrH6b2jPuhy36p9R2sXtc1e9W+8c5xPuhn62WZz9fxnOp3Vgrr1Vbc0V+
Xu3HJHm52ohfYq/U3uyS16sduS4nxc7IeTkaOx33J7fgojyURXIdzsWe0zZ2
Ul+Br+IdZjIr9I35Nd5PSsce6PPxRuwvw1isr8sPcQ60ix3VV+REvD/cTpnY
C7P8vBn3ynDax96aVeLrODumUDb2wqwAb8WZk0qH2FWzynwjr2Mq5eLuzQry
djwnI+hIeSaZF+Kd+M2MpBMV4nnNC/OuvIRRdKYilahMFapSjerUoCa14vl8
tgjH5KWMpku8I2ZV+DZ2j2ms1Dfht7hfNsid+Ffeqw5M8///xNr6/wBgdc+3

         "]]},
       Annotation[#, "Charting`Private`Tag$2149#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.857142715535196*^-7},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->{{0, 2}, {2.857142715535196*^-7, 3.9999996326530756`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8140993549857817`*^9, 3.814099458178636*^9}, 
   3.8140994910997543`*^9, 3.8140995601038837`*^9, 3.81410161401801*^9, {
   3.814101886800085*^9, 3.81410189455541*^9}, 3.8141019254254303`*^9, 
   3.814103689875345*^9, 3.814103882105876*^9, 3.814103956662059*^9, 
   3.814104058738574*^9, {3.814104097008477*^9, 3.814104120722858*^9}, 
   3.8141041524754267`*^9, 3.8141042620939198`*^9, 3.814106332812872*^9, 
   3.814107775840403*^9, 3.814107838738736*^9, 3.814196906649659*^9, 
   3.814208129222267*^9, 3.8142771903990507`*^9, 3.81438080612423*^9, 
   3.8144529397382183`*^9, 3.81461728221201*^9, 3.81471344987542*^9, 
   3.814729438630834*^9, 3.814729835261517*^9, 3.814784171445929*^9, 
   3.814785258944965*^9, 3.814786867519142*^9, 3.814787174225239*^9, 
   3.814787242685513*^9, 3.814790563764846*^9, 3.814799144698806*^9, 
   3.814799232934143*^9, 3.814803510864295*^9, 3.814808750431809*^9, 
   3.8148160214948587`*^9, 3.814817036632886*^9, 3.8148172001250677`*^9, 
   3.814817935209804*^9, 3.814818376558134*^9, 3.814819917887478*^9, 
   3.8149628739838037`*^9, 3.814964268562812*^9, 3.81496565961049*^9, 
   3.814968795931348*^9, 3.8149823146670218`*^9, 3.814982430603643*^9, 
   3.8149865032632093`*^9, 3.8149866446197243`*^9, 3.814988032908535*^9, 
   3.8150454779637203`*^9, 3.815048175125098*^9, 3.8150490966855173`*^9, 
   3.815053590460492*^9, 3.815056184659691*^9, 3.815134394220932*^9, 
   3.815135156465283*^9, 3.815135498707427*^9, 3.8151363246386223`*^9, 
   3.8151366433341093`*^9, 3.815136695050377*^9, 3.815136811282617*^9, 
   3.815137038898807*^9, 3.815137167282794*^9, 3.8151373723274527`*^9, 
   3.815137519754068*^9, 3.815137596422903*^9, 3.815138430322918*^9, 
   3.8151386866692953`*^9},ExpressionUUID->"44a309a0-212c-4322-ad81-\
34b633a4143c"]
}, Open  ]],

Cell["\<\

Integration is generally referred as to find the area under the fnc curve.

Now the general approach for numerical deterministic integration is to :
- subdivide the area under the curve by many rectangular bins, 
- calculate for each their respective area and 
- eventually sum then all up \
\>", "Text",
 CellChangeTimes->{{3.8141010584260187`*^9, 3.814101137019327*^9}, {
   3.814101183257861*^9, 3.814101196465624*^9}, 3.814101436903606*^9, {
   3.814101961804929*^9, 3.814101982100021*^9}, {3.814102166224248*^9, 
   3.8141021796952467`*^9}, 
   3.8141885388940573`*^9},ExpressionUUID->"e10d2eb5-e80d-4f23-b05a-\
e57fd698fed1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"a", ",", "b", ",", "di", ",", "intervals"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "0"}], ";", " ", 
   RowBox[{"b", "=", "2"}], ";"}], " ", 
  RowBox[{"(*", " ", "domain", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nbins", "=", "25"}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"integration", " ", "steps"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"di", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], "/", "nbins"}]}], ";"}], " ", 
  RowBox[{"(*", " ", "base", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"intervals", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"a", ",", "b", ",", "di"}], "]"}]}], ";"}], " ", 
  RowBox[{
  "(*", " ", "intervals", " ", "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.814100960336031*^9, 3.814100960337226*^9}, {
  3.814101025532358*^9, 3.814101047968478*^9}, {3.81410122720153*^9, 
  3.814101269072629*^9}, {3.814101351086217*^9, 3.814101369828253*^9}, {
  3.8141014035378237`*^9, 3.814101408846662*^9}, {3.814101988494351*^9, 
  3.81410211790994*^9}, {3.814102428571495*^9, 3.814102441370236*^9}, {
  3.814102506803912*^9, 
  3.8141025245098457`*^9}},ExpressionUUID->"83cf6955-f0fb-4fa0-86b6-\
709a78aefb1b"],

Cell[TextData[{
 "Above result is actually the ",
 StyleBox["base length of our rectangular bins",
  FontVariations->{"Underline"->True}],
 ". In fact, we subdivided the x-axis extension of our integrand by n-steps.\n\
Now we need to multiply the base by the height to find the area our \
rectangles. \nWhat is ",
 StyleBox["the height of our rectangles",
  FontVariations->{"Underline"->True}],
 " ? It\[CloseCurlyQuote]s the ",
 StyleBox["integrand evaluation at that point",
  FontVariations->{"Underline"->True}],
 ".\n\nOne little caveat is that we can start from the left of our basis or \
from the right or from the center."
}], "Text",
 CellChangeTimes->{{3.8141014670077763`*^9, 3.814101557502284*^9}, {
  3.8141017084332457`*^9, 3.81410173847099*^9}, {3.814102293253035*^9, 
  3.81410232931983*^9}},ExpressionUUID->"e05bd6e3-b390-43d6-b524-\
395bf75b03a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "@", 
  RowBox[{"GraphicsRow", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "1", ",", "1.25"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Thick"}], "}"}]}], ",", 
       RowBox[{"Epilog", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Opacity", "[", ".5", "]"}], ",", "Brown", ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"Darker", "@", "Pink"}], "]"}], ",", 
          RowBox[{"Rectangle", "@@@", 
           RowBox[{"(", 
            RowBox[{"Transpose", "/@", 
             RowBox[{"Transpose", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Partition", "[", 
                 RowBox[{"intervals", ",", "2", ",", "1"}], "]"}], ",", 
                RowBox[{"Partition", "[", 
                 RowBox[{
                  RowBox[{"Riffle", "[", 
                   RowBox[{
                    RowBox[{"f", "/@", 
                    RowBox[{"#", "@", "intervals"}]}], ",", "0", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], ",", 
                  "2"}], "]"}]}], "}"}], "]"}]}], ")"}]}]}], "}"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"Most", ",", "Rest", ",", 
      RowBox[{
       RowBox[{"MovingAverage", "[", 
        RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.814103098679202*^9, 3.8141030986812477`*^9}, {
  3.814103180207308*^9, 3.8141033131786327`*^9}},
 Background->None,ExpressionUUID->"f4ef933e-2764-444e-b9c9-8ff6102398fa"],

Cell[BoxData[
 FrameBox[
  GraphicsBox[{{}, {InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
           LineBox[CompressedData["
1:eJwd1H801WccB/DrZ9myCdPvdJeiXxJXaev05srPcGi6GfKzH1LyY5VF7BqV
JN3VNikrSatWqVAN3XaH1CGNooQtTjcSbd8fnu+3iexZfzznOa/zOec57/fz
nPNIo+LXbNSVSCS+dP2/GxeG6UgkDJjo0+/GxkTEaNI2+1PbhPkUXKGu0xY2
FVF39B50DKfes6izwEWHQd1fDUm334kYvL3OPlOXgdwgSJI2KuJ+j3+0oQGD
DaYLY4aHReRYu96Z8AEDk+Di7QIRMb7c+sAUcwYyPZ1d/ICIMnl4z/N51Jq1
axSPRYzqVeatWMng4eXIvR41Ilwrz3y8eA0D/003Y9WlIpz6RiIebmYgPDK/
dq1AxAP3r8fp72HwcmtWn8M+EWaWUem93zFo9i3VOieK+GKg617UOQYSqcuu
Z6EiZP27Y+KqGTR0/3DHyJv2C9/bbtPCQOtY+2mLowgyrvynpBcMWkOrDsye
LUJakrhU8S+dv7C1MpwoYuTXk6defcTikrBhWcGogN1jr9cbz2axXT5TWTYg
oOT2xcFuJxaajjaf3HYBDYnDfn5+LEZObfhWv17AEcVWQ+8oFmHuRbKRCgHj
K7zzhGQWXWcTljYWC5jl6rN1SS6LIk/raxZHBPR635o8o5gFY548slop4Ly7
uqD4JotAi7JJ1vECPtzRHX+jkcU2j7tzdoYLmDE1ySK1h4XnG0VfvZ+AZnaO
6QPCoj3lwsL9EJCuju2pMuJQ6KiJ1doJ6NSZmRFkyWHQKlMWIRXwNJnfmeXA
IabpafZKMwH7Ni37PNKLg3nuurwAfQG2XhNan4RxON8bJTUVCJLX69V0JXHw
rz/uYN1PEP8qRnkkm0P3PN31hzsJxl9gjj4u5OC8ycfD7Q+CwhCj1IqrHCqK
j3qdqCV4tk9l71rPYcXwhFPRNwlqny9HRAeHhIuRX265RKCoDJhuy3BQ5g/Z
vC0iyNEc9MvR59F88qRjzY8EldWKQOVkHt8HpH6y4BBB/mLVfGtbHpf+jF0t
zySwaBtYGyrnkaD3d0lqCsEq/nqAPIhH+8Ng1TeJBHEGE6U1cTzsdH53cdpC
sMwrz605g4fz5QL1aCTBVYOUzw7n81BOY+vLgwka+P1ZXRd5RFSEWG0LpPnb
5hbX/sYju9Mwqs6P4IydTBXSxsPTPaPZwYv2V0c/yujnUZH5fFLeKoKScpP7
ndRDL+0PpVA7/6Kuc3xF85QuNt5MnZw/6UY/tWaPbJEzdW9i47GAQR7TdTNe
c670fuY6hEn/oedVtcYHU6erdPs1Qzy00mfKJXKCqfuv9EwldL4ozNeS+npa
aMcOas8TZ6yMqQdjbzTaCDzeVGfxL10IQtxiS1Uij1VD101PUzsNt3wVMUz7
eWauM6NuZdK3VVEPyuqbdagT+hZsNH/Lo06vK5BxJjjXuldxj/p8TGZaE7XF
leXL7UZ5mNg98c+mLjvbuySHOtDk7qxkat/Co/O11DZmqrcbqbMOvJ527B2P
rqKrLa7Us5THzTnqe9VGTfbUt3Z5GPuM0febgkdS6qC4IYOfqYcyArQm1Pz7
f4vmV7tIJNT/AYF8iJ8=
            "]]},
          Annotation[#, "Charting`Private`Tag$2275#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1, 1.328125000956633},
       DisplayFunction->Identity,
       Epilog->{
         Opacity[0.5], 
         RGBColor[0.6, 0.4, 0.2], 
         EdgeForm[
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], {
          RectangleBox[{0, 0}, 
           NCache[{
             Rational[2, 25], 0.}, {0.08, 0.}]], 
          RectangleBox[
           NCache[{
             Rational[2, 25], 0}, {0.08, 0}], 
           NCache[{
             Rational[4, 25], 0.507136}, {0.16, 0.507136}]], 
          RectangleBox[
           NCache[{
             Rational[4, 25], 0}, {0.16, 0}], 
           NCache[{
             Rational[6, 25], 0.9146880000000001}, {0.24, 
            0.9146880000000001}]], 
          RectangleBox[
           NCache[{
             Rational[6, 25], 0}, {0.24, 0}], 
           NCache[{
             Rational[8, 25], 1.2318719999999999`}, {0.32, 
            1.2318719999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[8, 25], 0}, {0.32, 0}], 
           NCache[{
             Rational[2, 5], 1.467904}, {0.4, 1.467904}]], 
          RectangleBox[
           NCache[{
             Rational[2, 5], 0}, {0.4, 0}], 
           NCache[{
             Rational[12, 25], 1.6319999999999997`}, {0.48, 
            1.6319999999999997`}]], 
          RectangleBox[
           NCache[{
             Rational[12, 25], 0}, {0.48, 0}], 
           NCache[{
             Rational[14, 25], 1.733376}, {0.56, 1.733376}]], 
          RectangleBox[
           NCache[{
             Rational[14, 25], 0}, {0.56, 0}], 
           NCache[{
             Rational[16, 25], 1.781248}, {0.64, 1.781248}]], 
          RectangleBox[
           NCache[{
             Rational[16, 25], 0}, {0.64, 0}], 
           NCache[{
             Rational[18, 25], 1.7848320000000002`}, {0.72, 
            1.7848320000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[18, 25], 0}, {0.72, 0}], 
           NCache[{
             Rational[4, 5], 1.7533440000000005`}, {0.8, 
            1.7533440000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[4, 5], 0}, {0.8, 0}], 
           NCache[{
             Rational[22, 25], 1.6959999999999993`}, {0.88, 
            1.6959999999999993`}]], 
          RectangleBox[
           NCache[{
             Rational[22, 25], 0}, {0.88, 0}], 
           NCache[{
             Rational[24, 25], 1.6220160000000003`}, {0.96, 
            1.6220160000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[24, 25], 0}, {0.96, 0}], 
           NCache[{
             Rational[26, 25], 1.5406080000000002`}, {1.04, 
            1.5406080000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[26, 25], 0}, {1.04, 0}], 
           NCache[{
             Rational[28, 25], 1.460992}, {1.12, 1.460992}]], 
          RectangleBox[
           NCache[{
             Rational[28, 25], 0}, {1.12, 0}], 
           NCache[{
             Rational[6, 5], 1.3923839999999998`}, {1.2, 
            1.3923839999999998`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 5], 0}, {1.2, 0}], 
           NCache[{
             Rational[32, 25], 1.3440000000000003`}, {1.28, 
            1.3440000000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[32, 25], 0}, {1.28, 0}], 
           NCache[{
             Rational[34, 25], 1.325056}, {1.36, 1.325056}]], 
          RectangleBox[
           NCache[{
             Rational[34, 25], 0}, {1.36, 0}], 
           NCache[{
             Rational[36, 25], 1.344768000000001}, {1.44, 
            1.344768000000001}]], 
          RectangleBox[
           NCache[{
             Rational[36, 25], 0}, {1.44, 0}], 
           NCache[{
             Rational[38, 25], 1.412352000000002}, {1.52, 
            1.412352000000002}]], 
          RectangleBox[
           NCache[{
             Rational[38, 25], 0}, {1.52, 0}], 
           NCache[{
             Rational[8, 5], 1.5370240000000006`}, {1.6, 
            1.5370240000000006`}]], 
          RectangleBox[
           NCache[{
             Rational[8, 5], 0}, {1.6, 0}], 
           NCache[{
             Rational[42, 25], 1.727999999999998}, {1.68, 
            1.727999999999998}]], 
          RectangleBox[
           NCache[{
             Rational[42, 25], 0}, {1.68, 0}], 
           NCache[{
             Rational[44, 25], 1.994495999999998}, {1.76, 
            1.994495999999998}]], 
          RectangleBox[
           NCache[{
             Rational[44, 25], 0}, {1.76, 0}], 
           NCache[{
             Rational[46, 25], 2.345728000000001}, {1.84, 
            2.345728000000001}]], 
          RectangleBox[
           NCache[{
             Rational[46, 25], 0}, {1.84, 0}], 
           NCache[{
             Rational[48, 25], 2.7909120000000005`}, {1.92, 
            2.7909120000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[48, 25], 0}, {1.92, 0}], {2, 3.3392640000000036`}]}},
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Small,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{1, 1.25}, {1.328125000956633, 1.4999999948979585`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {96.75, -58.40421193686506}, 
      ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}], InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
           LineBox[CompressedData["
1:eJwd1H801WccB/DrZ9myCdPvdJeiXxJXaev05srPcGi6GfKzH1LyY5VF7BqV
JN3VNikrSatWqVAN3XaH1CGNooQtTjcSbd8fnu+3iexZfzznOa/zOec57/fz
nPNIo+LXbNSVSCS+dP2/GxeG6UgkDJjo0+/GxkTEaNI2+1PbhPkUXKGu0xY2
FVF39B50DKfes6izwEWHQd1fDUm334kYvL3OPlOXgdwgSJI2KuJ+j3+0oQGD
DaYLY4aHReRYu96Z8AEDk+Di7QIRMb7c+sAUcwYyPZ1d/ICIMnl4z/N51Jq1
axSPRYzqVeatWMng4eXIvR41Ilwrz3y8eA0D/003Y9WlIpz6RiIebmYgPDK/
dq1AxAP3r8fp72HwcmtWn8M+EWaWUem93zFo9i3VOieK+GKg617UOQYSqcuu
Z6EiZP27Y+KqGTR0/3DHyJv2C9/bbtPCQOtY+2mLowgyrvynpBcMWkOrDsye
LUJakrhU8S+dv7C1MpwoYuTXk6defcTikrBhWcGogN1jr9cbz2axXT5TWTYg
oOT2xcFuJxaajjaf3HYBDYnDfn5+LEZObfhWv17AEcVWQ+8oFmHuRbKRCgHj
K7zzhGQWXWcTljYWC5jl6rN1SS6LIk/raxZHBPR635o8o5gFY548slop4Ly7
uqD4JotAi7JJ1vECPtzRHX+jkcU2j7tzdoYLmDE1ySK1h4XnG0VfvZ+AZnaO
6QPCoj3lwsL9EJCuju2pMuJQ6KiJ1doJ6NSZmRFkyWHQKlMWIRXwNJnfmeXA
IabpafZKMwH7Ni37PNKLg3nuurwAfQG2XhNan4RxON8bJTUVCJLX69V0JXHw
rz/uYN1PEP8qRnkkm0P3PN31hzsJxl9gjj4u5OC8ycfD7Q+CwhCj1IqrHCqK
j3qdqCV4tk9l71rPYcXwhFPRNwlqny9HRAeHhIuRX265RKCoDJhuy3BQ5g/Z
vC0iyNEc9MvR59F88qRjzY8EldWKQOVkHt8HpH6y4BBB/mLVfGtbHpf+jF0t
zySwaBtYGyrnkaD3d0lqCsEq/nqAPIhH+8Ng1TeJBHEGE6U1cTzsdH53cdpC
sMwrz605g4fz5QL1aCTBVYOUzw7n81BOY+vLgwka+P1ZXRd5RFSEWG0LpPnb
5hbX/sYju9Mwqs6P4IydTBXSxsPTPaPZwYv2V0c/yujnUZH5fFLeKoKScpP7
ndRDL+0PpVA7/6Kuc3xF85QuNt5MnZw/6UY/tWaPbJEzdW9i47GAQR7TdTNe
c670fuY6hEn/oedVtcYHU6erdPs1Qzy00mfKJXKCqfuv9EwldL4ozNeS+npa
aMcOas8TZ6yMqQdjbzTaCDzeVGfxL10IQtxiS1Uij1VD101PUzsNt3wVMUz7
eWauM6NuZdK3VVEPyuqbdagT+hZsNH/Lo06vK5BxJjjXuldxj/p8TGZaE7XF
leXL7UZ5mNg98c+mLjvbuySHOtDk7qxkat/Co/O11DZmqrcbqbMOvJ527B2P
rqKrLa7Us5THzTnqe9VGTfbUt3Z5GPuM0febgkdS6qC4IYOfqYcyArQm1Pz7
f4vmV7tIJNT/AYF8iJ8=
            "]]},
          Annotation[#, "Charting`Private`Tag$2316#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1, 1.328125000956633},
       DisplayFunction->Identity,
       Epilog->{
         Opacity[0.5], 
         RGBColor[0.6, 0.4, 0.2], 
         EdgeForm[
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], {
          RectangleBox[{0, 0}, 
           NCache[{
             Rational[2, 25], 0.507136}, {0.08, 0.507136}]], 
          RectangleBox[
           NCache[{
             Rational[2, 25], 0}, {0.08, 0}], 
           NCache[{
             Rational[4, 25], 0.9146880000000001}, {0.16, 
            0.9146880000000001}]], 
          RectangleBox[
           NCache[{
             Rational[4, 25], 0}, {0.16, 0}], 
           NCache[{
             Rational[6, 25], 1.2318719999999999`}, {0.24, 
            1.2318719999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 25], 0}, {0.24, 0}], 
           NCache[{
             Rational[8, 25], 1.467904}, {0.32, 1.467904}]], 
          RectangleBox[
           NCache[{
             Rational[8, 25], 0}, {0.32, 0}], 
           NCache[{
             Rational[2, 5], 1.6319999999999997`}, {0.4, 
            1.6319999999999997`}]], 
          RectangleBox[
           NCache[{
             Rational[2, 5], 0}, {0.4, 0}], 
           NCache[{
             Rational[12, 25], 1.733376}, {0.48, 1.733376}]], 
          RectangleBox[
           NCache[{
             Rational[12, 25], 0}, {0.48, 0}], 
           NCache[{
             Rational[14, 25], 1.781248}, {0.56, 1.781248}]], 
          RectangleBox[
           NCache[{
             Rational[14, 25], 0}, {0.56, 0}], 
           NCache[{
             Rational[16, 25], 1.7848320000000002`}, {0.64, 
            1.7848320000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[16, 25], 0}, {0.64, 0}], 
           NCache[{
             Rational[18, 25], 1.7533440000000005`}, {0.72, 
            1.7533440000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[18, 25], 0}, {0.72, 0}], 
           NCache[{
             Rational[4, 5], 1.6959999999999993`}, {0.8, 
            1.6959999999999993`}]], 
          RectangleBox[
           NCache[{
             Rational[4, 5], 0}, {0.8, 0}], 
           NCache[{
             Rational[22, 25], 1.6220160000000003`}, {0.88, 
            1.6220160000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[22, 25], 0}, {0.88, 0}], 
           NCache[{
             Rational[24, 25], 1.5406080000000002`}, {0.96, 
            1.5406080000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[24, 25], 0}, {0.96, 0}], 
           NCache[{
             Rational[26, 25], 1.460992}, {1.04, 1.460992}]], 
          RectangleBox[
           NCache[{
             Rational[26, 25], 0}, {1.04, 0}], 
           NCache[{
             Rational[28, 25], 1.3923839999999998`}, {1.12, 
            1.3923839999999998`}]], 
          RectangleBox[
           NCache[{
             Rational[28, 25], 0}, {1.12, 0}], 
           NCache[{
             Rational[6, 5], 1.3440000000000003`}, {1.2, 
            1.3440000000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 5], 0}, {1.2, 0}], 
           NCache[{
             Rational[32, 25], 1.325056}, {1.28, 1.325056}]], 
          RectangleBox[
           NCache[{
             Rational[32, 25], 0}, {1.28, 0}], 
           NCache[{
             Rational[34, 25], 1.344768000000001}, {1.36, 
            1.344768000000001}]], 
          RectangleBox[
           NCache[{
             Rational[34, 25], 0}, {1.36, 0}], 
           NCache[{
             Rational[36, 25], 1.412352000000002}, {1.44, 
            1.412352000000002}]], 
          RectangleBox[
           NCache[{
             Rational[36, 25], 0}, {1.44, 0}], 
           NCache[{
             Rational[38, 25], 1.5370240000000006`}, {1.52, 
            1.5370240000000006`}]], 
          RectangleBox[
           NCache[{
             Rational[38, 25], 0}, {1.52, 0}], 
           NCache[{
             Rational[8, 5], 1.727999999999998}, {1.6, 1.727999999999998}]], 
          RectangleBox[
           NCache[{
             Rational[8, 5], 0}, {1.6, 0}], 
           NCache[{
             Rational[42, 25], 1.994495999999998}, {1.68, 
            1.994495999999998}]], 
          RectangleBox[
           NCache[{
             Rational[42, 25], 0}, {1.68, 0}], 
           NCache[{
             Rational[44, 25], 2.345728000000001}, {1.76, 
            2.345728000000001}]], 
          RectangleBox[
           NCache[{
             Rational[44, 25], 0}, {1.76, 0}], 
           NCache[{
             Rational[46, 25], 2.7909120000000005`}, {1.84, 
            2.7909120000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[46, 25], 0}, {1.84, 0}], 
           NCache[{
             Rational[48, 25], 3.3392640000000036`}, {1.92, 
            3.3392640000000036`}]], 
          RectangleBox[
           NCache[{
             Rational[48, 25], 0}, {1.92, 0}], {2, 4.}]}},
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Small,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{1, 1.25}, {1.328125000956633, 1.4999999948979585`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {290.25, -58.40421193686506}, 
      ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}], InsetBox[
      GraphicsBox[{{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], Thickness[Large], Opacity[1.], 
           LineBox[CompressedData["
1:eJwd1H801WccB/DrZ9myCdPvdJeiXxJXaev05srPcGi6GfKzH1LyY5VF7BqV
JN3VNikrSatWqVAN3XaH1CGNooQtTjcSbd8fnu+3iexZfzznOa/zOec57/fz
nPNIo+LXbNSVSCS+dP2/GxeG6UgkDJjo0+/GxkTEaNI2+1PbhPkUXKGu0xY2
FVF39B50DKfes6izwEWHQd1fDUm334kYvL3OPlOXgdwgSJI2KuJ+j3+0oQGD
DaYLY4aHReRYu96Z8AEDk+Di7QIRMb7c+sAUcwYyPZ1d/ICIMnl4z/N51Jq1
axSPRYzqVeatWMng4eXIvR41Ilwrz3y8eA0D/003Y9WlIpz6RiIebmYgPDK/
dq1AxAP3r8fp72HwcmtWn8M+EWaWUem93zFo9i3VOieK+GKg617UOQYSqcuu
Z6EiZP27Y+KqGTR0/3DHyJv2C9/bbtPCQOtY+2mLowgyrvynpBcMWkOrDsye
LUJakrhU8S+dv7C1MpwoYuTXk6defcTikrBhWcGogN1jr9cbz2axXT5TWTYg
oOT2xcFuJxaajjaf3HYBDYnDfn5+LEZObfhWv17AEcVWQ+8oFmHuRbKRCgHj
K7zzhGQWXWcTljYWC5jl6rN1SS6LIk/raxZHBPR635o8o5gFY548slop4Ly7
uqD4JotAi7JJ1vECPtzRHX+jkcU2j7tzdoYLmDE1ySK1h4XnG0VfvZ+AZnaO
6QPCoj3lwsL9EJCuju2pMuJQ6KiJ1doJ6NSZmRFkyWHQKlMWIRXwNJnfmeXA
IabpafZKMwH7Ni37PNKLg3nuurwAfQG2XhNan4RxON8bJTUVCJLX69V0JXHw
rz/uYN1PEP8qRnkkm0P3PN31hzsJxl9gjj4u5OC8ycfD7Q+CwhCj1IqrHCqK
j3qdqCV4tk9l71rPYcXwhFPRNwlqny9HRAeHhIuRX265RKCoDJhuy3BQ5g/Z
vC0iyNEc9MvR59F88qRjzY8EldWKQOVkHt8HpH6y4BBB/mLVfGtbHpf+jF0t
zySwaBtYGyrnkaD3d0lqCsEq/nqAPIhH+8Ng1TeJBHEGE6U1cTzsdH53cdpC
sMwrz605g4fz5QL1aCTBVYOUzw7n81BOY+vLgwka+P1ZXRd5RFSEWG0LpPnb
5hbX/sYju9Mwqs6P4IydTBXSxsPTPaPZwYv2V0c/yujnUZH5fFLeKoKScpP7
ndRDL+0PpVA7/6Kuc3xF85QuNt5MnZw/6UY/tWaPbJEzdW9i47GAQR7TdTNe
c670fuY6hEn/oedVtcYHU6erdPs1Qzy00mfKJXKCqfuv9EwldL4ozNeS+npa
aMcOas8TZ6yMqQdjbzTaCDzeVGfxL10IQtxiS1Uij1VD101PUzsNt3wVMUz7
eWauM6NuZdK3VVEPyuqbdagT+hZsNH/Lo06vK5BxJjjXuldxj/p8TGZaE7XF
leXL7UZ5mNg98c+mLjvbuySHOtDk7qxkat/Co/O11DZmqrcbqbMOvJ527B2P
rqKrLa7Us5THzTnqe9VGTfbUt3Z5GPuM0febgkdS6qC4IYOfqYcyArQm1Pz7
f4vmV7tIJNT/AYF8iJ8=
            "]]},
          Annotation[#, "Charting`Private`Tag$2358#1"]& ]}, {}, {}},
       AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
       Axes->{True, True},
       AxesLabel->{None, None},
       AxesOrigin->{1, 1.328125000956633},
       DisplayFunction->Identity,
       Epilog->{
         Opacity[0.5], 
         RGBColor[0.6, 0.4, 0.2], 
         EdgeForm[
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0.33333333333333337`, 
           0.33333333333333337`]], {
          RectangleBox[{0, 0}, 
           NCache[{
             Rational[2, 25], 0.26659200000000005`}, {0.08, 
            0.26659200000000005`}]], 
          RectangleBox[
           NCache[{
             Rational[2, 25], 0}, {0.08, 0}], 
           NCache[{
             Rational[4, 25], 0.722784}, {0.16, 0.722784}]], 
          RectangleBox[
           NCache[{
             Rational[4, 25], 0}, {0.16, 0}], 
           NCache[{
             Rational[6, 25], 1.0839999999999999`}, {0.24, 
            1.0839999999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 25], 0}, {0.24, 0}], 
           NCache[{
             Rational[8, 25], 1.359456}, {0.32, 1.359456}]], 
          RectangleBox[
           NCache[{
             Rational[8, 25], 0}, {0.32, 0}], 
           NCache[{
             Rational[2, 5], 1.5583680000000002`}, {0.4, 
            1.5583680000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[2, 5], 0}, {0.4, 0}], 
           NCache[{
             Rational[12, 25], 1.6899520000000001`}, {0.48, 
            1.6899520000000001`}]], 
          RectangleBox[
           NCache[{
             Rational[12, 25], 0}, {0.48, 0}], 
           NCache[{
             Rational[14, 25], 1.763424}, {0.56, 1.763424}]], 
          RectangleBox[
           NCache[{
             Rational[14, 25], 0}, {0.56, 0}], 
           NCache[{
             Rational[16, 25], 1.7880000000000003`}, {0.64, 
            1.7880000000000003`}]], 
          RectangleBox[
           NCache[{
             Rational[16, 25], 0}, {0.64, 0}], 
           NCache[{
             Rational[18, 25], 1.7728960000000002`}, {0.72, 
            1.7728960000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[18, 25], 0}, {0.72, 0}], 
           NCache[{
             Rational[4, 5], 1.7273280000000002`}, {0.8, 
            1.7273280000000002`}]], 
          RectangleBox[
           NCache[{
             Rational[4, 5], 0}, {0.8, 0}], 
           NCache[{
             Rational[22, 25], 1.6605119999999995`}, {0.88, 
            1.6605119999999995`}]], 
          RectangleBox[
           NCache[{
             Rational[22, 25], 0}, {0.88, 0}], 
           NCache[{
             Rational[24, 25], 1.5816640000000004`}, {0.96, 
            1.5816640000000004`}]], 
          RectangleBox[
           NCache[{
             Rational[24, 25], 0}, {0.96, 0}], 
           NCache[{
             Rational[26, 25], 1.5}, {1.04, 1.5}]], 
          RectangleBox[
           NCache[{
             Rational[26, 25], 0}, {1.04, 0}], 
           NCache[{
             Rational[28, 25], 1.424735999999999}, {1.12, 
            1.424735999999999}]], 
          RectangleBox[
           NCache[{
             Rational[28, 25], 0}, {1.12, 0}], 
           NCache[{
             Rational[6, 5], 1.3650879999999992`}, {1.2, 
            1.3650879999999992`}]], 
          RectangleBox[
           NCache[{
             Rational[6, 5], 0}, {1.2, 0}], 
           NCache[{
             Rational[32, 25], 1.3302719999999981`}, {1.28, 
            1.3302719999999981`}]], 
          RectangleBox[
           NCache[{
             Rational[32, 25], 0}, {1.28, 0}], 
           NCache[{
             Rational[34, 25], 1.329504000000001}, {1.36, 
            1.329504000000001}]], 
          RectangleBox[
           NCache[{
             Rational[34, 25], 0}, {1.36, 0}], 
           NCache[{
             Rational[36, 25], 1.3719999999999999`}, {1.44, 
            1.3719999999999999`}]], 
          RectangleBox[
           NCache[{
             Rational[36, 25], 0}, {1.44, 0}], 
           NCache[{
             Rational[38, 25], 1.4669760000000025`}, {1.52, 
            1.4669760000000025`}]], 
          RectangleBox[
           NCache[{
             Rational[38, 25], 0}, {1.52, 0}], 
           NCache[{
             Rational[8, 5], 1.6236479999999993`}, {1.6, 
            1.6236479999999993`}]], 
          RectangleBox[
           NCache[{
             Rational[8, 5], 0}, {1.6, 0}], 
           NCache[{
             Rational[42, 25], 1.8512320000000013`}, {1.68, 
            1.8512320000000013`}]], 
          RectangleBox[
           NCache[{
             Rational[42, 25], 0}, {1.68, 0}], 
           NCache[{
             Rational[44, 25], 2.158944}, {1.76, 2.158944}]], 
          RectangleBox[
           NCache[{
             Rational[44, 25], 0}, {1.76, 0}], 
           NCache[{
             Rational[46, 25], 2.5559999999999956`}, {1.84, 
            2.5559999999999956`}]], 
          RectangleBox[
           NCache[{
             Rational[46, 25], 0}, {1.84, 0}], 
           NCache[{
             Rational[48, 25], 3.051615999999999}, {1.92, 
            3.051615999999999}]], 
          RectangleBox[
           NCache[{
             Rational[48, 25], 0}, {1.92, 0}], {2, 3.655007999999995}]}},
       Frame->{{False, False}, {False, False}},
       FrameLabel->{{None, None}, {None, None}},
       FrameTicks->{{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}},
       GridLines->{None, None},
       GridLinesStyle->Directive[
         GrayLevel[0.5, 0.4]],
       ImagePadding->All,
       ImageSize->Small,
       Method->{
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}},
       PlotRange->{{1, 1.25}, {1.328125000956633, 1.4999999948979585`}},
       PlotRangeClipping->True,
       PlotRangePadding->{{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}},
       Ticks->{Automatic, Automatic}], {483.75, -58.40421193686506}, 
      ImageScaled[{0.5, 0.5}], {180, 111.24611797498106}]}, {}},
   ContentSelectable->True,
   ImageSize->{592.5, 128.80842387373013`},
   PlotRangePadding->{6, 5}],
  StripOnInput->False]], "Output",
 CellChangeTimes->{
  3.81410309982195*^9, {3.814103166024954*^9, 3.814103314001748*^9}, 
   3.814103689980954*^9, {3.8141038417693996`*^9, 3.814103882176765*^9}, 
   3.8141039567308197`*^9, 3.814104058849155*^9, {3.814104097116539*^9, 
   3.814104120782456*^9}, 3.814104152545437*^9, 3.814104262152522*^9, 
   3.814107775938714*^9, 3.814107842668086*^9, {3.814208124052062*^9, 
   3.8142081403432083`*^9}, 3.814277197610407*^9, 3.814452952379423*^9, 
   3.8146172894608*^9, 3.814713450009719*^9, 3.81472943873974*^9, 
   3.814729835368651*^9, 3.8147841716105547`*^9, 3.814785259225099*^9, 
   3.814786867604925*^9, 3.814787174407775*^9, 3.814787242874547*^9, 
   3.8147905638603888`*^9, 3.81479914479734*^9, 3.81479923303265*^9, 
   3.814803510955689*^9, 3.814808750538101*^9, 3.814816021574787*^9, 
   3.8148170367172422`*^9, 3.814817200206141*^9, 3.814817935299926*^9, 
   3.814818376761311*^9, 3.814819917990836*^9, 3.814962874097686*^9, 
   3.814964268760211*^9, 3.81496565973958*^9, 3.814968796107544*^9, 
   3.814982314757264*^9, 3.8149824308259153`*^9, 3.8149865034343452`*^9, 
   3.814986644802973*^9, 3.814988032990814*^9, 3.815045478139634*^9, 
   3.8150481752085867`*^9, 3.8150490967717*^9, 3.815053590553832*^9, 
   3.815056184746952*^9, 3.8151343944089613`*^9, 3.8151351565533743`*^9, 
   3.815135498851604*^9, 3.815136324855241*^9, 3.815136643477932*^9, 
   3.815136695141675*^9, 3.815136811372768*^9, 3.815137038999428*^9, 
   3.8151371675688334`*^9, 3.81513737241684*^9, 3.8151375198445253`*^9, 
   3.815137596504601*^9, 3.815138430408094*^9, 
   3.8151386878164387`*^9},ExpressionUUID->"8d2b33ed-6de3-4320-9a72-\
93fe4c66b230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"leftSum", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"di", "*", 
      RowBox[{"f", "[", "i", "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Most", "@", "intervals"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rightSum", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "i", "]"}], " ", "di"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Rest", "@", "intervals"}]}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"middleSum", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"i", "+", 
        RowBox[{"di", "/", "2"}]}], "]"}], " ", "di"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Most", "@", "intervals"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"{", 
   RowBox[{"leftSum", ",", "rightSum", ",", "middleSum"}], "}"}]}]}], "Input",\

 CellChangeTimes->{{3.8141015918876657`*^9, 3.81410164271115*^9}, {
   3.8141016760093107`*^9, 3.814101702315214*^9}, {3.814101783065185*^9, 
   3.8141018117981663`*^9}, 3.814101917259337*^9, {3.8141022134683113`*^9, 
   3.814102227757834*^9}, {3.8141023342535887`*^9, 3.814102376953779*^9}, 
   3.8141036586369743`*^9},ExpressionUUID->"f38abcd7-c3c7-4f49-9ba8-\
e9e7a92e33d9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.1744000000000003`", ",", "3.4944`", ",", "3.3327999999999998`"}],
   "}"}]], "Output",
 CellChangeTimes->{
  3.814102377538102*^9, {3.814102432480341*^9, 3.814102445318421*^9}, {
   3.814102510093692*^9, 3.8141025276514063`*^9}, {3.814103679767552*^9, 
   3.814103690016307*^9}, 3.814103847774685*^9, 3.81410388221964*^9, 
   3.8141039567678967`*^9, 3.81410405888448*^9, {3.814104097155566*^9, 
   3.814104120816317*^9}, 3.8141041526244287`*^9, 3.81410426218801*^9, 
   3.8141077759792423`*^9, 3.814107846726859*^9, {3.814208119895162*^9, 
   3.81420814372818*^9}, 3.814277202010412*^9, 3.814452946245943*^9, 
   3.814617291019065*^9, 3.814713450052004*^9, 3.814729438784072*^9, 
   3.814729835412408*^9, 3.814784171632481*^9, 3.8147852592554092`*^9, 
   3.814786867631281*^9, 3.814787174436654*^9, 3.8147872428978157`*^9, 
   3.814790563886774*^9, 3.814799144825189*^9, 3.814799233074864*^9, 
   3.8148035109847307`*^9, 3.814808750565619*^9, 3.814816021599971*^9, 
   3.814817036741598*^9, 3.8148172002318697`*^9, 3.814817935328134*^9, 
   3.814818376777029*^9, 3.8148199180180817`*^9, 3.8149628741229763`*^9, 
   3.814964268783152*^9, 3.814965659764032*^9, 3.814968796133058*^9, 
   3.814982314784178*^9, 3.8149824308544197`*^9, 3.8149865034564047`*^9, 
   3.8149866448305407`*^9, 3.814988033018958*^9, 3.8150454781453743`*^9, 
   3.815048175234646*^9, 3.815049096799127*^9, 3.815053590577297*^9, 
   3.8150561847704144`*^9, 3.815134394443068*^9, 3.815135156579647*^9, 
   3.815135498877576*^9, 3.8151363248843*^9, 3.8151366435053997`*^9, 
   3.8151366951714277`*^9, 3.815136811405368*^9, 3.81513703902817*^9, 
   3.815137167596416*^9, 3.8151373724431467`*^9, 3.815137519870935*^9, 
   3.815137596530649*^9, 3.815138430435377*^9, 
   3.815138687946743*^9},ExpressionUUID->"0685f6fa-72c7-4a28-a80e-\
bc97e2a402f9"]
}, Open  ]],

Cell["\<\
Above is the result of nbins integration =25 (i.e. we subdivided the x by \
25).
Let\[CloseCurlyQuote]s use Mathematica symbols to calculate the correct true \
answer and compare it with our.
We see the middle point sum method is more precise  than the other twos.\
\>", "Text",
 CellChangeTimes->{{3.814102390294611*^9, 3.814102483784034*^9}, {
   3.814102534296946*^9, 3.814102549911954*^9}, 3.814102652218713*^9, {
   3.814103572558175*^9, 3.814103605744544*^9}, {3.814104565078614*^9, 
   3.814104592706987*^9}, {3.814104722309532*^9, 3.814104788254587*^9}, {
   3.814450650509424*^9, 
   3.814450668394923*^9}},ExpressionUUID->"c9f93fc5-88c4-4b69-a77f-\
37fc6cd3f55c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.81409961705344*^9, 3.814099639426029*^9}, {
   3.814099689934586*^9, 3.8140996985255823`*^9}, {3.814099735766218*^9, 
   3.814099755661994*^9}, 3.814099847301474*^9, {3.814099905752988*^9, 
   3.8140999058645163`*^9}, {3.814101900315124*^9, 3.814101901234222*^9}, 
   3.8141021914682207`*^9},ExpressionUUID->"81c82f7e-ec77-41d8-a7df-\
0888f842c71d"],

Cell[BoxData["3.333333333333338`"], "Output",
 CellChangeTimes->{
  3.814099641379114*^9, 3.8140996995752068`*^9, {3.8140997371339293`*^9, 
   3.814099756310549*^9}, 3.814099848656006*^9, 3.814099906484927*^9, {
   3.8141019019281588`*^9, 3.814101928546084*^9}, 3.8141021922033863`*^9, 
   3.814102491625908*^9, 3.814103690058466*^9, {3.814103858900859*^9, 
   3.814103882261644*^9}, 3.81410395681071*^9, 3.814104058925905*^9, {
   3.814104097198936*^9, 3.8141041208555593`*^9}, 3.814104152643759*^9, 
   3.81410426222824*^9, 3.814107776024899*^9, 3.814107848661645*^9, 
   3.814208146544973*^9, 3.814277204371365*^9, 3.8146172931215467`*^9, 
   3.8147134501006947`*^9, 3.814729438834841*^9, 3.8147298354612217`*^9, 
   3.814784171659163*^9, 3.81478525929532*^9, 3.8147868676539297`*^9, 
   3.814787174476322*^9, 3.8147872429243813`*^9, 3.814790563925105*^9, 
   3.814799144870056*^9, 3.814799233111826*^9, 3.814803511019451*^9, 
   3.814808750612174*^9, 3.814816021622905*^9, 3.814817036761215*^9, 
   3.81481720025597*^9, 3.814817935362596*^9, 3.814818376817849*^9, 
   3.814819918049704*^9, 3.814962874171122*^9, 3.8149642688271713`*^9, 
   3.8149656597928267`*^9, 3.814968796160585*^9, 3.814982314803316*^9, 
   3.814982430895557*^9, 3.814986503493552*^9, 3.814986644867392*^9, 
   3.814988033042701*^9, 3.815045478196478*^9, 3.815048175254365*^9, 
   3.81504909682542*^9, 3.8150535906058598`*^9, 3.815056184800316*^9, 
   3.8151343944680967`*^9, 3.815135156607349*^9, 3.8151354989123573`*^9, 
   3.815136324919311*^9, 3.8151366435430813`*^9, 3.815136695193907*^9, 
   3.8151368114305763`*^9, 3.815137039053152*^9, 3.815137167632235*^9, 
   3.815137372473778*^9, 3.815137519902055*^9, 3.8151375965524817`*^9, 
   3.815138430466364*^9, 
   3.815138687980064*^9},ExpressionUUID->"5c8f8ff7-5521-41c7-a511-\
2aa18307c85c"]
}, Open  ]],

Cell["\<\
We can still use Mathematica and NIntegrate to do what we\[CloseCurlyQuote]ve \
done manually above. \
\>", "Text",
 CellChangeTimes->{{3.8141042163739243`*^9, 
  3.8141042474455347`*^9}},ExpressionUUID->"518b6630-cd81-4b3b-ad25-\
18b1f582a02a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "@", "x"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "2"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<RiemannRule\>\"", ",", 
        RowBox[{"\"\<Type\>\"", "\[Rule]", "#"}], ",", 
        RowBox[{"\"\<Points\>\"", "\[Rule]", "25"}]}], "}"}]}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Left\>\"", ",", "\"\<Right\>\""}], "}"}]}]], "Input",
 CellChangeTimes->{{3.814103829542708*^9, 3.81410383270131*^9}, {
   3.81410393989928*^9, 3.814103951300788*^9}, 3.814104012075678*^9, 
   3.814104053315024*^9, {3.8141040867087603`*^9, 3.814104116184724*^9}, 
   3.8141041490305147`*^9},ExpressionUUID->"c4175dc0-418a-4098-b3e8-\
c5c8ef537c32"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.874921875`\\\", \
\\\"}\\\"}]\\). NIntegrate obtained \\!\\(\\*RowBox[{\\\"3.333251461338975`\\\
\"}]\\) and \\!\\(\\*RowBox[{\\\"0.00015961071549491825`\\\"}]\\) for the \
integral and error estimates.\"",2,15,1,30342593854861520298,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAOK0zxLS57LfOM4ycOX9C6Sdbt25zZLzxnFHcgEvK5Du
8yibKg+kI1KyZRWA9Fbjsmcg+tyuCzyKQFr1TpwoiGbYWbdFCUi3vZR9qgak
e9hUP4DoDINHbJpAet+Wq1O1gbRy1FYlfZC+1pkLQbRRE+c2EM0U9lbQAEhz
NEp7gujTkYc5DYH0rJXu18uAtEfNnNZyIB2yqsq4AuSeZ227K4H0kxtRoQ1A
+pLHvWQQPUPkY0ITkGZJmlsEov8tUVJoBtL5/cd15oPcHfuydgGQblon/RFE
99y9orQYSK+QkU5fAqRtTgVMPwWkpYymfgPRH07HKZ4G0s+l53eA6IUnizaA
6EdJz7eB6M9f846C6Ge/Hz0E0VVrvn4E0TWbJ3CfAdInkv7JgmiR55PUQfSV
+Av9INoggnEDiAYAcwvG8w==
  
  "],ExpressionUUID->"185deb92-1b61-4a31-a1c7-54f90299c94c"],

Cell[BoxData[
 TemplateBox[{
  "NIntegrate","ncvb",
   "\"NIntegrate failed to converge to prescribed accuracy after \
\\!\\(\\*RowBox[{\\\"9\\\"}]\\) recursive bisections in \
\\!\\(\\*RowBox[{\\\"x\\\"}]\\) near \\!\\(\\*RowBox[{\\\"{\\\", \\\"x\\\", \
\\\"}\\\"}]\\) = \\!\\(\\*RowBox[{\\\"{\\\", \\\"1.875`\\\", \\\"}\\\"}]\\). \
NIntegrate obtained \\!\\(\\*RowBox[{\\\"3.33341529051659`\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"0.0001593560859425433`\\\"}]\\) for the integral and \
error estimates.\"",2,15,2,30342593854861520298,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGAwAOK0zxLS57LfOM4ycOX9C6Sdbt25zZLzxnFHcgEvK5Du
8yibKg+kI1KyZRWA9Fbjsmcg+tyuCzyKQFr1TpwoiGbYWbdFCUi3vZR9qgak
e9hUP4DoDINHbJpAet+Wq1O1gbRy1FYlfZC+1pkLQbRRE+c2EM0U9lbQAEhz
NEp7gujTkYc5DYH0rJXu18uAtEfNnNZyIB2yqsq4AuSeZ227K4H0kxtRoQ1A
+pLHvWQQPUPkY0ITkGZJmlsEov8tUVJoBtL5/cd15oPcHfuydgGQblon/RFE
99y9orQYSK+QkU5fAqRtTgVMPwWkpYymfgPRH07HKZ4G0s+l53eA6IUnizaA
6EdJz7eB6M9f846C6Ge/Hz0E0VVrvn4E0TWbJ3CfAdInkv7JgmiR55PUQfSV
+Av9IHrPTqYNIBoAehjH4Q==
  
  "],ExpressionUUID->"b0c1d71a-bfed-4fe2-a598-bee27914f20b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.333251461338975`", ",", "3.33341529051659`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814617295498481*^9, 3.814617304811899*^9}, 
   3.814713450190016*^9, 3.814729438974667*^9, 3.814729835586177*^9, 
   3.814784171731139*^9, 3.814785259415201*^9, 3.814786867729145*^9, 
   3.8147871745769978`*^9, 3.814787243009369*^9, 3.8147905640014887`*^9, 
   3.8147991449785*^9, 3.8147992332086353`*^9, 3.814803511115384*^9, 
   3.814808750733323*^9, 3.814816021705193*^9, 3.8148170368320827`*^9, 
   3.814817200331573*^9, 3.8148179354641027`*^9, 3.814818376909721*^9, 
   3.8148199181481333`*^9, 3.8149628742723503`*^9, 3.814964268942625*^9, 
   3.814965659869071*^9, 3.8149687962505903`*^9, 3.814982314873982*^9, 
   3.814982430998775*^9, 3.814986503572879*^9, 3.814986644970558*^9, 
   3.8149880331198053`*^9, 3.8150454782813272`*^9, 3.815048175328349*^9, 
   3.815049096901403*^9, 3.815053590691009*^9, 3.8150561848868837`*^9, 
   3.815134394568915*^9, 3.815135156696725*^9, 3.8151354990318823`*^9, 
   3.8151363250291758`*^9, 3.815136643645344*^9, 3.8151366952681437`*^9, 
   3.8151368115067787`*^9, 3.815137039135858*^9, 3.815137167730599*^9, 
   3.815137372565909*^9, 3.815137519991666*^9, 3.815137596625093*^9, 
   3.815138430550655*^9, 
   3.815138688095673*^9},ExpressionUUID->"9c118110-f9f3-4f11-8756-\
3164fb9abaf9"]
}, Open  ]],

Cell[TextData[{
 "If we keep increasing the integration steps we\[CloseCurlyQuote]ll keep \
getting closer and closer to the correct answer. \nTo what point we should \
keep increasing our number of steps ? To have them an infinitesimal width ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[DifferentialD]", "x"}], TraditionalForm]],ExpressionUUID->
  "bfacad35-3755-4824-8ece-87c271167fe3"],
 ".\n\nWhen the step width approaches \[DifferentialD]x we don\
\[CloseCurlyQuote]t talk anymore about summation but about integration and \
use the integral symbol."
}], "Text",
 CellChangeTimes->{{3.8141025564813967`*^9, 3.814102592280061*^9}, {
   3.814102627152499*^9, 3.81410272244268*^9}, 3.814102774482346*^9, {
   3.814102926178187*^9, 3.814102972371518*^9}, 
   3.814208350122473*^9},ExpressionUUID->"c95b5967-6242-41bb-a727-\
e0f1a1324488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "2"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"7", "x"}], "-", 
     RowBox[{"8.5", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", 
      SuperscriptBox["x", "3"]}]}], ")"}], 
   RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",
 CellChangeTimes->{{3.814103042236553*^9, 
  3.814103043651166*^9}},ExpressionUUID->"872a2ab5-bda8-402c-995b-\
f3038e2706d1"],

Cell[BoxData["3.3333333333333357`"], "Output",
 CellChangeTimes->{
  3.8141030449477654`*^9, 3.814103690075952*^9, 3.814103882278244*^9, 
   3.814103956827361*^9, 3.814104058943815*^9, {3.814104097213546*^9, 
   3.814104120871978*^9}, 3.814104152686758*^9, 3.8141042623130903`*^9, 
   3.8141077761149607`*^9, 3.814208156291576*^9, 3.814277208468796*^9, 
   3.8146173123982162`*^9, 3.8147134501957607`*^9, 3.814729438982903*^9, 
   3.814729835591728*^9, 3.814784171748241*^9, 3.814785259421434*^9, 
   3.814786867734523*^9, 3.814787174597414*^9, 3.814787243026622*^9, 
   3.8147905640068274`*^9, 3.814799144984935*^9, 3.814799233214942*^9, 
   3.814803511149337*^9, 3.814808750738159*^9, 3.8148160217104473`*^9, 
   3.814817036837129*^9, 3.814817200335889*^9, 3.814817935495718*^9, 
   3.814818376927854*^9, 3.814819918180955*^9, 3.814962874278184*^9, 
   3.8149642689577627`*^9, 3.8149656598749723`*^9, 3.814968796267782*^9, 
   3.814982314880013*^9, 3.814982431018216*^9, 3.8149865035884943`*^9, 
   3.814986644990118*^9, 3.8149880331454363`*^9, 3.81504547830188*^9, 
   3.815048175332906*^9, 3.815049096905456*^9, 3.8150535906955233`*^9, 
   3.815056184891287*^9, 3.815134394589196*^9, 3.815135156701232*^9, 
   3.815135499036653*^9, 3.815136325052251*^9, 3.815136643651021*^9, 
   3.815136695273965*^9, 3.81513681151276*^9, 3.815137039141245*^9, 
   3.815137167750284*^9, 3.815137372598111*^9, 3.815137520025567*^9, 
   3.815137596629435*^9, 3.8151384305821753`*^9, 
   3.815138688119028*^9},ExpressionUUID->"da2332bc-e8a6-4211-957d-\
0264832583c8"]
}, Open  ]],

Cell[TextData[{
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n\n",
 StyleBox["Now let\[CloseCurlyQuote]s approach this with Monte Carlo.\n\n",
  FontVariations->{"Underline"->True}],
 "We can approximate this integral by averaging samples of the function ",
 StyleBox["f",
  FontSlant->"Italic"],
 " at uniform random points within the interval. \nGiven a set of N uniform \
random variables ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "56660f92-8bf4-4336-8da5-f3aa1fac4400"],
 " \[Element] [a,b) with a corresponding PDF of 1/(b \[Minus] a) (i.e. the \
pdf of a uniform distribution)\n",
 StyleBox["the Monte Carlo ",
  FontVariations->{"Underline"->True}],
 StyleBox["estimator",
  FontVariations->{"Underline"->True},
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox[" for computing F is",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.814104373354229*^9, 3.814104385031438*^9}, {
   3.814104478363669*^9, 3.8141044787694273`*^9}, {3.814104821011489*^9, 
   3.814104862641696*^9}, {3.814104900326935*^9, 3.814104920938055*^9}, 
   3.814105153592046*^9, {3.814105432663651*^9, 3.8141054526403227`*^9}, {
   3.8141068165716963`*^9, 
   3.81410681742752*^9}},ExpressionUUID->"d77cc4b7-e60b-4440-af54-\
0c22cca304d8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], 
    FractionBox["1", 
     RowBox[{"N", "-", "1"}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "0"}], "N"], 
     RowBox[{"f", 
      RowBox[{"(", 
       SubscriptBox["X", "i"], ")"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814104937142453*^9, 
  3.81410500772044*^9}},ExpressionUUID->"e944003f-a0d6-4af6-b736-\
4b594cdd9c83"],

Cell[TextData[{
 StyleBox["(take care that the above is actually the sample mean of ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "b0aba4c2-d8a3-4ac0-a39c-76760a06eca5"],
 StyleBox[", aka the mean estimate, also called the ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["primary",
  FontSize->12,
  FontSlant->"Italic",
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox[" MC estimator",
  FontSize->12,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox[")",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nThe random variable ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "0d3e410a-6a54-4358-8287-5e542ac13c03"],
 " \[Element] [a,b) can be constructed by :\n- warping a canonical random \
number uniformly distributed between zero and one, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Xi]", "i"], TraditionalForm]],ExpressionUUID->
  "360fb03c-145b-4b52-a0dc-a289ee0e6f91"],
 " \[Element] [0, 1):"
}], "Text",
 CellChangeTimes->{{3.814105167415618*^9, 3.814105193753284*^9}, {
  3.814105253378922*^9, 3.814105259181077*^9}, {3.81411924267994*^9, 
  3.814119263042676*^9}, {3.814119300822188*^9, 3.81411933844129*^9}, {
  3.8141194276974583`*^9, 3.8141194326438847`*^9}, {3.8141215635339746`*^9, 
  3.814121566219068*^9}, {3.814439527869768*^9, 
  3.8144395364420633`*^9}},ExpressionUUID->"0092a223-5f26-4bdb-8379-\
10a5ea4351a8"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["X", "i"], "=", 
   RowBox[{"a", "+", 
    RowBox[{
     SubscriptBox["\[Xi]", "i"], 
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814105206376273*^9, 3.8141052138014393`*^9}, {
  3.814105265683579*^9, 
  3.814105274146237*^9}},ExpressionUUID->"e57af973-5461-46d6-972e-\
2129f57dfda6"],

Cell["With that, our estimator becomes :", "Text",
 CellChangeTimes->{{3.814105325491436*^9, 3.8141053349863577`*^9}, {
  3.814105458736804*^9, 
  3.8141054632347927`*^9}},ExpressionUUID->"19247c26-c3a8-4372-b60d-\
338afe186874"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}], 
    FractionBox["1", "N"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "0"}], 
      RowBox[{"N", "-", "1"}]], 
     RowBox[{"f", 
      RowBox[{"(", 
       RowBox[{"a", "+", 
        RowBox[{
         SubscriptBox["\[Xi]", "i"], 
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}]}]}], ")"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814105346844346*^9, 
  3.8141053989824533`*^9}},ExpressionUUID->"0201b2b7-a1ce-4d26-89bb-\
efc89dfef6a7"],

Cell[TextData[{
 "Note that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"]}], TraditionalForm]],ExpressionUUID->
  "c3f353d0-da9f-45b6-a995-f31f2ad09057"],
 " \[RightAngleBracket] means \[OpenCurlyQuote]approximating ",
 StyleBox["f ",
  FontSlant->"Italic"],
 "with N samples\[CloseCurlyQuote] and since ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"9af3b739-5bc5-45ac-b537-aee3d4fb59c5"],
 " is a function of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "42f295a5-2b44-49f5-abd6-ef44754a15dd"],
 ", it\[CloseCurlyQuote]s itself a random variable."
}], "Text",
 CellChangeTimes->{{3.8141054685214767`*^9, 3.814105594139472*^9}, {
   3.81410564301094*^9, 3.814105646095276*^9}, {3.814180938608708*^9, 
   3.814181177468553*^9}, {3.814181249762949*^9, 3.8141812505949097`*^9}, {
   3.8142075991404*^9, 3.814207663084732*^9}, {3.814381191987707*^9, 
   3.8143812727879543`*^9}, {3.814381343918707*^9, 3.814381349937899*^9}, {
   3.814381383781313*^9, 3.814381384522491*^9}, 
   3.8144424506878347`*^9},ExpressionUUID->"38621163-7005-43f3-9d5b-\
84fd4085dd3c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "600"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], 
   FractionBox["1", "n"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"f", "[", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}], "//", 
  "N"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", 
        RowBox[{"(", 
         RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{"2", "/", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "while", " ", "the", " ", "above", " ", "procedures", " ", "are", " ", 
    "the", " ", "same", " ", "they", " ", "will", " ", "return", " ", 
    "different", " ", "results", " ", "due", " ", "to", " ", "the", " ", 
    "random", " ", "numbers"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.814106023533031*^9, 3.814106048782667*^9}, {
   3.8141061007593727`*^9, 3.814106168412736*^9}, {3.814106217482829*^9, 
   3.814106244032887*^9}, {3.8141062760509443`*^9, 3.81410631747344*^9}, {
   3.814106356672987*^9, 3.814106471126069*^9}, {3.8141065442545033`*^9, 
   3.814106661185931*^9}, {3.8141066989656277`*^9, 3.814106780913164*^9}, {
   3.814106838193061*^9, 3.814106894126009*^9}, 3.814107764653841*^9, {
   3.814107794981776*^9, 3.814107817738193*^9}, {3.8141078581848297`*^9, 
   3.8141078789047413`*^9}, {3.8141794379264603`*^9, 3.814179465779553*^9}, {
   3.814208180948373*^9, 3.814208201373966*^9}, {3.8142083099412737`*^9, 
   3.814208317138179*^9}, {3.8144534001249237`*^9, 
   3.814453403860623*^9}},ExpressionUUID->"d050fa1f-3566-4f69-8922-\
e750c989866f"],

Cell[BoxData["3.3353476041534065`"], "Output",
 CellChangeTimes->{{3.814106115071307*^9, 3.814106169357486*^9}, {
   3.814106311625126*^9, 3.8141064717480583`*^9}, {3.81410654577206*^9, 
   3.814106662039564*^9}, {3.814106701714015*^9, 3.8141067838258257`*^9}, 
   3.814106844516671*^9, 3.814106897572513*^9, {3.814107768727974*^9, 
   3.814107776296854*^9}, {3.814107806998199*^9, 3.814107819745346*^9}, {
   3.814107854770447*^9, 3.814107884195302*^9}, 3.8141154304669857`*^9, 
   3.814118022132537*^9, {3.814208174202033*^9, 3.814208209080935*^9}, {
   3.814208312000634*^9, 3.814208325070347*^9}, 3.814277222015368*^9, 
   3.814452957428729*^9, {3.814453407443727*^9, 3.814453408890679*^9}, 
   3.8146173169416447`*^9, 3.8147134502449703`*^9, 3.814729439038188*^9, 
   3.8147298356438227`*^9, 3.8147841717667007`*^9, 3.8147852594657087`*^9, 
   3.814786867757633*^9, 3.8147871746350403`*^9, 3.814787243047076*^9, 
   3.814790564040114*^9, 3.8147991450254803`*^9, 3.814799233249645*^9, 
   3.814803511186421*^9, 3.814808750770152*^9, 3.814816021734828*^9, 
   3.814817036860881*^9, 3.814817200359774*^9, 3.814817935529728*^9, 
   3.814818376948996*^9, 3.8148199182153473`*^9, 3.8149628743122168`*^9, 
   3.814964268986157*^9, 3.814965659899069*^9, 3.814968796291767*^9, 
   3.8149823149033813`*^9, 3.8149824310550337`*^9, 3.8149865036171618`*^9, 
   3.814986645023473*^9, 3.8149880331734324`*^9, 3.8150454783478527`*^9, 
   3.815048175357773*^9, 3.81504909692852*^9, 3.81505359072661*^9, 
   3.815056184921577*^9, 3.815134394610446*^9, 3.815135156723626*^9, 
   3.815135499062549*^9, 3.815136325078538*^9, 3.8151366436746693`*^9, 
   3.815136695298545*^9, 3.8151368115362597`*^9, 3.815137039168146*^9, 
   3.815137167781268*^9, 3.815137372632107*^9, 3.8151375200593567`*^9, 
   3.8151375966548443`*^9, 3.815138430614208*^9, 
   3.815138688156955*^9},ExpressionUUID->"ab7ca4f6-bf16-4804-b576-\
a21b832e89bf"],

Cell[BoxData["3.436503618308529`"], "Output",
 CellChangeTimes->{{3.814106115071307*^9, 3.814106169357486*^9}, {
   3.814106311625126*^9, 3.8141064717480583`*^9}, {3.81410654577206*^9, 
   3.814106662039564*^9}, {3.814106701714015*^9, 3.8141067838258257`*^9}, 
   3.814106844516671*^9, 3.814106897572513*^9, {3.814107768727974*^9, 
   3.814107776296854*^9}, {3.814107806998199*^9, 3.814107819745346*^9}, {
   3.814107854770447*^9, 3.814107884195302*^9}, 3.8141154304669857`*^9, 
   3.814118022132537*^9, {3.814208174202033*^9, 3.814208209080935*^9}, {
   3.814208312000634*^9, 3.814208325070347*^9}, 3.814277222015368*^9, 
   3.814452957428729*^9, {3.814453407443727*^9, 3.814453408890679*^9}, 
   3.8146173169416447`*^9, 3.8147134502449703`*^9, 3.814729439038188*^9, 
   3.8147298356438227`*^9, 3.8147841717667007`*^9, 3.8147852594657087`*^9, 
   3.814786867757633*^9, 3.8147871746350403`*^9, 3.814787243047076*^9, 
   3.814790564040114*^9, 3.8147991450254803`*^9, 3.814799233249645*^9, 
   3.814803511186421*^9, 3.814808750770152*^9, 3.814816021734828*^9, 
   3.814817036860881*^9, 3.814817200359774*^9, 3.814817935529728*^9, 
   3.814818376948996*^9, 3.8148199182153473`*^9, 3.8149628743122168`*^9, 
   3.814964268986157*^9, 3.814965659899069*^9, 3.814968796291767*^9, 
   3.8149823149033813`*^9, 3.8149824310550337`*^9, 3.8149865036171618`*^9, 
   3.814986645023473*^9, 3.8149880331734324`*^9, 3.8150454783478527`*^9, 
   3.815048175357773*^9, 3.81504909692852*^9, 3.81505359072661*^9, 
   3.815056184921577*^9, 3.815134394610446*^9, 3.815135156723626*^9, 
   3.815135499062549*^9, 3.815136325078538*^9, 3.8151366436746693`*^9, 
   3.815136695298545*^9, 3.8151368115362597`*^9, 3.815137039168146*^9, 
   3.815137167781268*^9, 3.815137372632107*^9, 3.8151375200593567`*^9, 
   3.8151375966548443`*^9, 3.815138430614208*^9, 
   3.81513868817225*^9},ExpressionUUID->"3d28fc08-0bb9-429c-9704-\
c33a2fbe0e67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"a", "+", 
   RowBox[{
    RowBox[{"RandomReal", "[", "]"}], "*", 
    RowBox[{"(", 
     RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]], "Input",ExpressionUUID->\
"b1dd140f-8956-42d7-bf19-50ed627216b6"],

Cell[BoxData["1.7484968941064853`"], "Output",
 CellChangeTimes->{{3.814277224555732*^9, 3.814277235699793*^9}, {
   3.814277270048518*^9, 3.814277278780251*^9}, {3.8144529334668713`*^9, 
   3.814452966765547*^9}, {3.814453412401885*^9, 3.8144534202094917`*^9}, 
   3.814617319369156*^9, 3.814713450251726*^9, 3.814729439047274*^9, 
   3.814729835651719*^9, 3.8147841717755823`*^9, 3.8147852594961443`*^9, 
   3.814786867763095*^9, 3.8147871746537237`*^9, 3.81478724305687*^9, 
   3.814790564046678*^9, 3.814799145032116*^9, 3.814799233255652*^9, 
   3.814803511193368*^9, 3.814808750775793*^9, 3.814816021741768*^9, 
   3.81481703686725*^9, 3.814817200387957*^9, 3.814817935535548*^9, 
   3.814818376956884*^9, 3.814819918221858*^9, 3.814962874319304*^9, 
   3.814964269006382*^9, 3.814965659904813*^9, 3.814968796301054*^9, 
   3.8149823149097347`*^9, 3.814982431075721*^9, 3.8149865036354713`*^9, 
   3.814986645042609*^9, 3.8149880331795673`*^9, 3.815045478362966*^9, 
   3.8150481753641863`*^9, 3.815049096934772*^9, 3.8150535907322893`*^9, 
   3.815056184938217*^9, 3.815134394616898*^9, 3.815135156746182*^9, 
   3.815135499088808*^9, 3.8151363250903788`*^9, 3.815136643682426*^9, 
   3.815136695307601*^9, 3.8151368115426683`*^9, 3.8151370391752377`*^9, 
   3.815137167800104*^9, 3.815137372638403*^9, 3.81513752006592*^9, 
   3.8151375966614323`*^9, 3.815138430620452*^9, 
   3.8151386881794577`*^9},ExpressionUUID->"c1678ab8-f010-4ac9-a647-\
5a8bcb2dad14"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
========================\n[LT->Theory->2014 - Monte Carlo Integration \
Tecniques]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nIt is easy to show that the expected value ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"3b3c4398-eac2-4b60-bd59-49a60bb492fb"],
 " is in fact F.\n\nFirst recall the proofs about Expected Values and \
Variance.\nThe expected value of a random variable Y=f(X) over a domain \
\[Mu](x) is "
}], "Text",
 CellChangeTimes->{{3.814113154171544*^9, 3.814113190282502*^9}, {
   3.814113492637925*^9, 3.814113523531446*^9}, {3.8141135627486887`*^9, 
   3.814113595464747*^9}, {3.814181208902832*^9, 3.814181210409606*^9}, {
   3.814181241775051*^9, 3.8141812835810747`*^9}, {3.814181370968357*^9, 
   3.814181460105528*^9}, {3.814181529887308*^9, 3.814181531079618*^9}, {
   3.8141817688370457`*^9, 3.814181841692225*^9}, {3.8141818740492077`*^9, 
   3.814181874049614*^9}, {3.814182374336804*^9, 3.8141824079950657`*^9}, {
   3.814182559565073*^9, 3.8141825632035923`*^9}, {3.814267280549535*^9, 
   3.814267375409088*^9}, {3.814267734761078*^9, 3.814267930306485*^9}, {
   3.814268009470064*^9, 3.814268033445407*^9}, {3.814268104026895*^9, 
   3.814268128192604*^9}, {3.814268776644075*^9, 3.814268778826208*^9}, {
   3.814378454050619*^9, 3.8143785019632263`*^9}, {3.814381411457749*^9, 
   3.814381417371743*^9}, 
   3.814464283006531*^9},ExpressionUUID->"e0bd3e94-c21b-4eba-906b-\
d950772cf66e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", "Y", "]"}], "=", 
   RowBox[{
    SubscriptBox["\[Integral]", 
     RowBox[{"\[Mu]", 
      RowBox[{"(", "x", ")"}]}]], 
    RowBox[{"f", 
     RowBox[{"(", "x", ")"}], "pdf", 
     RowBox[{"(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8141136032502613`*^9, 
  3.814113701169952*^9}},ExpressionUUID->"159d8802-76fb-47e1-96e0-\
75d45c3e4846"],

Cell["while its variance is", "Text",
 CellChangeTimes->{{3.814113707109817*^9, 
  3.814113713117345*^9}},ExpressionUUID->"42372d52-a2f9-42d1-bd82-\
55e453477733"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "[", "Y", "]"}], "=", 
   RowBox[{
    RowBox[{"E", "[", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"Y", "-", 
        RowBox[{"E", "[", "Y", "]"}]}], ")"}], "2"], "]"}], " ", "=", " ", 
    RowBox[{"E", "[", 
     SuperscriptBox[
      RowBox[{
       StyleBox["(",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox["Y",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox["-",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        SubscriptBox[
         StyleBox["\[Mu]",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], "y"]}], ")"}], "2"], "]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8141136032502613`*^9, 3.814113696864354*^9}, {
  3.814188646083054*^9, 
  3.8141887048314047`*^9}},ExpressionUUID->"9a8aab9c-32f8-4357-81e3-\
5d1f602a8236"],

Cell["\<\
where \[Sigma], the standard deviation, is the square root of the variance\
\>", "Text",
 CellChangeTimes->{{3.8141138196325703`*^9, 
  3.814113838396202*^9}},ExpressionUUID->"23e56697-34e5-43cc-a12d-\
c305af272077"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", "aY", "]"}], "=", 
   RowBox[{"aE", "[", "Y", "]"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "[", "aY", "]"}], "=", 
   RowBox[{
    SuperscriptBox["a", "2"], 
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], "[", "Y", "]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8141138634634237`*^9, 
  3.814113897819745*^9}},ExpressionUUID->"3a0ea884-3577-481e-adb2-\
310d5d800509"],

Cell[TextData[{
 "furthermore, the expected value of a sum of random variables ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Y", "i"], TraditionalForm]],ExpressionUUID->
  "ae1bb565-ad0a-4f8d-974a-1fc21a40bb3d"],
 " is the sum of their expected values"
}], "Text",
 CellChangeTimes->{{3.814113908305347*^9, 
  3.8141139784368763`*^9}},ExpressionUUID->"f2d96c82-b23f-4ec3-854f-\
ba52e489b966"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"E", "[", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     SubscriptBox["Y", "i"]}], "]"}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["=",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  RowBox[{
   StyleBox[
    UnderscriptBox["\[Sum]", "i"],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{"E", "[", 
     SubscriptBox["Y", "i"], "]"}],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox["      ",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{
     StyleBox[
      RowBox[{"(", "*"}]], " ", 
     RowBox[{
      RowBox[{"this", " ", "is", " ", "called"}], ",", " ", 
      RowBox[{
      "the", " ", "linearity", " ", "of", " ", "the", " ", "expectation", " ",
        "value"}]}], " ", 
     StyleBox[
      RowBox[{"*", ")"}]]}],
    FontSize->12,
    FontColor->GrayLevel[0.5]]}]}]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814113985323145*^9, 3.814114079328199*^9}, {
  3.814268319645035*^9, 
  3.814268362282308*^9}},ExpressionUUID->"9d10da2e-31ef-4f8a-8d01-\
d3b1a5e0b887"],

Cell["From there we derive a simpler expression for the variance", "Text",
 CellChangeTimes->{{3.814114086189474*^9, 
  3.81411410320065*^9}},ExpressionUUID->"7f4d0690-3cfc-4e82-b10b-\
50335ef0fc48"],

Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], "[", "Y", "]"}], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      SuperscriptBox["Y", "2"], "]"}], "-", 
     SuperscriptBox[
      RowBox[{"E", "[", "Y", "]"}], "2"]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[" ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "see", " ", "expectation", " ", "algebra", " ", "in", " ", "part1"}], " ",
     "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "[", 
    RowBox[{
     UnderscriptBox["\[Sum]", "i"], 
     SubscriptBox["Y", "i"]}], "]"}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["=",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  RowBox[{
   StyleBox[
    UnderscriptBox["\[Sum]", "i"],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{
     SuperscriptBox["\[Sigma]", "2"], "[", 
     SubscriptBox["Y", "i"], "]"}],
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[" ",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   StyleBox[
    RowBox[{"(*", " ", 
     RowBox[{"for", " ", "uncorrelated", " ", "randoms"}], " ", "*)"}],
    FontSize->12,
    FontColor->GrayLevel[0.5]]}]}]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814114110603692*^9, 3.814114130357065*^9}, {
   3.81411416548209*^9, 3.814114220222354*^9}, 3.814122380247123*^9, {
   3.814193362853059*^9, 
   3.814193402520405*^9}},ExpressionUUID->"fe7bfd64-c27c-48c7-acf3-\
ab51115df657"],

Cell[TextData[{
 "\nWith the above in mind we can demostrate that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"33667e09-5fa8-4ded-bb2f-15c2014663da"],
 " is in fact F\n",
 StyleBox["(so that the error here would be zero.. ie ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "f69038fb-2f12-4bee-bebf-013d8cf85a19"],
 StyleBox[" is an unbiased estimator)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.814114338774572*^9, 3.8141143549151373`*^9}, {
  3.814193477109755*^9, 
  3.814193544810898*^9}},ExpressionUUID->"3a38d5e8-0c4e-43fc-a071-\
e1d65ed7add5"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "]"}], "=", 
   RowBox[{"E", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{"f", 
       RowBox[{"(", 
        SubscriptBox["X", "i"], ")"}]}]}]}], "]"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{"E", "[", 
       RowBox[{"f", 
        RowBox[{"(", 
         SubscriptBox["X", "i"], ")"}]}], "]"}]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[" ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"from", " ", "4", " ", "and", " ", "3", "a"}], "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "a", "b"], 
       RowBox[{"f", 
        RowBox[{"(", "x", ")"}], "pdf", 
        RowBox[{"(", "x", ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["  ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"from", " ", "1"}], "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]]}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"N", "-", "1"}]], 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "a", "b"], 
       RowBox[{"f", 
        RowBox[{"(", "x", ")"}], 
        RowBox[{"\[DifferentialD]", "x"}]}]}]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["  ",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"since", " ", "pdf", 
      RowBox[{"(", "x", ")"}]}], "=", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}]}]}], "*)"}],
   FontSize->12,
   FontColor->GrayLevel[0.5]]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{"f", 
      RowBox[{"(", "x", ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], " "}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{"F", "|", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"\[LeftAngleBracket]", "F", "\[RightAngleBracket]"}], 
     "\[RightAngleBracket]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814113210083948*^9, 3.8141134006386747`*^9}, {
   3.814114475799918*^9, 3.814114512725501*^9}, {3.81411454278506*^9, 
   3.814114660744947*^9}, 3.814119616836356*^9, {3.8142076789932823`*^9, 
   3.814207691617415*^9}},ExpressionUUID->"e71733bb-8150-48f0-ace3-\
f1a338c75b47"],

Cell[TextData[{
 "\nEventually due to \[OpenCurlyQuote]the law of large numbers\
\[CloseCurlyQuote] the estimator ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"d8fb7e5e-0ffe-4f37-ab2e-6853b3047e31"],
 " becomes closer and closer to F ",
 StyleBox[" ",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.8141147254619217`*^9, 3.814114773182747*^9}, {
   3.814193559300509*^9, 3.8141935791012163`*^9}, {3.814268269086512*^9, 
   3.814268270144897*^9}, 
   3.814269014150543*^9},ExpressionUUID->"f57a00cc-ad4d-49fd-bf3a-\
5b2c52209fc0"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Pr", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       UnderscriptBox["lim", 
        RowBox[{"N", "\[Rule]", "\[Infinity]"}]], 
       RowBox[{"\[LeftAngleBracket]", 
        SuperscriptBox["F", "N"], "\[RightAngleBracket]"}]}], "=", "F"}], 
     "}"}]}], "=", "1"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   StyleBox["Pr",
    FontSize->18,
    FontColor->RGBColor[1, 0.5, 0]], 
   RowBox[{
    StyleBox["{",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     RowBox[{
      StyleBox[
       UnderscriptBox["lim", 
        RowBox[{"N", "\[Rule]", "\[Infinity]"}]],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      RowBox[{
       StyleBox["\[LeftAngleBracket]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       OverscriptBox[
        StyleBox["A",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], "-"], 
       StyleBox["\[RightAngleBracket]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]]}]}], 
     StyleBox["=",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     StyleBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]]}], 
    StyleBox["}",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]]}]}], 
  StyleBox["=",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], 
  StyleBox["1",
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]]}]}], "DisplayFormula",
 CellChangeTimes->{{3.814114806146896*^9, 3.814114849752122*^9}, {
  3.814269056067605*^9, 
  3.814269081650804*^9}},ExpressionUUID->"9df1a3ee-a988-4b0b-a881-\
cc6a507fc862"],

Cell["\<\

So with Mathematica code we can approach this with :\
\>", "Text",
 CellChangeTimes->{{3.814453130486191*^9, 3.814453144772812*^9}, {
  3.814453580756822*^9, 
  3.814453581406893*^9}},ExpressionUUID->"05cce0bb-6549-4c9b-a058-\
1a2c434b7911"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"m", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   FractionBox["1", "m"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "m"], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}], 
      FractionBox["1", "n"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "0"}], "n"], 
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}], ")"}]}]}], "//", 
  "N"}]}], "Input",
 CellChangeTimes->{{3.814453076484735*^9, 3.814453108299787*^9}, {
  3.8144531505790787`*^9, 
  3.814453178342945*^9}},ExpressionUUID->"f149ad1b-afd7-454c-bf83-\
ee1c4b6074bf"],

Cell[BoxData["3.3667196645777127`"], "Output",
 CellChangeTimes->{
  3.814453109238*^9, {3.814453167968487*^9, 3.8144531861610823`*^9}, 
   3.814617327065638*^9, 3.814713450463887*^9, 3.814729439255501*^9, 
   3.8147298358617773`*^9, 3.814784171962216*^9, 3.814785259692395*^9, 
   3.814786867945656*^9, 3.814787174846435*^9, 3.814787243237131*^9, 
   3.814790564239188*^9, 3.814799145225711*^9, 3.814799233449964*^9, 
   3.81480351138804*^9, 3.814808750968835*^9, 3.814816021925837*^9, 
   3.814817037049327*^9, 3.8148172005747423`*^9, 3.814817935725731*^9, 
   3.8148183771422043`*^9, 3.81481991841228*^9, 3.814962874532832*^9, 
   3.814964269198436*^9, 3.8149656600884047`*^9, 3.814968796489599*^9, 
   3.814982315085918*^9, 3.814982431266635*^9, 3.8149865038330107`*^9, 
   3.8149866452356653`*^9, 3.814988033364101*^9, 3.8150454785507174`*^9, 
   3.815048175548007*^9, 3.8150490971299467`*^9, 3.815053590923345*^9, 
   3.815056185116653*^9, 3.815134394810787*^9, 3.815135156928125*^9, 
   3.815135499274075*^9, 3.815136325292959*^9, 3.815136643867503*^9, 
   3.815136695494035*^9, 3.81513681172937*^9, 3.815137039360037*^9, 
   3.815137167996416*^9, 3.815137372830999*^9, 3.815137520259884*^9, 
   3.815137596846572*^9, 3.815138430819275*^9, 
   3.815138688385208*^9},ExpressionUUID->"95403afe-39e7-4873-baa7-\
cc86f16a4740"]
}, Open  ]],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
==========\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Estimating Errors Reliably \
in Monte Carlo Simulations]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["( This also anticipates the MC error derivation we\
\[CloseCurlyQuote]ll find below )\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nHowever take care that in some literature something is the ",
 StyleBox["estimate",
  FontVariations->{"Underline"->True}],
 "  ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["F", "-"], TraditionalForm]],ExpressionUUID->
  "48c41980-2b51-42f0-bf0c-97d259490cc9"],
 " and something else is \[LeftAngleBracket]F\[RightAngleBracket] which is \
the ",
 StyleBox["true expectation",
  FontVariations->{"Underline"->True}],
 ", \nthere, the above relation is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"66f204bf-63b9-43db-b67f-e94e5a027db8"],
 "=\[LeftAngleBracket]A\[RightAngleBracket] , so that the deviation of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"cb84f944-2ae4-4196-8537-3b279c3f7a8c"],
 " from the true expectation \[LeftAngleBracket]A\[RightAngleBracket] is a \
fluctuating quantity ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "A"], TraditionalForm]],ExpressionUUID->
  "3b0e701d-1c4f-494a-bd47-9a8a5c860bb6"],
 " .\n\nSo below, \n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "-"], TraditionalForm]],ExpressionUUID->
  "798e76ee-918d-43f3-bd27-3466ffda7bd6"],
 " is the mean estimate of A while \n\[LeftAngleBracket]A\[RightAngleBracket] \
is the true expected value of A ",
 StyleBox["(sometimes written like \[LeftAngleBracket]\[LeftAngleBracket]A\
\[RightAngleBracket]\[RightAngleBracket] )",
  FontColor->GrayLevel[0.5]],
 ". And \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"2f56d71e-eaae-41d1-b760-5a7e04aa6a5a"],
 " is the expected mean estimate of A.\n\nMore generally it would be written \
as ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "^"], TraditionalForm]],ExpressionUUID->
  "d3fc28fb-344a-48d9-8d17-5ea024239ff9"],
 "=A (where the hat^ stays for expectation as \[LeftAngleBracket] \
\[RightAngleBracket]. However then we don\[CloseCurlyQuote]t have the upper \
space for another symbol so to write the expected mean value of A with the ^ \
notation, we use the \[Mu] that stays for mean.. ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Mu]", "^"], TraditionalForm]],ExpressionUUID->
  "89c96e81-745e-406b-bef7-9d3b66a4742a"],
 " is the expected mean value of A, ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  ExpressionUUID->"1aba4c4e-083e-49a5-b2d6-0d972bd34c10"],
 "\n\nAnd just to make things easier ;) we may add the ",
 StyleBox["distinction between an estimate and an estimator",
  FontVariations->{"Underline"->True}],
 ".\nIf we write ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Mu]", "^"], "=", 
    OverscriptBox["x", "-"]}], TraditionalForm]],ExpressionUUID->
  "1a8180d6-b7c5-4067-89a0-cfd6296e528a"],
 " ; we want to say that the estimate \[Mu] is the mean ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "4749ca51-c462-460a-b03a-5412db4db007"],
 ". Formally this is written as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "^"], "=", 
    OverscriptBox["x", "-"]}], TraditionalForm]],ExpressionUUID->
  "d8c469b8-86dd-4905-9579-5a037c5fa377"],
 "\nBut if we wanna talk about the estimator (not the estimate) then we \
should use the uppercase theta \[CapitalTheta] .\n\n\nAnyway :) due to the \
linearity of the expectations \n"
}], "Text",
 CellChangeTimes->{{3.814268577854643*^9, 3.814268617249354*^9}, {
   3.814268786586502*^9, 3.814268818850767*^9}, {3.8142697688249693`*^9, 
   3.814269779015334*^9}, {3.814269825501401*^9, 3.814269834837661*^9}, 
   3.814269926598174*^9, 3.814270815792248*^9, 3.8142743637708178`*^9, {
   3.814278778557866*^9, 3.814278829021566*^9}, 3.814279035595786*^9, {
   3.81428068934899*^9, 3.8142806898841743`*^9}, {3.8142808212179956`*^9, 
   3.8142808411990423`*^9}, {3.814280900690735*^9, 3.814280911556161*^9}, {
   3.814280989927041*^9, 3.8142810166074038`*^9}, {3.8143518781892147`*^9, 
   3.8143518989806337`*^9}, 3.814355641094736*^9, {3.814355674347666*^9, 
   3.814355756741428*^9}, {3.814355795646145*^9, 3.8143559045232687`*^9}, {
   3.8143560183769407`*^9, 3.814356084027718*^9}, {3.814356167217589*^9, 
   3.814356187239242*^9}, {3.814356259913169*^9, 3.8143563719387693`*^9}, {
   3.8143565318279257`*^9, 3.814356563122065*^9}, {3.814356611233054*^9, 
   3.814356643787166*^9}, {3.814377287521553*^9, 3.814377288600403*^9}, {
   3.814378400322954*^9, 3.814378418178999*^9}, {3.814381482244852*^9, 
   3.814381528139038*^9}, {3.8144534767195377`*^9, 3.814453496158889*^9}, {
   3.814453636600132*^9, 3.814453699896122*^9}, {3.8146998188982286`*^9, 
   3.8146998210578623`*^9}, 3.814794717926114*^9, {3.814877087896097*^9, 
   3.814877175237289*^9}, {3.814877222620833*^9, 3.814877268117426*^9}, {
   3.814877301242256*^9, 3.8148773527588453`*^9}, {3.814877426008369*^9, 
   3.814877426414871*^9}, {3.814877590399394*^9, 3.814877590466444*^9}, {
   3.814898293472374*^9, 
   3.8148982939426737`*^9}},ExpressionUUID->"27a56ffe-7920-4d57-8ea6-\
79cd1d832806"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      FractionBox["1", "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["A", "i"]}]}], "\[RightAngleBracket]"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       RowBox[{"\[LeftAngleBracket]", 
        SubscriptBox["A", "i"], "\[RightAngleBracket]"}]}]}], "=", 
     RowBox[{
      RowBox[{
       FractionBox["1", "N"], 
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "N"], 
        RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}]}]}], "=", 
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814268638288349*^9, 3.814268692514352*^9}, {
  3.814268825150936*^9, 
  3.814268927458157*^9}},ExpressionUUID->"0653af52-3b3f-4fea-b453-\
f7e5c99cb461"],

Cell["where \[LeftAngleBracket]A\[RightAngleBracket]", "Text",
 CellChangeTimes->{{3.814268936591942*^9, 
  3.814268938216708*^9}},ExpressionUUID->"034a8b73-6909-425d-b53f-\
76eed01bb7e6"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "=", 
   RowBox[{
    UnderscriptBox["\[Sum]", "x"], 
    RowBox[{"A", 
     RowBox[{"(", "x", ")"}], "p", 
     RowBox[{"(", "x", ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81426894671795*^9, 
  3.814268999773583*^9}},ExpressionUUID->"fa044ac4-375d-4efe-bbd8-\
4f75c27a2d50"],

Cell["and ", "Text",
 CellChangeTimes->{{3.81428075207648*^9, 3.814280753379643*^9}, {
  3.814280881338271*^9, 
  3.814280881743615*^9}},ExpressionUUID->"22eef3e5-cfb1-41ba-b58a-\
2c05892456fc"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox[
    SubscriptBox["A", "i"],
    FontSize->18], 
   StyleBox["\[Congruent]",
    FontSize->18], 
   RowBox[{
    StyleBox["A",
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     StyleBox["(",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     SubscriptBox[
      StyleBox["x",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], "i"], 
     StyleBox[")",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814280758691568*^9, 3.814280777524835*^9}, {
  3.814280928274767*^9, 
  3.814280929036743*^9}},ExpressionUUID->"2cb99a40-cc16-4479-8d68-\
3ad5a5408791"],

Cell["\<\

Similar reasoning allows the calculation of the average of the square of the \
sample mean\
\>", "Text",
 CellChangeTimes->{{3.814269909746689*^9, 3.814269919123312*^9}, 
   3.8143519513805323`*^9},ExpressionUUID->"70ca3db4-d6b4-43c9-8a62-\
0a4da6ed8536"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    SuperscriptBox[
     OverscriptBox["A", "-"], "2"], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "N"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "N"], 
         SubscriptBox["A", "i"]}]}], ")"}], "2"], "\[RightAngleBracket]"}], 
    "=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"j", "=", "1"}], "N"], 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         SubscriptBox["A", "i"], 
         SubscriptBox["A", "j"]}], "\[RightAngleBracket]"}]}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{"\[LeftAngleBracket]", 
       SubsuperscriptBox["A", "i", "2"], "\[RightAngleBracket]"}]}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"N", "-", "1"}], "N"], 
     SuperscriptBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814269956135621*^9, 3.814270218057836*^9}, {
  3.8142712396047907`*^9, 
  3.814271243212772*^9}},ExpressionUUID->"a46c7281-2c4a-4a3b-82b9-\
21298957692e"],

Cell[BoxData[
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{"\[LeftAngleBracket]", 
      SuperscriptBox["A", "2"], "\[RightAngleBracket]"}]}], "+", 
    RowBox[{
     FractionBox[
      RowBox[{"N", "-", "1"}], "N"], 
     SuperscriptBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.814269956135621*^9, 3.814270218057836*^9}, {
  3.8142712396047907`*^9, 
  3.814271243212772*^9}},ExpressionUUID->"d4a478ad-077f-41cf-ac05-\
45a284edd5e8"],

Cell["where we have inserted the definition of the average, ", "Text",
 CellChangeTimes->{{3.81427024521957*^9, 3.814270271500704*^9}, {
  3.81427083876873*^9, 
  3.814270859152742*^9}},ExpressionUUID->"dc9b2615-1b37-4b39-a150-\
98a9da8e90ed"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   OverscriptBox["A", "-"], "=", 
   RowBox[{
    FractionBox["1", "N"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "N"], 
     SubscriptBox["A", "i"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81427086585495*^9, 
  3.814270893239571*^9}},ExpressionUUID->"cb3545fd-8777-42c2-838d-\
e3ac50b92dba"],

Cell[TextData[{
 "then used the linearity of the expectation value, \nand also exploited the \
fact that for independent samples ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "ed607c78-244b-4a97-ae92-2859d428bcfb"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "j"], TraditionalForm]],ExpressionUUID->
  "310b199f-4e2a-41b0-b0e9-6ca911868357"],
 ", the expectation value for i\[NotEqual]j factorizes as"
}], "Text",
 CellChangeTimes->{{3.81427024521957*^9, 3.814270271500704*^9}, {
   3.81427083876873*^9, 3.8142708561806803`*^9}, {3.814270905613338*^9, 
   3.814270907254724*^9}, 3.814270955473032*^9, 
   3.8144382719651003`*^9},ExpressionUUID->"76a6a178-a58c-49b6-bd02-\
c18b12f680ec"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    RowBox[{
     SubscriptBox["A", "i"], 
     SubscriptBox["A", "j"]}], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[LeftAngleBracket]", 
      SubscriptBox["A", "i"], "\[RightAngleBracket]"}], 
     RowBox[{"\[LeftAngleBracket]", 
      SubscriptBox["A", "j"], "\[RightAngleBracket]"}]}], "=", 
    SuperscriptBox[
     RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814270291072184*^9, 
  3.814270314877787*^9}},ExpressionUUID->"1c79ed8a-7794-4139-9011-\
b75665f55682"],

Cell[TextData[{
 "The statistical error ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    StyleBox["\[DifferenceDelta]",
     FontSlant->"Italic"], "A"], TraditionalForm]],ExpressionUUID->
  "837bd1d0-447e-46fb-969e-c269ddb3047d"],
 ", the root-mean-square deviation of the sample mean ",
 Cell[BoxData[
  OverscriptBox["A", "-"]], "DisplayFormula",
  CellChangeTimes->{{3.814268638288349*^9, 3.814268692514352*^9}, {
   3.814268825150936*^9, 3.814268927458157*^9}},ExpressionUUID->
  "fe35aade-e3af-4f77-806e-3a9490dc5d03"],
 " from the true expectation value \[LeftAngleBracket]A\[RightAngleBracket], \
\nis thus given by"
}], "Text",
 CellChangeTimes->{{3.814270366051835*^9, 3.8142704092632017`*^9}, 
   3.814522996186119*^9},ExpressionUUID->"4f10aaa8-3aee-47df-9a5a-\
8c23898ae3a6"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[DifferenceDelta]", "A", "2"], 
    RowBox[{"\[Congruent]", 
     RowBox[{"\[LeftAngleBracket]", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["A", "-"], "-", 
         RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}]}], 
        ")"}], "2"], "\[RightAngleBracket]"}]}]}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{"\[LeftAngleBracket]", 
       SubsuperscriptBox["A", "i", "2"], "\[RightAngleBracket]"}]}]}], "-", 
    RowBox[{
     FractionBox["1", "N"], 
     SuperscriptBox[
      RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[LeftAngleBracket]", 
        SuperscriptBox["A", "2"], "\[RightAngleBracket]"}], "-", 
       SuperscriptBox[
        RowBox[{"\[LeftAngleBracket]", "A", "\[RightAngleBracket]"}], "2"]}], 
      ")"}]}], "\[Congruent]", 
    RowBox[{
     FractionBox["1", "N"], 
     SubsuperscriptBox[
      StyleBox["\[Sigma]",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], "A", "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814270421574069*^9, 3.8142705985786133`*^9}, {
  3.814270662436345*^9, 
  3.814270694565572*^9}},ExpressionUUID->"742ddbab-4106-4c72-b723-\
671beca58f68"],

Cell[TextData[{
 "which is the basis of the central limit theorem.\n\nIt is, however, more \
useful to express the error in terms of the sampled ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["A", "i"], TraditionalForm]],ExpressionUUID->
  "7ceb9d0a-fff2-4e50-8b3e-14fdfe00a6e5"],
 " \[CloseCurlyQuote]s.\n",
 StyleBox["A na\[IDoubleDot]ve guess would be to estimate the variance as",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SuperscriptBox["A", "2"], "-"], "-", 
    SuperscriptBox[
     OverscriptBox["A", "-"], "2"]}], TraditionalForm]],ExpressionUUID->
  "831124f6-4461-412a-b307-dae869126a91"],
 ", where\n",
 StyleBox["(one is the average of the squared A and the other is square of \
the averaged A)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{
  3.814270616203464*^9, {3.8142710583001432`*^9, 3.814271141389786*^9}, {
   3.814273191124283*^9, 3.814273193551278*^9}, {3.814626930606638*^9, 
   3.81462697191615*^9}},ExpressionUUID->"e24319e6-eaed-448e-af8c-\
8c301c74496d"],

Cell[BoxData[
 FormBox[
  StyleBox[
   RowBox[{
    OverscriptBox[
     SuperscriptBox["A", "2"], "-"], "\[Congruent]", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      SubsuperscriptBox["A", "i", "2"]}]}]}],
   FontSize->18,
   FontColor->RGBColor[1, 0.5, 0]], TraditionalForm]], "DisplayFormula",
 CellChangeTimes->{{3.814271154075328*^9, 
  3.81427119509881*^9}},ExpressionUUID->"4601084f-5f58-4d57-833f-\
dcb95de905c6"],

Cell["If we calculate the expectation values via (6) we get ", "Text",
 CellChangeTimes->{{3.814271258751219*^9, 
  3.8142712786857643`*^9}},ExpressionUUID->"412b5f70-4a09-44c3-b568-\
00139ad11eb2"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[LeftAngleBracket]", 
    FormBox[
     RowBox[{
      OverscriptBox[
       SuperscriptBox["A", "2"], "-"], "-", 
      SuperscriptBox[
       OverscriptBox["A", "-"], "2"]}],
     TraditionalForm], "\[RightAngleBracket]"}], "=", 
   RowBox[{
    FractionBox[
     RowBox[{"N", "-", "1"}], "N"], 
    SubsuperscriptBox["\[Sigma]", "A", "2"]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8142712960786963`*^9, 
  3.814271322020833*^9}},ExpressionUUID->"02b1982a-714b-40b6-b07e-\
24dccbabc700"],

Cell["Thus the estimator is", "Text",
 CellChangeTimes->{{3.8142713332255573`*^9, 
  3.8142713404269*^9}},ExpressionUUID->"43ab4e9e-2efb-462d-a412-89ff65b7410b"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubsuperscriptBox["\[Sigma]", "A", "2"], "|", 
   RowBox[{
    RowBox[{"Var", "[", "A", "]"}], "\[TildeTilde]", 
    RowBox[{
     FractionBox["N", 
      RowBox[{"N", "-", "1"}]], 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SuperscriptBox["A", "2"], "-"], "-", 
       SuperscriptBox[
        OverscriptBox["A", "-"], "2"]}], ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814271360113627*^9, 3.814271411865304*^9}, {
  3.8144383304186373`*^9, 
  3.814438332030901*^9}},ExpressionUUID->"eb80da83-1a7d-405a-b20d-\
495c92e9293f"],

Cell["\<\
where the (small) fluctations in the right-hand side have been ignored. 
Eventually, taking the square root , we obtain the final result\
\>", "Text",
 CellChangeTimes->{{3.814271424149106*^9, 
  3.814271478801647*^9}},ExpressionUUID->"80d7fe3d-237e-4087-b22b-\
cb27d34a2513"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["\[DifferenceDelta]", "A"], 
   RowBox[{"=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"Var", "[", "A", "]"}], "N"]], "\[TildeTilde]", 
     SqrtBox[
      FractionBox[
       RowBox[{
        OverscriptBox[
         SuperscriptBox["A", "2"], "-"], "-", 
        SuperscriptBox[
         OverscriptBox["A", "-"], "2"]}], 
       RowBox[{"N", "-", "1"}]]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.8142715059611607`*^9, 
  3.814271564151773*^9}},ExpressionUUID->"fe7c185c-27b8-417a-9358-\
06c2890e3c80"],

Cell["\<\
The -1 in the denominator, which is irrelevant for large values of N, \
reflects the loss of one piece of information in calculating the sample mean.\
\
\>", "Text",
 CellChangeTimes->{{3.8142715814906816`*^9, 
  3.814271635244115*^9}},ExpressionUUID->"5c1a4235-3837-4fc8-aff6-\
aa4728d68502"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.814107902846446*^9, 3.814107974015263*^9}, {
   3.8141129805861073`*^9, 3.814112981032819*^9}, 3.814114993505452*^9, {
   3.814116371968992*^9, 3.8141164043223667`*^9}, {3.814116602479782*^9, 
   3.814116615597186*^9}, {3.8141180989163837`*^9, 3.814118099365183*^9}, {
   3.814118314195818*^9, 3.814118320653822*^9}, {3.814122437845886*^9, 
   3.8141224869159117`*^9}, {3.8141866292263308`*^9, 3.814186641285233*^9}, 
   3.815047981633004*^9},ExpressionUUID->"877ede12-46a5-47ca-a3a6-\
97445396ad33"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Monte Carlo Error Analysis", "Title",
 CellChangeTimes->{{3.815047987206999*^9, 3.815047993956612*^9}, 
   3.8150487085177603`*^9},ExpressionUUID->"c6f9e605-24fc-435f-8731-\
1e2f7e1a7db9"],

Cell[TextData[{
 "\nBtw, with standard integration we are almost there with just 25 'samples' \
... \nhow it comes that with Monte Carlo we need 50000 samples to get there ?\
\n",
 StyleBox["(Or how can a random array be better than a grid ?)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nNow the error for the midpoint method (Riemann sum) is "
}], "Text",
 CellChangeTimes->{{3.814107902846446*^9, 3.814107974015263*^9}, {
   3.8141129805861073`*^9, 3.814112981032819*^9}, 3.814114993505452*^9, {
   3.814116371968992*^9, 3.8141164043223667`*^9}, {3.814116602479782*^9, 
   3.814116615597186*^9}, {3.8141180989163837`*^9, 3.814118099365183*^9}, {
   3.814118314195818*^9, 3.814118320653822*^9}, {3.814122437845886*^9, 
   3.8141224869159117`*^9}, {3.8141866292263308`*^9, 
   3.814186641285233*^9}},ExpressionUUID->"a3815133-a716-411f-aced-\
163817abd42e"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[Proportional]", " ", 
   FractionBox[
    RowBox[{"b", "-", "a"}], 
    SuperscriptBox["N", "d"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814116648272985*^9, 3.814116666312887*^9}, {
  3.814116757031808*^9, 3.814116761264374*^9}, {3.814117882532934*^9, 
  3.814117884510717*^9}},ExpressionUUID->"b8daa8fc-f74d-45ea-97e8-\
045e56c679a7"],

Cell[TextData[{
 "this is because for a monotone function in a-b\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
sHa3PfbYYzaDy8h9Vl2vJzZ0t+kOAO/oUdedoPWoJzN16tT4Hr5r165m7969
rpcEIEVkcSB7hDGLP/zww6ZmzZo2hw8ePNj5esjiZHEgiOhR152g9agXZsOG
Debss8+2+/hy5cqZcYf/P3Dw4EHXywJQTGRxIHuErUf9oYceiufwm2++2fl6
Eocedf2hRx3wjh513Qlij3phvv32W3PH4Z/9cccdZ/fzZ5xxhnnyySddLwtA
MZDFgewRpu42uX44dl76+PHjna8n/9Ddpjt0twH+0KOuO0HtUS/K7t27zaWX
Xhrf15933nnmwQcfNAcOHHC9NACFIIsD2SMsWXzYsGE2g8sxcTn27Ho9ZHGy
OBB09KjrTpB71I9Gzltv06aNKVGiRPz+Z9ddd53Ztm2b66UByIcsDmSPoPeo
Sze6dKRLDq9du7aZMWOG8zUVNvSo62dxuoAB7+hR152g96gXx86dO80111wT
3+fL1KhRwx4r379/v+vlqTh06JB58803i/3r5Vqot99+O40rSr/33nvPfP31
1yl/npw3IdczIFjI4kD2CHJ32+bNm20PrOTwevXq2WvdXK/paEN3m+4A8I4e
dd0JQ496cb3//vvmpptuMhUqVIjv+eVeaI0aNbJd7B9++KHrJXom79/Pnz+/
2L/++++/N61atTI5OTlpXFX6yJ/zhg0beurnkz1Ly5Ytzb///e80rAxekcWB
7BHULC7Hcy6//HKbw5s0aWIWLVrkfE1kcbI4ECb0qOtOWHrUU/H555+be+65
x1x88cVHHCuXkcdGjx5t1q1b53qZccuXL7fXqtWtW9fMnj27wMenTJli+vTp
c8RjTz/9tKlVq5Y5/fTTzbnnnpv068p7D7/4xS/Mjh070rJuP+6++27z61//
2jRu3LjANQWffvqpufDCC+35Dl5Jz75cr4DgIIsD2SOIPeqypubNm9scLu9V
r1q1yvmaijP0qOsPPeqAd/So606YetS9ePfdd829995r6tSpUyCXly9f3r4/
Lvcyeemll5ys75VXXrG98I8//rg54YQTbAZNlJeXZ0455ZSk75fIOdzyfXTv
3r3Qry/XRFWvXt388MMP6mv3Sr5X+Z7nzp1rr/WX+7gmuuyyy2xW90O+X3kf
YuHChb6+DvSQxYHsEbTuNlmPnGslObxjx462b8b1moo7dLfpDt1tgD/0qOtO
GHvUvfroo4/MvHnzTI8ePcxpp51WIJtXrFjRdsFNnDjR5ObmZuSa40GDBpky
ZcrYnhs5jivnoSVq166dGTVqVNLPXbZsmV23dM4URt77/dnPfhaoe79dcMEF
dk8ke4zf/e53R1wH/9e//tUcf/zx9ti4X9OnTze/+tWv7Pn6cI8sDmSPIGVx
ed9XzjuTHH711Vfb97hdr4ksThYHwooedd0Jc4+6X3IsXI6Zy3HYSpUqFcjm
MnIO9e23325Wr17t6drlo6lSpYrtcE1Gfi5yvXthP5/hw4fbNb7++utFPseY
MWPsuflBIL1qsuabD///Lplrr73Wvlei4auvvjLHHnusWbJkicrXgz9kcSB7
BKVH/eGHH7bXgEkO79+/fyDWlOrQo66fxelRB7yjR113otCjruXll182jzzy
iOnWrZs544wzkmbzSy65xNxyyy1m5cqVvo/d7tu3z37NgQMHJv34rYd/PnI9
eGFkf/HjH//4qM8j18TJueDyfK7Jde7yPcvrYX5yHr5k55kzZ6o9n3Tkyv4L
7pHFgewRhO628ePH2wwuI+9Ju16Pn6G7TXcAeEePuu5EqUddm9wPTY6pSiZu
0aKFOfHEEwtkc8nC0tktx3nlPPBXX331qNdmy7l7J598sj0nPnZfdPlvOR89
UdOmTe11bclIP12pUqVsR7xkedlrVKtWzb5HkJ/siSSLu3wfeOjQofZ7LFeu
nP2e5dp4+W/p2IuR6/fkY0VdMyHdjfJ7Le+JyPcufTby/om8R5fMsGHDzDnn
nKP+/SB1ZHEge7jO4tJDIq+L8p61dMK4ztJk8WANAO/oUdedKPaop9OuXbts
5pZ7p0kelGubkx0/l45wuQ+Z7AHkmjn5/21+cp6U/Nq//OUvSZ9LsvqIESOS
fky61+Vz5bh57POlb12uPU92TrvkXnlPwTXpsJV7zsn90vOT9cv3JOeWJyP3
Gpfj3FdeeaW9X5l8DenClc8ZO3Zs0s+ZNm2a/Tj3N3OPLA5kD1c96nItuLz2
Sg6XzlbpCnWdo/0OPer6Q4864B096roT9R71dJNj4NKFLt0wN9xwg33tl/Os
82fzqlWrFvjcK664wpQuXdp88803BT4mrxPyeXfddVfS55WMLh+Xa99iZA8i
j02ePLnAr5djw3379vXxneo46aSTbG9bMrfddpt9L6Ewct5A5cqVbQdfzAMP
PGC/5/yddzFyLoB8XK5dhFtkcSB7uOhuk+wv79VKDpf3yhcsWOA8R2sM3W26
Q3cb4A896rqTTT3q6ZAsi8v9uoqTxc8++2zbKZ6MvOcknyfHdZORe4v/5Cc/
OeIx2XfI58i9tfOT8/QkCxXlnXfesb+uuNOsWbOU7pW2d+9euz7pjk9GzimU
4/fJxDrjhwwZcsTjXbt2Ncccc0yhx9JjnyddAHCLLA5kj0xncblOSe6DIjlc
zr+Sv/tdZ2iyeDCHLA74Q4+67mRzj7oX+c9Rj13/nH/kPmIdOnSwx7WlO02u
nUskfXlyDfc111yT9Hnk4/J1pk6dWuBjck2BXCue/77iknHlc5YuXVrgc+Sc
+aNl8XSL5eLZs2cn/bj8nspx82TkPjTyuXLeYyJ5P6Kw4+ziueeeI4sHBFkc
yB6Z7FGX1xbJ35LDL7/8cpvLXednzaFHXT+L06MOeEePuu7Qo1446W5bvHhx
kd1tMqeeeqq9L5rc+0z2BInnUBdG7l8unyvXSBdGjq/fcccdBR6XfrhkOf3c
c8+1nWjJ+t3POuss07Nnz2J81+kj70vIuuVecsnIfd3lPYZkLrzwQvvehXTW
xezcufOIa8Xl/IT8nnjiCftr5Jg/3CKLA9kjU91tcm+OBg0a2BzeuXNns3nz
ZufZOR1Dd5vuAPCOHnXdoUf9v3bs2GE7ueW858LuaSZZ99JLLzWjRo2yf5+/
++67np4r1ikm5/AVRo6tSw94fpJH5b7jck56jHS7FHVOu1xnPXLkSE9r1dKp
Uyd7PnlhPWrSsSPfQ7KeuyZNmphTTjnliMcmTZoUv1Zcjr/87ne/K/B50p0n
v1f0E7pHFgeyRyayuFwbJteFSQ6XvjbpTHGdmcni4RgA3tGjrjvZ3KMux2fv
Pfz9yzHtSpUqJc3ecl22XMcs1xb94x//UHvu3r1724yYLHfGyLratm2b9GNy
fvzw4cPtv+/Zs8dUqVLFdrMlu35bjtMXdk/vTJLr4+X3szCy35B1vvjiiwU+
JucAyMdi11PIsRA5nz322IABA+w90fKTx6tXr673TcAzsjiQPdLdoy7vs0pv
ieRwec/adVZO59Cjrj/0qAPe0aOuO9nUoy6ZVM5ZlmuPTzvttAK5W+4hJt0v
cq60nOf27bffpm0tF198sZ2iPPjgg4VeP/3xxx/b+5rXrVvX5vWirn2Se6RL
X/u+fft8rdmP2D3Ob7zxxkJ/jbyPINcB/P73vy/wMbl/mfSsn3feefbadznG
L78H8vOS89dj70vkJ7/Hcv91uEcWB7JHOrvb5LVAMriMXPvkOiune+hu0x26
2wB/6FHXnaj3qMs55HLsW85jy5+9y5cvb3te5P31v/71rxlbk9zDTM7VLuze
4TFvvPGGza9y7rwfcsxA7vPiUuwcerkvelGkj07u9aZB3reT9yCSXUeOzCOL
A9kjHVlczkGXa5Ekg8s5Vg8//LDznEwWD9+QxQF/6FHXnSj2qEt32T333GMu
uuiiAvlbjpOOHj3arFu3LuPrkuOzcq35li1b7FqKk/8lQ/fv39/zc8q9vuRY
86ZNmzx/Da/kWLh8v9J9J+cayP3KCrtWPEbeF5L7s7/33nu+n1+eU+67hmAg
iwPZQ7tHXV6z5e+Q2L3D58+f7zwjZ2roUdfP4vSoA97Ro647UepRl35x6W9J
vL+3XJPdqFEje73xhx9+6Gxt8nssa5H38m+++WZz3XXXFevz5Bp1OXe+ON3s
ycj53nIuuwtyDFx+BnL8X85LKO770HJs/GjnDBzNwYMHzZlnnmmvV0QwkMWB
7KHZ3Sb3ppTjwpLD5fVMXltc5+NMD91tugPAO3rUdScKPerSJy73mE48/i3X
FUsOlfuSBYXcP1syafv27Qvcb7wo0i8u14TLNdOpkHt+1ahRI+k9zjJB8rDs
m+R7lvcfikt+b+ScBjl/wKs+ffrY6+0RHGRxIHtoZXHpeInds+yqq65K2zXo
QR+yOFkcCAp61HUnzD3qq1evtvfUju3v5drgjh07FnmfsLAaP368eeCBB4r9
6+WadLkPmN9rzV2R6/zl/ZVU3rOIkXMXJYsjWMjiQPbQ6FGfMmVKvCv9hhtu
MFu3bnWeiV0MPer6Q4864B096roTxh516TST+33F9vVy32m5Bvz99993vbS0
knydiq+//jpNK8mMVL/fmLB/31FFFgeyh9/uNrk3RqwrfcKECc7zsMuhu013
6G4D/KFHXXfC1KMu50RIJ3iZMmXsfr5s2bJmzJgx9lxoAMFGFgeyh9csLvcT
7dGjh83gcs/OmTNnOs/CrocsThYHgoQedd0JQ4+6XCctr8ennnpqfC8v/eJ7
9+51vTQAxUQWB7KHlx71VatW2W4UyeFNmzY1zz77rPMcHIShR10/i9OjDnhH
j7ruBL1HXe6BJV1nsT38+eefb983BxAuZHEge6Ta3Sa5u3HjxjaHt2vXznaV
uc7AQRq623QHgHf0qOtOkHvU5bpfuT90bP8u9wH7/vvvXS8LgAdkcSB7pJLF
Z8yYEb82vGfPniY3N9d59g3akMXJ4kBQ0KOuO0HtUf/888/ttWKxe4Tfd999
rpcEwAeyOJA9itujLvcIiXWljxw5MuXz2rNh6FHXH3rUAe/oUdedoPaox3rS
y5UrZ5YvX+56OQB8IosD2eNo3W1yfzK5BloyeK1atez9y1xn3qAO3W26Q3cb
4A896roTxB71hQsX2v26dLUFbW0AvCGLA9mjqCy+YcMG07lzZ5vDGzRoYHu0
XOfdIA9ZnCwOBAk96roTtB71Tz/91Jx44ommRIkS9jUIQDSQxYHsUViP+rJl
y0yLFi1sDpd/ynlvrrNu0Icedf0sTo864B096roTtB71bt262b16v379XC8F
gCKyOJA9knW3zZ8/31xyySU2h8txcTk+7jrnhmXobtMdAN7Ro647QepRl/PZ
ZJ9+8sknmwMHDrheDgBFZHEge+TP4nI9uFwXLjlcjvHK9eKu822YhixOFgeC
gh513QlSj3rfvn3tPn3ixImulwJAGVkcyB6JPeq33HJL/J5l0pvuOteGbehR
1x961AHv6FHXnSD1qJ900kl2n/7qq6+6XgoAZWRxIHtId5tcCy7XnUkGl3uU
zpw503muDePQ3aY7dLcB/tCjrjtB6VF/8cUX7R799NNPd70UAGlAFgeyx333
3Wfzt+Tw5s2bm0WLFjnPtGEdsjhZHAgSetR1Jyg96rNnz7Z7dNmvA4gesjjC
Qq6FW7dunR15n5jHU3t8zJgxplKlSubiiy+2x8Ul/0hvm4xc9xzLmHIeO48f
/fFp06aZa665xnmGjcrQow74s3r1anNrz55mfPfudvL69InnyseHDuXxFB8P
So+69LrIHl2uGQcQPWRxBNkbb7xh77clGSgvL8/k5OTYkT1HLBvx+NEf7927
t6latar5+c9/bm6++WabfZ588kl7HFLm6aefjmciHi/+488++6zzDBulAeCd
nE89/3AWn9Wvn53No0bFs+bKAQN4PMXH35g+PRAdFuPGjbN79FsPrwlA9JDF
EWSyt+A8au8j90GR+5TFrg0fPHiwzZKuM1dU5rnnnnO+higNAO/oUdede0aO
NG+//bbrH6sZPny43aNPnjzZ9VIApAFZHEFGFvc+8vsm14RLDm/RooXNjf37
9zePP/6488wVhZHj4nfddZfzdURpgnAMCgird955x+SMH+88w0ZlgtLdNmrU
KLtHl+t4AEQPWRxB9s033zjPtGGc6dOnmzp16tgcLteGx+5jJvcQf/TRR51n
rijMAw88YC688ELn64jK0N0G+EOPuu7c2b+/+cc//uH6x2rf85U9+siRI10v
BUAakMURdH/729+cZ9swjVwPHrtvuFxflvixQYMGmRkzZjjPXVEYsrjukMUB
f+hR152/T5oUiO62WbNm2T16jx49XC8FQBqQxRF0ZPHiTeK14fXr17f3Qcn/
a+R4+bx585znriiMnF9w+eWXO19HVIYedcCfrVu3mrVDhjjPsFGZDx57zPWP
1JIuVtmjN2rUyPVSAKQBWRxBltijzhQ+ideGt2rVqtDfM8mPTz31lPPcFZWh
u013AHgn56j/lePiahOUHvX333/f7tFPOukk10sBkAZkcQQZ3W1HH7nPdeza
cDmHbdOmTYX+WrlPKT3qekMW1x0A3tGjrjtB6VEX5cuXt/v09957z/VSACgj
iyPIyOJFz0033RS/NnzMmDFH/fX0qOsNPer6E4RjUEBY0aOuO0HpURdNmza1
+/TFixe7XgoAZWRxBBk96sknJyfHtG/f3mbwBg0aJL02PNnQo643dLfpDt1t
gD/0qOtOUHrUxejRo+0+XfpYAUQLWRxBR3fbkTNnzhzbzSY5XLrDVqxYUezP
pUddb8jiukMWB/yhR113gtKjLuR6KNmny/FxANFCFkfQkcX/M9KRm3hO+rBh
w0xeXl5KX4Medb2hR1136FEH/KFHXXeC0qMuPvnkE7tPP+6447iWB4gYsjiC
jB71/4ycky5/VmP3K5s5c6anr0OPuu7Q3aY7ALyjR113gtKjHnPBBRfYvXpu
bq7rpQBQRBZHkNHd9oJ57LHH7DXhksPlz6vkcq9fix513SGL6w4A7+hR150g
9aiLgQMH2r36xIkTXS8FgCKyOIIsm7O4nH8u56HHzkm/4YYbUj4nPf/Qo643
9KjrT5COQQFhQ4+67gSpR13IXkj26s2bN3e9FACKyOIIsmztUZdj33ItsmTw
2rVrm8mTJ6t8XXrU9YbuNt2huw3whx513QlSj7r48ssvTenSpc2xxx5r90YA
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
RERaPTTvt99+a/lEd1tvb28xODhYDA8Pl9fIIwcOHChn5s3P9+7dW/5so5rv
27evcXz8NfPJzbu7u4u+vr7G/ODBg43jh4aGzCc5X7t2bbFz585ytmfPnsax
0RdRHWve3HzHjh3FypUrG/N4X1x1fBxjPrl5T09P7d8LRUREpkNoXt1fq2Yy
Y8aMYubMmcWsWbPKPXL58uVllixZUs7Mm58vW7asmDdvXmO+YMGCxvHz5883
n+R86dKljVkk/vtWx8fPkMwnN1+4cGHj1/qcOXMax8ZzKtWx5s3N4//NuXPn
NubRgVkd/+3vAebNz+v+XigiIjIdQvO2b9/e0unq6mp8XeO92HWfj4iIiIiI
iEwc2kfcG1jt4uPj43WfDgAAALQ9uzgAAABMLbs4AAAATC27OAAAAEwtuzgA
AABMLbs4AAAATC27OAAAAEwtuzgAAABMLbs4AAAATC27OAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAMFX+CxDXppA=
     "], {{0, 495}, {995, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{598.8000000000001, Automatic},
   ImageSizeRaw->{995, 495},
   PlotRange->{{0, 995}, {0, 495}}]], "Input",ExpressionUUID->
  "cd9ace61-5679-4299-ac7d-9ef367b2c9c4"],
 "\n\nand more generally : "
}], "Text",
 CellChangeTimes->{{3.814117939930162*^9, 3.814117950523209*^9}, {
  3.814118327427064*^9, 3.8141183491851997`*^9}, {3.814119047291382*^9, 
  3.81411906486665*^9}},ExpressionUUID->"0c578683-82df-4d87-91a7-\
03c1eb5a2c14"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Er", "\[Proportional]", 
   RowBox[{"M", 
    FractionBox[
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"b", "-", "a"}], ")"}], "2"], 
     SuperscriptBox["n", "d"]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814118364638648*^9, 3.8141183909852943`*^9}, {
   3.8141185361970778`*^9, 3.814118549996686*^9}, 
   3.814122532164048*^9},ExpressionUUID->"48b9e1d9-1310-4188-955d-\
394601600ea9"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Error Estimates for the \
Monte Carlo Method]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nwhile for ",
 StyleBox["the error with Monte Carlo method",
  FontVariations->{"Underline"->True}],
 " \n\nwe first draw some introduction. We know the following relationship \
between our estimation and true value\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "^"], "=", 
    RowBox[{"\[Theta]", " ", "+", "error"}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "a23a0b30-b7e8-41d2-9fe0-018c266b23c6"],
 "\n\nWe saw just above the potentially for an unbiased estimator the error \
will be 0 because\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["\[Theta]", "^"], "-", "\[Theta]", " "}], TraditionalForm]],
  
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "7c336365-f2a8-4a2e-a09c-88c76e7bc4e0"],
 StyleBox["= 0\n\n",
  FontColor->RGBColor[1, 0.5, 0]],
 "That is, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["\[Theta]", "^"], TraditionalForm]],ExpressionUUID->
  "4b21681d-c64b-4374-b3ef-a0cff402ccac"],
 " is unbiased if its probability sampling distribution is \
\[OpenCurlyQuote]centered\[CloseCurlyQuote] at the true value of the \
parameter (outcome).\n\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
f+KxeuSI85/NtSZa1i+krnWo5qD6nerst0T7u6jevr7VJdQqaTYib2zDCGsL
9NgdWKtHiBTp9w9hm5ML3I7MQ892PTD31vtG331Nsgf2bzsBt5vHMce+PeyX
OCOp1nxYdcwlTPp5Lm5lVomPmXZyCqwX3oLuZ7b0V418fZ2u7/QR1Q2lmJhq
YjaXYn1dl3U46kI1MqhWG413r7W8v4oxxmqLLZLVNKFaI4aC6ojS+H63GWvu
lHtP/fYyDWgO0UE4b1CPJEPp16wRlTE4Mrj9l3Fn1gMssJ+KqwXVYs5lsNNq
rHWJbdz9SnNxb25vOLjkiH8s8j+D5RudEaeIO6sS8feEbrD/1BOvAhG7hqDV
yMOff4d9g2rfUo0fXdUxUgXlFNF198Jm5tlQL43lerC+Xp9zSbJ8JXVctzPG
WGNRv0dat6aaRZpC9Ttdrt9Q+/2KtY6E8dM7p3FzC3T+mxQmEfMm8zW4R57q
d1LfYnWi+vpUZ4l6curzeVyjqhJwapjNF3Fn5dONsOs4F7dLmvGalHhjjV0H
zH6gvN9dsccG2LfugQ3+8nk7aRauTLDF9xNOItVwLl20inKSaXwJNYCaYLTu
3utVvlg3OLUJ6x9hBbJrYUPIw6ba+jTvSdexXCuYMaYtYtwmjJNXNdwbSJ35
nV+jPs70HGr3d68PzWXQnAT19tT0erW68ju/RvmeVFdqRrgx9AOuQG70c1y9
7o2PxanwvfonDjtdg2/q19dBJUh6cQOnDh/D+XvuODhUEXdWICP8BTz3OsDK
egwOPH4Gr5CEOta9q1Ec7w2Xk0eEx7iER28/7wmqTI+E96NDGG/ZDmMOPYSX
VxASimp9PmoKcX/ejzAzs8cEx1ViDe11K2bglzZmsFnjAd3tWtZv1C+drpMM
BeUEbI8tFscUqsXeGAOE56mvuQTKUJ4nXb/Smo8+5d0yxoyTt7y2XHPWqVWl
ybiTUNxMcyoN1T6imLO/f75YV0QTe1i/pqm4k1D9furptFED+bjaI8XHoJvY
OrQTzH5egN3rlmDVmqUYa2cJsx/nwCVVPkcmzYH39kkYt9Md77NSEXRyLn4y
M/sy7tzjAMt6404p0m9vwLgFJxGQmomUp0cwvutPmO78VpwzlcWdB+uOO0tf
Yl03C5jNcYZiF1Gl5ybYm9lg5t2cLx6pOi8NaQXc75T6QTbmmlCfPM+uEMcU
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
5qJrGMpbMQVf751qStxJ4oTvHo1hNP6osh9S36gadxKq4Uax5wm+1mXM4FF9
4hHBhjHe0/gcER7e7PsJldeJilZT/XeKXWnOU1O9RKl+Z3BwsEbuuzkOxJeK
8zbarGXKjBP1RbuVbvx7mJXtnaK+CU8eP27S/dH8MPWxpx5HHw1sP5aihq+q
xFx8Ic6m3FhDjLMZY4CTcO1IeyqNZX+kKsQa6I8b3pPdWNTDnK7HDW3sbw6q
6UI96xX7IxhrihR5XbIKE4glLqeqf+8UfQ/XRBeJtZa0VdtNV6i3R1+/fFgL
cbYp1D1gzJiEyOf8YrTc87E5qH7nLZfm1e+k2vCzIzSzJk71p2hMVDeq30k9
y/WRImYINfLzHdMcyt9zCNVcnoo+6aNk7xStN+/a8Uez71vcGyp8F6kugCGg
+p2bN2xs9L+jOHtVlCzODuFxhzGDkE85/I9z4ayHteHr09z8zj9ii9HKS7Xa
8E1B9/t/nuXV22ezKfQxv7O2C8J5lObNub8yawqqC/RUwzUh9EFde6eamt+p
TIS89yb1QtLXengKjcnvVOaaPM42hV5OjBkyulaka+65kYY3v9CcuJNqjtA6
uKbrcVBvUXX3l9b3uJP8GlCIRVqoZcqMi5hr7ZGj9zGSOlA+9DAl9TPUGXeS
nPJqdPLJF2udFWiwzkZzNTfuJOHyOJv6jZrCZ4gxQ7Qtpljse2GIedlNjTup
DxHV2aQ9kdqw612xmH+krnHQEOJOOtfRa2zoNQWZds0Il4h9uU3B//DMVTqv
q+64k1CtM5pboP5i6to/qW7qiDvF+xHGHuqz10PP42zGTBHVN6c5P8rJM0RN
iTtprzXtldXmua1a/piUt6YOhhB3knsfZLVMJTz2MxVQXXBaGzCFmuB+uZXi
d0NZf3VNxJ0KZ5NK9XYtWl1xJ6E4m/L26TXmnE/G9EO6fM6P6g0bqqbEncve
FKG7Dnp/JpbI9tu8akL/za8ZStxJpodLTKYOI2seygs2lb6Yk8IkddZ90GTc
ScRcBiEemyZ8N/UpB1udcacCxdc07nJPC8Z0i64F23rnYYOBr2e9j49HeFiY
yr/vmlEu5o7l6KjehpuaHp96UNKedkNA57V/f56Hg/E87rP62frk47qB7W1s
imJ5zU669leG6nd6PPLQ6DFQP7XfhOtB+m7GqzH3vDmofueD+/fVfr9Uo4V6
oVAurSn0v2JMHy15XSTOKyhb4zFWNLbSda+vGuYbm4Nee8o7MqXX/r38tffT
8WvP9Nc7eW9eQ8wzb6wzSaXiXk59QNeD9LprqseFvqA+fBNCZfmtkYX6EWcz
ZiqoTrEu5/zUyfflS9y6ebPB36P8Qrre1Yc5N8Vc8+a3TZ9rpl5FVy/rZ/3O
uohzzY9zxdoxjH2N9h8vNJH6B9TTi74PdaH15t07d2ntePzzZOvu8yOLdBr3
U/3OrZs2a/Qx/kqWrbtTnitjTPO8c2S14ammmzFQJb+T9hFR/RDqpaYvFLm1
T5pYo9CQ8jtrM8W5XtYwuhaj/Y36us9anaKorprw3a+vl6ym8zuVyROuB6nH
BdUzTtLRvi5N5Hcq86ZQ1l9zbIhEnAdljGmGuI71UHu1g7RBlbiT4k3KKdC3
nuEUc9L5J60JtQQMNe5Ux1wvMz7Uh93yRZ6uD0MrFgjXXtTHrD66iDsVqOYb
nSdu1zMfqynaijsJ5diODC4U+1tE8bo7Y2on9sV4kiv2XzcmDcWdNIbS+rq+
1vGh+KuNEIc1tg+1ocadhOJsOq8Zch0Fpl50XXguybjzC0lJlaxOVFxR/XGO
LuNO4pMjW3enPffa3IejzbhTgXrJ0XuyL66E12EYU5MK+RzTUiPMnaov7hR7
Ez/S79qkNM79ElCI4UGFjRrzDDnuJF7ZxpXvwZourEC27tzYay9DdCi+FAMD
Gq4ppuu4k9C1urgPR4g/X2RrZz+gLuJOQtcBNN9OteZ1lWPAmDGhmIZ6Fhrj
tVxdcadYk1mIawyhXjDVyqYxb3kDa2+1GXrcSa7K97fp83UB0zyqbaOufgr6
TMxhFWI4VWo66EPcqSDWfhOuCyg3W9O1PnUVdxKq57w9tlg8b5jC3DtjmrI6
qkjMEy8z0txpqt8ZFhr6xc+oDzqNk3c/GM46riIP4uh71fIgqH5nUGCgho9K
8ygPgnoFFuppHgTTrAR5fS19zYNRp79TysSeZaqQSCQar9/ZGNR3kuZp6bsa
psE1Cqrfef/ePY3dvyqovzvlZv3sX4BMI6j5wpg20TUbXV9/NKHvTj7Fb09z
xfUsQ/NeHi+76SCfX5fmREjQySffJOo2si/NEt77hvbYGIt/FWKZ+wZ0LazM
eXkNoi0xxXq3T1OdKOeD+tpRHnp99a4YY589pb3S7sZfl4Tqd9KaM6G4pfPL
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
kftOS0vDk5hkbBPe18EPY/Af8s8yva82t2MwTvh8L3kRJ77vx4IScCUiEQ+j
ZZ+JV8JnIyA+BelphvdZj0pMxbnQRMx49g6d7wif5atvxOf9by7RGOgeg9nC
z9cKn+l9Ae/F33N9nSx+vmkM8Beed1zaR10PX82Sk5PT4GtE41xr17f4n8K4
di40QefvmaZuKalp2OP/Ht85R4lj2eO3mh3Hvr75+/mh9089dP46aPsWGRmJ
Lh06avxxYoTzmLswZh0RztkLveIwSPh+t7gljHPXosRx7rsLsvGO3v//T/j+
0xhIf/9aGCN0/Ro19hYmxCk3I5PFzzONbT2E8/S/05hO49ul15+e63+5HoX/
J/z8H8Kt34OYRj1GZmamrocvg0ZzSD91667SzaKjHVradkWrDl3RWvj/bTp2
g3WnbrDt3A1dunbHjyrejyHdOnXpJnvOws28gx0shefcVnjO7YXn3FH4u252
2j2ebsK1cdeOnXT+umj7povnTe9t566yzze93/S+0/tPn30z4bNAn4mW8pux
fPbpeXQVvsv02bbpLPt+0/ecvvv0+afvvuJ5d/t5sK6Hr2ZZsmhRg69Hu06y
77m9Hrw3mrzR86P3mcZxnXzuutqhs20Hnb8OWn/d7bqhk42t7o+D3gM72ZhH
33/FzRg/9/ScugvP0+6r59qY+xg1fLiuhy/GGGOMMcYYY4wxxhhjjDHGGGOM
MaanHrk/RHW16dSLoD2a9JwZY8bL4+EjSKXGU/NHFabYk54xZnjuuN3GiKHD
sNLREatXrtTK7cC+/SgtLUVRURH27Nqttcel5zh21Ghcuvi3rl92xpgGPfbw
wNDf/6nVcW3v7t3imEZj24F9+7T2uKtWrMCEsWNx+uRJXb/sjDGmEqrjEBwc
jOCgIK3cnns+w9bNW7Bx/Xp4PffS2uPSc6S6FYwx40d92rU5rtFYRmPati1b
xTFOa+OacEtLTdX1y80YY3otNjYWSUlJuj4MxhhTm+TkZHFsY4wxxhhjjDHG
GGOMMcYYY4wxxhhjjDHGGGOMMcYMQxUK3gXA81Us8k2njCdjzJhVFSD+1TP4
xuWChzXGGNMT+RE4t2oVjnu+RtSFJRi27RkKdX1MjDHWDEUhF7Bq9TE8fROJ
K/PGYoNPnq4PiTHGWGU8LkwciNl3MsT5gJqkixjXdQ7cinh2gDFmmKpjLmHS
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
     "], {{0, 191}, {670, 0}}, {0, 
     255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{670, 191},
   PlotRange->{{0, 670}, {0, 191}}]], "Input",ExpressionUUID->
  "5b752736-2c07-4467-9610-d5bca42dcf99"]
}], "Text",
 CellChangeTimes->{{3.8141166884988127`*^9, 3.8141166990729837`*^9}, {
   3.814117995278455*^9, 3.814117999735364*^9}, {3.814119754916725*^9, 
   3.814119759101337*^9}, {3.814119980184719*^9, 3.814120037087371*^9}, {
   3.814120111021035*^9, 3.814120166937752*^9}, {3.8141205595646763`*^9, 
   3.814120589307219*^9}, {3.814123195332027*^9, 3.814123313116558*^9}, {
   3.814123349948543*^9, 3.814123363114396*^9}, {3.8141246423725157`*^9, 
   3.81412465544621*^9}, {3.814126448674155*^9, 3.814126449080101*^9}, {
   3.8141796144531307`*^9, 3.81417962193834*^9}, {3.8141848602947598`*^9, 
   3.81418486272503*^9}, {3.814190419606327*^9, 3.814190433754027*^9}, 
   3.8141944462530813`*^9, {3.8143785347610693`*^9, 3.814378548531061*^9}, 
   3.814794721455248*^9, {3.814877759105789*^9, 3.814877761714795*^9}, {
   3.814877812025584*^9, 3.81487806508539*^9}, {3.814878230710623*^9, 
   3.814878248193658*^9}, {3.814878289235183*^9, 3.814878289435746*^9}, {
   3.814878402901408*^9, 
   3.814878406667562*^9}},ExpressionUUID->"d6f97f75-8b7f-4150-8a81-\
0f25323dea35"],

Cell[TextData[{
 "\nWe have the following entities for our setup :\n\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "9879e550-58f9-4787-bb18-4ddbda1e0b90"],
 "   is the simulated (or the estimated) output  ",
 StyleBox["(ie. the above ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["A", "-"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "78b9b196-f6bc-40d0-9709-31bb7c27f91f"],
 StyleBox[" ,  ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["F", "N"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "88b6d521-a2da-4463-a4d8-2748b5ed3f67"],
 StyleBox[" or the below ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "4a5c9449-e362-49df-8cb4-519fb92199d5"],
 StyleBox[")",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "2c55f191-f81a-4a9e-8c0b-2867a18a57a2"],
 " is the true expected output, ",
 StyleBox["(ie. the above \[LeftAngleBracket]A\[RightAngleBracket] or the \
below \[Mu])",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "4f1fc991-8e9f-4f53-8a50-41941672cb78"],
 "  is the generated sample where ",
 StyleBox["i=1 to N, ",
  FontSlant->"Italic"],
 StyleBox["(ie. replicates (",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["A", "i"], ")"}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "13d0fede-0f29-4856-97e6-6de975ee5eb5"],
 StyleBox[" ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["of the outcome of a certain ",
  FontSize->12,
  FontSlant->"Italic",
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "a980ce24-4fca-48d2-902b-bcb497c88156"],
 StyleBox["[x] )\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["x", "\[Rule]"], "i"], TraditionalForm]],ExpressionUUID->
  "be38f733-5e60-4f4d-a8cc-5724eca875ba"],
 StyleBox["  ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "is the configurator (also called the locator)\n",
 StyleBox["\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "Practically it is like this :\n\n",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "4bce39a7-181b-421e-add5-0734f2b3cb0e"],
 "   = ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"b", "-", "a"}], ")"}], 
   FractionBox["1", "n"], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"i", "=", "0"}], "n"], 
    RowBox[{"f", "[", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "*", 
       RowBox[{"(", 
        RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}]], "Input",
  ExpressionUUID->"583429d4-c7ab-4900-af78-f4dfdb6bc0de"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "5bb81618-dd5c-492d-b93b-fee7c34db8a4"],
 " =  ",
 Cell[BoxData[
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "2"], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"7", "x"}], "-", 
      RowBox[{"8.5", 
       SuperscriptBox["x", "2"]}], "+", 
      RowBox[{"3", 
       SuperscriptBox["x", "3"]}]}], ")"}], 
    RowBox[{"\[DifferentialD]", "x"}]}]}]], "Input",ExpressionUUID->
  "14f8b956-6638-4bb3-bb9a-7f5029befe3f"],
 "\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], "  ", "="}], TraditionalForm]],ExpressionUUID->
  "b5457ba1-2712-4bc2-ad51-45ed04baec55"],
 "  ",
 Cell[BoxData[
  RowBox[{"f", "[", 
   RowBox[{"a", "+", 
    RowBox[{
     RowBox[{"RandomReal", "[", "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]], "Input",ExpressionUUID->
  "692820e2-3e19-4a42-8d4c-0b56b8e28358"],
 "\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["x", "\[Rule]"], "i"], TraditionalForm]],ExpressionUUID->
  "eda04716-4165-4bb4-b2de-5dbdeca37d2e"],
 "  =  ",
 Cell[BoxData[
  RowBox[{"RandomReal", "[", "]"}]], "Input",ExpressionUUID->
  "95c96451-4415-4fca-a92b-cc3479159950"],
 "\n\nAnd it works like this.. \nevery time we run the Mathematica code for \
",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "6d81e650-d39f-4ab4-9731-c1a941641550"],
 " we\[CloseCurlyQuote]ll get different results (just go above and run and \
re-run the code :).\nNow the fluctuating quantity from the result will \
deviate a certain ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "x"], TraditionalForm]],ExpressionUUID->
  "dd61ead8-891c-4dd3-8e3a-4d5e9ee2d31f"],
 " from the true expected result and that is the Monte Carlo Error.\nWith \
other words, according to the Central Limit Theorem, ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "f3d8ea99-bb9b-461a-be7a-15dbc29a5663"],
 " is normally distributed around ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "7e1a3517-4148-4596-a00c-abab38358d24"],
 " with a standard deviation ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "x"], TraditionalForm]],ExpressionUUID->
  "72db40f1-7cca-4b04-9f16-51bf409de595"],
 " .\nOr also that, the rate of convergence of our simulation for N is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DifferenceDelta]", "x"], TraditionalForm]],ExpressionUUID->
  "9f1c18ee-5920-4832-886b-2b7ec58a72ee"],
 " .\n\n\nThis can be seen also as "
}], "Text",
 CellChangeTimes->{{3.8141831123368692`*^9, 3.814183158393643*^9}, {
   3.814183192704487*^9, 3.814183434535427*^9}, {3.814183485250523*^9, 
   3.814183607293161*^9}, 3.814184886552473*^9, {3.814189098433846*^9, 
   3.814189098670405*^9}, {3.81418985509944*^9, 3.814189919336681*^9}, {
   3.814190731453644*^9, 3.814190732083544*^9}, {3.8141953889333563`*^9, 
   3.814195455243424*^9}, {3.814195568434885*^9, 3.8141955966317387`*^9}, {
   3.814195750577527*^9, 3.814195751364856*^9}, {3.814196309814281*^9, 
   3.8141964461447144`*^9}, {3.8142730805348997`*^9, 3.814273088344681*^9}, {
   3.814273803462503*^9, 3.8142738483490763`*^9}, {3.814274980305011*^9, 
   3.81427499582932*^9}, {3.814275031695593*^9, 3.814275032593816*^9}, {
   3.814275432958584*^9, 3.814275456086883*^9}, {3.8142755582836323`*^9, 
   3.8142755602865753`*^9}, {3.814276003290558*^9, 3.814276029276594*^9}, {
   3.8142760883170347`*^9, 3.814276138400725*^9}, {3.814276346204029*^9, 
   3.814276347652709*^9}, {3.814276393505735*^9, 3.81427642278157*^9}, {
   3.814276731375695*^9, 3.81427673137586*^9}, {3.814276781839684*^9, 
   3.814276783365795*^9}, {3.814276915465843*^9, 3.814276919335623*^9}, {
   3.814277364497056*^9, 3.814277512751988*^9}, {3.814277546602273*^9, 
   3.814277587631134*^9}, {3.8142776439052763`*^9, 3.8142776507884073`*^9}, {
   3.8142777015472*^9, 3.814277763669422*^9}, {3.8142778709988337`*^9, 
   3.814278252507649*^9}, {3.81427839101497*^9, 3.81427842125661*^9}, {
   3.8142785277950993`*^9, 3.814278529616322*^9}, {3.81427885879426*^9, 
   3.814278910607727*^9}, {3.814278944178752*^9, 3.81427894660929*^9}, 
   3.8142803114576406`*^9, {3.8142803903044157`*^9, 3.814280390306798*^9}, {
   3.814280460928769*^9, 3.814280487948264*^9}, {3.81435644270477*^9, 
   3.8143564453382263`*^9}, {3.814359166846529*^9, 3.81435926244785*^9}, {
   3.814374718197102*^9, 3.814374752954671*^9}, {3.814377727551709*^9, 
   3.814377741972364*^9}, 3.814437740425527*^9, {3.8144402100481377`*^9, 
   3.81444021632547*^9}, 3.814440272645624*^9, 3.814441087929476*^9, {
   3.814452986956517*^9, 3.814452994005756*^9}, 3.814784060961364*^9, 
   3.814876834696232*^9, {3.8148769740869827`*^9, 3.814877024958453*^9}, {
   3.814877056166924*^9, 3.8148770574704533`*^9}, {3.8148777514602013`*^9, 
   3.8148777539527884`*^9}, {3.814878044568267*^9, 3.814878048122024*^9}, {
   3.814878097197523*^9, 3.814878185710849*^9}, {3.814878228555201*^9, 
   3.8148782464631233`*^9}},ExpressionUUID->"44a96503-23f5-4c81-bb2c-\
a89559c1bb62"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox[
     StyleBox["x",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], "-"], "1"], 
   StyleBox["=",
    FontSize->18], 
   StyleBox[
    RowBox[{"f", 
     RowBox[{"(", 
      OverscriptBox["x", "\[Rule]"], ")"}]}],
    FontSize->18]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8144402787869463`*^9, 3.814440310713295*^9}, {
   3.814441184049625*^9, 3.8144411963373613`*^9}, {3.8144412923441563`*^9, 
   3.814441295739254*^9}, 
   3.814876835756935*^9},ExpressionUUID->"10cb2dc8-596c-4dbb-a2da-\
f584cd944be6"],

Cell[TextData[{
 "when ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "\[Rule]"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0e9d3fae-2ee7-4389-96ad-cd01c4a9968d"],
 " is distributed uniformly, the estimator (called ",
 StyleBox["primary estimator",
  FontVariations->{"Underline"->True}],
 ") is unbiased so that its expected value is the integral."
}], "Text",
 CellChangeTimes->{{3.814440327429595*^9, 3.814440378956696*^9}, {
  3.814440572411868*^9, 
  3.814440577901144*^9}},ExpressionUUID->"072c55d0-27f1-49bb-bab2-\
50bb3f031b2f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    SubscriptBox[
     OverscriptBox[
      StyleBox["x",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], "-"], "1"], "]"}], "=", "I"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8144403935812483`*^9, 3.814440435970826*^9}, 
   3.814441214388258*^9},ExpressionUUID->"70b025ab-3598-4bfc-a41b-\
1b0b681de6a9"],

Cell[TextData[{
 "Now the function ",
 Cell[BoxData[
  FormBox[
   RowBox[{"f", "(", 
    OverscriptBox["x", "\[Rule]"], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "79899d59-321f-4e95-8531-8f122f4e5571"],
 " is itself a random variable with an arbitrary distribution and typically a \
large variance.\nA more practical MC estimator is obtained by averaging a \
fixed number of (say N) primary estimates"
}], "Text",
 CellChangeTimes->{{3.8144404526407633`*^9, 3.814440553646164*^9}, {
  3.814440622834502*^9, 
  3.814440656132099*^9}},ExpressionUUID->"6b89f3e7-9d03-4dde-9a17-\
d11150b4185d"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Mu]", "-"], "N"], "=", 
   RowBox[{"\[Sum]", 
    RowBox[{"f", 
     RowBox[{
      RowBox[{"(", 
       SubscriptBox[
        OverscriptBox["X", "-"], "i"], ")"}], "/", "N"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81444068862294*^9, 3.814440737649642*^9}, 
   3.814441229750333*^9},ExpressionUUID->"16b7ace2-9f57-4f66-9b0b-\
4cfc0106653d"],

Cell[TextData[{
 "Such ",
 StyleBox["secondary estimators",
  FontVariations->{"Underline"->True}],
 " are known to be unbiased and approach a Gaussian distribution as N\[Rule]\
\[Infinity] and if the primary estimator has finite var.\n\nSo, when we refer \
to the estimation of a ",
 StyleBox["primary estimator ",
  FontColor->RGBColor[1, 0.5, 0]],
 "we use",
 StyleBox[" lowercase ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "1e66c404-213b-4c74-95fd-41dfe671c543"],
 "\nwhen we refer to the estimation of a ",
 StyleBox["secondary estimator ",
  FontColor->RGBColor[1, 0.5, 0]],
 "we use",
 StyleBox[" uppercase ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "a596be88-2e0c-41a3-bd61-202e76534244"],
 ", so the single outcome ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "171d496f-9ea7-4359-8dd6-c64937c3c5fb"],
 "=",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "75aa8dd8-6816-475c-b343-0e6550309335"]
}], "Text",
 CellChangeTimes->{{3.814440746671064*^9, 3.814440802068143*^9}, {
   3.8144416700715523`*^9, 3.814441782956849*^9}, {3.814441976458047*^9, 
   3.814441989820063*^9}, {3.81444206684111*^9, 3.814442067130866*^9}, {
   3.814442305561843*^9, 3.814442309925951*^9}, {3.8144423525473013`*^9, 
   3.814442353310803*^9}, 
   3.8144503424854193`*^9},ExpressionUUID->"51a178ad-3228-48c2-a28a-\
a637f24c0090"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    OverscriptBox["X", "-"], "|", 
    SubscriptBox[
     OverscriptBox["\[Mu]", "-"], "N"]}], "=", 
   RowBox[{
    RowBox[{
     StyleBox[
      FractionBox["1", "N"],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      RowBox[{
       StyleBox["(",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox[
         OverscriptBox["x", "-"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        StyleBox["|",
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        SubscriptBox[
         StyleBox["X",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], "i"]}], ")"}]}]}], "=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["1", "n"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "n"], 
         SubscriptBox["x", "i"]}]}], ")"}]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814441850027419*^9, 3.8144419024980793`*^9}, 
   3.814441939465897*^9, {3.814442000486188*^9, 3.8144420080451307`*^9}, {
   3.8144420442721653`*^9, 3.814442049378572*^9}, {3.814442108215904*^9, 
   3.814442147951009*^9}, {3.81444222751257*^9, 
   3.814442279376911*^9}},ExpressionUUID->"af86503c-da67-42a2-8405-\
b6d42236e4dd"],

Cell[TextData[{
 "\n\nNow, let\[CloseCurlyQuote]s see the ",
 StyleBox["derivation",
  FontVariations->{"Underline"->True}],
 " for the above.\nBelow we are subtracting the true expected value from the \
mean of the simulation to see how accurate is ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "2fa4777c-aa60-4b89-b34b-ac0fbb9bd0e9"],
 " as an estimate of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "16da0758-ac17-4476-8851-21588e353984"]
}], "Text",
 CellChangeTimes->{{3.8141831123368692`*^9, 3.814183158393643*^9}, {
   3.814183192704487*^9, 3.814183434535427*^9}, {3.814183485250523*^9, 
   3.814183607293161*^9}, 3.814184886552473*^9, {3.814189098433846*^9, 
   3.814189098670405*^9}, {3.81418985509944*^9, 3.814189919336681*^9}, {
   3.814190731453644*^9, 3.814190732083544*^9}, {3.8141953889333563`*^9, 
   3.814195455243424*^9}, {3.814195568434885*^9, 3.8141955966317387`*^9}, {
   3.814195750577527*^9, 3.814195751364856*^9}, {3.814196309814281*^9, 
   3.8141964461447144`*^9}, {3.8142730805348997`*^9, 3.814273088344681*^9}, {
   3.814273803462503*^9, 3.8142738483490763`*^9}, {3.814274980305011*^9, 
   3.81427499582932*^9}, {3.814275031695593*^9, 3.814275032593816*^9}, {
   3.814275432958584*^9, 3.814275456086883*^9}, {3.8142755582836323`*^9, 
   3.8142755602865753`*^9}, {3.814276003290558*^9, 3.814276029276594*^9}, {
   3.8142760883170347`*^9, 3.814276138400725*^9}, {3.814276346204029*^9, 
   3.814276347652709*^9}, {3.814276393505735*^9, 3.81427642278157*^9}, {
   3.814276731375695*^9, 3.81427673137586*^9}, {3.814276781839684*^9, 
   3.814276783365795*^9}, {3.814276915465843*^9, 3.814276919335623*^9}, {
   3.814277364497056*^9, 3.814277512751988*^9}, {3.814277546602273*^9, 
   3.814277587631134*^9}, {3.8142776439052763`*^9, 3.8142776507884073`*^9}, {
   3.8142777015472*^9, 3.814277763669422*^9}, {3.8142778709988337`*^9, 
   3.814278252507649*^9}, {3.81427839101497*^9, 3.81427842125661*^9}, {
   3.8142785277950993`*^9, 3.814278529616322*^9}, {3.81427885879426*^9, 
   3.814278910607727*^9}, {3.814278944178752*^9, 3.81427894660929*^9}, 
   3.8142803114576406`*^9, {3.8142803903044157`*^9, 3.814280390306798*^9}, {
   3.814280460928769*^9, 3.814280487948264*^9}, {3.81435644270477*^9, 
   3.8143564453382263`*^9}, {3.814359166846529*^9, 3.81435926244785*^9}, {
   3.814374718197102*^9, 3.814374752954671*^9}, {3.814377727551709*^9, 
   3.814377741972364*^9}, 3.814437740425527*^9, {3.8144402100481377`*^9, 
   3.81444021632547*^9}, {3.814440851455989*^9, 3.814440860612979*^9}, {
   3.814441279629719*^9, 3.814441279855801*^9}, 
   3.8144425256595707`*^9},ExpressionUUID->"c7cd07a2-9e7d-4dd8-96d6-\
daf05b79437f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "[", 
      OverscriptBox["X", "-"], "]"}], "-", 
     SubscriptBox["\[Mu]", "x"]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       StyleBox["E",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox["[",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox[
         FractionBox["1", "N"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        RowBox[{
         StyleBox[
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "N"],
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], 
         SubscriptBox["X", "i"]}]}], 
       StyleBox["]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]]}], 
      StyleBox["-",
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      StyleBox[
       SubscriptBox["\[Mu]", "x"],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]]}], "=", 
     RowBox[{
      RowBox[{
       StyleBox[
        FractionBox["1", "N"],
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       RowBox[{
        StyleBox[
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], "N"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], 
        RowBox[{
         StyleBox["E",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], 
         StyleBox["[",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]], 
         SubscriptBox["X", "i"], 
         StyleBox["]",
          FontSize->18,
          FontColor->RGBColor[1, 0.5, 0]]}]}]}], "-", 
      SubscriptBox["\[Mu]", "x"]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 InitializationCell->True,
 CellChangeTimes->{{3.814182114932908*^9, 3.814182116170971*^9}, {
  3.814182325196604*^9, 3.814182348439889*^9}, {3.814182899134029*^9, 
  3.814183085875699*^9}, {3.81427673481181*^9, 3.8142767370619802`*^9}, {
  3.81444156434693*^9, 
  3.814441574469613*^9}},ExpressionUUID->"f2639d95-4267-4e40-bfb7-\
8530957e948e"],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "020ff8e8-1732-4669-a5e9-58cd39f377a1"],
 " occurs from random sampling, then the expectation of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "i"], TraditionalForm]],ExpressionUUID->
  "fbbc98a2-ef90-4faf-ade4-de14659a463d"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     OverscriptBox["x", "-"], ")"}], " "}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "c64fee0a-258b-47fa-826c-9ba8e6f16f80"],
 " equals the true expected value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "61e6c545-d6c7-4d80-8522-616a36930625"],
 " , thus we have"
}], "Text",
 CellChangeTimes->{{3.814183734552465*^9, 3.814183821130845*^9}, {
   3.814186824436303*^9, 3.814186874992674*^9}, {3.814189460742218*^9, 
   3.814189626701838*^9}, {3.8141899897853317`*^9, 3.814190045969306*^9}, {
   3.81419007764645*^9, 3.81419013939351*^9}, {3.814195513767933*^9, 
   3.8141955363091097`*^9}, {3.814269591997558*^9, 3.814269607207015*^9}, {
   3.8142755777023497`*^9, 3.814275625356145*^9}, {3.814277002603945*^9, 
   3.814277017770952*^9}, 
   3.814278561410912*^9},ExpressionUUID->"04d1c359-3700-43a6-8c71-\
e8307ff56370"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "N"], 
      SubscriptBox["N\[Mu]", "x"]}], "-", 
     SubscriptBox["\[Mu]", "x"]}], "=", "0"}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81418382997465*^9, 3.8141838904356318`*^9}, 
   3.814276752721945*^9, 
   3.8144415789063597`*^9},ExpressionUUID->"68bda62b-52cd-48af-8a15-\
0826fd67d33d"],

Cell[TextData[{
 "This result shows that on average, the error in using ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["x", "-"], TraditionalForm]],ExpressionUUID->
  "570096ba-64f5-4527-b187-5b219a667857"],
 " to approximate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "a6760e3c-b560-4348-a076-c2ee0d44fb30"],
 " is zero.\n",
 StyleBox["(when an estimator gives an expected error of zero, it is called \
an unbiased estimator)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nNext, to quantify the variability in ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],ExpressionUUID->
  "59dbf620-425e-4fac-9bf7-35bd63028351"],
 ", we use the variance of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], ")"}], TraditionalForm]],ExpressionUUID->
  "6651fbcd-a906-468b-b2a1-a14f3cfa862c"],
 ", \nnoting that the (variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "x"], TraditionalForm]],ExpressionUUID->
  "64ff579e-81fb-460b-be37-94987bda6e74"],
 ") is zero as it is a constant (because comes from the true expected value ?)"
}], "Text",
 CellChangeTimes->{{3.814183926282051*^9, 3.8141840335342293`*^9}, {
   3.81418600977932*^9, 3.814186013984929*^9}, {3.814189677912665*^9, 
   3.814189689252846*^9}, {3.814190236001219*^9, 3.8141903258686333`*^9}, 
   3.8141945950680933`*^9, 3.814269618071457*^9, {3.814275213314493*^9, 
   3.814275213852379*^9}, {3.814275349413499*^9, 3.814275371847691*^9}, {
   3.814278572799506*^9, 3.81427864936066*^9}, {3.814374288556306*^9, 
   3.814374293999864*^9}, {3.814441610136611*^9, 
   3.8144416156496763`*^9}},ExpressionUUID->"3140814e-1c43-48db-9811-\
4615869b1e16"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Var", "[", 
      OverscriptBox["x", "-"], "]"}], "-", 
     RowBox[{"Var", "[", 
      SubscriptBox["\[Mu]", "x"], "]"}]}], "=", 
    RowBox[{"Var", "[", 
     OverscriptBox["X", "-"], "]"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"Var", "[", 
     FractionBox[
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["X", "i"]}], "N"], "]"}], "=", 
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{"Var", "[", 
      RowBox[{
       StyleBox[
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"i", "=", "1"}], "N"],
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       SubscriptBox["X", "i"]}], "]"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814184348355433*^9, 3.814184477097062*^9}, {
  3.814276754904517*^9, 3.814276757152836*^9}, {3.814441582075881*^9, 
  3.814441589569682*^9}},ExpressionUUID->"716d3ef9-ddad-4986-8ef2-\
10ee56fb079a"],

Cell[TextData[{
 "Because the Monte Carlo method draws independent, random samples, \nthe \
variance of the sum of the samples ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], ","}], TraditionalForm]],ExpressionUUID->
  "d5daedd2-3a77-482d-8eed-ec1fb388b9b5"],
 " is the sum of their variances ",
 StyleBox["(see Variance algebra on part1)",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 ". \nTherefore"
}], "Text",
 CellChangeTimes->{{3.814184509976856*^9, 3.8141845307370577`*^9}, {
  3.814194663217942*^9, 3.81419467649337*^9}, {3.814194781370491*^9, 
  3.81419478726049*^9}, {3.814194822002548*^9, 
  3.814194839347452*^9}},ExpressionUUID->"b8c5eed3-d76c-469f-876d-\
1839d0e93e84"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     SubscriptBox["\[Mu]", "x"]}], "]"}], "=", 
   RowBox[{
    RowBox[{
     StyleBox[
      FractionBox["1", 
       SuperscriptBox["N", "2"]],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     StyleBox["[",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"],
       FontSize->18,
       FontColor->RGBColor[1, 0.5, 0]], 
      RowBox[{
       StyleBox["Var",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       StyleBox["[",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], 
       SubscriptBox["X", "i"], 
       StyleBox["]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]]}]}], 
     StyleBox["]",
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SuperscriptBox["N", "2"]], 
      SubsuperscriptBox["N\[Sigma]", "x", "2"]}], "=", 
     FractionBox[
      SubsuperscriptBox["\[Sigma]", "x", "2"], "N"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{
     SubscriptBox["\[Mu]", "x"], "\[Congruent]", 
     RowBox[{"E", "[", 
      OverscriptBox["X", "-"], "]"}]}], "=", 
    SubscriptBox["\[Mu]", "x"]}], ",", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Sigma]", "x", "2"], "\[Congruent]", 
     RowBox[{"E", "[", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["X", "-"], "-", 
         SubscriptBox["\[Mu]", "x"]}], ")"}], "2"], "]"}]}], "=", 
    RowBox[{
     FractionBox[
      SubsuperscriptBox["\[Sigma]", "x", "2"], "N"], "=", 
     RowBox[{
      SubscriptBox[
       StyleBox["\[Sigma]",
        FontSize->18,
        FontColor->RGBColor[1, 0.5, 0]], "x"], 
      FractionBox["1", 
       SqrtBox["N"]]}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.8141845403004417`*^9, 3.814184810458441*^9}, {
  3.81418604121064*^9, 3.814186095572022*^9}, {3.814276760799049*^9, 
  3.8142767665344753`*^9}, {3.814441595033862*^9, 
  3.814441605432522*^9}},ExpressionUUID->"f3734048-33ca-4039-895c-\
9c38c6d67426"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontSize->12,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Basics of Direct Monte \
Carlo]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["\n",
  FontSize->12,
  FontVariations->{"Underline"->True},
  FontColor->GrayLevel[0.5]],
 StyleBox["\nIn a more straightforward way.",
  FontVariations->{"Underline"->True}],
 "\nSince all the random variables ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "56d442b4-c347-463c-a130-519c6264d247"],
 " (ie. the generated samples) in our sample have mean \[Micro], the mean of \
the sample mean is "
}], "Text",
 CellChangeTimes->{{3.814191445558856*^9, 3.8141914698824*^9}, {
   3.814191882881915*^9, 3.814191891754788*^9}, {3.8141923164663763`*^9, 
   3.814192322991324*^9}, 3.814192616259302*^9, {3.814274164858408*^9, 
   3.814274184927825*^9}, {3.8142745099404488`*^9, 3.814274510795658*^9}, {
   3.8143782255257196`*^9, 3.814378306318719*^9}, {3.814378350689323*^9, 
   3.814378358723702*^9}, 3.814378707929538*^9, 
   3.814794725137134*^9},ExpressionUUID->"cf238d45-d57b-41a1-aff7-\
549c02105c72"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"E", "[", 
    SubscriptBox[
     OverscriptBox["\[Mu]", "^"], "n"], "]"}], "=", "\[Mu]"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814191908676115*^9, 3.814191936493475*^9}, {
  3.814195131285122*^9, 3.8141951748904552`*^9}, {3.8141952130280933`*^9, 
  3.814195218834635*^9}, {3.814195301858603*^9, 3.814195339165484*^9}, {
  3.814195860244627*^9, 3.814195863030756*^9}, {3.814196245397873*^9, 
  3.814196246525549*^9}},ExpressionUUID->"e5674680-8339-441f-b7d8-\
a1fe6178b9c6"],

Cell[TextData[{
 StyleBox["\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "In words, we can say that given a particular design (ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["f", "x"], "(", ")"}], " ", ")"}], TraditionalForm]],
  ExpressionUUID->"125895ca-cca7-44d5-9dc6-7d47db639937"],
 ", let \n\[Mu] denote some target quantity of interest (the true expected \
value) and \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "3c48188d-64ac-4652-bddd-e7adbdcdcf7e"],
 " denote the Monte Carlo expected estimate of \[Mu] from a simulation with N \
replicates (where each generated replicate is ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "702b7ce4-6e5a-41d6-80e3-3c68aeb3bbe1"],
 ")\n",
 StyleBox["(so it could be written just as \[LeftAngleBracket]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "65c95845-b7eb-4279-8f08-a2a5e04900ff"],
 StyleBox["\[RightAngleBracket]=\[Mu] that belongs to the notation above as  ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[LeftAngleBracket]", 
    OverscriptBox["A", "-"], "\[RightAngleBracket]"}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "1e5d6a0a-0028-458a-aec0-e07fa6cd2e85"],
 StyleBox["=\[LeftAngleBracket]A\[RightAngleBracket] or ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "=", "F"}], 
   TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "cdc0453f-702f-4da6-a47d-f39a40b3a1af"],
 StyleBox[")",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nIn the language of statistics, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Micro]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "f19ff34e-8da2-4ddb-a25c-7b012d5aadc8"],
 " is said to be an unbiased (mean) estimator of \[Micro].\n\nWe assume that \
the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],ExpressionUUID->
  "8fc91d4f-ebc8-4a9c-b971-aa15b6d8c120"],
 " have finite variance. \nSince they are identically distributed, they have \
the same variance \[Sigma].\nSince they are also independent, we have ",
 StyleBox["(from variance algebra, that the variance of the sum of the \
samples ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["x", "i"], ","}], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "b8eee7b5-0f2a-4db5-ad9e-9f4ccd49daa0"],
 StyleBox[" is the sum of their variances)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.81419204292045*^9, 3.8141921075999537`*^9}, 
   3.8141923452882633`*^9, {3.814192640242435*^9, 3.814192642064254*^9}, {
   3.814192760708033*^9, 3.814192765229806*^9}, {3.814193003842944*^9, 
   3.814193019906685*^9}, {3.814194898861547*^9, 3.814194926221456*^9}, {
   3.814273672759224*^9, 3.814273710873397*^9}, {3.8142740479944763`*^9, 
   3.8142741033219976`*^9}, {3.814274213437475*^9, 3.814274294455862*^9}, {
   3.8142743781130257`*^9, 3.814274408939537*^9}, {3.814274524924242*^9, 
   3.814274686342017*^9}, {3.814274728731257*^9, 3.8142747463690233`*^9}, {
   3.814274801568899*^9, 3.8142748054355917`*^9}, {3.814274841231633*^9, 
   3.8142748516047983`*^9}, {3.814275285567233*^9, 3.81427531706188*^9}, {
   3.814276177438308*^9, 3.814276231556975*^9}, 3.814278293661724*^9, {
   3.8143554831690683`*^9, 3.81435549306886*^9}, {3.814356408974978*^9, 
   3.814356410819045*^9}, {3.814898151767147*^9, 
   3.814898153003578*^9}},ExpressionUUID->"0cf988df-c900-420c-a03f-\
273eac332201"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "N"], 
     SubscriptBox["X", "i"]}], "]"}], "=", 
   SuperscriptBox["N\[Sigma]", "2"]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8141921161942463`*^9, 3.8141921544338703`*^9}, {
  3.814192230403016*^9, 3.814192276620384*^9}, {3.814194971718067*^9, 
  3.8141949724368973`*^9}},ExpressionUUID->"637ac7b9-21d4-416c-9192-\
54bdea03fcca"],

Cell[TextData[{
 StyleBox["(aka the variance of the sum of all the outcomes of ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "i"], TraditionalForm]],
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "b8501918-a40e-498a-aa99-1ac24ff652fa"],
 StyleBox[" is proportional to the variance of the sample times Nsamples (ie. \
sum of equal variances))",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nand so the variance of the sample mean is"
}], "Text",
 CellChangeTimes->{
  3.814192370408918*^9, {3.814192833021021*^9, 3.814192857997342*^9}, {
   3.814192888261446*^9, 3.8141929302447433`*^9}, {3.814194979837646*^9, 
   3.814195010302771*^9}, {3.8141952657483788`*^9, 
   3.814195271460321*^9}},ExpressionUUID->"80244e20-2091-40e5-b86f-\
acf7e0cd3ab9"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"Var", "[", 
    SubscriptBox[
     OverscriptBox["\[Mu]", "^"], "n"], "]"}], "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", 
      SuperscriptBox["N", "2"]], 
     RowBox[{"Var", "[", 
      RowBox[{
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"i", "=", "1"}], "N"], 
       SubscriptBox["X", "i"]}], "]"}]}], "=", 
    FractionBox[
     SuperscriptBox["\[Sigma]", "2"], "N"]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814192387703025*^9, 
  3.814192436146942*^9}},ExpressionUUID->"1d1dbed5-189c-45b8-8225-\
68bc5975f732"],

Cell[TextData[{
 "Thus the difference of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Mu]", "N"], TraditionalForm]],ExpressionUUID->
  "84232c68-cf61-41f8-9a24-4a851f853942"],
 " from \[Mu] should be of order \[Sigma]/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "3da97ce6-db24-4fb1-8204-0085eecb51ae"],
 "\nThis is written also as "
}], "Text",
 CellChangeTimes->{{3.8141924598351994`*^9, 3.814192514761636*^9}, {
  3.814192552678259*^9, 3.814192558929347*^9}, {3.814196456404858*^9, 
  3.8141965910884113`*^9}, {3.8141972893813553`*^9, 3.8141973733248568`*^9}, {
  3.8141974424695263`*^9, 3.814197463032279*^9}, {3.814202446151772*^9, 
  3.8142025439465017`*^9}, {3.814202578391631*^9, 3.814202601523114*^9}, {
  3.814202691340993*^9, 3.8142027937153797`*^9}, {3.8142784524640713`*^9, 
  3.8142784992857933`*^9}, {3.814278687903131*^9, 3.814278693619913*^9}, {
  3.8142791146613483`*^9, 3.814279115537526*^9}, {3.814279151605432*^9, 
  3.814279152639886*^9}, {3.814296720305674*^9, 
  3.8142967431682997`*^9}},ExpressionUUID->"b21abe3d-9148-40a6-82f7-\
5ce8c15cffa4"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"\[Sigma]", "[", 
    RowBox[{"\[LeftAngleBracket]", 
     SuperscriptBox["F", "N"], "\[RightAngleBracket]"}], "]"}], 
   "\[Proportional]", 
   FractionBox["1", 
    SqrtBox["N"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8142967499594383`*^9, 
  3.814296790255653*^9}},ExpressionUUID->"7c323f50-2d6f-46c2-8437-\
4ca66fe31f4e"],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nIn other words, ",
 StyleBox["we're sayin that for infinite (N) samples the mean of the \
simulation is equal to true expected value of the simulation",
  FontVariations->{"Underline"->True}],
 ", \nwhere for Nsamples instead it is just proportional to and the \
difference is the MC error .. that is the same as saying that \nthe rate of \
convergence of our Monte Carlo simulation to the exact value is, 1/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "02bd3573-3f9d-4850-a796-13759b8b1725"],
 ".\n\nHere we see that for standard deterministic quadratures the error is \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    SuperscriptBox["N", "d"]}], TraditionalForm]],ExpressionUUID->
  "91de8943-c7c5-402f-b9e0-fc1c09f9a6aa"],
 " while for Monte Carlo direct method the error is 1/",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "1e49f955-f9b7-45ad-95a3-d8543e006ccb"],
 ".\nThis means that the standard approach has a faster rate of convergence \
than Monte Carlo. \nFor example it approaches 0.04 error with just 25 samples \
where for Monte Carlo we need around 600."
}], "Text",
 CellChangeTimes->{{3.8141924598351994`*^9, 3.814192514761636*^9}, {
   3.814192552678259*^9, 3.814192558929347*^9}, {3.814196456404858*^9, 
   3.8141965910884113`*^9}, {3.8141972893813553`*^9, 
   3.8141973733248568`*^9}, {3.8141974424695263`*^9, 3.814197463032279*^9}, {
   3.814202446151772*^9, 3.8142025439465017`*^9}, {3.814202578391631*^9, 
   3.814202601523114*^9}, {3.814202691340993*^9, 3.8142027937153797`*^9}, {
   3.8142784524640713`*^9, 3.8142784992857933`*^9}, {3.814278687903131*^9, 
   3.814278693619913*^9}, {3.8142791146613483`*^9, 3.814279115537526*^9}, {
   3.814279151605432*^9, 3.814279152639886*^9}, {3.814296720305674*^9, 
   3.8142967409382563`*^9}, 
   3.814296810060635*^9},ExpressionUUID->"c2c43ff2-2cf5-4f3c-85d3-\
b56d45674af3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"N", "[", 
  RowBox[{"1", "/", "25"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     SqrtBox["600"]}], ")"}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8142028109302073`*^9, 
  3.814202907475675*^9}},ExpressionUUID->"459ba7c4-814e-419c-bf6f-\
dba1c883d858"],

Cell[BoxData["0.04`"], "Output",
 CellChangeTimes->{{3.8142028046038237`*^9, 3.814202908214319*^9}, 
   3.814713450470434*^9, 3.814729439263623*^9, 3.81472983586831*^9, 
   3.8147841719668093`*^9, 3.8147852596995087`*^9, 3.814786867950658*^9, 
   3.814787174852182*^9, 3.814787243242159*^9, 3.814790564245475*^9, 
   3.814799145231966*^9, 3.814799233456134*^9, 3.814803511395391*^9, 
   3.814808750974526*^9, 3.814816021931405*^9, 3.8148170370540648`*^9, 
   3.814817200579159*^9, 3.814817935730813*^9, 3.814818377149115*^9, 
   3.814819918418643*^9, 3.814962874541292*^9, 3.8149642692031517`*^9, 
   3.814965660093655*^9, 3.814968796495043*^9, 3.814982315092791*^9, 
   3.814982431272422*^9, 3.81498650383801*^9, 3.814986645241165*^9, 
   3.814988033368585*^9, 3.815045478558153*^9, 3.81504817555311*^9, 
   3.815049097136183*^9, 3.815053590928191*^9, 3.815056185121373*^9, 
   3.815134394829863*^9, 3.815135156933436*^9, 3.8151354992800303`*^9, 
   3.815136325299591*^9, 3.8151366438731117`*^9, 3.8151366955008173`*^9, 
   3.815136811736047*^9, 3.815137039365942*^9, 3.815137168002407*^9, 
   3.815137372836022*^9, 3.815137520264523*^9, 3.815137596851448*^9, 
   3.81513843082403*^9, 
   3.815138688396028*^9},ExpressionUUID->"f1e2f4c2-bfbf-4868-8d97-\
eab23abfe8c5"],

Cell[BoxData["0.0408248290463863073`1."], "Output",
 CellChangeTimes->{{3.8142028046038237`*^9, 3.814202908214319*^9}, 
   3.814713450470434*^9, 3.814729439263623*^9, 3.81472983586831*^9, 
   3.8147841719668093`*^9, 3.8147852596995087`*^9, 3.814786867950658*^9, 
   3.814787174852182*^9, 3.814787243242159*^9, 3.814790564245475*^9, 
   3.814799145231966*^9, 3.814799233456134*^9, 3.814803511395391*^9, 
   3.814808750974526*^9, 3.814816021931405*^9, 3.8148170370540648`*^9, 
   3.814817200579159*^9, 3.814817935730813*^9, 3.814818377149115*^9, 
   3.814819918418643*^9, 3.814962874541292*^9, 3.8149642692031517`*^9, 
   3.814965660093655*^9, 3.814968796495043*^9, 3.814982315092791*^9, 
   3.814982431272422*^9, 3.81498650383801*^9, 3.814986645241165*^9, 
   3.814988033368585*^9, 3.815045478558153*^9, 3.81504817555311*^9, 
   3.815049097136183*^9, 3.815053590928191*^9, 3.815056185121373*^9, 
   3.815134394829863*^9, 3.815135156933436*^9, 3.8151354992800303`*^9, 
   3.815136325299591*^9, 3.8151366438731117`*^9, 3.8151366955008173`*^9, 
   3.815136811736047*^9, 3.815137039365942*^9, 3.815137168002407*^9, 
   3.815137372836022*^9, 3.815137520264523*^9, 3.815137596851448*^9, 
   3.81513843082403*^9, 
   3.815138688403866*^9},ExpressionUUID->"1da2e4ac-41bb-4dfe-92d0-\
e28a976c4aea"]
}, Open  ]],

Cell[TextData[{
 "Another thing we see is that, - to halve the error in a Monte Carlo \
simulation we need x4 samples (that is the square of the improvement)\n",
 StyleBox["(or in other words, that the standard error decreases with the \
square root of the sample size)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.814202921268778*^9, 3.814202953554061*^9}, {
   3.8142791715404367`*^9, 3.814279198652088*^9}, {3.814279247613406*^9, 
   3.8142792510315437`*^9}, {3.814441435847395*^9, 3.814441447796068*^9}, 
   3.814442560218505*^9},ExpressionUUID->"75063719-d76c-44f7-8a2f-\
fc790ffc3771"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        SqrtBox[
         RowBox[{"600", "*", "4"}]]}], ")"}], ",", "1"}], "]"}], ",", 
    "\"\<halved the above error\>\""}], "}"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "if", " ", "we", " ", "want", " ", "10", " ", "time", " ", "less", " ", 
      "the", " ", "actual", " ", "error", 
      RowBox[{
       RowBox[{"(", "0.04", ")"}], " ", "?"}]}], ".."}], " ", "we", " ", 
    "need", " ", "a", " ", "*", 
    SuperscriptBox["10", "2"], " ", "Nsamples", " ", "boost"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     SqrtBox[
      RowBox[{"600", "*", 
       SuperscriptBox["10", "2"]}]]}], ")"}], ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8142029815917063`*^9, 3.814202994956642*^9}, {
  3.8142792296589603`*^9, 3.814279397348979*^9}, {3.814279615421773*^9, 
  3.814279669307521*^9}},ExpressionUUID->"773f670a-193c-4cf8-bd71-\
e2ffb7cbf503"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0204124145231931537`1.", ",", "\<\"halved the above error\"\>"}],
   "}"}]], "Output",
 CellChangeTimes->{{3.814202987978385*^9, 3.8142029977221937`*^9}, {
   3.8142792315736933`*^9, 3.814279236708396*^9}, {3.814279346897564*^9, 
   3.814279368385448*^9}, {3.814279619622642*^9, 3.814279659355707*^9}, 
   3.81471345054464*^9, 3.81472943931429*^9, 3.814729835920781*^9, 
   3.814784171985227*^9, 3.814785259729335*^9, 3.8147868679734488`*^9, 
   3.814787174885647*^9, 3.814787243263884*^9, 3.814790564278408*^9, 
   3.8147991452656927`*^9, 3.814799233489373*^9, 3.814803511431304*^9, 
   3.814808751012165*^9, 3.814816021956481*^9, 3.814817037078849*^9, 
   3.8148172006041107`*^9, 3.8148179357607927`*^9, 3.814818377173911*^9, 
   3.81481991845313*^9, 3.8149628745758533`*^9, 3.8149642692351093`*^9, 
   3.814965660116243*^9, 3.8149687965174437`*^9, 3.814982315113112*^9, 
   3.8149824313077908`*^9, 3.814986503867659*^9, 3.814986645276147*^9, 
   3.814988033394456*^9, 3.8150454785884533`*^9, 3.815048175574923*^9, 
   3.815049097158638*^9, 3.815053590957098*^9, 3.815056185150642*^9, 
   3.815134394851514*^9, 3.815135156954464*^9, 3.815135499304796*^9, 
   3.8151363253260307`*^9, 3.815136643900132*^9, 3.8151366955257397`*^9, 
   3.815136811761292*^9, 3.8151370393913517`*^9, 3.815137168034544*^9, 
   3.815137372867518*^9, 3.815137520294447*^9, 3.815137596873872*^9, 
   3.815138430852252*^9, 
   3.815138688432315*^9},ExpressionUUID->"5414ab4f-de66-4f51-9356-\
a9baf8426519"],

Cell[BoxData["0.0040824829046386307`1."], "Output",
 CellChangeTimes->{{3.814202987978385*^9, 3.8142029977221937`*^9}, {
   3.8142792315736933`*^9, 3.814279236708396*^9}, {3.814279346897564*^9, 
   3.814279368385448*^9}, {3.814279619622642*^9, 3.814279659355707*^9}, 
   3.81471345054464*^9, 3.81472943931429*^9, 3.814729835920781*^9, 
   3.814784171985227*^9, 3.814785259729335*^9, 3.8147868679734488`*^9, 
   3.814787174885647*^9, 3.814787243263884*^9, 3.814790564278408*^9, 
   3.8147991452656927`*^9, 3.814799233489373*^9, 3.814803511431304*^9, 
   3.814808751012165*^9, 3.814816021956481*^9, 3.814817037078849*^9, 
   3.8148172006041107`*^9, 3.8148179357607927`*^9, 3.814818377173911*^9, 
   3.81481991845313*^9, 3.8149628745758533`*^9, 3.8149642692351093`*^9, 
   3.814965660116243*^9, 3.8149687965174437`*^9, 3.814982315113112*^9, 
   3.8149824313077908`*^9, 3.814986503867659*^9, 3.814986645276147*^9, 
   3.814988033394456*^9, 3.8150454785884533`*^9, 3.815048175574923*^9, 
   3.815049097158638*^9, 3.815053590957098*^9, 3.815056185150642*^9, 
   3.815134394851514*^9, 3.815135156954464*^9, 3.815135499304796*^9, 
   3.8151363253260307`*^9, 3.815136643900132*^9, 3.8151366955257397`*^9, 
   3.815136811761292*^9, 3.8151370393913517`*^9, 3.815137168034544*^9, 
   3.815137372867518*^9, 3.815137520294447*^9, 3.815137596873872*^9, 
   3.815138430852252*^9, 
   3.815138688440757*^9},ExpressionUUID->"804bdb08-75a3-4272-a811-\
4418948680ba"]
}, Open  ]],

Cell[TextData[{
 "However Monte Carlo error does not belong to the dimensions involved while \
the standard error does, effectively standard integration techniques suffer \
from the ",
 StyleBox["curse of dimensionality",
  FontVariations->{"Underline"->True}],
 ", where the convergence rate becomes exponentially worse with increased \
dimensions. It can be seen that only for integrals with more than 6 dims the \
MC error starts to be better than the standard. The smoothness of the \
integral can also play a part .. where it\[CloseCurlyQuote]s narrow, standard \
quadratures have more problem sampling it than Monte Carlo.\n\nTake care that \
being the usual approach to estimate \[Sigma] as well as \[Mu] and then take \
your error magnitude to be \[Sigma]/",
 Cell[BoxData[
  FormBox[
   SqrtBox["n"], TraditionalForm]],ExpressionUUID->
  "8d831136-0f9b-4ec6-9dab-b9ad91b42546"],
 " , the MC error is just a probabilistic error bound (there is no guarantee \
that the expected accuracy is achieved in any particular case). Same goes for \
 \[OpenCurlyDoubleQuote]convergence\[CloseCurlyDoubleQuote] that means that \
you will never get an exact answer from Monte-Carlo but increasingly good \
approximations.\n\n\n",
 StyleBox["===================================================================\
=====================\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Basics of Direct Monte \
Carlo]\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nThe central limit theorem gives a more precise statement of how close ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "8797dbf0-3196-44fe-872b-0e1628ecb407"],
 " is to \[Micro]. It says :\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "ee13254c-d331-46bf-a646-283b2ccdec00"],
 " be an iid sequence such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "[", 
    RowBox[{
     RowBox[{"|", "X"}], ",", " ", 
     RowBox[{"n", 
      SuperscriptBox["|", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "f3dfdff7-efab-4813-80d4-f40d640f1d32"],
 "]<\[Infinity].\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"E", "[", 
     SubscriptBox["X", "n"], "]"}]}], TraditionalForm]],ExpressionUUID->
  "b95e32fa-dc7c-49ab-9095-5b4fcd024050"],
 " and\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "2bcae7dc-f198-44b4-b752-7834b9b69b41"],
 " be the variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "5109a5a3-08dc-4d2f-962a-8695d5f05e8a"],
 " ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      SubsuperscriptBox["X", "n", "2"], "]"}], "-", 
     SuperscriptBox[
      RowBox[{"E", "[", 
       SubscriptBox["X", "n"], "]"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"b00de52b-3881-4ae1-968a-ca485a7edc5b"],
 "\nthen"
}], "Text",
 CellChangeTimes->{{3.8142030146434193`*^9, 3.814203159137886*^9}, {
   3.814204738866695*^9, 3.814204751559657*^9}, {3.8142069062301197`*^9, 
   3.814206978767063*^9}, {3.814207739133116*^9, 3.814207739722231*^9}, {
   3.814290962371409*^9, 3.81429136705597*^9}, 3.8142914981184072`*^9, {
   3.8142919162821617`*^9, 3.8142919320765333`*^9}, {3.814293565484046*^9, 
   3.8142935831018457`*^9}, {3.814294881649482*^9, 3.8142948858285627`*^9}, {
   3.814378100603009*^9, 3.814378159593685*^9}, {3.8143783190354767`*^9, 
   3.814378321371911*^9}, {3.814378364482533*^9, 3.814378364842292*^9}, {
   3.8144659568990593`*^9, 3.814465992605508*^9}, {3.814466174070813*^9, 
   3.814466264676983*^9}, {3.814466304028668*^9, 3.814466314379037*^9}, 
   3.814794736217516*^9},ExpressionUUID->"df42ce10-d99a-40c5-b8c1-\
f29d8482cc5c"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   FractionBox["1", 
    RowBox[{"\[Sigma]", 
     SqrtBox["n"]}]], 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "1"}], "n"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["X", "k"], "-", "\[Mu]"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814291374435575*^9, 
  3.814291416356225*^9}},ExpressionUUID->"c8daccdd-b583-47e2-aa3f-\
5eb5a87d4b96"],

Cell["\<\
converges in distribution to a standard normal random variable.
This means that\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.8142914244078913`*^9, 
  3.8142915133065*^9}},ExpressionUUID->"93ee72f9-ad52-4689-9a83-d2f25c26f338"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"a", "\[LessEqual]", 
       RowBox[{
        FractionBox["1", 
         RowBox[{"\[Sigma]", 
          SqrtBox["n"]}]], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], "n"], 
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["X", "k"], "-", "\[Mu]"}], ")"}]}]}], "\[LessEqual]", 
       "b"}], ")"}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "/", "2"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814291521900238*^9, 
  3.8142916653629417`*^9}},ExpressionUUID->"dcb29aa3-7347-4289-a07e-\
7c5c439a072c"],

Cell[TextData[{
 "In terms of the sample mean, the central limit theorem says that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
    SqrtBox["n"], "\[Sigma]"}], TraditionalForm]],ExpressionUUID->
  "a1fea6ca-e10f-4cf0-a2fa-4434fd465208"],
 " converges in distrbution to a standard normal distribution.\n\nHowever the \
statement of the central limit theorem involves ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "be335c48-d26c-4fb6-80e7-7a78b76bed86"],
 ". It is unlikely that we know ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "8afcd89b-ccbc-4666-ab16-8b773dd9c899"],
 " if we don\[CloseCurlyQuote]t even know \[Micro]. \nSo we must also use our \
sample to estimate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "1d770a9b-5755-481a-b4fd-9ed902869f27"],
 ". \n\nThe usual ",
 StyleBox["estimator of the variance",
  FontVariations->{"Underline"->True}],
 " ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "f027f4e8-dc11-4fd6-be97-a389fa3a99e5"],
 " is the sample variance. \nIt is typically denoted by ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["s", "2"], TraditionalForm]],ExpressionUUID->
  "3e4a2c97-9df1-4306-8ee6-590faf1bfc91"],
 ", but we will denote it by ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["s", "n", "2"], TraditionalForm]],ExpressionUUID->
  "1b81c8c5-be67-479c-a9d0-cbce7cba12d7"],
 " to emphasize that it depends on the sample size. It is defined to be"
}], "Text",
 CellChangeTimes->{{3.814291688814783*^9, 3.814291767242468*^9}, {
   3.814291840732884*^9, 3.814291846892303*^9}, {3.814291882791471*^9, 
   3.8142918827914963`*^9}, {3.814291979035478*^9, 3.814292107892446*^9}, 
   3.814292274483693*^9, 
   3.8143749968342457`*^9},ExpressionUUID->"b97de6a5-8e46-4bb8-aa75-\
7fe5fbf443e6"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubsuperscriptBox["s", "n", "2"], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{"n", "-", "1"}]], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox["X", "i"], "-", 
        SubscriptBox[
         OverscriptBox["\[Mu]", "^"], "n"]}], ")"}], "2"]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814292140862689*^9, 3.814292189996695*^9}, 
   3.814786294700816*^9},ExpressionUUID->"29058122-11c6-4165-aae4-\
e7e749df4ac5"],

Cell[TextData[{
 "An application of the strong law of large numbers shows that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["s", "n", "2"], "\[Rule]", 
    SuperscriptBox["\[Sigma]", "2"]}], TraditionalForm]],ExpressionUUID->
  "a86d321a-e856-4c8e-a46f-a37e4b3846ce"],
 ". Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
    RowBox[{
     SqrtBox["n"], "/", "\[Sigma]"}]}], TraditionalForm]],ExpressionUUID->
  "d9e11394-3714-47b4-9406-2e45a9cf436f"],
 " converges in distribution to a standard normal distribution and that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["s", "n", "2"], "\[Rule]", 
    SuperscriptBox["\[Sigma]", "2"]}], TraditionalForm]],ExpressionUUID->
  "ee1e6add-8fb8-4ebc-9e8d-c45528e44550"],
 " converges almost surely (a.s.) to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "ead50792-6ae4-4989-a389-0b0307aba4ad"],
 ", a standard theorem in probability implies that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
    RowBox[{
     SqrtBox["n"], "/", 
     SubscriptBox["s", "n"]}]}], TraditionalForm]],ExpressionUUID->
  "2201721a-3812-4517-8ebf-0906eeb001d4"],
 " converges in distribution to a standard normal. (In statistics the theorem \
being used here is usually called Slutsky\[CloseCurlyQuote]s theorem.) \n\nSo \
we have the following variation on the central limit theorem :\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "e779c5a4-fde8-48c5-80bb-5afef5fa708d"],
 " be an iid sequence such that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"E", "[", 
    RowBox[{
     RowBox[{"|", "X"}], ",", " ", 
     RowBox[{"n", 
      SuperscriptBox["|", "2"]}]}]}], TraditionalForm]],ExpressionUUID->
  "c196700e-0db8-460f-891b-835da37db8fe"],
 "]<\[Infinity].\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Mu]", "=", 
    RowBox[{"E", "[", 
     SubscriptBox["X", "n"], "]"}]}], TraditionalForm]],ExpressionUUID->
  "eabdbc14-eb33-4347-92f4-b2e792fb5970"],
 " and\n",
 StyleBox["- ",
  FontColor->RGBColor[1, 0.5, 0]],
 "Let ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "baaed896-83df-468f-8ca6-b6d0b5aeea98"],
 " be the variance of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["X", "n"], TraditionalForm]],ExpressionUUID->
  "d91c8d31-1276-4a29-a3b2-2ad1ca8ef043"],
 " ie. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Sigma]", "2"], "=", 
    RowBox[{
     RowBox[{"E", "[", 
      SubsuperscriptBox["X", "n", "2"], "]"}], "-", 
     SuperscriptBox[
      RowBox[{"E", "[", 
       SubscriptBox["X", "n"], "]"}], "2"]}]}], TraditionalForm]],
  ExpressionUUID->"417d5bb3-58fe-4730-a272-15b2e44293ab"],
 "\nthen"
}], "Text",
 CellChangeTimes->{{3.814294311386829*^9, 3.814294587210465*^9}, {
   3.814375044534499*^9, 3.814375049414637*^9}, 
   3.814438949462434*^9},ExpressionUUID->"296fadf0-b401-4901-8ed9-\
1ed730da5b2f"],

Cell[BoxData[
 StyleBox[
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["\[Mu]", "n"], "-", "\[Mu]"}], ")"}], 
    SqrtBox["n"]}], 
   SubscriptBox["s", "n"]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],
  Background->None]], "DisplayFormula",
 CellChangeTimes->{{3.814294608606845*^9, 
  3.814294637496891*^9}},ExpressionUUID->"9663c372-0868-4197-af29-\
6cd50537a3ae"],

Cell["\<\
converges in distribution to a standard normal random variable.
This means that\
\>", "Text",
 CellChangeTimes->{3.8142946514993896`*^9, 3.814379685071828*^9, 
  3.81456021337293*^9},ExpressionUUID->"6c87b10f-92a1-4e24-b12a-7471b48c7906"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{"a", "\[LessEqual]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox["\[Mu]", "n"], "-", "\[Mu]"}], ")"}], 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]], "\[LessEqual]", "b"}], ")"}]}]}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "a", "b"], 
    RowBox[{
     FractionBox["1", 
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]]], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox["x", "2"]}], "/", "2"}]], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8142946770287027`*^9, 
  3.814294701178591*^9}},ExpressionUUID->"0d5e6b36-2105-40d4-96f8-\
bb9178e1a484"],

Cell[TextData[{
 "\nThe central limit theorem can be used to construct confidence intervals \
for our estimate ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "7b9b1e48-48f3-4f99-a7d2-13edec692e01"],
 " for \[Mu].\n\nWe want to construct an interval of the form [",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "d6ffa67c-f7fc-4bd9-8bdd-a3817d391972"],
 "-\[Epsilon], ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "4d195160-768c-4479-8db2-7800518b481c"],
 "+\[Epsilon]] such that \nthe probability \[Mu] in this interval is (1-\
\[Alpha]) where the ",
 StyleBox["confidence level",
  FontVariations->{"Underline"->True}],
 " (1-\[Alpha]) is some number close to 1, ie. 95%.\n\nSo let Z be a random \
variable with the standard normal distribution. \nThen note that \[Mu] \
belongs to [",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "e76ca4f2-e61c-4b70-9bfd-816e4806ace4"],
 "-\[Epsilon],",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "4ab72ab1-cca6-468c-b0c6-bc4557d8f5fe"],
 "+\[Epsilon]] if and only if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], TraditionalForm]],ExpressionUUID->
  "a13658ec-dcac-4dc9-a99b-e8d273b5f9cd"],
 " belongs to [",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],ExpressionUUID->
  "24e08277-e413-487a-bc25-a11f05cf1e04"],
 "-\[Epsilon],",
 Cell[BoxData[
  FormBox["\[Mu]", TraditionalForm]],ExpressionUUID->
  "15dd115f-7274-46f0-82ca-2b24d16ff555"],
 "+\[Epsilon]].\n\nThe central limit theoreom says that"
}], "Text",
 CellChangeTimes->{{3.8142949118885593`*^9, 3.81429505293683*^9}, {
  3.814295137829112*^9, 3.814295263810131*^9}, {3.8143787531007833`*^9, 
  3.8143787947025223`*^9}},ExpressionUUID->"d2a099f7-0e64-460c-be56-\
87b468010510"],

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Mu]", "-", "\[Epsilon]"}], "\[LessEqual]", 
      SubscriptBox[
       OverscriptBox["\[Mu]", "^"], "n"], "\[LessEqual]", 
      RowBox[{"\[Mu]", "+", "\[Epsilon]"}]}], ")"}]}], "=", 
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "\[Epsilon]"}], "\[LessEqual]", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], "\[LessEqual]", 
      "\[Epsilon]"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Epsilon]", 
          SqrtBox["n"]}], 
         SubscriptBox["s", "n"]]}], "\[LessEqual]", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           SubscriptBox[
            OverscriptBox["\[Mu]", "^"], "n"], "-", "\[Mu]"}], ")"}], 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]], "\[LessEqual]", 
       FractionBox[
        RowBox[{"\[Epsilon]", 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]]}], ")"}]}], "\[TildeTilde]", 
    RowBox[{"P", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"\[Epsilon]", 
          SqrtBox["n"]}], 
         SubscriptBox["s", "n"]]}], "\[LessEqual]", "Z", "\[LessEqual]", 
       FractionBox[
        RowBox[{"\[Epsilon]", 
         SqrtBox["n"]}], 
        SubscriptBox["s", "n"]]}], ")"}]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.81429527476614*^9, 
  3.814295500012644*^9}},ExpressionUUID->"9233a9eb-6d55-474a-b8e1-\
4a3adcba05a1"],

Cell[TextData[{
 "Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],ExpressionUUID->
  "26cffbc2-bdf4-4b1d-8982-0f0f8037c6f8"],
 " be the number such that",
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", 
     RowBox[{
      RowBox[{"-", 
       SubscriptBox["z", "c"]}], "\[LessEqual]", "Z", "\[LessEqual]", 
      SubscriptBox["z", "c"]}], ")"}], "=", 
    RowBox[{"1", "-", "\[Alpha]"}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "75d82590-489f-496f-b370-7677b65ba60e"],
 ".\nThen we have",
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FractionBox[
   RowBox[{"\[Epsilon]", 
    SqrtBox["n"]}], 
   SubscriptBox["s", "n"]]], "DisplayFormula",
  CellChangeTimes->{{3.81429527476614*^9, 3.814295500012644*^9}},
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "c77c2452-331d-4328-b2d7-2ee8e7a14584"],
 StyleBox["= ",
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "761c99a1-473b-410c-b558-2980f6ccde8a"],
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 "ie.",
 StyleBox[" ",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", 
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["s", "n"]}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "fcde5ef8-c3bc-4fdc-a640-23c3586c7f95"],
 StyleBox["/",
  FontColor->RGBColor[1, 0.5, 0]],
 Cell[BoxData[
  FormBox[
   SqrtBox["n"], TraditionalForm]],
  FontColor->RGBColor[1, 0.5, 0],ExpressionUUID->
  "72aaee5b-52d1-4776-9f77-5ad2c44a9e40"],
 StyleBox[".",
  FontColor->RGBColor[1, 0.5, 0]],
 " \nThus our confidence interval for \[Mu] is "
}], "Text",
 CellChangeTimes->{{3.814295515662434*^9, 3.814295629951889*^9}, 
   3.814378836868976*^9},ExpressionUUID->"ac0640b4-292e-4891-87cf-\
482acd7f01be"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], "\[PlusMinus]", 
   FractionBox[
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["S", "n"]}], 
    SqrtBox["n"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814295785605616*^9, 
  3.8142958182312202`*^9}},ExpressionUUID->"bce3ea56-7054-43e9-80e9-\
398942fd1807"],

Cell[TextData[{
 "(btw, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", "c"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "ad3ae69c-134e-4646-9e3e-1b04fcf1a7ce"],
 " stays for Z critical value).\n\nCommon choices for (1\[Minus]\[Alpha]) are \
95% and 99%, for which ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],ExpressionUUID->
  "4abe32fe-0bf9-4594-b424-eb10d516f32f"],
 " \[TildeTilde] 1.96 and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],ExpressionUUID->
  "6ab4a7c2-4f43-4bd1-8943-0f697db48943"],
 " \[TildeTilde] 2.58, respectively.\n",
 StyleBox["(The central limit theorem is only a limit statement about what \
happens as the sample size n goes to infinity. \nHow fast the distribution in \
question converges to a normal distribution depends on the distribution of \
the original random variable X).\n\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "It\[CloseCurlyQuote]s easy to see that if we are looking for an error \
around 1std, being the estimated distribution a standard normal distribution \
(see part1 for  the 68-95-99.7 rule) we\[CloseCurlyQuote]ll fall into just \
68% of the distribution or in other words that we have around 68% probability \
to be there within 1std error.\n\nOn the other side as seen above, if we \
really want a strict confidence interval, ie. we wanna be almost (ie. 99.7%) \
sure that our estimate is almost the true expectation than we\
\[CloseCurlyQuote]ll have to take a fairly big potential error, ie. around \
3std. \n",
 StyleBox["\n\n",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "Eventually keep in mind that from a practical point of view, what is \
important is not how many samples are needed to achieve a given level of \
accuracy, but rather how much CPU time is need to achieve that accuracy. \
Suppose we have two Monte Carlo methods that compute the same thing. They \
have variances ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "1", "2"], TraditionalForm]],ExpressionUUID->
  "c711c42a-4843-4b00-b4a7-2db168fa7d46"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Sigma]", "2", "2"], TraditionalForm]],ExpressionUUID->
  "2e6c7160-10af-40e2-9c48-c086f129d5a9"],
 ". Let ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "1"], TraditionalForm]],ExpressionUUID->
  "8b511346-26e8-4c94-bf76-2d47f31556f3"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Tau]", "2"], TraditionalForm]],ExpressionUUID->
  "3f5463e9-9069-4119-81c7-6c7b45d4bba0"],
 " be the CPU time needed by the methods to produce a single sample. With a \
fixed amount \[CapitalTau] of CPU time we can produce ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"Subscript", "[", 
     RowBox[{"N", ",", " ", "i"}], "]"}], "=", 
    RowBox[{"\[CapitalTau]", "/", 
     SubscriptBox["\[Tau]", "i"]}]}], TraditionalForm]],ExpressionUUID->
  "560858fc-a72a-48ed-b9c1-1ed2f7fafeba"],
 " samples for the two methods. So the errors of our two methods will be "
}], "Text",
 CellChangeTimes->{{3.814295894993285*^9, 3.814295974268793*^9}, {
   3.8142960993493977`*^9, 3.8142962812846403`*^9}, 3.814378857835559*^9, {
   3.814378896201128*^9, 3.814378984197459*^9}, {3.814379037476872*^9, 
   3.814379079732317*^9}, {3.814379110893222*^9, 3.8143791432751913`*^9}, {
   3.814379192889244*^9, 3.8143793372913027`*^9}, {3.81437943971358*^9, 
   3.814379460701118*^9}, {3.814442804416852*^9, 3.8144428127400217`*^9}, {
   3.81489968516818*^9, 
   3.814899718628223*^9}},ExpressionUUID->"a902fd77-1ebe-4d09-972a-\
e94441174014"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   FractionBox[
    SubscriptBox["\[Sigma]", "i"], 
    SqrtBox[
     SubscriptBox["N", "i"]]], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["\[Sigma]", "i"], 
     SqrtBox[
      SubscriptBox["\[Tau]", "i"]]}], 
    SqrtBox["\[CapitalTau]"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814296293642046*^9, 
  3.814296348401909*^9}},ExpressionUUID->"ee377539-9dfa-42f1-9a2f-\
38674b206798"],

Cell[TextData[{
 "Thus the method with the smaller ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Sigma]", "i", "2"], 
    SubscriptBox["\[Tau]", "i"]}], TraditionalForm]],ExpressionUUID->
  "0f342cf4-4ef7-498a-b661-06fa294ecb00"],
 " is the better method.\n\nOn a final note, take care that when "
}], "Text",
 CellChangeTimes->{{3.8142963736499567`*^9, 3.814296411626045*^9}, {
  3.814448024666093*^9, 3.814448028782283*^9}, {3.814448089782214*^9, 
  3.8144480974541893`*^9}},ExpressionUUID->"4faf4b7d-925f-4c03-ab31-\
10f7f41d2789"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    UnderscriptBox["lim", 
     RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
    SubscriptBox["F", "n"]}], "\[Rule]", 
   RowBox[{"\[ScriptCapitalN]", 
    RowBox[{"(", 
     RowBox[{"0", ",", "1"}], ")"}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8144480369494753`*^9, 3.814448077179801*^9}, 
   3.81444971252675*^9, {3.814449756403846*^9, 
   3.814449760699976*^9}},ExpressionUUID->"eb361531-92f6-4da2-ba0b-\
ac817a734696"],

Cell[TextData[{
 "we\[CloseCurlyQuote]re saying that the limiting distribution for a large \
set of sample means is the Standard Normal Distribution.\nIn other words, a \
sample mean can have any arbitrary distribution.. when we go for repeated \
simulation that arbitrary distribution tends to a standard normal \
distribution, because of that is called ",
 StyleBox["limiting distribution or also asymptotic distribution",
  FontVariations->{"Underline"->True}],
 "."
}], "Text",
 CellChangeTimes->{{3.8144481123918333`*^9, 3.814448228922763*^9}, {
  3.814448295406789*^9, 3.814448316062212*^9}, {3.814448440083192*^9, 
  3.814448482136587*^9}},ExpressionUUID->"a4eca03e-639b-40b2-af49-\
9eb2574ddbfb"],

Cell[TextData[{
 StyleBox["\n\
==============================================================================\
==========\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 StyleBox["ProbabilityAndStatisticsForEngineering]\n\n",
  FontColor->GrayLevel[0.5]],
 "Another way to put it is that, we know from part1 (Central Limit Theorem) \
that to \[OpenCurlyQuote]standardize\[CloseCurlyQuote] a normal distribution \
we have "
}], "Text",
 CellChangeTimes->{{3.8148978182943277`*^9, 3.8148978922264023`*^9}, {
  3.814898952001803*^9, 3.814898974680448*^9}, {3.814899259103882*^9, 
  3.814899260656405*^9}, {3.815050306709923*^9, 
  3.815050339469599*^9}},ExpressionUUID->"11250c61-ae3d-45fa-aeac-\
55a54d8927ea"],

Cell[BoxData[
 StyleBox[
  RowBox[{"z", "=", 
   FractionBox[
    RowBox[{
     OverscriptBox["X", "-"], "-", "\[Mu]"}], 
    RowBox[{"\[Sigma]", 
     SqrtBox["n"]}]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814897918890214*^9, 
  3.814897948592167*^9}},ExpressionUUID->"7669e511-389f-4233-bf9d-\
4a6c6965f3ef"],

Cell["\<\
Then for example, because the area under the standard normal curve between \
and 1.96 is 0.95, we can write\
\>", "Text",
 CellChangeTimes->{{3.814897991451672*^9, 3.8148980273395987`*^9}, {
  3.8148983288378143`*^9, 
  3.8148983348708267`*^9}},ExpressionUUID->"0e9940c5-3dd1-4b5f-a024-\
94d595959309"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1.96"}], "<", 
      FractionBox[
       RowBox[{
        OverscriptBox["X", "-"], "-", "\[Mu]"}], 
       RowBox[{"\[Sigma]", 
        SqrtBox["n"]}]], "<", "1.96"}], ")"}]}], "=", "0.95"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814898034203171*^9, 3.814898082327845*^9}, {
  3.814898472370656*^9, 
  3.814898516015819*^9}},ExpressionUUID->"0291c194-270e-48b9-97ba-\
df6577a7d845"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s now manipulate the inequalities inside the \
parentheses so that they appear in the (confidence) interval form.\nBasically \
we\[CloseCurlyQuote]re rewriting the eq in terms of \[Mu].\nMultiply both \
sides by \[Sigma]/",
 Cell[BoxData[
  FormBox[
   SqrtBox["n"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "8eb08014-3b54-4601-94f6-7567f4a0cb64"]
}], "Text",
 CellChangeTimes->{{3.8148983688990173`*^9, 3.814898445605954*^9}, {
  3.814901941355269*^9, 
  3.814901976883053*^9}},ExpressionUUID->"7140e757-79c4-429f-8775-\
1a35eae8ed54"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "1.96"}], 
    FractionBox["\[Sigma]", 
     SqrtBox["n"]]}], "<", 
   RowBox[{
    OverscriptBox["X", "-"], "-", "\[Mu]"}], "<", 
   RowBox[{"1.96", 
    FractionBox["\[Sigma]", 
     SqrtBox["n"]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814898474489519*^9},ExpressionUUID->"035c96f5-dae9-40db-b770-\
96c0b923c80b"],

Cell[TextData[{
 "Subtract ",
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "5f73519c-6b8f-48d2-be74-fc11a1b3f181"],
 " from each term"
}], "Text",
 CellChangeTimes->{{3.814898531723178*^9, 
  3.814898546999139*^9}},ExpressionUUID->"17774b23-1b55-4fb3-a978-\
6492a56b7f04"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     OverscriptBox["X", "-"]}], "-", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}], "<", 
   RowBox[{"-", "\[Mu]"}], "<", 
   RowBox[{
    RowBox[{"-", 
     OverscriptBox["X", "-"]}], "+", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8148985574222927`*^9, 
  3.814898607571466*^9}},ExpressionUUID->"549521e0-0f5e-487d-b1e5-\
0b58098ebfa3"],

Cell["\<\
Eventually multiply through by -1 to make \[Mu] without the minus in front \
(that will reverse the direction of each inequality)\
\>", "Text",
 CellChangeTimes->{{3.814898636773651*^9, 
  3.814898703668558*^9}},ExpressionUUID->"79d3c8ed-82e7-4c0a-94a3-\
5a80cd88b32f"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    OverscriptBox["X", "-"], "+", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}], ">", "\[Mu]", ">", 
   RowBox[{
    OverscriptBox["X", "-"], "-", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8148987157543173`*^9, 
  3.814898766534049*^9}},ExpressionUUID->"c3f131bb-c7d3-4da5-8514-\
fe296c44ff65"],

Cell["that is ", "Text",
 CellChangeTimes->{{3.814898892644289*^9, 
  3.814898893455303*^9}},ExpressionUUID->"ed778a08-b566-4da9-9081-\
57cae6a750ed"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{
    OverscriptBox["X", "-"], "-", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}], "<", "\[Mu]", "<", 
   RowBox[{
    OverscriptBox["X", "-"], "+", 
    RowBox[{"1.96", 
     FractionBox["\[Sigma]", 
      SqrtBox["n"]]}]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814898898834496*^9, 
  3.8148989088451357`*^9}},ExpressionUUID->"8634f84c-b6cc-44c5-8899-\
6597c0745792"],

Cell["with the interval", "Text",
 CellChangeTimes->{{3.814899047602798*^9, 
  3.814899050302301*^9}},ExpressionUUID->"8aa73ae2-dcb9-4a93-80e5-\
5a2c9ee94436"],

Cell[BoxData[
 StyleBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     OverscriptBox["X", "-"], "-", 
     RowBox[{"1.96", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}], ",", 
    RowBox[{
     OverscriptBox["X", "-"], "+", 
     RowBox[{"1.96", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}]}], "}"}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814899063644882*^9, 
  3.81489907361375*^9}},ExpressionUUID->"63212abb-eaae-4625-8bd0-\
d8337cb62e75"],

Cell["\<\
This can be paraphrased as \[OpenCurlyDoubleQuote]there\[CloseCurlyQuote]s a \
probability of .95 that the random interval includes or covers the true value \
of \[Mu]\[CloseCurlyDoubleQuote].\
\>", "Text",
 CellChangeTimes->{{3.814899241125915*^9, 
  3.814899242992133*^9}},ExpressionUUID->"e10049bb-98a7-47f0-9cee-\
0b7b7649063d"],

Cell[TextData[{
 "\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
EREREREREREREREREREREREREREREREREREREREREdF77/8BZ+oxpg==
     "], {{0, 111}, {
     452, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag[
    "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
     Association["Comments" -> Association["Software" -> "gnome-screenshot"]]],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSizeRaw->{452, 111},
   PlotRange->{{0, 452}, {0, 111}}]], "Input",ExpressionUUID->
  "805135da-a381-4312-a3d3-227c19ed13fe"]
}], "Text",
 CellChangeTimes->{{3.814899095663229*^9, 3.81489916703157*^9}, {
  3.8148992203327513`*^9, 
  3.814899236357778*^9}},ExpressionUUID->"a3f9f5aa-4a53-4dae-8a07-\
806407be3c80"],

Cell[TextData[{
 "However take care that the confidence level is not so much a statement \
about any particular interval. Instead it pertains to what would happen if a \
very large number of intervals were to be constructed using the same CI \
formula... aka it applies to a long sequence of replications of an experiment \
rather than just a single replication.\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nAnother thing regard Confidence Intervals is that if the ",
 StyleBox["number of samples of the mean is small",
  FontVariations->{"Underline"->True}],
 ", typically less than about 25, then the confidence coefficients given in \
Table 1 cannot be used. Instead of using the normal distribution, the \
so-called (Student\[CloseCurlyQuote]s) ",
 StyleBox["T distribution",
  FontVariations->{"Underline"->True}],
 " has to be used. This distribution has a similar shape to the normal \
distribution, but is a function of an additional parameter called the degrees \
of freedom, \[Nu].\n\nHere our lower and upper confidence bounds are given \
by"
}], "Text",
 CellChangeTimes->{{3.814899538238697*^9, 3.814899611858202*^9}, {
   3.8148997954798727`*^9, 3.814899795929977*^9}, {3.815049289911179*^9, 
   3.815049382230442*^9}, {3.815049841928563*^9, 3.815049871896698*^9}, {
   3.815050382533267*^9, 3.815050412257565*^9}, {3.815051843118557*^9, 
   3.8150518449840517`*^9}, 
   3.8150523156239758`*^9},ExpressionUUID->"e39a9cbc-2e69-4712-adc3-\
521c22f55c6e"],

Cell[BoxData[
 StyleBox[
  RowBox[{"T", "=", 
   RowBox[{
    OverscriptBox["X", "-"], "\[PlusMinus]", 
    FractionBox[
     RowBox[{
      SubscriptBox["t", "c"], 
      SubscriptBox["S", "n"]}], 
     SqrtBox[
      RowBox[{"n", "-", "1"}]]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.815050432346147*^9, 3.8150504761753893`*^9}, {
  3.815050533575803*^9, 
  3.8150505489438133`*^9}},ExpressionUUID->"6f8df143-44f2-4adc-863f-\
c0d2939f9441"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", "1", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Red", ",", " ", 
        RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], " ", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", "2", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Green", ",", " ", 
        RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], " ", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", "5", "]"}], ",", "x"}], "]"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Pink", ",", " ", 
        RowBox[{"Opacity", "[", "1", "]"}]}], "}"}]}], " ", ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "}"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8150576605883417`*^9, 
  3.815057795456956*^9}},ExpressionUUID->"42ba3342-26a1-4447-8d50-\
4b89dec71c7c"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
fp+i1LfGgmvNGtjiFkXs//Yv4f/3L/8HKURbYA==
        "]]},
      Annotation[#, "Charting`Private`Tag$2657#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$2698#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1], 
       LineBox[CompressedData["
1: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
RMXRbRKyVbyptV6lB//3/wT9//+T/wEmgnx5
        "]]},
      Annotation[#, "Charting`Private`Tag$2739#1"]& ]}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0.5], AbsoluteThickness[1.6], Opacity[1], 
       LineBox[CompressedData["
1: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

        "]]},
      Annotation[#, "Charting`Private`Tag$2780#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0279807557914566`*^-18},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9, 9}, {1.0279807557914566`*^-18, 0.39894189756848447`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.815057662073641*^9, 3.8150576816639547`*^9}, {
   3.81505773190691*^9, 3.815057796518684*^9}, 3.815134395006464*^9, 
   3.8151351571001*^9, 3.815135499456925*^9, 3.8151363254785147`*^9, 
   3.815136644044262*^9, 3.815136695673251*^9, 3.8151368119128113`*^9, 
   3.8151370395419292`*^9, 3.815137168184101*^9, 3.815137373018197*^9, 
   3.8151375204546022`*^9, 3.815137597018746*^9, 3.815138431001148*^9, 
   3.8151386885913877`*^9},ExpressionUUID->"8bd09e2a-7952-4d36-aaf9-\
1fe8d0a8533b"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nEventually by considering the confidence interval to represent twice the \
maximum error, we can write"
}], "Text",
 CellChangeTimes->{{3.81505197305336*^9, 3.815051974651751*^9}, {
  3.8150520211372004`*^9, 3.815052056464226*^9}, {3.815052296989933*^9, 
  3.815052317737443*^9}},ExpressionUUID->"b31dcbbd-7d13-4d0e-be0d-\
c1b029cbb4ee"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["error", "max"], "=", 
   FractionBox[
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["S", "n"]}], 
    SqrtBox["n"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.815052014459414*^9, 
  3.815052034524699*^9}},ExpressionUUID->"f70e780c-1af8-4de2-b3ba-\
d9e52d2f1964"],

Cell["The percentage error of the mean becomes", "Text",
 CellChangeTimes->{{3.815052064133589*^9, 
  3.8150520734282846`*^9}},ExpressionUUID->"53af828a-86ad-4e93-ab0b-\
2cf2d899457a"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Er", "=", 
   RowBox[{"100", "*", 
    FractionBox[
     RowBox[{
      SubscriptBox["z", "c"], 
      SubscriptBox["S", "n"]}], 
     RowBox[{
      OverscriptBox["X", "-"], 
      SqrtBox["n"]}]]}]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.815052080186837*^9, 
  3.815052132447015*^9}},ExpressionUUID->"9c54c67d-eb2d-45c3-94ce-\
6fe451552fbb"],

Cell[TextData[{
 "And so by transforming for n, we get that the total ",
 StyleBox["number of samples to be drawn for a certain CI",
  FontVariations->{"Underline"->True}],
 " is"
}], "Text",
 CellChangeTimes->{{3.8150521413558693`*^9, 3.815052155891263*^9}, {
  3.815052209599194*^9, 
  3.81505222901572*^9}},ExpressionUUID->"ce0359eb-37cd-4903-a6be-\
73cefb2aa970"],

Cell[BoxData[
 StyleBox[
  RowBox[{"n", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["z", "c"], 
       SubscriptBox["S", "n"]}], 
      RowBox[{"Er", 
       OverscriptBox["X", "-"]}]], ")"}], "2"]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.815052165524815*^9, 
  3.8150521976050167`*^9}},ExpressionUUID->"9edc37f3-dc48-490b-9485-\
fa7c47c823c7"],

Cell[TextData[{
 "\nThis reads : \nif the simulation is run for n samples, we are ie. 95% \
confident that the calculated mean will not differ by more than 5% from the \
true value.\nTo know the total n of samples (n*m) we can just use CI instead \
of Er",
 Cell[BoxData[
  FormBox[
   OverscriptBox["X", "-"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0cba2abd-f6b0-4820-a276-0a6f8a2ad41b"],
 "."
}], "Text",
 CellChangeTimes->{{3.8150534882531147`*^9, 3.815053581314294*^9}, {
  3.815055482313347*^9, 
  3.815055511004813*^9}},ExpressionUUID->"3a591480-906d-4d3e-8831-\
dae7b1319593"],

Cell[BoxData[
 StyleBox[
  RowBox[{"n", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       SubscriptBox["z", "c"], 
       SubscriptBox["S", "n"]}], "CI"], ")"}], "2"]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.815055518274313*^9, 
  3.815055524842072*^9}},ExpressionUUID->"ed2f7faa-ab26-45e6-9b44-\
45ee8dd3dde6"],

Cell["\<\

Note that on both eqs, n will increase if :
- CI decreases (i.e. we require greater precision)
- \[Sigma] increases (i.e. there\[CloseCurlyQuote]s more dispersion in the \
population)
- \[Alpha] decreases (i.e. we require greater accuracy)\
\>", "Text",
 CellChangeTimes->{{3.815055567568411*^9, 3.815055613353799*^9}, {
   3.815056050663411*^9, 3.8150561100649033`*^9}, 
   3.8150561749348707`*^9},ExpressionUUID->"0ef5ca90-cc5a-4475-9669-\
a6c7e1e95700"],

Cell[TextData[{
 StyleBox["\n\n\nExample (Confidence Intervals)\n\n",
  FontVariations->{"Underline"->True}],
 "You want to rent an unfurnished one-bedroom apartment in Durham, NC next \
year. \nThe mean monthly rent for a random sample of 60 apartments advertised \
on Craig\[CloseCurlyQuote]s List is $1000.\nAssume a population standard \
deviation of $200. Construct a 95% confidence interval."
}], "Text",
 CellChangeTimes->{{3.814445233338334*^9, 3.8144452377910423`*^9}, {
   3.814445340638192*^9, 3.814445382489195*^9}, {3.814706989606207*^9, 
   3.814706996355283*^9}, 3.814788934195853*^9, 3.815050747864232*^9, 
   3.81505229224224*^9},ExpressionUUID->"d86cd1d7-2475-45de-b0b9-\
0bc9851029d5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "\[Sigma]", ",", "n", ",", "\[Alpha]", ",", "Z"}], "]"}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x", "=", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Sigma]", "=", "200"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "60"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"95", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Z", "=", 
    RowBox[{"Abs", "[", 
     RowBox[{"InverseCDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Confidence Interval->\>\"", ",", 
    RowBox[{"x", "-", 
     RowBox[{"Z", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}], ",", " ", 
    RowBox[{"x", "+", 
     RowBox[{"Z", 
      FractionBox["\[Sigma]", 
       SqrtBox["n"]]}]}]}], "}"}], "//", "N"}]}], "Input",
 CellChangeTimes->{{3.814445494247807*^9, 3.814445571445672*^9}, {
  3.814446979405529*^9, 3.8144471572454233`*^9}, {3.814447191405355*^9, 
  3.814447221350397*^9}, {3.814455320482925*^9, 
  3.8144553335963163`*^9}},ExpressionUUID->"f0e7df27-a963-431f-bb7a-\
ecd4457cda5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Confidence Interval->\"\>", ",", "949.3939475247336`", ",", 
   "1050.6060524752663`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814447125580186*^9, 3.814447221927051*^9}, {
   3.814455329246766*^9, 3.814455335048254*^9}, 3.814626553883545*^9, 
   3.814713450607028*^9, 3.814729439371808*^9, 3.814729835972221*^9, 
   3.814784172017272*^9, 3.81478525977884*^9, 3.81478686799932*^9, 
   3.814787175476338*^9, 3.814787243296886*^9, 3.8147905643149767`*^9, 
   3.8147991453027277`*^9, 3.81479923352499*^9, 3.814803511494011*^9, 
   3.814808751044232*^9, 3.8148160219830093`*^9, 3.814817037104136*^9, 
   3.8148172006298857`*^9, 3.814817935795857*^9, 3.814818377211893*^9, 
   3.814819918494832*^9, 3.814962874618265*^9, 3.814964269282496*^9, 
   3.814965660150331*^9, 3.814968796551126*^9, 3.81498231513489*^9, 
   3.814982431357367*^9, 3.814986503909247*^9, 3.8149866453231707`*^9, 
   3.8149880334215097`*^9, 3.8150454786292343`*^9, 3.815048175598332*^9, 
   3.815049097185501*^9, 3.8150535909883347`*^9, 3.815056185184108*^9, 
   3.815134395018661*^9, 3.8151351571208143`*^9, 3.815135499481222*^9, 
   3.81513632550353*^9, 3.815136644067997*^9, 3.8151366956984987`*^9, 
   3.8151368119346447`*^9, 3.8151370395619707`*^9, 3.81513716820455*^9, 
   3.815137373038262*^9, 3.815137520473703*^9, 3.8151375970387897`*^9, 
   3.815138431024562*^9, 
   3.815138688638132*^9},ExpressionUUID->"289b22f7-d460-4a7c-899d-\
ef2a148d4109"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Estimating the Monte Carlo Error \
\>", "Title",
 CellChangeTimes->{{3.8150480348617477`*^9, 3.815048068229021*^9}, {
  3.8150481541796913`*^9, 3.815048158139503*^9}, {3.815048747637867*^9, 
  3.815048747975444*^9}, {3.8150599850654173`*^9, 
  3.815060029009445*^9}},ExpressionUUID->"05cc71e5-afc3-4fb6-bc97-\
30e431b1781e"],

Cell["\<\

Let\[CloseCurlyQuote]s say we have this function to integrate over (0,\[Pi])\
\>", "Text",
 CellChangeTimes->{{3.814617472321447*^9, 3.814617510677874*^9}, {
   3.814620739477894*^9, 3.814620755769981*^9}, {3.814620805922974*^9, 
   3.8146208135951843`*^9}, 3.8146999682989817`*^9, {3.81504806168255*^9, 
   3.815048066541924*^9}},ExpressionUUID->"1a485541-cb74-4765-ac56-\
570c61fde0ac"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "f", ",", "x", ",", "a", ",", "b", ",", " ", "w", ",", " ", "n", ",", " ", 
    "tValue", ",", " ", "eValue"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    FractionBox["2", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], ")"}], " ", "\[Pi]"}]], "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{"2", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["25", "2"]}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "x"}], ")"}], "2"]}]]}]}], 
     RowBox[{"10", " ", 
      SqrtBox[
       RowBox[{"2", " ", "\[Pi]"}]]}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", "\[Pi]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"b", "-", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tValue", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<True value\>\"", ",", "tValue"}], "}"}]}], "Input",
 CellChangeTimes->{{3.8146176093648653`*^9, 3.814617704650298*^9}, {
   3.8146202377304497`*^9, 3.814620238178534*^9}, 3.814620571163855*^9, {
   3.8146206759396133`*^9, 3.8146207217971697`*^9}, {3.8146208270270853`*^9, 
   3.814620845319744*^9}, {3.814621552205241*^9, 3.814621595448997*^9}, {
   3.8146220050610657`*^9, 3.814622019439126*^9}, {3.814622192375125*^9, 
   3.8146221941959*^9}, {3.8149706355728617`*^9, 
   3.814970637349678*^9}},ExpressionUUID->"e70eb4f1-9b08-41c9-82de-\
a95e522fe42b"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1:eJw1mWk8lP0Xxu2NpJAsKUUppFLJrmseyZanhaKyVEoLskWIkkgqSYqk7Hui
7FvWIuvcaiZEi2UMMrayK/3v58X/1by4P3N+9zm/63zPdT63jK2zqR0XBwdH
IScHx3+/3JVLaX27Xff83bYia8dJBh7+tMqLDH8Fmd4n5933M6BVa7xU93IV
hJu/pYUsZcDl6oHTeS716Ojoy5VKp+NSsV0o14ZWLJRsXcyQp4MxaMSfZsuA
35fBkKqbH3F3+zRH4fEOyA9+e+jT9gGuW+ojqlK+QMByucytVR8wf8Yh+6tT
Nz7EGPaX2bbCttz8UNi5Xnh6TWwRfE3gzASjqiqYCZVv8abXhmgIUS5yTg1i
4c9CYZZ7Og1cVUVqgVcHsdfnSXnqRxqEFffTvkf9wI5cB6/HIGAYp5s0Hs5G
6pPBiPJAAuJjzfp+RaOY/LPnwh9VAtHvSzm5L45D61UB56HfLdBe+8/f9Wcn
oFnEvKgw24Qt3ULMa+4/4WCt++C1eAOy0kUuFLj9QqZM+n0VhTr4frOmbwma
RLB9zcZNCm/hqq2+P/bxFDL+FuzZ/aoK83F6tsNh03j7FUtoleVodYk+5Zk4
A+9BDutrTaXQMJBd/Jowi6DKkLRzRcVo2KeRTn0+h3AZD7ceySKk5DzV6M2c
x1877amE5AKs2qBkb5OxgNOuUT7+7vn4yEm5KfnmN5h3i79PG+ehgHI5tbXh
D7wnlwv9i1worRKyt61dBO/Y3ajPFjkYC50W3dX2F7lfLTSdnF5jw+3b253t
OahbqTISYgav0Huiq1N3gIMqmmYjKUXPgmE/fa7AiZMaKjFYInziJbzc7C6I
jXBSN+m/DDIRzsSBwmfGYle4qArOEeILbzMw+tvel3uai8pj8j36TXw6Etr9
850uc1PlriRn3HychvkLOqe8F7ipZZHeRV4BqVj756Gl61Ueqq6Me9KOxylg
GdxrpPDwUv1KquRD45PxdlMzpO/xUi3WyQRzVSXBnpLKI8PPR9VmTWZnzCei
KH6jztuHfNS4A8+ZI8qJoGlp15oKL6GyDOSaDfwSMGv/zOxU6BJqZ667v2tn
POoPxR0VFKNQ03+WXjHdEQ9bDe20tMcU6p+zh7yXqMdhh1bG/gUZfqqjXNvm
st8xMHWU7IwKj8PTmDRxnGDgO6ds0YBFMeR1vu69ocxAW1xzwbzrOxgnReUk
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
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJxF1Xe8jgUYBuBjZs/srYyQlb33bDlmtkMyz7HJ3rKzo4RsLdEeikJRibQn
RaFJtJDr+fmjP67ffT/P+53v+847zimRlJKYnDohISEVz6f6P6vK52QrHuMX
cw35IFv0L7lZn8wwfRXvkcecQmu9N3N4jXR2vaiiV6YSFbmVCpSnHLdQljKU
plR8DjdRkhIUpxhFKUJhCtGKXszmVdL6vJ4U1FvSk1m8Qhr7HhTQW9CDmbxM
avvu5NdTWMm73GiXTHO9OzN4Kc6dXTfy6cms4DC57YbSTO/GdF5MuH6yu5JX
HcpyDpHLbghN9a5M4wX+4x77PPEd4n1pEjumxvXiKl28JpccwjLeIafdYBrH
cabEdeUKne1zysEs5W1y2A2ikb6Oj+Icm8fSWT8R10ifEddef5bLdDLnkD9T
XV/MZv2LuHb6pHhf/XRcd/0Bluh15QoO6tnlQBrqzeU6zupV5QIe1RvIhziu
b5GFGUMn8644d6zlW/MOWZbp8fnmp2VtlrHbvFn+KzvK7PG7yJZs4CfzE7Ia
i9hkbiTX8Hnci3JifF/9VNzH+px4PvQDZNMH0EBfy4dxj5pH01GfGN+Xf+hg
l00OYDH7yWp3H/XjOBN4hr9pb59VbuSzeCbME+L1+vdU0GfH99bfIoven3r6
Garo83lEry9XcUwvKEfRPj5LNonX8I15uyzDNMabn5K1WMpO8yb5l0yUWeRu
2YL1nDM/Lm9jYfw9Me+M68xqPjVvlcXjveO7mpvF9eY7vbycFT+r15HLeVPP
LO+lrv4jlfV5PKwfpYA+kkT9a0rrU7k/7gX+pJ05s9zAJxSL4/G++gL2kcnc
jzr6Gj4gv3kE7fRxcT64xN12mWQ/5rOXjHZ9496L44zlSS5yl31GWSs6Y+K+
4w/udCyDvIH01Iwdo+N8coE7vCadrBGdUXHfc57bHUsr+zKPN8hgl0T1OM7I
uLb8Tlv7NDKJubwen23XJ54DfTVHyGceTlt9BNv4jTZ28b9kPR9T1Dwufl4/
STl9Zjz7+p74nfTecV/oP1BJnxvPt15PruR9Pa8cRhu9cVxfvorPlaWYEt8n
zqmsyRK2xvMhf5Wt5TVmNcOx
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
        LineBox[CompressedData["
1:eJwl1WWYVlUYBdAZOgTprqG7u6TLBsVGQMUmLBRFVEARRMEAVERFRBpBsBUL
u7u7E7tj7ccfa/Y+77nf3G9uQNHEKaMnFxYUFGz3IznSj+/kTfIWuVj2YCPT
rGfJZqzhHetr5UBG6VNlDZ7Vl8i+LNMvlh34TO/CeL0U9+vzmKO35kN9Amfq
DXhVv4FijLLeJddwCnsyzawmz+lX0zWfty7NjpyXiRTP8Wbfy7Wcyl50y755
GR7Q53MUJbJv9oNcx2nsTXdKptv7Ua7ndPahB6UoTZnMHPOT3MAZ7EtPyqbb
+1luZDr70SvnNi/Lg/oCjqZc9s1+kZtybdg/18CsFs/r19A7x1uX4yH9Eo7h
LOuGvKbfSPl83vpXuTn7nGfdnHf10bk+em1eyP3NddE78rneJ79XL8/D+pWy
Nwv1ubINH+kr5BAm6TNkozxPvJ57JffgVlZaL5RdWM9XuedyGLexW76T/E2u
ymfk5bInm5hhfb5swVres14uB7GFMbl/sg4v6ktlP5bnGstOfKH3ZVLOxyP6
pVyot+Vj/VjO1ot4I+8HFRhj/bvckn0OoF+ON6/ATv0yjqNi9s3+kFs5hwPz
DJnV5SX9OvrneOuKPKov4iK9HZ/ox+ezemPezP2XA1iV7y27soGvc8/lcLax
e84n/5Q35/rKK2QvNjPT+gLZknW8n+8jB7OVsXmWZT1W87L1MtmfFXnmZGe+
1K+XQ3Of831zbh7Tr5J9WKzPk+35VD+BmXoT3sr3y3XTu/GNXomx+l9yG+cy
27oVH+gH5V3S6/NKzs+A/F7rSjye54YTqZzjzf6W25nFwQzMvnllnsi14SSq
ZN/sH3l73hcOYRBVqUb1zBzzr7wjzySHMji/w7wKT+Z94WRqZN8s/+jemevO
YQzJvllVnsr1YjI1s29WyF352zmcodk3q8bT+hKmUCv7ZsW4W5/DEQyjdrp5
ce7Je8s4hlMn3bwE9+Yd4EhGUJd61KcBDWlEEY1pQlOa0ZwWtKQVrWlDW9rR
ng50pFPO4XwluS/POuMZmb/FrDrP6EuZmntv3ZS39dUs0rvzrb5Sjij8//+z
ztb/Adl2wvc=
         "]]},
       Annotation[#, "Charting`Private`Tag$2831#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.02928440504687073},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, Pi}, {0.02928440504687073, 0.3183101835281689}}, {{
     0, 3.141592653589793}, {0.02928440504687073, 0.3183101835281689}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81461760493645*^9, 3.814617705338539*^9}, 
   3.8146202392192383`*^9, 3.81462057344372*^9, {3.8146207125643787`*^9, 
   3.81462072642524*^9}, 3.8146207945744867`*^9, 3.8146208486599894`*^9, 
   3.814621155359634*^9, 3.814621535800291*^9, 3.814621595849925*^9, 
   3.814622020938939*^9, 3.8146221960486383`*^9, 3.8146222501242933`*^9, 
   3.814622788564518*^9, 3.814623074879572*^9, 3.814624742553776*^9, 
   3.8146250702568407`*^9, 3.814626555409684*^9, 3.814627408003875*^9, 
   3.814699976471468*^9, 3.814703036234146*^9, 3.814704880475318*^9, 
   3.8147104015014067`*^9, 3.814711327057371*^9, 3.8147119372911386`*^9, 
   3.8147129054830236`*^9, 3.814713450660413*^9, 3.814714569446877*^9, 
   3.814723268019034*^9, 3.814729439425068*^9, 3.8147298360422697`*^9, 
   3.814784172048359*^9, 3.8147852598165073`*^9, 3.814786868036097*^9, 
   3.814787175579668*^9, {3.814787243328412*^9, 3.8147872559736433`*^9}, 
   3.814790564353423*^9, 3.814799145354062*^9, 3.814799233560721*^9, 
   3.8148035115493526`*^9, 3.81480875109076*^9, 3.814816022029256*^9, 
   3.8148170371473627`*^9, 3.814817200675284*^9, 3.8148179358350887`*^9, 
   3.814818377251831*^9, 3.814819918531666*^9, 3.81487857464291*^9, 
   3.81496287466322*^9, 3.814964269313348*^9, 3.8149656601825523`*^9, 
   3.814968796586129*^9, 3.814970639330996*^9, 3.814982315172687*^9, 
   3.814982431397962*^9, 3.814986503942049*^9, 3.81498664536198*^9, 
   3.81498803346458*^9, 3.815045478677843*^9, 3.8150481756333847`*^9, 
   3.815049097237134*^9, 3.815053591023552*^9, 3.815056185218422*^9, 
   3.815059687496346*^9, 3.8151343950602417`*^9, 3.815135157159424*^9, 
   3.8151354995226603`*^9, 3.8151363255465727`*^9, 3.815136644108428*^9, 
   3.81513669573909*^9, 3.815136811975836*^9, 3.815137039602022*^9, 
   3.815137168251031*^9, 3.815137373084956*^9, 3.815137520539978*^9, 
   3.8151375970795107`*^9, 3.815138431073894*^9, 
   3.81513868869768*^9},ExpressionUUID->"6677ef83-d6cd-4a7b-9597-\
1eff5363e119"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True value\"\>", ",", "0.44190672658164354`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.81461760493645*^9, 3.814617705338539*^9}, 
   3.8146202392192383`*^9, 3.81462057344372*^9, {3.8146207125643787`*^9, 
   3.81462072642524*^9}, 3.8146207945744867`*^9, 3.8146208486599894`*^9, 
   3.814621155359634*^9, 3.814621535800291*^9, 3.814621595849925*^9, 
   3.814622020938939*^9, 3.8146221960486383`*^9, 3.8146222501242933`*^9, 
   3.814622788564518*^9, 3.814623074879572*^9, 3.814624742553776*^9, 
   3.8146250702568407`*^9, 3.814626555409684*^9, 3.814627408003875*^9, 
   3.814699976471468*^9, 3.814703036234146*^9, 3.814704880475318*^9, 
   3.8147104015014067`*^9, 3.814711327057371*^9, 3.8147119372911386`*^9, 
   3.8147129054830236`*^9, 3.814713450660413*^9, 3.814714569446877*^9, 
   3.814723268019034*^9, 3.814729439425068*^9, 3.8147298360422697`*^9, 
   3.814784172048359*^9, 3.8147852598165073`*^9, 3.814786868036097*^9, 
   3.814787175579668*^9, {3.814787243328412*^9, 3.8147872559736433`*^9}, 
   3.814790564353423*^9, 3.814799145354062*^9, 3.814799233560721*^9, 
   3.8148035115493526`*^9, 3.81480875109076*^9, 3.814816022029256*^9, 
   3.8148170371473627`*^9, 3.814817200675284*^9, 3.8148179358350887`*^9, 
   3.814818377251831*^9, 3.814819918531666*^9, 3.81487857464291*^9, 
   3.81496287466322*^9, 3.814964269313348*^9, 3.8149656601825523`*^9, 
   3.814968796586129*^9, 3.814970639330996*^9, 3.814982315172687*^9, 
   3.814982431397962*^9, 3.814986503942049*^9, 3.81498664536198*^9, 
   3.81498803346458*^9, 3.815045478677843*^9, 3.8150481756333847`*^9, 
   3.815049097237134*^9, 3.815053591023552*^9, 3.815056185218422*^9, 
   3.815059687496346*^9, 3.8151343950602417`*^9, 3.815135157159424*^9, 
   3.8151354995226603`*^9, 3.8151363255465727`*^9, 3.815136644108428*^9, 
   3.81513669573909*^9, 3.815136811975836*^9, 3.815137039602022*^9, 
   3.815137168251031*^9, 3.815137373084956*^9, 3.815137520539978*^9, 
   3.8151375970795107`*^9, 3.815138431073894*^9, 
   3.815138689273185*^9},ExpressionUUID->"bae21f4a-cf12-4d00-8596-\
74a41ce469e3"]
}, Open  ]],

Cell["Let\[CloseCurlyQuote]s calculate our estimated result with Monte \
Carlo.", "Text",
 CellChangeTimes->{{3.814622229068605*^9, 3.814622242230225*^9}, {
  3.814622287726307*^9, 3.814622298884644*^9}, {3.814622697946219*^9, 
  3.814622727534397*^9}, {3.814625051224574*^9, 
  3.814625059371086*^9}},ExpressionUUID->"61fa060a-8c8b-483d-8850-\
38e9a7275431"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{"10", "^", "4"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SeedRandom", "[", "12345", "]"}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "3", " ", "equivalent", " ", "ways", " ", "with", " ", "Mathematica"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", 
    FractionBox["1", "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "0"}], "n"], 
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}]}]}], "//", 
   "N"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "n"}], "}"}]}], "]"}], "*", 
   RowBox[{"(", 
    RowBox[{"w", "/", "n"}], ")"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ests", "=", " ", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "with", " ", "this", " ", "one", " ", "we", " ", "keep", " ", "the", " ", 
    "estimates", " ", "to", " ", "deal", " ", "with", " ", "its", " ", 
    "error", " ", "analysis"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "ests", "]"}]}], "Input",
 CellChangeTimes->{{3.8146208772276583`*^9, 3.814620877606268*^9}, {
  3.814620909174388*^9, 3.81462092199821*^9}, {3.814621240944147*^9, 
  3.814621248114485*^9}, {3.814622033437962*^9, 3.8146220393514223`*^9}, {
  3.814622075399358*^9, 3.814622090426839*^9}, {3.814622147843095*^9, 
  3.814622170771695*^9}, {3.8146227966362867`*^9, 3.814622830043621*^9}, {
  3.81462289950104*^9, 3.814622900137499*^9}, {3.81462319333011*^9, 
  3.814623194434738*^9}, {3.8146232922211227`*^9, 3.814623295797285*^9}, {
  3.8146234270602083`*^9, 3.814623431355063*^9}, {3.8146250616872387`*^9, 
  3.814625065446598*^9}, {3.814698363572802*^9, 3.8146983939039507`*^9}, {
  3.815048135799114*^9, 
  3.815048139126155*^9}},ExpressionUUID->"f9d1bfa4-dbad-4c7a-b449-\
a991f8b81373"],

Cell[BoxData["0.4373767994650234`"], "Output",
 CellChangeTimes->{{3.814620855246683*^9, 3.81462087830333*^9}, {
   3.814620910495644*^9, 3.814620927747315*^9}, 3.8146211577244987`*^9, 
   3.814621248853218*^9, 3.814621539437035*^9, {3.8146220456261463`*^9, 
   3.814622047440405*^9}, {3.814622093341626*^9, 3.814622096130163*^9}, {
   3.814622150156193*^9, 3.814622173662951*^9}, 3.814622252192512*^9, {
   3.814622802408032*^9, 3.814622834357402*^9}, 3.8146229013384533`*^9, 
   3.814623077107182*^9, 3.814623195866535*^9, 3.8146232969573298`*^9, 
   3.814623431911974*^9, 3.814624745830824*^9, 3.814625072958722*^9, {
   3.814626550148612*^9, 3.814626559622251*^9}, 3.814627409766753*^9, 
   3.8146999799911413`*^9, 3.814703040110873*^9, 3.814704883015842*^9, 
   3.814710403977249*^9, 3.814711329659831*^9, 3.814711939277869*^9, 
   3.814712907496003*^9, 3.814713451398286*^9, 3.814714571193036*^9, 
   3.814723270503851*^9, 3.814729440142033*^9, 3.814729836610189*^9, 
   3.8147841727040586`*^9, 3.814785260709174*^9, 3.8147868685613117`*^9, 
   3.8147871762548447`*^9, {3.814787243982984*^9, 3.8147872598202133`*^9}, 
   3.8147905649165154`*^9, 3.814799146107492*^9, 3.81479923412011*^9, 
   3.8148035121147203`*^9, 3.814808751808778*^9, 3.814816022566358*^9, 
   3.8148170376679173`*^9, 3.814817201244293*^9, 3.814817936393759*^9, 
   3.814818378064397*^9, 3.8148199190930023`*^9, 3.814878580556019*^9, 
   3.814962875423202*^9, 3.8149642699772377`*^9, 3.81496566086875*^9, 
   3.8149687972508698`*^9, 3.814982315697741*^9, 3.814982432078711*^9, 
   3.8149865046102533`*^9, 3.814986646050164*^9, 3.8149880340297613`*^9, 
   3.8150454793589687`*^9, 3.815048176168754*^9, 3.8150490978114433`*^9, 
   3.815053591570911*^9, 3.815056185774192*^9, 3.815059689681078*^9, 
   3.81513439577773*^9, 3.815135157792602*^9, 3.815135500217547*^9, 
   3.8151363262474947`*^9, 3.815136644839837*^9, 3.8151366963149843`*^9, 
   3.815136812556032*^9, 3.815137040190612*^9, 3.815137168917822*^9, 
   3.815137373654193*^9, 3.815137521106764*^9, 3.8151375976325283`*^9, 
   3.815138431652738*^9, 
   3.815138689633327*^9},ExpressionUUID->"bb922da6-e19a-43f8-803b-\
41aaf1c6926d"],

Cell[BoxData["0.4466791255949581`"], "Output",
 CellChangeTimes->{{3.814620855246683*^9, 3.81462087830333*^9}, {
   3.814620910495644*^9, 3.814620927747315*^9}, 3.8146211577244987`*^9, 
   3.814621248853218*^9, 3.814621539437035*^9, {3.8146220456261463`*^9, 
   3.814622047440405*^9}, {3.814622093341626*^9, 3.814622096130163*^9}, {
   3.814622150156193*^9, 3.814622173662951*^9}, 3.814622252192512*^9, {
   3.814622802408032*^9, 3.814622834357402*^9}, 3.8146229013384533`*^9, 
   3.814623077107182*^9, 3.814623195866535*^9, 3.8146232969573298`*^9, 
   3.814623431911974*^9, 3.814624745830824*^9, 3.814625072958722*^9, {
   3.814626550148612*^9, 3.814626559622251*^9}, 3.814627409766753*^9, 
   3.8146999799911413`*^9, 3.814703040110873*^9, 3.814704883015842*^9, 
   3.814710403977249*^9, 3.814711329659831*^9, 3.814711939277869*^9, 
   3.814712907496003*^9, 3.814713451398286*^9, 3.814714571193036*^9, 
   3.814723270503851*^9, 3.814729440142033*^9, 3.814729836610189*^9, 
   3.8147841727040586`*^9, 3.814785260709174*^9, 3.8147868685613117`*^9, 
   3.8147871762548447`*^9, {3.814787243982984*^9, 3.8147872598202133`*^9}, 
   3.8147905649165154`*^9, 3.814799146107492*^9, 3.81479923412011*^9, 
   3.8148035121147203`*^9, 3.814808751808778*^9, 3.814816022566358*^9, 
   3.8148170376679173`*^9, 3.814817201244293*^9, 3.814817936393759*^9, 
   3.814818378064397*^9, 3.8148199190930023`*^9, 3.814878580556019*^9, 
   3.814962875423202*^9, 3.8149642699772377`*^9, 3.81496566086875*^9, 
   3.8149687972508698`*^9, 3.814982315697741*^9, 3.814982432078711*^9, 
   3.8149865046102533`*^9, 3.814986646050164*^9, 3.8149880340297613`*^9, 
   3.8150454793589687`*^9, 3.815048176168754*^9, 3.8150490978114433`*^9, 
   3.815053591570911*^9, 3.815056185774192*^9, 3.815059689681078*^9, 
   3.81513439577773*^9, 3.815135157792602*^9, 3.815135500217547*^9, 
   3.8151363262474947`*^9, 3.815136644839837*^9, 3.8151366963149843`*^9, 
   3.815136812556032*^9, 3.815137040190612*^9, 3.815137168917822*^9, 
   3.815137373654193*^9, 3.815137521106764*^9, 3.8151375976325283`*^9, 
   3.815138431652738*^9, 
   3.81513868967267*^9},ExpressionUUID->"6b7e2586-3c5e-4c20-8ad4-\
91a0589a99c8"],

Cell[BoxData["0.4405444897563033`"], "Output",
 CellChangeTimes->{{3.814620855246683*^9, 3.81462087830333*^9}, {
   3.814620910495644*^9, 3.814620927747315*^9}, 3.8146211577244987`*^9, 
   3.814621248853218*^9, 3.814621539437035*^9, {3.8146220456261463`*^9, 
   3.814622047440405*^9}, {3.814622093341626*^9, 3.814622096130163*^9}, {
   3.814622150156193*^9, 3.814622173662951*^9}, 3.814622252192512*^9, {
   3.814622802408032*^9, 3.814622834357402*^9}, 3.8146229013384533`*^9, 
   3.814623077107182*^9, 3.814623195866535*^9, 3.8146232969573298`*^9, 
   3.814623431911974*^9, 3.814624745830824*^9, 3.814625072958722*^9, {
   3.814626550148612*^9, 3.814626559622251*^9}, 3.814627409766753*^9, 
   3.8146999799911413`*^9, 3.814703040110873*^9, 3.814704883015842*^9, 
   3.814710403977249*^9, 3.814711329659831*^9, 3.814711939277869*^9, 
   3.814712907496003*^9, 3.814713451398286*^9, 3.814714571193036*^9, 
   3.814723270503851*^9, 3.814729440142033*^9, 3.814729836610189*^9, 
   3.8147841727040586`*^9, 3.814785260709174*^9, 3.8147868685613117`*^9, 
   3.8147871762548447`*^9, {3.814787243982984*^9, 3.8147872598202133`*^9}, 
   3.8147905649165154`*^9, 3.814799146107492*^9, 3.81479923412011*^9, 
   3.8148035121147203`*^9, 3.814808751808778*^9, 3.814816022566358*^9, 
   3.8148170376679173`*^9, 3.814817201244293*^9, 3.814817936393759*^9, 
   3.814818378064397*^9, 3.8148199190930023`*^9, 3.814878580556019*^9, 
   3.814962875423202*^9, 3.8149642699772377`*^9, 3.81496566086875*^9, 
   3.8149687972508698`*^9, 3.814982315697741*^9, 3.814982432078711*^9, 
   3.8149865046102533`*^9, 3.814986646050164*^9, 3.8149880340297613`*^9, 
   3.8150454793589687`*^9, 3.815048176168754*^9, 3.8150490978114433`*^9, 
   3.815053591570911*^9, 3.815056185774192*^9, 3.815059689681078*^9, 
   3.81513439577773*^9, 3.815135157792602*^9, 3.815135500217547*^9, 
   3.8151363262474947`*^9, 3.815136644839837*^9, 3.8151366963149843`*^9, 
   3.815136812556032*^9, 3.815137040190612*^9, 3.815137168917822*^9, 
   3.815137373654193*^9, 3.815137521106764*^9, 3.8151375976325283`*^9, 
   3.815138431652738*^9, 
   3.815138689731884*^9},ExpressionUUID->"b78f413b-57c4-4475-b20c-\
a14675b6e7ef"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Using Simulation Studies \
to Evaluate Statistical Methods]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\nNow, let\[CloseCurlyQuote]s deal with errors aka ",
 StyleBox["Monte Carlo Analysis",
  FontVariations->{"Underline"->True}],
 " that will return a serie of Monte Carlo statistics (MCS) of interest. \n\n\
Constructing MCSs is simply a matter of organizing a \
\[OpenCurlyDoubleQuote]generate\[Dash]analyze\[Dash]summarize\
\[CloseCurlyDoubleQuote] scheme so that particular datasets and analysis \
procedures can be emulated and studied over a wide number of random \
replications.\n\[LineSeparator]\nLet\[CloseCurlyQuote]s start by using \
Mathematica buildin StandardDeviation and Variance symbols for our list of \
estimates"
}], "Text",
 CellChangeTimes->{{3.814623328980545*^9, 3.814623389167898*^9}, {
  3.814623459165509*^9, 3.814623466252695*^9}, {3.814623713285989*^9, 
  3.814623719382345*^9}, {3.814706941300123*^9, 3.814706960332877*^9}, {
  3.8148115716696243`*^9, 3.814811680186942*^9}, {3.8150600363802547`*^9, 
  3.8150600366449347`*^9}},ExpressionUUID->"b4837a16-7303-4ac3-9adf-\
c780100d085a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Variance", "[", "ests", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "ests", "]"}]}], "Input",
 CellChangeTimes->{{3.8146256058987637`*^9, 3.81462561136383*^9}, 
   3.814626084854681*^9, 3.814626292982193*^9, {3.814626347725687*^9, 
   3.8146263522078457`*^9}, 
   3.814714580466529*^9},ExpressionUUID->"047d3fb9-71d2-4f49-abe5-\
10290b84add2"],

Cell[BoxData["0.09879183546548587`"], "Output",
 CellChangeTimes->{
  3.814623450215363*^9, 3.8146247504570513`*^9, 3.814625079701577*^9, 
   3.814625611982642*^9, 3.814626097124463*^9, 3.8146262936452637`*^9, 
   3.814626353044992*^9, {3.814626548052969*^9, 3.8146265614638157`*^9}, 
   3.814699982173361*^9, 3.814703042895005*^9, 3.8147048853062897`*^9, 
   3.814710408702713*^9, 3.8147119451544437`*^9, 3.814712917360273*^9, 
   3.8147134515133657`*^9, 3.8147145813159*^9, 3.8147232724765377`*^9, 
   3.814729440257102*^9, 3.8147298367251062`*^9, 3.814784172828167*^9, 
   3.8147852608392963`*^9, 3.8147868687116528`*^9, 3.814787176409438*^9, {
   3.8147872441064053`*^9, 3.814787261760325*^9}, 3.8147905650347853`*^9, 
   3.814799146242045*^9, 3.814799234239106*^9, 3.8148035122368593`*^9, 
   3.814808751936944*^9, 3.814816022723669*^9, 3.814817037811748*^9, 
   3.814817201366544*^9, 3.814817936512788*^9, 3.81481837819201*^9, 
   3.814819919207613*^9, 3.8148785842877493`*^9, 3.814962875571209*^9, 
   3.8149642700987797`*^9, 3.814965660994843*^9, 3.8149687973764753`*^9, 
   3.814982315850359*^9, 3.81498243220616*^9, 3.814986504736414*^9, 
   3.814986646177593*^9, 3.814988034145092*^9, 3.8150454794895067`*^9, 
   3.815048176311795*^9, 3.815049097936446*^9, 3.815053591688841*^9, 
   3.815056185891494*^9, 3.8150596938190193`*^9, 3.815134395899612*^9, 
   3.8151351579051533`*^9, 3.815135500350726*^9, 3.815136326381757*^9, 
   3.8151366449647293`*^9, 3.8151366964406767`*^9, 3.8151368126813307`*^9, 
   3.815137040314349*^9, 3.8151371690446653`*^9, 3.815137373783935*^9, 
   3.815137521222989*^9, 3.8151375977493887`*^9, 3.81513843177816*^9, 
   3.8151386897521*^9},ExpressionUUID->"d31259c3-6785-47ce-9d6c-b0757b4cbe6f"],

Cell[BoxData["0.3143116852194424`"], "Output",
 CellChangeTimes->{
  3.814623450215363*^9, 3.8146247504570513`*^9, 3.814625079701577*^9, 
   3.814625611982642*^9, 3.814626097124463*^9, 3.8146262936452637`*^9, 
   3.814626353044992*^9, {3.814626548052969*^9, 3.8146265614638157`*^9}, 
   3.814699982173361*^9, 3.814703042895005*^9, 3.8147048853062897`*^9, 
   3.814710408702713*^9, 3.8147119451544437`*^9, 3.814712917360273*^9, 
   3.8147134515133657`*^9, 3.8147145813159*^9, 3.8147232724765377`*^9, 
   3.814729440257102*^9, 3.8147298367251062`*^9, 3.814784172828167*^9, 
   3.8147852608392963`*^9, 3.8147868687116528`*^9, 3.814787176409438*^9, {
   3.8147872441064053`*^9, 3.814787261760325*^9}, 3.8147905650347853`*^9, 
   3.814799146242045*^9, 3.814799234239106*^9, 3.8148035122368593`*^9, 
   3.814808751936944*^9, 3.814816022723669*^9, 3.814817037811748*^9, 
   3.814817201366544*^9, 3.814817936512788*^9, 3.81481837819201*^9, 
   3.814819919207613*^9, 3.8148785842877493`*^9, 3.814962875571209*^9, 
   3.8149642700987797`*^9, 3.814965660994843*^9, 3.8149687973764753`*^9, 
   3.814982315850359*^9, 3.81498243220616*^9, 3.814986504736414*^9, 
   3.814986646177593*^9, 3.814988034145092*^9, 3.8150454794895067`*^9, 
   3.815048176311795*^9, 3.815049097936446*^9, 3.815053591688841*^9, 
   3.815056185891494*^9, 3.8150596938190193`*^9, 3.815134395899612*^9, 
   3.8151351579051533`*^9, 3.815135500350726*^9, 3.815136326381757*^9, 
   3.8151366449647293`*^9, 3.8151366964406767`*^9, 3.8151368126813307`*^9, 
   3.815137040314349*^9, 3.8151371690446653`*^9, 3.815137373783935*^9, 
   3.815137521222989*^9, 3.8151375977493887`*^9, 3.81513843177816*^9, 
   3.815138689767747*^9},ExpressionUUID->"0d408d86-a111-4ef4-98a9-\
d36b45c85a51"]
}, Open  ]],

Cell[TextData[{
 "We know that  an estimate of the variance from Monte Carlo samples is given \
by the average of each sample\[CloseCurlyQuote]s error squared:\n",
 StyleBox["(where ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["x", "-"], "=", 
    RowBox[{"\[Mu]", "=", 
     RowBox[{
      SubscriptBox["\[Mu]", "X"], "=", 
      RowBox[{"true", " ", "mean", " ", "result"}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "0efcd24c-14cf-4b97-90c2-add6331d9eeb"],
 StyleBox[" and ",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    OverscriptBox["X", "^"], "n"], TraditionalForm]],
  FormatType->"TraditionalForm",
  FontSize->12,
  FontColor->GrayLevel[0.5],ExpressionUUID->
  "87110190-5ddb-4b7a-a346-fa024285253e"],
 StyleBox["=estimated mean)",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.8146234742857847`*^9, 3.8146234755916023`*^9}, {
  3.814623743794883*^9, 3.814623754479889*^9}, {3.814624412090173*^9, 
  3.814624414023505*^9}, {3.8146246153998613`*^9, 3.81462466838695*^9}, {
  3.8146247018891478`*^9, 3.814624723085058*^9}, {3.814626521335389*^9, 
  3.814626530828142*^9}},ExpressionUUID->"c18f279f-d9cb-4acf-938c-\
10e67650968b"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "N"], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["x", "^"], "n"], "-", 
        OverscriptBox["x", "-"]}], ")"}], "2"]}], "N"]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814623771243723*^9, 3.814623798877067*^9}, {
   3.814624428291498*^9, 3.814624564843781*^9}, {3.814624603542341*^9, 
   3.814624610564024*^9}, {3.814700746463999*^9, 3.8147007472053843`*^9}, 
   3.814701019319252*^9},ExpressionUUID->"f0afe642-6fb0-4eb7-a94e-\
2be556ba4fe6"],

Cell["\<\
This is the Mean Squared Error (MSE) and the Monte Carlo Standard Error based \
on that is\
\>", "Text",
 CellChangeTimes->{{3.814700552554248*^9, 
  3.814700583493195*^9}},ExpressionUUID->"018318ee-3fb7-487d-8a12-\
31e36a0cb5d5"],

Cell[BoxData[
 StyleBox[
  RowBox[{"MCSE", "=", 
   SqrtBox[
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SubscriptBox[
             OverscriptBox["x", "^"], "n"], "-", 
            OverscriptBox["x", "-"]}], ")"}], "2"], "-", "MSE"}], ")"}], 
       "2"]}], 
     RowBox[{"N", 
      RowBox[{"(", 
       RowBox[{"N", "-", "1"}], ")"}]}]]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814700598231078*^9, 3.8147006533337507`*^9}, {
  3.814700767949988*^9, 
  3.814700803677479*^9}},ExpressionUUID->"c09ec73d-af82-4c76-922e-\
c298a767c94b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sqr", ",", "MSE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sqr", "=", 
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ests", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], "        ", 
  RowBox[{"(*", " ", 
   RowBox[{"numerator", " ", "above"}], " ", "*)"}]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"MSE", "=", 
   SqrtBox[
    RowBox[{"sqr", "/", "n"}]]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MCSE", " ", "=", " ", 
  SqrtBox[
   FractionBox[
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ests", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
         "-", "MSE"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
    RowBox[{"n", "*", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}]]]}]}], "Input",
 CellChangeTimes->{{3.814622807253315*^9, 3.814622813213099*^9}, {
   3.814622917185997*^9, 3.814622963265872*^9}, {3.814622994834957*^9, 
   3.814623007614064*^9}, {3.81462304575316*^9, 3.814623047506102*^9}, {
   3.814623149140287*^9, 3.814623174879376*^9}, {3.81462330022685*^9, 
   3.814623307785654*^9}, {3.814623436690432*^9, 3.814623447223632*^9}, {
   3.814624532669403*^9, 3.81462453318395*^9}, {3.814626243842533*^9, 
   3.81462633869882*^9}, {3.814626395624103*^9, 3.814626451407258*^9}, {
   3.814700880740971*^9, 3.814700945697587*^9}, {3.8147009771082687`*^9, 
   3.8147009898001823`*^9}, {3.814701141450179*^9, 3.814701147952792*^9}, {
   3.814710389500284*^9, 3.814710391680114*^9}, {3.814711950507372*^9, 
   3.8147119507527933`*^9}, 3.8147119873375387`*^9, 3.814723258842804*^9, {
   3.815059703368771*^9, 3.8150597042216578`*^9}, {3.8150597432174673`*^9, 
   3.815059743777619*^9}},ExpressionUUID->"fe38d486-963e-4716-b8fc-\
ac3ded68c3a3"],

Cell[BoxData["0.31429892136484905`"], "Output",
 CellChangeTimes->{{3.814623153310655*^9, 3.8146231812159023`*^9}, 
   3.81462330527861*^9, 3.8146234384050713`*^9, 3.814624753222343*^9, 
   3.8146250814557657`*^9, 3.814626247675128*^9, {3.8146262794421864`*^9, 
   3.814626287321225*^9}, {3.8146263286159277`*^9, 3.814626339247484*^9}, 
   3.814626414015903*^9, 3.814626453101194*^9, {3.814626544229293*^9, 
   3.814626565921399*^9}, 3.8146999854525948`*^9, {3.814700882916806*^9, 
   3.8147008987836018`*^9}, 3.814700992353568*^9, 3.814701149221855*^9, 
   3.814702988946134*^9, 3.814703046816544*^9, 3.814704888818482*^9, 
   3.814710410305338*^9, 3.814711406334036*^9, {3.814711930113168*^9, 
   3.814711952028455*^9}, 3.8147119898280563`*^9, 3.8147129184502497`*^9, 
   3.8147134515751677`*^9, 3.814714586018097*^9, {3.81472325995971*^9, 
   3.814723277101449*^9}, 3.8147294403085003`*^9, 3.814729836772647*^9, 
   3.814784172848686*^9, 3.814785260873678*^9, 3.814786868730887*^9, 
   3.814787176444892*^9, {3.814787244125986*^9, 3.814787266708913*^9}, 
   3.814790565071224*^9, 3.814799146277111*^9, 3.8147992342764997`*^9, 
   3.814803512275738*^9, 3.8148087519777393`*^9, 3.8148160227456417`*^9, 
   3.814817037830283*^9, 3.814817201397684*^9, 3.81481793654983*^9, 
   3.81481837821497*^9, 3.814819919242086*^9, 3.81487858566462*^9, 
   3.814962875606503*^9, 3.814964270128355*^9, 3.814965661029476*^9, 
   3.8149687974068537`*^9, 3.814982315870446*^9, 3.814982432240315*^9, 
   3.81498650476668*^9, 3.8149866462093687`*^9, 3.814988034172518*^9, 
   3.815045479540962*^9, 3.815048176328822*^9, 3.8150490979618597`*^9, 
   3.815053591720625*^9, 3.815056185922392*^9, {3.815059696855192*^9, 
   3.81505970515691*^9}, 3.8150597446449347`*^9, 3.815134395920776*^9, 
   3.8151351579301643`*^9, 3.8151355003807917`*^9, 3.815136326411405*^9, 
   3.815136644997568*^9, 3.815136696476468*^9, 3.8151368127159367`*^9, 
   3.81513704034402*^9, 3.815137169075304*^9, 3.815137373819375*^9, 
   3.815137521257433*^9, 3.815137597776513*^9, 3.815138431812072*^9, 
   3.8151386897874527`*^9},ExpressionUUID->"a6882010-dc36-4f32-8f6e-\
2b85f5c57916"],

Cell[BoxData["0.002275764278144434`"], "Output",
 CellChangeTimes->{{3.814623153310655*^9, 3.8146231812159023`*^9}, 
   3.81462330527861*^9, 3.8146234384050713`*^9, 3.814624753222343*^9, 
   3.8146250814557657`*^9, 3.814626247675128*^9, {3.8146262794421864`*^9, 
   3.814626287321225*^9}, {3.8146263286159277`*^9, 3.814626339247484*^9}, 
   3.814626414015903*^9, 3.814626453101194*^9, {3.814626544229293*^9, 
   3.814626565921399*^9}, 3.8146999854525948`*^9, {3.814700882916806*^9, 
   3.8147008987836018`*^9}, 3.814700992353568*^9, 3.814701149221855*^9, 
   3.814702988946134*^9, 3.814703046816544*^9, 3.814704888818482*^9, 
   3.814710410305338*^9, 3.814711406334036*^9, {3.814711930113168*^9, 
   3.814711952028455*^9}, 3.8147119898280563`*^9, 3.8147129184502497`*^9, 
   3.8147134515751677`*^9, 3.814714586018097*^9, {3.81472325995971*^9, 
   3.814723277101449*^9}, 3.8147294403085003`*^9, 3.814729836772647*^9, 
   3.814784172848686*^9, 3.814785260873678*^9, 3.814786868730887*^9, 
   3.814787176444892*^9, {3.814787244125986*^9, 3.814787266708913*^9}, 
   3.814790565071224*^9, 3.814799146277111*^9, 3.8147992342764997`*^9, 
   3.814803512275738*^9, 3.8148087519777393`*^9, 3.8148160227456417`*^9, 
   3.814817037830283*^9, 3.814817201397684*^9, 3.81481793654983*^9, 
   3.81481837821497*^9, 3.814819919242086*^9, 3.81487858566462*^9, 
   3.814962875606503*^9, 3.814964270128355*^9, 3.814965661029476*^9, 
   3.8149687974068537`*^9, 3.814982315870446*^9, 3.814982432240315*^9, 
   3.81498650476668*^9, 3.8149866462093687`*^9, 3.814988034172518*^9, 
   3.815045479540962*^9, 3.815048176328822*^9, 3.8150490979618597`*^9, 
   3.815053591720625*^9, 3.815056185922392*^9, {3.815059696855192*^9, 
   3.81505970515691*^9}, 3.8150597446449347`*^9, 3.815134395920776*^9, 
   3.8151351579301643`*^9, 3.8151355003807917`*^9, 3.815136326411405*^9, 
   3.815136644997568*^9, 3.815136696476468*^9, 3.8151368127159367`*^9, 
   3.81513704034402*^9, 3.815137169075304*^9, 3.815137373819375*^9, 
   3.815137521257433*^9, 3.815137597776513*^9, 3.815138431812072*^9, 
   3.815138689802411*^9},ExpressionUUID->"bb63461d-9c4f-42a3-8330-\
e1d0ce4d5ec5"]
}, Open  ]],

Cell["\<\
If we don\[CloseCurlyQuote]t have the true outcome (most likely) we can use a \
fixed estimate as mean. 
Because we lose a degree of freedom in using the estimate as opposed to use \
the true value, we use N=N-1\
\>", "Text",
 CellChangeTimes->{{3.8146247864222918`*^9, 3.814624879256024*^9}, {
  3.814625097980783*^9, 
  3.814625110038846*^9}},ExpressionUUID->"0800c14e-f78c-4c89-bbdf-\
468951c45543"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SuperscriptBox["\[Sigma]", "2"], "\[TildeTilde]", 
   FractionBox[
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"n", "=", "1"}], "N"], 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox[
        OverscriptBox["x", "^"], "n"], "-", 
       OverscriptBox["x", "^"]}], ")"}]}], 
    RowBox[{"N", "-", "1"}]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814623771243723*^9, 3.814623798877067*^9}, {
   3.814624428291498*^9, 3.814624564843781*^9}, {3.814624603542341*^9, 
   3.814624610564024*^9}, 3.8146249009078293`*^9, {3.814624987842485*^9, 
   3.814624987932189*^9}},ExpressionUUID->"c42c2e8d-3907-4d03-a3d3-\
43bef080c9ee"],

Cell["This is called \[OpenCurlyQuote]empirical standard error\
\[CloseCurlyQuote] (Empirical SE)", "Text",
 CellChangeTimes->{{3.814700039036126*^9, 3.814700065880754*^9}, {
  3.81470016557906*^9, 
  3.814700171744176*^9}},ExpressionUUID->"0a0117c6-ffde-4199-a4ab-\
921c2b626beb"],

Cell[BoxData[
 StyleBox[
  RowBox[{"\[Sigma]", "\[TildeTilde]", 
   SqrtBox[
    FractionBox[
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"n", "=", "1"}], "N"], 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["x", "^"], "n"], "-", 
        OverscriptBox["x", "^"]}], ")"}]}], 
     RowBox[{"N", "-", "1"}]]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814700073901054*^9, 
  3.814700083047578*^9}},ExpressionUUID->"5cb5a728-ed9d-4fe3-9c67-\
270f783a39fc"],

Cell["And the Monte Carlo standard error based on that is", "Text",
 CellChangeTimes->{{3.814700146677878*^9, 3.814700190575549*^9}, {
  3.814700242954542*^9, 
  3.814700243292087*^9}},ExpressionUUID->"57ad8f47-75be-4ab3-9746-\
73aa64d4a0a7"],

Cell[BoxData[
 StyleBox[
  RowBox[{"MCSE", "=", 
   FractionBox["EmpiricalSE", 
    SqrtBox[
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"N", "-", "1"}], ")"}]}]]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8147002012651453`*^9, 3.814700237173094*^9}, {
  3.814703989299362*^9, 
  3.814703992787072*^9}},ExpressionUUID->"022ddcd9-5c4d-4d45-9f81-\
6ab1bdda5608"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"a", "+", 
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eValue", "=", 
   RowBox[{"Mean", "[", "%", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ests", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "eValue"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]}], ")"}]}]], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"MCSE", " ", "=", " ", 
  RowBox[{"%", "/", 
   SqrtBox[
    RowBox[{"2", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]}]]}]}]}], "Input",
 CellChangeTimes->{{3.814623141153336*^9, 3.814623145111*^9}, {
  3.8146249237395983`*^9, 3.814624966469523*^9}, {3.81462500422834*^9, 
  3.8146250259342127`*^9}, {3.814700266807576*^9, 3.81470029412022*^9}, {
  3.81471201949034*^9, 
  3.814712031257251*^9}},ExpressionUUID->"d5c9df16-f09a-45ea-b62e-\
11f843277776"],

Cell[BoxData["0.3143132783893946`"], "Output",
 CellChangeTimes->{
  3.814623145634879*^9, {3.814624927873478*^9, 3.814624967540419*^9}, {
   3.814625018214761*^9, 3.814625026992647*^9}, 3.814625083153998*^9, 
   3.81462511672396*^9, 3.814626461817518*^9, {3.814626546000153*^9, 
   3.814626567594635*^9}, 3.814627418569941*^9, 3.814699986911565*^9, 
   3.8147002954726543`*^9, {3.814701048011826*^9, 3.814701054603345*^9}, {
   3.81470305136766*^9, 3.814703054671235*^9}, 3.8147038340069304`*^9, 
   3.8147048905353823`*^9, 3.814710416253539*^9, {3.814712022332583*^9, 
   3.814712033169077*^9}, 3.814712920959394*^9, 3.81471345165681*^9, 
   3.8147145895082483`*^9, 3.8147232793584347`*^9, 3.814729440416112*^9, 
   3.8147298368896646`*^9, 3.814784172922905*^9, 3.814785260956555*^9, 
   3.8147868687987823`*^9, 3.814787176551568*^9, {3.814787244194161*^9, 
   3.8147872698009243`*^9}, 3.814790565169682*^9, 3.8147991463720016`*^9, 
   3.814799234343638*^9, 3.8148035123815117`*^9, 3.8148087520775642`*^9, 
   3.8148160228412037`*^9, 3.814817037908102*^9, 3.814817201505444*^9, 
   3.814817936640946*^9, 3.81481837828185*^9, 3.814819919340221*^9, 
   3.814878588755637*^9, 3.814962875692932*^9, 3.814964270215988*^9, 
   3.8149656611041803`*^9, 3.814968797475007*^9, 3.8149823159414873`*^9, 
   3.814982432343377*^9, 3.8149865048435793`*^9, 3.814986646294856*^9, 
   3.8149880342696533`*^9, 3.8150454796130047`*^9, 3.8150481764085007`*^9, 
   3.815049098047768*^9, 3.815053591787724*^9, 3.815056185990127*^9, 
   3.815134395989519*^9, 3.815135158014286*^9, 3.815135500453683*^9, 
   3.815136326484315*^9, 3.815136645110901*^9, 3.8151366965536423`*^9, 
   3.8151368127891617`*^9, 3.815137040448221*^9, 3.815137169158609*^9, 
   3.815137373914649*^9, 3.815137521351613*^9, 3.815137597859226*^9, 
   3.815138431919799*^9, 
   3.8151386898722258`*^9},ExpressionUUID->"8efb43b7-96dc-4841-a86f-\
9c1bb89688a6"],

Cell[BoxData["0.002222641640521627`"], "Output",
 CellChangeTimes->{
  3.814623145634879*^9, {3.814624927873478*^9, 3.814624967540419*^9}, {
   3.814625018214761*^9, 3.814625026992647*^9}, 3.814625083153998*^9, 
   3.81462511672396*^9, 3.814626461817518*^9, {3.814626546000153*^9, 
   3.814626567594635*^9}, 3.814627418569941*^9, 3.814699986911565*^9, 
   3.8147002954726543`*^9, {3.814701048011826*^9, 3.814701054603345*^9}, {
   3.81470305136766*^9, 3.814703054671235*^9}, 3.8147038340069304`*^9, 
   3.8147048905353823`*^9, 3.814710416253539*^9, {3.814712022332583*^9, 
   3.814712033169077*^9}, 3.814712920959394*^9, 3.81471345165681*^9, 
   3.8147145895082483`*^9, 3.8147232793584347`*^9, 3.814729440416112*^9, 
   3.8147298368896646`*^9, 3.814784172922905*^9, 3.814785260956555*^9, 
   3.8147868687987823`*^9, 3.814787176551568*^9, {3.814787244194161*^9, 
   3.8147872698009243`*^9}, 3.814790565169682*^9, 3.8147991463720016`*^9, 
   3.814799234343638*^9, 3.8148035123815117`*^9, 3.8148087520775642`*^9, 
   3.8148160228412037`*^9, 3.814817037908102*^9, 3.814817201505444*^9, 
   3.814817936640946*^9, 3.81481837828185*^9, 3.814819919340221*^9, 
   3.814878588755637*^9, 3.814962875692932*^9, 3.814964270215988*^9, 
   3.8149656611041803`*^9, 3.814968797475007*^9, 3.8149823159414873`*^9, 
   3.814982432343377*^9, 3.8149865048435793`*^9, 3.814986646294856*^9, 
   3.8149880342696533`*^9, 3.8150454796130047`*^9, 3.8150481764085007`*^9, 
   3.815049098047768*^9, 3.815053591787724*^9, 3.815056185990127*^9, 
   3.815134395989519*^9, 3.815135158014286*^9, 3.815135500453683*^9, 
   3.815136326484315*^9, 3.815136645110901*^9, 3.8151366965536423`*^9, 
   3.8151368127891617`*^9, 3.815137040448221*^9, 3.815137169158609*^9, 
   3.815137373914649*^9, 3.815137521351613*^9, 3.815137597859226*^9, 
   3.815138431919799*^9, 
   3.8151386898802547`*^9},ExpressionUUID->"14d06516-9102-44e9-b9ab-\
d4585af79ba6"]
}, Open  ]],

Cell["\<\
BTW, if we wanna compare two error returns (from the same error model), we \
can use this formula\
\>", "Text",
 CellChangeTimes->{{3.8147030697022667`*^9, 3.814703096678513*^9}, {
  3.814703175407263*^9, 3.814703177363076*^9}, {3.81470332802134*^9, 
  3.814703343569803*^9}, {3.8147033796397543`*^9, 3.814703388752613*^9}, {
  3.8147037674933863`*^9, 3.814703768301929*^9}, {3.814703867506575*^9, 
  3.814703876327611*^9}, {3.814703913854883*^9, 3.814703923980554*^9}, {
  3.814704266432679*^9, 3.8147042761287746`*^9}, {3.814704380483837*^9, 
  3.814704382643076*^9}},ExpressionUUID->"5bc309b0-59aa-4921-811d-\
41fd1c5c3fe7"],

Cell[BoxData[
 StyleBox[
  RowBox[{"100", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        SubscriptBox["MCSE", "1"], 
        SubscriptBox["MCSE", "2"]], ")"}], "2"], "-", "1"}], ")"}]}],
  FontColor->GrayLevel[0.5]]], "DisplayFormula",
 CellChangeTimes->{{3.8147031925970783`*^9, 
  3.814703244795533*^9}},ExpressionUUID->"e8cd36ab-a168-4aa3-8af8-\
753fc8c9d0b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantity", "[", 
  RowBox[{
   RowBox[{"100", "*", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"0.0021999", "/", "0.0021947"}], ")"}], "2"], "-", "1"}], 
     ")"}]}], ",", "\"\<Percent\>\""}], "]"}]], "Input",
 CellChangeTimes->{{3.8147032579145412`*^9, 3.814703296929611*^9}, {
   3.814703471240501*^9, 3.814703479155149*^9}, 3.814703718667639*^9, {
   3.814703842043385*^9, 3.814703844097061*^9}, {3.81470388935821*^9, 
   3.814703897589409*^9}, 3.8147041898403187`*^9, {3.8147149067641172`*^9, 
   3.814714908606432*^9}, {3.814885725391445*^9, 
   3.8148857515111303`*^9}},ExpressionUUID->"f53ccb7b-a27c-43a0-b0a8-\
a39a3d41c792"],

Cell[BoxData[
 TemplateBox[{"0.47443024515938514`","\"%\"","percent","\"Percent\""},
  "QuantityPostfix"]], "Output",
 CellChangeTimes->{
  3.814703298152137*^9, 3.814703509091527*^9, 3.814703719673833*^9, 
   3.8147038510484543`*^9, {3.814703890215939*^9, 3.81470389797856*^9}, 
   3.8147041910182858`*^9, 3.8147048943067303`*^9, 3.8147134516640787`*^9, 
   3.814714591371221*^9, 3.814714909929867*^9, 3.8147294404474497`*^9, 
   3.8147298369248962`*^9, 3.8147841740799828`*^9, 3.8147852617096987`*^9, 
   3.814786868819538*^9, 3.81478717795255*^9, {3.814787245368772*^9, 
   3.814787271340418*^9}, 3.8147905651896772`*^9, 3.814799146394308*^9, 
   3.814799234364416*^9, 3.814803512405222*^9, 3.814808752097145*^9, 
   3.814816022862918*^9, 3.814817037925784*^9, 3.8148172015285177`*^9, 
   3.814817936659589*^9, 3.8148183794631033`*^9, 3.814819919369453*^9, 
   3.814878590911757*^9, {3.8148857232745667`*^9, 3.814885752177866*^9}, 
   3.8149628757247353`*^9, 3.814964270778426*^9, 3.8149656611325893`*^9, 
   3.814968798022771*^9, 3.814982315951295*^9, 3.8149824328987226`*^9, 
   3.814986505393819*^9, 3.81498664684514*^9, 3.8149880342758503`*^9, 
   3.815045480183155*^9, 3.815048176417581*^9, 3.815049098054471*^9, 
   3.815053591793606*^9, 3.8150561859972963`*^9, 3.815134396547495*^9, 
   3.815135158034873*^9, 3.8151355004723454`*^9, 3.8151363270705757`*^9, 
   3.815136645137957*^9, 3.815136696560815*^9, 3.8151368127972317`*^9, 
   3.8151370404557133`*^9, 3.815137169713147*^9, 3.8151373739207983`*^9, 
   3.8151375213581257`*^9, 3.815137597868704*^9, 3.815138431929791*^9, 
   3.8151386904591312`*^9},ExpressionUUID->"23176a9a-fb73-4209-9247-\
43fefd399572"]
}, Open  ]],

Cell[TextData[{
 "Technically we got an increase in relative precision by a 0.47% ! ;)\n\n\n\
Anyway, we see our estimated standarddeviations is coherent with the previous \
true standarddeviation.\n\nNow let\[CloseCurlyQuote]s say \
it\[CloseCurlyQuote]s not practical for us to deal with the expected mean \
before running our simulation, as seen above (7) we can use the following to \
compute our standarddeviation. This works also \[OpenCurlyQuote]inline\
\[CloseCurlyQuote] ie. for \[OpenCurlyQuote]running summations\
\[CloseCurlyQuote] without having to keep the estimates in memory.\n",
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->MonteCarloAnalysis]",
  FontSize->12,
  FontColor->GrayLevel[0.5]]
}], "Text",
 CellChangeTimes->{{3.8146251241245337`*^9, 3.81462515900097*^9}, 
   3.814626195259591*^9, {3.814627670499548*^9, 3.814627728615007*^9}, {
   3.814627773773164*^9, 3.814627796879373*^9}, {3.814629185697845*^9, 
   3.814629229615082*^9}, {3.8147035979126596`*^9, 3.814703647548213*^9}, 
   3.8147036946591043`*^9, {3.814703930417307*^9, 3.814703972401636*^9}, {
   3.814704199111393*^9, 3.814704199132189*^9}, 3.8147044077296553`*^9, {
   3.814794591508273*^9, 3.814794635227124*^9}, {3.814794685740074*^9, 
   3.81479471185913*^9}},ExpressionUUID->"b27f404e-1917-4f2c-8058-\
7b8128dcce6e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      OverscriptBox[
       SuperscriptBox["X", "2"], "-"], "-", 
      SuperscriptBox[
       OverscriptBox["X", "-"], "2"]}], 
     RowBox[{"N", "-", "1"}]]], "=", 
   RowBox[{
    FractionBox["N", 
     RowBox[{"N", "-", "1"}]], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{"n", "=", "1"}], "N"], 
        SubsuperscriptBox[
         OverscriptBox["X", "^"], "n", "2"]}], "N"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox[
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"n", "=", "1"}], "N"], 
          SubscriptBox[
           OverscriptBox["X", "^"], "n"]}], "N"], ")"}], "2"]}], ")"}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814627833182362*^9, 3.8146279446389112`*^9}, {
  3.8147042192268267`*^9, 
  3.81470422154469*^9}},ExpressionUUID->"aa570dca-2b86-4cd9-a26d-\
b768a48facf6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"k", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"ests", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "n"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"ests", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}], ")"}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  OverscriptBox["\[Sigma]", "^"], "=", 
  SqrtBox[
   RowBox[{
    FractionBox["n", 
     RowBox[{"(", 
      RowBox[{"n", "-", "1"}], ")"}]], "*", 
    RowBox[{"(", 
     RowBox[{"k", "-", "y"}], ")"}]}]], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"note", " ", "that", " ", "because", " ", 
    RowBox[{"it", "'"}], "s", " ", "an", " ", "estimated", " ", "error", " ", 
    "we", " ", "use", " ", 
    RowBox[{"the", " ", "^", "hat"}], " ", "over", " ", "the", " ", 
    "\[Sigma]sigma"}], " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.814627231702677*^9, 3.814627286829595*^9}, {
   3.8146273226025867`*^9, 3.814627389294306*^9}, {3.814627429616226*^9, 
   3.814627431976469*^9}, {3.814627504606968*^9, 3.814627515249405*^9}, {
   3.814627586892536*^9, 3.814627588150949*^9}, {3.814627806645154*^9, 
   3.814627807434073*^9}, 3.8147121881299973`*^9, {3.814712253354581*^9, 
   3.8147122554448433`*^9}, {3.8147128951041307`*^9, 3.814712897731533*^9}, 
   3.814714560012053*^9, 3.814787279501348*^9, 3.8147874133764973`*^9, {
   3.8148786018014803`*^9, 
   3.8148786533942547`*^9}},ExpressionUUID->"20570aa4-9568-4646-92b1-\
e9aaf256e28e"],

Cell[BoxData["0.3143116852194432`"], "Output",
 CellChangeTimes->{{3.81478724548742*^9, 3.814787281605483*^9}, 
   3.8147874143817987`*^9, 3.814790565223742*^9, 3.81479914643088*^9, 
   3.814799234395075*^9, 3.814803512440056*^9, 3.814808752127943*^9, 
   3.8148160228870277`*^9, 3.814817037946566*^9, 3.814817201551894*^9, 
   3.814817936687603*^9, 3.8148183795855503`*^9, 3.814819919399611*^9, {
   3.8148785699808483`*^9, 3.814878609541759*^9}, 3.8149628757636433`*^9, 
   3.814964270795723*^9, 3.8149656611566772`*^9, 3.8149687980417843`*^9, 
   3.8149823159867277`*^9, 3.814982432922167*^9, 3.8149865054123917`*^9, 
   3.814986646866764*^9, 3.814988034305456*^9, 3.815045480207292*^9, 
   3.815048176449752*^9, 3.815049098080826*^9, 3.815053591826833*^9, 
   3.8150561860404987`*^9, 3.815134396565239*^9, 3.815135158057208*^9, 
   3.8151355004980383`*^9, 3.815136327094934*^9, 3.815136645164522*^9, 
   3.815136696592005*^9, 3.815136812830186*^9, 3.8151370404840393`*^9, 
   3.8151371697339373`*^9, 3.8151373739603*^9, 3.815137521415266*^9, 
   3.815137597902646*^9, 3.8151384319646606`*^9, 
   3.815138690885024*^9},ExpressionUUID->"c64205e5-4612-4ac3-b5bd-\
1dd1a1b8ec78"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[1, 0.5, 0]],
 "\nTill now we saw error analysis for a single simulation. \n\n",
 StyleBox["Let\[CloseCurlyQuote]s see how to deal with multiple replications \
of a Monte Carlo simulation.\n",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.8147070435382843`*^9, 3.814707096729705*^9}, 
   3.8147072691009007`*^9, 3.814712938390903*^9, {3.814816964091691*^9, 
   3.81481696436648*^9}, 
   3.8149714155542727`*^9},ExpressionUUID->"c3cd539c-4f36-4770-8243-\
f017e7040ddb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "n", ",", "m", ",", "a", ",", "b", ",", "w", ",", " ", "data00", ",", " ", 
    "data01", ",", " ", "data02", ",", "f", ",", "x", ",", "tValue"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "100"}], ";"}], 
  "                                       ", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "samples"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"m", "=", "1000"}], ";"}], "                                     ", 
  RowBox[{"(*", " ", 
   RowBox[{"n", " ", "simulations"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", "x_", "]"}], "=", 
    RowBox[{
     RowBox[{"7", "x"}], "-", 
     RowBox[{"8.5", 
      SuperscriptBox["x", "2"]}], "+", 
     RowBox[{"3", 
      SuperscriptBox["x", "3"]}]}]}], ";"}], "    ", 
  RowBox[{"(*", " ", "integrand", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"a", "=", "0"}], ";", " ", 
   RowBox[{"b", "=", "2"}], ";"}], "                               ", 
  RowBox[{"(*", " ", "domain", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"w", " ", "=", " ", 
    RowBox[{"b", "-", "a"}]}], ";"}], "                                   ", 
  RowBox[{"(*", " ", 
   RowBox[{"'", 
    RowBox[{"quadrature", "'"}], " ", "width"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<true result\>\"", ",", " ", 
    RowBox[{"tValue", "=", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "a", "b"], 
      RowBox[{
       RowBox[{"f", "[", "x", "]"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}]}], " ", "}"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"b", "-", "a"}], ")"}], 
     FractionBox["1", 
      RowBox[{"n", "*", "m"}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], 
       RowBox[{"n", "*", "m"}]], 
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", 
         RowBox[{"(", 
          RowBox[{"b", "-", "a"}], ")"}]}]}], "]"}]}]}], ";"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data00", "=", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rnm", "=", 
   RowBox[{"Mean", "[", "data00", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "m"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "0"}], "m"], 
      RowBox[{"(", 
       RowBox[{"w", 
        FractionBox["1", "n"], 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "0"}], "n"], 
         RowBox[{"f", "[", 
          RowBox[{"a", "+", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}]}]}], 
       ")"}]}]}], ";"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data01", ":=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "same", " ", "as", " ", "the", " ", "symbolic", " ", "above", " ", "but", 
    " ", "we", " ", "keep", " ", "the", " ", "estimates"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data02", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{"data01", ",", "m"}], "]"}]}], ";"}], 
  "                                   ", 
  RowBox[{"(*", " ", 
   RowBox[{"eval", " ", "m", " ", "times", " ", "data01", " ", 
    RowBox[{"(", 
     RowBox[{
     "that", " ", "itself", " ", "evals", " ", "fx", " ", "*", "n", " ", 
      "times"}], ")"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data03", "=", 
    RowBox[{"{", "}"}]}], ";"}], 
  "                                                                           \
         ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "all", " ", "replication", " ", "means", " ", "will", " ", "be", " ", 
    "here"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{"m", "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", 
   "                                                           ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "dunno", " ", "why", " ", "but", " ", "if", " ", "we", " ", "do", " ", 
      RowBox[{"Mean", "[", "data02", "]"}], " ", "that", " ", "should", " ", 
      "return", " ", "m", " ", "means"}], ".."}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"data02", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", 
    "                                                                  ", 
    RowBox[{"(*", " ", 
     RowBox[{"instead", " ", "it", " ", "return", " ", "n", " ", 
      RowBox[{
       RowBox[{"means", " ", "!"}], "?", " ", "effectively"}], " ", "we", " ",
       "have", " ", "m", " ", 
      RowBox[{"items", " ", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"mm", "=", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"data", "[", 
         RowBox[{"[", "j", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "n"}], "}"}]}], "]"}], "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}]}], ";", 
    "                                ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"let", "'"}], "s", " ", "do", " ", "it", " ", 
                   "manually"}], " ", "..."}], "..."}], "..."}], "..."}], 
              "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], "..."}], 
       "..."}], "."}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"data03", ",", "mm"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RnXm", "=", 
   RowBox[{"Mean", "[", "data03", "]"}]}], 
  "                                                                      ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"mean", " ", "of", " ", "the", " ", "replication", " ", "means"}],
     ",", " ", 
    RowBox[{
     RowBox[{"ie", ".", " ", "final"}], " ", "average"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Histogram", "[", 
   RowBox[{"data03", ",", " ", "32", ",", "\"\<Probability\>\"", ",", 
    RowBox[{"PlotTheme", "->", "\"\<WarmColor\>\""}], ",", 
    RowBox[{"ImageSize", "->", "Medium"}], ",", 
    RowBox[{"ChartElementFunction", "\[Rule]", "\"\<FadingRectangle\>\""}]}], 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"the", " ", "latter"}], ",", " ", 
    RowBox[{
     RowBox[{
     "approaches", " ", "a", " ", "standard", " ", "normal", " ", 
      "distribution", " ", 
      RowBox[{"(", 
       RowBox[{"thanks", " ", "to", " ", "CLT"}], ")"}], " ", "as", " ", "we",
       " ", "can", " ", "see", " ", "when", " ", "m", " ", "is", " ", "big", 
      " ", "enough", " ", "but"}], " ", ".."}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "if", " ", "m", " ", "is", " ", "not", " ", "big", " ", "enough", " ", 
     "we", " ", "can", " ", "still", " ", "get", " ", "confidence", " ", 
     "intervals", " ", "from", " ", "a", " ", "student"}], "-", 
    RowBox[{
    "t", " ", "distib", " ", "where", " ", "the", " ", "degrees", " ", "of", 
     " ", "freedom", " ", "is", " ", 
     RowBox[{"(", 
      RowBox[{"m", "-", "1"}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "Full"}]}], " ", "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"StudentTDistribution", "[", "16", "]"}], ",", "x"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "9"}], ",", "9"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", " ", 
          RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}]}], " ", "]"}]}], 
    "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "with", " ", "enough", " ", "degrees", " ", "of", " ", "freedom", " ", 
     "a", " ", "student"}], "-", 
    RowBox[{
    "t", " ", "distribution", " ", "approaches", " ", "a", " ", "gaussian", 
     " ", "distribution"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
       "left", " ", "at", " ", "16", " ", "or", " ", "at", " ", "20", " ", 
        "the", " ", "two", " ", "plots", " ", "almost", " ", "coincide"}], 
       ".."}], " ", 
      RowBox[{"that", "'"}], "s", " ", 
      RowBox[{"it", " ", "!"}], " ", "With", " ", "at", " ", "least", " ", 
      "20", " ", "repeats", " ", "we", " ", "have", " ", "student"}], "-", 
     "t"}], " ", "\[Rule]", " ", "stdgauss"}], " ", 
   "*)"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.814635706201399*^9, 3.814635889195026*^9}, {
   3.8146359445723877`*^9, 3.8146362685939093`*^9}, {3.814636336857314*^9, 
   3.8146363590177107`*^9}, {3.814636426944933*^9, 3.814636430346786*^9}, {
   3.814636566945408*^9, 3.814636569483432*^9}, {3.814636606595295*^9, 
   3.8146367114138193`*^9}, {3.814636976876095*^9, 3.814637068221266*^9}, {
   3.8146370987354116`*^9, 3.814637247252486*^9}, {3.814637363967765*^9, 
   3.814637529429102*^9}, 3.814637622890452*^9, {3.8146376648559923`*^9, 
   3.814637664895966*^9}, 3.814637737169739*^9, {3.814637773737315*^9, 
   3.8146377747234898`*^9}, {3.814637806064722*^9, 3.814637859297584*^9}, {
   3.8146378915664663`*^9, 3.814638025686756*^9}, {3.814638062495903*^9, 
   3.814638214284732*^9}, {3.8146382662156963`*^9, 3.8146382735016203`*^9}, {
   3.814638332328353*^9, 3.8146384109987164`*^9}, {3.8146384679954853`*^9, 
   3.8146387223119307`*^9}, {3.8146389764721603`*^9, 3.814639000679493*^9}, {
   3.814639061366424*^9, 3.814639065589624*^9}, {3.814639100624908*^9, 
   3.8146391613601017`*^9}, {3.814639218346739*^9, 3.81463924555336*^9}, {
   3.814639287576559*^9, 3.8146393156555033`*^9}, 3.814639374819832*^9, 
   3.814639412366734*^9, {3.8146402534120083`*^9, 3.814640337922701*^9}, {
   3.814640970220525*^9, 3.814641158093383*^9}, {3.814641230909445*^9, 
   3.8146412319404287`*^9}, {3.814702140302023*^9, 3.8147021428377113`*^9}, {
   3.814702355759859*^9, 3.81470235584519*^9}, 3.814702391711388*^9, {
   3.814702457971033*^9, 3.814702503623619*^9}, {3.814702538927895*^9, 
   3.8147025577588367`*^9}, {3.814707152576932*^9, 3.814707243504839*^9}, {
   3.8147072982897243`*^9, 3.8147073020654078`*^9}, {3.814707363269525*^9, 
   3.81470750438829*^9}, 3.814707561451941*^9, {3.814707593474392*^9, 
   3.8147075962115917`*^9}, 3.8147076774999866`*^9, {3.8147077679315*^9, 
   3.814707801769238*^9}, {3.814708055863966*^9, 3.814708056042684*^9}, 
   3.814708171094453*^9, {3.814708282350124*^9, 3.814708284600194*^9}, 
   3.8147083486364098`*^9, {3.8147087313872757`*^9, 3.814708784118658*^9}, {
   3.814708879409562*^9, 3.8147088815021887`*^9}, {3.814709041885227*^9, 
   3.814709094442226*^9}, {3.814710089888637*^9, 3.8147101001038933`*^9}, {
   3.814710169382*^9, 3.814710170495144*^9}, {3.814710459546184*^9, 
   3.814710471826602*^9}, {3.814710643953662*^9, 3.814710659477923*^9}, 
   3.814711016961986*^9, {3.8147146278956127`*^9, 3.814714673929297*^9}, {
   3.8147238165707073`*^9, 3.814723819606327*^9}, {3.814724203096705*^9, 
   3.8147242489997063`*^9}, {3.8147243055177507`*^9, 3.814724336184031*^9}, {
   3.8147244723540897`*^9, 3.8147245063015127`*^9}, {3.814724574460948*^9, 
   3.814724615339994*^9}, {3.814725537637809*^9, 3.814725541261015*^9}, {
   3.814725580499838*^9, 3.814725585042686*^9}, 3.814725732016498*^9, {
   3.814725823708674*^9, 3.814725938971343*^9}, 3.814726075280933*^9, 
   3.814726229540535*^9, {3.814726407179926*^9, 3.814726408391492*^9}, {
   3.8147264971300917`*^9, 3.8147265012488203`*^9}, {3.814729572343337*^9, 
   3.814729668604216*^9}, 3.814795524656146*^9, {3.814795681796382*^9, 
   3.814795682202095*^9}, {3.814798447281581*^9, 3.8147984969085207`*^9}, {
   3.814798636326173*^9, 3.814798637625915*^9}, {3.814798674259171*^9, 
   3.8147987182658367`*^9}, {3.814798788781843*^9, 3.814798897069517*^9}, {
   3.814798946958541*^9, 3.814799025549811*^9}, 3.814799189328895*^9, {
   3.8147992270335693`*^9, 3.814799227237561*^9}, {3.814803141568277*^9, 
   3.814803147370296*^9}, {3.814803381553248*^9, 3.814803389403583*^9}, {
   3.8148034289832687`*^9, 3.814803436527089*^9}, {3.8148034702264442`*^9, 
   3.8148034733717737`*^9}, {3.814816969988885*^9, 3.814816971900638*^9}, {
   3.814817190061743*^9, 3.814817195711191*^9}, {3.814819892092642*^9, 
   3.81481989380298*^9}, 
   3.814968953652886*^9},ExpressionUUID->"c9dcacee-fb73-4e1c-a67a-\
fd69e33d0ad4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"true result\"\>", ",", "3.3333333333333357`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 3.814982432958005*^9, 3.814986505447137*^9, 
   3.814986646900593*^9, 3.8149880343138533`*^9, 3.815045480235252*^9, 
   3.815048176457209*^9, 3.8150490981034403`*^9, 3.815052452360868*^9, 
   3.815053591853331*^9, 3.81505363194197*^9, 3.815056186052668*^9, 
   3.815134396588818*^9, 3.815135158083645*^9, 3.815135500528186*^9, 
   3.815136327119062*^9, 3.815136645193815*^9, 3.8151366966018744`*^9, 
   3.815136812839506*^9, 3.815137040497368*^9, 3.815137169767126*^9, 
   3.815137373983944*^9, 3.815137521445765*^9, 3.815137597914557*^9, 
   3.8151384319879637`*^9, 
   3.815138690922727*^9},ExpressionUUID->"20ee57ba-3393-44d1-bae7-\
4ddfa4a050a3"],

Cell[BoxData["3.3381353732710437`"], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 3.814982432958005*^9, 3.814986505447137*^9, 
   3.814986646900593*^9, 3.8149880343138533`*^9, 3.815045480235252*^9, 
   3.815048176457209*^9, 3.8150490981034403`*^9, 3.815052452360868*^9, 
   3.815053591853331*^9, 3.81505363194197*^9, 3.815056186052668*^9, 
   3.815134396588818*^9, 3.815135158083645*^9, 3.815135500528186*^9, 
   3.815136327119062*^9, 3.815136645193815*^9, 3.8151366966018744`*^9, 
   3.815136812839506*^9, 3.815137040497368*^9, 3.815137169767126*^9, 
   3.815137373983944*^9, 3.815137521445765*^9, 3.815137597914557*^9, 
   3.8151384319879637`*^9, 
   3.815138693207549*^9},ExpressionUUID->"80072b33-dddc-471f-b54e-\
0cc9cf2726be"],

Cell[BoxData["3.333034294642216`"], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 3.814982432958005*^9, 3.814986505447137*^9, 
   3.814986646900593*^9, 3.8149880343138533`*^9, 3.815045480235252*^9, 
   3.815048176457209*^9, 3.8150490981034403`*^9, 3.815052452360868*^9, 
   3.815053591853331*^9, 3.81505363194197*^9, 3.815056186052668*^9, 
   3.815134396588818*^9, 3.815135158083645*^9, 3.815135500528186*^9, 
   3.815136327119062*^9, 3.815136645193815*^9, 3.8151366966018744`*^9, 
   3.815136812839506*^9, 3.815137040497368*^9, 3.815137169767126*^9, 
   3.815137373983944*^9, 3.815137521445765*^9, 3.815137597914557*^9, 
   3.8151384319879637`*^9, 
   3.8151386933944893`*^9},ExpressionUUID->"cfc8ddbe-4634-4a5e-8a07-\
014aa3365368"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.92, 0.41600000000000004`, 0.2], EdgeForm[{Opacity[0.378], 
    Thickness[Small]}], {}, 
    {RGBColor[0.92, 0.41600000000000004`, 0.2], EdgeForm[{Opacity[0.378], 
     Thickness[Small]}], {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQHdN/6KtGDLsDAxRMfFtjbxqH4B/3Nu90TEDw/6z8
eMk3CcE35FgjE5WC4KeBAYI/54jChqIMBP+C0u2fdVkIPlvjVOfuHATf5r5/
7/Q8BL/Aluv64gIEf9lskIEIPsi0PSUIvkCE5ZYTZQi+27bPf69UIPjVIuvc
H1Yh+EDHAb2M4D8FOxDBl9K/q8LWiOAHAF0n1Izgt74O3CHXiuDDwhMSTgH2
sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPG
h4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8A4m7tjA==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.92, 0}, {2.94, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Ew3EcxvGfSU2mQzpnoyZlplOS2SiSpH90yE6zkaSSjDpEMsmkkqSS
ZDIjk3RIkpmZ2WHRpS5JOiQdZoeJ6rD90tvz4evrdXkOb0dgbixkMQyjvfrM
P/I5et0cqfMZ/3czYLN0rMvFeHawa0NurV3d643Kk8Gel+FNeTtdbvNvyRn7
xcLUjvy9Mn27uCu7n1uqi/Lf3L58eGCefP81/nZ2JNdMNLguj+Xuq1z47kSe
bVxL5U/l2Lyn/jEmPxXMQdlcK8blvujM+09CXvpwdlrP5WT/63JTUqbnb6L0
MBQY8dIT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xNX
ABCu7+A=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.94, 0}, {2.96, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2Ecx/HXxNghmYku2XaasmPUIWuH6bSsIh2SvHRJqlOHZJdJuqzj
YjokmS6TmcwkM8lMkomZTsl0iGYySou97/T1e3g8Pofn73m+PnN7Yd1hGMaY
te0zO/u658k6Z4z/9XaRvvNeySMDS4PBnDxnDi1P5eVEqXoWuZYLowcf8wX5
cz80sVqU/S8/8Y0b2RpW2b2Vk6ktd6IklzuBleOy/L1ov1AO5k5bmXu5/7yK
fGKPq8oP/SU7xg+HG4/y5FF4rfkkb77/XrZrsvXZr79nuX6+M+2qy/TsWrei
ZixET0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xP3APn
Q/oy
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.96, 0}, {2.98, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0DtIglEYh/EPlyKiKRxEApukC40OIXYhWgy6QEM0iCQ4CEmL0RiERII4
1BYhTUJENIiTRGNDRAQiISIhIhYiUiEm2Gc+/V84HH7L4T2Pw7+7HrAYhjHx
e8w7dxl2D+UG5oz+DFsmo9a8vOArP42/ypHshW2mIF/Zt3Zmi3LpYPR6uSRb
84/fG2+y13U87yvLh6eLJ6GKnG52Xvar8vtaZuyoJjtu9oKJD3lzZPr2vC7H
QpV2qiHfPSSX0k35y7kdv/+Up6LmhnLvuy35zFyvLfee68h/M/hvev6kGs8r
/lUPPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9cRfL
lviU
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{2.98, 0}, {3., 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQEcDjCWSdwuTx4mBD97T8lkCRYEf4GU/l0VNgT/
WsVLNUMOBJ/r+uICWy4E394UZCCCDzItjA/BX/Xxkm+SAIL/wL93ep4Qgi+y
zv1hlQiC78XDpN0uhuDXZ4EciOBvOVG2b74Ugv8K6Lo1Mgi+fOvrwB1yCH7I
46Wzjygg+J2OCU8vKCH4QMOAHkbwv/y9AvQxgq8Z03/oqwaCDwEcDn9WgjyW
YA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8
YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4AA+31lw=

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3., 0}, {3.02, 0.002}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQrRnTf+irBocDAxTE7fLkYdJG8KdIsITx6SL4J8r2
zZfSR/D/X6l4qWaI4JsYgwCCnzHxbY29KYI/9/3yY97mCP5l3ySBCEsEn3ON
TFSKNYJvx3V9cYEtgl8ENhDBXwE0rdMRwb+nwtY41RnBF2o+cGqhK4Lv8bBK
ZJ07gl9nbwr0MoK/GexABP/F75UfL/ki+LJA1933R/CDdsi1vg5E8GHh+Qek
LanBHhaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8
WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPEB0bLj
VA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.02, 0}, {3.04, 0.008}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Eg3Ecx/FHMtNph0yHpDrM7FYksVmJOiRpI5MtmcrMrMlMfyY6JJkk
SYe6RUTSYbJDXZJ0ihJJY3ac6bCSRLHnSW+fLz8/r8vn8O6IzgdmGwzD8JjP
+gOFtvXquL3f+L8N58v9V1C+Su+2NE7I74+jUUdIdnfZT1sn5cj29ac7LO+8
Zf09U/LtSO/mwLT8c1IzF+Vua25Gnvs7+fCm/XwhJj90vn6vxmXb2t5gLiF7
S2Nb+0k55Wt6PkrJxwfWoFw01y7TsiPUl7/LyEMXH79Pi/JK89lweVmm51LF
ZZbJ+umJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Ynr
dcjKWg==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.04, 0}, {3.06, 0.007}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/ycykQ7pF1lSypDqNko0OSYdsY5c6pUiHmiSqGTOTZGpm
ppJkm10mkw5JkiTptFuHJBORZKfMOrV/+vo9vF6fy+t5v52zy/55i2EYrsYx
78220/HKhs1r/E9pZSH5FZbfy87nekRuH3jpskZlXyKz1BqT45++i464fDnR
bOnbkquF+0n3ttxtjabHduTpuZHXqYS8d/vdO7Mr3znMDeWfyOLVakoeNNdL
y3/PZeSDfXPkci3wlj+Um4It/WdH8vD5w9r1sdz47M3jiZwLjdqfsjI91z96
hmzFsIeemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ74
F2TVzLI=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.06, 0}, {3.08, 0.007}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQvaTAluv6Yg4HBii4ce578OOlCD6/7qa575cj+C7d
Oc9/r0Twq16qGXKsQfDXuT+sElmH4D9eOvuIwgYEX4IljE93E4LvlyQQYbkF
wW85cGqh6zYEf4dc6+vAHQj+uxp707hdCL7y7Z91WXsQfKBhJ8r2Ifh90/OE
mg8g+Ie/asT0H0LwfwSDXIjgg717DMEHO+8Egj8DZNwpBP/sGRBA8GHh+Qvo
qpLJFfaw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ
48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwC2
zfJA
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.08, 0}, {3.1, 0.006}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQffYMCHA4MEABk3a72M1zCL5Fp2PC0wsIfs7z3ys/
XkLwF7tu+/z3CoJ/Y3GBLdd1BJ8HbCCCDzJN6TaCX75vvpT+XQR/rUxUivV9
BP9Rlcg694cIPtBx34MfI/g+5iAHIviNU527c54j+CDXVbxE8F8H7pBrfY3g
K20oypj4FsEP59PdNPc9gt8D9jCCf/DUQqCPEfxvGjH9h74i+LDwtNxyomzf
/C57WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh
4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxgcAXif5
rw==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.1, 0}, {3.12, 0.013}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ/U0jpv/QVw4HBijQbhe7ee47gp/49ILS7Z8I/jTn
7pznvxH8Mwtdt33+i+BDACecbxq3y5OHCcHP2lMyWYIFwV8gpX9XhQ3Bv1bx
Us2QA8Hnur64wJYLwXcAG4jglwJNC+ND8Fd9vOSbJIDgP/DvnZ4nhOCLrHN/
WCWC4HvxMAG9jOA3gB2I4G85UbZvvhSC/wroujUyCL586+vAHXIIPiw8K0He
WNNjDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+
LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wvgAZiG9
IA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.12, 0}, {3.14, 0.014}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLd/6OnCHHKcDAxSEPF46+4gCgt/lmPD0ghKCv3++
lP5dFQT/698rFS/VEHzNmP5DXzUQ/LhdnjxM2gj+FAmWMD5dBP9k2T6giQj+
f5Bxhgi+iTEIIPgZE9/W2Jsi+PPeLz/mbY7gX/FNEoiwRPA51shEpVgj+HZc
1xcX2CL4JWADEfwVQNM6HRH8eypsjVOdEXyh5gOnFroi+B4Pq0TWuSP4sPC8
/bMua0/JZHtYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4
sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPG
BwBfxOF4
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.14, 0}, {3.16, 0.019}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ7fGwSmSdO6cDAxTU2JvG7fJE8DfPfb/8mDeC/+L3
yo+XfBF8uagU6/v+CH7QDrnW14EIfrvYzXPfgxH8PSWTJVjCEPxPl3yTBCIQ
fA1DjjUyUQh+TP+hrxoxCP6ktyAXIvjHvc07HRMQ/D8g5yUh+EYg41IQ/PQ0
EEDw5xxR2FCUgeBfVLr9sy4LwWdrnOrcnYPg29z3752eh+AX2nJdX1yA4MPC
M8Jyy4myffPtYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ
48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtP
GB8AkXzcuQ==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.16, 0}, {3.18, 0.031}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0D9IwkEYh/EfDkLhENIWhEqC1FBbhESCg0hD6BTSFAnR0B8JiRJBxEJE
KkJEGwvbwiEioilCGhsCh4pocIogiAaRQC98+L5wHJ/leO9xL29E4zbLssZ7
x9xbs4PNs82BgNWf2umDq56QX9vptbtteWhx5uoxKYeuf/6ed+TU8GXoY1eu
J1aPv1Jy68nz0k7LI5NvY/aMHCmW151Zef8zcjOak2/DDtvEgfx90Zifzste
e6YULMixFf/7QlE+uv/1LR3KDZfZUO6Y757IU2a9khw3z5XlasWMTM+9/w7n
c/TE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MRd01fb
cg==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.18, 0}, {3.2, 0.04}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/FNUhM7t0SZHM2GGHDousQ9ktKtJhdhi7zGw7dZh0qU5R
x9TMTP5mzGRmZiZpO6RDHZNOKZJopyRdel/6+r28Xp/L43m/M4nsenLIcZyA
ufY9O7VnbMn5P/ffGy9uQR7ZnAg2ivJC82b7siTnvHtXt2XZzS2OP5zLj3d2
oGynDSry8mH67bcq59/nQqM1uR59zvvq8qtb6E9fyJPDdkF5NeHZCjflfbPd
SktuTx18rLXlz53IfLwjzz797Ka6shlmPiwfnWTMj+Xelz92fC3T00QwJSoR
emJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ64j+wsdSP

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.2, 0}, {3.22, 0.045}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Ew2Ecx/Gf3UqHJEkm6pSijpWZ/kmXLrVL0iGr3fqz4+y4ZKZDpw4r
6TAzIx2SdErazGRNEm1mUpOZxSRZJNqT3j5fHo/X5evr3ePenPfYLMvqbzzz
Jz77lnavm8at//lylaIHSXnw9LAWS8krrQujZ2k5vNG2dXUj32bMyLaBYEc+
K4+EJpZf7+T18nf8/V6OTJ9//DzIuYjX2fwot/wtlCcb23oLsu/yqGuoKB/b
F1cdT/KLv/1k5lnuzGfrrpI8O2wOlAN7UztrZdlc56vIb3MX3dtVmZ77YTPx
MXpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpieuJfgEH7
lw==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.22, 0}, {3.24, 0.05}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEQ3EAx/HnSbZnZmYyHVKZSUl26JhGkkZSh3XJ5BFJKtkh3dMhSaJO
STq9S6ZDkk7vWCRjkmQ6JNOSSSUT7a2+/f78/X0uP/7fNnthfNo0DKOzdr23
PHbasvrsTxp/pzW3NLP1Ik8Eu4/3XuX1uaeqU5Hdi4PBkzf5o2Ny032Xu9aa
bq8+5anH6/a7L3lnwFuUL725b/n3WP/uzZwNB0x59jy7HW2Q95t77mONcmG5
FE/4ZOvmcLHPkpP1QdlbSwdlp5IfsUNycXRjdz4sR46GHlYiMj1TAbP2daef
npiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Ynpie+AcOorAq

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.24, 0}, {3.26, 0.049}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLbLO/WGVCJcDAxR48jBpt4sh+HVZe0omSyD4W06U
7ZsvheC/UjPkWCOD4Mu1vg7cIYfgBz9eOvuIAoLf6Zjw9IISgg80TP+uCoL/
5e+VipdqCL5GTP+hrxoIftwukAsR/MkSLGF8ugg+2Hn6CP4/kHGGCL4xGCD4
GRPf1tibIvjz3i8/5m2O4F/2TRKIsETwgZ6NSrFG8G25ri8usEXwYeEJUbfe
HhaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC
+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPEBbeyy3Q==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.26, 0}, {3.28, 0.061}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQbct1fXGBLZcDAxQUZUx8W2OP4K845m3e6Yjg31Vh
a5zqjOALNx84tdAVwfd4WCWyzh3Br7U3jdvlieBvmvt++TFvBP/575UfL/ki
+DJRKdb3/RH8oB1yra8DEfw2sZvnvgcj+HtKJkuwhCH4ny75JglEIPhqhhxr
ZKIQ/Oj+Q181YhB8kG9N4xB8sHcTEHyw85IQfLBxKQh+Ghgg+LDwtNxyomzf
/FX2sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePD
whPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8A5f3h
bQ==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.28, 0}, {3.3, 0.052}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQnQYGXA4MUDD7iMKGogwE/4LS7Z91WQg+W+NU5+4c
BN/mvn/v9DwEv8CW6/riAgR/KdhABP8W0LQ9JQi+QITllhNlCL7bts9/r1Qg
+FUi69wfViH4QMdNfFuD4D8FOxDBl9K/q8LWiOAHAF0n1Izgt7wO3CHXiuDv
8uRh0m5H8N8vP+Zt3ongq4I9jOBHplgDfYzg9x/6qhHTj+DDwjPkMdjn9rDw
hPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeF
J4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPAGhF5Ig=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.3, 0}, {3.32, 0.063}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ3X/oq0ZMP5cDAxQcUdhQlDERwf9Vl7WnZDKCr3dX
ha1xKoKfan3fv3c6gj8TDBD8c9+DHy+djeAzh/HpbpqL4FtuOVG2bz6CnyfU
fODUQgR/SYEt1/XFCP4NsIEIPsi098sRfOfunOe/VyL4FS/VDDnWIPjr3B9W
iaxD8IGOA3oZwZdgATkQwfdNEoiw3ILgg1znug3B3yHX+jpwB4IPC09jMNhs
DwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxh
fFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wvgAy2W9vA==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.32, 0}, {3.34, 0.075}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg3EcxvHXjrNDkh0ysZ2mSafGJFuR0a12mSSZdkmqU5F0SaZLHTeS
aDJjdpiZSSaTSZIkJpNMssMkkySJ9r76en78/X0uz+Hrjq3OxG2GYQx2n/mX
B3bb02V7yPi/t63gyPyZ7Gl8by+dy9FA8Wq9Iu8nV3p3LuTqp3fuoCp/RV5O
Dy/locLRe6Ymx3rMRTllzl3LN9bJNl/C+Xgr+/fGF17v5OXWT7ZzL59Mlj5+
H+R6em3MXpcd1qA80V3zNOSNynH/8JOcc80ujj7Lzc2+fLgp03PKGs4G6Ynp
iemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Ynpif8AfLvDyg==

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.34, 0}, {3.36, 0.049}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ/bBKZJ37Qy4HBigQu3nue/BjBN/HvNMx4SmC3zjV
uTvnOYK//fPfKxUvEfw3gTvkWl8j+AobijImvkXww/h0N819j+D35Dz/vfIj
gn/g1ELXbZ8R/G8aMf2HviL4Wu0gFyL4CU8vKN3+ieBPAznvN4IPNu4vgg8B
3HC+adwuTx4mBD9rT8lkCRYEf76U/l0VNgT/asVLNUMOBJ/r+uICWy4EHxae
EPHl9rDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnj
w8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPAMSO
0zs=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.36, 0}, {3.38, 0.045}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQzXV9cYEtF7cDAxTYm8bt8uRB8EsmS7CE8SH4qz5e
8k0SQPAf+PdOzxNC8EXXuT+sEkHwPXmYtNvFEPy6rD1AIxH8LSfK9s2XQvBf
qRlyrJFB8OVaXwfukEPwQx4vnX1EAcHvcEx4ekEJwQcapn9XBcH/8vdKxUs1
BF8jpv/QVw0EH+RbJm0EH+xdXQT/JMh5+gg+2DhDBN8YDBB8WHhqgu1ZYw8L
TxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxY
eML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4AGOIySg=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.38, 0}, {3.4, 0.055}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQbQwG3A4MUJAx8W2NvSmCP+/98mPe5gj+Jd8kgQhL
BJ9zjUxUijWCb8t1fXGBLYJfBDYQwQeZ1umI4N9TYWuc6ozgCzUfOLXQFcH3
eFglss4dwQc6Lm6XJ4K/aS7IgQj+898rP17yRfBBrrvvj+AH7ZBrfR2I4LeL
3Tz3PRjB31MyWYIlDMH/CPYwgq9uyAH0MYIf03/oq0YMgg8Lz8qXakCVa+xh
4Qnjw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wP
C08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHwASC8Z8
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.4, 0}, {3.42, 0.056}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQHdN/6KtGDLcDAxRMfFtjbxqH4B/zNu90TEDw/6z8
eMk3CcE34lgjE5WC4KeBAYI/+4jChqIMBP+i0u2fdVkIPlvjVOfuHATf5r5/
7/Q8BL/Aluv64gIEfxnYQAT/FtC0PSUIvkCE5ZYTZQi+27bPf69UIPjVIuvc
H1Yh+EDHAb2M4D+7AHIggi+tf1eFrRHBDwC6TqgZwW99HbhDrhXBh4WnFw+T
drvYSntYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE
8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGBwDq
97dA
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.42, 0}, {3.44, 0.049}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2EAxvHPJKnpkM7ZaJMS6xRlGjskO6SiSztlkWRlJrZDZCaZtCSp
JDWZmEk6ZJIkkw5d0yFJh5kd1mViXbbv09/z8nr9Lg/v3zm/Mr1gMwyjv3nN
N1mZuu1JdviM/1OYsNsGNuWfbDEwvCW7Wjf2/Sl5LjT6Obktpx9rfcEd+clx
FVnclevrS3fRPdnz0dtclK25A/no0Dzy6+/M98Wx3DLbOXh9Io/cPK/dn8rh
rsTDy5mcWfW2v2Xkd2tQNteqWdmfWi79XcqxsnuoLSfnx7/i3XmZntY3wudj
9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xA35qt/8

        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.44, 0}, {3.46, 0.036}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Ew2Ecx/Gf6dRIkuyU6pS2jpkdsjqkW2yRDsmMLrE/px1murSkSx2L
dJhkdplMMklmMjMzM2Nmp0k6tEkSJdHvN719Hh6P1+Xr+7yngxH/js0wjDnz
Wm92tRsfz9qXjP/zdHX+OHUtO4Y2RuZz8lpwdNNzIycLldTKrZyfPHj15eV+
wruwfSfPdL73du9lc1g59iAfn4bH9gty8XN266Qof61bG8qu3MVbuiQP1ivL
Z9a4ilwdHNnmPJxo12T30XLguS6HXn4y7w3Z/OzHb1NuXUYXh1syPXs+q0TK
S09MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT/wH7f31
Vw==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.46, 0}, {3.48, 0.035}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQfX1xgS3XdW4HBijgYdJuF7uJ4DslPL2gdBvBL9s3
X0r/LoK/ViYqxfo+gv+wSmSd+0MEX/zmue/BjxF8b/NOx4SnCH7TVOfunOcI
/rbPf69UvETw3wTukGt9jeArbijKmPgWwQ/j09009z2CDzTs98qPCP6BUwtd
t31G8L9pxPQf+orgg3x77juCnwjy7k8EH+y83wj+aZBxfxF8COCB82Hh+asu
a0/J5Bn2sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHh
CePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8A
Prn1yA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.48, 0}, {3.5, 0.024}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQDQE8DjCWadwuTx4mBD9rT8lkCRYEf4GU/l0VNgT/
WsVLNUMOBJ/r+uICWy4E3wFsIIIPMi2MD8Ff9fGSb5IAgv/Av3d6nhCCL7LO
/WGVCILvxcOk3S6G4DeAHYjgbzlRtm++FIL/Cui6NTIIvnzr68Adcgh+yOOl
s48oIPhdjglPLygh+PvngzyM4H/5ewXoYwRfM6b/0FcNBB8CeBx+1YEcNsMe
Fp4wPiw8YXxYeML4sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4
sPCE8WHhCePDwhPGh4UnjA8LTxgfFp4wPiw8YXxYeML4sPCE8QG57NJK
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.5, 0}, {3.52, 0.024}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQrRnTf+irBo8DAxTE7fLkYdJG8KdIsITx6SL4J8v2
zZfSR/D/X6l4qWaI4JsYgwCCnznxbY29KYI/7/3yY97mCP4V3ySBCEsEn2ON
TFSKNYJvx3V9cYEtgl+cATIQwV8BNK3TEcG/p8LWONUZwRdqPnBqoSuC7/Gw
SmSdO4Jfa28K8jKcv2kuyIEI/vPfKz9e8kXwZYGuu++P4AftkGt9HYjgw8IT
qKh3et4ke1h4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw
8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8YH
AGUQziw=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.52, 0}, {3.54, 0.018}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Eg3Ecx/FHMkmHxqRDsjrM7LZIoqxMOiRpkUkl0yZJzUz2T+wwSSXK
dKhbREw6JB12StKpw0SyQ3ZMOlRmotjzpLfPl5+f1+VzeHeF1gLhBsMwPOaz
/sB1Z+5tsmXI+L/NtueH2pRcjB+0N07Ln6XxUGtQdnubCh0z8tzeTdU9K++/
Z3y98/LdWN/W8IL8c/ZhLso91tyiHPk7+fjWeRFbkkvd5e+NZdmWzfu3V+SB
l4ndw1U5Otj8dBKVT4+sQdlaK8Zle7D/8n5dHrn6+n1MyGnH+WglJdMz+eoy
y+z46InpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Ynpieso
lsxS
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.54, 0}, {3.56, 0.014}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/sUmmw3TqkJqZNJNOyaToMLNDVnRIp2mkQ0sSrYyZmWmz
kplKkkqXtMkOoyRR0qVuHZKZiCSdkjq1TV+/h9frc3k8vp3B8GjIZBhGd+3V
/+XWE281Yh0y/qcwP73+sSK/PtiffqJyW8+zwxKTA5n8rC0uJ94D5faEfOaz
mlxJ+fPoxt+Xkp2WWG54VZ6Y8lRGMvLa1VfXZFa+7ijWLpR/ozPnCxty47yc
3FiXl7c26yPff4+9HG7L5vEW9+mO3F+6XbzYlcO2+OXdnnwwN9D8uC/Tc+nN
2dt0nB6kJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Yn
/gMTU86o
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.56, 0}, {3.58, 0.014}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0E9Ew2Ecx/Gf6ZBJJh06pchMNDp06JB1KN2ijXSYDkuXpDokM9mlOkUd
OhTTIdvMyGRmJpmpycy2a9IpiyTqlP5deh56+zw8Hq/L1/d5D0bWg8sux3GG
zbVvamPCfZfsmnT+z33rM9ROy90j+dP3jDy1v/r8m5VjL97RznM5N/MY683J
T+lEdeBC7uuYNyPl2YhnYbwg71bqZ9NFudS/9zpXkt+2A2OLl/LQw3d85Uo2
w2pbZfngeK1npyLffPjCh9fyl/ltoir77Xdv5SW7Xk0+sePqcrNhj0zPH7PV
5lE0QE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT/wH
nezy8A==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.58, 0}, {3.6, 0.006}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2Ecx/HXTpPaKUUS6zApmU6NpFqyS5eKDtMhs+hQmk4rO0WSDtlh
x5m8pzGTDukUdcyaZNQkqZmZySTVIdHzzr5+D4/H5/L3f77eyNbimsuyrGFz
nfe24JzOaat9XCMHPeWiHDicWa3eyZu13+zHvWzPnX/+leRHOzbZ8SB3tQbK
QTNt8EmOX2b6/M9yrj8cnXiR33a786FXubdc/FmqyPPjzoLyXmr2aKMmO9vF
63Jj4WJgvyF7T7fXk+/ysmf0LN2UzTDzYfnq5sT8WP4eWjm+/pLpuVP3jblz
iSl6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6Ynrif6vr
4f4=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.6, 0}, {3.62, 0.007}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ/U0jpv/QVx4HBijQbhe7ee47gp/w9ILS7Z8I/jTn
7pznvxH8Mwtdt33+i+BDAC+cbxa3y5OHCcHP2lMyWYIFwV8gpX9XhQ3Bv1bx
Us2QA8Hnur64wJYLwXcwBRmI4JcBTQvjQ/BXfbzkmySA4D/w752eJ4Tgi6xz
f1glguB78TABvYzg14MdiOBvPVG2b74Ugg9y3RoZBF++9XXgDjkEHxaev+pA
BlXYw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wP
C08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4AyVTV
vA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.62, 0}, {3.64, 0.006}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLd/6OnCHHK8DAxQEP146+4gCgt/lmPD0ghKCv2++
lP5dFQT/698rFS/VEHzNmP5DXzUQ/PhdnjxM2gj+ZAmWMD5dBP9UGchEBP8f
yDhDBN/EGAQQ/MyJb2vsTRH8ee+XH/M2R/Av+yYJRFgi+BxrZKJSrBF8O67r
iwtsEfziDJCBCP5KoGmdjgj+XRW2xqnOCL5w84FTC10RfI+HVSLr3BF8WHhW
A0UfVpXYw8ITxoeFJ4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeF
J4wPC08YHxaeMD4sPGF8WHjC+LDwhPFh4Qnjw8ITxoeFJ4wPC08YHxaeMD4A
I2HJgA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.64, 0}, {3.66, 0.005}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQ7fGwSmSdO68DAxTU2pvG7fJE8DfNfb/8mDeC/+L3
yo+XfBF8uagU6/v+CH7QDrnW14EIfofYzXPfgxH8PSWTJVjCEPxPl3yTBCIQ
fA1DjjUyUQh+TP+hrxoxCP6ktzVAFyL4J7zNOx0TEPw/IOclIfhGIONSEPz0
NBBA8OccUdhQlIHgX1K6/bMuC8Fnb5zq3J2D4Nvc9++dnofgF9pyXV9cgODD
wrMaSD6sKrGHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeM
DwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxh
fAASwNHY
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.66, 0}, {3.68, 0.005}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEw2EYx/G/HXZIHTYdky0zqUPHmaTYYZKpdZp0msbs0GoymRmTSjJr
MrPtOJYuKZKkUyodk+hQSZcuiSU7bIr2T1+/h9frc3m9z9cZjs9GLIZhDHWO
eS+PdT3UlnomjP+pVy8dhwn5qZWJna/ItpD3+CYp+0++fu5X5XTvgf81JR8l
ooWPtPx2O/DYysh9I88ua1YO5kqL9jV54z142r8un012W4Y35cbe9ZRnS3Zb
s0Xftjy3MPoynZN3LpqD83n5qrNttCC3zXV35b/vFeWI+VxJrpTNken5vf95
FwjPjNMT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xP/
AiwN7tI=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.68, 0}, {3.7, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2Ecx/FXdkhskk4d0oxJdOiww2LWoezUWJFGkpcuSe3UYdKlOiUd
pyYz88qYmUwmSVaHdCi6RJ1SJFF2yKQdep/s6/fn8fhcHs//67dXpxY7LMsa
co+5D/bNeMes9tw1p1+crOyZ8Q0fH8qj1eu185yc6tm8uMnLTirS9VCQH2/N
g7J57etIHt9Zfvstyun34EhnSS7HntO9ZfnVyV4NVOS+/w/Kcbt7NlyVt9zf
TZzItf7tj0RN/lyPhuZP5cDTz8bSmZwMm4Xl3cyKu7F8+T04t1eX6dkqNu4n
7YUoPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE9MT0xPTE98R81
+PZw
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.7, 0}, {3.72, 0.002}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxF0EFEg2EAxvHPJJn6JJPpMJZJStJhx2wk6ZDVDjslGZFMJR1m9+nQZibq
FE2ndcjsMEmnHZMkkiTpkKQyk8qs0b5t/56X1+t3eJ/D3x1eCy7ZDMMYql/r
fZ87ccXfuvxG67hzG8vpDzlkjuT3S3Ii8lLNluXieWay8Cl/D86nil/y8Fbv
3eWPvPh81X9fkXcntuuL8oU1V5Obx/y3d+F0utMmr5xt7jjb5IO+0QdPu3wT
fR0Y65Dtt4fr43bZ1xiUrbWQKR+Vr2fC3fJjILm32iM7jqeeYg6Znr9Z6+Os
j56YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnpiemJ6YnvgPywjn
zg==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.74, 0}, {3.76, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQLbLO/WGVCJ8DAxR48jBpt4sh+PVZe0omSyD4W06U
7ZsvheC/UjPkWCOD4Mu1vg7cIYfghzxeOvuIAoLf4Zjw9IISgg80TP+uCoL/
5e+VipdqCL5GTP+hrxoIftwukAsR/MkSLGF8ugg+2Hn6CD7YOEME3xgMEPyM
iW9r7E0R/Lnvlx/zNkfwL/kmCURYIvhAz0alWCP4tlzXFxfYIviw8Pyz8iNQ
a4A9LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw
8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ4wMA1z3c
HA==
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], RectangleBox[{3.76, 0}, {3.78, 0.001}]}}, {
      {EdgeForm[None], GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGDQAmIQbct1fXGBLZ8DAxQUZUx8W2OP4C8/5m3e6Yjg31Fh
a5zqjOALNR84tdAVwfd4WCWyzh3Br7U3jdvlieBvnPseaCSC//z3yo+XfBF8
2agU6/v+CH7QDrnW14EIfpvYzXPfgxH8PSWTJVjCEHygYUkCEQi+miHHGpko
BD+6/9BXjRgEH+Rb0zgEH+zdBAT/D8h5SQi+Aci4FAQ/DQwQfFh4QvQF2MPC
E8aHhSeMDwtPGB8WnjA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8W
njA+LDxhfFh4wviw8ITxYeEJ48PCE8aHhSeMDwtPGB8WnjA+AN8/5mY=
        "], 
        PolygonBox[{{1, 2, 23, 22}, {2, 3, 24, 23}, {3, 4, 25, 24}, {4, 5, 26,
          25}, {5, 6, 27, 26}, {6, 7, 28, 27}, {7, 8, 29, 28}, {8, 9, 30, 
         29}, {9, 10, 31, 30}, {10, 11, 32, 31}, {11, 12, 33, 32}, {12, 13, 
         34, 33}, {13, 14, 35, 34}, {14, 15, 36, 35}, {15, 16, 37, 36}, {16, 
         17, 38, 37}, {17, 18, 39, 38}, {18, 19, 40, 39}, {19, 20, 41, 40}, {
         20, 21, 42, 41}}],
        VertexColors->CompressedData["
1:eJxTTMoPSmViYGDQAmJmIC605bq+uOCtvdWWE2X75t+ynzUTBE7a63ybfndy
+1v7dYtXcS56d9v+JFBWSv+s/bN1qk+a5721V5rcM6fV9q79n5UfL/kmXbBf
mL75VfHWt/ZTm/L0M3vu2U+RYAnj071kH6Pg+DH5zFt7zqKAQz6379vrtIvd
PPf9sr04kAx+/NZ+n8FMLYmpD+wPf9WI6T901f7SxJh/zr/e2ldocH3ptHlo
H5Vifd+/97p9j9crFhPBd/ZGCtV7fz9+aP8JaKtAxE17d+YKbhWNd/ZvxN+0
5XY/su9yTHh6Qem2PdMeViER+3f2y/hjA+4bPbZX2lCUMfHtHfs9JZOBLntn
n8B+TjLw1mP7nXKtrwN33LMv11WU/5Lzzl7qv93jQ41P7Fcc8zbvdHxgbwT2
8Dv7y9/WrzHRfGr/5e+VipdqD+3fzrPRuTLrnX3vO4WyZRee2juYxu3y5Hlk
vyL8lNGRje/s3Z5NtJeoeGbfk/P898qPj+yBjrXccuKdPeM9Js4u+ef2NxYX
AEP+sb3syaf2S+6/s999tfjS72PP7VVu/6zL2vPE/kZjsduUb+/sS84+mZ2b
98I+X6j5wKmFT+0nWTH6tvC+t9c7Gpp6X/Sl/R5PHibt9mf2vp/7gktU3tu/
2HNML3DvS3u2xqnO3TnP7TnWyACD8L39oi3mPw6lvLIP2gHy8Av70XgfmfEO
AC6lCNc=
         "]]}, 
      {FaceForm[None], 
       RectangleBox[{3.78, 0}, {3.8, 0.001}]}}}, {}, {}}, {{}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2.9024, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  PlotRange->{{2.92, 3.8}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.814707121835697*^9, 3.814707246004067*^9, 3.814707467375957*^9, 
   3.814707508952814*^9, 3.814707563068767*^9, 3.814707598226927*^9, 
   3.8147076323983307`*^9, 3.814707679262192*^9, 3.814708057823173*^9, 
   3.814708102223227*^9, 3.8147081748297043`*^9, 3.81470828605875*^9, 
   3.814708319465703*^9, 3.814708360495945*^9, {3.814708745034541*^9, 
   3.814708785575159*^9}, 3.814708883028006*^9, 3.814709001751274*^9, {
   3.814709069757257*^9, 3.81470909646764*^9}, 3.814710104329525*^9, 
   3.814710141897587*^9, 3.8147106615013027`*^9, 3.814710906043202*^9, 
   3.814711019655867*^9, 3.8147114155951033`*^9, 3.814712941412764*^9, 
   3.814713164303524*^9, 3.814713451727862*^9, 3.8147137043161573`*^9, 
   3.814714597532626*^9, 3.814714675650498*^9, {3.814715400764621*^9, 
   3.8147154107554817`*^9}, 3.814715448759016*^9, 3.81472368005833*^9, 
   3.8147242506628923`*^9, 3.814724308059238*^9, 3.814724340680917*^9, 
   3.814724512672711*^9, {3.814724576642333*^9, 3.8147245844101667`*^9}, 
   3.814724617814341*^9, 3.8147255472479*^9, 3.814725585918847*^9, 
   3.81472569413021*^9, 3.814725733254437*^9, {3.814725826584785*^9, 
   3.814725939822445*^9}, 3.814726076327155*^9, 3.814726155285399*^9, 
   3.8147262306680517`*^9, 3.814726275212141*^9, {3.814726383326068*^9, 
   3.814726409132824*^9}, 3.81472654391012*^9, 3.814729440532484*^9, 
   3.814729669709889*^9, 3.8147298369960957`*^9, 3.814784174205969*^9, 
   3.814785261806469*^9, 3.814786868879668*^9, 3.8147871780805597`*^9, 
   3.814787245521923*^9, 3.814789309254354*^9, 3.8147905652448483`*^9, 
   3.814795527439177*^9, {3.8147956829184837`*^9, 3.814795701365809*^9}, 
   3.8147962131104183`*^9, 3.814796270569482*^9, 3.8147976930011*^9, 
   3.814797796662898*^9, 3.814797889607683*^9, 3.814798484717277*^9, 
   3.8147985246749077`*^9, 3.814798639379003*^9, {3.8147986752019787`*^9, 
   3.814798721799391*^9}, {3.814798898015644*^9, 3.8147989010257473`*^9}, {
   3.814798934246084*^9, 3.8147989477636213`*^9}, 3.8147990309206457`*^9, 
   3.814799146467016*^9, 3.814799190644539*^9, 3.814799234434958*^9, 
   3.814799516724059*^9, 3.814803350840925*^9, 3.814803394305068*^9, 
   3.8148034431117353`*^9, 3.814803479838914*^9, 3.8148035124769793`*^9, 
   3.814808290151285*^9, 3.814808458972611*^9, 3.814808538919442*^9, 
   3.814808752163599*^9, 3.8148160229050922`*^9, 3.814817037984527*^9, 
   3.814817201577187*^9, 3.814817936719736*^9, {3.814818379592352*^9, 
   3.8148183987223377`*^9}, {3.8148198980476837`*^9, 3.814819919432818*^9}, 
   3.814897266907378*^9, {3.8149628758019867`*^9, 3.8149629093918*^9}, 
   3.814964270817596*^9, 3.8149656611819963`*^9, 3.814968798063834*^9, 
   3.814982315995479*^9, 3.814982432958005*^9, 3.814986505447137*^9, 
   3.814986646900593*^9, 3.8149880343138533`*^9, 3.815045480235252*^9, 
   3.815048176457209*^9, 3.8150490981034403`*^9, 3.815052452360868*^9, 
   3.815053591853331*^9, 3.81505363194197*^9, 3.815056186052668*^9, 
   3.815134396588818*^9, 3.815135158083645*^9, 3.815135500528186*^9, 
   3.815136327119062*^9, 3.815136645193815*^9, 3.8151366966018744`*^9, 
   3.815136812839506*^9, 3.815137040497368*^9, 3.815137169767126*^9, 
   3.815137373983944*^9, 3.815137521445765*^9, 3.815137597914557*^9, 
   3.8151384319879637`*^9, 
   3.8151386936013527`*^9},ExpressionUUID->"29e1cacf-0cf5-466c-b6e9-\
a3cbf4a97477"]
}, Open  ]],

Cell["\<\
So what are we doing here ? We\[CloseCurlyQuote]re not here to spank frogs, \
right ? :))

We first run a single simulation (with n*m samples=10^7).
Then we run multiple simulations (each with n samples=10^4) * (m=10^3) \
replicates.

At least in Mathematica, - the latter approach is always faster than the \
former (use AbsoluteTiming to check this)

Let\[CloseCurlyQuote]s first quantify the relative % of our simulations.\
\>", "Text",
 CellChangeTimes->{{3.814708641579577*^9, 3.8147087112429743`*^9}, {
  3.8147089266795797`*^9, 3.814708978315426*^9}, {3.814709878069063*^9, 
  3.814710031047715*^9}, {3.814710205580432*^9, 3.814710252019003*^9}, {
  3.814714998764003*^9, 3.8147150087323217`*^9}, {3.814716096203259*^9, 
  3.8147161234048233`*^9}, {3.8148117556296787`*^9, 
  3.8148117652813463`*^9}},ExpressionUUID->"e5396741-248d-4e03-8a12-\
c1550f41f211"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
  RowBox[{"100", "*", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Rnm", "/", "RnXm"}], ")"}], "-", "1"}], ")"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.814709852717937*^9, 3.814709861761644*^9}, {
   3.814714694591484*^9, 3.8147147017011433`*^9}, {3.8147148954652452`*^9, 
   3.814714897693767*^9}, 3.814715876061018*^9, {3.814715963566564*^9, 
   3.814715964058404*^9}, {3.814818557458026*^9, 
   3.814818557701455*^9}},ExpressionUUID->"a35864f0-5f70-49d5-870f-\
7dd827ce211a"],

Cell[BoxData[
 TemplateBox[{"0.15304608887545257`","\"%\"","percent","\"Percent\""},
  "QuantityPostfix"]], "Output",
 CellChangeTimes->{
  3.8147098634161043`*^9, 3.8147114211405983`*^9, 3.814713453880577*^9, 
   3.814714704348358*^9, 3.814714898269498*^9, 3.814715457825021*^9, 
   3.814715877413582*^9, 3.814715965132703*^9, 3.814726413833947*^9, 
   3.8147265484844713`*^9, 3.814729442499831*^9, 3.814729676129414*^9, 
   3.8147298389944696`*^9, 3.814784176878827*^9, 3.8147852646570683`*^9, 
   3.814786870777063*^9, 3.81478718087939*^9, 3.814787248243136*^9, 
   3.81479056725366*^9, 3.814795548627891*^9, 3.8147957048149652`*^9, 
   3.814799148752632*^9, 3.814799252498399*^9, 3.814803530551177*^9, 
   3.81480877016459*^9, 3.814816040901528*^9, 3.814817059177421*^9, 
   3.814817202084607*^9, 3.814817937310122*^9, 3.814818381015332*^9, {
   3.814818552200539*^9, 3.8148185636278677`*^9}, 3.814819920305736*^9, 
   3.814962876749695*^9, 3.8149642733123903`*^9, 3.814965663052773*^9, 
   3.814968800457807*^9, 3.814982316941934*^9, 3.8149824354739027`*^9, 
   3.814986507729607*^9, 3.814986649397909*^9, 3.8149880352403383`*^9, 
   3.8150454826247*^9, 3.815048177404258*^9, 3.815049099000296*^9, 
   3.815052459678359*^9, 3.815053592736103*^9, 3.815056186972082*^9, 
   3.815134399162936*^9, 3.8151351589890223`*^9, 3.815135501502492*^9, 
   3.8151363298078823`*^9, 3.815136646205906*^9, 3.815136697503407*^9, 
   3.815136813655134*^9, 3.815137049861467*^9, 3.8151371712451077`*^9, 
   3.815137374906781*^9, 3.8151375223477097`*^9, 3.81513759882557*^9, 
   3.815138441392373*^9, 
   3.815138695751236*^9},ExpressionUUID->"2824b36d-5509-4dda-9863-\
4df6a778015e"]
}, Open  ]],

Cell["\<\

Let\[CloseCurlyQuote]s start our analysis with data00, ie. the one from the \
n*m simulation,
using Mathematica buildin stuff for that\
\>", "Text",
 CellChangeTimes->{{3.8147125951507874`*^9, 3.8147126203738422`*^9}, {
  3.814712787301056*^9, 
  3.814712805772863*^9}},ExpressionUUID->"ac882883-33df-42dc-9e21-\
2cb3ee05a1f7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Variance", "[", "data00", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "data00", "]"}]}], "Input",
 CellChangeTimes->{{3.8147114594209347`*^9, 3.814711467878871*^9}, {
  3.814711586025182*^9, 3.814711596893045*^9}, {3.814711883183921*^9, 
  3.814711884923089*^9}, {3.81471249664911*^9, 
  3.814712503713945*^9}},ExpressionUUID->"e5c3e432-24ea-4a05-b22c-\
af029556e535"],

Cell[BoxData["1.7599227494341452`"], "Output",
 CellChangeTimes->{
  3.814712627300518*^9, 3.814713172838696*^9, 3.81471345389356*^9, 
   3.814713775452338*^9, 3.8147154766769333`*^9, 3.8147262453710213`*^9, 
   3.814726287447631*^9, 3.8147264178586483`*^9, 3.814726553419548*^9, 
   3.814729442528907*^9, 3.814729677888158*^9, 3.814729839010129*^9, 
   3.814784176886321*^9, 3.814785264666403*^9, 3.814786870785884*^9, 
   3.814787180888213*^9, 3.8147872482510777`*^9, 3.8147905672643948`*^9, 
   3.8147955507181587`*^9, 3.8147957057673492`*^9, 3.814799148775929*^9, 
   3.814799252540175*^9, 3.814803530604892*^9, 3.814808770197372*^9, 
   3.814816040952621*^9, 3.814817059212227*^9, 3.814817202110353*^9, 
   3.8148179373435497`*^9, 3.814818381021797*^9, {3.814818565820239*^9, 
   3.814818580012062*^9}, 3.814819920314556*^9, 3.8149628767558403`*^9, 
   3.814964273318884*^9, 3.814965663057682*^9, 3.814968800462873*^9, 
   3.814982316947686*^9, 3.814982435481744*^9, 3.814986507735771*^9, 
   3.814986649403763*^9, 3.814988035246632*^9, 3.8150454826315737`*^9, 
   3.815048177424416*^9, 3.815049099007697*^9, 3.815052461457889*^9, 
   3.815053592742014*^9, 3.815053640701416*^9, 3.81505618697711*^9, 
   3.8150586278146057`*^9, 3.8151343991686573`*^9, 3.815135158994451*^9, 
   3.8151355015153637`*^9, 3.8151363298142443`*^9, 3.815136646217877*^9, 
   3.815136697509903*^9, 3.815136813661602*^9, 3.815137171252316*^9, 
   3.815137374913105*^9, 3.815137522353834*^9, 3.815137598831792*^9, 
   3.8151386958180923`*^9},ExpressionUUID->"b37c98b6-59f9-4398-94c3-\
26b4e45a47f7"],

Cell[BoxData["1.3266208009201972`"], "Output",
 CellChangeTimes->{
  3.814712627300518*^9, 3.814713172838696*^9, 3.81471345389356*^9, 
   3.814713775452338*^9, 3.8147154766769333`*^9, 3.8147262453710213`*^9, 
   3.814726287447631*^9, 3.8147264178586483`*^9, 3.814726553419548*^9, 
   3.814729442528907*^9, 3.814729677888158*^9, 3.814729839010129*^9, 
   3.814784176886321*^9, 3.814785264666403*^9, 3.814786870785884*^9, 
   3.814787180888213*^9, 3.8147872482510777`*^9, 3.8147905672643948`*^9, 
   3.8147955507181587`*^9, 3.8147957057673492`*^9, 3.814799148775929*^9, 
   3.814799252540175*^9, 3.814803530604892*^9, 3.814808770197372*^9, 
   3.814816040952621*^9, 3.814817059212227*^9, 3.814817202110353*^9, 
   3.8148179373435497`*^9, 3.814818381021797*^9, {3.814818565820239*^9, 
   3.814818580012062*^9}, 3.814819920314556*^9, 3.8149628767558403`*^9, 
   3.814964273318884*^9, 3.814965663057682*^9, 3.814968800462873*^9, 
   3.814982316947686*^9, 3.814982435481744*^9, 3.814986507735771*^9, 
   3.814986649403763*^9, 3.814988035246632*^9, 3.8150454826315737`*^9, 
   3.815048177424416*^9, 3.815049099007697*^9, 3.815052461457889*^9, 
   3.815053592742014*^9, 3.815053640701416*^9, 3.81505618697711*^9, 
   3.8150586278146057`*^9, 3.8151343991686573`*^9, 3.815135158994451*^9, 
   3.8151355015153637`*^9, 3.8151363298142443`*^9, 3.815136646217877*^9, 
   3.815136697509903*^9, 3.815136813661602*^9, 3.815137171252316*^9, 
   3.815137374913105*^9, 3.815137522353834*^9, 3.815137598831792*^9, 
   3.815138695824535*^9},ExpressionUUID->"46b72355-ce16-4e29-b48e-\
c17577446284"]
}, Open  ]],

Cell["\<\

Now go for the usual approach where we pretend to have the true value to \
compare against\
\>", "Text",
 CellChangeTimes->{{3.814712813785372*^9, 3.814712851247305*^9}, {
  3.814712969866716*^9, 
  3.8147129712860317`*^9}},ExpressionUUID->"064e2c99-6ce1-4310-9d53-\
ff6c8e58f95f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Clear", "[", "sqr", "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqr", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"data00", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<variance\>\"", ",", 
   RowBox[{"VARt", "=", 
    RowBox[{"sqr", "/", 
     RowBox[{"(", 
      RowBox[{"n", "*", "m"}], ")"}]}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<std\>\"", ",", 
    RowBox[{"STDt", "=", 
     SqrtBox["VARt"]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSEt\>\"", ",", 
   SqrtBox[
    FractionBox[
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"data00", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
          "-", "STDt"}], ")"}], "2"], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "*", "m"}], ")"}], "*", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "*", "m"}], ")"}], "-", "1"}], ")"}]}]]]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814710710666909*^9, 3.814710774607411*^9}, {
   3.814711069020011*^9, 3.81471107358739*^9}, {3.814711141133284*^9, 
   3.8147111758050613`*^9}, 3.814711227719679*^9, 3.814711267362607*^9, 
   3.8147112977123327`*^9, {3.8147114544949713`*^9, 3.814711456514471*^9}, {
   3.8147116113436127`*^9, 3.814711646618533*^9}, {3.814711681156907*^9, 
   3.81471169155311*^9}, {3.814711890226179*^9, 3.8147118903852673`*^9}, 
   3.814712282246616*^9, {3.814712352852582*^9, 3.8147124716278353`*^9}, 
   3.814712645802086*^9, {3.814712702344667*^9, 3.814712711771343*^9}, {
   3.814713673536193*^9, 3.8147136806472397`*^9}, {3.814713976450911*^9, 
   3.8147139926516743`*^9}, 3.81471441027512*^9, {3.814715301011181*^9, 
   3.814715332146903*^9}, 
   3.814726301720748*^9},ExpressionUUID->"b914ebd7-5986-496e-9547-\
c32c075c2305"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"variance\"\>", ",", "1.7599282097942115`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147137147629004`*^9, 3.8147139936535892`*^9, 3.814714415157167*^9, 
   3.814715419310925*^9, 3.81471547961193*^9, 3.814726249107481*^9, {
   3.8147262894314938`*^9, 3.8147263031726427`*^9}, 3.81472642018493*^9, 
   3.81472655546068*^9, 3.814729442937716*^9, 3.8147296823897038`*^9, 
   3.814729839412221*^9, 3.814784177239046*^9, 3.814785265028225*^9, 
   3.814786871135749*^9, 3.814787181256057*^9, 3.814787248598453*^9, 
   3.814790567637266*^9, 3.814795556211334*^9, 3.814795706960905*^9, 
   3.8147991491422443`*^9, 3.814799255799646*^9, 3.814803533856923*^9, 
   3.8148087735125837`*^9, 3.814816044428259*^9, 3.814817062600294*^9, 
   3.81481720218301*^9, 3.814817937387951*^9, 3.814818381078477*^9, {
   3.814818418425796*^9, 3.8148184269015007`*^9}, 3.814818578053851*^9, 
   3.814819920393755*^9, 3.814962876834833*^9, 3.814964273389505*^9, 
   3.814965663126851*^9, 3.814968800520561*^9, 3.81498231701904*^9, 
   3.814982435569083*^9, 3.8149865078169537`*^9, 3.8149866494761333`*^9, 
   3.814988035318346*^9, 3.815045482697165*^9, 3.8150481774875517`*^9, 
   3.8150490990689297`*^9, 3.8150524629253893`*^9, 3.8150535928080263`*^9, 
   3.815053641746731*^9, 3.815056187064152*^9, 3.8151343992231092`*^9, 
   3.81513515905425*^9, 3.8151355016002827`*^9, 3.815136329876378*^9, 
   3.815136646285038*^9, 3.81513669758807*^9, 3.8151368137176867`*^9, 
   3.815137171334736*^9, 3.815137374988318*^9, 3.8151375224343977`*^9, 
   3.815137598903644*^9, 
   3.815138695899406*^9},ExpressionUUID->"3da26ded-beb5-43ee-a7ae-\
deeca2e25b9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.3266228589143982`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147137147629004`*^9, 3.8147139936535892`*^9, 3.814714415157167*^9, 
   3.814715419310925*^9, 3.81471547961193*^9, 3.814726249107481*^9, {
   3.8147262894314938`*^9, 3.8147263031726427`*^9}, 3.81472642018493*^9, 
   3.81472655546068*^9, 3.814729442937716*^9, 3.8147296823897038`*^9, 
   3.814729839412221*^9, 3.814784177239046*^9, 3.814785265028225*^9, 
   3.814786871135749*^9, 3.814787181256057*^9, 3.814787248598453*^9, 
   3.814790567637266*^9, 3.814795556211334*^9, 3.814795706960905*^9, 
   3.8147991491422443`*^9, 3.814799255799646*^9, 3.814803533856923*^9, 
   3.8148087735125837`*^9, 3.814816044428259*^9, 3.814817062600294*^9, 
   3.81481720218301*^9, 3.814817937387951*^9, 3.814818381078477*^9, {
   3.814818418425796*^9, 3.8148184269015007`*^9}, 3.814818578053851*^9, 
   3.814819920393755*^9, 3.814962876834833*^9, 3.814964273389505*^9, 
   3.814965663126851*^9, 3.814968800520561*^9, 3.81498231701904*^9, 
   3.814982435569083*^9, 3.8149865078169537`*^9, 3.8149866494761333`*^9, 
   3.814988035318346*^9, 3.815045482697165*^9, 3.8150481774875517`*^9, 
   3.8150490990689297`*^9, 3.8150524629253893`*^9, 3.8150535928080263`*^9, 
   3.815053641746731*^9, 3.815056187064152*^9, 3.8151343992231092`*^9, 
   3.81513515905425*^9, 3.8151355016002827`*^9, 3.815136329876378*^9, 
   3.815136646285038*^9, 3.81513669758807*^9, 3.8151368137176867`*^9, 
   3.815137171334736*^9, 3.815137374988318*^9, 3.8151375224343977`*^9, 
   3.815137598903644*^9, 
   3.815138695908256*^9},ExpressionUUID->"8108efbc-78ea-463d-9f3d-\
4bdf624df95c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSEt\"\>", ",", "0.011883269927839262`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147137147629004`*^9, 3.8147139936535892`*^9, 3.814714415157167*^9, 
   3.814715419310925*^9, 3.81471547961193*^9, 3.814726249107481*^9, {
   3.8147262894314938`*^9, 3.8147263031726427`*^9}, 3.81472642018493*^9, 
   3.81472655546068*^9, 3.814729442937716*^9, 3.8147296823897038`*^9, 
   3.814729839412221*^9, 3.814784177239046*^9, 3.814785265028225*^9, 
   3.814786871135749*^9, 3.814787181256057*^9, 3.814787248598453*^9, 
   3.814790567637266*^9, 3.814795556211334*^9, 3.814795706960905*^9, 
   3.8147991491422443`*^9, 3.814799255799646*^9, 3.814803533856923*^9, 
   3.8148087735125837`*^9, 3.814816044428259*^9, 3.814817062600294*^9, 
   3.81481720218301*^9, 3.814817937387951*^9, 3.814818381078477*^9, {
   3.814818418425796*^9, 3.8148184269015007`*^9}, 3.814818578053851*^9, 
   3.814819920393755*^9, 3.814962876834833*^9, 3.814964273389505*^9, 
   3.814965663126851*^9, 3.814968800520561*^9, 3.81498231701904*^9, 
   3.814982435569083*^9, 3.8149865078169537`*^9, 3.8149866494761333`*^9, 
   3.814988035318346*^9, 3.815045482697165*^9, 3.8150481774875517`*^9, 
   3.8150490990689297`*^9, 3.8150524629253893`*^9, 3.8150535928080263`*^9, 
   3.815053641746731*^9, 3.815056187064152*^9, 3.8151343992231092`*^9, 
   3.81513515905425*^9, 3.8151355016002827`*^9, 3.815136329876378*^9, 
   3.815136646285038*^9, 3.81513669758807*^9, 3.8151368137176867`*^9, 
   3.815137171334736*^9, 3.815137374988318*^9, 3.8151375224343977`*^9, 
   3.815137598903644*^9, 
   3.815138695953421*^9},ExpressionUUID->"92ab7ab9-0cb3-428b-827d-\
7b263710c22b"]
}, Open  ]],

Cell["\<\

Let\[CloseCurlyQuote]s take a full sim estimated outcome and use it as true \
value for our error estimation (aka empirical error)\
\>", "Text",
 CellChangeTimes->{{3.814713012121365*^9, 3.81471303532019*^9}, {
  3.814713281087901*^9, 3.8147132851366796`*^9}, {3.8147136084174137`*^9, 
  3.814713616473361*^9}},ExpressionUUID->"f8d88617-9790-4647-ad1e-\
68776d67fae6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "eValue", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eValue", "=", 
    RowBox[{"data03", "[", 
     RowBox[{"[", 
      RowBox[{"RandomInteger", "[", "100", "]"}], "]"}], "]"}]}], ";"}], " ", 
  
  RowBox[{"(*", " ", 
   RowBox[{"point", " ", "estimator"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<variance\>\"", ",", 
   RowBox[{"VARe", "=", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"data00", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "-", "eValue"}], ")"}], "2"], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"n", "*", "m"}]}], "}"}]}], "]"}], " ", "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"n", "*", "m"}], "-", "1"}], ")"}]}], ")"}]}]}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<std\>\"", ",", 
    RowBox[{"STDe", "=", 
     SqrtBox["VARe"]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSEe\>\"", ",", 
   RowBox[{"MCSE", " ", "=", " ", 
    RowBox[{"STDe", "/", 
     SqrtBox[
      RowBox[{"2", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", "*", "m"}], ")"}], "-", "1"}], ")"}]}]]}]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814713049901511*^9, 3.8147131218770323`*^9}, {
   3.8147132323983707`*^9, 3.8147132350293417`*^9}, {3.814713306788096*^9, 
   3.814713347757819*^9}, {3.814713740988481*^9, 3.814713748885569*^9}, {
   3.814714005139617*^9, 3.814714026404538*^9}, {3.814714194707155*^9, 
   3.814714260291024*^9}, 3.814714412302628*^9, {3.814715359172112*^9, 
   3.8147153635562153`*^9}, {3.814726336954247*^9, 3.8147263697778597`*^9}, {
   3.8147852203848057`*^9, 
   3.814785237305954*^9}},ExpressionUUID->"8078f9d9-c18b-4a77-be62-\
8d007b4dec35"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"variance\"\>", ",", "1.7599230086061162`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148183811673193`*^9, {3.81481841648955*^9, 3.814818428212816*^9}, 
   3.8148199204830627`*^9, 3.814962876911448*^9, 3.81496427350386*^9, 
   3.814965663198406*^9, 3.8149688006067467`*^9, 3.814982317091763*^9, 
   3.8149824356791487`*^9, 3.814986507907029*^9, 3.814986649573371*^9, 
   3.814988035418107*^9, 3.815045482783807*^9, 3.815048177561692*^9, 
   3.8150490991420507`*^9, 3.815052473136935*^9, 3.815053592903534*^9, 
   3.815053643045858*^9, 3.815056187140378*^9, 3.8151343993049717`*^9, 
   3.815135159129366*^9, 3.815135501710346*^9, 3.815136329961947*^9, 
   3.8151366463675137`*^9, 3.815136697681198*^9, 3.815136813805614*^9, 
   3.815137171419772*^9, 3.815137375068324*^9, 3.8151375225386*^9, 
   3.815137598988722*^9, 
   3.8151386960060673`*^9},ExpressionUUID->"284b9afa-bb51-4a08-862b-\
752172cc2ce8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.3266208986014492`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148183811673193`*^9, {3.81481841648955*^9, 3.814818428212816*^9}, 
   3.8148199204830627`*^9, 3.814962876911448*^9, 3.81496427350386*^9, 
   3.814965663198406*^9, 3.8149688006067467`*^9, 3.814982317091763*^9, 
   3.8149824356791487`*^9, 3.814986507907029*^9, 3.814986649573371*^9, 
   3.814988035418107*^9, 3.815045482783807*^9, 3.815048177561692*^9, 
   3.8150490991420507`*^9, 3.815052473136935*^9, 3.815053592903534*^9, 
   3.815053643045858*^9, 3.815056187140378*^9, 3.8151343993049717`*^9, 
   3.815135159129366*^9, 3.815135501710346*^9, 3.815136329961947*^9, 
   3.8151366463675137`*^9, 3.815136697681198*^9, 3.815136813805614*^9, 
   3.815137171419772*^9, 3.815137375068324*^9, 3.8151375225386*^9, 
   3.815137598988722*^9, 
   3.815138696014903*^9},ExpressionUUID->"7f23f342-3aef-4b4c-a581-\
c88ba9b22c77"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSEe\"\>", ",", "0.002966429341828486`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148183811673193`*^9, {3.81481841648955*^9, 3.814818428212816*^9}, 
   3.8148199204830627`*^9, 3.814962876911448*^9, 3.81496427350386*^9, 
   3.814965663198406*^9, 3.8149688006067467`*^9, 3.814982317091763*^9, 
   3.8149824356791487`*^9, 3.814986507907029*^9, 3.814986649573371*^9, 
   3.814988035418107*^9, 3.815045482783807*^9, 3.815048177561692*^9, 
   3.8150490991420507`*^9, 3.815052473136935*^9, 3.815053592903534*^9, 
   3.815053643045858*^9, 3.815056187140378*^9, 3.8151343993049717`*^9, 
   3.815135159129366*^9, 3.815135501710346*^9, 3.815136329961947*^9, 
   3.8151366463675137`*^9, 3.815136697681198*^9, 3.815136813805614*^9, 
   3.815137171419772*^9, 3.815137375068324*^9, 3.8151375225386*^9, 
   3.815137598988722*^9, 
   3.815138696017281*^9},ExpressionUUID->"a865a3ee-13b7-4b77-857f-\
be5ab2f41ed5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\"\<Theoretical VS Estimated STDerror\>\"", ",", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"STDt", "/", "STDe"}], ")"}], "-", "1"}], ")"}]}], "]"}]}], 
  "}"}]], "Input",
 CellChangeTimes->{{3.814715673899776*^9, 
  3.814715758137227*^9}},ExpressionUUID->"82e55449-c9a3-4838-b967-\
a1592550e009"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Theoretical VS Estimated STDerror\"\>", ",", 
   TemplateBox[{"0.0001477673803540469`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.814715674807227*^9, 3.814715759420179*^9}, 
   3.814726438532843*^9, 3.8147265643142357`*^9, 3.8147294436895437`*^9, 
   3.814729692285858*^9, 3.814729840143429*^9, 3.814784177924748*^9, 
   3.814785265724917*^9, 3.8147868718126163`*^9, 3.814787181951652*^9, 
   3.814787249279351*^9, 3.814790568322462*^9, 3.8147957133928947`*^9, 
   3.814799149844674*^9, 3.814799262314782*^9, 3.814803540422226*^9, 
   3.814808780109281*^9, 3.8148160512549343`*^9, 3.814817069311557*^9, 
   3.814817202320427*^9, 3.814817937501395*^9, 3.814818381191348*^9, 
   3.814819920508307*^9, 3.814962876924321*^9, 3.8149642735262947`*^9, 
   3.814965663225122*^9, 3.8149688006265097`*^9, 3.814982317103549*^9, 
   3.814982435702853*^9, 3.814986507928811*^9, 3.814986649595902*^9, 
   3.814988035445139*^9, 3.815045482792594*^9, 3.8150481775868063`*^9, 
   3.815049099152294*^9, 3.815052474665312*^9, 3.815053592929332*^9, 
   3.815056187152974*^9, 3.8151343993281107`*^9, 3.815135159155941*^9, 
   3.815135501732155*^9, 3.8151363299884*^9, 3.8151366463764343`*^9, 
   3.815136697694632*^9, 3.81513681383116*^9, 3.81513717146152*^9, 
   3.8151373750996523`*^9, 3.8151375225603943`*^9, 3.815137599011374*^9, 
   3.815138696036482*^9},ExpressionUUID->"d7df3501-5234-49dc-a61c-\
c9a027efd37c"]
}, Open  ]],

Cell["\<\

Here instead let\[CloseCurlyQuote]s pretend we don\[CloseCurlyQuote]t have a \
clue of what\[CloseCurlyQuote]s the true outcome will be, so we estimate the \
variance and std \
\>", "Text",
 CellChangeTimes->{{3.814712860563176*^9, 3.814712884793777*^9}, {
  3.814787069639797*^9, 
  3.8147870768594913`*^9}},ExpressionUUID->"5a308521-d230-47d0-b5f1-\
e33d36794717"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"k", ",", "y"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"k", "=", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"data00", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "n"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"y", "=", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"data00", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], " ", "*", 
      RowBox[{"(", 
       RowBox[{"1", "/", "n"}], ")"}]}], ")"}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<variance\>\"", ",", 
   RowBox[{"VARes", "=", 
    RowBox[{
     FractionBox["n", 
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}]], "*", 
     RowBox[{"(", 
      RowBox[{"k", "-", "y"}], ")"}]}]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<std\>\"", ",", 
   RowBox[{"STDes", "=", 
    SqrtBox["VARes"]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.814712669858412*^9, 3.814712684839019*^9}, {
  3.814712732695759*^9, 3.814712774411645*^9}, {3.81471401663913*^9, 
  3.814714030159507*^9}, {3.814714208994928*^9, 3.814714222804762*^9}, {
  3.814716169241906*^9, 
  3.814716176773497*^9}},ExpressionUUID->"f9ff74b2-37fd-434a-9f4c-\
438abd9a3b96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"variance\"\>", ",", "1.2090840977138315`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8147126773123007`*^9, 3.814712686343128*^9}, 
   3.8147127760983877`*^9, 3.8147134555434647`*^9, {3.814713763501842*^9, 
   3.814713770509067*^9}, 3.8147140314078197`*^9, 3.8147142788821363`*^9, 
   3.8147144253060513`*^9, {3.814715426858527*^9, 3.8147154403193607`*^9}, 
   3.814715487836131*^9, 3.814715768653064*^9, 3.814716185526002*^9, 
   3.814726442679785*^9, 3.814726474865061*^9, 3.814726566497527*^9, 
   3.8147294442708483`*^9, {3.814729694474951*^9, 3.814729704121602*^9}, 
   3.814729840722311*^9, 3.814784178492443*^9, 3.81478526632364*^9, 
   3.8147868723650293`*^9, 3.814787182525104*^9, 3.8147872498605223`*^9, 
   3.814790568884207*^9, 3.8147957145206013`*^9, 3.8147957669417257`*^9, 
   3.8147991504224033`*^9, 3.814799268028763*^9, 3.8148035461311903`*^9, 
   3.814808785796071*^9, 3.814816057228032*^9, 3.814817075196002*^9, 
   3.8148172023451223`*^9, 3.81481793752017*^9, {3.814818358576638*^9, 
   3.814818381214822*^9}, 3.8148184116631947`*^9, 3.814818601389256*^9, 
   3.814819920530714*^9, 3.814962876963599*^9, 3.814964273545285*^9, 
   3.814965663236158*^9, 3.814968800647686*^9, 3.814982317132695*^9, 
   3.814982435735458*^9, 3.814986507957176*^9, 3.81498664962883*^9, 
   3.814988035467792*^9, 3.815045482821889*^9, 3.815048177598713*^9, 
   3.8150490991769247`*^9, 3.815052476213851*^9, 3.815053592946884*^9, {
   3.8150536472294703`*^9, 3.8150536552882423`*^9}, 3.815056187186243*^9, 
   3.8151343993536673`*^9, 3.815135159166608*^9, 3.8151355017585773`*^9, 
   3.815136330012525*^9, 3.815136646423389*^9, 3.815136697722206*^9, 
   3.8151368138415213`*^9, 3.815137171480646*^9, 3.815137375119383*^9, 
   3.815137522590782*^9, 3.815137599035495*^9, 
   3.815138696060894*^9},ExpressionUUID->"bebec733-9e4b-4d22-a26e-\
0311550ea399"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.0995836019665952`"}], "}"}]], "Output",
 CellChangeTimes->{{3.8147126773123007`*^9, 3.814712686343128*^9}, 
   3.8147127760983877`*^9, 3.8147134555434647`*^9, {3.814713763501842*^9, 
   3.814713770509067*^9}, 3.8147140314078197`*^9, 3.8147142788821363`*^9, 
   3.8147144253060513`*^9, {3.814715426858527*^9, 3.8147154403193607`*^9}, 
   3.814715487836131*^9, 3.814715768653064*^9, 3.814716185526002*^9, 
   3.814726442679785*^9, 3.814726474865061*^9, 3.814726566497527*^9, 
   3.8147294442708483`*^9, {3.814729694474951*^9, 3.814729704121602*^9}, 
   3.814729840722311*^9, 3.814784178492443*^9, 3.81478526632364*^9, 
   3.8147868723650293`*^9, 3.814787182525104*^9, 3.8147872498605223`*^9, 
   3.814790568884207*^9, 3.8147957145206013`*^9, 3.8147957669417257`*^9, 
   3.8147991504224033`*^9, 3.814799268028763*^9, 3.8148035461311903`*^9, 
   3.814808785796071*^9, 3.814816057228032*^9, 3.814817075196002*^9, 
   3.8148172023451223`*^9, 3.81481793752017*^9, {3.814818358576638*^9, 
   3.814818381214822*^9}, 3.8148184116631947`*^9, 3.814818601389256*^9, 
   3.814819920530714*^9, 3.814962876963599*^9, 3.814964273545285*^9, 
   3.814965663236158*^9, 3.814968800647686*^9, 3.814982317132695*^9, 
   3.814982435735458*^9, 3.814986507957176*^9, 3.81498664962883*^9, 
   3.814988035467792*^9, 3.815045482821889*^9, 3.815048177598713*^9, 
   3.8150490991769247`*^9, 3.815052476213851*^9, 3.815053592946884*^9, {
   3.8150536472294703`*^9, 3.8150536552882423`*^9}, 3.815056187186243*^9, 
   3.8151343993536673`*^9, 3.815135159166608*^9, 3.8151355017585773`*^9, 
   3.815136330012525*^9, 3.815136646423389*^9, 3.815136697722206*^9, 
   3.8151368138415213`*^9, 3.815137171480646*^9, 3.815137375119383*^9, 
   3.815137522590782*^9, 3.815137599035495*^9, 
   3.815138696069075*^9},ExpressionUUID->"c13428bc-88e5-44d2-8505-\
e373803ed6f4"]
}, Open  ]],

Cell["\<\

We\[CloseCurlyQuote]re a bit less precise but jeez really enough ;) \
considering we ain\[CloseCurlyQuote]t using the true nor the estimated \[Mu] !\
\>", "Text",
 CellChangeTimes->{{3.814713806665291*^9, 3.8147138581455507`*^9}, 
   3.81471474552649*^9},ExpressionUUID->"d759b942-a554-46dc-8617-\
6e13e5939cb1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"\"\<Against theoretical STDerror\>\"", ",", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"STDt", "/", "STDes"}], ")"}], "-", "1"}], ")"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Against empirical STDerror\>\"", ",", 
   RowBox[{
    RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
    RowBox[{"100", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"STDe", "/", "STDes"}], ")"}], "-", "1"}], ")"}]}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814713899442954*^9, 3.814713945310247*^9}, {
  3.8147140524141006`*^9, 3.8147141737100487`*^9}, {3.8147147366645727`*^9, 
  3.814714762692114*^9}, {3.814714796354529*^9, 3.8147148778686934`*^9}, {
  3.814715068943304*^9, 3.814715119116251*^9}, {3.814715208850518*^9, 
  3.814715220949819*^9}, {3.814715504006308*^9, 3.814715505622032*^9}, {
  3.814715594360238*^9, 3.814715597264389*^9}, {3.814716180420844*^9, 
  3.814716196325416*^9}},ExpressionUUID->"0f409b9c-068b-4fde-9767-\
f63675d6118e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Against theoretical STDerror\"\>", ",", 
   TemplateBox[{"20.647748524236388`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.814714831866251*^9, 3.814714879308915*^9}, {
   3.814715097222473*^9, 3.814715120845584*^9}, 3.814715222112804*^9, 
   3.8147153909603577`*^9, {3.814715435919341*^9, 3.814715443519816*^9}, {
   3.814715492834436*^9, 3.81471550668148*^9}, 3.8147156015597973`*^9, 
   3.814715770955049*^9, {3.8147161882388687`*^9, 3.81471619742927*^9}, {
   3.814726449739275*^9, 3.814726452520022*^9}, 3.814726485377389*^9, 
   3.81472657095168*^9, 3.814729444308776*^9, {3.8147296973892403`*^9, 
   3.814729705610672*^9}, 3.814729840761321*^9, 3.814784178512664*^9, 
   3.8147852663450108`*^9, 3.81478687238868*^9, 3.814787182545601*^9, 
   3.81478724988031*^9, 3.814790568908237*^9, 3.814799150447261*^9, 
   3.8147992680741377`*^9, 3.81480354617557*^9, 3.8148087858404818`*^9, 
   3.8148160572693377`*^9, 3.814817075231661*^9, 3.81481720237298*^9, 
   3.8148179375558033`*^9, 3.8148183812421083`*^9, 3.814818437896695*^9, 
   3.814818599183893*^9, 3.814819920568919*^9, 3.8149628769990377`*^9, 
   3.814964273581106*^9, 3.814965663266749*^9, 3.81496880066923*^9, 
   3.814982317161026*^9, 3.814982435769376*^9, 3.814986507987598*^9, 
   3.8149866496632147`*^9, 3.814988035490322*^9, 3.815045482853057*^9, 
   3.81504817762256*^9, 3.815049099185594*^9, 3.8150524805322866`*^9, 
   3.8150535929800367`*^9, 3.815056187219551*^9, 3.815134399373926*^9, 
   3.815135159194908*^9, 3.815135501785966*^9, 3.815136330038809*^9, 
   3.815136646452129*^9, 3.815136697742766*^9, 3.8151368138677387`*^9, 
   3.815137171513507*^9, 3.815137375157073*^9, 3.815137522623548*^9, 
   3.815137599060948*^9, 
   3.815138696089629*^9},ExpressionUUID->"96de6a22-850f-4b62-a008-\
17bb35441fb4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Against empirical STDerror\"\>", ",", 
   TemplateBox[{"20.64757024648238`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{{3.814714831866251*^9, 3.814714879308915*^9}, {
   3.814715097222473*^9, 3.814715120845584*^9}, 3.814715222112804*^9, 
   3.8147153909603577`*^9, {3.814715435919341*^9, 3.814715443519816*^9}, {
   3.814715492834436*^9, 3.81471550668148*^9}, 3.8147156015597973`*^9, 
   3.814715770955049*^9, {3.8147161882388687`*^9, 3.81471619742927*^9}, {
   3.814726449739275*^9, 3.814726452520022*^9}, 3.814726485377389*^9, 
   3.81472657095168*^9, 3.814729444308776*^9, {3.8147296973892403`*^9, 
   3.814729705610672*^9}, 3.814729840761321*^9, 3.814784178512664*^9, 
   3.8147852663450108`*^9, 3.81478687238868*^9, 3.814787182545601*^9, 
   3.81478724988031*^9, 3.814790568908237*^9, 3.814799150447261*^9, 
   3.8147992680741377`*^9, 3.81480354617557*^9, 3.8148087858404818`*^9, 
   3.8148160572693377`*^9, 3.814817075231661*^9, 3.81481720237298*^9, 
   3.8148179375558033`*^9, 3.8148183812421083`*^9, 3.814818437896695*^9, 
   3.814818599183893*^9, 3.814819920568919*^9, 3.8149628769990377`*^9, 
   3.814964273581106*^9, 3.814965663266749*^9, 3.81496880066923*^9, 
   3.814982317161026*^9, 3.814982435769376*^9, 3.814986507987598*^9, 
   3.8149866496632147`*^9, 3.814988035490322*^9, 3.815045482853057*^9, 
   3.81504817762256*^9, 3.815049099185594*^9, 3.8150524805322866`*^9, 
   3.8150535929800367`*^9, 3.815056187219551*^9, 3.815134399373926*^9, 
   3.815135159194908*^9, 3.815135501785966*^9, 3.815136330038809*^9, 
   3.815136646452129*^9, 3.815136697742766*^9, 3.8151368138677387`*^9, 
   3.815137171513507*^9, 3.815137375157073*^9, 3.815137522623548*^9, 
   3.815137599060948*^9, 
   3.81513869609798*^9},ExpressionUUID->"2746e7ab-b494-44b4-b472-\
603fd48fdb07"]
}, Open  ]],

Cell[TextData[{
 "\n\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\n",
 StyleBox["Let\[CloseCurlyQuote]s now see the the m replicated simulation \
statistics.\n",
  FontVariations->{"Underline"->True}]
}], "Text",
 CellChangeTimes->{{3.8147266688265142`*^9, 3.814726739189958*^9}, {
   3.8147271919740353`*^9, 3.814727203201777*^9}, 3.8147293746715727`*^9, {
   3.81481700562773*^9, 3.814817010080853*^9}, {3.815048264091394*^9, 
   3.815048301283733*^9}},ExpressionUUID->"be776475-8693-40ad-85ce-\
45456beea311"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Variance", "[", "data03", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "data03", "]"}]}], "Input",ExpressionUUID->\
"6350423e-8636-4fce-9d78-38679fa88d15"],

Cell[BoxData["0.01743045680245092`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBeJ/rn1uijlvHD/tkN2qBKSZvp17qgakk5acfQ2iBQya
v4Do6u9LJdSB9JpLbtyaQHqDjvUsbSDdp+hXpgOku35oqOsD6Sdr05eB6J/p
PttAtMtZIyEDIF0ktcITRLu95AwE0Ut4qlJB9INsYS5DIN3Gu+FSGJCuN1pw
vQxI+581aisH0lH7XhhXAGmfLaJ7KoH0s5SloQ1AOtCnMgVEh5k1JDYB6bVv
TItB9Gr2AoVmIP3UOUZ3PsgeVZO6BSB33kz7CKKPuO6YsQhIe0yTV14MpJe5
pKcvAdJbPN5MPwWkpQqffQPRp2btVDwNpE/McewE0Twbzm0A0WUyFttBdMu/
3UdB9A/2wk8gusP7KfcZIJ03OUQORBcFP1IH8+OZN4JoAPf0tmw=
  
  "],ExpressionUUID->"5610600d-90f8-4771-8bdc-7e2ce5f2f2e4"],

Cell[BoxData["0.13202445531965248`"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBeJ/rn1uijlvHD/tkN2qBKSZvp17qgakk5acfQ2iBQya
v4Do6u9LJdSB9JpLbtyaQHqDjvUsbSDdp+hXpgOku35oqOsD6Sdr05eB6J/p
PttAtMtZIyEDIF0ktcITRLu95AwE0Ut4qlJB9INsYS5DIN3Gu+FSGJCuN1pw
vQxI+581aisH0lH7XhhXAGmfLaJ7KoH0s5SloQ1AOtCnMgVEh5k1JDYB6bVv
TItB9Gr2AoVmIP3UOUZ3PsgeVZO6BSB33kz7CKKPuO6YsQhIe0yTV14MpJe5
pKcvAdJbPN5MPwWkpQqffQPRp2btVDwNpE/McewE0Twbzm0A0WUyFttBdMu/
3UdB9A/2wk8gusP7KfcZIJ03OUQORBcFP1IH0Un9zBtBNAD45LaQ
  
  "],ExpressionUUID->"e4e03aed-2005-4b91-99a5-0d419978c492"]
}, Open  ]],

Cell[TextData[{
 "Take care these are the variance and std of all the estimated means we got \
back from replicating the simulation m times. \nSo they\[CloseCurlyQuote]re \
very low because of this (they are all means and very close each) compared to \
the variance of the iid samples of the single simulation.\n\nThis variance is \
called \[OpenCurlyQuote]",
 StyleBox["between variance",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[CloseCurlyQuote] that measures between group/repetitions variation.\nThe \
former variance is called \[OpenCurlyQuote]",
 StyleBox["within variance",
  FontColor->RGBColor[1, 0.5, 0]],
 "\[CloseCurlyQuote] that measures the samples variation.\nWith a bigger \
\[OpenCurlyQuote]within variance\[CloseCurlyQuote] we\[CloseCurlyQuote]re \
expected to have a bigger \[OpenCurlyQuote]between variance\[CloseCurlyQuote] \
because the internal variation will spread outside.\n\nTotal variance is \
between variance + within variance.\n\nThere\[CloseCurlyQuote]s a so called \
",
 StyleBox["Ftest",
  FontColor->RGBColor[1, 0.5, 0]],
 " that does between variance / within variance"
}], "Text",
 CellChangeTimes->{{3.8147993740001163`*^9, 3.814799496514819*^9}, {
  3.8148088818822517`*^9, 3.814808913514338*^9}, {3.814818619666252*^9, 
  3.814818620183695*^9}, {3.815058327917576*^9, 3.815058405114699*^9}, {
  3.815058485418454*^9, 3.815058573255581*^9}, {3.815059562405058*^9, 
  3.815059647162862*^9}},ExpressionUUID->"a7c91594-92cd-4a6c-bbe8-\
04122ac2df98"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ftest", " ", "=", " ", 
  RowBox[{
   RowBox[{"Variance", "[", "data03", "]"}], "/", 
   RowBox[{"Variance", "[", "data00", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8150586093302393`*^9, 3.815058641144273*^9}, {
  3.815058728915361*^9, 
  3.815058730848899*^9}},ExpressionUUID->"6d7cd40a-95b5-4447-aaa1-\
f5c37eefaf2c"],

Cell[BoxData["0.009904103352294982`"], "Output",
 CellChangeTimes->{3.8150586425938997`*^9, 3.815058732612924*^9, 
  3.8151343994042*^9, 3.8151351592245693`*^9, 3.8151355018282948`*^9, 
  3.815136330075856*^9, 3.815136646486154*^9, 3.815136697777276*^9, 
  3.815136813901332*^9, 3.8151371715660267`*^9, 3.815137375202239*^9, 
  3.815137522674745*^9, 3.815137599097706*^9, 
  3.8151386961331882`*^9},ExpressionUUID->"3d759a4e-7eae-42a8-a13e-\
8c25952e783e"]
}, Open  ]],

Cell[TextData[{
 "\nLet\[CloseCurlyQuote]s compute the crude ",
 StyleBox["bias",
  FontVariations->{"Underline"->True}],
 " with"
}], "Text",
 CellChangeTimes->{{3.8147290205538187`*^9, 3.8147290296880493`*^9}, 
   3.8147293966627083`*^9, 3.814730601494135*^9, 3.814787638712636*^9, 
   3.814799467827894*^9, 
   3.815059105227065*^9},ExpressionUUID->"c256859e-f171-44d3-a458-\
f7f17e779cd8"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Bias", "=", 
   RowBox[{
    FractionBox["1", "m"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], 
     RowBox[{"(", 
      RowBox[{
       OverscriptBox[
        SubscriptBox["X", "i"], "^"], "-", "\[Mu]"}], ")"}]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8147290378788157`*^9, 3.814729095999301*^9}, {
  3.8148123517462473`*^9, 
  3.814812353950522*^9}},ExpressionUUID->"9a25a0db-8800-4040-8f1c-\
3b16013d13ae"],

Cell["\<\

Let\[CloseCurlyQuote]s note that we just miss the squared integrand, with \
that we would have a standard variance.
Now, each replicate estimated mean is in data03 so \
\>", "Text",
 CellChangeTimes->{{3.814729283576659*^9, 3.814729298901558*^9}, 
   3.8147294071012907`*^9, {3.8147298013475037`*^9, 3.814729828956151*^9}, {
   3.814812373077416*^9, 
   3.814812435264762*^9}},ExpressionUUID->"771bf713-72f9-426f-b9d6-\
fe1626299b75"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\"\<Bias\>\"", ",", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"data03", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]}], "}"}]], "Input",
 CellChangeTimes->{{3.8147291578294888`*^9, 3.814729164958765*^9}, {
   3.8147292129517317`*^9, 3.8147292201320467`*^9}, 3.814729250914816*^9, {
   3.814729322908313*^9, 3.8147293304466057`*^9}, 3.814795778279006*^9, 
   3.814799057610198*^9},ExpressionUUID->"57a96140-44aa-4f4a-b1f2-\
b265dbcbedb0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bias\"\>", ",", 
   RowBox[{"-", "0.00029903869111958106`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.81472925281571*^9, 3.8147293313697577`*^9, 3.81472938282321*^9, 
   3.8147294443310833`*^9, 3.814729710473414*^9, 3.814729840784268*^9, 
   3.8147841785354548`*^9, 3.8147852663716173`*^9, 3.814786872398305*^9, 
   3.814787182566571*^9, 3.814787249891491*^9, 3.814790568966497*^9, {
   3.8147957744353933`*^9, 3.814795783059849*^9}, 3.814799060076549*^9, 
   3.814799150503269*^9, 3.8147992007685423`*^9, 3.814799268140399*^9, 
   3.814799506811397*^9, 3.8147995615063963`*^9, 3.8148035462558317`*^9, 
   3.8148087858880033`*^9, 3.8148160573225193`*^9, 3.814817075268037*^9, 
   3.814817202418921*^9, 3.81481793762333*^9, 3.81481838128032*^9, 
   3.814818445463429*^9, 3.814818629602356*^9, 3.81481992064566*^9, 
   3.814897303723366*^9, 3.81496287703988*^9, 3.8149642736202087`*^9, 
   3.8149656632957773`*^9, 3.814968800700248*^9, 3.8149823171909723`*^9, 
   3.814982435826446*^9, 3.814986508037117*^9, 3.814986649717239*^9, 
   3.814988035526568*^9, 3.815045482913864*^9, 3.815048177652663*^9, 
   3.81504909923939*^9, 3.815052488044738*^9, 3.815053593021709*^9, 
   3.8150561872573347`*^9, 3.8151343994283323`*^9, 3.815135159247271*^9, 
   3.815135501865232*^9, 3.815136330099585*^9, 3.815136646511115*^9, 
   3.8151366977995777`*^9, 3.815136813929861*^9, 3.815137171600013*^9, 
   3.815137375241439*^9, 3.8151375227062387`*^9, 3.815137599121909*^9, 
   3.815138696162079*^9},ExpressionUUID->"8e59269f-1c7b-420f-afcf-\
5d045b5e9030"]
}, Open  ]],

Cell["\<\

This is the RMSE. Smaller RMSE values are preferable because they indicate \
better recovery of the population parameters.\
\>", "Text",
 CellChangeTimes->{
  3.81481059854046*^9, {3.814810639671608*^9, 
   3.814810685863844*^9}},ExpressionUUID->"1835c600-2b95-4966-8321-\
3dcd88e7023a"],

Cell[BoxData[
 StyleBox[
  RowBox[{"RMSE", "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", "m"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"m", "=", "1"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         OverscriptBox["X", "-"], "-", "\[Mu]"}], ")"}], "2"]}]}]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814810739639752*^9, 
  3.814810811662806*^9}},ExpressionUUID->"7918ff10-ceb2-4e0e-baf6-\
3f12ac673c7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RMSE", "=", 
  SqrtBox[
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"data03", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]]}]], "Input",
 CellChangeTimes->{{3.8148104514177437`*^9, 3.814810517834385*^9}, 
   3.8148108152213306`*^9, {3.814810922543385*^9, 
   3.814810924249424*^9}},ExpressionUUID->"788715a5-29f9-4744-a3e2-\
3a342f51133b"],

Cell[BoxData["0.13195876541475848`"], "Output",
 CellChangeTimes->{{3.8148104927576723`*^9, 3.814810518858965*^9}, 
   3.814810816918648*^9, 3.814810924895734*^9, 3.814816057334189*^9, 
   3.814817075273883*^9, 3.8148172024462547`*^9, 3.8148179376525803`*^9, 
   3.8148183813029633`*^9, 3.8148184472581577`*^9, 3.81481863192267*^9, 
   3.814819920679137*^9, 3.814897307218197*^9, 3.814962877074717*^9, 
   3.814964273651883*^9, 3.8149656633170633`*^9, 3.814968800721561*^9, 
   3.814982317211885*^9, 3.81498243585979*^9, 3.814986508066457*^9, 
   3.814986649748818*^9, 3.814988035549773*^9, 3.815045482944373*^9, 
   3.8150481776736393`*^9, 3.815049099261639*^9, 3.815052489893564*^9, 
   3.815053593050109*^9, 3.815056187286268*^9, 3.81513439945207*^9, 
   3.815135159271728*^9, 3.815135501894157*^9, 3.815136330124217*^9, 
   3.815136646539782*^9, 3.815136697821534*^9, 3.81513681395874*^9, 
   3.8151371716285973`*^9, 3.815137375275547*^9, 3.815137522736648*^9, 
   3.815137599145091*^9, 
   3.815138696186516*^9},ExpressionUUID->"2da12ffd-1941-4d32-8488-\
81af002f7e1e"]
}, Open  ]],

Cell["\<\
We see RMSE resembles the standard deviation. Squaring the RMSE yields the \
mean-squared error (MSE).\
\>", "Text",
 CellChangeTimes->{{3.8148106956495323`*^9, 3.8148107288617*^9}, {
  3.8148108306946793`*^9, 3.814810840213118*^9}, {3.814810904606491*^9, 
  3.81481091205621*^9}},ExpressionUUID->"16b489ef-3f84-456d-84cf-\
7e9969d6566d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MSE", "=", 
  SuperscriptBox["RMSE", "2"]}]], "Input",
 CellChangeTimes->{{3.814810974045555*^9, 
  3.814811006219426*^9}},ExpressionUUID->"66bceca6-0197-403e-bab1-\
b62780456afd"],

Cell[BoxData["0.017413115769787258`"], "Output",
 CellChangeTimes->{3.8148110072223797`*^9, 3.814816057364175*^9, 
  3.814817075297554*^9, 3.814817202474462*^9, 3.8148179376862593`*^9, 
  3.814818381328204*^9, 3.814818448898719*^9, 3.814819920717021*^9, 
  3.814897310430901*^9, 3.8149628771083813`*^9, 3.8149642736864653`*^9, 
  3.814965663337916*^9, 3.814968800742668*^9, 3.814982317232091*^9, 
  3.814982435891828*^9, 3.8149865080947733`*^9, 3.814986649779883*^9, 
  3.8149880355737953`*^9, 3.81504548297375*^9, 3.815048177695644*^9, 
  3.8150490992852793`*^9, 3.815052492209785*^9, 3.815053593080407*^9, 
  3.815056187316297*^9, 3.8151343994757338`*^9, 3.815135159294121*^9, 
  3.815135501927535*^9, 3.815136330153459*^9, 3.815136646566732*^9, 
  3.81513669784555*^9, 3.815136813983131*^9, 3.8151371716574907`*^9, 
  3.81513737530879*^9, 3.815137522769491*^9, 3.8151375991676826`*^9, 
  3.815138696210267*^9},ExpressionUUID->"e7964b6c-bdca-44ff-8696-\
cb3d54bb62c7"]
}, Open  ]],

Cell["\<\
Because MSE values are interpretable as variance terms, a final method that \
is often useful for comparing the sampling efficiency between different \
estimators (distinguished using the subscript i) is the relative efficiency \
(RE) statistic\
\>", "Text",
 CellChangeTimes->{{3.8148110181416903`*^9, 
  3.814811056102044*^9}},ExpressionUUID->"f295a908-afd7-4ab9-9d77-\
3655d8676527"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox["RE", "i"], "=", 
   RowBox[{
    SubscriptBox["MSE", "i"], "/", "MSE"}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814811843541851*^9},ExpressionUUID->"4add1605-7613-45c5-b4df-\
0a5a81ecbdf0"],

Cell["\<\
This statistic is used when we use different estimations coming from \
different approaches so one estimator is treated as the reference statistic \
and all other MSEs are evaluated in reference to it. Values greater than 1 \
indicate less efficiency (i.e., more variability) than the reference \
statistic, while values less than 1 indicate greater efficiency and therefore \
greater precision in recovering \[Mu].\
\>", "Text",
 CellChangeTimes->{{3.814811221574383*^9, 3.814811232027153*^9}, {
  3.814811268996187*^9, 
  3.8148113498646*^9}},ExpressionUUID->"13233561-7764-4b60-8fe8-4eee94cd3436"],

Cell[TextData[{
 StyleBox["\n",
  FontVariations->{"Underline"->True}],
 "The ",
 StyleBox["model-based standard error",
  FontVariations->{"Underline"->True}],
 " is computed by averaging the estimated variances for each replication:"
}], "Text",
 CellChangeTimes->{{3.8147266688265142`*^9, 3.814726739189958*^9}, {
   3.8147271919740353`*^9, 3.814727203201777*^9}, {3.8147294251491957`*^9, 
   3.8147294279370213`*^9}, 
   3.8147996036592627`*^9},ExpressionUUID->"154463fb-6633-48d6-9cb3-\
09169f5d2c74"],

Cell[BoxData[
 StyleBox[
  RowBox[{"ModelSE", "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", "m"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "m"], 
      RowBox[{"Var", "[", 
       SubscriptBox["X", "i"], "]"}]}]}]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8147267633715467`*^9, 
  3.8147268440993233`*^9}},ExpressionUUID->"9260593c-3a80-41ca-b923-\
19f697d3d883"],

Cell["\<\

All the n*samples blocks (m*replications) are in data02, 
we take the variance of each of them and plug it in the eq above\
\>", "Text",
 CellChangeTimes->{{3.814727105414537*^9, 3.814727147784327*^9}, {
  3.814727228108917*^9, 3.814727237376603*^9}, {3.814727655878002*^9, 
  3.8147276613005342`*^9}},ExpressionUUID->"bdb9977f-67ab-42a4-a016-\
9d1b6d264f14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"variancedata", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<", 
    RowBox[{"m", "+", "1"}]}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"data", "=", 
     RowBox[{"data02", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mm", "=", 
     RowBox[{"Variance", "[", "data", "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{"compute", " ", "variance", " ", "for", " ", "the", " ", 
      SubscriptBox["m", "th"], " ", "simulation"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"AppendTo", "[", 
     RowBox[{"variancedata", ",", "mm"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<std\>\"", ",", 
   RowBox[{"ModelSE", "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"Total", "[", "variancedata", "]"}], "/", "m"}]]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814726891533949*^9, 3.8147269564993*^9}, {
   3.814727064939435*^9, 3.814727088384452*^9}, {3.81472715313945*^9, 
   3.8147271822309313`*^9}, {3.8147285069687*^9, 3.8147285442316713`*^9}, {
   3.814729311614891*^9, 3.814729317078726*^9}, {3.814729744061782*^9, 
   3.81472974518609*^9}, {3.814803074539229*^9, 3.8148030811065598`*^9}, {
   3.814803257215333*^9, 3.8148032804386673`*^9}, {3.814803323882517*^9, 
   3.8148033241197166`*^9}, {3.814808103502122*^9, 3.814808115778916*^9}, {
   3.814808164584209*^9, 3.8148082228137302`*^9}, {3.814808325367037*^9, 
   3.8148084448877487`*^9}, 3.814808525928459*^9, {3.814808580133669*^9, 
   3.814808689192922*^9}},ExpressionUUID->"772957e9-9fe9-4a10-a819-\
4f76666c34af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"std\"\>", ",", "1.3255596239286436`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814808565860736*^9, 3.814808626774225*^9}, {
   3.814808681892277*^9, 3.8148086901975613`*^9}, 3.814808785916685*^9, 
   3.8148160574170513`*^9, 3.8148170753434353`*^9, 3.814817202508807*^9, 
   3.814817937727888*^9, 3.81481838135883*^9, 3.814818452341387*^9, 
   3.8148186443038597`*^9, 3.814819920760702*^9, 3.814897314084024*^9, 
   3.814962877148942*^9, 3.814964273722766*^9, 3.814965663364729*^9, 
   3.8149688007700157`*^9, 3.814982317257564*^9, 3.814982435928789*^9, 
   3.8149865081287537`*^9, 3.8149866498163157`*^9, 3.814988035603376*^9, 
   3.815045483012352*^9, 3.815048177726499*^9, 3.8150490993165007`*^9, 
   3.815052496850184*^9, 3.8150535931164017`*^9, 3.815053663280574*^9, 
   3.8150561873476458`*^9, 3.815134399501515*^9, 3.8151351593237*^9, 
   3.815135501966187*^9, 3.815136330188232*^9, 3.815136646603938*^9, 
   3.815136697877952*^9, 3.815136814012698*^9, 3.8151371716954412`*^9, 
   3.815137375351293*^9, 3.81513752280816*^9, 3.815137599201241*^9, 
   3.815138696249042*^9},ExpressionUUID->"e200138d-e13e-4eec-8bc5-\
94709a7e9831"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["===================================================================\
=====================",
  FontColor->GrayLevel[0.5]],
 "\nNow, let\[CloseCurlyQuote]s see ",
 StyleBox["Confidence Level, Confidence Limits and Intervals",
  FontVariations->{"Underline"->True}],
 ".\n\nWe already know that we can be 68% confident that a random sample will \
lie within \[PlusMinus]\[Sigma] of the mean. 95.5% 2\[Sigma] and 99.77% 3\
\[Sigma].\nThe percentage value is the ",
 StyleBox["confidence level",
  FontVariations->{"Underline"->True}],
 ", and the interval within which the value of x is expected to fall is the \
",
 StyleBox["confidence limit",
  FontVariations->{"Underline"->True}],
 ".\nThis range may be expressed in the form of an upper(U) and a lower(L) \
bound where"
}], "Text",
 CellChangeTimes->{{3.814786333633595*^9, 3.8147864210474873`*^9}, {
  3.814787786265565*^9, 3.814787815202065*^9}, {3.814791959299464*^9, 
  3.814791966342946*^9}, {3.8148119147701607`*^9, 3.814811916817708*^9}, {
  3.814812590041527*^9, 3.814812612475092*^9}, {3.814813347100317*^9, 
  3.814813467946579*^9}, {3.814813500418222*^9, 3.814813578157415*^9}, {
  3.815056024521618*^9, 
  3.815056024949819*^9}},ExpressionUUID->"12388d10-5e11-463d-95ea-\
0650a6767439"],

Cell[BoxData[{
 StyleBox[
  RowBox[{"U", "=", 
   FormBox[
    RowBox[{
     OverscriptBox["x", "-"], "+", 
     RowBox[{
      SubscriptBox["z", "c"], "\[Sigma]"}]}],
    TraditionalForm]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{"L", "=", 
   FormBox[
    RowBox[{
     OverscriptBox["x", "-"], "-", 
     RowBox[{
      SubscriptBox["z", "c"], "\[Sigma]"}]}],
    TraditionalForm]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]}], "DisplayFormula",
 CellChangeTimes->{{3.814813583581081*^9, 
  3.814813586501319*^9}},ExpressionUUID->"7ad91b24-3384-439d-9db6-\
ba24c4c68dfe"],

Cell["\<\

We also know that to compute confidence intervals we need the standard \
deviation to relate it to the estimated output from multiple simulation \
because they approach a standard normal in distribution. And we know we can't \
have a std while we're still calculating the expected result.
We can however calculate an estimated std like this \
\>", "Text",
 CellChangeTimes->{{3.814786333633595*^9, 3.8147864210474873`*^9}, {
  3.814787786265565*^9, 3.814787815202065*^9}, {3.814791959299464*^9, 
  3.814791966342946*^9}, {3.8148119147701607`*^9, 3.814811916817708*^9}, {
  3.814812590041527*^9, 3.814812612475092*^9}, {3.814813347100317*^9, 
  3.814813467946579*^9}, {3.814813500418222*^9, 
  3.8148136044333687`*^9}},ExpressionUUID->"0f47e1f9-a405-457c-92fb-\
76870536da42"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   StyleBox[
    SubsuperscriptBox["s", "n", "2"],
    FontSize->18], 
   StyleBox["=",
    FontSize->18], 
   RowBox[{
    StyleBox[
     FractionBox["1", 
      RowBox[{"n", "-", "1"}]],
     FontSize->18,
     FontColor->RGBColor[1, 0.5, 0]], 
    RowBox[{
     StyleBox[
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"],
      FontSize->18,
      FontColor->RGBColor[1, 0.5, 0]], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        StyleBox[
         SubscriptBox["X", "i"],
         FontSize->18,
         FontColor->RGBColor[1, 0.5, 0]], "-", 
        SubscriptBox[
         OverscriptBox["\[Mu]", "^"], "n"]}], ")"}], "2"]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814786428747836*^9, {3.814811931758437*^9, 3.8148119328144913`*^9}, {
   3.814812120780312*^9, 
   3.8148121212094812`*^9}},ExpressionUUID->"54c7186f-b5e2-4c63-affe-\
7515a5a8cb02"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   OverscriptBox["\[Mu]", "^"], "=", 
   RowBox[{"data03", "[", 
    RowBox[{"[", "45", "]"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"point", " ", "estimate"}], "*)"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   OverscriptBox["\[Mu]", "^"], "=", "tValue"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"STDest", "=", 
  SqrtBox[
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"data03", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "-", 
         OverscriptBox["\[Mu]", "^"]}], ")"}], "2"], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]]}]}], "Input",
 CellChangeTimes->{{3.814786489560601*^9, 3.814786495297048*^9}, {
   3.814786527500524*^9, 3.814786591892804*^9}, 3.814786861763307*^9, {
   3.814786899993225*^9, 3.814786957162046*^9}, {3.814786996560367*^9, 
   3.8147870190832653`*^9}, {3.814787443189745*^9, 3.8147874744396152`*^9}, {
   3.8147875204728317`*^9, 3.814787527854254*^9}, {3.81478755836161*^9, 
   3.8147875653838577`*^9}, {3.8147876645014353`*^9, 3.814787731028242*^9}, {
   3.814787837299032*^9, 3.8147878438242807`*^9}, {3.814788023285338*^9, 
   3.814788121064919*^9}, {3.814788320913506*^9, 3.814788326988278*^9}, 
   3.814795758606299*^9, 3.814799108731669*^9, {3.814809493118342*^9, 
   3.814809498813939*^9}, {3.81480960595212*^9, 3.814809615337686*^9}, 
   3.814809647456279*^9, {3.8148131963763638`*^9, 3.81481320071766*^9}, {
   3.8148132325092287`*^9, 3.814813233820263*^9}, {3.814813315016479*^9, 
   3.814813315466928*^9}, {3.814813917973104*^9, 3.814813946096586*^9}, {
   3.814818670830634*^9, 3.81481867904532*^9}, {3.8148973840671387`*^9, 
   3.81489738575902*^9}, {3.814900026920218*^9, 3.8149000276610737`*^9}, {
   3.8149005432274637`*^9, 
   3.814900560798503*^9}},ExpressionUUID->"4b87da94-34b4-477b-abc1-\
f4562d60cc1b"],

Cell[BoxData["0.13195876541475848`"], "Output",
 CellChangeTimes->{
  3.814786534139916*^9, 3.814786597306314*^9, {3.8147868622660007`*^9, 
   3.8147869131195583`*^9}, {3.814786959063792*^9, 3.8147869649601088`*^9}, {
   3.814786998932754*^9, 3.814787020469193*^9}, 3.8147871826123734`*^9, 
   3.814787249928026*^9, {3.814787444079867*^9, 3.814787475126185*^9}, {
   3.814787529014351*^9, 3.81478756652413*^9}, {3.81478766628759*^9, 
   3.814787732076625*^9}, 3.814787922176711*^9, {3.814788075411347*^9, 
   3.814788121949532*^9}, 3.81478832765385*^9, {3.814789325498171*^9, 
   3.814789328927237*^9}, 3.814789408930372*^9, 3.814789571136448*^9, 
   3.814790569014895*^9, 3.814795577902643*^9, 3.814795691799218*^9, {
   3.814795736990385*^9, 3.814795759371147*^9}, 3.814799112164707*^9, 
   3.814799150551963*^9, 3.81479920904175*^9, 3.8147992683149242`*^9, 
   3.814803546380021*^9, 3.814808693253187*^9, 3.81480878592511*^9, 
   3.814809414420184*^9, {3.814809493933681*^9, 3.8148094998135233`*^9}, 
   3.8148096173080873`*^9, 3.814809648673908*^9, 3.814810417880497*^9, 
   3.814812520330447*^9, 3.81481323526624*^9, 3.8148133165758266`*^9, {
   3.814813926084342*^9, 3.814813946878839*^9}, 3.814816057424547*^9, 
   3.8148170753510838`*^9, 3.8148172025158243`*^9, 3.814817937733638*^9, 
   3.814818381365961*^9, 3.814818454441111*^9, {3.814818655587372*^9, 
   3.8148186799371977`*^9}, 3.81481992076865*^9, 3.814897318198254*^9, 
   3.8148973724051332`*^9, 3.814897439494685*^9, 3.814900030236945*^9, 
   3.814900527712285*^9, 3.814900562475059*^9, 3.814901002032338*^9, 
   3.814962877155527*^9, 3.8149642737276363`*^9, 3.8149656633693867`*^9, 
   3.814968800787901*^9, 3.81498231726278*^9, 3.814982435933877*^9, 
   3.814986508145905*^9, 3.814986649821834*^9, 3.814988035623521*^9, 
   3.815045483020266*^9, 3.8150481777321177`*^9, 3.8150490993233128`*^9, 
   3.815052499413434*^9, 3.8150535931214037`*^9, 3.815053666959957*^9, 
   3.81505618735293*^9, 3.8151343995077467`*^9, 3.815135159339654*^9, 
   3.815135501986754*^9, 3.8151363301967583`*^9, 3.815136646623989*^9, 
   3.815136697883874*^9, 3.815136814020336*^9, 3.815137171752076*^9, 
   3.815137375357717*^9, 3.815137522828567*^9, 3.815137599209449*^9, 
   3.815138696273172*^9},ExpressionUUID->"69cfb736-4d10-48ff-9df0-\
660dfcde0997"]
}, Open  ]],

Cell["\<\
We know also that our confidence interval is calculated like this \
\>", "Text",
 CellChangeTimes->{{3.814788136589725*^9, 
  3.8147881644234858`*^9}},ExpressionUUID->"c65949a8-a7f1-4a70-94c0-\
de4ac34a9453"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   SubscriptBox[
    OverscriptBox["\[Mu]", "^"], "n"], "\[PlusMinus]", 
   FractionBox[
    RowBox[{
     SubscriptBox["z", "c"], 
     SubscriptBox["S", "n"]}], 
    SqrtBox["n"]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{
  3.814787938076962*^9, {3.814787984784686*^9, 3.814787989620132*^9}, 
   3.814788368882419*^9},ExpressionUUID->"6d58f5fd-4a19-4e90-8729-\
9db91a8927b9"],

Cell["\<\
Where Zc is the Z value of the standard normal distribution calculated over \
the \[Alpha] (percentile).
So that\
\>", "Text",
 CellChangeTimes->{{3.814788175087431*^9, 3.814788210459571*^9}, {
  3.8147883759475*^9, 3.814788377745904*^9}, {3.814814335662149*^9, 
  3.814814349680091*^9}},ExpressionUUID->"e6ad7566-4988-45ed-b167-\
6ff6bcb5d4df"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\[Alpha]", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"95.5", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "the", " ", "std", " ", "for", " ", "the", " ", 
     "95", "%", " ", "of", " ", "a", " ", "std", " ", "normal", " ", "dist"}],
     " ", "\[TildeEqual]", 
    RowBox[{"2", "std"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD\>\"", ",", 
    RowBox[{"Z", "=", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"InverseCDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}], 
      "//", "N"}]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<CI\>\"", ",", 
   RowBox[{"Ci", "=", 
    FractionBox[
     RowBox[{"Z", "*", "STDest"}], 
     SqrtBox["m"]]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Error%\>\"", ",", 
   RowBox[{"Er", "=", 
    RowBox[{"100", "*", 
     FractionBox[
      RowBox[{"Z", "*", "STDest"}], 
      RowBox[{
       RowBox[{"Mean", "[", "data03", "]"}], 
       SqrtBox["m"]}]]}]}]}], "}"}]}], "Input",
 CellChangeTimes->{
  3.814788228551882*^9, {3.8147882815587053`*^9, 3.814788341446063*^9}, {
   3.814788476452766*^9, 3.8147884787058496`*^9}, {3.814788828400262*^9, 
   3.8147888318194304`*^9}, {3.814789418732937*^9, 3.814789449150401*^9}, {
   3.814790610335227*^9, 3.814790666382449*^9}, {3.814813839698094*^9, 
   3.814813840280916*^9}, {3.814814102068225*^9, 3.814814135885548*^9}, 
   3.814897455800641*^9, 3.8149000419322042`*^9, {3.815052527861974*^9, 
   3.815052546450285*^9}, 3.81505258175451*^9, 3.815052729650058*^9, {
   3.8150530721625*^9, 
   3.815053097988522*^9}},ExpressionUUID->"80734e0b-43e8-4c24-9a1f-\
e56410a76184"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD\"\>", ",", "2.0046544617650968`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814788295898975*^9, 3.814788299429922*^9}, 
   3.8147883439408073`*^9, 3.814788479549493*^9, {3.8147888102088537`*^9, 
   3.814788832482483*^9}, 3.814789331938706*^9, 3.814789410100943*^9, 
   3.814789451069075*^9, 3.814789574941477*^9, 3.814790094017746*^9, 
   3.814790569049552*^9, {3.8147906115432043`*^9, 3.814790667158224*^9}, 
   3.814795580576026*^9, 3.8147991153572407`*^9, 3.814799150585428*^9, 
   3.814799211314364*^9, 3.814799268324648*^9, 3.8148035464144506`*^9, 
   3.814808698254314*^9, 3.8148087859586678`*^9, 3.81480900840908*^9, 
   3.8148093370690536`*^9, 3.8148095036613483`*^9, 3.81480965713448*^9, 
   3.814809992811345*^9, 3.814810419950182*^9, 3.814813843623314*^9, {
   3.814813930202673*^9, 3.814813948967567*^9}, 3.814814081696075*^9, {
   3.814814128202257*^9, 3.814814137067849*^9}, 3.814814540694867*^9, 
   3.814816057494301*^9, 3.814817075377874*^9, 3.814817202545583*^9, 
   3.81481788804666*^9, 3.814817937765525*^9, 3.814818182773727*^9, 
   3.814818381393712*^9, 3.814818460337249*^9, 3.814818684504878*^9, 
   3.814818871749449*^9, 3.814819920811269*^9, 3.814897256284437*^9, 
   3.8148973227451487`*^9, {3.8148974353137417`*^9, 3.814897457338571*^9}, 
   3.814900043311673*^9, 3.8149005299604273`*^9, 3.81490056528776*^9, 
   3.814901004359159*^9, 3.814962877189843*^9, 3.814964273759061*^9, 
   3.814965663389975*^9, 3.8149688008091307`*^9, 3.814982317283907*^9, 
   3.814982435963726*^9, 3.814986508175517*^9, 3.814986649851726*^9, 
   3.814988035632263*^9, 3.815045483050939*^9, 3.8150481777546597`*^9, 
   3.8150490993483562`*^9, 3.815052503576386*^9, 3.815052585188052*^9, 
   3.8150527274033813`*^9, {3.8150530695896807`*^9, 3.815053098924697*^9}, 
   3.815053234966683*^9, 3.8150534013531857`*^9, {3.8150535931492033`*^9, 
   3.815053621403266*^9}, 3.815053674951535*^9, 3.815054149908904*^9, 
   3.815054182101265*^9, 3.815055638936816*^9, 3.815055739126203*^9, 
   3.8150561873800488`*^9, 3.815134399530573*^9, 3.815135159364564*^9, 
   3.815135502021222*^9, 3.815136330224573*^9, 3.81513664664911*^9, 
   3.815136697908102*^9, 3.815136814044387*^9, 3.815137171763507*^9, 
   3.815137375390581*^9, 3.815137522845759*^9, 3.815137599240673*^9, 
   3.8151386962966833`*^9},ExpressionUUID->"e309a8f6-3aa9-4813-ab46-\
b0365a65a6c9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CI\"\>", ",", "0.008365227734101756`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814788295898975*^9, 3.814788299429922*^9}, 
   3.8147883439408073`*^9, 3.814788479549493*^9, {3.8147888102088537`*^9, 
   3.814788832482483*^9}, 3.814789331938706*^9, 3.814789410100943*^9, 
   3.814789451069075*^9, 3.814789574941477*^9, 3.814790094017746*^9, 
   3.814790569049552*^9, {3.8147906115432043`*^9, 3.814790667158224*^9}, 
   3.814795580576026*^9, 3.8147991153572407`*^9, 3.814799150585428*^9, 
   3.814799211314364*^9, 3.814799268324648*^9, 3.8148035464144506`*^9, 
   3.814808698254314*^9, 3.8148087859586678`*^9, 3.81480900840908*^9, 
   3.8148093370690536`*^9, 3.8148095036613483`*^9, 3.81480965713448*^9, 
   3.814809992811345*^9, 3.814810419950182*^9, 3.814813843623314*^9, {
   3.814813930202673*^9, 3.814813948967567*^9}, 3.814814081696075*^9, {
   3.814814128202257*^9, 3.814814137067849*^9}, 3.814814540694867*^9, 
   3.814816057494301*^9, 3.814817075377874*^9, 3.814817202545583*^9, 
   3.81481788804666*^9, 3.814817937765525*^9, 3.814818182773727*^9, 
   3.814818381393712*^9, 3.814818460337249*^9, 3.814818684504878*^9, 
   3.814818871749449*^9, 3.814819920811269*^9, 3.814897256284437*^9, 
   3.8148973227451487`*^9, {3.8148974353137417`*^9, 3.814897457338571*^9}, 
   3.814900043311673*^9, 3.8149005299604273`*^9, 3.81490056528776*^9, 
   3.814901004359159*^9, 3.814962877189843*^9, 3.814964273759061*^9, 
   3.814965663389975*^9, 3.8149688008091307`*^9, 3.814982317283907*^9, 
   3.814982435963726*^9, 3.814986508175517*^9, 3.814986649851726*^9, 
   3.814988035632263*^9, 3.815045483050939*^9, 3.8150481777546597`*^9, 
   3.8150490993483562`*^9, 3.815052503576386*^9, 3.815052585188052*^9, 
   3.8150527274033813`*^9, {3.8150530695896807`*^9, 3.815053098924697*^9}, 
   3.815053234966683*^9, 3.8150534013531857`*^9, {3.8150535931492033`*^9, 
   3.815053621403266*^9}, 3.815053674951535*^9, 3.815054149908904*^9, 
   3.815054182101265*^9, 3.815055638936816*^9, 3.815055739126203*^9, 
   3.8150561873800488`*^9, 3.815134399530573*^9, 3.815135159364564*^9, 
   3.815135502021222*^9, 3.815136330224573*^9, 3.81513664664911*^9, 
   3.815136697908102*^9, 3.815136814044387*^9, 3.815137171763507*^9, 
   3.815137375390581*^9, 3.815137522845759*^9, 3.815137599240673*^9, 
   3.815138696302719*^9},ExpressionUUID->"16029b70-5114-4822-8729-\
40f6aa936d69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Error%\"\>", ",", "0.25097934778375025`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814788295898975*^9, 3.814788299429922*^9}, 
   3.8147883439408073`*^9, 3.814788479549493*^9, {3.8147888102088537`*^9, 
   3.814788832482483*^9}, 3.814789331938706*^9, 3.814789410100943*^9, 
   3.814789451069075*^9, 3.814789574941477*^9, 3.814790094017746*^9, 
   3.814790569049552*^9, {3.8147906115432043`*^9, 3.814790667158224*^9}, 
   3.814795580576026*^9, 3.8147991153572407`*^9, 3.814799150585428*^9, 
   3.814799211314364*^9, 3.814799268324648*^9, 3.8148035464144506`*^9, 
   3.814808698254314*^9, 3.8148087859586678`*^9, 3.81480900840908*^9, 
   3.8148093370690536`*^9, 3.8148095036613483`*^9, 3.81480965713448*^9, 
   3.814809992811345*^9, 3.814810419950182*^9, 3.814813843623314*^9, {
   3.814813930202673*^9, 3.814813948967567*^9}, 3.814814081696075*^9, {
   3.814814128202257*^9, 3.814814137067849*^9}, 3.814814540694867*^9, 
   3.814816057494301*^9, 3.814817075377874*^9, 3.814817202545583*^9, 
   3.81481788804666*^9, 3.814817937765525*^9, 3.814818182773727*^9, 
   3.814818381393712*^9, 3.814818460337249*^9, 3.814818684504878*^9, 
   3.814818871749449*^9, 3.814819920811269*^9, 3.814897256284437*^9, 
   3.8148973227451487`*^9, {3.8148974353137417`*^9, 3.814897457338571*^9}, 
   3.814900043311673*^9, 3.8149005299604273`*^9, 3.81490056528776*^9, 
   3.814901004359159*^9, 3.814962877189843*^9, 3.814964273759061*^9, 
   3.814965663389975*^9, 3.8149688008091307`*^9, 3.814982317283907*^9, 
   3.814982435963726*^9, 3.814986508175517*^9, 3.814986649851726*^9, 
   3.814988035632263*^9, 3.815045483050939*^9, 3.8150481777546597`*^9, 
   3.8150490993483562`*^9, 3.815052503576386*^9, 3.815052585188052*^9, 
   3.8150527274033813`*^9, {3.8150530695896807`*^9, 3.815053098924697*^9}, 
   3.815053234966683*^9, 3.8150534013531857`*^9, {3.8150535931492033`*^9, 
   3.815053621403266*^9}, 3.815053674951535*^9, 3.815054149908904*^9, 
   3.815054182101265*^9, 3.815055638936816*^9, 3.815055739126203*^9, 
   3.8150561873800488`*^9, 3.815134399530573*^9, 3.815135159364564*^9, 
   3.815135502021222*^9, 3.815136330224573*^9, 3.81513664664911*^9, 
   3.815136697908102*^9, 3.815136814044387*^9, 3.815137171763507*^9, 
   3.815137375390581*^9, 3.815137522845759*^9, 3.815137599240673*^9, 
   3.815138696305766*^9},ExpressionUUID->"cb4339fa-4373-4f21-932b-\
6fc004738847"]
}, Open  ]],

Cell[TextData[{
 "Here we can state that we are 95% confident that the true mean is within ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox[
     SubscriptBox["x", "i"], "-"], "\[PlusMinus]", "Ci"}], TraditionalForm]],
  ExpressionUUID->"ab3f584d-4eb0-49e8-927d-3b95ce58d66f"],
 ".\nThat of course means for our estimated mean, that we can be 95% sure \
that it will fall \[PlusMinus] Ci from the true expectation.\nOr also that at \
the 95% confidence level, any value of \[Mu] between \[PlusMinus]Ci is \
plausible."
}], "Text",
 CellChangeTimes->{{3.814788539969721*^9, 3.814788591789769*^9}, {
  3.814788654542737*^9, 3.814788677016889*^9}, {3.814788709756649*^9, 
  3.814788742831518*^9}, {3.814789356114039*^9, 3.814789357125559*^9}, {
  3.814789397581706*^9, 3.814789404465807*^9}, {3.81478964337066*^9, 
  3.814789648365232*^9}, {3.814814365225498*^9, 3.814814417088073*^9}, {
  3.814814459882452*^9, 3.814814468028014*^9}, {3.814891918068469*^9, 
  3.814891960323085*^9}},ExpressionUUID->"e5767a12-c7a8-42d3-8e4f-\
c4c02867e166"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Mean", "[", "data03", "]"}], ",", "\"\<-> Estimated Mean\>\""}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", "data03", "]"}], "-", "Ci"}], ",", 
   "\"\<-> Estimated Mean - Ci\>\""}], "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"tValue", ",", "\"\<-> True Value\>\""}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "data03", "]"}], "+", "Ci"}], ",", 
    "\"\<-> Estimated Mean + Ci\>\""}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"(", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", "data03", "]"}], "-", "Ci"}], "\[LessEqual]", 
   "tValue", "\[LessEqual]", 
   RowBox[{
    RowBox[{"Mean", "[", "data03", "]"}], "+", "Ci"}]}], ")"}]}], "Input",
 CellChangeTimes->{{3.814788787471217*^9, 3.8147888130984583`*^9}, {
  3.814789149430162*^9, 3.8147892646125402`*^9}, {3.814789525471128*^9, 
  3.8147895949083633`*^9}, {3.814789686757778*^9, 3.8147896877008753`*^9}, {
  3.814789766155355*^9, 3.8147898215098352`*^9}, {3.81478986214618*^9, 
  3.814789967125162*^9}, {3.814793733108856*^9, 3.814793744088812*^9}, {
  3.814818474833271*^9, 3.814818484625222*^9}, {3.814900211056048*^9, 
  3.814900353325739*^9}},ExpressionUUID->"627fc418-61f0-4f01-afa2-\
fe2c1afedfd6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.333034294642216`", ",", "\<\"-> Estimated Mean\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 3.8149824359965897`*^9, 
   3.814986508193706*^9, 3.814986649886821*^9, 3.814988035656616*^9, 
   3.8150454830833807`*^9, 3.815048177777912*^9, 3.815049099374999*^9, 
   3.815052512038528*^9, {3.815053226440696*^9, 3.815053237707177*^9}, 
   3.81505359318213*^9, 3.815053626649235*^9, 3.815053678484336*^9, 
   3.8150557405416727`*^9, 3.815056187414064*^9, 3.815134399542349*^9, 
   3.815135159376223*^9, 3.8151355020356693`*^9, 3.815136330254032*^9, 
   3.815136646663739*^9, 3.815136697939514*^9, 3.815136814073097*^9, 
   3.815137171797308*^9, 3.8151373754513807`*^9, 3.81513752288421*^9, 
   3.815137599274126*^9, 
   3.815138696328842*^9},ExpressionUUID->"59f9ef7b-3f97-4063-bc3e-\
a46a458792f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3246690669081143`", ",", "\<\"-> Estimated Mean - Ci\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 3.8149824359965897`*^9, 
   3.814986508193706*^9, 3.814986649886821*^9, 3.814988035656616*^9, 
   3.8150454830833807`*^9, 3.815048177777912*^9, 3.815049099374999*^9, 
   3.815052512038528*^9, {3.815053226440696*^9, 3.815053237707177*^9}, 
   3.81505359318213*^9, 3.815053626649235*^9, 3.815053678484336*^9, 
   3.8150557405416727`*^9, 3.815056187414064*^9, 3.815134399542349*^9, 
   3.815135159376223*^9, 3.8151355020356693`*^9, 3.815136330254032*^9, 
   3.815136646663739*^9, 3.815136697939514*^9, 3.815136814073097*^9, 
   3.815137171797308*^9, 3.8151373754513807`*^9, 3.81513752288421*^9, 
   3.815137599274126*^9, 
   3.8151386963369923`*^9},ExpressionUUID->"bdacf2d5-220c-460e-ac32-\
accf1613cf0c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3333333333333357`", ",", "\<\"-> True Value\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 3.8149824359965897`*^9, 
   3.814986508193706*^9, 3.814986649886821*^9, 3.814988035656616*^9, 
   3.8150454830833807`*^9, 3.815048177777912*^9, 3.815049099374999*^9, 
   3.815052512038528*^9, {3.815053226440696*^9, 3.815053237707177*^9}, 
   3.81505359318213*^9, 3.815053626649235*^9, 3.815053678484336*^9, 
   3.8150557405416727`*^9, 3.815056187414064*^9, 3.815134399542349*^9, 
   3.815135159376223*^9, 3.8151355020356693`*^9, 3.815136330254032*^9, 
   3.815136646663739*^9, 3.815136697939514*^9, 3.815136814073097*^9, 
   3.815137171797308*^9, 3.8151373754513807`*^9, 3.81513752288421*^9, 
   3.815137599274126*^9, 
   3.81513869633962*^9},ExpressionUUID->"8bfef811-ffe1-41a8-903e-\
65912895c2a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3.3413995223763178`", ",", "\<\"-> Estimated Mean + Ci\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 3.8149824359965897`*^9, 
   3.814986508193706*^9, 3.814986649886821*^9, 3.814988035656616*^9, 
   3.8150454830833807`*^9, 3.815048177777912*^9, 3.815049099374999*^9, 
   3.815052512038528*^9, {3.815053226440696*^9, 3.815053237707177*^9}, 
   3.81505359318213*^9, 3.815053626649235*^9, 3.815053678484336*^9, 
   3.8150557405416727`*^9, 3.815056187414064*^9, 3.815134399542349*^9, 
   3.815135159376223*^9, 3.8151355020356693`*^9, 3.815136330254032*^9, 
   3.815136646663739*^9, 3.815136697939514*^9, 3.815136814073097*^9, 
   3.815137171797308*^9, 3.8151373754513807`*^9, 3.81513752288421*^9, 
   3.815137599274126*^9, 
   3.81513869634227*^9},ExpressionUUID->"bfde4979-720d-491f-aca4-\
2c28d6d4fb53"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.814788791465515*^9, 3.814788816484603*^9}, {
   3.814789151644596*^9, 3.8147892653845873`*^9}, 3.814789336413052*^9, 
   3.814789411387726*^9, 3.8147894553314657`*^9, {3.8147895311763067`*^9, 
   3.814789602008997*^9}, {3.8147896885679398`*^9, 3.814789691630052*^9}, {
   3.814789811436008*^9, 3.814789822081107*^9}, 3.814789863407078*^9, {
   3.814789910733099*^9, 3.8147899679966307`*^9}, 3.814790095995929*^9, 
   3.814790569087057*^9, {3.814790616555756*^9, 3.814790670058888*^9}, {
   3.814793738179077*^9, 3.814793744711279*^9}, 3.814795583458651*^9, 
   3.81479915062234*^9, 3.8147992134304113`*^9, 3.81479926834965*^9, 
   3.814803546452318*^9, 3.814808700230995*^9, 3.814808786001993*^9, 
   3.814809659944695*^9, 3.814813847088873*^9, 3.8148139513298807`*^9, 
   3.814816057535005*^9, 3.814817075405218*^9, 3.814817202575396*^9, 
   3.814817937800164*^9, 3.814818381420828*^9, {3.8148184623154287`*^9, 
   3.814818485690674*^9}, 3.814818686280775*^9, 3.8148199208518*^9, 
   3.814897328459153*^9, 3.8149000485524607`*^9, {3.814900217415184*^9, 
   3.814900242321475*^9}, {3.814900317659474*^9, 3.8149003473334084`*^9}, 
   3.8149005319024563`*^9, 3.814900567968863*^9, 3.814901007334216*^9, 
   3.8149628772238398`*^9, 3.814964273790098*^9, 3.814965663413127*^9, 
   3.814968800818018*^9, 3.814982317306657*^9, 3.8149824359965897`*^9, 
   3.814986508193706*^9, 3.814986649886821*^9, 3.814988035656616*^9, 
   3.8150454830833807`*^9, 3.815048177777912*^9, 3.815049099374999*^9, 
   3.815052512038528*^9, {3.815053226440696*^9, 3.815053237707177*^9}, 
   3.81505359318213*^9, 3.815053626649235*^9, 3.815053678484336*^9, 
   3.8150557405416727`*^9, 3.815056187414064*^9, 3.815134399542349*^9, 
   3.815135159376223*^9, 3.8151355020356693`*^9, 3.815136330254032*^9, 
   3.815136646663739*^9, 3.815136697939514*^9, 3.815136814073097*^9, 
   3.815137171797308*^9, 3.8151373754513807`*^9, 3.81513752288421*^9, 
   3.815137599274126*^9, 
   3.815138696344832*^9},ExpressionUUID->"12c39590-1867-4fdd-b09a-\
e60803dc6dc5"]
}, Open  ]],

Cell["\<\
However, what about all the other estimated means we got by replicating our \
simulation ? Keep reading !\
\>", "Text",
 CellChangeTimes->{{3.814790392172801*^9, 
  3.814790427182952*^9}},ExpressionUUID->"42f252aa-80f3-41bc-9fad-\
7f2117c45552"],

Cell[TextData[{
 "\n",
 StyleBox["Coverage",
  FontVariations->{"Underline"->True}],
 " is another key property of an estimator. \nIt is defined as the \
probability that a confidence interval contains the true value, and computed \
as:"
}], "Text",
 CellChangeTimes->{{3.814730576787709*^9, 3.81473058587879*^9}, {
  3.814730957036695*^9, 
  3.814730958321951*^9}},ExpressionUUID->"de9b1cb1-cbc3-4e7a-b815-\
115ff93b347f"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Coverage", "=", 
   RowBox[{
    FractionBox["1", "m"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "m"], 
     RowBox[{"I", 
      RowBox[{"(", 
       RowBox[{
        SubscriptBox[
         OverscriptBox["X", "^"], 
         RowBox[{"i", ",", "low"}]], "\[LessEqual]", "\[Mu]", "\[LessEqual]", 
        
        SubscriptBox[
         OverscriptBox["X", "^"], 
         RowBox[{"i", ",", "upp"}]]}], ")"}]}]}]}]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.814730630248811*^9, 
  3.81473074313043*^9}},ExpressionUUID->"c5b840d9-7831-4d7e-be3b-\
7863ba578e43"],

Cell["\<\
I(\[CenterDot]) is the indicator function.

The Monte Carlo standard error is then computed as\
\>", "Text",
 CellChangeTimes->{{3.8147307590133467`*^9, 3.814730782754182*^9}, 
   3.814730964419301*^9, {3.8148099068002157`*^9, 3.81480990781429*^9}, {
   3.81504572365948*^9, 
   3.81504572473921*^9}},ExpressionUUID->"302c9dcc-b385-4bdb-ba0b-\
56bd7a0f5ce7"],

Cell[BoxData[
 StyleBox[
  RowBox[{
   RowBox[{"MCSE", 
    RowBox[{"(", "Coverage", ")"}]}], "=", 
   SqrtBox[
    FractionBox[
     RowBox[{"Coverage", "*", 
      RowBox[{"(", 
       RowBox[{"1", "-", "Coverage"}], ")"}]}], "m"]]}],
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81473089741385*^9, 
  3.814730931297131*^9}},ExpressionUUID->"42db5177-3e1f-422e-b9d5-\
4b3c051f89dc"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Coverage", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "Ci"}], " ", "\[LessEqual]", 
          "tValue", "\[LessEqual]", 
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "Ci"}]}], ")"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", "m"}], ")"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Coverage\>\"", ",", 
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
     RowBox[{"100", "*", "Coverage"}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSE(Coverage)\>\"", ",", 
   RowBox[{"MCSEcov", "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"Coverage", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "Coverage"}], ")"}]}], "m"]], "//", "N"}]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814793676117814*^9, 3.8147937252812977`*^9}, {
   3.81479381300912*^9, 3.814793878930893*^9}, {3.814794530666634*^9, 
   3.8147945385446043`*^9}, {3.814794756997198*^9, 3.814794760214253*^9}, {
   3.8147947974958153`*^9, 3.81479484071835*^9}, {3.814795201488723*^9, 
   3.814795256966589*^9}, {3.81479531576226*^9, 3.814795327775248*^9}, 
   3.8147991277188997`*^9, {3.814809326101399*^9, 3.814809326235154*^9}, {
   3.81480968065429*^9, 3.814809681013942*^9}, {3.8148099310352373`*^9, 
   3.814809964718584*^9}, {3.814814520995391*^9, 3.814814530759046*^9}, {
   3.814814583073998*^9, 3.814814655410531*^9}, {3.814817853112966*^9, 
   3.814817877666301*^9}, {3.814818743417671*^9, 3.814818766365505*^9}, {
   3.814818803692874*^9, 3.814818804010396*^9}, {3.8148189349810867`*^9, 
   3.8148189351597*^9}},ExpressionUUID->"54456930-c7e4-480c-9771-\
455a030221fa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Coverage\"\>", ",", 
   TemplateBox[{"5.7`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8147937739506283`*^9, 3.814793817137176*^9, {3.814793854707972*^9, 
   3.814793879959071*^9}, {3.814794532075663*^9, 3.8147945399008102`*^9}, 
   3.8147947608599157`*^9, {3.814794803583974*^9, 3.81479484149872*^9}, {
   3.814795223574114*^9, 3.814795257861965*^9}, 3.8147953285334883`*^9, 
   3.814795588499062*^9, {3.8147991225458193`*^9, 3.8147991506888514`*^9}, 
   3.8147992191752996`*^9, 3.8147992683967857`*^9, 3.814803546524185*^9, 
   3.8148087102870493`*^9, 3.814808786082509*^9, 3.814809001578315*^9, {
   3.8148093272821503`*^9, 3.8148093430754957`*^9}, 3.814809508567637*^9, {
   3.814809668496955*^9, 3.814809682154958*^9}, {3.814809938363072*^9, 
   3.814809995216002*^9}, 3.814813851181987*^9, {3.814813934477242*^9, 
   3.8148139552925243`*^9}, {3.8148144970677643`*^9, 3.814814543959128*^9}, 
   3.814814589773716*^9, {3.814814644469811*^9, 3.814814656618795*^9}, 
   3.814816057568183*^9, 3.8148170754321117`*^9, 3.8148172026054792`*^9, {
   3.814817890246107*^9, 3.81481789799607*^9}, 3.814817937833919*^9, 
   3.814818185928479*^9, 3.814818381466034*^9, 3.814818488952923*^9, 
   3.8148186910738*^9, 3.8148187278644648`*^9, 3.814818880344522*^9, 
   3.814818936077301*^9, 3.814819920901361*^9, 3.8148973305732603`*^9, {
   3.814897447330482*^9, 3.814897460621622*^9}, 3.81490005447194*^9, 
   3.8149004285814943`*^9, 3.814900575278727*^9, 3.814901008878242*^9, 
   3.814962877263277*^9, 3.814964273829398*^9, 3.814965663442296*^9, 
   3.814968800846937*^9, 3.814982317336012*^9, 3.8149824360419407`*^9, 
   3.814986508245288*^9, 3.814986649924327*^9, 3.8149880356884937`*^9, 
   3.81504548312004*^9, 3.815048177807979*^9, 3.815049099409234*^9, 
   3.815052783430632*^9, 3.815053593219102*^9, 3.815053687282795*^9, 
   3.815055744910437*^9, 3.815056187451558*^9, 3.815134399572756*^9, 
   3.8151351594069443`*^9, 3.815135502071319*^9, 3.815136330293614*^9, 
   3.815136646704646*^9, 3.8151366979779997`*^9, 3.815136814112555*^9, 
   3.81513717184072*^9, 3.815137375498233*^9, 3.815137522926948*^9, 
   3.815137599310935*^9, 
   3.815138696382886*^9},ExpressionUUID->"23cf98f2-fc30-45cd-9151-\
22526a6fc719"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE(Coverage)\"\>", ",", "0.007331507348424334`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8147937739506283`*^9, 3.814793817137176*^9, {3.814793854707972*^9, 
   3.814793879959071*^9}, {3.814794532075663*^9, 3.8147945399008102`*^9}, 
   3.8147947608599157`*^9, {3.814794803583974*^9, 3.81479484149872*^9}, {
   3.814795223574114*^9, 3.814795257861965*^9}, 3.8147953285334883`*^9, 
   3.814795588499062*^9, {3.8147991225458193`*^9, 3.8147991506888514`*^9}, 
   3.8147992191752996`*^9, 3.8147992683967857`*^9, 3.814803546524185*^9, 
   3.8148087102870493`*^9, 3.814808786082509*^9, 3.814809001578315*^9, {
   3.8148093272821503`*^9, 3.8148093430754957`*^9}, 3.814809508567637*^9, {
   3.814809668496955*^9, 3.814809682154958*^9}, {3.814809938363072*^9, 
   3.814809995216002*^9}, 3.814813851181987*^9, {3.814813934477242*^9, 
   3.8148139552925243`*^9}, {3.8148144970677643`*^9, 3.814814543959128*^9}, 
   3.814814589773716*^9, {3.814814644469811*^9, 3.814814656618795*^9}, 
   3.814816057568183*^9, 3.8148170754321117`*^9, 3.8148172026054792`*^9, {
   3.814817890246107*^9, 3.81481789799607*^9}, 3.814817937833919*^9, 
   3.814818185928479*^9, 3.814818381466034*^9, 3.814818488952923*^9, 
   3.8148186910738*^9, 3.8148187278644648`*^9, 3.814818880344522*^9, 
   3.814818936077301*^9, 3.814819920901361*^9, 3.8148973305732603`*^9, {
   3.814897447330482*^9, 3.814897460621622*^9}, 3.81490005447194*^9, 
   3.8149004285814943`*^9, 3.814900575278727*^9, 3.814901008878242*^9, 
   3.814962877263277*^9, 3.814964273829398*^9, 3.814965663442296*^9, 
   3.814968800846937*^9, 3.814982317336012*^9, 3.8149824360419407`*^9, 
   3.814986508245288*^9, 3.814986649924327*^9, 3.8149880356884937`*^9, 
   3.81504548312004*^9, 3.815048177807979*^9, 3.815049099409234*^9, 
   3.815052783430632*^9, 3.815053593219102*^9, 3.815053687282795*^9, 
   3.815055744910437*^9, 3.815056187451558*^9, 3.815134399572756*^9, 
   3.8151351594069443`*^9, 3.815135502071319*^9, 3.815136330293614*^9, 
   3.815136646704646*^9, 3.8151366979779997`*^9, 3.815136814112555*^9, 
   3.81513717184072*^9, 3.815137375498233*^9, 3.815137522926948*^9, 
   3.815137599310935*^9, 
   3.815138696390479*^9},ExpressionUUID->"7dae8e29-4840-4b53-b63f-\
2a16bfbb39a5"]
}, Open  ]],

Cell[TextData[{
 "What we have here ? The coverage over the confidence interval of our \
expected means. \n\nNow, one would think that if we low down the confidence \
level we may up the coverage, right ? Wrong !!\nIf we put the confidence \
level to 68% we actually shrink the width of our interval.. because at 68% we \
have only \[PlusMinus]1std, while at 95 we had \[PlusMinus]2 !\nSame goes if \
we up it to 99.7.. the width becomes then of \[PlusMinus]3std so our coverage \
will be bigger .. because we have room for more error.\n",
 StyleBox["(That\[CloseCurlyQuote]s also why a 95.5% is generally chosen most \
of the time so it lays in between).",
  FontColor->GrayLevel[0.5]],
 "\nEffectively if we check the Er for 95.5 and 99.7% we see that the latter \
is bigger than the former.\nThat eventually means that when \[Alpha] \
decreases we are requiring greater accuracy and so our coverage is gonna be \
shrinked."
}], "Text",
 CellChangeTimes->{{3.814809030109687*^9, 3.814809178272565*^9}, {
   3.814815979805149*^9, 3.814815992834323*^9}, {3.814817752401979*^9, 
   3.814817772652437*^9}, {3.814817803236433*^9, 3.8148178369826593`*^9}, 
   3.814817996394618*^9, {3.8148182554560833`*^9, 3.814818314159051*^9}, {
   3.8148184967291813`*^9, 3.814818497176652*^9}, {3.814818703724305*^9, 
   3.814818706628812*^9}, {3.814900640561646*^9, 3.8149006640284357`*^9}, {
   3.814900695462201*^9, 3.8149008783656187`*^9}, {3.814900914433271*^9, 
   3.8149009444471197`*^9}, 3.814901061830532*^9, {3.8150528451600113`*^9, 
   3.81505293481782*^9}, {3.8150562721790333`*^9, 
   3.815056348207131*^9}},ExpressionUUID->"b57cc2b3-6935-49cd-a4b5-\
680993b44bf5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]", "=", 
    RowBox[{"68", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "the", " ", "std", " ", "for", " ", "the", " ", 
     "\[Alpha]", " ", "of", " ", "a", " ", "std", " ", "normal", " ", 
     "dist"}], " ", "\[TildeEqual]", 
    RowBox[{"1", "std"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD\>\"", ",", 
    RowBox[{"Z", "=", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"InverseCDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"0", ",", "1"}], "]"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}], 
      "//", "N"}]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<CI\>\"", ",", 
   RowBox[{"Ci", "=", 
    FractionBox[
     RowBox[{"Z", "*", "STDest"}], 
     SqrtBox["m"]]}]}], "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Error%\>\"", ",", 
    RowBox[{"Er", "=", 
     RowBox[{"100", "*", 
      FractionBox[
       RowBox[{"Z", "*", "STDest"}], 
       RowBox[{
        RowBox[{"Mean", "[", "data03", "]"}], 
        SqrtBox["m"]}]]}]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Coverage", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"Boole", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", "Ci"}], " ", "\[LessEqual]", 
          "tValue", " ", "\[LessEqual]", 
          RowBox[{
           RowBox[{"data03", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "+", "Ci"}]}], ")"}], "]"}], ",", 
       
       RowBox[{"{", 
        RowBox[{"i", ",", "m"}], "}"}]}], "]"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", "m"}], ")"}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Coverage\>\"", ",", 
    RowBox[{
     RowBox[{"Interpreter", "[", "\"\<Percent\>\"", "]"}], "[", 
     RowBox[{"100", "*", "Coverage"}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<MCSE(Coverage)\>\"", ",", 
   RowBox[{"MCSEcov", "=", 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{"Coverage", "*", 
        RowBox[{"(", 
         RowBox[{"1", "-", "Coverage"}], ")"}]}], "m"]], "//", "N"}]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814809200099482*^9, 3.8148092001874228`*^9}, {
   3.81480924620205*^9, 3.814809263847419*^9}, {3.814809309721188*^9, 
   3.814809310729076*^9}, {3.8148097193588743`*^9, 3.8148097430212727`*^9}, {
   3.814809803572793*^9, 3.814809803707114*^9}, {3.814809981212658*^9, 
   3.814809986115653*^9}, {3.814814505700877*^9, 3.814814505966464*^9}, {
   3.814814675868744*^9, 3.814814718071774*^9}, {3.814817910604946*^9, 
   3.81481791614126*^9}, {3.814818053797307*^9, 3.814818134299967*^9}, {
   3.8148181926211987`*^9, 3.8148181999494553`*^9}, {3.8148182969306793`*^9, 
   3.8148182985680323`*^9}, 3.814818812358397*^9, {3.8148189487807703`*^9, 
   3.814818948930373*^9}, {3.814818984645274*^9, 3.814819011841218*^9}, {
   3.814819127808835*^9, 3.814819142003995*^9}, 3.81490006688006*^9, {
   3.81490062173413*^9, 3.814900621933485*^9}, {3.814900848911664*^9, 
   3.814900849743978*^9}, {3.815052636086398*^9, 3.8150526365441227`*^9}, {
   3.815053018904763*^9, 3.815053047162656*^9}, {3.815054433120709*^9, 
   3.815054433162149*^9}, {3.815054708112748*^9, 3.815054714727994*^9}, {
   3.81505513892362*^9, 3.815055139911604*^9}, {3.815055285131404*^9, 
   3.815055285204082*^9}, {3.815055420147306*^9, 3.81505542122698*^9}, {
   3.815055657816674*^9, 
   3.815055690735435*^9}},ExpressionUUID->"2fee6fb7-a1ef-4771-9605-\
6211d950a1ab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD\"\>", ",", "0.9944578832097533`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 3.814982436051196*^9, 3.8149865082543783`*^9, 
   3.81498664993211*^9, 3.8149880356966343`*^9, 3.8150454831294737`*^9, 
   3.815048177815625*^9, 3.815049099418682*^9, 3.815052645806403*^9, 
   3.8150527859062862`*^9, 3.815053052986115*^9, 3.81505331488579*^9, 
   3.8150535932261543`*^9, 3.815053691088037*^9, 3.8150542054608927`*^9, 
   3.815054434665216*^9, 3.815054716314991*^9, 3.815054783349618*^9, 
   3.81505514091996*^9, 3.815055214879184*^9, 3.815055286201865*^9, 
   3.815055422235898*^9, {3.815055646203974*^9, 3.815055691556628*^9}, 
   3.8150557494993067`*^9, 3.8150561874600687`*^9, 3.815134399592156*^9, 
   3.815135159427554*^9, 3.815135502096773*^9, 3.815136330318212*^9, 
   3.8151366467269163`*^9, 3.815136697987979*^9, 3.8151368141219893`*^9, 
   3.815137171868075*^9, 3.815137375508977*^9, 3.815137522937018*^9, 
   3.815137599320861*^9, 
   3.815138696410652*^9},ExpressionUUID->"d238005c-ba20-44bf-8921-\
69f0cd0c04f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"CI\"\>", ",", "0.004149775846006697`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 3.814982436051196*^9, 3.8149865082543783`*^9, 
   3.81498664993211*^9, 3.8149880356966343`*^9, 3.8150454831294737`*^9, 
   3.815048177815625*^9, 3.815049099418682*^9, 3.815052645806403*^9, 
   3.8150527859062862`*^9, 3.815053052986115*^9, 3.81505331488579*^9, 
   3.8150535932261543`*^9, 3.815053691088037*^9, 3.8150542054608927`*^9, 
   3.815054434665216*^9, 3.815054716314991*^9, 3.815054783349618*^9, 
   3.81505514091996*^9, 3.815055214879184*^9, 3.815055286201865*^9, 
   3.815055422235898*^9, {3.815055646203974*^9, 3.815055691556628*^9}, 
   3.8150557494993067`*^9, 3.8150561874600687`*^9, 3.815134399592156*^9, 
   3.815135159427554*^9, 3.815135502096773*^9, 3.815136330318212*^9, 
   3.8151366467269163`*^9, 3.815136697987979*^9, 3.8151368141219893`*^9, 
   3.815137171868075*^9, 3.815137375508977*^9, 3.815137522937018*^9, 
   3.815137599320861*^9, 
   3.815138696420376*^9},ExpressionUUID->"3d70bee2-79b4-4ca9-89b6-\
aa2df7e6dc20"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Error%\"\>", ",", "0.12450444487407089`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 3.814982436051196*^9, 3.8149865082543783`*^9, 
   3.81498664993211*^9, 3.8149880356966343`*^9, 3.8150454831294737`*^9, 
   3.815048177815625*^9, 3.815049099418682*^9, 3.815052645806403*^9, 
   3.8150527859062862`*^9, 3.815053052986115*^9, 3.81505331488579*^9, 
   3.8150535932261543`*^9, 3.815053691088037*^9, 3.8150542054608927`*^9, 
   3.815054434665216*^9, 3.815054716314991*^9, 3.815054783349618*^9, 
   3.81505514091996*^9, 3.815055214879184*^9, 3.815055286201865*^9, 
   3.815055422235898*^9, {3.815055646203974*^9, 3.815055691556628*^9}, 
   3.8150557494993067`*^9, 3.8150561874600687`*^9, 3.815134399592156*^9, 
   3.815135159427554*^9, 3.815135502096773*^9, 3.815136330318212*^9, 
   3.8151366467269163`*^9, 3.815136697987979*^9, 3.8151368141219893`*^9, 
   3.815137171868075*^9, 3.815137375508977*^9, 3.815137522937018*^9, 
   3.815137599320861*^9, 
   3.8151386964235497`*^9},ExpressionUUID->"0018d3c0-948d-4f2d-b716-\
ba1957db0720"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Coverage\"\>", ",", 
   TemplateBox[{"2.7`","\"%\"","percent","\"Percent\""},
    "QuantityPostfix"]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 3.814982436051196*^9, 3.8149865082543783`*^9, 
   3.81498664993211*^9, 3.8149880356966343`*^9, 3.8150454831294737`*^9, 
   3.815048177815625*^9, 3.815049099418682*^9, 3.815052645806403*^9, 
   3.8150527859062862`*^9, 3.815053052986115*^9, 3.81505331488579*^9, 
   3.8150535932261543`*^9, 3.815053691088037*^9, 3.8150542054608927`*^9, 
   3.815054434665216*^9, 3.815054716314991*^9, 3.815054783349618*^9, 
   3.81505514091996*^9, 3.815055214879184*^9, 3.815055286201865*^9, 
   3.815055422235898*^9, {3.815055646203974*^9, 3.815055691556628*^9}, 
   3.8150557494993067`*^9, 3.8150561874600687`*^9, 3.815134399592156*^9, 
   3.815135159427554*^9, 3.815135502096773*^9, 3.815136330318212*^9, 
   3.8151366467269163`*^9, 3.815136697987979*^9, 3.8151368141219893`*^9, 
   3.815137171868075*^9, 3.815137375508977*^9, 3.815137522937018*^9, 
   3.815137599320861*^9, 
   3.8151386964262133`*^9},ExpressionUUID->"83ac7035-81ea-45a6-9895-\
884fcbeab768"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE(Coverage)\"\>", ",", "0.00512552436341883`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.8148092067931004`*^9, 3.814809266289806*^9, 3.814809311919199*^9, 
   3.81480935020848*^9, 3.814809511604898*^9, {3.814809723649993*^9, 
   3.814809744907308*^9}, 3.8148098045287867`*^9, 3.8148099870514393`*^9, {
   3.814814499433304*^9, 3.814814507306595*^9}, {3.814814678482239*^9, 
   3.814814719148445*^9}, 3.814816057590949*^9, 3.814817075473804*^9, 
   3.814817202620002*^9, {3.814817919528924*^9, 3.81481793784583*^9}, {
   3.814818048336947*^9, 3.814818134967266*^9}, {3.81481818783679*^9, 
   3.814818201182016*^9}, 3.8148182395458307`*^9, {3.814818299415794*^9, 
   3.814818303192724*^9}, 3.814818381499612*^9, 3.81481850139703*^9, 
   3.81481869316571*^9, 3.814818729103389*^9, 3.814818815071677*^9, {
   3.814818939925559*^9, 3.8148189503424664`*^9}, {3.8148189891088142`*^9, 
   3.814819012819715*^9}, {3.814819134419791*^9, 3.814819142920044*^9}, 
   3.814819920921445*^9, 3.8148974691542063`*^9, 3.8149000679934597`*^9, 
   3.814900434230359*^9, 3.814900578021175*^9, 3.814900622918872*^9, 
   3.8149008645031023`*^9, 3.814900946357429*^9, 3.814962877273724*^9, 
   3.814964273837657*^9, 3.81496566344946*^9, 3.814968800852862*^9, 
   3.8149823173432007`*^9, 3.814982436051196*^9, 3.8149865082543783`*^9, 
   3.81498664993211*^9, 3.8149880356966343`*^9, 3.8150454831294737`*^9, 
   3.815048177815625*^9, 3.815049099418682*^9, 3.815052645806403*^9, 
   3.8150527859062862`*^9, 3.815053052986115*^9, 3.81505331488579*^9, 
   3.8150535932261543`*^9, 3.815053691088037*^9, 3.8150542054608927`*^9, 
   3.815054434665216*^9, 3.815054716314991*^9, 3.815054783349618*^9, 
   3.81505514091996*^9, 3.815055214879184*^9, 3.815055286201865*^9, 
   3.815055422235898*^9, {3.815055646203974*^9, 3.815055691556628*^9}, 
   3.8150557494993067`*^9, 3.8150561874600687`*^9, 3.815134399592156*^9, 
   3.815135159427554*^9, 3.815135502096773*^9, 3.815136330318212*^9, 
   3.8151366467269163`*^9, 3.815136697987979*^9, 3.8151368141219893`*^9, 
   3.815137171868075*^9, 3.815137375508977*^9, 3.815137522937018*^9, 
   3.815137599320861*^9, 
   3.815138696429368*^9},ExpressionUUID->"eb5ac342-41d0-41a3-a18f-\
ca4462d48c1b"]
}, Open  ]],

Cell[TextData[{
 "\nOne last thing would be that we know we did shoot ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"100", "*", "1000"}], "=", 
    SuperscriptBox["10", "7"]}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "7a8311c7-eaa5-484f-b12f-84f254ae6684"],
 " to get here. \nWhat about the other way around ... to achive a 99.7% \
confidence level how many samples should we shoot ? "
}], "Text",
 CellChangeTimes->{{3.8150538196116247`*^9, 3.8150538919721727`*^9}, {
  3.8150539315707912`*^9, 3.81505394531953*^9}, {3.815054392505789*^9, 
  3.815054401799695*^9}, {3.815055246567885*^9, 
  3.815055255988531*^9}},ExpressionUUID->"26c730f8-c04d-4490-9a11-\
43f32044e105"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TOTsamples", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"100", "*", 
     FractionBox[
      RowBox[{"Z", "*", "STDest"}], "Ci"]}], ")"}], 
   "2"]}], "\[IndentingNewLine]", 
 RowBox[{"TOTsims", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"100", "*", 
     FractionBox[
      RowBox[{"Z", "*", "STDest"}], 
      RowBox[{"Er", "*", 
       RowBox[{"Mean", "[", "data03", "]"}]}]]}], ")"}], "2"]}]}], "Input",
 CellChangeTimes->{{3.815053350012706*^9, 3.8150533576384172`*^9}, {
   3.8150537253354273`*^9, 3.815053726008864*^9}, {3.815054455754819*^9, 
   3.815054472631863*^9}, {3.8150545760370083`*^9, 3.815054679251307*^9}, {
   3.815054724244556*^9, 3.815054755317051*^9}, {3.815054786465212*^9, 
   3.815054815734377*^9}, 3.815054871014297*^9, {3.81505492805051*^9, 
   3.81505497640841*^9}, {3.815055025633472*^9, 3.8150551151849747`*^9}, {
   3.815055156720139*^9, 3.8150551623942833`*^9}, 3.815055223506918*^9, {
   3.81505527217022*^9, 3.815055275991312*^9}, {3.815055378048904*^9, 
   3.815055397291901*^9}, {3.81505576750137*^9, 
   3.815055778616735*^9}},ExpressionUUID->"8c567f76-3c2c-40f8-8623-\
9cff78fd677a"],

Cell[BoxData["9.999999999999998`*^6"], "Output",
 CellChangeTimes->{
  3.8150533597011414`*^9, 3.8150535932582417`*^9, {3.8150537004661713`*^9, 
   3.815053726743422*^9}, 3.815054207111457*^9, {3.8150544376992826`*^9, 
   3.815054474416885*^9}, {3.815054573735405*^9, 3.815054680295434*^9}, {
   3.8150547198960447`*^9, 3.815054757315281*^9}, {3.815054787395125*^9, 
   3.815054816781444*^9}, 3.8150548719698467`*^9, {3.815054930872356*^9, 
   3.815054976934887*^9}, {3.815055027308289*^9, 3.8150551635264063`*^9}, 
   3.8150552244741173`*^9, {3.815055277117197*^9, 3.815055289025093*^9}, {
   3.815055398766861*^9, 3.815055425135119*^9}, 3.8150557798924026`*^9, 
   3.815056187495749*^9, 3.815134399603746*^9, 3.8151351594405603`*^9, 
   3.815135502113213*^9, 3.815136330336219*^9, 3.815136646744925*^9, 
   3.815136698020911*^9, 3.815136814153623*^9, 3.8151371718939342`*^9, 
   3.815137375553239*^9, 3.815137522975526*^9, 3.815137599355693*^9, 
   3.815138696436419*^9},ExpressionUUID->"e33632b6-1c58-4862-8d5a-\
3985b14748ec"],

Cell[BoxData["1000.0000000000005`"], "Output",
 CellChangeTimes->{
  3.8150533597011414`*^9, 3.8150535932582417`*^9, {3.8150537004661713`*^9, 
   3.815053726743422*^9}, 3.815054207111457*^9, {3.8150544376992826`*^9, 
   3.815054474416885*^9}, {3.815054573735405*^9, 3.815054680295434*^9}, {
   3.8150547198960447`*^9, 3.815054757315281*^9}, {3.815054787395125*^9, 
   3.815054816781444*^9}, 3.8150548719698467`*^9, {3.815054930872356*^9, 
   3.815054976934887*^9}, {3.815055027308289*^9, 3.8150551635264063`*^9}, 
   3.8150552244741173`*^9, {3.815055277117197*^9, 3.815055289025093*^9}, {
   3.815055398766861*^9, 3.815055425135119*^9}, 3.8150557798924026`*^9, 
   3.815056187495749*^9, 3.815134399603746*^9, 3.8151351594405603`*^9, 
   3.815135502113213*^9, 3.815136330336219*^9, 3.815136646744925*^9, 
   3.815136698020911*^9, 3.815136814153623*^9, 3.8151371718939342`*^9, 
   3.815137375553239*^9, 3.815137522975526*^9, 3.815137599355693*^9, 
   3.8151386964412603`*^9},ExpressionUUID->"5d3c5220-4a17-4b7b-929d-\
708613f411eb"]
}, Open  ]],

Cell[TextData[{
 "\nFor better estimations of the number of samples eventually check these:\n",
 StyleBox["\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["[LT->Theory->Sampling->MCErrorAnalysis->Monte Carlo Simulations: \
Number of Iterations and Accuracy.pdf (A Priori Estimate of Number of MC \
Iterations, pg.7)]\n[LT->Theory->Sampling->MCErrorAnalysis->Probability and \
Statistics for Engineering and the Sciences.pdf (A Confidence Interval for a \
Population Proportion, pg.280)]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\n",
 StyleBox["[and following that needs Power of MC simulations not analized \
here but to be found on the latter pdf above]",
  FontColor->GrayLevel[0.5]],
 "\nComputes the number of simulations B to perform based on the accuracy of \
an\nestimate of interest, using the following equation:"
}], "Text",
 CellChangeTimes->{{3.8147281975769253`*^9, 3.814728333528817*^9}, {
   3.814728375500723*^9, 3.8147283810852747`*^9}, {3.814728413683156*^9, 
   3.814728424952242*^9}, 3.814731006763883*^9, {3.814814218660611*^9, 
   3.814814255476015*^9}, {3.814819334602777*^9, 3.814819375083221*^9}, {
   3.814901442957382*^9, 3.814901443946123*^9}, {3.8149031250114*^9, 
   3.814903132952866*^9}, {3.814903281418343*^9, 3.8149033345745897`*^9}, {
   3.815053152486977*^9, 3.815053154778141*^9}, 3.815053952228245*^9, 
   3.81505537297504*^9, 3.815055442940662*^9, {3.815060412569481*^9, 
   3.815060571711488*^9}},ExpressionUUID->"939102b3-ecdf-4913-a35d-\
9c501846a2dd"],

Cell[BoxData[
 RowBox[{"B", "=", 
  SuperscriptBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       FormBox[
        SubscriptBox["Z", 
         RowBox[{"1", "\[Minus]", 
          RowBox[{"\[Alpha]", "/", "2"}]}]],
        TraditionalForm], "+", 
       FormBox[
        SuperscriptBox[
         RowBox[{
          SubscriptBox["Z", 
           RowBox[{"1", "\[Minus]", "\[Theta]"}]], ")"}], "\[Sigma]"],
        TraditionalForm]}]}], "\[Delta]"], ")"}], "2"]}]], "DisplayFormula",
 CellChangeTimes->{{3.8147283945472813`*^9, 
  3.8147283957535677`*^9}},ExpressionUUID->"ffeab87f-4843-437a-9654-\
262b6bd65b3e"],

Cell[TextData[{
 "where \[LineSeparator]\[Delta] is the specified level of accuracy of the \
estimate of interest (i.e.the permissible difference from the true value \
\[Beta]), \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", 
    RowBox[{"1", "\[Minus]", 
     RowBox[{"\[Alpha]", "/", "2"}]}]], TraditionalForm]],ExpressionUUID->
  "6842022d-25ee-4f1d-97e8-3f3751a35153"],
 " is the (1 \[Minus] \[Alpha]/2) quantile of the standard normal \
distribution,\n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["Z", 
    RowBox[{"1", "\[Minus]", "\[Theta]"}]], TraditionalForm]],ExpressionUUID->
  "b5fd96df-9802-4ecf-8581-dd367babc632"],
 " is the (1 \[Minus] \[Theta]) quantile of the std normal dist with \n(1 \
\[Minus] \[Theta]) being the power to detect a specific difference from the \
true value as significant \n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Sigma]", "2"], TraditionalForm]],ExpressionUUID->
  "080708b3-4441-458e-bb6d-12fe674efea8"],
 " is the variance of the parameter of interest."
}], "Text",
 CellChangeTimes->{{3.8147281975769253`*^9, 3.814728333528817*^9}, {
  3.814728375500723*^9, 3.814728397394442*^9}, {3.814903360970594*^9, 
  3.81490343448026*^9}},ExpressionUUID->"ad89ff4f-4fb8-4d3c-b6e9-\
268f93a9ad3b"],

Cell[TextData[{
 StyleBox["\n\n\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["===================================================================\
=====================",
  FontColor->RGBColor[1, 0.5, 0]],
 StyleBox["\n\n",
  FontColor->GrayLevel[0.5]],
 StyleBox["Now, let\[CloseCurlyQuote]s see what\[CloseCurlyQuote]s the impact \
of using a general uniform sampler VS a specialized one.",
  FontVariations->{"Underline"->True}],
 "\n\nFor general uniform sampler we intend white noise. For a specialized \
one let\[CloseCurlyQuote]s take a Low Discrepancy Sequence (LDS).\nWhite \
noise tends to \[OpenCurlyQuote]clump\[CloseCurlyQuote] samples in some zones \
(about ",
 Cell[BoxData[
  FormBox[
   SqrtBox["N"], TraditionalForm]],ExpressionUUID->
  "29d1a6e8-e55c-438f-ba69-b9d0122513ec"],
 " out of N points lie in clumps), while LDS has optimal distributed numbers \
over the sampling interval 0-1.\n\nAn LDS is also called ",
 StyleBox["quasirandom sequence",
  FontVariations->{"Underline"->True}],
 ". That also means they are not fully random. Which in turn means we can\
\[CloseCurlyQuote]t just apply the same error metrics we do for Monte Carlo \
error analysis and simply because this is not Monte Carlo but Quasi Monte \
Carlo. In quasi-Monte Carlo methods, the error satisfies deterministic \
bounds, as given by the Koksma-Hlawka inequality. ",
 StyleBox["[LT->Theory->1998 - Monte Carlo and Quasi-Monte Carlo Methods]",
  FontSize->12,
  FontColor->GrayLevel[0.5]],
 "\n\nHowever here we\[CloseCurlyQuote]ll deal with low discrepancy hashed \
sequences to see if they are still better than crude white noise. \nWhen we \
hash a sequence we\[CloseCurlyQuote]re turning it into a seeded random \
sequence."
}], "Text",
 CellChangeTimes->{{3.814969098489843*^9, 3.8149691316919737`*^9}, {
   3.8149692507164288`*^9, 3.8149694709028463`*^9}, {3.814970758419526*^9, 
   3.8149707751610193`*^9}, {3.815066127942627*^9, 3.815066146149218*^9}, {
   3.815066294750848*^9, 3.8150663330383*^9}, {3.815066406326695*^9, 
   3.815066451374771*^9}, {3.8150665444912453`*^9, 3.815066549802187*^9}, {
   3.815066742779552*^9, 3.8150667607572727`*^9}, {3.8150668260804787`*^9, 
   3.815066834763907*^9}, {3.815066976326866*^9, 3.815067085717821*^9}, 
   3.815067254667742*^9, {3.815069021020969*^9, 3.815069027545515*^9}, {
   3.81513235941848*^9, 3.81513238716051*^9}, {3.8151345287174597`*^9, 
   3.815134549329933*^9}, {3.815135728694702*^9, 3.815135826795779*^9}, {
   3.8151358843719063`*^9, 
   3.815135995588871*^9}},ExpressionUUID->"94afe4b5-03e3-4bbb-8a81-\
bc7aa6ea1779"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"dwn", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"RandomReal", "[", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10000"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dwn", "]"}]}], "Input",
 CellChangeTimes->{{3.814970820050036*^9, 3.8149708535254374`*^9}, 
   3.814970950097843*^9, {3.814970985675365*^9, 
   3.814971034564406*^9}},ExpressionUUID->"06cc8a49-b281-406c-bd37-\
b371460c7c02"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.023165`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.8149708485047483`*^9, 3.8149708541348963`*^9}, 
   3.814970950710475*^9, {3.814971000970364*^9, 3.814971035362989*^9}, 
   3.814982317391768*^9, 3.8149824361157713`*^9, 3.814986508319764*^9, 
   3.814986649993702*^9, 3.814988035749159*^9, 3.815045483188826*^9, 
   3.815048177866976*^9, 3.815049099478403*^9, 3.8150535933102207`*^9, 
   3.815056187553481*^9, 3.815134399653783*^9, 3.815135159488179*^9, {
   3.815135384218389*^9, 3.8151353899865427`*^9}, 3.815135502163265*^9, 
   3.815136330389792*^9, 3.8151366467974653`*^9, 3.81513669806966*^9, 
   3.81513681420352*^9, 3.81513717195315*^9, 3.81513737561275*^9, 
   3.8151375230312843`*^9, 3.8151375994155073`*^9, 
   3.815138696499807*^9},ExpressionUUID->"9109ebf0-667b-4149-a166-\
be33fb940228"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
VG0bd/0tre8G3tjeAsu1pD8+1w66ePr22wu0vhuavQN6+vSn+bPcULWot8M7
F4qnKjeMe/Mlu/EcybPeDcqLZ2193CjeaLjjWsaWCR1WkL3y3OG/cvhnl5fM
/t05vDz0IvQYs3932A+XpQ3fyPDVHbnt8mrf/Wb8u8NyqbrX2NcM79xhuGKW
s20+4XW9OyKG//z1vi/T/0Y4NXisL1pPeMLbCA3eu+nn+CRvbISVxR5Bfjb5
J38jtLrEiTST62j9jeBNznK7fYTsMWsjBFo+w8ymUj6t2giTw2HbX4jJX+o3
gn8n0jzqPMlHwwO8nOU2FrtI3zwPqM5f6tr31hla3wOG79Td+xkT/XwPOA3T
XHOjH8MXDzTcG3NRw4TwL8sDOkMDPXf0J/5UHni6MPx7w2rm/x7gFz27Ov8t
4bnGJihDEt02VJC98Lj21KLVj2fTetgEp3u7f43fTOvxN+FU3rXj+/Yy/NkE
w8kjdi+KpfwtaxMkz+KyNQyJX9UmDNVObngRRvTUb0KvNc7Ktm6EhxqbIXPu
GLNyJ63H2wyPK26xvi8pvmMzyt19g1YvJ/74m8H/bsJvd6GE1t8M/28Tiu9k
E31Zm6HcGbJjsu9NWp+b7+M/lx/TCB/qNyOrSuSS0MLi7xa4jEs4uWoJw98t
kKpupmk5kr1hCzSf7dU9aEH2zd8CrfDN8S/TWHzaAl2zYzJjG7b+Ftjtksz+
l07yUG2B6az+umUPmf1vQVbo27xu8xn/ngjc3+ucwz3mf54wq7+vmz+G4Y8n
5EvfdP91keyZ74mi8sFTLp5i+bQnVJmrtQ48JnvJ8oRBTltichnRr/JE/tK3
zYMPk73We8Io88bj9y+Y/W/FU+ngjU9mER7xtuJXVGRu8xiWj26FzsIx54dH
F9H6W7Hn+LuZ40+TvERbkdXTLUxnIeV7WVsBnZDHtUIWf7Yi58LhS/+NIX+t
34qX9lMf+b1m/HvBXTp/wL7htB7PC/zUUZsCf1G+Ay/o724wbjUjefO9oFTW
/xXcYPmFF8Q/XSeMWUL0Z3nBdtmdmFhdhn9eeOrdSbLdkPRR74UCXs6ZrDEs
f90GtEwM/9yF8I63DbkeZpMyPtLz2IbMv6tr4vs/pfW34eakH9ZPcxn/21Be
+LbI9QrJM2sbSnfPmbjWkeZTbUOW6f1u4aMon63fBpVNz1lz9pJ+NAQQucus
+Ymp/2vrCDD0uEHfp9OYPgTwOvp8wYAosj8TAVRf+mhNOSkn+gQ4Pqn6VjOP
8MtWAJvKe5yYqc0XIN1kwMVbW4heATd/j6+/DN4y+xHAdP75SI/ix/9rSwWw
1P/gfuIK2VuWANLTtxWiaJJXvgD84iWqZ3mMPwE0RAecN4UY/a9dJYCW96oQ
zSXUXy+AzrUjPaN+0HpqAexO6x56dpzFv+2od02/42BO/OlsR5feu6q3LiS8
4m2HdP6gvR5HCQ9MtiN7jfbXZbXkz9iOj0XhbwdGEH+22+FvGn/3qgbDq+3g
lb82039M9Au2Iyfca8D9tTSfaDtM1DcT/eKIPul2BH7TMPtaTvlq1na0wktn
RgnhTz4338/eCwv8WD68HZrfbIzefqP1qrajUXHcYMVz0m/9dtgNaLngoU/8
qLfDs+fDRptPTP/e4E+zsz5vQPsxHW8UnOi0e1B78leeNzY7TBL1v0b2ZeIN
pViht+kL498bGlu6FiRqK4h/bxw3KhiVeYjx7w3eFO+ZE8TniX9vGFoccJuo
wfDLG0UObj+cbpD8pd54E9bFfNFqsp8sb8DosaGtfj7x7w3xnbUtl2ZTvqTy
Rk3LxQlfvpL/VnnDcWDlhw63Wb7B0dv/1MTRHWk+tTc8brdtitQhvNDYAfGr
Jb8vGJL96ezAQ5loxc4pDA93oODjuwKnd0SvyQ7Yla05Mo3FC+xAjvO0+UOu
U7/tDmRqpb9YbEz5DX8Hhj67/HljI7P/HTBxXJJ68BbZn2gHPlZ07nfTnMZL
d4C3zHqDRQ7ZQxbXTuy94YI/xfP8HRg9sHjkNBHbj+6Ad9cHOgE/id6qHagV
VPrbWjC824H5nf6sM60jPFTvgEFK74uGv1l9wAcdKyr/rZ9HeKbjg19PB5zo
3Ebz83wgKcsLuDWW7M/EB6JvJyYcST9M/PtAnrPu0CsXZv8+0OhqMXjuNwHx
7wPz71OEvOdEv8AH81cMPOaqIv8U+aDm2f7dyoeEl1IfeHo2dJjH6jVZPvjY
8cGfioFET74PXj7/63+9H8N3H6hf9bzlZ0fxtMoHrfzT57TEhJf1PtB97lu5
8QHxq/bBPfUQySUDtv/bCemMSBvdOKrv6eyE1u/HYx7WMv/n2sMTNfOXUDw0
2YmsYUE6S+rInrETfcd8tbE8Ss/b7kR3ncN67/kkT/5OiAoCy8LbK4n/ndAo
zIm2uH6A+N+JN2+dZ5Vp0fxSjp6eay1MtCg/y9qJmdXW+suqSb75O2HOe2ya
94/wQ8XNF2oyobS1kPjfCZ/Xy14Wzmb+z/V/iOrs+JryIfVOVBtMiHu/mcU/
X3wc5nytzovaOr7c/vl94spV5D88XzipWzvOKSX/MvFFvqEocTfDT/hC7fll
1QEnkretLzT9FzR5/2P5ui9MluY6vjhL+YHAF7b3FvS6e5np3xdPHQeZXGlH
eC/1hY7+w/N2G1g+74uIxZ5xtgMJj/J9UTF44psQd8JTlS8yt/U68DaR7KeK
o+/VpA8zjlB/vS+H36Mnr9Sk+Kf2RaNsuLPJT1pfww/u8zWOBc+k9XX8kHMp
vMTaluIvzw/CUi/ntRnlxL8fsj88Wd2Vx/ITP+h5JJ56bEbys/VDq88LndIw
li/6ofE/0yup90lfAj9EhfyT/3nI6nF+yK/SuJo4jNaT+qE48YzFur0M//zw
9G/N9ry5hCf5ftiz9Md7r3zqV/lBe+DCxtcPSR9VfpDE/1h6PojwrN4PbQeu
q+2mMP37QXn0xMD4biz+CaH3fuPr/5wp/9cRImGVR8P6ziwfEUJrac2qm9mE
dyZCVI35KnauY/UKISpKNuatWUL82Qrhnv3HN24o+QNfiGtu26euHkr4JBBi
UNPZy1nBLH8XQuNik+rZXuJPKoS14tTa/D7kD1lCHJ+e8eSKIckrXwiT83PW
fJ3D6llCZJ/Mf/KfKfFbJYS4e0ib1I/q0fVCWB56cmgRqz+qhbiJioTL7Rn/
uyD4btjraR3Rp7MLxg9ihvB0mP/vgvblJCNhFrVNuLZhW/bASaxetAsadTPu
WKaSvm13oTrzfYr6LOENfxfGTYlaPHM1PS/YhdYXzUkh82l/J9oFkzMGlzaq
rhD/u5D+SevRwALCj6xdUNkt0xA+Z/6/C7aexU3y7TRetQsj3LIemcWz+Mf1
r7MaaLKC1Rt2Qb3qRr6jGfmHehcuT8lxMJzA8M8f6iKPdt1SqV/HH79C8+93
bGD8+0M4foDjizbSj4k/PP8sPrmez/j3h0F9VqVtFsnP1h/y7fbxRjFM//5o
GJvZKewZi3/c87/vx022JfpE/jAfYXRLX3CZ+PcHL+Sd5SmWL2T5Q6/T9qOz
1jH79we6dXq2OJb6Vf5QXqtqGzac/L3KH9rrrfSO9iE8r/eHKHjoxFH9Sb5q
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
lRRmrz0upIwn+q2lsJgbs2q4kPzXVgq7WJPMD3PI/uw4+bg016z9yu4rSCFI
lv4oTaF46CSFatnwO3mXCZ/4XP/Lpm8742l/4SoFf3vc2Qcv6D6WhxRtZm2j
hC8I/z2lEC03mnx4FZ1/CaTQuVV07PlZ8ncfKQyeGG1oV0ltoRTZ99rX/kik
eBnIyfP81u5bv7D9jxTlIedOOT4kfiM4+XfbaVnuRvmsmNNfzfCHeZNpPokU
44YPbB+ux+ojUpS0ezy9aDHFR5kU6rTm0t/7SZ9Krm0zvCZuGc2XKUXO1HsZ
OaXsfTUp9thdOzLPh/STzcln9XF1bBnt73OkiGqSCP19KF7lSiGbaXOwz3Z2
H5zTd6giSnqC7KmA029d+dL+z0heRVKYy6eErW0j/ZVI0bjxS+0Tdl6t4vTl
mNL1tyPJo4yjz2Xy6teL6flyKTw/vN1/ZjitVyGF//WFkyYvZvctOf0XL/s9
cxfF22opmi+UhI0vJX+q4ezd8tC02aZE31MpjN8sPRowg70PJoX4jF/MwOFk
Pw2cPX8c9yV7JDvP5eyj+77ZTZcIH5ul+G7umz7WnZ3vSmGzr+Zajz/k3y1S
xF4qHr6e4WOrFMU251ePukr6b+PmmzdxsnZvlv8noWWSekIntn/QTIJ+1w7l
iyazfDAJ5mu6NtrpU/6lnQSTuu6rV/ameKCTBA3FrB7L2ftKukkoXX1zdt5h
dl6chHKDMQ2j7KleYJCEifrtrlZqUP7JS4JKOOByvDbhvWESbDMrDjtNoPmN
klAQOEb3zGiSl3ESHJ7cuaWKJv2YJIHX8cCeWAOSj2kSIka5GX6cwe4bJEHc
f9Sh/g+IHoskWCUvqjs7mOIlOPoTur+cCarfWSbhaVrh74shRK9VEjzOlg49
Mor4s05Cg2HGyNtm7L5vEqSaN195xJH/2HHzTR2rsaycznMcktD3y8vm4Kkk
X6ckGP1883hnI53f8Lnnx7s+7Mbq767cfKu088U29LxHEvyvDJp7wJDwzDMJ
M78euvRyEjvfSsKcYOXWmcb0vE8SXEdP9nN7TPoVJiHnhexK0HgaH8jpO/R5
dZWQvT+dhD0/Dj57Op/kGZEEQ2OjRwkubD/E2cO512Y8Hs0vSUK+1wGvjP7s
vnYSymI1927cT/KQJaHR7PA/2W2SlzIJ116P/aLNvt+SyfErefPbK2AL+X8S
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
sg2f/56mTfFclYbM0E3ywyMpvytLg6z+5wFzhiflaag6t8oz6DHl1xWcvM7s
GVsZze5ncusfe9kucjTz/zQ49XC5P5B9z7omDQKj/tX/hhMePOXsH6J7n4+z
93c4eidd72zNfo+ggWvbZtuV7KR438jp77Bg1IubFA+aOXtryLwyoIl9z5Tz
nzc7b+wMJ/22cPT2mma/KYjyz9Y0hN05GrY8h/rbOH0VnF5hdp/93k46Ynkx
Rz/fJnzUTIfn0c8GaQEkL6104P0s5YuZVH/VToeRtf+DE+y+vE46noZ1XjmP
3efSTYeB+6Y7yez723rpaPikKVtqQv5pkI7AUT139prDzv/SUXAy4o3BMcIr
w3TYRXfVq13B3idPh8bfZk3DdpvJ/9PRGhz0bJg74YNJOmzL2pa6B5H/mqbD
asD1z3P3U33LPB2Wup8PWG6l+SzS4bDq06seueSvSIdo6/ybQ5bS+aNlOvou
4V0w7Mnuo6ejWMuMd3ME4YV1OjrGx3fbmsveT0mH1iyX5cMkFB/s0nF5VBfn
2VKKnw7pOFXn3lDxi/TrlA5BXffa9YfY9wvSMbOyW+sE9ntIrukosV75ufk9
q/+lw8zeZeH5BtKPZzpMR6csavNj7zemQyqSlC6VkDx90lE+YkqWwoXkI0yH
ea3eBfsBxG9gOowdwivdrhK9onS8c/u3Zs8nsq+IdDh9+XxDj31fXZwO15Vz
Nsc3Ej0STt+7BiS+3Ub4JOXsZ+D3ZXJ7Vv9LR9E2R792LB9RpsNkYXNgoT/F
g0zOnt5myJeMovcJs9KR3+hxfsNZymey09FrosTwsi35S046JDsy9E6MpPly
01H1oE2zw2nCv/x0jHi+OqbgB7v/lw7eq8yUoKck/yLOfq48zljZjX6vpoSz
n97B1Ue2s/pfOs6s2j5m2WqSX1k6Ji594bXqL/lLOSe/MW36vnfJHiq49XpK
zodfY99b4+xpTon6Xj+SRzXnHzpDeLwrLP9Px5e4Ru0p0STPp+koW5R7vMKP
7Kmeo/fspYMhfFb/4+S15sqP97/p/Y9GTl4XDCIO/aLvCzanQ1z2LWIN+70R
Naefv646NvvIv1q48adGxemvYP6fjsp4RbtJ00g/benwsS/idWL1FI0MFH8t
3f76LPmzZgY0csxKO3YivNfKwOW9KslU9vtU2hmofdZwL9aU1f8ykG3Vq/UB
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
1dR1pB/3PEjntMRPKCR8bMyDhiqb/J1bSB8eiN/X/7xeJRN/eOL3E/3P9Gf9
by+UZ+yeZX22ZF8fxMeqQ2knxJTvwRfx3ZWW3S5D3/vlQVZMo7aY5dfxz4OO
PKnHt5JY/M+DNjuj847DaL04MA/0sh90tYwj+YLyYPSabCWXEaTf4DwQJof3
dBWTv4WgPkZOFOTqsv3/aJ/oKuPOLSz/Xx4UB40NdjxL+20j8qDCaHvvs0bS
T2QenB70Y0RQBj0fzAPTb33346rZ/v88OLj8t+0zLbb+nwcuBia96r1k32N5
kHczIF9xIfFDDOLLzqgrWpbki8uD+GtntPQtaD0yHvE6cbxtZCC1JyEPcqJO
JI5Vof+TEA/jymwGvGfz/2jfo2VP8jdQ/amov+5kzQMRhMfTyF9hE2+ONCJ9
p+WB6ghNs0tubPyfB9NtzE7siiZ8ZeSBl5rAMlWL+jOZyBdnImYKjtNzFupn
Q1y8aRX5d3Ye9CpMPWgyks3/50GIzot3/3+fa24eaLzbvuLFEHrOywOV/Plv
NFg+Ei76j/2WxCNs/xgf+ffLQojopXgrRH0VzfCp28Tus82DpPJpF27sIv6/
inwc5DizSJbdb4t4TZOTyXCk+FyA+AjTqB4TxPL/oPwPlD5/NqD2FqH+FRoO
jU8kfylGfD5IfP1+Fcv/h3xlrJ0TwObrS/OgznlGhnkY8VEZyj/I1kHQweb/
kb88ArJ/PyN/fJAHM53ExjPYfUcV+N5nmOozZfKPyjzoedyjb1dH5VehPPIj
F7q9pv5ANfLnPqnHY8KIn2vyoLF1zfepq6n+53lgyeHIyLD7Pl/mgezZuXLD
NVn+nzyYO+jg3MUJbPyP/vhHNylaOojifx60PMmuL3jC8v/kwefdSt5fZNn6
fx40P3Q1Dy2g+dLPiAdjVf+gPNqf/CUPcj8Wh/xqZfl/kO/erT50bzH1DxpR
P59uOv24R/G0Gf1Ro+Fd/hvyxxaUZy+kHnWjfLdt2P6ty0LX9yf8tqO+LtQ/
ydxA8bAD41Nrfn9TWcJfJ/qvltImEw0af3TnQba19bUrHiz/D/LllOCcQjvS
51/kk9nisMuppO9ejC9+J3c7OrPzfxxQHqWscYDd19iPA6HPrD5dvkXvZTkg
dWfDquZAWm+R44D1nMlPpqfQ9/IcOKyq12LM7iMeyIHSrvRWObYfQJEDGjmT
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
OS2EflI1ZfqeFP/OIH5jl+n1PWf5zVE/4762tWwn/jiL/tJ02E6Zrc+mIx97
v9Bx/0rjkXPof8tH75+8iubbMpBvy2r0I6Op/POIl/HR96SWsvPQQnjX+GRy
2D96fwHtOedoqRfLl5QlhMCZg13UL1D5F4Vg5XTp3r508vdsxFOn3Iz5rD91
CfXlWSE6E0v+n4P+nBVyV8DyzV3G/off0E93vpL+coWQt6P4nftb0v8VLH91
rcK8BuKjPORvb/Us0T5qPwfxF7jq9YdBJC9XCClZV9yNj5G9eehfJ36KPf/F
/vfMF4Llj48b5w2j+gQYz5WypmdlU7wSIr+XrxuxzIfqFwmB730uMpZL56XE
2J5lY6+uY/f3SYRweu/N6GdRVP9V7H/IadrP30b+cw37p/0228teZuN/jDfJ
rw3+eJN/XxdCqEnEqGxD4uMC1PdpKd8LGbQ/44YQnCsu6pVOI/8uRH9KDR5z
P5biz03Eg2JEm9YG0keREFT9b5cuZvnsbwkhX+r53wPuhN9ijGeu1VUjKkg/
t5FfjlUqfnxC8peg/j9vujb2KenjDj7n9fTVKxJeS5HvC5VVrmWT/e8KoTD3
7p2zU8j+ZdhfrVGI7ysn+99D/HcfjpwfR/gqR/74EKdRkEjf30d8nn9v4nOL
xtcPhBCU+KLU7D3570McPxxcWZfL5vMqUP83slYZm9P6yiPE2zWpJ4M3kH4q
0R+GDrKq2kp8+VgIkUOb+k+tofdViPfYYUurfEmeJ8jHb+adcuwj/VVj/E7M
C42ayNb/hTDhz5LjX/Op/hr0n1euBcvZfP4z7C8npAdLTSX9PMf3J4ziX7D5
mBfItwNum2sNZ+fXMD6EqUXtCiQ+eIX4Sv47IXUg9Y9fIz9dXjt59UyS740Q
ZiuPWzaK+edbHJ/MXvdS3o/aU4t4eZVv5vqa5btFfNy+Zz6c3Sf5Xgip+tdH
71pC/Fb3P/4/tiFjF9n3A/pjx+y2epbv/SO+T26/UsDOj31CPC9RX5c+m/zv
M/JV3xcbebY+XI/vxUGnmtWIv75g/3Hv9lE516i+r+iftyOXBv4mezZg/637
ueWgVYS3b9hezYQMbjjLp4//WzY7Fqex8T+Od8JiB71Pp/FMM/LP+sJn5e6E
n+/Yv8v7oc5n+WVbhJBu3P50qDzpvxX1fduNs3Q82acN482Zp3Vegwi/P1Cf
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
gpamJb4mAnb/KeJz8+eNQ46Rf58XQdm/xoecKew+NMTnfPH1j2x/zwXU18Or
MMaE4lUW9hdqBTeTH1D++4vIpydXZty6TfbLRr49/014VEDlX0J9HJdO9mbz
sTkicLq5Wcumivz/MvLpy0ExavOoP58rgiFzpn9R3kT6uoLx+rC1l4E3fZ8n
Aoe6P48/sPURDvYHcxXWhkyj+T8u8nXZhO1hh0keHuIrcGuf71LiUz7a62f9
peub2f5/Ebi1WtmfOsfysWB/49nsPyJ2v7sI41mwStZ5O7K/GO2R/GbUMyGt
L0iwPzdt1mLZbey+drTHH8V/IdbU/76G7d+0Qc5hEfFDPuK3a4n2xwQq/zrq
+7HBgBxr0k8B+qfsubDfzH43MD7fU/mUuI3ld8F4ompmN9yM9HMT+xtJyTvq
5Mk/ivB/XfEA1X00HriFfF4vDDo3gPy3GO3nv+bSHS6t799G/Yx9MV/an/Bf
gv70/Va4p4D44Q5+f/Plrky2PlsqAp/Hm4vumlN77oqgfdmMhn0mhPcyEdjE
hba+bCS83kP8LItR3VhP8aIc/WvumimJFdTfuY/y6uV8d2f5Dh4gPkcft77P
zlc+xPb1Prybc5OdLxeBxyrpeE4ZxcNHKO+si53PVlF/qxLxc/bLmjMsf/lj
1Netx0UbvxG+qhBvD1JUZVi+xyfYn+raHPyCnbeuFkHvmEHvvsWRfp+iPSM1
T8TcZPfTiODYul97Rs2h98+QXy9Eb5EGdl+9CKo6figJO2g96gXyn5HhXg1m
z5c43rrjV51fSf72Cvu/USNtX5qy9X/8XjtBWJ9G+9/eYDzLM+LdZXz8VgSl
RnLdKWz9qRb5TuW0dCbbr/EO+68ZM5WGrCN/f4/4Nl7bUMbOX9eJwPkJJ/oh
G298QH+dYdu9N4T0/RH9J29KbnM/ml/+hHx/2XZL6U/i089on10rv8UZER7r
sX8p3THK2I7w8gXffxu5b9oU4q+viP/Iqsn9b5L9G7C/Wq4+SsqD4s03xEPV
s935bwh/jai//fljpjA+asL+3Z+ErwE84qNm7B+NXbF1xF62/x/tM1Jd6jrL
99YigsN/f8dXs/0+rSKwOnp1TEU42acNy/drini2iPD5A//vb/C+Vonw0454
Ob8sSj6T5P2J+lxyQzK6h8Y/HcjXw6VfFrYTX/zC+OlqG7VsPn3fifpLX+zQ
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
6GO6voH+YijF3+VB/8dz0P4TLDMfvSL93EQ+3fOtRdhP/HCLCwKp5OIv06i/
XHze9JTmmS+EtzzU9z3xtl2K5B+3EX8uvxPnHya85qN+3sjG5YaT/xZwQblY
uTHRm/iAg/GmbfPL9giKL1wuaLd4aO5m9UV5XDBet8a38xb5Lx/z37feBREX
aT4j4ELlwD1HkR3l60KMj96KdWM/UH8iLgzzDWl5fYuuCzF/OXDy0kW2/qGI
C74P5G77RbL6fyjvt1nd+wcIr3cxf1Hacjmwl/y9GPOL9XUymjl0fQ/tsyl0
8mAxikf3kS82pWqr9VL7JTi+iWfqluURfh6g/tfPUyzNpPywFOWbvWdn0Qni
m4fon5HLYjzZfoEyjHdrJ1boPCD9PMLxBh7qHXOX+LUc+XSjprkxy+8fI/+U
Hw3rPUf4rED7aH+SyvWi74NPUJ4escGv4tn6f5wfLIv9JPGC7PHsf/nT1VBD
dv5QJeZLtwLyh7WTPM9xvGI/HQJuUPyp4sJEF7F5btsofrzAfHhPRRRHktqr
Rjz5Gw1VWk94fon5zsjJPSY1pN9XXPDfmaszzZHw9Rr17dh1z/cg2/+P+aHp
lD/vWD3It+i/2/uVx8vSep4aLkjs/Gm0gNX7fIf9PajcPDWNvhfVon5KP7df
uEP332N/5oq1hxZQex/w+X9ho0VOlF/UYf43aGXP+S3ED/U4v/rpOmVSCNmn
AfOBjwcCXoqx+n9c6K0ReztLkfijCfOX6vvT6tn8uRnH07lbMt+S+PAjzj/U
jvbMfkTfPz+h/2fCC+XThN/P6G9t8cWgS+21oP0PN3hOCSc+b8V4OOzwGaOf
hKc2zJ8+C2ZfUSG++oLxVKL0xOgtZK92zDcP1wRP7iF//IrP72sZNa6Y/PUb
+nNbrtzbFXT9nQtPU09GHhFQftOB9vUIkjtZT/j6gfq59/W55Baa33Vygae2
cEKpOPHdT9TvIv+H+r5s/o/51PDZ22tWU773C/n4SeLrOSo0H+nG66VDPwsf
0nz8N/JvsPorzKv/u+7BeGKga9LJzpv/g/jzDV7/+C4934t8ufD63WG3yd/+
ciHn0ciEMD/CUx/ytVzmmPANdN3Phb7SiPlPRGSPAexvg+BrGI++z/373/ym
dvgjtr9DjAce+qWBwOpDiPOgar5o5qlENv/ngdEmg2HGdhT/B/HARHvWQ49W
9v+fB50/4pQ+3Ca+HIz3S3Jyt4WQfobwoHL7hqVv9lL/UjzI7/MeHnmD2pfm
gSD0Pj+1np4fyoPSFdeiwth5BsN4kBo3/8wFCZpfDOeBniHGCyXCjwwP3tw9
2f9Sgfh9BA9GDjriPHk3O/+PB3EVubI7/YlfZXmQwfvcIsb2z8jxQH6Jpo4m
EN+O4oGE0urqxm4az2ge9LyU2ns7gdofw4OY8N9LXwPZR54H3jsPZlqF0Pxq
LA+6Wj9PO1ZF/qTAA38XPXN/f5JXkQdl6YYRjwUkjxIPlLaPaDKVZPX/eNBe
vcy7Sont/8f7RskCBVavbDwPxIwDPo5qPfLftQoPgiQ2vef70P+TCTxQHX99
tOpz0vdEfD7rj/7dyrD/rifxoCOmS671O+lXlQfws/JfzyziGzUe7BSvbC++
RvmnOup7+n35NCPy58k8sG88e+NjLuFNgwcB3b9GBcsRfqagPuQ2Hls4j/xh
Kg9avvkOc1xL/jcN3z8vOalRj/IhTR6UZLmmWbH9IdOxvd2rr01n/5e0eLAm
/I/+jjJqbwYPNhY9neaxgp7XRvldQzsm5FI+ORPxY+NQ+m4j3dfhwbUXDu4L
xFj9P9RHzaB2F/Xz/13r8SA503JLVj7d1+cB76JrucMlst8stH/KwlTlM7R+
aTYPTnvKjJJm51Ea8MDM9JOzLDuvfQ4PlN3L5c4PkP0MeVD7MeBESifx6Vy0
v2vctqGDiZ+NUD+JbQp1eeRf83gQ9t5CpnM2yT8f/SUKvq7cR/pawINj3pmn
BsvRfWMeuI+u6a3VJ35aiP5cP/nxoovs/D8eGOdO7Xdn560s4oHGn9qQKx70
PvBgGPcDt30i8fliHlgX6+5SGMv+/yPez8dXvsmk7xtLUD8vt3J2/ib5l/Jg
yASzccON2fl/6E9abru0Cln9f3x+eMS2wVUUz8154KZyvyT0APVvwQOnMOMJ
O46S/yxHe5uHK8X2s/P/kB+KRMYnNrH9/4gfCWHI8W0UP614YPNt8FEdLXb+
H+J7Sb1VegnF51Wo3zjNwto80v9qHkRkdt960UN8uwb1MelT1WJW32kt4gl4
+s8n0XzTmge9DweNWM3On1yH7TVozktspPZtkN+sD0bedWX1/5Evm41Usqpp
PmnHA5nLqU1RLpRPrefB2WhPl1Ps/7Y9D0zNPdV/tpM+N6D8Cd++7BcQP23k
gfa+UYsfsni8Cft3XCp+ndUP3Izttc09FaRL7zugfnLip/qw88Ec8b6easgF
U8L3Fh5kvck/tbWP3nfigYqV3M/KUupvK9rPPS/k8XTCrzPy5YkC/VXsvNdt
6D+7tU5uHE/rY13Q38FZufAy5ROuKO8903X32HkeboifsW4FnFD6frEd9T19
pVxKGsnrjniuvDTMwJP0swP5p8ahScaF8jsP1G/EqfzKt5RPevIgsLKyb3Mf
W/+P/V+6MOdyKOV7uxBPa/tGlp2j+OeF77vbDnWQoed388AlwTfPegdb/88D
qw9vrx36yP7/8+BA2Gmxd//Y/38e1NefXzrSnOy5F/FcPiPj6ibKD/eh/pac
To5QJ//cj3yjPbtqLatn6ot4c8wa/+s23ffjgU+Uz11dth73AF7rnhmsM4+u
D6K+tXqcpt0g+/nzYGLu5L5+tl79EMa71it/cupo/hKAeL18f16gDuVXh3lg
t2zw2J1sv2sgD45K5/KNprD6f8gn2U9nHJtCfByE9pzx9LBrAfUXjHwykLlW
tY789SgPblWmDJ73gvg3BO3rUDnrmwnh/RgP5ptMSxvJ+Og4D6oPqeZcn8LW
/2M8dpd+0udK+jjBg81GTV/3hZK/h6E+fyo+frmX/PkkD7ymDzKYOZvwEY7+
I3hiYG9C7Z/iQfPxoqqUj6z+P9rrz5ldHcWE30geaEqud0j/SPEjCu3TleVQ
tIrV/8d4Zrn/4gRPsmcMjj+g9nM8q28fy4OlydqvJkuS/U/zgGMFmyNkqb8z
iK/B0UZjo2n8cTywrPqkczGO8BWP8Xi3Spp2FsWXs9i/DYaUj8SvCRhPlu9b
F15P+k1Efy8Kzqi0oXh9DvVxM6Vr0yvKP5N4MFo/38/LivRxHu2fvmvb1kLC
azI+/2sFl9NP/HCBB9IXr0bcbiX/uciDHMWxnl/iyL4pyK+f11zseEf8lor5
wj2TYZ+m0P+mNMxfJsoU1blS/L/EA8eesKO/WTxKx3hitOtbxAEaTwbqU3rL
GJhD/8MzES9aR79GBZB+LuP9xHGJE9j5OVfQvzXmVlSYUftZyO8VvmLzh5N9
rvLAQKolevB+ev4aDyQL7hz41kL6v47tXxjvqJ7C9v/zYN+lioUTWby7wQOL
NLe8FV0kXw76r/ZUm0vphMebeF/746Lx50l/t1Ce/VnWmmtY/X+Mfwfzq2Q1
iS/zUJ/ebZEeRWSv26j/uUPDRT0kbz76k2JIT104jbcA5esaf6l0Os1nODxI
fMBvMA0jfHIxf2jRG/yKrZ/jIZ6P6ewOUmHr/zEfutZwPK2Z+EuA+aCYncHu
AtK/EOXRVdL9Y07jFyFfV821MTInPi9E/Qlyy+b5knxFaN+Suc/1XtD89A4P
RCqXl5ePof7v4nWe+Uz7f4SXYsxPZBylmz0IT/fQ/tGBiZUsX7+PfNay88/I
PsJjCfofj6Npz/zpAQ++jZFoal/F/v/z4NXHHTcy2Hm0D1Ffyxakr2L1LMow
PwILnyOuJP8jtNdz/Y9DOBQPyjEfkrfd4HGEnn+MfMP/ZjGmlfRRgfp6VlCw
1Yrs+wTjW6PsDjFtWn/6lAfhKq84U1k9uGdofws15Z5zZI9K9J8DYQfVdAgP
z9E/QlOv73em+FaF8mRO/PxmDvnjC8w33umt3q5M/VXjtXHmq+2m1P5LHsjx
549KriX7v0I+vPItiJdJz7/GeLRw5sj7swnfb9CfLhQbNZwiPn/Lg7tNo39c
iqT/pTU4/+lVqP+uS/P9dxhPl3Q9WTuZ8sVaxCt3SWQh+/78Hu2Z1liS4EH9
f0C8JPUftOCz//8YD6Y8mH70BPFdPc4vNr3NrNzGzv/D9sa8t2+eRe01Ij/G
fqw4WUP6buJB+Z1T+XlmZP9m5DupjOE389n/f8xnzqh+KTlG+d8nHE92TWV6
H82fPuPzZhF7tnyn9XQtaP/FOzo+XCG8tmI8s7Lauozt92xDPpY8MrL2IPnD
F8xnXmtvCW8if2lHvA3duG0Ui3dfeTCLX90/2Jna+4byH14rfBLI1v/j/Fas
6IrfEBpfB/LLvr8vso/R8z/QHxO6Rq5i9Tk7Uf9ZQQ83P6D13j8xPm0uMzzL
zq/rQvx0Cji32wg/vzC/aHvYrq1I7XUj/zZvXb9Smfr7jfJsDM0zVqb40oP4
Vvx4xcSM+OMP4vedy/v5y4gfe/F5h9Mpi1MJD39RP0/jdzVepO/rffj+mvT9
g7LJ//qRD8a8zNFYTPofwHj+a1HfD7a/6x8PKqaWDL3I6uGI8cGUJ3Y/bRI7
/48PFS+nNvx1J/+T4EOlkVvqmxLCxyA+fLNPelh0i+wtyQf3dbvlP1ez+n98
CCq7fqThPNU7HcIHs2dV9ypZfVspPtyNUfkTJ072ksb3l2ZOvuRB86uhfPBt
3n66Yx3ZdxgfXJYahYIE8ftwPiy1XLPl3HqKXzJ8MNqy5dmgDLLvCD6kRs0u
K/dm6//5UD8sf+vBmWz9Px/OalYGSrL64XJ8kDvTmpCsTe+P4mN+d9VpJNsv
OpoP1YUTM7rDSD9j+GBveH6o2mPK/+T54JEzOb8lj9X/48NEe6vkUA/iOwU+
FDmeC/w6i9X/44NYl7hMYgud56jEh5gkpQPnWH38cdi+nWHc1glkf2U+3Dvb
zxsUSfoez4dPs6z75FNJfhU+dA5fYrDzHav/h/rc9W5CjYC+l03E8UuuMWuT
p/x5Eo6/Lnj2iziyvyofsreWBZ8II/yp8aE3rGhvcDnZR50PmmtKvNufkv9O
RvmWryg0HMvq//NhTZfno8WXKL+dwoeRljK/r14hfU/lQ+27Gs6iySTvND5Y
Xv/35I4v3dfkQ3fpui/2fwkf0/nQvq05LmMh+bsW2kM96sP/nwc8A+W1+DC/
jZ1nqM0HvckZ7Xees/r/fNCeEW63fgPFMx3Ut/zGfzoj4/+71uVD39svSVuf
U/6pxwfRZT+hMquXq8+HZOf5UqBL789CPE2Iakn9w9b/86Ej60Zk2UiKVwZ8
6KmxGRawgfqfwwetIzm7Z/SSvQ35cOC7yXnHv+z8Pz6U7OL62+cQXxjxIdB7
2KStfIrH87C/RrlQCT/qfz7ab1TQ5LXK9P9qAfbXtz9ZP5nkNcbxz/PngALl
/wvx+W1y8hritH7NBPW1+fOdM+9I/4v4YBF38+T+YNIv8OGW2JlL39n37cWo
PyMxc8vlpG9TlHfIDK9SMZJvCR92tv2ovPqa4sdSPtiM/9frwM4XXYb6SypW
7ZcgfjPjg5NTRIlCBsUvc+QX50f5OlZ034IPKidMPLXZed/LcTzOgR5frEl/
lugfldEiBTn6P7ACn19SJlv2jfRnxQdpsFl6zpn+H61EvNnsV/NUYPN/1H+4
ZPSQXLb/H/WxZ66StzHx2xo+HDsVdaNvHMmzlg+qDvGGL3UJH9Z8COVvdK4U
kD+v44PycBk9fX/iBxvEw/ZBvUF6xAe2yEcjEqZL1VP7dnwoO1xev2AlxbP1
fGhsHF00j81n7PH+8qqtvU6Erw3In1cPtb65R/66EfEwgj8wcIbk34TyrrA8
eriE+G8z8rPHDC+VM4RHBz68ksjv/cvWyzsif4363fv0NdlzCx8i1r/OvX6D
4oMT+ttT8ZxuU5J3Kx/CdoS/LY5l//9RH08Viq2yaP63De0ZGnhfS57w54L6
ffp+rWwf9efKB508n1X1W+naDeXb9iifZ83+//Mhv+TUxE+6bP8/4s9nSJUn
+x+wA/k9atKZAPZ9yYMP1kNm/isIpPuefLgkec/JdYCudyI/OQoj3tYQ/+zi
w9GEibF7WD1BLz5stgpQualO9tzNB+/i0LDZ+vS/0psPcPx8d7Yw9r/rPXj9
PTdIxZLqefnw4SIc6tcRkL72or0u6BX03yX87eODgbxSqaUB8el+xP9E9chx
X2l8vojfa4Hh+rdJf35of17K8Emv2f9/PkhG3dn1/g/p+yAfMl6r5klEEP79
0R+OHtniMIryw0N8mH/ip8uzfhp/AI5/cU3kGVbf/zDyXbpI9Wbqif+uA/kQ
oN7lFT6V4ssR1K/HNrN6tt4tCPHWmmDnvJX4Ixj9U3FafHUs4fEo8mM3b5/i
d7J3COLbfGB7A8v/jmG8Wbxzejr7/3OcD82/esz0t9J4QvlwLa3d0GcJ2//P
BwmFyeJb1xCfhCF+qkF0UUT59Unkt+d/QNeK7BeO9iv+ZvVuJl2fQv/2GTOm
ejWNJwLx8WSGWvIraj8S48/kJuObbH9iFNrTaUXgxQjKl6PRX3fdH9Y/nPAQ
g/qNsZurPYHmr7F88Blr27CVxb/TiBf1+kJLezb/R3vq2HQ93UT5Qhy+Xzeh
2leD/Dse7WN2KGk+229zlg9Rar1dy0aw+v/IX8d7H+gtYfX/sH2fzRNuN1D8
PYf5Q3pTfZYNq/+P+tcxkNk+hPR7HvUjPe3hhm72/x/9cd+i8W8Xsv//fNg3
zCym7QLZ6yIflOQXbhwVQ3hNQXyctC+YxuYjqeiffhNH7fal73NpfIjTTvy9
6SHJdwntqXz2yEZW/zkd85nNHT8friF9Z/DhdPzh230X6PlMPmg0PIcfm+j5
y4i3JUNPfJrGzv/DfKvFd8u0W+SvWej/jcKW3Xtpvd1VjJ83TG5IjiF8XcN8
8dxiqwhPyievo31DbtZcYnyTzYdS5f3S+1l9oxt8aHlcn2jF1kPkIF8r2bs+
PELy3eSDzIIQv2vu9PwtPuTdXi1R703+m4v2VRumvmMf2SuPD106Q+7/Wkvy
38b4GRAvbtbB/v/zYeq50A1Si9j+f+S/zStTnTns/z8f3hxw+h22kfyXywev
Fp+qFcy+PD5UeeeVTxlO4+WjPqfMfrVaivQrQPx/mR76cArFJyHqI/nNj8dr
6Hu8CO0fcNZfvoDqeRQivg9FvjV8Q/5chP48dd8fRwVq/w4fnh7Nfylk5z/f
Rf4Ym7D+A6t3VcwHx6yoZX5b6f49PnAuS3Ay2P+U+5i/5VqbmJ8jfZTwwd90
bYBDKqv/j/Fj6KzvSxKI70tRnuZp9ZqfSJ6HeD/JpnvDU8qXyrD/1cW8o/vJ
Px+h/gPu+j1j6/nKUf/Se/4u6yT7PcZ8pMt+5wZWT7kC9Wt3tVxvKM0fniDe
ca7fvpTi41PUV7OxecUXyg+eIT7SDqhcTyN+qER9ON09rW/Bzv9Df5ywyKm6
j+xbxYfESQcuJLD/2S9wPvKo92bDCcJHNfLLGc7t8jrq7yWOd2nY4SljSJ5X
fJi18N4FJ/a98jUf3IoLMl4x+77BfPTUGYWPv0n/b1G+t5a9P/Lo+Ro+jJ4z
fLILq5/5DvEuprPTvYz0UYvPtxoEGfqw8/8wXq2ddm4q+z71Afl9f1LRmWw6
P7IO4/mGr3PWfKf/qfX/y99/fz8rIP5p4IN80cuBnCzSfyP6p3zGuii2/qqJ
D0MM0hpj2HrnZuQTg2U/hmjb/Xf9Ef2h2MB5C5B+P2F/U66+uRZM4/mM+UyL
1OHtZ2n+2oL6qzv/rL4t4b/r1v/xVYilWCXhvY0PWZ0v2oaIyN5fML/VF07k
KJC87Xywu+GjvyKF/O0r+pdhlHDsclb/jw+CsjCvwsek7++Yr3bFNYzZQPbq
wHxWmCD88pT48QfmRxd3hG21J/t3Ij7VxGZ0/abvfz8x/9hvbbgNqP0uxJ/E
9LrDfOKzXzieo7rSr/7Q/+FuxN/O7U7udjT/+I38E7J6s9CM/KkH51PTvhn7
rCH7/cH8VLb08hk7ar8X5XPh7LHsI3n/Iv8PvbQ0YRDhpQ/tb7p+xcV8wnc/
6rs3zls9ntY/D+D9n6p3F32j9v8hPufZedoksvX/AuAczRDbpMD+/wvgQ6tZ
5KZtbP+/APb5a/5Zto36GyQA68OxsVLsvExJAciHrzQJYfujBgugZ/aT2RGP
aPxDBKCq89F2xhniPykBSP+qHnx/N41fWgAG87e4uB1j6/8F0J76sSLnPs3v
hgkAvKamjhfS/pnhAlBS0lSM+MLO/8P23ep3jLtE+4tHCMD7+r9PUVvp/kgB
rFGSviyaTPmXrABEpfb+NncIn3ICOF3x4WyjHeF9FL7f9/nu1U5aPzYa+y8J
3X1gGM2nxgig+bH59Cz2f1xeAMdsnyw+P4LGM1YA9kWjDgqHEx4UBDBxkNlm
LXfCp6IAxFQdXvsF0/ckJQF0PE3d9mYFzR/GCeDi7BK5uMdkL2Vsf8nW7NNx
7P+/AFZVBn35MIn0ryKACgkt02UjKT+YIIC8hvZalcs0vokCmL/wml3IQbb+
H/XX9jcyM4LyLVUBKJtLDNXlUT6mJoCgxq/3x2pQfTx1ARh/iO28sp7sN1kA
t2zFsn/LET41BBD2kJdvyOYbU1DfHC/jHU5kv6kC2PlxeLF7E8kzTQCSR4uN
nruTvJoCqL/fdCXHmvbnThdA9X3vIw87SJ9aAvhUuaFi8w3SxwwBRGTfs9Bb
yM7/Q/xtSIjmzaF8aKYANHjTNydOpHxRRwDhypeLTlWQvnQFUJaxNOtsEMmn
JwB353avdrZ+WB/xPqygYoER6WsW2kv+5skXbpTfzRbA5sDiQa+A+NdAADLv
Rq4qfMDq/wlA80ZTfOZBim+GAlDIM+VHTqXxzEV7B7rul1AifjZC+837WKm3
leLnPAFYKCk9Wv6Irf8XQKfmXjjNvs8tEICKV7NvmAnhyRjxMTakI4fVp1go
AKe5HIk4aVpPbYL6NXbOvF5D8XgRPn+v8dHMOpovAsp3+t5PR3/S12LUv51E
zv/nv6bor/2iEqMnhM8laP8TNw6ssiV/X4rjuWBvJ3ef+l8mgBgx/bybHsSX
ZgJQX7HhRN1Wat9cAHornhn5L6F8zwLff1jw9+Eaen45ynfDz3asNbVnif70
9uBvfj7pYwXi08DB4cgGsqeVAHxjlXhZ1dT+SgE4d6vVXLBg5/8JwGbIU/Gk
IWTf1aiPoD1jV/4k/lsjgNFG0eVf4kn/awX/O19aI/4g8ZE12tNjzydtCfq+
uQ7H19k6ZMCXvkfYoL7zVYL2svq2tgK4+6g4b99O0q8d3j8uHtvkSfOL9QLw
avD8cLOC5LHH5/ceVu0oInxsQH3oui1yDqH1YRsFcJZbvLluONljkwBKui3c
fY3Y/38BWMVKOyWXE54d0D5f3ypW3yd8OSK/nj3ZJwql+LEF8Rxeq/W61vm/
ayfEV6paSt9okmcr8v+Zq0Fb2PlAzgI4YPmoOn4l6X8b+suRsOI7QvIHF/Qv
lS6pwia2/h/1HVX8O8ON9OeGeJo6bWy3Bvn7dgGUerzecMGY/f/H8TbPf/f2
HuWzOwTA63tQ+4+t1/AQgNHdO6UcE/r+4SmArku8hS2rKP7vFIAZ/3D5rkPE
L7sQb+sGn19bTuPxQn0o6rt265G+diNfzZ/Y9Wks4dcb++MZVD0xJjztEYDb
j3MOs53In32Qj+duDT7yivxtL/a3bWZz/Ce2/x/xNPOR5fh2kn8/2nvTky9y
7+l7nS/qwzpE7ow+6dNPAKn+afW9qTS+A2gPk4J3Tttp/dZBxEOn/tANZWR/
fwGYKn362eJB4zuE/GTplb20lPASIIDeLK2+tEMk72EB2JlF2s5l9XECkd8H
70xwn0z6OIL4PuXqNGQPxecglDc6d8femSRvMPLbr37JXLYf9ijiP9nlfr4s
yRsigCzxdBPPz9TeMQFMvTYuzH0C9X8c2zvirTO4g+3/F0CLqm30ZTtW/x/x
OGhSqDmrTxmG9jiw4pjJFLo+iXzell59jp2HFY79z7tlqJHM/v9jfP6T4WHz
ldqPQP11VOzWHDv/v+tIjG9R8ns02PlHUQIoMki/bKBG7UULQC5ozP0zmcQv
MWgPnmPR2Hoab6wAEt8VNqwbTvngabTHqhH7P1XR//EzAsixv3dz2QwabxzG
oy/rbQXs/Jh4xIsk55z7DXb+H7bPf6uyfRitr0tAfYzZFjP0JMmfiHyY6+wu
/57i1zmU31d3z0Y9ivdJAgjwXnl8bhd9nzuPeCvXaA9voXr5yQLIsJre+XsO
9X9BAG/yZy4aqU98dBH7X3lVJNdA+EwRQFKezu8pz9n8H/1vYeM1hxekjzT0
17Kq9tq3hNdLAqhcMte1n50vkI7xtSU6Kcmc8oEMtEfUlEVeOeQ/mdhf1NkL
YXYU/y5jfPwzrlpnAsl/Bd9fJausEcTm/2j/K7sEJR8oH7kqgJqPq3pOdhO+
rmH+wnHfKyNGfHEd+W/kxIsGFaSvbIznSXXH9LRY/T/MVzrn5i6PJX/JQTx1
jMj2Zecd3ET8OrUV6+yk9m/9jy87ZkvfIn7PRfmtzy0OKqP4lCeAfDfNxYPZ
fo3bmF+VmFWMKmH1/5CP0rz02uJI3wUC6Eucx5NtInk5GK86QDbkEeXjXPSP
KPUF21h9ax6O972motEhij98tLfi980KTWz9vwC6X14IeMf2BwkFECpjle64
ndoXCSAwK/m6Wj/ZpxCf37B1ceZxwnsR8ueVRxPaT5I97iD+T2k2Taqm7/F3
Ee8btyU8Hkn9F2O+Gx8Qa5hD+rqH8vr2ai5m9ezuoz8masw17aJ4U4L5tKOC
aOl94sMHGC9GOok7FxK/lOL4a5LP3x1HeH+IfLV+UFj8PRpPGeI90X33mCp2
/p8ARn6IrntgRP5YLoA42biZTdHkD4+RT8v1DFZtIfxUCMDjWbLJdWbvJzg+
92UOFpson3gqAJf3PzM0ZNj6fxxfiJ/lyWDik0rEn81HPkeZ/Oc55g/xMS8D
M9n5f4jXJPWfzjxW/x/7Wxa9ruQN+Uf1/+LNpPlWP9n+fwEMOE8uWOVD919h
/nTsUWLeHNLva5w/RXMP1rHzjN5g/rLiYrqTOvnP2//lm3N7eGcJfzWI58sS
fwbdp/j5DuUvz1499C7tz68VQKPGqE3HWf2S98gvnHGrbT0oXn7A/AlWpq4Z
S3ioQ775uHD2CS0abz3m4+2CxBGXSJ4GtNeEJ1Pdiun7dyPOrz5+3P7iLMWH
Jhzf6Hj/n1+ov2aMNxIfn0nvovF+xOenjzZ3OUrXn9D/y393i38g+T8jf3m0
+y91I3u34HXnbs2qDfQ9tRXt1Wb3Joqth2vD+Nz/3L06ivD3BeXT+u7Qyic+
bReAhPJkxZlH2P9/AbyKNZffG0H+8A3no8ELEucvY/X/BWApfaDFZSPhqQP5
7om+WDQ7f+wHyn9nu9LNk/R/oBPnMx03nCRv0nzwJ+Z/C3tXvL7Ozv/D/qIj
x724QOP9hf5fYybY+4Tw043x7oK1RjWr7/kb83e9F4HhBhRfehDfFQ9VNrDz
EP+g/8tKP9smTvzai+0ZtvRIerL9/zhfUJtvyK0hPPUh338KCkXH+u+6H/G/
J/FymR/l6wM4/1wZ++zNccLnP/S3V7f3DokmvhUTQtv2vdmLvUlf4kLo+zYg
af2e5JcQwifRSscya7LHICFcdG8amsbqqUkKwULbK6FhAn2vGSwE1RWpq6If
0f0hQggaE9grKRn137WUEGQ2TtDewb5fSAvhWEdYViz73ztUCGJt5cMM/ej5
YXjtJadWZE78PlwIt3LOjL6QTd87ZYTwKkZx+o8H1N8IIdT7ffups5W+b43E
51fO9SubRvaTFULqncOvfYypPTkhtLQ2P0mbRPn8KCFc+3p+328vtv8f27sW
uElyD/v/L4TKpsrSM2z/vDzKP1yldNplNv8XgkGdVnrbBbKnghAyVp6ZvLOV
vicpCkHiTp2U6XWSVwnb25nsY7qE7DEOn5/t39E8j/hNWQhh5n+Dna0JL+OF
wMl/stvhD8mjgvppvOyybg/1NwHt9/L+SMcSuj8R9d+iecMyj/bfTRKCivI/
2zGXyJ9UhRD1e/eySPa/T00Il6a53hnH/FddCOrnik2ktMm/JgtBo1Uh/CSb
72oIoWOH+u6xp8j+U3D8hvY20xaRPqZi/xpDuQ0bqR78NCHodecM9JvT/EtT
CHfPNAe7nqD4OF0IsMXV9etV6l9LCE+T7gUvu0/+M0MIbxqXrt4TTvyhLYSz
bYMfeMgTf80UglKKwXFFW1b/TwjWXnqCScPY/B/74x9veClJ35P0hBBo/c5f
KoDwrY94cd78fagy4WsWyqNoUjqenZ8xG/VddbCnM5b42UAIxobX/2TcpPgw
B+XdKXHcbi7b/4/XXaOGjjpFeJorBJsdx5+ZDWPzfyGUnCvddI7Vm54nBCdd
P49NsRSf5wtB85/C9BQ1imcLcPyPVl/aXEZ4MkY8S+gOWuFP+cJCISyNaZps
HUPXJugfuSEWdrtZ/X+01+aqAfUrNH8DfD9v5YHl0cRni4WwefAQ6/ZXxD+m
QtjoevDUZ232/x/xF55yYynbX7YU5eVEHVyRT/60TAg9yw46uj4ifzITAi84
75VUNuHXXAjlfolnEtn6JAvkg5+f9ZrFCU/LES+1Gx+NX0X/Yy2F4Ktg+GpZ
M+F5hRBqv5splYmz8/+E4FKhWhfdQvhfif2VRif0su8zq4RgpLZVUuou+ddq
ISTvzty44R+r/4f++1c3qbSd9LNWCNowdMSTZJLPWgjZY2/7Hf9IeF4nBLns
vLYvFtS/jRCUM+sGb+wie9oKQWeL2AVxX+JnOyHcmzw1tbiV+lsvBPv0bToD
x4n/7IWQf81l50x2ntsG9E+tefZiLN/biPZZklKca0T56SYhfDi9QEfantX/
R3+VVHkcwdbTOCD/DjU5rM++DzgKweq4VdKVANLvFsSf9e+02kRW/x/94et4
m1V8knerEMLjbf7ozGTzfxyv53bY5Er22yaEGM/zJ89zCS8uQmj0ze/49oj0
7SqE9hSf/u4Gtv4f/Smos1rnCav/L4SivpnK49uIT9zRn8zSZ2xPpf1MOxCf
Fp8SY5vJXh5CaLbV5Z1IpfzRUwiGHlbzjliQPnfi+xI9WuuX7Pnvehfqc0Gc
/7Ua4jcvxEdNydfyNLb+H/G7+JvtwX/EB95CWGN0YOls9n1kD+rj6rgrc7IJ
fz44Ho/CN6MmUnzai/e1EjJXDKX8YB/Gv5ef44VG7Pw/ISRONAlOqKH2fIXQ
zVtyIlmS7vuhP58LSmvXJfwcQHx5u7/jjyH9HBRC3oXbdZuPk/790Z63ta/X
TyH7HRLCgMykdVPk6H4Ajl8hcvSeqbT/4jD6u63rzB3jyV8ChZDzVk2Dw9Zr
HBGCY++H+iH65L9BQkiqGpsjJ072C0b9DQqTnbWe/f8Xggc/V+zjRuovRAil
BY80CtpJ/8cQT/yn74d0sP3/yL+ppe9N/YlfQoXg3zGvcWET4euEEKaKhj+R
Z/Wdw4Swyi+8R+8jq/+PfLh5+q85DWz+j/HCcPjj8Fmk71PIB7WtlosD6H4E
8mGvaFZTMMWDSMTrzV+5X9tIv1EYXwd3bgv/THwejfaRfnDioiX5T4wQIqpd
nN+z809ihVA1Lve0ZyHdP434nfvM/Oof8qczyHcP+17LDabn44TgdfpLyAgT
uo4Xwvx9zwY9YufLnUX8lX+tW1BN+E0QQnXtVnXJVlb/Xwhl2Sr5wOrln0N7
us+uL6yleJ2E/jDysPeKw+T/55GPFyhGGhiRvpKFUMGPXxfM8vkLiE/LyLN6
CrS+9iLmE+vMH5T4E9+kCEFUUN3ts5fGk4r4y9nf4M/276XheIuuRvTGsfr/
KO+4ZAPjjYSXdJTvsqfHyuJt/11n4LUlHL1sSvczUf/BORLxM8helzG/CrPZ
XfmE5p9XEC+t3ocDG+h7QBbmHzXh39cOIv67ivawcpAwu0j6uiaELJXqlHp2
Xvt1bH/rqKWnfhI/ZAvBzfNHgHIj4eGGEKSrTAfcWP2dHMTjtcfec4ez+n+I
B47ar8dvaH33LfSHiedlovdT/7mI75F3Q39eous8lP/lq3bZ2az+H/rLu3r7
kxlkv3z0l1OlkZUsXypAPn6t0Z9wmN7nIF76NeJ3RdH6Ci7a2/+8jbE3zXd4
KP/9C2uNWb18PsbfsEEmVzNpvAIhDPlkO+M9+z8jFMKBUqHYWQ02/8f46f0q
Zq8x2bcQ+WxI3/KmqxSPi4TgXDh+8bM11P4djIcN04oCFlH/dzFeHegLze8l
fihGeSO/2uuOofVn99Af3s1ZcmIqjfe+EEy0XW/aONJ1yf/yt2vaC7RofvgA
/TMkdNO7R+z8P/RPt5GC6fMIXw/RPwI/jTP3JD4ow3j9vUIx+izxzyMheMe2
/3vJ6mWXC6E3IOiZB/sf9hjbM7ps7sz2g1cI4fLv+9NbU+j5J8g3km9vaSVR
+0/RXoGtPnps/vJM+L/zzRs72yi/qsT4n2dmY+hC958LwX30o7+DDOn7YRXy
T8GxxWrLCc8v0D+Wvltra0PPV2P8s/G8/6GY9PsS8XVk9+4p+9j5f8jn9qWa
DiuJT15j/pI8fc+nT4SnN5gvqwc3T71O+nyL/N1hUGVRQdc1aK+F3A8L9Oh7
yjvMZ2eVpxdIkn5r0f/67hnWrqP88D3ym3k8Z+43Gv8HzDe+rzNt+EV4qcP5
x+5ta7olyD/qkb+unDzKj2br/zHeJnkmnGbrUxtx/lGiZ5nKvnc1IX9HvvXM
ZfZvRv9YIjG9cRPF249of6NreWE86v8T5sfvtBqrgPTzGeX16Qh8xPb7t+B9
7ys9NpLk762YPx6P7JfdRHzeJgQ7afnh1jLU/xfkh4p9KRx3er4dx/s83bZN
lp7/ingo9l5UzeLLN+QvqfD2Xel0/R3x/SF908lqtv8f882ZvfUaSnQe8Q/k
J/Uk/a9PCU+dGH9VZv70Xsz2/wtBK/nXGi22X6FLCJ1S287sE2fzf5TPYPAM
d1bPoRvjm+PimBJjtv4f9RvFDbVZR/l1D+LljjAl6inNV//geD7lOhccIn/u
Rf5qsHz0zYvs8Rfx+XDFm5ts/V0f6r8h2H0zq8/Zj/r7emTMOA/SzwDmJ7s2
nLJg+9P+IT/6yCY2zyJ8i4nAQG5ymUsPW/8vArm/pvuD2fpTCRGIvo8q67In
+w0SwSvtFWOcJ9J4JUUgNmOoYX4orW8YLAKvhUWBH9n3jiEi+KR6z9WSS/ws
JYKwebHm5WaUH0iLoNn4Q5BYK+l7qAguqW0ObxAjfxkmgjadfQc3uND94Sjf
ZcWn65+RPDIiUOrZ6LbgGt0fIQJVjU9PnM4Rv48UQWWpZfehWNKnrAgkV/pq
8r9RfiYngoDjcwdvySd/GiUCZ4lC5a4K8u/ROL5JK6ddWULz1zEi6PiyzPp2
P/GzPMq7TuLbEQfit7EiMLHUeih9g8avIIJUMfFVYf7kD4oiyNDTSOwboPeV
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
0z89VG6Wh/zOkP7HJd1YdBn+SzjAY7Nj1znQXxrpa/HIk5UOqD/h4bYjTI9G
gl/Okr37F62YWQv5EjZpPZh5fz/4PZ3qZ6Ux83FXzM8S/n4v9GrmT5R/jv5f
brIrwx78T7h98WrDEfz66fMUr1b6jx0Rh/kHwpGjbl2r4O/Pu0D8bNIsqcZ4
PEfYJzMyqTkH+UEG5Qfasq9TapE/ER47v2OLbh7s6yLJc0Jfm9c4/4EjnLr/
0acm/jytTCpf+8irQSvgv4SzvKzP6E6D/12SsM7j/Y78jOXn/0n+no1KCldw
nkQWfb/12KnAuXhO+GXXWVYHh4G/LlP8GzO4ySwI+iEcZJJbqyiP/Dv7X35/
/LnrT/g/YddnercyvNC+K6Sf0B1Bonl4TljZ4/uK+/3x/Cr5f4lt3JpZ0N/V
f/pY/b6eP7/mmoTV6c21uHkQ8iXsllZ3b2sk9JND+pW/m7C6L74nPNDn/Y3c
Bxh/zKV8a4iHuskgyIewmVf3r5oq8K88iochQVv2roJ9Eo4aaTeDDUX/+DrF
09J775X59QOE9Vzb/RavAD/eoPi6zmRrdjvyH8It8k1fZ7lCfzepPC2OC90N
fiL8PVxF0W04xg/ySV8Tut5txHnHHGFxTJXz6D/Qj4Daf3PCmYiRsB/CBm3z
jxvz+/mFxEcbfC9b1CO/JbxAw7u1C3//nkjCjDyyF/7YhfFHwt4NU2J38utv
xGRfPV/PeZuB/hHhkiq3G82BeC4he1+i8X7hGsRvwrY+0d2uKcG/Cqj/rcWW
6FZj/QphjbS0/tHy+P8tCXNsMlsR7AL+Iew919elWyX0e5va+9Y+9kEI4hdh
GbkjZdHmnPT5HbKn662xEweh/0SYG13U4D8zUPr8LslfYV97t67ILwm7VKz9
L6oe/dd7FI/XNYUZH0D+RTisv4xT9DzweyHZy962R8GB0vUIHOG3O/qtDZ+G
+t3/l88pXHIsRfwjzKkPeb5mD+r3gL6X6Jw+f42f/yc+rZHXtp0B/nooYecd
N5y8hPObOcJmCUvjlPj5+SKKF/1cnh57CX4nbJaqbX1eFf73iOQf86a8Ogb5
H2F9l8/Xwz1h/8USJld6+MCQw8gvCKdlbt3Sk9/v+Zj6n5P9vqqXg98IdzcV
KLxRgf5KJKznjthTSwaj/oSfTVI7PSgK/P+E8jXzVsvXV+F/hLOUh2uOXYPv
SymePru4ZAfuK+EIu6ooeD3j79d6Su37VWwkdxP8QjhL8M7nnAryt2fUH1R+
V/gK+4s5wh9q0n72XI/vn1N+5nJYncuH/RIWZxcODe2G+b0XZC8j5mxtmXVA
+pzw3i1jor/z9xuV0fP7tSv1zaTnHXOEOxy8rH99h3++JHncbIh3f8HP/5N+
udLo0YexP/sVyS8vetrrFfg/4bxPlr+OHAV/lEvYVZMEE79BkD9hs/X3HFyf
Y37iNfF1l/FVnYXwf8KulQnD/rsE+VUQP3ndGPTLCPkJ4fgXhifcSzD/Vylh
HnOrrY4V4HvCcz+9D8g+xZ/vTvxk/9epZBHiP+EILa/wDBnYbzW1/+yW3YJd
0vtJuOp/fN5+8cIorL+pofiVnXMyiV//QLi0c+yegRjPl6ml/OeLwd+PhRh/
JpyXprN+YCPGN+tIH/nddIwvo39A2FNbu54L5s+Ll7D+DV8MKk7B/wknW/05
2vc05tfqJay5TTN/nTv8k7Bf+ps5Macx/tpA8dL2xaKfcrBPwuIPE7QL3XG+
5lvCEe3mDn3A34S19v/2fyKL8t9JmJpu4i+jIvyfcPw3ZbUff1D/RgnrapJp
tAzxniMsVlqv/7AE8zfvyb91Z/uqlCO/Idx6pfuK+jb43wfST6Pwu0Yt7Jdw
aelN+5lHod+PxJdjG5c93or+O+HiU5fra01h358kzH2PTcLJGrSP8K58uWSV
4+CPJtLfvdrUH/Phf4THbZpW+Q7rgWSaqf/dRaN4sADtIxyW83ppySn+vjvC
S4YuuBMI+yUcGV+edInv/7RIWIqe8SB3fn01YTllrYSkWOQXX8hfzf39VwwD
fxAu7//7sP1L+NdXsucu99/HX0J+RFi2qPMFF4Tyv0nYvneLZnf9AH4nzC1U
Uf9wEevXvlP9k7v+HTcR9kc4uXtkredR5Lc/JOxutKGt/B3EP8I1Gz73W2mM
/m8rxa8cle1DhmB+iPCn2XuerZyD/m0b5W/hMz1P5IKfCCsumvSx2RL23U7/
c5z45K6XdL6GI+y/PqmjG3/e9E/S96xiB1N56JewywP5fN+eeP6L+LIxXL8l
APk/YU9J09GCaMjvN+UD5sM9nfIhH8LJw40e7R+F/KKD4m2P4M0XD2J9JOHk
1sfdUxnWF/wh/Sz+UTFkI+RDuHBjYcSoEbDfTgkrGjg3IAz+xhG2FZfIX9vD
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
iA==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10000.}, {0, 0.9999730976849255}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8149708485047483`*^9, 3.8149708541348963`*^9}, 
   3.814970950710475*^9, {3.814971000970364*^9, 3.814971035362989*^9}, 
   3.814982317391768*^9, 3.8149824361157713`*^9, 3.814986508319764*^9, 
   3.814986649993702*^9, 3.814988035749159*^9, 3.815045483188826*^9, 
   3.815048177866976*^9, 3.815049099478403*^9, 3.8150535933102207`*^9, 
   3.815056187553481*^9, 3.815134399653783*^9, 3.815135159488179*^9, {
   3.815135384218389*^9, 3.8151353899865427`*^9}, 3.815135502163265*^9, 
   3.815136330389792*^9, 3.8151366467974653`*^9, 3.81513669806966*^9, 
   3.81513681420352*^9, 3.81513717195315*^9, 3.81513737561275*^9, 
   3.8151375230312843`*^9, 3.8151375994155073`*^9, 
   3.8151386966178923`*^9},ExpressionUUID->"f282153e-527f-4ac6-ba98-\
15a119cd7fde"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "works", " ", "if", " ", "github", " ", "directory", " ", 
     "structure", " ", "is", " ", "the", " ", "same", " ", "as", " ", "the", 
     " ", "local", " ", "one"}], ",", " ", 
    RowBox[{"if", " ", "not", " ", "adjust", " ", "accordling"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookEvaluate", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Samplers\>\"", 
         ",", "\"\<Halton.nb\>\""}], "}"}], "]"}], "]"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"LDSHsampler", "[", "w_", "]"}], ":=", 
      RowBox[{"haltonSampler1D", "[", "w", "]"}]}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"NotebookEvaluate", "[", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Samplers\>\"", 
          ",", "\"\<R2Jittered.nb\>\""}], "}"}], "]"}], "]"}], 
      "\[IndentingNewLine]", 
      RowBox[{"LDSHsampler", "[", "w_", "]"}]}], ":=", 
     RowBox[{"r2Sample1D", "[", "w", "]"}]}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"NotebookEvaluate", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Samplers\>\"", ",", 
       "\"\<OwenScrambledSobol.nb\>\""}], "}"}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"LDSHsampler", "[", "w_", "]"}], ":=", 
     RowBox[{"owenScrambledSobol1DH", "[", "w", "]"}]}], ";"}], 
   " "}]}]], "Input",
 CellChangeTimes->{{3.814970899431088*^9, 3.814970925258792*^9}, {
   3.8149725638227863`*^9, 3.814972615731189*^9}, {3.814974171675775*^9, 
   3.8149741720335617`*^9}, {3.815136074416609*^9, 3.81513607726451*^9}, {
   3.815136571814538*^9, 3.815136616229808*^9}, 3.8151373397491283`*^9, {
   3.815137460428465*^9, 3.8151375042807417`*^9}, {3.815137569912236*^9, 
   3.815137579160625*^9}, {3.815137829248358*^9, 3.81513784373663*^9}, {
   3.815138269797422*^9, 3.8151382786611443`*^9}, {3.815138345735444*^9, 
   3.815138403311418*^9}},ExpressionUUID->"eedbf07e-2904-48df-8e14-\
5db988b08972"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"AbsoluteTiming", "[", 
  RowBox[{
   RowBox[{"dos", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"LDSHsampler", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "10000"}], "}"}]}], "]"}]}], ";"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "dos", "]"}]}], "Input",
 CellChangeTimes->{{3.8149709419992*^9, 3.814970971855275*^9}, {
   3.814971049306546*^9, 3.814971062484337*^9}, 3.815134581531145*^9, 
   3.815134697450588*^9, {3.8151347310361423`*^9, 3.815134739833632*^9}, 
   3.815134916599595*^9, {3.815136498035861*^9, 3.815136569316805*^9}, 
   3.81513662129496*^9, {3.815143133691379*^9, 3.8151431731849527`*^9}, {
   3.8151432212637033`*^9, 
   3.8151433018351517`*^9}},ExpressionUUID->"6f256afd-c58e-49a1-966e-\
3ef74b678ac8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.493157`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{{3.814970933396647*^9, 3.8149709759995832`*^9}, 
   3.814971065263547*^9, 3.8149713029609823`*^9, 3.814982319816114*^9, 
   3.8149824386401167`*^9, 3.8149865106917143`*^9, 3.8149866524299107`*^9, 
   3.814988038064642*^9, 3.815045485615876*^9, 3.8150481802305098`*^9, 
   3.815049101970598*^9, 3.8150535955897818`*^9, 3.815056189860628*^9, 
   3.815066934354203*^9, 3.815134402078969*^9, 3.815134583985549*^9, 
   3.815134701157825*^9, {3.815134732486959*^9, 3.81513475618237*^9}, 
   3.815134923130863*^9, 3.815135163978767*^9, {3.8151354028781977`*^9, 
   3.815135431913085*^9}, 3.815135504922513*^9, 3.8151363350445023`*^9, 
   3.815136561941609*^9, 3.8151366494852333`*^9, 3.815136700916353*^9, 
   3.8151368169200153`*^9, 3.815137035421668*^9, 3.815137175640143*^9, {
   3.815137359010659*^9, 3.8151373805792294`*^9}, {3.815137512207781*^9, 
   3.815137525683914*^9}, {3.815137591979547*^9, 3.815137604752667*^9}, 
   3.815137850585227*^9, 3.815137972419981*^9, 3.815138045647182*^9, 
   3.815138087066794*^9, 3.815138117129575*^9, 3.815138184528182*^9, {
   3.815138286588311*^9, 3.815138330724457*^9}, 3.815138411989622*^9, 
   3.815138702493849*^9, 3.815143137100668*^9, 3.8151431749111767`*^9, {
   3.81514322339324*^9, 
   3.815143307571559*^9}},ExpressionUUID->"79abdd8b-e59b-432c-8b75-\
775b1c3e183b"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
+gej+phR85ljxC/qwWgbXlbVOpzk3zQYF9Vsj11Qo/ktg3H4st2Ww5eZvxSM
PUXrGkuKaD2HYJR32vYe76Tf+wRjSriR85RwsrfBwbhds/ZdSw3Byw3Gbyrr
bX5TIf7jBaNxza8LN9YQ/kqC8XeyHu9oMsl3WTBSZwrMUmeeI/iCceWxtf+V
xwRfYzDEjpX/ihyZvg1Ga7lOxp3y/f/rdwVj+kHjjGkH2fk7BCu1Wu6u0Goh
+EPwUeAZ+VFA+zUNQduYz9ZtY2g+yxA0+RvEN/mTP4EQ1C6fuq12OcmHQwjG
L7S9P24hgz8EQUFaqTuYfxocghHjZvqNGEf8wA1BdN+Kw1F9aTwvBM77ReHO
++n8V6Lsj0845DSe6FMWgqh3IWpR75h9C8H0LQ5Xpm0heWgMAb8wZiC/kPFb
CM5Lb2f8KyV6d4WgNf7elzvxLJ4Qim+dJlndnbUEfyj85ycWbJlP/otpKF6/
M3J9/Y7O75ahaDp28+CtY0w/hOKfbTeXKRvBH4oWvdtbWvRoPZ9QcHJlv3Rz
yf8JDsXcAWvD5g5g/mMoTo3wOl41gtbjheLrOdm+L+eYPQ1F9WEXo+rDNF9Z
KD77xb35xOIhdaGYpX1rt6022ZfGUFRYcO6VW9D4jlA8ahEPetRC9OsKRW7q
fd/cVHZ+CMN3M43+380In+phkLdV/pS10e9Nw/Bke5OtshH8YQg8amQdeJTZ
5zBcNzQZc92Q9IlDGLhPRtpxnzB9FYbN3houm71p/uAwJGV9/ZCYxeIFYdgt
lol2iQk/vDAcPueQfegc0bMkDImbNJYkbiL8loXht5DmMGUj+MPw/Ktm87Ov
ewn+MCgatA/LG5i9D8NKV9eTK1wJH11h8IisXOERyfRPOKYmRC+dmkDf1cOx
8SinZMNR2o9pOL682un75RXBaxmO8eN7zo4bT/hHOA72aeuvbAR/OFxu7nri
fJPpy3BsDm5evjmY+Ds4HJ/3qAs/7WHno3BYjXiorWwEfzjmj24/M2802duS
cFSM5U+vGEv4KwvHhSMi0wtHmH8Zjnf9nGPe9SP5bQxHxP5TB8P3M/4PxxZ3
jsYWd4KnKxyta3XXtK5l8akIKI79uiY/RvpGPQLPd69/8mw3wWcagQH3BdYD
7pO9slT2mx6oDWhi54MIqIglZb9ExJ8OEajXFjRf06bf+0Qg5J3ty+B3pA+C
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
UzbiLx626MVVbdaj+afysKn818ZN5cSfNjyYh975Op7Vl9gpfx/vfmwzy0eA
h0kfj/Wd9JHovZCHH8s1D/QuZ/lIHp4E8H78F0D6bwUPX4+LT3w5zuJTPNy3
MMhttyD4nXgYZ627apz1QeJXHiwHuS2yHET868HDAb6G6gE+u8/Iw6wvvVGz
vhB/+PEQ+tyzM+Q54cefh7Ux91evjaHzWCAPyT0hFsk9zL7xoLLgq4sKy4+G
8/BXmrHpX2kkD9E8LJgsUVswmfghnodK3voplTzm//IwoWnthAlNRN80HjYM
2l3vM4jlw3lQK6mcqlZC8Obx4Br3/vW6OCYfPOgVCr31ConeIh7WzS3/6TKX
5pPxoDnO6ZXGONKnxTzUVE4JqGH3q0p4mJcjrUEOxQP2KekTcMJ/SwDtt5SH
2Yf0JXaHSD6P8OB+PHa2+3EmX0p+GKPHzRiz9H/9Ch76Obha93MgfVTFQ9Ev
UUTRL4onVPMQNdZAFDmW6FXHw639nMG39tP56zwP4Y1xJ8PYefQyD84Bn545
BdD+63nYs0abs2cN5TMalfxh3Fj3nzHxbzMP5Rzx++Mckt9WHn6ds239eY72
285DxihJfMYoVp/DQ6CjTlIgu6/yhIcIE/WscBOa7wUPb67dvNB5jfznTh4O
F+t4Hi4m/u/iIdvlw6BsVo/1iQfjkVPnG4+k/XbzsGpR1eWVi0h/9yrlaUtE
wN4tzP/jw3bit1szJzL556Nvk975Pk0sHsiHzE9WKvUj/TaUj7TXBglpr1m9
JB+3++g73e5D9NFWjjc2qetjTPzD4WN0sr7R6GT6bsjH1fSdCVdZfNOUj89q
D1o+qZG9M+NjXF/DG2P7kn0258N125rJrux+iQUf+43OzNtvxOqLlPMfUleM
OlRC8s/H1Atr/7a+wOwNHyUJcrOSBJI/Oz6qyxW/zpSTvgUf7+p0D72to/PB
Qj5O1H+ZdqKexaP4KHLlpyjYfb4VfLy5rf6j8zbpAwc+jKbefWk4lejrpFw/
9dP6qamsXoUPl09WfV0+kbx48OFemlDrVkry7MOHsS7nqpEu0cePj7Xnm187
nmf5TD6eBRuZPwum+oNAPuyH3hqlbCT/fOTOih+Ty+KP4XzsbJJv29nE8t18
lIa6LioNJXmI52Neeus5pLP6Qz4CnHY/3upE+jKNj/hOdbv4TjpvZ/FxMKko
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
h/vUhZXsvexeCUz/lfxr8i97v1aKXxFr6n6yeGh/Ka5fE5lfv8bqwaXoU1ms
UKkkfTFUitENmuWj2H0DdSmK3KfmK9j82lJEneKciDxF/h5Hit+91l+Y7EX+
mKEUI8L1eoaHs/pRKQ5aagkOWJK+NJNiW82MOwE1LP8nxfB4ryvD4sn+WEgx
o1Z4cXote49JisJjrf8WHCN+nipFwrE2X2Uj+ZciR2xSkS0mfW4nhdpNr2Vq
7H0iSHFNq2XdNS3in4VSbNAVJWzQJX1lL4XvdPm9jdNpvyuk8HMvmujH7KOD
FML5zd2C+SS/Tsr5h97fPXgo2QdXKQR71C0E7L0jDyk6fheodfzO7i9J8V26
a+13KcHnJ0WFjsfoCh2yj/5SzBXVhswVET8GSrHQMHTxQkMaHywFb9PuKN4m
qr8Il2LRao2YRew9kGgp3l2ynfDuEvP/lfj5QxCX8Aerf5VCPfpUsHo0k38p
7p9/2NZ+ntbLkuJZn9DRz/rQenlSjHmo4zXmIeGLJ8X65HLP9clM/qXIWHX/
Z/oqFv+T4nh6T/exdMJXsRQ7LWY3FVvQ9xIpPrgZGn5wI3j3SZE0RRaZNIXk
t1RJD31hrQ97z++IFE/1mrWUjeRfCe/juBcLH9P8FVK8P6HZ5/0J2m+VFMFx
zWuUjeRfimGqumVDVckfqpOi7Y/7Y9r+YPE/KSL3j/SO3E/25LIUZRZtdspG
8i/FYvlu88VywnejFANPPjg64CTRr1mKQA6vbyCH9EmrFP1iHQ37xdJ+2qXY
1F/+2K8/ew9XCruPUgu7j7SfJ1J81DWJ+qjL6vmkGHfitpaykfxLEWKirhJi
EkzyL0WA1YfxAax+45MUeQ16m/IaaP5uKSqbm3yUjeRfiY+Q2EdBzP9WkUE7
JNRMm93/7i9DwavKXfmvWPxPBuPKdrFRJdFnqAzfhLpvuoUs/idDQM20l1tr
6PfaMpjrOy8z1yd7y5Hh4qnZzy6cIvwayjBzcqXMhr03birDvd93md1j772Y
yTB6+r3yUdNJX5jLcLZS+7/qSqKfhQz9ntzs6fuE9JWlDDW/uZ07y+57TpUh
Kjn+RWQy6VcbGcq+rUn/+xv93k6GAc5S8wHO7H1NGUYsHflt+FLyPxbK8ILv
ovmCz/J/MizwliYs8Kbfr5BhcMnIRlV2n9pBhi51gW6XOvlXTjLUf+SUXPtI
+s9VBo0hNY/VhxB8Hkp8jt450Xg05T99ZJjqP6PZ2p/w6SeD3xRehu8U0hf+
MmSIH+goG8m/DBVjHr4vH0P6LFgGvafiMXrsfY1wGS6NFzZeHE/yGC2DxUvR
0YkvST/Hy7Cjtq1gey27/yiDzrxeVZ15hK80GbYcWqfYfIjVQ8nwbLVY/9lq
8o/zZOg/Q+NlvxlkP3ky5PylvzLnL5b/k8HZSL7A2YjVy8rQeUsxqPMWnceK
ZfjTXZPzpzvZxxKZ8ryrOWlYDvX3ySD92nJR8pX4p1SG0/XF5qfryf4ckaE5
VVO9OZX4tUyGjU+EVzY8If6ukCFkovHp4Il0/qqSoXJ8s2nleIK/WoZtW9qD
tm0heOtk+Kd65MJ/qskenpchs7I5KZPx22UZzmyKqz+9ifRLvQy/luv1/bWc
5KtRBrXKb9zBlcz/V+Lzk+te7U9kj1plSPf8GZXO3g9rV8rDEa2FF4/Q/bEO
GVarOO5cpULwPJGh9xlH2bJI/mU45uf1pMyP6N8pQ7lhe8NxQ5LHLhmSJrrz
EicS/j/JMM1x3bJpjkS/bhnGf11zbdxX8qd6ZXiepih9lsbkXw7V/joqqv2d
Sf7l0I2S+OhGEf+ryvHf2/vVj9+S/A6VI/yVaGM4qwdXl2McTzd7LI/y59py
fDynO/DjOXZfWI4XGxNdX7D7/oZyfK8QXP5WQfbHVA6rJo6fVRPVf5rJUS8f
efmanPIp5nLl+ainb+0edv6X4+6gXv27g9j9cjmGeN6/ruZJ9naqHKMm6PWa
TqD7WTZyCHKKtQQ5xD92cvQTOBb3FdD6kEPFQN9HxYDF/+WoPqm4deYk8au9
HH9b6h08akn0XiGHe+mp926l7L0nOW6/Mznd8o7qIZ3keBYx7fVT9l6Wqxx7
zniP3nOG5NVDDusVvQ7W7L0FHzncBnHaXQeRf+gnR9t6jnbbeur7y5F4bte1
hHNM/uXIM6j1zzNg76nJsXqIhmLVEMqPh8tx8lzTxRMsnxIth5l0/Y0xUtKn
8XK0rD+tbKz+TQ7787sKl5xn8T85Orc7Xnm9nfgxSw6dzdJq7c2kn/LkWLRf
o3Lhflb/I8fNg6K2xoMkXyI5XnW2PH7ZSfIrU+K7dVph31bCR7Ec666X97pc
p/2VyDHX4ab1XAeab59yfH+O66v+xP+lcnSdMex6d4byDUfk2HBXPnMDuz9S
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
z2TWZbQeshSGf2xKHvYRx7dICjefVTv97/i/cxcp/HX63TdA+b1UCqc1Gyaf
1qT9UqVw9zZn593bOD43KbRv17/ycjvqd3cpeF+xtfe+gvTwlILgpM9J/knU
t15S6D2q2t1zFPHqI4VsVS33bFUcn68Ugq9ljA2m9f38pGDlojHHygXlP0AK
v99oPe57g/wJkoL7JtbAik00/08KtkqhCTZKiI91Uuj6cH591wf0tzZIIbI6
aXAk5XeIFFaYG/a5mdP6TFJofG2o1Pga/a+tUnh+uaGg8TLOf7sUdPMTTXXz
qf2XAqPb+khmN/InVAqnRqe7nRqN9iaM4KtUtUJUSu2/FJZs6sty2YT4iyDz
3187NXs/re8uBTtF/SA7RczfOUDwE3O+Ky+Gxv9LwW2d/hq3dWhvD5H3ByS+
EwWgPB4h8qik9SJXCelzTAqb79QM2XyHxv9JwfGOV7PDHdQ/sVLY5OuZG+JL
68NLIXauRkDsXPwffFoKh8caTTk8FvEULwUzgaa9mQD16zmCn2Cj/tJglK9E
KYS4pgSFuKK8JklB8slwnOQTrj+SpfDWx6jijQ++L1UKlQPa558MID7SiT4y
Os9QM0J+ZUrB2tjP19oY8cok79+tPihkN8ansqVwi61rc4uN9ocrhSGO9nUK
jkhfvhQux2WK8uOQXkIibzNePG6fgfuHYimENq62D21EvEkJvT475Wz6jPZB
TvibrqPASEf7mS0Fo/smSka0vkQOmU+TtsnbJpTnXCl84ZXofaH9oPKlsPZE
XmvwCeRfgRQmqJSYTVDB64VSCHfTiwx3w/2MIiK/6o0Xj6mj/Fwn88s79OZm
Hsp3iRR85g04+czD81IpBG7RNAncQutfEf3uy66Y4ov6tozIW3vTuN52pMdd
Mn7jqyOMjBHP96XQEDtTqSEWx1dO5GepToPNUvRHK6SQ0KXuk9CF+HgshaiR
6tyDI9G+VUrhpIHerVgD/J9dJYVppdptU0uxPmiNFBbXJ5supvauTgpb8n4t
30L3N+ul8Ej3r+sjXaR3oxQ+ph968oH2n2ySgu+UADtfGt/XIoWwX3pjwn7h
821SqPp+pf/pd1p/Xwq/yvV3/ipHffSKyBv3wg8XLuL5jRS0JzW2a01C+r4j
8j886YnbcNQHH6RQ8mZldzHtP/JJCuwZkbbsGfi9z1JoiTWWNcfi+u4rwX/C
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
DZ8/T+bA61Dif56HUL4pHMzSUWFn6qC/TiX6Wp40u2I56m8aB0HJCopByWjP
6US/svb3HskiX5hwZP0d5T+2A/FgysG9C+E5d+n63YwDz4sJGzwvov3MCX6b
NK8OaMLnuRbE3tHbHeuiEd8zOPi+QuvsN5p/AQeCu4eL4I58MZMDpXotM6V6
3O8xi/vf+bOBUgDG39kcPG2NPf2kldb/4+C+csrA+/S8t7kcOJ8uWUFaV38e
0Y+S9kgfJdSnJQcJntr58Z7uXf35hB882g7v8cB8fQHxBwVFwyoF3E+/kIMh
/bdH6PZH+a2Iviq87wRWIL8s4kA7RlVOOwbj22Jy/3XFo0jr6i/hYEOm/P31
mfT8PzK/doWziu1oL2sOTtUkTThVg/pYxsFJuYRFJ+Uwf7ch/p5cWXonGfFt
y0HvW8X+pHX17Qj/+JePJK2rb8/BzHa1VmjHfNyB8EGiEDOQ7t905KDtrHZ0
61n8XsqJ8FUAayofgPN35iD6au3LqKvIZy4cGG+vvW60HfuuZL464iZtHeRD
N+IPegZ3+tD3Be5EvvEqV3uNx/fNyzlIXKqmlbgU5fHgIMIqbmgEfV+3goMr
acphl9Pwe92VHHy4pTjuwy30n1WEb+3jNM/Zoz+v5iCj2dYyoxnj1xoOXj6Z
9KLuCfLhWsJPrGu8Nov+u47Y/8nyNO8nGH/Wc/DHR17mjw++P9hA5B1entlr
OPrnRjL/rXIro7fieJs4mNjmUTihDfG5mYMzqXnNaanIJ1s4KM2O8CrNxvXH
Vg4K3V0q/6PnR2zjwNfK/5aPFerXk4MBX2trZL+iPr04mGubMGGuLdrbmwP/
LerT/el5PD4Ej99TMyu/4/18OXCKdLJzikT9bedgZLDc5xHBmI/6cRC6Km5x
6Cr83Z+Dbs3t3zubkD92kPgzftn4Z+MRPwEcjJi9S28E3f8QyEFapYZZWiXK
H8RBh5mLYQf9fiOYg0c+yxoe+tD1PwdTalWdptTS8/84KHgfduH2e3yfu4uD
lerFvVeq0/U/B7einC7nRtH1Pwcl9tFGJfa4XtjDAasuhbLqdP8/mZ9S2VLS
uvr7OJj2Ncdk2lf0l/0cHF2nYX50HT7/O0Dsk/18/Rlqj4Mk/lxM9Ky5iPHp
EOHPAAXnmwHof4c52Nk903lnd7r+J/5Tm3wSaP3JoxzE1kbeialFvB3jQPO8
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
cdT/Bnz+3eAJF++S/D4UATvH913RHPr9R7TfO+0H3MTx1U/oP2lJGwalkX9/
xvdnayX3z6b1zF8wn5+vad8wP1GOv2L/pNp/3kqpP9+KYPpfNn+a+P34O9ZD
G6ONwjcS/zWivk+r/zxymvKhJuTrcLWSC+Ekv+YiGLxK4jB4Fcm3Bfl7oP6K
nwMpP/iBfKe99ZWNNvnHT6x/Rl55sU1cr/ML41Pg/K86geQfraiv09EVEadJ
nr8xf2cirg1jqH1/UP8nzZ5dPkn21Ib+nhxsbppM8mrH+ihc487rcJrf9Rf9
tUNLNbOD5hN2oH9H1wfgJcf/isCm3PD3pHKyRwUWDlYrRx2oJvvqxIL7lLLn
blOov51Z4GOTr3Ox1P4uLPg4pvr4OFJ86spC5to0zcy1FJ+6sXAuTSPhbBrx
VXcWpj5PezlFXP+ryIKRduliI/H8gx4sHNDUuBWlSeMlPVmo2F3buWI3yacX
C7opSbd1UkjfvVm4lKze/1IyzV9XYsG+VYexa90nx31Y+LMgetyfBSTPviy0
5vru/JVL9tSPBaVGzRFKjWT/yiyoTfbTUZtM+lJhIWyFnmfYClovpsrClKN6
a6ccpfmLaizUXN22uOYqyU+dhRtBbRo3gqi9GizI+nNp0v70Pk0Wpq01YKau
pfFPLRZU3Qw/qrjRfjHaLDRrqY5qFs8v0WFhnHJ0ylhxv1JdFhymzPdwEOdH
67Hw6pDmglfiedX6LERdUPaOukC/l7DwYrp6Wv10qtcMWNCJNLiuHUl8YcjC
mhcqRatfUD7YnwVfrfh9PlrEtwOwP8kbe91IJv0PZMGzQtnHU1z/PYgFK8uQ
Q5aW9P7BLMQ1BT2NbSJ+GMJCe6ThxzaxnhqK/3+pauD5kvh1GAvKq3TK+60i
fh3OwuQHFisnPxC//7PgBioabkDtG8FC7o+0wNwfVA8ZY/v1NV6v1if7Gon2
Mz6uKmo8tXcUCxcnahTkTqR8ejQLb27V4CV+/8ff54Q+j8oRv/+z8PtCuMXv
C8RHpiwo/E0bpPCX7NWMha7lWSFdyynfHMtCy+BgSctg8r9xLMyYn75oxnwa
LzVnofyEzqDyE/S88SwwM1QPbJtB9bQFC1V/tqVX/iH7mcBCRKzfs82xxN+W
aJ9bs7YqifvFWrGQ4dt0KN1XrP9Z+KRqcOKjqlj/s5BT7aeRU03/n8TCpuPP
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
a9N4KNursbxsL32vn85DsLnT8SBzas8MHpYdjDdfdpDyUzseKtTKw/CSY3v0
750aBmY76fvTTB6STxn0Sj5F82Vn8TB6mP7FUcPI/mejfV3dmrvxKtnXHB5K
bbS4EnE834GH+Z4brOZ7ivP/eRB6qiwXehJ/zEX7X+n+yHwlxTsnHta4uvmt
cSX5OPNwalxd/slxYv3PQ0Ot5qH3tWL9z8PhNP1Th9Lo+48rD+/+Ewa9+4/k
48bDm99ad17/Jj5w5+GLrjVeYv3Pw8ipXueNp5J9efKw1Mt5yFIvsf7noeZM
1bSaM2L9z8ODDyHn73+g989H+bjGf0tyFb//88CZbtnNmlJ7fXk4cNSqLeoo
2ZcfDxJdXUFfXE/jz8Nsm3kms23IvhbwYMdHl83gyR8Xor73xyXq7Kd4sIiH
aw+fNF99SPpcjPbzWU/TVFw/EMBDcZX+xxtV1L8lqK+HqvNHP6T8dykP+vur
Juvvp/4s42Hci/ZvY1/Q75dj/7V/vF+iTfa8godXtnk7XtqS/lby0GdBSVe8
5HgVD0naab2TtIkfVvPQf2nFarzkeA0PEbP0D2+eJc7/58H5k5Wx8yfq/zq0
j4TURu8Eyh8CeXC/rLHd7TKN963noeWXXteWX/Q9fwPK55yTnd05is8beQgt
zsgPKSZ/DuLB/onWHbsnFA+Ckb+/qq98/VX8/o/61NdMq9YnPgrlwfxjwjrz
j+L3fx587khk8+9QPRvOw95riUf3iPNJNvEwdJnnuqHLSH6b8f81ZSrmNaS/
CB5apW2urVKSxxZ8vyz65SuZuP6fB98/qlt9/xB/b+NBY3H6II3FlM8zaN8W
6s4NFtTe7Tx0K/ad1E0873oHDyfrtZecrKf37+Sh501rpsdN8fw/tLfh5ssO
DCf97cb4ty4/ZO064o89PDgZRDTONaDf7+Xh0hivB3ljyP4jefAo9drmUUr5
2D4eJj/3dJ38nOqZ/TxEb5kUEb1F3P8P++v9+/ovb/H8Px7Kj8ZuKT9K/TuI
8TCupLp7HPnTIR48XQo3eLoQPxzmYeWnvF4rP4nn//Fg8uhfiMkj8t8YbM9H
NS+Pj5SPxPIwPC/29LA8+n0cD8qCvomyQPKLR/s/qTy6+CTVHwk8KFUl6CpV
kX4TedhyI6kh4gbxQRIP2sYl77WMyZ6Tebh7SbvsziWx/kd7/2eepySOn6Xy
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
C6n9LRjvB34fmDiQ+vcD46tTfC/GieqRn5hfqhfu2C6e//EL7d20MmGfKdlf
K/LxsyIDlWfU3t+YPzkGGnk50vP+CPA5NL7ok3heYRu2Z3Da2KrB9Pt2AY71
MnyV3Yva+xf5PtX3a2wq8UsH5nM7VabM3UnzP/79r95rTra/KX7/l8KMgckr
Z9B+cQziW+Zaj2+a0/huJymobYs7rrpNHp8YxJV7rLiKPSSvzlLwu9N40veO
vH5gEC9ZlrFxyTJ6fxcpDJ/wJ3bYBPnvGcS6N/MW694Uxw+kMGuOe+nMOXL9
MYhv10XX36qj/neTwqRDyfqTDsnjGYP4y3QdvS/Tyf66S2Gqn3fgVDr/gEG8
c4Dk1Y4BtF+WohT6ViRO7lsh//7CIP4+RLvs2xDi+x5SONIrLSurlzx/YhBL
zkd7Ss6L6xGk8FR/S5en+nJ/YxArFo1L6i6e79AL/19scCGrWF6fMoi3d856
xnSmeNdbCnX1eoF19XJ+YBBvbNGbvrGF6lclKWwIsLqxPoDkg3jo+Q7pkPPE
F32wv6YaVz+bysfXGMQTwuItJoTR+/tKQdMiuVzDguSD+G2anudbcX/bfqgv
I90FlUb75fcRpz1WvZL6mPxfWQoZHzDf+yCXJ4P4RLVKZk418aeKFJ4olWc8
VpK/j0F8kddNz+WJ71Wl8NPUIOynqXw8g0HsZ6y7zM+YxkPVpHCvn2r4vX5y
fTOIK9XdZRXq4viJFDJ/qFZm/JCPlzOIR3RKvWnUifxVQwqnXJ1yTrrK7YFB
fNfxWdkdkR80pfDSxqb8hY1cXgzi5LO11UlniY+1pBB4wixyHZ2vwSDONgkv
OWpCfKUthaZI7WlNkXJ7YBB7tPvO9mgnftWRQj9Dn46+hnK+YRD/C7Se+k8c
/9eVQtiEZ2vxkt9HrOKob63iSN+H9aSw2JLdtJjqKQZxb3Uvppc62a++FNSL
4tepkz0xiMMtDP6GWVA8lqA9W5a27LCUx18GcU2RllVNEfGHAba3Jcvbo0Xu
/wziW6e1D908TfHRUAqmEkM9UwndR3zvpt/Kezdp/Km/FCLH/SzeO478D/G8
g5nnXA7S+wdgexScd4XR+CeDeKC18tsB1uSfA6UQVWlYs79Sbu8M4m2z0v9t
nUX8PEgKha26ly63yu2BQfx++PzH74YTfw2WwuVR5vqXR8nzYwZxXanO0rpS
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
q7vKoGnAtpLGAZR/IDZuSTs9ooX4t5sM7rVs3Xu3hfgB8YdvTakN34j/u8vA
KO3X/uG0XzCDeFhoaqdhocTPiti/+Ix6bdrflUG8xTX+d4Qr5f89ZGCgpKtr
oETj/4iXSZWlS6VkXz1RHpsn5O6k/bcYxKsnRdutnkT3e+HzjDXqI4ypvkN8
d5HK6ruLKL72loHZxpgvphuJnxE/Op5a+vA4tU9JBvarLivY0/k9DOIrizJV
rojnM/WRgfPkuDinyeR/iC8VXfG9VETy7yuDCdIkqYWU8lPEP1ytfrWI35f6
yaCnhXpQT1rfySB2OWBa53yAxh+U8fez1LR/zNopv484dWrW9pSpNL6kgvr8
oj/H+gvVB4jLez3VKhfPt1SVQanufJNSXdI/4kbFCZ0aFcX1EjKAm5l3bG9S
/Efc56lepz5Paf6Dugxal2lotS6j/Bfxm5/htm9+kv9ryKCrqp5CV1XiN8Sf
3NTHfXIj+9GUwYaqkNkbqkh+iBXvfrdSvEv8qSWDnXd1B+28S/pFPOFFbQRe
8vvaMjg0vS7+4HSyD8Rc18TrbFeyXx0ZWO182sOKzgtiEO8uVem5u1Tcn0EG
ZSoT6krF+g7xqlWVNStXEf/ryaAkKcOjJInGZxEH1yuPCa6n/c/00T5+6s0y
+0nyQ/zY1CfvkSn5p0QGgQYZH9eJ47uI7U5rKNmJ/G6A8l4U/+m7WN8iPlNj
PvFMjbjfgwy67/zt2H0n5beINxcEGW0W14f0l0Hk3AzLyLnEX4g/9c3q8qkv
6X+ADGa+uLht5gvyX8QGQpytgUDxcaAMwprczMOaSH+I58+NO+A9l+4PQn+5
+nTh6qskP8QF2dp5+dlUfwyWgamjdtkYR5IfYl8+Zq8PT/IdIoNBhRL1QYXU
f8TlT5/PwEt+f6gM1pwpcVlzhtqHeHWq8qdVqZQfDJPBSRut7SdofwAG8bTV
GYemrqb6ZbgMpEpewVIl4j/Ep6SSWaekdN8I5Veo0tatkJ6PuFthilG3Qqp/
R8igIzzOvSOcxvcQf/qTOujTH4o/xjKom1LlUDeF+oe41UXXtdWF7o+UQXGu
auGNXKpvEF/uSN1T0EH8MArfvyt2XPddVL8idmVrsuex5N+jkT/Cw23sw0m/
iNc8/rf7/+8PbyKDlhn+a1poP0QG8YHeP05EifvBjZHBQh39KwtovyIG8ddX
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
I97V3vArsB31i+VYwB+b9zv/wP8Sjza2TRtlDP8RR/ZC70bp33qIT4jXH0ne
uP4I9CueOEK+Y10E7APxXrOUx3vM4J8SODan82utcSf6l9hARj1lkgzyl0SO
zbtoOGuesP6XOFZu17pYOeQnx6i+gamGuwKhv8ShB1RsQg/AfiRxTLvJu1ML
97uLiK96vcxP98L4ZTLZiwpNf5MKtB/x8eKEs6nF8L8pHHsSZX/qcRTajzhY
P3FesD6+P5XseVHq+qgi2F/i6SWJw6eXoPw4xya4HTeZ4Ab9JY76NpUetP8J
jg27752jcx/1I16hbtO1XB3vP0nlMlNP6MhAfoidm61POTUjvznFsbn6siIT
/VWScuK/z2s1mp7fIilP41ht6Y83L7HeV0TMDdxtxg1E/57m2KVLyXkXL8E/
Ej/5GS3/5Cfqd4ZjFlqBwau10D7EBv6q+yf5o35nKd5yK+s67wb7StyrUXtj
r8YjkvJzFN9c6tmqC38lIu7s4zSosw/k+zzZr2qtykfV8O/E/YsqYvoVQb8u
kD7mx3wozof9Ii46au9WdBTyf5FjD9xVXR+4Y/6KuDpbK78qG/J1ifxVH805
O/pgfSbx1Dmp36fMwfsvU35WbTfwv2rYB+Klzi99lwr33VzhmOjfF/3okZQT
P9olq/1oF/aPpHNsmbfCzGXeiD+Jz4mOl50VCeddU/5ddmdGbhnyC+Llu+Pq
lu2Gfc+geGiHbJP6DthX4qhlOoFRyxCfZFL91s+W+W892o9YNjO7Z2gm+ieL
7HuW2murLMl5cSLi8e0JauPbEZ9lU37vMefjPQ+8n7hkrOXskrHw3zmkX0/r
89hT6A9x+gnV/CsnMH+fS+2ZYPK+KgHyTRxy2zEk+Db8xzXyl5nRkTaoj4j4
arGm7tVi7J+/TvFIRLSWagTiR+LQJ0k9IU8Q/9yg+GHbi18a29C+xMHfnw8L
/o744ybHslLlkzNTJfcdiIgH70j6MGgHfn+L4olJqe+eTsL8BbH3eovTXuuR
P98meeQNyqV4tC9xq0e8qEXYH5RH+mql4jLd6h9JOfHr4d7DXg9HfHmHY78K
EjR+FcD+ET/M7Bn2MFO435vsY3infkA47BPxON8vJuOE+zjukTzIqnqdk8Xv
iZ87qR2pcYJ9yOeYjr5iXx19yDexmvXtOlXMp0iJKV6ZGp2XOBXtR/z0g5zr
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
EafrZ3mn68M/avGsZlXQsBrcHyMi7ji15kz7KeF+R559dFAo/ID+FhFfWZW6
5coq+Dcdnh3qH5dxsD/sA7GfsXyHrzHGB4fxLM3HvOqUD/Sb+NPnhL0fP0M+
h/OscIONYiH2m4iIU2PkzFJjML47gmdDW1Wvy7SinNjzXeRgz3ew3yN5tma4
7W+L4RifIh4er35sWDzmB0fxTL93rYI+7kcSEUdt1t4XuRnyP5rk01R7zhBT
2F/i3NuKfXOF+zfG0P/z8h09XDgfkljmuWaQzHPY37E8S3gzwzXhjbD/n2eb
d+tM2Lwb44u6PMvcqDAmcyPaj7h0jpxX6RzcdzWOZ0sUOp6ZKeD/Ey94WVc7
/yXio/E8G+cZP3acJ+J74mnhkU1Thfm7CTzbsL/+jCv2w4qIV/ZNCl/RF/2v
R/YzoHzcrQD4f+KDet09B/Tgn/R5NmvDqlczNyB+IF4gn6C3QB72dyLP7r9U
SOJf4vfE3Wf8tbqF9QWTeNYc5rW0OQz6RTygTutt/zrU34BnFcNLJ9IjKSdO
3JlSmLAT+fVkks9+Efe7+yG+Jh5foFY4rgD3R03hmWu8vJtrPOIP4pJPydeK
P2H99FSe9VkoF98b6wlFxGvuVCqvuQP9nsazmNL4J9Gl6B9iUbhs0u5w2AdD
nq3Vk//soofxO+KlbMbvJQz583Se+ebJ39qaJ8z/098/sQtxeYL2m8Gzbwfq
CjoPIP4hjvqlPTvqF+TLiGdJBl6jkgzQPsSmoRXupqGQr5k8uzFI5f71Qehf
4g+pqlHvU5G/zeLZ9eeyTdee4/xY4ubnCb2bhfhwNs8mWqjPmGiB8XFiy4zo
rjUZ8N/GPLMpSP5oXQD5Jz4oZ9xxQA72Yw7Zk0lfbU5OQvsRK6el2Cunof9M
ePbbuT3llzP6n/hAutL8A+lnJOVzyf5nHNsYmgH7SNx61G5r61HsH2XkP0zi
r7kL9pnYRumlhY0S5HMe2RNplYFXpGHfiactSs2dugjtZ0rfU1liYVmJ9iOu
Ckp2qgqC/v1N9bM7tu63HfwfsU1tbat1Lb5vPs/eX0g5+e4C/B9xalWcX2oV
/NMCnrW0q/7b0g77Qtw2VtG1bSz2py4k/Q7t8E5Af4mIP6fIhf2XAvu0iOQt
PG7TmnDE/8S9GqsG0iMpX8yz2y1KTbewXlBELBd6O0sW6+2kzHhmG6R02iYI
598Tf/moee/zR9R/Cc96W28z7G2N9iPe9cHiTuAH+N+lZB/m3H2li/E+EfH7
iDj19xF4/zKq/+ydSxJw/5SI2DlE47NTCMY/lpP+l2hFzBTiP2KvxeXqXsL9
rSuof1oTxZdb4d+IpVqU+0i1YP5gJenjO4vW4newb8RxYUZ/xYXBvq+i+Cm6
dnVKNOIL4ojVspsjhPM9zHmWd1HFNe8i5J943srJP9lK2LfVPJu8gSKSDZB/
4s2/bUs9fiM+tiB9kdM2/CCH+I/4clS812Xs15Faw7M9TbvW7sF+CRGxvIt5
uZyLsP+f4sXb1u6NuO9GROwWtDPALQj6bcWz1fV+T82xn0ZEHBqeMDg0HN9n
TfqYplrQlCbJZ0TEt/Njn9/Kx/ijDc8UP6pYKn7E+XvE8icT9OVPQn9t6f+d
yn4XckrY/0/+0Fsx7KE3xo/sKF6dorO4aArW1xP7f9Be4v8B/tee7MNF9QPX
LqJ/icdsM580ZhviFwfSFz0VUaXePkk58YdupcUfujG/50j9e9B5+pWDGL8n
fjA48cZ94fx+J57pfFZw0fmM/iX28Y0x9vFF/Zx59uJX5aIXuM9BRLxoW5zN
om2QDxee9V34MqHPQqx/IVaa7rBJaTrs91qeOQ1q2+OI+1lFxKOvxcwafQ32
cR35s5Mp11acRP8RP9GK3fhEC+27nuy5w7cFIgfEV8QG8SWzDeJh3115pqKn
XqGsd0xSTqy+WPWj2mLY1w0U79bMDpStQf5EXNJslVncLNwvy7OXJ6vNXp6E
/hH3538u6s9DP/+h+PzesTdh92B/iaPnKO2NmoP1exsp3lYp7U2PpJyYL0jM
5AqQH7vzrOtN57KuN5AvYpkFWdIyCxCfbaJ8RO7LxbFysH/Ei/tF2C6Gv5Ty
IH89YkrH/BFoP+Ii3+RBRb6o32aKx8dpzT0jrP8hvm/04jdvBPu8hWfv4nT8
38VBvogvactOvKSN8X9Pnl2UjnpyQRr+kTg/M/nYvUzY33/JnhZYVaQUIP4j
th7444TVQOiHF9mvxlm7emM/qIh4S5mW+ZYyzF94UzwdJ+saGQf9Jo5Pra6N
SxXux+VZ/bPS0Lpn8E/EK/8o/V7xB/5nK8+2mUbl+Zvi+4lDfq2ZGfIL8ulL
8jIlatWTKfDfxNeKlApziyA/fuT/lO/mnlCG/SQePyLm6rgRkD9/numl/1yh
lw77RTwsunrwMOH8+W3/s5fy07wWI74mlpmZZS4zE/23nWce/2l7evyH/VfE
c+103pnYIT7cQfLzqrrXvleQL+I+nMal3hzOL9tJ9vmurfOsuxhfJnZYfmeJ
g7B/KIDyGT+lBmc/+BfiigqdwvIKzK8E0t+XKW1wKIN8ET8NVm17Eoz+2UX9
4VK5f7ML9Jc4yFu9e5c37hcIovzskmzUmUuIz4jrVTRm1Ktg/Hs3xQucxgpl
DvpDfH7oqrpzQ2HfRSQfX61up3yFfBDf9zNK4v2E+4BJ/kzlubemkC9im5i5
5dYxyK9CqL0XOcTrLEL7E8sN/lYjOxj6GUr6/EheTv0Rfk98pEvxWngX1kfs
4dldX81fd3wR/xDPK4lXnFeC/WN7ebYi0tJ/RSS+n9i0QE7ftAD2M4zk+fWP
8dbIp0XE8dl1CXHZaP99PNOIj32rHo/2JXbnVPq6cxJ7L7WfZ3apZX/ZpTbP
/T96DeK3
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10000.}, {0, 0.9999693897552717}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814970933396647*^9, 3.8149709759995832`*^9}, 
   3.814971065263547*^9, 3.8149713029609823`*^9, 3.814982319816114*^9, 
   3.8149824386401167`*^9, 3.8149865106917143`*^9, 3.8149866524299107`*^9, 
   3.814988038064642*^9, 3.815045485615876*^9, 3.8150481802305098`*^9, 
   3.815049101970598*^9, 3.8150535955897818`*^9, 3.815056189860628*^9, 
   3.815066934354203*^9, 3.815134402078969*^9, 3.815134583985549*^9, 
   3.815134701157825*^9, {3.815134732486959*^9, 3.81513475618237*^9}, 
   3.815134923130863*^9, 3.815135163978767*^9, {3.8151354028781977`*^9, 
   3.815135431913085*^9}, 3.815135504922513*^9, 3.8151363350445023`*^9, 
   3.815136561941609*^9, 3.8151366494852333`*^9, 3.815136700916353*^9, 
   3.8151368169200153`*^9, 3.815137035421668*^9, 3.815137175640143*^9, {
   3.815137359010659*^9, 3.8151373805792294`*^9}, {3.815137512207781*^9, 
   3.815137525683914*^9}, {3.815137591979547*^9, 3.815137604752667*^9}, 
   3.815137850585227*^9, 3.815137972419981*^9, 3.815138045647182*^9, 
   3.815138087066794*^9, 3.815138117129575*^9, 3.815138184528182*^9, {
   3.815138286588311*^9, 3.815138330724457*^9}, 3.815138411989622*^9, 
   3.815138702493849*^9, 3.815143137100668*^9, 3.8151431749111767`*^9, {
   3.81514322339324*^9, 
   3.81514330767815*^9}},ExpressionUUID->"9a619095-17be-4da8-a1f4-\
45973bfb4271"]
}, Open  ]],

Cell["\<\
See how the rectangle is more evenly filled with OwenScrambled(OS) than with \
WhiteNoise(WN) ? Yeah, OS is really slower compared to WN.

So, let\[CloseCurlyQuote]s see how it goes by sampling a function with our \
two different samplers.\
\>", "Text",
 CellChangeTimes->{{3.814971111761568*^9, 3.814971191905328*^9}, {
  3.8149714649211807`*^9, 
  3.814971489399988*^9}},ExpressionUUID->"83c80b82-a50b-4fb6-8479-\
5cbdcd47f34f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "f", ",", "x", ",", "a", ",", "b", ",", " ", "w", ",", " ", "n", ",", " ", 
    "tValue", ",", " ", "eValue"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "x_", "]"}], "=", 
   RowBox[{
    RowBox[{"Cos", "[", "x", "]"}], "+", 
    RowBox[{"Sin", "[", "x", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   RowBox[{"\[Pi]", "/", "2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"w", "=", 
   RowBox[{"b", "-", "a"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tValue", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", "a", "b"], 
     RowBox[{
      RowBox[{"f", "[", "x", "]"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<True value\>\"", ",", "tValue"}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "a", ",", "b"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", " ", 
      RowBox[{"Opacity", "[", "0.75", "]"}]}], "}"}]}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8149691635554256`*^9, 3.814969227592331*^9}, {
   3.814970554434956*^9, 3.814970617931953*^9}, {3.814970734098982*^9, 
   3.8149707367527246`*^9}, 
   3.814971242282837*^9},ExpressionUUID->"b915d6be-98e9-4b30-9f62-\
16867521c9cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True value\"\>", ",", "2.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814970609730605*^9, 3.814970623174066*^9}, 
   3.814970699403825*^9, 3.814970738035819*^9, 3.8149712056068993`*^9, 
   3.81497124493841*^9, 3.8149718960460863`*^9, 3.814972804776066*^9, 
   3.814973729660355*^9, 3.814982319960243*^9, 3.814982438816094*^9, 
   3.814986510868415*^9, 3.8149866526077623`*^9, 3.814986807395441*^9, 
   3.8149880382170773`*^9, 3.815045485791071*^9, 3.815045872967402*^9, 
   3.8150481803792753`*^9, 3.815049102127749*^9, 3.815052336456943*^9, 
   3.815053595730069*^9, 3.815056190000762*^9, 3.815056397978839*^9, {
   3.81506691301507*^9, 3.815066938396009*^9}, 3.815134402249178*^9, 
   3.8151345902323933`*^9, 3.8151349331121187`*^9, 3.81513510541829*^9, 
   3.81513516415744*^9, 3.815135438036911*^9, 3.815135505116873*^9, 
   3.815136335235504*^9, 3.8151366496431828`*^9, 3.8151367010752897`*^9, 
   3.815136817060541*^9, 3.815137175866419*^9, 3.8151373807235603`*^9, 
   3.815137525829689*^9, 3.8151376049121323`*^9, 3.8151378622778397`*^9, 
   3.8151387028208523`*^9},ExpressionUUID->"245c39d6-a21a-4689-b288-\
61f26a14e8cb"],

Cell[BoxData[
 GraphicsBox[{GraphicsComplexBox[CompressedData["
1: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
0hi0xJes0hYW4H+KxO+q
    "], {{{}, 
      {RGBColor[1, 0, 0], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwt1FXUVkUAhtGPbunOH+nuTimlu0W6u0GUlm6ku7uVFAQllQ6lUbobBHMf
8GKv58zcvrNOWPMuNTuHD4VC4YgX7n3z/P/9q0bXZXqC8L4H6DwO8ZaG9OBr
9vCU0lSnHWP4htvkJhc5yUF2spGVLGQmExnJQHrS8SFpCSMNpahGW0azhVuk
piRVacMoNnOTVJSgCq0ZySZukJIGdGcqu3lCcSrTihFs5DopqE83pvAdjylG
X2bxI6+oREu+YgO/k5zPmctB3lCPrkxmF48oSh9m8gMvqcgCjvAXLRjOen4j
GUs5Hmxqr/56hsi+5+gB/qAu54jqfpHG0p/1H7oQ2/mURtRJGkN36kOKENf5
F42mi/UDPar/0ps4zqc1ks7QmLpPX/AJZ4nibr4e5k+ac5II7ofpOq6RlCUc
C4XePdB+Mpv9vKYOC/mJv+nMRHbwgML0Yjp7ec7HNGMoa7lKEmrTiQls5z6F
6Mk0vucZFWjKENZwhcTUoiPj2cY9ClKezxjMai6TiJp0YBxbuUsBytGEQazi
EgmpQXvG8i13yE9ZPmUgK7lIAvJRhsZ8yQouEJ94wY7BVsHewYbBOwi2CvYm
erBv8EaCrYgc7Bm8iWAjgv9GXj6iEV+wnPP8B1u4ggc=
         "]]]}, {}, {}}, {{}, {}, 
      TagBox[
       {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[0.75], 
        LineBox[CompressedData["
1:eJwl1GWQVXUAh+FlwaWUbhRYukG6u7tBREolBHbp7la6u7tTQJAuQaVR6VA6
lBQlnzN8eO57/ufOnJk7vzM3vGVknYgoISEhCXwEPccy+vE5ZchLKFGJxgeE
EZ0YxCQWsfmQj4hDXOIRP3g+CTnPcvrThLLkIxEXWMEAvqAc+bnNFkbzDbVJ
zEVWMpCmlKcAd9jKGNpRhyRcYhWDaEYFCnKXbYylPXVJymVWM5jmVOQxe5hK
Vwpxjx8YRwfqkYwrrGEILajEE/YyjW4U5j7bGU8Er/mZBdTnXw4yi14EQx2T
xSTnKmsZGmzku5PakpccYV6wlftntTJP2Rds5d70YE89HWyl3fUtvwYbOi8K
9tXfgx21iD5gR7C384TgndBTwd4aqW/4JXgPnBdqDP1NG/CCQ8wmzP0z2jv4
Sa6P6xJScI11DONLXnGU+VThGfuZQQ+K8pAfmUhHGvIfh5lDH1JynfUM5yuq
8pwDzKQnxfibnUyiE434mD/ZwAi+phrF+YddTKYzn/EJf7GRkbSiOiVIxQ02
8S2tqUFJUnOTzXxHG2pSijSEk5Z0pCcDGclEZrKQlWxkJwc5yUVuPuUW3zOK
ttSiNI/YzRS60Jj/+Ym59CXUXid0KbFc/xHy/j8kj74DP0KCBQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$5298#1"]& ]}}], {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 1.0000000320570674`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}, "AxesInFront" -> True},
  PlotRange->
   NCache[{{0, Rational[1, 2] Pi}, {1.0000000320570674`, 
     1.4142135520381258`}}, {{0, 1.5707963267948966`}, {1.0000000320570674`, 
     1.4142135520381258`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.814970609730605*^9, 3.814970623174066*^9}, 
   3.814970699403825*^9, 3.814970738035819*^9, 3.8149712056068993`*^9, 
   3.81497124493841*^9, 3.8149718960460863`*^9, 3.814972804776066*^9, 
   3.814973729660355*^9, 3.814982319960243*^9, 3.814982438816094*^9, 
   3.814986510868415*^9, 3.8149866526077623`*^9, 3.814986807395441*^9, 
   3.8149880382170773`*^9, 3.815045485791071*^9, 3.815045872967402*^9, 
   3.8150481803792753`*^9, 3.815049102127749*^9, 3.815052336456943*^9, 
   3.815053595730069*^9, 3.815056190000762*^9, 3.815056397978839*^9, {
   3.81506691301507*^9, 3.815066938396009*^9}, 3.815134402249178*^9, 
   3.8151345902323933`*^9, 3.8151349331121187`*^9, 3.81513510541829*^9, 
   3.81513516415744*^9, 3.815135438036911*^9, 3.815135505116873*^9, 
   3.815136335235504*^9, 3.8151366496431828`*^9, 3.8151367010752897`*^9, 
   3.815136817060541*^9, 3.815137175866419*^9, 3.8151373807235603`*^9, 
   3.815137525829689*^9, 3.8151376049121323`*^9, 3.8151378622778397`*^9, 
   3.815138702864605*^9},ExpressionUUID->"f20bfd34-9cd8-4470-bd06-\
c6c20dbe89d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"estsWN", "=", " ", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"meanWN", "=", 
  RowBox[{"Mean", "[", "estsWN", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Variance", "[", "estsWN", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "estsWN", "]"}]}], "Input",
 CellChangeTimes->{{3.814970692654283*^9, 3.8149707153338547`*^9}, {
   3.814971235917231*^9, 3.814971236792202*^9}, {3.814971354400186*^9, 
   3.8149713579564753`*^9}, {3.814971652773589*^9, 3.814971652862934*^9}, 
   3.814971927756565*^9, {3.814972040201088*^9, 3.814972055273883*^9}, {
   3.8149727553645697`*^9, 3.8149727648147173`*^9}, {3.814972838819154*^9, 
   3.814972897340735*^9}, {3.81505699674885*^9, 
   3.815057009280851*^9}},ExpressionUUID->"3eec1d6f-6b00-4e38-b640-\
589438fbf1d9"],

Cell[BoxData["2.000184580710584`"], "Output",
 CellChangeTimes->{
  3.814972898110718*^9, 3.814982320029931*^9, 3.81498243889268*^9, 
   3.814986510941201*^9, 3.814986652680893*^9, 3.814986809416206*^9, 
   3.814988038306333*^9, 3.8150454858602133`*^9, 3.8150458749987297`*^9, 
   3.815048180448122*^9, 3.8150491022044353`*^9, 3.815052338590514*^9, 
   3.815053595799572*^9, 3.815056190084876*^9, 3.8150564016859417`*^9, {
   3.815057011394841*^9, 3.815057017490337*^9}, {3.815066916087058*^9, 
   3.815066939738315*^9}, 3.815134402317409*^9, 3.815134592057238*^9, 
   3.815134934556322*^9, 3.815135109374138*^9, 3.815135164226766*^9, 
   3.815135441983903*^9, 3.815135505194379*^9, 3.8151363353224297`*^9, 
   3.815136649722239*^9, 3.81513670117061*^9, 3.815136817148711*^9, 
   3.815137175941003*^9, 3.815137380828866*^9, 3.815137525922936*^9, 
   3.815137604987851*^9, 3.81513786481386*^9, 
   3.815138702919838*^9},ExpressionUUID->"ec6ffcf1-ec37-4861-9458-\
b07ee37cc0ff"],

Cell[BoxData["0.03834945097565506`"], "Output",
 CellChangeTimes->{
  3.814972898110718*^9, 3.814982320029931*^9, 3.81498243889268*^9, 
   3.814986510941201*^9, 3.814986652680893*^9, 3.814986809416206*^9, 
   3.814988038306333*^9, 3.8150454858602133`*^9, 3.8150458749987297`*^9, 
   3.815048180448122*^9, 3.8150491022044353`*^9, 3.815052338590514*^9, 
   3.815053595799572*^9, 3.815056190084876*^9, 3.8150564016859417`*^9, {
   3.815057011394841*^9, 3.815057017490337*^9}, {3.815066916087058*^9, 
   3.815066939738315*^9}, 3.815134402317409*^9, 3.815134592057238*^9, 
   3.815134934556322*^9, 3.815135109374138*^9, 3.815135164226766*^9, 
   3.815135441983903*^9, 3.815135505194379*^9, 3.8151363353224297`*^9, 
   3.815136649722239*^9, 3.81513670117061*^9, 3.815136817148711*^9, 
   3.815137175941003*^9, 3.815137380828866*^9, 3.815137525922936*^9, 
   3.815137604987851*^9, 3.81513786481386*^9, 
   3.815138702928618*^9},ExpressionUUID->"7f2c6249-aa85-44be-8a71-\
ef87906e97ad"],

Cell[BoxData["0.1958301584936678`"], "Output",
 CellChangeTimes->{
  3.814972898110718*^9, 3.814982320029931*^9, 3.81498243889268*^9, 
   3.814986510941201*^9, 3.814986652680893*^9, 3.814986809416206*^9, 
   3.814988038306333*^9, 3.8150454858602133`*^9, 3.8150458749987297`*^9, 
   3.815048180448122*^9, 3.8150491022044353`*^9, 3.815052338590514*^9, 
   3.815053595799572*^9, 3.815056190084876*^9, 3.8150564016859417`*^9, {
   3.815057011394841*^9, 3.815057017490337*^9}, {3.815066916087058*^9, 
   3.815066939738315*^9}, 3.815134402317409*^9, 3.815134592057238*^9, 
   3.815134934556322*^9, 3.815135109374138*^9, 3.815135164226766*^9, 
   3.815135441983903*^9, 3.815135505194379*^9, 3.8151363353224297`*^9, 
   3.815136649722239*^9, 3.81513670117061*^9, 3.815136817148711*^9, 
   3.815137175941003*^9, 3.815137380828866*^9, 3.815137525922936*^9, 
   3.815137604987851*^9, 3.81513786481386*^9, 
   3.815138702931242*^9},ExpressionUUID->"14e662fb-6013-4cd0-95ae-\
d792476377fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"estsLDS", "=", " ", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"LDSHsampler", "[", "i", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"meanLDS", "=", 
  RowBox[{"Mean", "[", "estsLDS", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Variance", "[", "estsLDS", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StandardDeviation", "[", "estsLDS", "]"}]}], "Input",
 CellChangeTimes->{{3.814971233869563*^9, 3.814971237559931*^9}, 
   3.814971273725567*^9, 3.8149713270856752`*^9, 3.814971363473518*^9, {
   3.814971658714141*^9, 3.814971658800509*^9}, 3.814971929863625*^9, {
   3.814972770125421*^9, 3.81497277325324*^9}, {3.8149728217622004`*^9, 
   3.8149728241467524`*^9}, {3.8150570253672867`*^9, 3.815057040266288*^9}, {
   3.815134593970742*^9, 3.815134614874826*^9}, 3.815135133792469*^9, {
   3.81513602688592*^9, 3.815136036379897*^9}, {3.815136606671763*^9, 
   3.8151366263758383`*^9}},ExpressionUUID->"c82b1cea-c11d-4eac-b971-\
eef2bfbe57cc"],

Cell[BoxData["1.9973164736789877`"], "Output",
 CellChangeTimes->{
  3.814971283004772*^9, {3.814971314046977*^9, 3.8149713367722692`*^9}, {
   3.814971369163501*^9, 3.814971381705851*^9}, 3.814971662035759*^9, {
   3.814971918737084*^9, 3.814971935591393*^9}, 3.814972776271632*^9, 
   3.814972827690292*^9, 3.814982322328113*^9, 3.8149824411146517`*^9, 
   3.814986513213542*^9, 3.814986654817902*^9, 3.814986815033637*^9, 
   3.814988040587826*^9, 3.8150454880238867`*^9, 3.815045881426775*^9, 
   3.815048182719236*^9, 3.815049104495229*^9, 3.815052342634417*^9, 
   3.815053597915039*^9, 3.8150561922226686`*^9, 3.815056410768888*^9, {
   3.815057029293788*^9, 3.815057043090719*^9}, 3.8150669437422867`*^9, 
   3.815134404593733*^9, {3.815134596019742*^9, 3.8151345995289917`*^9}, 
   3.815134631639597*^9, {3.815135139716126*^9, 3.8151351687150106`*^9}, 
   3.815135507895588*^9, 3.815136338033917*^9, 3.8151366525520363`*^9, 
   3.8151367039527063`*^9, 3.815136819806888*^9, 3.815137178440229*^9, 
   3.815137385816559*^9, 3.815137528511166*^9, 3.815137609901184*^9, 
   3.815137867421625*^9, 
   3.8151387078559113`*^9},ExpressionUUID->"bf12e511-d7e8-434e-aedd-\
d81148c580a5"],

Cell[BoxData["0.037639222461156155`"], "Output",
 CellChangeTimes->{
  3.814971283004772*^9, {3.814971314046977*^9, 3.8149713367722692`*^9}, {
   3.814971369163501*^9, 3.814971381705851*^9}, 3.814971662035759*^9, {
   3.814971918737084*^9, 3.814971935591393*^9}, 3.814972776271632*^9, 
   3.814972827690292*^9, 3.814982322328113*^9, 3.8149824411146517`*^9, 
   3.814986513213542*^9, 3.814986654817902*^9, 3.814986815033637*^9, 
   3.814988040587826*^9, 3.8150454880238867`*^9, 3.815045881426775*^9, 
   3.815048182719236*^9, 3.815049104495229*^9, 3.815052342634417*^9, 
   3.815053597915039*^9, 3.8150561922226686`*^9, 3.815056410768888*^9, {
   3.815057029293788*^9, 3.815057043090719*^9}, 3.8150669437422867`*^9, 
   3.815134404593733*^9, {3.815134596019742*^9, 3.8151345995289917`*^9}, 
   3.815134631639597*^9, {3.815135139716126*^9, 3.8151351687150106`*^9}, 
   3.815135507895588*^9, 3.815136338033917*^9, 3.8151366525520363`*^9, 
   3.8151367039527063`*^9, 3.815136819806888*^9, 3.815137178440229*^9, 
   3.815137385816559*^9, 3.815137528511166*^9, 3.815137609901184*^9, 
   3.815137867421625*^9, 
   3.8151387080216722`*^9},ExpressionUUID->"968f8632-0fa3-4528-9413-\
f5991ee4fba5"],

Cell[BoxData["0.19400830513448686`"], "Output",
 CellChangeTimes->{
  3.814971283004772*^9, {3.814971314046977*^9, 3.8149713367722692`*^9}, {
   3.814971369163501*^9, 3.814971381705851*^9}, 3.814971662035759*^9, {
   3.814971918737084*^9, 3.814971935591393*^9}, 3.814972776271632*^9, 
   3.814972827690292*^9, 3.814982322328113*^9, 3.8149824411146517`*^9, 
   3.814986513213542*^9, 3.814986654817902*^9, 3.814986815033637*^9, 
   3.814988040587826*^9, 3.8150454880238867`*^9, 3.815045881426775*^9, 
   3.815048182719236*^9, 3.815049104495229*^9, 3.815052342634417*^9, 
   3.815053597915039*^9, 3.8150561922226686`*^9, 3.815056410768888*^9, {
   3.815057029293788*^9, 3.815057043090719*^9}, 3.8150669437422867`*^9, 
   3.815134404593733*^9, {3.815134596019742*^9, 3.8151345995289917`*^9}, 
   3.815134631639597*^9, {3.815135139716126*^9, 3.8151351687150106`*^9}, 
   3.815135507895588*^9, 3.815136338033917*^9, 3.8151366525520363`*^9, 
   3.8151367039527063`*^9, 3.815136819806888*^9, 3.815137178440229*^9, 
   3.815137385816559*^9, 3.815137528511166*^9, 3.815137609901184*^9, 
   3.815137867421625*^9, 
   3.815138708028439*^9},ExpressionUUID->"9776fba5-b42b-4bc8-b530-\
d51aa6367541"]
}, Open  ]],

Cell["\<\
To measure the impact of using a different sampler we of course will employ \
the error metrics we used above.
So let\[CloseCurlyQuote]s start by getting the standard deviation and its \
assoaciated Monte Carlo standard error and bias statistics. \
\>", "Text",
 CellChangeTimes->{{3.814971513944922*^9, 3.814971570533622*^9}, {
  3.814971790630356*^9, 3.814971837565248*^9}, {3.8149742303308573`*^9, 
  3.8149742393107452`*^9}},ExpressionUUID->"1363e0f5-27f8-49a2-9adb-\
914a674af7bd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sqr", ",", "MSE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqr", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"estsWN", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD WN\>\"", ",", 
    RowBox[{"MSEwn", "=", 
     SqrtBox[
      RowBox[{"sqr", "/", "n"}]]}]}], " ", "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{"aka", " ", "standard", " ", "deviation"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<MCSE WN\>\"", ",", 
    RowBox[{"MCSEwn", " ", "=", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"estsWN", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
            "-", "MSEwn"}], ")"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
       RowBox[{"n", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]]]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Bias WN\>\"", ",", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"estsWN", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.814971692827911*^9, 3.814971712780716*^9}, {
  3.8149717500636044`*^9, 3.81497177348746*^9}, {3.814972071143879*^9, 
  3.814972082029039*^9}, {3.814972222679284*^9, 3.8149722583831673`*^9}, {
  3.814972351717309*^9, 
  3.814972359498349*^9}},ExpressionUUID->"fc97234c-0895-4b2e-bbb8-\
14a2f8ee54e6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD WN\"\>", ",", "0.19582045373401688`"}], "}"}]], "Output",
 CellChangeTimes->{{3.814971698482657*^9, 3.814971774244939*^9}, 
   3.8149718412485247`*^9, 3.814971939438899*^9, 3.814972083370818*^9, 
   3.8149722597085447`*^9, 3.814972371665535*^9, 3.814972904986614*^9, 
   3.8149823223762083`*^9, 3.81498244119771*^9, 3.814986513265525*^9, 
   3.814986654871854*^9, 3.814986819380906*^9, 3.81498804063021*^9, 
   3.815045488090953*^9, 3.815045882891951*^9, 3.8150481827559*^9, 
   3.815049104540007*^9, 3.815052345604329*^9, 3.8150535979541693`*^9, 
   3.815056192263506*^9, 3.815056412435088*^9, 3.81513440465475*^9, {
   3.81513514521222*^9, 3.81513516876196*^9}, 3.81513550797608*^9, 
   3.815136338118458*^9, 3.8151366526382227`*^9, 3.8151367040101233`*^9, 
   3.8151368198522987`*^9, 3.815137178543673*^9, 3.8151373858568*^9, 
   3.815137528594186*^9, 3.8151376099495068`*^9, 3.815137881014675*^9, 
   3.815138708104542*^9},ExpressionUUID->"9c145fcc-0e66-4af5-9636-\
6c2bc9180af1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE WN\"\>", ",", "0.0016250672543150321`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.814971698482657*^9, 3.814971774244939*^9}, 
   3.8149718412485247`*^9, 3.814971939438899*^9, 3.814972083370818*^9, 
   3.8149722597085447`*^9, 3.814972371665535*^9, 3.814972904986614*^9, 
   3.8149823223762083`*^9, 3.81498244119771*^9, 3.814986513265525*^9, 
   3.814986654871854*^9, 3.814986819380906*^9, 3.81498804063021*^9, 
   3.815045488090953*^9, 3.815045882891951*^9, 3.8150481827559*^9, 
   3.815049104540007*^9, 3.815052345604329*^9, 3.8150535979541693`*^9, 
   3.815056192263506*^9, 3.815056412435088*^9, 3.81513440465475*^9, {
   3.81513514521222*^9, 3.81513516876196*^9}, 3.81513550797608*^9, 
   3.815136338118458*^9, 3.8151366526382227`*^9, 3.8151367040101233`*^9, 
   3.8151368198522987`*^9, 3.815137178543673*^9, 3.8151373858568*^9, 
   3.815137528594186*^9, 3.8151376099495068`*^9, 3.815137881014675*^9, 
   3.8151387081122627`*^9},ExpressionUUID->"6f03d63e-5ce1-4c04-82db-\
4f2e422ec706"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bias WN\"\>", ",", 
   RowBox[{"-", "0.0003601831016492605`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.814971698482657*^9, 3.814971774244939*^9}, 
   3.8149718412485247`*^9, 3.814971939438899*^9, 3.814972083370818*^9, 
   3.8149722597085447`*^9, 3.814972371665535*^9, 3.814972904986614*^9, 
   3.8149823223762083`*^9, 3.81498244119771*^9, 3.814986513265525*^9, 
   3.814986654871854*^9, 3.814986819380906*^9, 3.81498804063021*^9, 
   3.815045488090953*^9, 3.815045882891951*^9, 3.8150481827559*^9, 
   3.815049104540007*^9, 3.815052345604329*^9, 3.8150535979541693`*^9, 
   3.815056192263506*^9, 3.815056412435088*^9, 3.81513440465475*^9, {
   3.81513514521222*^9, 3.81513516876196*^9}, 3.81513550797608*^9, 
   3.815136338118458*^9, 3.8151366526382227`*^9, 3.8151367040101233`*^9, 
   3.8151368198522987`*^9, 3.815137178543673*^9, 3.8151373858568*^9, 
   3.815137528594186*^9, 3.8151376099495068`*^9, 3.815137881014675*^9, 
   3.815138708114835*^9},ExpressionUUID->"3f740610-26d8-4c12-a298-\
caf3e2717219"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"sqr", ",", "MSE"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sqr", "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"estsLDS", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "n"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD LDShash\>\"", ",", 
    RowBox[{"MSElds", "=", 
     SqrtBox[
      RowBox[{"sqr", "/", "n"}]]}]}], " ", "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<MCSE LDShash\>\"", ",", 
    RowBox[{"MCSE", " ", "=", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{"Sum", "[", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"estsLDS", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ")"}], "2"], 
            "-", "MSElds"}], ")"}], "2"], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
       RowBox[{"n", "*", 
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}]}]]]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<Bias LDShash\>\"", ",", 
   RowBox[{
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"estsLDS", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "-", "tValue"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "m"}], "}"}]}], "]"}], " ", "*", 
    RowBox[{"(", 
     RowBox[{"1", "/", "m"}], ")"}]}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.814971854873446*^9, 3.814971857708522*^9}, {
  3.814972089276265*^9, 3.81497209215998*^9}, {3.814972299791966*^9, 
  3.81497232959512*^9}, {3.814972364900826*^9, 3.8149723682816887`*^9}, {
  3.8151361043388557`*^9, 3.815136135222479*^9}, {3.8151367741377773`*^9, 
  3.815136780323759*^9}},ExpressionUUID->"42bc8ce6-fc0b-484a-a6c0-\
ace28c361b69"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD LDShash\"\>", ",", "0.19401716380883846`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8149718621230793`*^9, 3.814971942541068*^9, 
  3.814972093402555*^9, 3.8149723302378387`*^9, 3.814972373805825*^9, 
  3.814972906874648*^9, 3.814982322403379*^9, 3.814982441227509*^9, 
  3.814986513290338*^9, 3.8149866548988667`*^9, 3.814986820527122*^9, 
  3.81498804065233*^9, 3.815045488122518*^9, 3.815045886849465*^9, 
  3.81504818279431*^9, 3.815049104561496*^9, 3.815052346661291*^9, 
  3.815053597993828*^9, 3.815056192304015*^9, 3.815056415904089*^9, 
  3.815134404673647*^9, 3.8151351688141537`*^9, 3.8151355080021143`*^9, 
  3.8151363381483107`*^9, 3.815136652665475*^9, 3.8151367040450487`*^9, 
  3.8151368198970747`*^9, 3.815137178571409*^9, 3.815137385893894*^9, 
  3.815137528619049*^9, 3.815137609988186*^9, 3.8151378821790037`*^9, 
  3.81513870813546*^9},ExpressionUUID->"3325a82e-7ce4-4a89-965a-27f16950d583"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"MCSE LDShash\"\>", ",", "0.0016135682822228236`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8149718621230793`*^9, 3.814971942541068*^9, 
  3.814972093402555*^9, 3.8149723302378387`*^9, 3.814972373805825*^9, 
  3.814972906874648*^9, 3.814982322403379*^9, 3.814982441227509*^9, 
  3.814986513290338*^9, 3.8149866548988667`*^9, 3.814986820527122*^9, 
  3.81498804065233*^9, 3.815045488122518*^9, 3.815045886849465*^9, 
  3.81504818279431*^9, 3.815049104561496*^9, 3.815052346661291*^9, 
  3.815053597993828*^9, 3.815056192304015*^9, 3.815056415904089*^9, 
  3.815134404673647*^9, 3.8151351688141537`*^9, 3.8151355080021143`*^9, 
  3.8151363381483107`*^9, 3.815136652665475*^9, 3.8151367040450487`*^9, 
  3.8151368198970747`*^9, 3.815137178571409*^9, 3.815137385893894*^9, 
  3.815137528619049*^9, 3.815137609988186*^9, 3.8151378821790037`*^9, 
  3.8151387081440477`*^9},ExpressionUUID->"d6e6161b-b2ea-4eae-93d0-\
c4aff8593665"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Bias LDShash\"\>", ",", "0.0025463478077552516`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8149718621230793`*^9, 3.814971942541068*^9, 
  3.814972093402555*^9, 3.8149723302378387`*^9, 3.814972373805825*^9, 
  3.814972906874648*^9, 3.814982322403379*^9, 3.814982441227509*^9, 
  3.814986513290338*^9, 3.8149866548988667`*^9, 3.814986820527122*^9, 
  3.81498804065233*^9, 3.815045488122518*^9, 3.815045886849465*^9, 
  3.81504818279431*^9, 3.815049104561496*^9, 3.815052346661291*^9, 
  3.815053597993828*^9, 3.815056192304015*^9, 3.815056415904089*^9, 
  3.815134404673647*^9, 3.8151351688141537`*^9, 3.8151355080021143`*^9, 
  3.8151363381483107`*^9, 3.815136652665475*^9, 3.8151367040450487`*^9, 
  3.8151368198970747`*^9, 3.815137178571409*^9, 3.815137385893894*^9, 
  3.815137528619049*^9, 3.815137609988186*^9, 3.8151378821790037`*^9, 
  3.8151387081471987`*^9},ExpressionUUID->"29527016-d3ac-41f0-960f-\
de34545eb96c"]
}, Open  ]],

Cell[TextData[{
 "First let\[CloseCurlyQuote]s just note that with the STD and MCSE because \
of the squaring and then the square-rooting, - our errors look not so much \
different.\nBias instead, being an order of magnitude less for the OS \
sampler, gives us a somehow better statistic.\n\nWe can however also use a \
derivation (",
 StyleBox["dependent t-test for paired samples",
  FontVariations->{"Underline"->True}],
 ") of the so called T-test that gives us a nice value that effectively seems \
characterezing a bit more our error."
}], "Text",
 CellChangeTimes->{{3.8149721168137083`*^9, 3.814972194662711*^9}, {
   3.8149725119604597`*^9, 3.8149725409392*^9}, 3.814973910111484*^9, {
   3.814974063293282*^9, 3.814974113354401*^9}, {3.8149742481079693`*^9, 
   3.8149743337197447`*^9}, {3.8149796357387953`*^9, 3.814979651622328*^9}, {
   3.814979735301855*^9, 
   3.81497974265644*^9}},ExpressionUUID->"fd6ea253-f2d5-4f08-b266-\
0df71c0717ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"DTtestwn", "=", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"meanWN", "-", "tValue"}], "]"}], 
   "MSEwn"]}], "\[IndentingNewLine]", 
 RowBox[{"DTtestlds", "=", 
  FractionBox[
   RowBox[{"Abs", "[", 
    RowBox[{"meanLDS", "-", "tValue"}], "]"}], "MSElds"]}]}], "Input",
 CellChangeTimes->{{3.8149723833500767`*^9, 3.814972481565661*^9}, {
  3.81497266033475*^9, 3.8149727346206007`*^9}, {3.8149729122863827`*^9, 
  3.814972937258833*^9}, {3.814973721949533*^9, 3.814973781460616*^9}, {
  3.814973871592043*^9, 3.814973900727881*^9}, {3.8149798079112263`*^9, 
  3.814979824243546*^9}, {3.814980398172556*^9, 3.814980416352429*^9}, {
  3.815136146992014*^9, 3.8151361511292667`*^9}, {3.815136762030265*^9, 
  3.8151367621871758`*^9}},ExpressionUUID->"b89f26ec-75ec-40f8-9380-\
11850cf081b5"],

Cell[BoxData["0.000942601791918744`"], "Output",
 CellChangeTimes->{{3.8149723916633883`*^9, 3.814972482466275*^9}, {
   3.81497268882407*^9, 3.814972693908249*^9}, {3.8149727240792227`*^9, 
   3.8149727355132437`*^9}, {3.814972908738052*^9, 3.814972938124257*^9}, {
   3.814973762907628*^9, 3.814973782702602*^9}, 3.814973903290558*^9, {
   3.8149798157724648`*^9, 3.814979824904916*^9}, 3.814980419382496*^9, 
   3.814982322413849*^9, 3.814982441251019*^9, 3.814986513307817*^9, 
   3.814986654920842*^9, 3.814986822009972*^9, 3.81498804066459*^9, 
   3.81504548813343*^9, 3.815045888731978*^9, 3.8150481828053207`*^9, 
   3.815049104575169*^9, 3.8150523476492157`*^9, 3.8150535980319767`*^9, 
   3.8150561923419027`*^9, 3.8150564175885077`*^9, 3.8151344046841183`*^9, 
   3.815135168826866*^9, 3.8151355080154037`*^9, 3.815136338161934*^9, 
   3.815136652680958*^9, 3.8151367040621758`*^9, 3.815136819910408*^9, 
   3.815137178590145*^9, 3.815137385923121*^9, 3.8151375286359787`*^9, 
   3.8151376100290737`*^9, 3.8151378861810007`*^9, 
   3.815138708155038*^9},ExpressionUUID->"2ad32c26-f98d-4a79-81da-\
b2978479875e"],

Cell[BoxData["0.01383138619455518`"], "Output",
 CellChangeTimes->{{3.8149723916633883`*^9, 3.814972482466275*^9}, {
   3.81497268882407*^9, 3.814972693908249*^9}, {3.8149727240792227`*^9, 
   3.8149727355132437`*^9}, {3.814972908738052*^9, 3.814972938124257*^9}, {
   3.814973762907628*^9, 3.814973782702602*^9}, 3.814973903290558*^9, {
   3.8149798157724648`*^9, 3.814979824904916*^9}, 3.814980419382496*^9, 
   3.814982322413849*^9, 3.814982441251019*^9, 3.814986513307817*^9, 
   3.814986654920842*^9, 3.814986822009972*^9, 3.81498804066459*^9, 
   3.81504548813343*^9, 3.815045888731978*^9, 3.8150481828053207`*^9, 
   3.815049104575169*^9, 3.8150523476492157`*^9, 3.8150535980319767`*^9, 
   3.8150561923419027`*^9, 3.8150564175885077`*^9, 3.8151344046841183`*^9, 
   3.815135168826866*^9, 3.8151355080154037`*^9, 3.815136338161934*^9, 
   3.815136652680958*^9, 3.8151367040621758`*^9, 3.815136819910408*^9, 
   3.815137178590145*^9, 3.815137385923121*^9, 3.8151375286359787`*^9, 
   3.8151376100290737`*^9, 3.8151378861810007`*^9, 
   3.815138708160591*^9},ExpressionUUID->"c5f1a324-56df-4345-8078-\
10a9c6535794"]
}, Open  ]],

Cell[TextData[{
 "We can also use another derivation of the T-test called ",
 StyleBox["Welch\[CloseCurlyQuote]s t-test",
  FontVariations->{"Underline"->True}],
 " to compare directly our two estimates"
}], "Text",
 CellChangeTimes->{{3.81497990848316*^9, 
  3.814979932397685*^9}},ExpressionUUID->"b4624ad5-49c6-498c-b0a2-\
66daa23db091"],

Cell[BoxData[
 StyleBox[
  RowBox[{"t", "=", 
   FractionBox[
    RowBox[{
     SubscriptBox[
      OverscriptBox["X", "-"], "1"], "-", 
     SubscriptBox[
      OverscriptBox["X", "-"], "2"]}], 
    SqrtBox[
     RowBox[{
      FractionBox[
       SubsuperscriptBox["s", "1", "2"], 
       SubscriptBox["N", "1"]], "+", 
      FractionBox[
       SubsuperscriptBox["s", "2", "2"], 
       SubscriptBox["N", "2"]]}]]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.81497995285252*^9, 
  3.814980019477747*^9}},ExpressionUUID->"d06e1b58-4240-4ac7-8bf7-\
541047540ecf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Twelch", "=", 
  FractionBox[
   RowBox[{"meanWN", "-", "meanLDS"}], 
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["MSEwn", "2"], "n"], "+", 
     FractionBox[
      SuperscriptBox["MSElds", "2"], "n"]}]]]}]], "Input",
 CellChangeTimes->{{3.814979898203693*^9, 3.814979899527993*^9}, {
  3.8149800590556393`*^9, 3.814980195087036*^9}, {3.8149803179647627`*^9, 
  3.8149803277479553`*^9}, {3.8151361565993433`*^9, 
  3.8151361607813673`*^9}},ExpressionUUID->"a14745ab-772b-4d71-82cd-\
1670bb1780dd"],

Cell[BoxData["1.0404517894539136`"], "Output",
 CellChangeTimes->{{3.814980126089905*^9, 3.814980165581142*^9}, 
   3.814980200978097*^9, {3.814980319481576*^9, 3.814980328480735*^9}, 
   3.814980420798335*^9, 3.814982322436091*^9, 3.814982441284636*^9, 
   3.814986513336347*^9, 3.8149866549538107`*^9, 3.814986827451771*^9, 
   3.814988040687965*^9, 3.8150454881735277`*^9, 3.815045890547929*^9, 
   3.81504818282692*^9, 3.815049104596938*^9, 3.8150523517886047`*^9, 
   3.815053598065825*^9, 3.8150561923907003`*^9, 3.815056418932954*^9, 
   3.815134404702999*^9, 3.8151351688512077`*^9, 3.815135508041026*^9, 
   3.815136338193383*^9, 3.815136652708075*^9, 3.8151367040886517`*^9, 
   3.8151368199342813`*^9, 3.815137178620041*^9, 3.815137385948237*^9, 
   3.815137528663981*^9, 3.815137610066784*^9, 3.815137887803216*^9, 
   3.815138708182517*^9},ExpressionUUID->"c7e1d8df-ea07-4a18-aeea-\
e8806eba2296"]
}, Open  ]],

Cell["Eventually the T-test is given by", "Text",
 CellChangeTimes->{{3.814980366063629*^9, 
  3.814980374254129*^9}},ExpressionUUID->"38370620-a21b-4cb2-938d-\
89ef0bcca2b9"],

Cell[BoxData[
 StyleBox[
  RowBox[{"t", "=", 
   FractionBox[
    RowBox[{
     SubscriptBox[
      OverscriptBox["X", "-"], "1"], "-", 
     SubscriptBox[
      OverscriptBox["X", "-"], "2"]}], 
    RowBox[{
     SqrtBox[
      FractionBox[
       RowBox[{
        SubsuperscriptBox["s", "1", "2"], "+", 
        SubsuperscriptBox["s", "2", "2"]}], "2"]], "*", 
     SqrtBox[
      FractionBox["2", "n"]]}]]}],
  FontSize->18,
  FontColor->RGBColor[1, 0.5, 0]]], "DisplayFormula",
 CellChangeTimes->{{3.8149803831180477`*^9, 3.8149803844238577`*^9}, {
  3.814980424642638*^9, 
  3.814980502031908*^9}},ExpressionUUID->"88aca169-0a9a-46bb-979d-\
7431cb5410df"],

Cell[CellGroupData[{

Cell[BoxData[
 FractionBox[
  RowBox[{"meanWN", "-", "meanLDS"}], 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      SuperscriptBox["MSEwn", "2"], "+", 
      SuperscriptBox["MSElds", "2"]}], "2"]], "*", 
   SqrtBox[
    FractionBox["2", "n"]]}]]], "Input",
 CellChangeTimes->{{3.8149805288797092`*^9, 3.81498055324774*^9}, {
  3.815136164182748*^9, 
  3.815136169421659*^9}},ExpressionUUID->"e70cc6ab-8ac7-4ba2-85f5-\
05cf9b49c90a"],

Cell[BoxData["1.0404517894539138`"], "Output",
 CellChangeTimes->{3.814980555505659*^9, 3.814982322457156*^9, 
  3.814982441317544*^9, 3.814986513364962*^9, 3.8149866549858837`*^9, 
  3.814986831843392*^9, 3.814988040711462*^9, 3.8150454882026777`*^9, 
  3.815045894200179*^9, 3.815048182847622*^9, 3.815049104618165*^9, 
  3.815052352755291*^9, 3.815053598097975*^9, 3.8150561924223013`*^9, 
  3.815056423909885*^9, 3.815134404721911*^9, 3.8151351688728857`*^9, 
  3.815135508067724*^9, 3.815136338219157*^9, 3.8151366527414417`*^9, 
  3.81513670411276*^9, 3.8151368199637833`*^9, 3.8151371786482067`*^9, 
  3.815137385971065*^9, 3.815137528692788*^9, 3.815137610098064*^9, 
  3.8151378887695513`*^9, 
  3.815138708206582*^9},ExpressionUUID->"cc0b39fa-623f-4c01-b473-\
fa8a5bcd9dcc"]
}, Open  ]],

Cell[TextData[{
 "Result is the same of the Welch\[CloseCurlyQuote]s t-test because n is the \
same for both estimations there while it could be different as opposed to the \
T-test.\n\n\n",
 StyleBox["===================================================================\
=====================\n",
  FontColor->GrayLevel[0.5]],
 "Now this error estimates do tell us something when compared against \
different estimators of the same parameter (here mean).\nWhat they don\
\[CloseCurlyQuote]t tell us is the variability of our result compared to \
successive runs of the same simulation."
}], "Text",
 CellChangeTimes->{{3.8149805953614187`*^9, 3.814980644277708*^9}, {
   3.814980782789727*^9, 3.814980901858964*^9}, 3.8150485481319313`*^9, {
   3.815060118855318*^9, 
   3.815060118918396*^9}},ExpressionUUID->"26f5d126-c7da-4d36-af0d-\
56143517141d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dataWN01", "=", "estsWN"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataWN02", "=", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataWN03", "=", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataWN04", "=", 
   RowBox[{
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"a", "+", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataWN05", "=", 
    RowBox[{
     RowBox[{"ParallelTable", "[", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"a", "+", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], "*", "w"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", "meanWN", "\
\[IndentingNewLine]", 
 RowBox[{"meanWN2", "=", " ", 
  RowBox[{"Mean", "[", "dataWN02", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanWN3", "=", " ", 
  RowBox[{"Mean", "[", "dataWN03", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanWN4", "=", " ", 
  RowBox[{"Mean", "[", "dataWN04", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"meanWN5", "=", " ", 
  RowBox[{"Mean", "[", "dataWN05", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"meansWN", "=", 
   RowBox[{"{", 
    RowBox[{
    "meanWN", ",", "meanWN2", ",", "meanWN3", ",", "meanWN4", ",", 
     "meanWN5"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.814981041133875*^9, 3.81498113007749*^9}, {
   3.8149867879107656`*^9, 3.8149867987747097`*^9}, {3.8150462447415037`*^9, 
   3.81504631225708*^9}, 
   3.815046536428362*^9},ExpressionUUID->"98ebd454-9aef-4aa2-aca1-\
49004f2f104f"],

Cell[BoxData["2.000184580710584`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 3.814982441351678*^9, 3.8149865133921423`*^9, 
   3.814986655025544*^9, 3.814986839542636*^9, 3.814986926371829*^9, 
   3.814988040735673*^9, 3.8150454882360153`*^9, 3.815045896143477*^9, 
   3.8150463234734383`*^9, 3.81504653750914*^9, 3.8150481830029507`*^9, 
   3.815049104777178*^9, 3.815052353795186*^9, 3.815053598251502*^9, 
   3.815056192574251*^9, 3.815056425164456*^9, 3.815134404885207*^9, 
   3.815135169018804*^9, 3.815135508239394*^9, 3.815136338387425*^9, 
   3.815136652897456*^9, 3.815136704283848*^9, 3.815136820140108*^9, 
   3.8151371788399343`*^9, 3.815137386133297*^9, 3.815137528859084*^9, 
   3.8151376102479486`*^9, 3.8151378898390303`*^9, 
   3.815138708358542*^9},ExpressionUUID->"31a83539-456a-44bd-add6-\
9ef43128892c"],

Cell[BoxData["1.9973047116118403`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 3.814982441351678*^9, 3.8149865133921423`*^9, 
   3.814986655025544*^9, 3.814986839542636*^9, 3.814986926371829*^9, 
   3.814988040735673*^9, 3.8150454882360153`*^9, 3.815045896143477*^9, 
   3.8150463234734383`*^9, 3.81504653750914*^9, 3.8150481830029507`*^9, 
   3.815049104777178*^9, 3.815052353795186*^9, 3.815053598251502*^9, 
   3.815056192574251*^9, 3.815056425164456*^9, 3.815134404885207*^9, 
   3.815135169018804*^9, 3.815135508239394*^9, 3.815136338387425*^9, 
   3.815136652897456*^9, 3.815136704283848*^9, 3.815136820140108*^9, 
   3.8151371788399343`*^9, 3.815137386133297*^9, 3.815137528859084*^9, 
   3.8151376102479486`*^9, 3.8151378898390303`*^9, 
   3.815138708368019*^9},ExpressionUUID->"707be0e5-6622-492b-8431-\
03c0749b99d9"],

Cell[BoxData["2.0006959282922816`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 3.814982441351678*^9, 3.8149865133921423`*^9, 
   3.814986655025544*^9, 3.814986839542636*^9, 3.814986926371829*^9, 
   3.814988040735673*^9, 3.8150454882360153`*^9, 3.815045896143477*^9, 
   3.8150463234734383`*^9, 3.81504653750914*^9, 3.8150481830029507`*^9, 
   3.815049104777178*^9, 3.815052353795186*^9, 3.815053598251502*^9, 
   3.815056192574251*^9, 3.815056425164456*^9, 3.815134404885207*^9, 
   3.815135169018804*^9, 3.815135508239394*^9, 3.815136338387425*^9, 
   3.815136652897456*^9, 3.815136704283848*^9, 3.815136820140108*^9, 
   3.8151371788399343`*^9, 3.815137386133297*^9, 3.815137528859084*^9, 
   3.8151376102479486`*^9, 3.8151378898390303`*^9, 
   3.815138708371071*^9},ExpressionUUID->"f865353b-ee32-4bfe-9fe2-\
a98af0571573"],

Cell[BoxData["1.9974286823959966`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 3.814982441351678*^9, 3.8149865133921423`*^9, 
   3.814986655025544*^9, 3.814986839542636*^9, 3.814986926371829*^9, 
   3.814988040735673*^9, 3.8150454882360153`*^9, 3.815045896143477*^9, 
   3.8150463234734383`*^9, 3.81504653750914*^9, 3.8150481830029507`*^9, 
   3.815049104777178*^9, 3.815052353795186*^9, 3.815053598251502*^9, 
   3.815056192574251*^9, 3.815056425164456*^9, 3.815134404885207*^9, 
   3.815135169018804*^9, 3.815135508239394*^9, 3.815136338387425*^9, 
   3.815136652897456*^9, 3.815136704283848*^9, 3.815136820140108*^9, 
   3.8151371788399343`*^9, 3.815137386133297*^9, 3.815137528859084*^9, 
   3.8151376102479486`*^9, 3.8151378898390303`*^9, 
   3.8151387083739777`*^9},ExpressionUUID->"21240159-ff31-4463-a27b-\
1a642aceb67d"],

Cell[BoxData["1.9997507424780847`"], "Output",
 CellChangeTimes->{{3.814981120265395*^9, 3.814981131327248*^9}, 
   3.814982322478696*^9, 3.814982441351678*^9, 3.8149865133921423`*^9, 
   3.814986655025544*^9, 3.814986839542636*^9, 3.814986926371829*^9, 
   3.814988040735673*^9, 3.8150454882360153`*^9, 3.815045896143477*^9, 
   3.8150463234734383`*^9, 3.81504653750914*^9, 3.8150481830029507`*^9, 
   3.815049104777178*^9, 3.815052353795186*^9, 3.815053598251502*^9, 
   3.815056192574251*^9, 3.815056425164456*^9, 3.815134404885207*^9, 
   3.815135169018804*^9, 3.815135508239394*^9, 3.815136338387425*^9, 
   3.815136652897456*^9, 3.815136704283848*^9, 3.815136820140108*^9, 
   3.8151371788399343`*^9, 3.815137386133297*^9, 3.815137528859084*^9, 
   3.8151376102479486`*^9, 3.8151378898390303`*^9, 
   3.8151387083769503`*^9},ExpressionUUID->"63d8be46-c104-44b7-acd2-\
1f82f5126a87"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"the", " ", "i"}], "+", "n"}], "..."}], "+", 
    RowBox[{
    "n", " ", "thing", " ", "is", " ", "needed", " ", "here", " ", "because", 
     " ", "OSS", " ", "gives", " ", "back", " ", "the", " ", "same", " ", 
     "outputs", " ", "for", " ", "the", " ", "same", " ", "inputs", " ", "so",
      " ", "we", " ", "need", " ", "to", " ", "extend", " ", "the", " ", 
     "sequence", " ", "to", " ", "get", " ", "new", " ", "random", " ", 
     "numbers"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "k", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ProgressIndicator", "[", 
    RowBox[{"Dynamic", "[", "k", "]"}], "]"}], 
   RowBox[{"(*", " ", 
    RowBox[{"progress", " ", "indicator"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataLDS01", "=", " ", "estsLDS"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"dataLDS02", "=", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "n"}]}], "}"}], ",", 
          RowBox[{"f", "[", 
           RowBox[{"a", "+", 
            RowBox[{
             RowBox[{"LDSHsampler", "[", "i", "]"}], "*", "w"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataLDS03", "=", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "n", "+", "n"}]}], "}"}], ",", 
          RowBox[{"f", "[", 
           RowBox[{"a", "+", 
            RowBox[{
             RowBox[{"LDSHsampler", "[", "i", "]"}], "*", "w"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", ".5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataLDS04", "=", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "n", "+", "n", "+", "n"}]}], "}"}], ",", 
          RowBox[{"f", "[", 
           RowBox[{"a", "+", 
            RowBox[{
             RowBox[{"LDSHsampler", "[", "i", "]"}], "*", "w"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", ".75"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dataLDS05", "=", 
     RowBox[{
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"With", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", "=", 
            RowBox[{"i", "+", "n", "+", "n", "+", "n", "+", "n"}]}], "}"}], 
          ",", 
          RowBox[{"f", "[", 
           RowBox[{"a", "+", 
            RowBox[{
             RowBox[{"LDSHsampler", "[", "i", "]"}], "*", "w"}]}], "]"}]}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "n"}], "}"}]}], "]"}], "*", "w"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{"meanLDS", ",", "18"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"meanLDS2", "=", " ", 
      RowBox[{"Mean", "[", "dataLDS01", "]"}]}], ",", "18"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"meanLDS3", "=", " ", 
      RowBox[{"Mean", "[", "dataLDS03", "]"}]}], ",", "18"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"meanLDS4", "=", " ", 
      RowBox[{"Mean", "[", "dataLDS04", "]"}]}], ",", "18"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"meanLDS5", "=", " ", 
      RowBox[{"Mean", "[", "dataLDS05", "]"}]}], ",", "18"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"meansLDS", "=", 
     RowBox[{"{", 
      RowBox[{
      "meanLDS", ",", "meanLDS2", ",", "meanLDS3", ",", "meanLDS4", ",", 
       "meanLDS5"}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.814981458689967*^9, 3.814981777581563*^9}, {
   3.8149818122352047`*^9, 3.814981824835367*^9}, {3.814981878089332*^9, 
   3.814981944267727*^9}, {3.814982011904797*^9, 3.814982075616452*^9}, {
   3.814982131332909*^9, 3.8149821975911293`*^9}, {3.814982353160206*^9, 
   3.814982363463746*^9}, {3.8149824232652483`*^9, 3.8149824246135483`*^9}, {
   3.81498253088733*^9, 3.814982551966434*^9}, {3.814982588778604*^9, 
   3.814982686041481*^9}, 3.814983047978841*^9, {3.814986469340869*^9, 
   3.814986493112995*^9}, {3.814986601926852*^9, 3.814986610232779*^9}, {
   3.814986849475383*^9, 3.81498686263109*^9}, {3.814986909619237*^9, 
   3.814986909677217*^9}, {3.814987053074183*^9, 3.814987152775503*^9}, {
   3.815045999200117*^9, 3.815045999425517*^9}, {3.815046054296933*^9, 
   3.81504620300218*^9}, {3.815047500715311*^9, 3.815047610848782*^9}, {
   3.8151361813954906`*^9, 3.815136262416223*^9}, {3.815136633267426*^9, 
   3.815136637313579*^9}, {3.81513668305821*^9, 
   3.815136684660564*^9}},ExpressionUUID->"b8f1c06f-92f6-4a1b-a904-\
51df8c618bd4"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`k]]], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 3.81498307391292*^9, 3.814986513550035*^9, 
   3.814986613482963*^9, 3.8149866551734457`*^9, 3.814986864269726*^9, 
   3.814986912102133*^9, 3.814987159971717*^9, 3.814988040901102*^9, 
   3.815045488393216*^9, 3.8150458999948883`*^9, 3.815046181161035*^9, 
   3.815046218502533*^9, 3.815047574153236*^9, 3.8150481830158987`*^9, 
   3.815049104793131*^9, 3.81505235699872*^9, 3.815053598269267*^9, 
   3.815056192593522*^9, 3.815056426296769*^9, 3.8151344048973913`*^9, 
   3.815135169032323*^9, 3.815135508254983*^9, 3.8151363384043493`*^9, 
   3.815136652914818*^9, 3.815136704301605*^9, 3.815136820159545*^9, 
   3.815137178857051*^9, 3.815137386149988*^9, 3.8151375288762503`*^9, 
   3.8151376102686462`*^9, 3.815137893128344*^9, 
   3.815138708385771*^9},ExpressionUUID->"04da7150-e3c1-4121-8990-\
da18a40744e8"],

Cell[BoxData["1.99731647367898768052896230074111372232`18."], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 3.81498307391292*^9, 3.814986513550035*^9, 
   3.814986613482963*^9, 3.8149866551734457`*^9, 3.814986864269726*^9, 
   3.814986912102133*^9, 3.814987159971717*^9, 3.814988040901102*^9, 
   3.815045488393216*^9, 3.8150458999948883`*^9, 3.815046181161035*^9, 
   3.815046218502533*^9, 3.815047574153236*^9, 3.8150481830158987`*^9, 
   3.815049104793131*^9, 3.81505235699872*^9, 3.815053598269267*^9, 
   3.815056192593522*^9, 3.815056426296769*^9, 3.8151344048973913`*^9, 
   3.815135169032323*^9, 3.815135508254983*^9, 3.8151363384043493`*^9, 
   3.815136652914818*^9, 3.815136704301605*^9, 3.815136820159545*^9, 
   3.815137178857051*^9, 3.815137386149988*^9, 3.8151375288762503`*^9, 
   3.8151376102686462`*^9, 3.815137893128344*^9, 
   3.815138726814045*^9},ExpressionUUID->"4e19b5a3-57a1-4ed8-b660-\
a9a6f17dc6fa"],

Cell[BoxData["1.99731647367898812461817215080372989178`18."], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 3.81498307391292*^9, 3.814986513550035*^9, 
   3.814986613482963*^9, 3.8149866551734457`*^9, 3.814986864269726*^9, 
   3.814986912102133*^9, 3.814987159971717*^9, 3.814988040901102*^9, 
   3.815045488393216*^9, 3.8150458999948883`*^9, 3.815046181161035*^9, 
   3.815046218502533*^9, 3.815047574153236*^9, 3.8150481830158987`*^9, 
   3.815049104793131*^9, 3.81505235699872*^9, 3.815053598269267*^9, 
   3.815056192593522*^9, 3.815056426296769*^9, 3.8151344048973913`*^9, 
   3.815135169032323*^9, 3.815135508254983*^9, 3.8151363384043493`*^9, 
   3.815136652914818*^9, 3.815136704301605*^9, 3.815136820159545*^9, 
   3.815137178857051*^9, 3.815137386149988*^9, 3.8151375288762503`*^9, 
   3.8151376102686462`*^9, 3.815137893128344*^9, 
   3.815138726824802*^9},ExpressionUUID->"20e2fb55-0341-4d01-9423-\
bd3c465fe2dc"],

Cell[BoxData["1.99796416003677590467191294010262936354`18."], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 3.81498307391292*^9, 3.814986513550035*^9, 
   3.814986613482963*^9, 3.8149866551734457`*^9, 3.814986864269726*^9, 
   3.814986912102133*^9, 3.814987159971717*^9, 3.814988040901102*^9, 
   3.815045488393216*^9, 3.8150458999948883`*^9, 3.815046181161035*^9, 
   3.815046218502533*^9, 3.815047574153236*^9, 3.8150481830158987`*^9, 
   3.815049104793131*^9, 3.81505235699872*^9, 3.815053598269267*^9, 
   3.815056192593522*^9, 3.815056426296769*^9, 3.8151344048973913`*^9, 
   3.815135169032323*^9, 3.815135508254983*^9, 3.8151363384043493`*^9, 
   3.815136652914818*^9, 3.815136704301605*^9, 3.815136820159545*^9, 
   3.815137178857051*^9, 3.815137386149988*^9, 3.8151375288762503`*^9, 
   3.8151376102686462`*^9, 3.815137893128344*^9, 
   3.815138726837529*^9},ExpressionUUID->"03a26246-9a94-4336-bd6e-\
745880c5c393"],

Cell[BoxData["1.9990948936092018950461124404682777822`18."], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 3.81498307391292*^9, 3.814986513550035*^9, 
   3.814986613482963*^9, 3.8149866551734457`*^9, 3.814986864269726*^9, 
   3.814986912102133*^9, 3.814987159971717*^9, 3.814988040901102*^9, 
   3.815045488393216*^9, 3.8150458999948883`*^9, 3.815046181161035*^9, 
   3.815046218502533*^9, 3.815047574153236*^9, 3.8150481830158987`*^9, 
   3.815049104793131*^9, 3.81505235699872*^9, 3.815053598269267*^9, 
   3.815056192593522*^9, 3.815056426296769*^9, 3.8151344048973913`*^9, 
   3.815135169032323*^9, 3.815135508254983*^9, 3.8151363384043493`*^9, 
   3.815136652914818*^9, 3.815136704301605*^9, 3.815136820159545*^9, 
   3.815137178857051*^9, 3.815137386149988*^9, 3.8151375288762503`*^9, 
   3.8151376102686462`*^9, 3.815137893128344*^9, 
   3.815138726850644*^9},ExpressionUUID->"bde7ba53-ab24-4e1e-910d-\
2e50acf02dd0"],

Cell[BoxData["1.998157842861711941395697067491710186`18."], "Output",
 CellChangeTimes->{{3.814982636131226*^9, 3.814982687518718*^9}, 
   3.8149830279686813`*^9, 3.81498307391292*^9, 3.814986513550035*^9, 
   3.814986613482963*^9, 3.8149866551734457`*^9, 3.814986864269726*^9, 
   3.814986912102133*^9, 3.814987159971717*^9, 3.814988040901102*^9, 
   3.815045488393216*^9, 3.8150458999948883`*^9, 3.815046181161035*^9, 
   3.815046218502533*^9, 3.815047574153236*^9, 3.8150481830158987`*^9, 
   3.815049104793131*^9, 3.81505235699872*^9, 3.815053598269267*^9, 
   3.815056192593522*^9, 3.815056426296769*^9, 3.8151344048973913`*^9, 
   3.815135169032323*^9, 3.815135508254983*^9, 3.8151363384043493`*^9, 
   3.815136652914818*^9, 3.815136704301605*^9, 3.815136820159545*^9, 
   3.815137178857051*^9, 3.815137386149988*^9, 3.8151375288762503`*^9, 
   3.8151376102686462`*^9, 3.815137893128344*^9, 
   3.815138726854094*^9},ExpressionUUID->"5e307244-7167-41a7-a1a9-\
6632b04b3780"]
}, Open  ]],

Cell["\<\
Here we are not interested in the simulation mean but in the simulation \
variance which will tell us something about the variability of our estimators \
that in turn will tell us something about the impact of our random numbers \
generators as that\[CloseCurlyQuote]s the only thing different.\
\>", "Text",
 CellChangeTimes->{{3.814981243723913*^9, 3.81498128235463*^9}, {
  3.814986537484264*^9, 3.814986587749116*^9}, {3.814986697976181*^9, 
  3.814986716426845*^9}, {3.814987020605063*^9, 3.814987043689698*^9}, {
  3.814987190817758*^9, 3.814987220270844*^9}, {3.81498737687017*^9, 
  3.8149873932706327`*^9}},ExpressionUUID->"c6581a0b-1225-46b1-a397-\
e50d103cda1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"{", 
  RowBox[{"\"\<Var whitenoise\>\"", ",", 
   RowBox[{"ScientificForm", "[", 
    RowBox[{"Variance", "[", "meansWN", "]"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<Var LDSH\>\"", ",", 
    RowBox[{"ScientificForm", "[", 
     RowBox[{"Variance", "[", "meansLDS", "]"}], "]"}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<STD whitenoise\>\"", ",", 
   RowBox[{"ScientificForm", "[", 
    RowBox[{"StandardDeviation", "[", "meansWN", "]"}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<STD LDSH\>\"", ",", 
   RowBox[{"ScientificForm", "[", 
    RowBox[{"StandardDeviation", "[", "meansLDS", "]"}], "]"}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.814986730804784*^9, 3.81498677807471*^9}, {
  3.814986886999423*^9, 3.814986901061427*^9}, {3.814986932114275*^9, 
  3.814986972431962*^9}, {3.814987265428344*^9, 3.814987345550993*^9}, {
  3.814987905428603*^9, 3.814987948975341*^9}, {3.8151362699547377`*^9, 
  3.815136274542122*^9}, {3.8151376532528677`*^9, 
  3.8151376598892097`*^9}},ExpressionUUID->"2c401e57-8b15-4146-b159-\
8ae7a4a88558"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Var whitenoise\"\>", ",", 
   TagBox[
    InterpretationBox[
     RowBox[{"\<\"2.53987\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"-6\"\>"]}],
     2.539866741507815*^-6,
     AutoDelete->True],
    ScientificForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.814986756456806*^9, 3.814986770360147*^9}, 
   3.81498688856467*^9, {3.814986933341013*^9, 3.814986973365527*^9}, 
   3.814987274054451*^9, {3.814987320747913*^9, 3.814987346032256*^9}, {
   3.814987932186055*^9, 3.8149879496198072`*^9}, 3.814988049943355*^9, 
   3.815045497269824*^9, 3.815045917472168*^9, 3.815047660252796*^9, 
   3.815048192023107*^9, 3.815049114603355*^9, 3.815052368148282*^9, 
   3.815053607032769*^9, 3.815056201517728*^9, 3.8150564397293863`*^9, 
   3.815134413855966*^9, 3.815135181954644*^9, 3.8151355180691013`*^9, 
   3.815136340874565*^9, 3.8151366639067297`*^9, 3.8151367146069183`*^9, 
   3.81513683070157*^9, 3.8151371885033207`*^9, 3.815137404416746*^9, 
   3.8151375395100193`*^9, 3.815137629487027*^9, 3.815137911367373*^9, 
   3.815138726943091*^9},ExpressionUUID->"e92b2f90-f875-4198-83ec-\
9bb464fae2ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Var LDSH\"\>", ",", 
   TagBox[
    InterpretationBox[
     RowBox[{"\<\"5.38724\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"-7\"\>"]}],
     5.387244943813711*^-7,
     AutoDelete->True],
    ScientificForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.814986756456806*^9, 3.814986770360147*^9}, 
   3.81498688856467*^9, {3.814986933341013*^9, 3.814986973365527*^9}, 
   3.814987274054451*^9, {3.814987320747913*^9, 3.814987346032256*^9}, {
   3.814987932186055*^9, 3.8149879496198072`*^9}, 3.814988049943355*^9, 
   3.815045497269824*^9, 3.815045917472168*^9, 3.815047660252796*^9, 
   3.815048192023107*^9, 3.815049114603355*^9, 3.815052368148282*^9, 
   3.815053607032769*^9, 3.815056201517728*^9, 3.8150564397293863`*^9, 
   3.815134413855966*^9, 3.815135181954644*^9, 3.8151355180691013`*^9, 
   3.815136340874565*^9, 3.8151366639067297`*^9, 3.8151367146069183`*^9, 
   3.81513683070157*^9, 3.8151371885033207`*^9, 3.815137404416746*^9, 
   3.8151375395100193`*^9, 3.815137629487027*^9, 3.815137911367373*^9, 
   3.815138726952694*^9},ExpressionUUID->"ad9b80b1-6d47-41b0-9049-\
3aa9cfb08330"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD whitenoise\"\>", ",", 
   TagBox[
    InterpretationBox[
     RowBox[{"\<\"1.5937\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"-3\"\>"]}],
     0.0015936959375953165`,
     AutoDelete->True],
    ScientificForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.814986756456806*^9, 3.814986770360147*^9}, 
   3.81498688856467*^9, {3.814986933341013*^9, 3.814986973365527*^9}, 
   3.814987274054451*^9, {3.814987320747913*^9, 3.814987346032256*^9}, {
   3.814987932186055*^9, 3.8149879496198072`*^9}, 3.814988049943355*^9, 
   3.815045497269824*^9, 3.815045917472168*^9, 3.815047660252796*^9, 
   3.815048192023107*^9, 3.815049114603355*^9, 3.815052368148282*^9, 
   3.815053607032769*^9, 3.815056201517728*^9, 3.8150564397293863`*^9, 
   3.815134413855966*^9, 3.815135181954644*^9, 3.8151355180691013`*^9, 
   3.815136340874565*^9, 3.8151366639067297`*^9, 3.8151367146069183`*^9, 
   3.81513683070157*^9, 3.8151371885033207`*^9, 3.815137404416746*^9, 
   3.8151375395100193`*^9, 3.815137629487027*^9, 3.815137911367373*^9, 
   3.815138726955748*^9},ExpressionUUID->"28a9d5ab-2b1c-4d10-9f44-\
f63017a7e6d1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD LDSH\"\>", ",", 
   TagBox[
    InterpretationBox[
     RowBox[{"\<\"7.33979\"\>", "\[Times]", 
      SuperscriptBox["10", "\<\"-4\"\>"]}],
     0.0007339785380931592,
     AutoDelete->True],
    ScientificForm]}], "}"}]], "Output",
 CellChangeTimes->{{3.814986756456806*^9, 3.814986770360147*^9}, 
   3.81498688856467*^9, {3.814986933341013*^9, 3.814986973365527*^9}, 
   3.814987274054451*^9, {3.814987320747913*^9, 3.814987346032256*^9}, {
   3.814987932186055*^9, 3.8149879496198072`*^9}, 3.814988049943355*^9, 
   3.815045497269824*^9, 3.815045917472168*^9, 3.815047660252796*^9, 
   3.815048192023107*^9, 3.815049114603355*^9, 3.815052368148282*^9, 
   3.815053607032769*^9, 3.815056201517728*^9, 3.8150564397293863`*^9, 
   3.815134413855966*^9, 3.815135181954644*^9, 3.8151355180691013`*^9, 
   3.815136340874565*^9, 3.8151366639067297`*^9, 3.8151367146069183`*^9, 
   3.81513683070157*^9, 3.8151371885033207`*^9, 3.815137404416746*^9, 
   3.8151375395100193`*^9, 3.815137629487027*^9, 3.815137911367373*^9, 
   3.815138726959774*^9},ExpressionUUID->"62c06529-4f6c-49ed-a3d7-\
1fac8f9fc186"]
}, Open  ]],

Cell["\<\

Here we go instead for the ModelSE.\
\>", "Text",
 CellChangeTimes->{{3.814987232734621*^9, 3.8149872608578377`*^9}, {
  3.814987982187026*^9, 3.81498800961512*^9}, {3.814988096059741*^9, 
  3.814988104427932*^9}, {3.814988220464107*^9, 3.814988326799521*^9}, {
  3.8150466660708447`*^9, 3.815046675856975*^9}, {3.815047043057171*^9, 
  3.815047045556473*^9}, {3.815138745669773*^9, 
  3.8151387460739*^9}},ExpressionUUID->"8ad51b13-073f-4aa5-bb74-fc7d96ad964b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"variancedata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Variance", "[", "dataWN01", "]"}], ",", 
     RowBox[{"Variance", "[", "dataWN02", "]"}], ",", 
     RowBox[{"Variance", "[", "dataWN04", "]"}], ",", 
     RowBox[{"Variance", "[", "dataWN05", "]"}], ",", 
     RowBox[{"Variance", "[", "dataWN05", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{"\"\<STD WN ModelSE\>\"", ",", 
    RowBox[{"ModelSE", "=", 
     SqrtBox[
      RowBox[{
       RowBox[{"Total", "[", "variancedata", "]"}], "/", "m"}]]}]}], "}"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"variancedata", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Variance", "[", "dataLDS01", "]"}], ",", 
     RowBox[{"Variance", "[", "dataLDS02", "]"}], ",", 
     RowBox[{"Variance", "[", "dataLDS03", "]"}], ",", 
     RowBox[{"Variance", "[", "dataLDS04", "]"}], ",", 
     RowBox[{"Variance", "[", "dataLDS05", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<STD LDS ModelSE\>\"", ",", 
   RowBox[{"ModelSE", "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"Total", "[", "variancedata", "]"}], "/", "m"}]]}]}], 
  "}"}]}], "Input",
 CellChangeTimes->{{3.815046345244473*^9, 3.815046403699582*^9}, {
  3.815046450433317*^9, 3.8150464958853617`*^9}, {3.8150523794320507`*^9, 
  3.815052380238727*^9}, {3.815136283658721*^9, 
  3.815136315178474*^9}},ExpressionUUID->"5ab10535-9fa6-4cad-b3df-\
d397400b4cd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD WN ModelSE\"\>", ",", "0.013851402259968653`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.815046408484269*^9, 3.8150464965679073`*^9, 3.815046545396555*^9, 
   3.815047664439361*^9, 3.815048192035122*^9, 3.815049114614835*^9, {
   3.8150523730927267`*^9, 3.815052381106123*^9}, 3.8150536070560904`*^9, 
   3.815056201530426*^9, 3.815056441217239*^9, 3.8151344138682127`*^9, 
   3.815135181967493*^9, 3.815135518093624*^9, 3.815136340908111*^9, 
   3.815136663941512*^9, 3.815136714622816*^9, 3.815136830733651*^9, 
   3.815137188530192*^9, 3.815137404443077*^9, 3.815137539553261*^9, 
   3.815137629503126*^9, 3.815137914152665*^9, 
   3.8151387269874687`*^9},ExpressionUUID->"ca9f38e6-f344-4d7b-8997-\
674a7b5ccf23"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"STD LDS ModelSE\"\>", ",", "0.013815392026619563`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.815046408484269*^9, 3.8150464965679073`*^9, 3.815046545396555*^9, 
   3.815047664439361*^9, 3.815048192035122*^9, 3.815049114614835*^9, {
   3.8150523730927267`*^9, 3.815052381106123*^9}, 3.8150536070560904`*^9, 
   3.815056201530426*^9, 3.815056441217239*^9, 3.8151344138682127`*^9, 
   3.815135181967493*^9, 3.815135518093624*^9, 3.815136340908111*^9, 
   3.815136663941512*^9, 3.815136714622816*^9, 3.815136830733651*^9, 
   3.815137188530192*^9, 3.815137404443077*^9, 3.815137539553261*^9, 
   3.815137629503126*^9, 3.815137914152665*^9, 
   3.8151387269941177`*^9},ExpressionUUID->"f4be3d51-3a4b-4eaf-a6eb-\
b6ed130797c7"]
}, Open  ]],

Cell[TextData[{
 "\nNow, because we have done just 5 repetitions of our simulation we saw \
that we can\[CloseCurlyQuote]t use the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "c"], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "043b0bad-c975-4128-9039-c669f25817b9"],
 " from the Normal distribution but we need to use the ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", 
    RowBox[{"c", " "}]], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "98a6ee11-a487-4a2a-aa37-77e3be11c001"],
 "from the Student\[CloseCurlyQuote]s t distribution."
}], "Text",
 CellChangeTimes->{{3.815057453160694*^9, 3.815057560171586*^9}, {
  3.8150578597121477`*^9, 
  3.815057880932714*^9}},ExpressionUUID->"a80c2453-57eb-4678-a584-\
b76ee76e0fe7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"95", "/", "100"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", "=", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"InverseCDF", "[", 
      RowBox[{
       RowBox[{"StudentTDistribution", "[", 
        RowBox[{"m", "-", "1"}], "]"}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "\[Alpha]"}], ")"}], "/", "2"}]}], "]"}], "]"}], "//",
     "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"STD", " ", "=", 
    SqrtBox[
     RowBox[{
      RowBox[{"Total", "[", "variancedata", "]"}], "/", "m"}]]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Ci", "=", 
  FractionBox[
   RowBox[{"t", "*", "STD"}], 
   SqrtBox["m"]]}]}], "Input",
 CellChangeTimes->{{3.815056600566442*^9, 3.815056635265984*^9}, {
  3.815056683571817*^9, 3.815056805389374*^9}, {3.8150569102811117`*^9, 
  3.8150569246593*^9}, {3.815057083329153*^9, 3.815057199021508*^9}, {
  3.8150572386474943`*^9, 3.8150573120858393`*^9}, {3.815057365662183*^9, 
  3.815057392007577*^9}, {3.8150574408093987`*^9, 3.815057441191174*^9}, {
  3.815058046422263*^9, 
  3.815058046869132*^9}},ExpressionUUID->"ac485948-b1de-43b3-b2ff-\
5fa758b69ec0"],

Cell[BoxData["0.24259525374286153`"], "Output",
 CellChangeTimes->{
  3.815056612826902*^9, {3.8150566906916018`*^9, 3.815056806676353*^9}, 
   3.815056911577475*^9, {3.815057100149111*^9, 3.815057121795833*^9}, 
   3.8150571525287647`*^9, {3.815057183717806*^9, 3.8150572003966618`*^9}, {
   3.815057244824479*^9, 3.8150573125511847`*^9}, {3.815057366935111*^9, 
   3.815057392586269*^9}, 3.815057441926125*^9, 3.8150580476623697`*^9, 
   3.8151344138982773`*^9, 3.815135181997506*^9, 3.815135518117051*^9, 
   3.815136663973583*^9, 3.815136714653193*^9, 3.815136830761549*^9, 
   3.815137188565269*^9, 3.815137404476619*^9, 3.815137539592856*^9, 
   3.815137629531597*^9, 3.815137921242423*^9, 
   3.8151387270244102`*^9},ExpressionUUID->"b9a04881-2cc7-4427-a3ea-\
cf7ae2248571"]
}, Open  ]],

Cell["\<\
Of course with just 5 repetitions our CI is rather big.


\
\>", "Text",
 CellChangeTimes->{{3.81505788995427*^9, 3.815057907726656*^9}, {
   3.815057945262067*^9, 3.8150579528622026`*^9}, {3.815058037713991*^9, 
   3.8150580379584427`*^9}, {3.815073163297141*^9, 3.815073165726942*^9}, 
   3.815146926927445*^9, 
   3.815158111667453*^9},ExpressionUUID->"fb24ffb2-6d91-4a40-955b-\
e24d562217f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "sample", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sample", "[", 
   RowBox[{"n_", ",", "m_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"kn", "=", "n"}], ",", 
      RowBox[{"km", "=", "m"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"samplingf", ":=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"RandomReal", "[", "]"}], ",", 
          RowBox[{"RandomReal", "[", "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "kn"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"datasamples", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{"samplingf", ",", "km"}], "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"datatrials", "=", 
         RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"km", "+", "1"}]}], ",", 
          RowBox[{"++", "i"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"datax", "=", 
            RowBox[{"datasamples", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"datatrials", ",", 
             RowBox[{
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{"datax", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "kn"}], "}"}]}], "]"}], "*", 
              RowBox[{"(", 
               RowBox[{"1", "/", "kn"}], ")"}]}]}], "]"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"MSE", "=", 
      SqrtBox[
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"datatrials", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "tval"}], ")"}], "2"], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "km"}], "}"}]}], "]"}], "/", "km"}]]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Mean", "[", "datatrials", "]"}], "//", "N"}], ",", "MSE"}], 
       "}"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"kn", ",", "MSE"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotError", "[", 
   RowBox[{"n_", ",", "m_", ",", 
    RowBox[{"s_:", "10"}]}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dataerr", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"k", "=", "i"}], ";", 
          RowBox[{"sample", "[", 
           RowBox[{"i", ",", "m"}], "]"}]}], ")"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"n", "/", "s"}], ",", "n", ",", 
          RowBox[{"n", "/", "s"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ListLogLogPlot", "[", 
      RowBox[{"dataerr", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<Nsamples\>\"", ",", "\"\<MSE\>\""}], "}"}]}], ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Orange", ",", " ", "Bold"}], "]"}]}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"we", " ", "plot", " ", "in", " ", "LogLog", " ", "so", " ", 
      RowBox[{"we", "'"}], "re", " ", "able", " ", "to", " ", "better", " ", 
      "see", " ", "the", " ", "y"}], "-", 
     RowBox[{"error", " ", "axis"}]}], "*)"}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.81515696119702*^9, 3.815156967293865*^9}, {
   3.815157293045023*^9, 3.815157315683447*^9}, {3.815157360144375*^9, 
   3.815157380593398*^9}, {3.81515804972824*^9, 3.815158054000272*^9}, {
   3.8151588772511806`*^9, 3.815158878017379*^9}, {3.815158984486183*^9, 
   3.815159001725068*^9}, {3.815159584792307*^9, 3.815159593245043*^9}, {
   3.81516157739112*^9, 3.81516161646889*^9}, {3.815161656365549*^9, 
   3.815161693402973*^9}, 3.81516279449179*^9, {3.815163239601975*^9, 
   3.815163279469741*^9}, 
   3.8151638320746937`*^9},ExpressionUUID->"1d8ed042-2eb5-42b6-aaf2-\
d5df895804af"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "tval", ",", "MSE", ",", "n", ",", "m", ",", "k"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Boole", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], ")"}], "<", 
     RowBox[{"(", 
      RowBox[{"2", "/", "\[Pi]"}], ")"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", "disk", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<True Value\>\"", ",", 
     RowBox[{"tval", "=", 
      RowBox[{"NIntegrate", "[", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"x", ",", "y"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}], "}"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "10000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s", "=", "10"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ProgressIndicator", "[", 
  RowBox[{
   RowBox[{"Dynamic", "[", "k", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "/", "s"}], ",", "n"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"plotError", "[", 
  RowBox[{"n", ",", "m", ",", "s"}], "]"}]}], "Input",
 CellChangeTimes->{{3.815143350679665*^9, 3.815143387446274*^9}, {
   3.8151434237212543`*^9, 3.815143465137673*^9}, {3.8151436515980663`*^9, 
   3.815143708301875*^9}, {3.8151438686635723`*^9, 3.815143896912236*^9}, {
   3.815143992367415*^9, 3.815144018123756*^9}, {3.815144222585432*^9, 
   3.815144239393471*^9}, {3.815144302418865*^9, 3.815144353672772*^9}, {
   3.815144416310247*^9, 3.815144490064666*^9}, 3.815144560086236*^9, {
   3.815144592512867*^9, 3.815144630104794*^9}, {3.815144774352871*^9, 
   3.815144778064336*^9}, {3.815144811819661*^9, 3.815144827676931*^9}, {
   3.815144862078208*^9, 3.815145042192577*^9}, {3.815145513501391*^9, 
   3.8151455169119253`*^9}, {3.815145552810194*^9, 3.815145621319347*^9}, {
   3.8151463981352167`*^9, 3.8151464390146637`*^9}, {3.8151464765930147`*^9, 
   3.815146556285771*^9}, {3.815146970240553*^9, 3.815147027278458*^9}, {
   3.8151470598550787`*^9, 3.8151470609473457`*^9}, {3.815147184057414*^9, 
   3.815147268095579*^9}, {3.815147301784069*^9, 3.8151473249298563`*^9}, {
   3.815147360861998*^9, 3.815147389828747*^9}, 3.815147493636045*^9, {
   3.815147527947703*^9, 3.815147528397081*^9}, {3.81514757618729*^9, 
   3.8151476067268248`*^9}, {3.815147654491355*^9, 3.815147655460556*^9}, {
   3.815147696021014*^9, 3.8151478547857*^9}, {3.8151479161187897`*^9, 
   3.815147981353895*^9}, {3.815148012736209*^9, 3.815148141436245*^9}, {
   3.815148181081491*^9, 3.815148192979705*^9}, {3.815148254206253*^9, 
   3.81514828318592*^9}, {3.815148322318405*^9, 3.815148381330916*^9}, {
   3.815148412813479*^9, 3.815148496100367*^9}, {3.8151485313359613`*^9, 
   3.815148546503996*^9}, {3.8151486149730263`*^9, 3.815148633330717*^9}, {
   3.815148668258135*^9, 3.8151487641919518`*^9}, {3.815148805072454*^9, 
   3.8151489314780607`*^9}, 3.8151489759155283`*^9, {3.81515305147668*^9, 
   3.815153204004435*^9}, {3.81515330071644*^9, 3.815153341392211*^9}, {
   3.815153372492791*^9, 3.815153381130135*^9}, {3.815153418435788*^9, 
   3.815153527648734*^9}, {3.815153564671049*^9, 3.8151536157653723`*^9}, {
   3.815153652594046*^9, 3.815153681572878*^9}, {3.8151537261877623`*^9, 
   3.815153847909388*^9}, {3.8151538798381863`*^9, 3.815153879902811*^9}, {
   3.815155270777266*^9, 3.815155346727501*^9}, {3.8151553887410803`*^9, 
   3.8151554450535383`*^9}, {3.81515547997545*^9, 3.815155518270816*^9}, {
   3.8151555515214367`*^9, 3.8151556628549128`*^9}, {3.8151560403842773`*^9, 
   3.815156046637924*^9}, {3.8151560795299788`*^9, 3.8151561192666693`*^9}, {
   3.815156208431479*^9, 3.815156313624748*^9}, {3.81515695399658*^9, 
   3.8151569733468847`*^9}, {3.81515702271141*^9, 3.815157050181452*^9}, {
   3.815157086341565*^9, 3.815157097259666*^9}, 3.815157131746502*^9, {
   3.8151572242886353`*^9, 3.815157237449853*^9}, 3.8151573183359203`*^9, {
   3.815157388177679*^9, 3.8151575045456047`*^9}, {3.815157564642728*^9, 
   3.815157601143087*^9}, {3.815157708149349*^9, 3.81515774631044*^9}, {
   3.8151577894191427`*^9, 3.815157789642405*^9}, {3.815157838041493*^9, 
   3.815157841279608*^9}, {3.815157952616661*^9, 3.81515801199119*^9}, {
   3.815158334891712*^9, 3.815158410040886*^9}, {3.815158533521565*^9, 
   3.815158725854265*^9}, {3.815158767181306*^9, 3.8151588354256783`*^9}, {
   3.815158875882271*^9, 3.815158884498818*^9}, {3.815159015360964*^9, 
   3.815159033086454*^9}, {3.815159088913138*^9, 3.815159094155714*^9}, {
   3.8151591915818644`*^9, 3.8151591943445377`*^9}, {3.815159821872966*^9, 
   3.81515982724535*^9}, {3.815160261818424*^9, 3.815160267325697*^9}, 
   3.815160594722361*^9, {3.815161568299939*^9, 3.81516157043637*^9}, {
   3.815161715788265*^9, 3.8151617185301332`*^9}, 3.815162041386747*^9, 
   3.815162193486596*^9, {3.815162800781798*^9, 3.815162802537472*^9}, {
   3.815162893845743*^9, 3.815162896789618*^9}, {3.815163453082242*^9, 
   3.815163454631509*^9}},ExpressionUUID->"f4a8e3a4-9eda-41fb-8b8f-\
47835359c4a2"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
aWIuyS/+bOcx95101PlI4tK1DgqaePNfG80QHTnk77nxwlxH0Uv+u7U3NY7K
D9Gv4dFqWtV7Tuz2kEwy3zNT2dgnk07P6G6xLk5v/++iHeyj4yir7qYVGWY6
+rLNtFLzW/nkvG7n8aWDVbQ9Y1aNdZ9qqTB0/ZPmrndosW/M6NczpD75fuW5
uY2H6AT/9QV9ZvarkPgGLhg49Z8z8cb5OtLOTHlrflhLXzp0U55+foPadYy8
XeGno5RRk5PODDhFquKn7l8uUZP9u9Cm1plZ9N/o+xH3O2RTwyTHxa2nqGme
94HoEXv+od5Tm9evl6qltttGfNOwNJS+/WVOfI/DOqPcw6iibXCl2wQdjb7Z
aUjZa8mfa9axP+t8RvLnrHWHvLZX5FBvl5V7v++oph92Bc7/7Uupfxhq1ibl
ha3kzxZbT53KHa6jH2Z+Uiv2RBw1PhwQPL+fdC+0ffOyKa9ba/R56eLyEd9n
0skhCYtCxmqo6dP5ey+szqC1X42PLPCX+oFmzx4+mnpJqudbDvZL+fNGKX3l
9fnzB1OKaNmRytDgCyXUpXHerCY++rxwoX+jo9OLRL2O55iH77AO9sU5wBO8
ISfILcIibkrd55nUcMKtm7ZP1aLuKz7X68r22Tpy8m9TFHBCQX9/4TetbKBO
PMc86Bl6d+ylPd7mNH5HzBJ1yc0HT+72KtGKEc/hVy3239g5K0xHA7vX8rec
lCX8AetgXX/XJvm1V0n+5hhRa1G8vk9WjDrsnhqUTMvmtM/01dvJusppjZM7
JNKG735+1D5RSw9ul9hN3Z9Iazb/XV5rh46+OHomM27aeYo5Nm/84qNKqn3y
1e2O+woo1sMmodmcfPr41MNW7h+pKLPdrTELvkmngs2OHWds0pBF0qrVa6Mi
SfHrloxW63Rk6znaJamJ5B+pDYYc67kym9T3Wz+7M0S6b3J0D9QNctXSmE2e
3cv+0PPuu6twxW9aOuJ3auNQfTwZ63Ix+/jG62LE8++8o2+EHb5OIaEt69yL
0NJ0zzBzl7E6Ko9pertPxRl6FnLyrW8DHS2IrPhlq3sCxaVXrN33jz6vvfTO
9pmdQNo/1/Xw3Kym8Bs9J3U7mS1GPMd3WCfywBp376S/aImf+8dR03T0Vh3g
O8dVn8/O7vi+MiuA2g2YaX86uno+xPNwM7ct/f/IoaBmOV7hZSqqWTTw9kdr
U8g//WKfebWkviYvtOcfDXtoqYFzv7Xp+vUjT33tsqnbZRpy/nJuvee4h8ug
aa1bL/TSy72T0d/+i5/eoMxaQ8deHkge0yKD5nletR5uoSHnezut7mzPoPUb
xh7v3UVFu91GtdrTvMBYL5bq9b/jJ6drRZR1tDBsKJXS40Gzbcd5F4k4jLgc
e8159pZPSqh3lyvdrROL6WnQ+gZZraR7cox43vm+VXfViyLqO7ug9lV1CVnd
bOFZsbWEEvuU93abVSziPvLAiRzPK02X3qW6G7Im3HkinQvnxLnB45RL0yff
2BaRVx3P5LcHSoUcIBffe4rmgy6m009HqcNdNw2NXzHS3jdTQ7uKmwU+2pgq
9AC9HNvy+PSZOBUlhNVf+HPfXLJ5UcPSYfBG+iT4p86++jxntb3xyaAA1PFh
ws+7b7FeFBuqEyOeeyhq9np3UPLnvt1j/ko5H0/TraPGfFOgpZwQayvHqFJ6
Y5TDBrrY4HCgdF9xzlhfDO2x1/rvLcjXGZS1Zv+Yf16pjX6eRwHL94+eOFNF
NRwGB2xtm0/zV5V8P0wvn4bhF/urO14ir8xOxZs/1eebqn2uUFvXCf+GTdEJ
v0ccQH0xp/Pkv+c6aalO2i4P829uU6OWt+P+cNRSj2EZB6PKtRQ6uWOHkw2v
0eA1r82D7mnJSqWqs/HENToyctb29fO01DpwmNqv8y0hJ8gNeoLeYAewC9gt
7Bh2Dz8I77vv4OMfpLiXbHbe9lVLJX277Ov6Mz66SwV2DzfUeF4sRjzHvLKx
y4a2/llDDTQ/hm3wSKdJF6YHfNuklBK8LevbXS8SI563H1rv1rQrWoow1uFz
2oYvSQ+R6nmMeI55+K693eRlV3epqWPT9tEO27JFXfxym3LvxCm5om6M/szj
9IRzUj373ZSAndMeKWnmWNvV3l1TyO6Y5aURllp61nNE358/09HweK/vMgNi
yP3Qhds9DyjJamtl3JnLBZQdO9LcokLfXwbl7+9K+np96+V6yREq2ld3Q3P/
+XliHaw7utxpZrHzTVIVtblnfUgr1sG62Af7Yh2sOyI5KtjeXUfftZ329OLB
KHrZItgys3c6vWu989I/SRq6s+uSo6XeH97M/7tDiOfvFGJjvThiXB6tGfpy
t3mMihJn3Fm/JnIP+c4pavFGP8/Nba1i3mol1bifdtTmRSGtCavndOyBhub+
Ef9s3/Y02rRya1zYowiyKPWbPOQXHQ1ovnGA/RQt1Uo5eT2kdwot/2JczYd7
dFR7pKr/jzMiaFeX+hdG6PNmXn2npr3sF1AnZb/nduZayup/NXBt9zRaEL/W
YfFjFVm+tex/4M9cej0nPej9c4tIu6p5kRUNLvu46Wjbs3ML3HpdolapSSce
lSjJ/GPn2GeZBVTXYUnE7zFK8tVcrJE4rJDqLFx+xH9ZNMWs829Rc6XeTk6+
fPHgZSDZ1BrVtYbePiyuXytv2ukuhUXYdOk3T0kuFjUS3AMKSX3wYEiFn5IK
JpdOCapVSOGDPrNZl6Kk7Fe5R7L6xNK29TsP+czTUSPbYS9aumhp8/DwH7os
TKbwRxOCAnOu0VX/9E/jdfq87pzuNn+Lht69vLljkn06vTlftrSypICWNF+9
at1OJZXbPrD8ecIFUqp1zT4fpKMJR3ecCOmho8e9tk1qZBtNTnF/5Q2epaOx
musLBowMoh/2+7sdiNLQmVltA0d1TKPpa3NrOi1UUesGuxOKR+fRqL6/Pdvm
mksOV3avLtTbwzPFxszVI5V0POeY1ePdhTTuptK5zV4Vjd33bstTfV9xq2Xk
uKXBaZRxYkCzvCMaMic6WmmRTGvGXviry0QtHey6cZJ92zwa33dc8/Zr9XG5
0Fl982Eqtbt0skuBQkNtHENfD7+rpSCl3fFVv8SL3wHwuwDqJNRN0Wvadpmr
r8tm5zfz9IhRULN2x92HPVLTqC7pdV83yCKfa4tP/zI8k1a0XTnXqZ1+fdvs
NxYBcVQv2fLFrhE6ct+7eenbLDXVn/iiw69zs0TfM3J8p8MLOusow8v5TECo
ijaVP1g+bGce2Trff3nDP4cWb54W/yup6b8Tbaesv5FJ989lublE6PvGV8OX
N++voC5enQaseSPVZajTJlU+df+tls4Y9xPo9ruhzfdsu0Eeb2KHFOrjrGV5
vnbFfp2+rs59vERf38SM6rN+dbC+zkpsdyhpUAg5hZ4d7DtJR42TR7xZ4Rwq
zolzK5WzQ7Ncs6jzrD27cnarKTrBMbxTQhY1TV271/OyFKcQt8Q9lbHPwblw
TuyLc+yIX+8Xoc+Tu6K2NXo+civlrO7rW/MvHU2scP3s4udHaE5KwecZOg05
Gesc1JGoK1Ev/Z5n011dW9ofdST6dPTtPmNe9VxlqSMVy2vIc1++nHrvpd5v
ehd2VZVujKUt9hteVzhqRP1knzDaK+6YhvZmfN7vVnE6BS7Nc105V0M11u3R
XG6ZIfo+9IExX+zcZ3GwlHqPchvrrK+PPMbXnTzQs4QcPLb3T71eTLNmuAe+
HFxKt/t1/yj9VRHN9C0o+WxqMX0catb0iqpEjHiOPI+8/2yPi/n4bkVk1bHc
5fhDaR2si31xDtQNqCNwbvBA34Y+DvnHs7HrnMBZecJOYbfwG/T1faxrDvGw
9KeaC4OtHurz7w4rlw0h3+ko++Nmd2y0p0Sfib4TeocdbI6x65bXbT+du6CJ
jD2mE+tg3c0P/5yQcVxH38+/H/7DL/uEncPus7vlNHmeriW7Hj1cKipuklt+
/pM7PaeQ2ZLYbXH6fHH++WW7v1dnU/cz/xVF7ZP6ZPTNqNtQxzXUjOx12ElJ
qQOWfXLix7t0uNOocSe6lIgRfgy/bjbYativE9IodnmrY06vpfuGc7sbve7g
rRN9Fu450Fehz9qet+LVVrs7FP22U0LPn7T0tXf7j9/7XafhXlcz9X6I79G3
wa/h55Az5A6/hp/jngD3BrAb2JH478eMfTLsFHaLeh19N/wCfoI+Hn097glw
bwA/hl/jXgH3DLiXwD0F4gziDvQGPULP0DvuRXBPAjlCrqijUVej7kQdijoY
dTH6SvSZqANRF6KvQ5+Hvg59Hu59cA8UbFbxLn64Pk/4vvkq2jVC9KHoS3Ev
BbtB34s+GHUs6trDDRa08Kt9jVLfJv+rLpf6VPStqDdXbkuIC5ihE30K+haL
RYa+xirS0Oegvx7w5/lBday1og9AX3Cxpkt0Xraavm33SfvRn2WKPgl9k42x
PvVI7Pt7zRsFoo9DX4c+EX0j7glwb/D1MRdXX8cY6t/LUD9azJ+m63VdQ/5P
zOfuzUoVfS/6YNShqEuRt9Yf7P/EXp/30ReiT0Qfir70rLFfWlXsV2rdTUlq
Yx5opfTu/D5P4F4A9wToy9CnjYyfrdg/VUtvr79R1su/Jepx3FMNdHisvK3v
o5Pe5A1731fjHgz3YriXwz0d5A49oI9CX4V7EtybIA8hLyFuIo6KuG2M49lh
8/6yn5JKR7Z7HB7RWUuLTvV4ETUijryCanSOHC3FVcRZ9JHoKxHXEOdw74N7
INzLiN+TjHEP9ow4jLiMewvcYyCPi9+NjX0J+pQ/8izW2/0o3Sei74HcVy9I
S825rqQWrR1uvOlQKObhO9QVqDMQ1xHn0Vehz8I6WBd1AeoE9L3ogyszzh7f
GXaNNpzvtrBEn5dwz4V7L/gF/ARxAHEBdg8/gN/Cjy9N8N0fFSHFTfTx6OvR
J0LfsGvYee+NwbU/3ayiH82+/mhsTen/P8K6sGPYNebhu25Fx/bm56VS4vQv
3k29qRF+Br/7H8/jXV4=
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgf419MXxz/3XkR7akhLO+1E8peWSloaUmgoTRUJlZbS3mnZygrZERUh
ZO+kSAgpe4f4n5fz/j4/z/M7zz2fu865957xvvf7qzxw9DmjYpZl/Y/IsmTl
N0Z8FzMqLp76EiqtW1bW6Bij/EYlVXek0bFGRxnlMypjdLT6lVPfAkYnaC7G
VTIqKll3hixrZvS98T8ZFTY63qi05mOuK6z9FKPvjK/8Hx2rqGTe8db+q5W/
GJWSXug0wOgco+5GVSWf9hMlp4JRDclD9/rSDzk1Vce6fzf6TWsaYLKaG31s
fD2jihrzP6v708paRtUkh71pKhnMV111yGuoNbA3TTSG9kaqQ9/GKmk7Se3M
1UA6Mv6Q1lLH6A+j2kbNODfTJxq1Nf506cr6OqGr6lqojvlaSifkt1LZWH3r
anxr1aFvG5Xo1VYla8V4fjZqYbL3G31uFIzOkBxk7LPvU63sYHS20Wk5naz+
bytPNjor8z7NjTr/R98uKpmvq0p076aylc68lfQ9wuZsb2Uvo3Mz55E73+rn
Ge01fgH6GX0iW2mt9R0Mvq/o0Vvj0OtC6YH8vloD+3q+ys7Sm7HYWh+jjurX
T+PQt79K9L1A45h3jsmdbbTH+MeN7jK6mzVZ3VFGPYy/+D9rGqISHUdJP+QM
MzpP8kdIV3S8RPLoN1p90eUqo6Ead7nRIKPBRotN5iKjT41famVro8+MH6n5
mKuA1eUP7nPjNA4dr1CJjoWCzznWaLj0QqcvmdvoSKPxkk/7NUaXqf/Vkofu
M6QfciapjnUXtfFFgq9ppZXFsT/jp2sOxlxvdauNvjB+guSwN6Wt7tjg801U
HfJmGV2pvZmrMbTPVh36zlFJW8ngus4zulY6sgc3Wn1Zoy+NL2HlVCsXGT1j
/FajKkZL7Hua1r1UJbofH1zGKqNbM+9H+wqjmdLxuOA6rTRapnHs03Uq0aWS
9akYfB21zEcLGd2L3Qe3Jc7sFuNPMPrK+Ius7I0fG1/OyoWsw+hm6b6Y/irR
6abM+9B2YnC7fczoNumLXtWtvlpw3QdZeZ7RAePHWNnHqILRvZLDfPepRGZV
a7vBynVG92TO028Nfmp0EF5yWPd6jUPH2629vtHXxj+gfUSvB1Wu0Tqm6gzu
1zj6PW/jthnVMtpu9KJRbaPLjfoa1TDamLmPrtPeL9Oa8XvsHD/clPnaWFMD
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
fv/n7r/S+NHJ35U/jR6biEv/B7LPORI=
        "]], PolygonBox[CompressedData["
1:eJwtlldwVlUUhe/dfySKdAHBIBABRSKEItJiQUEdBhhhEEeEIChITYSErhMH
IyAlUpSAFTARRHiwPviivvhkd8ReUBEVFUWkBvBbs+7Dmr3W2ec/95579l7n
L5xaPrYskiSpAXmgVy5JvmMgBXvTJLmXeDVj5xO/QXeGr4EfgT8OtsC3giYg
H307+RvABPjljK0GHdBb0FWsPww+FHRmvJKxdvBP4Mvh+8mfhQ8ER9HnEa8n
fyNxDrqAeA4MAv+hGxHvIr+b2AUUMjYe3QJMZa0LGZsP/5l4AWgPJqB7gNeZ
OxIs0vrgQXgdv5kGHwn2oHsw/1Z4DfEkejMYhx4NZsCLGL8C/gVxN/ph8Ap8
J6iDdycuI/8y8Vn0pcS26K+IzUBzsAD9C/Ep8v+Cjeiv0a3AReBm9KPEE+Q2
gJ3oP9BNwZXgEbACtABryN9HvjX4C74KdIVvCK+9FZShD4b3ul3ni65Ct0u9
5ipQwFgt+gBzJsJ/Da9VgF6v78zYM+h16G3wA4wdRzcmjkBvJp5Kvecn4N0Y
2wE/xPyV6EvQPyXe4zrQEf00+YOMbYL/GP52bcAbjJ9WHYBR8F3EEubUM7cQ
3gi+lPEz6NKsdvqGv7VqaAfx+/C7diDOBd9ma58m/w5xv84RtAa1rPdDeK7G
BoDicO39zfxriD21h/A3flt9kZ1VSzCZ35dlvaCabY+uDtd2TeranIV+LHWN
DoM/l9XmPMaWEBszZ0TqnusPz8+5F8oY+1x7Qb+aumfK4b+Hv31bMBM9KqsF
ncn96OZgF/xc4rXPqG5SP6M3eh96sXoBzEaPCfe2am49+j30sdQ1ewL0A0Wp
z7Ql+Q/R1anXHIx+P3zWK/QN0OPCtacemgC/J/OS10Af8vPD57cPPQg9GP1b
4jWboIdnXiFPqta3Ca+9UueBbgre1NzEvbmIfEPqHp0DPww6ZTVZR/wn652O
YI96I9zLXUE9vz8S7n39ZiH6hXCvyHNeVB2EvU2e85bqAFwc9sBZzP9Tz0h9
xguzGi3N9lgFHxI+i8uIFSAYezd1fd+ps5ZnwAeCmeQ/A3nZGVxFLg+chU8H
reDlWW2oh6fk7JHyRnneWHSlngFKU/dOAipS95C8el6Wk2ffhp6sfcHzic3Q
H4RrQ8/sji7R2qk9T3xxeK7GbiHfJ+z16uku6I3h3pZnzEXPRq9N7HnH4deB
ofBlYDj53uqFxB5Ugd4W9j5900r09rAX6w5qg14e9tLV6CHoT7Pe1h0zI+ce
Vu/KI0+Fn6lnaY93kJ+GHg+flNqbGsJeLo/K6b4Kf2udQV/0lHCtHgad0GvD
Xqk7bom8LXy23cBN6GXhu0Z3zLXi2buWpN776LA36BscC89RTr5WzO8fCNeC
alze81JWq/Igvfve7FnaQy/tOfxuA3mnqTl7jLxFNdAT/STx+cR34CTd1+G9
N2ReuzRci/Jc3YUPhe9W3Yn94RPDvlwM+pH/KPxf4cvUvbsp7KXq4ZPh32iu
7kSdfX3We6qB6eF31rseJQ5gvY/DXqoaKEIvCN896om74WNy9n71jLxIniIv
kSfJ62rDXijPq0MfCv8XUI/+DwjvBGQ=
        "]]}]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJztmDFOAzEQRS24AjURJ3EJLRwhElRI6dNTcZI01NTcgQOkIlIkRGqaRNlc
IGiHeX/2r9LkKbLHz+MZb27mi4fHi9ba6rK1w+f0/PSn4/Pdh++bbj7w1+ev
39Xuo89etvfv15/9br28ertdn81p66Jxe7ZPMh/Lpz3bs33q8mifU/Oc5bOq
Z5pPdc80byqeaR6yfNLiNzc3N1fn59Zb//5v/Sj6PkDrm9H9Pdpb1vgqeaW+
LvV7flac0evKOu+0vqzCaXlCe9+kjR/toer5GivPs87LWONH51vWeqfGVepn
1X6k4ofWRzzv/8xL6/tZnqeW/7T9jZ6XVodpcdL8RHOaB/PaPLrvZJ0X2rwq
+6t+38iKk7a/WeeFdp9Uz6usOKPXpdKPaHUgy09VDyp9UN1n1rpo9yja/zC0
OkCLh9avoz2r1L2q+Ra9L1n5pnJ/y/JD20eV8Wne1Osbbd6x4jE3r1R/qnJa
ntDykBYn7X2Z9r6j7o3Go/1k+Y+un+p5qFInaeuN9kbLQ1qeR++Xubn5dDit
T5nX4LQ8Nx/4HgRlJDY=
    "]],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{127., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8151438983631144`*^9, 3.815144019183312*^9, 3.815144240137938*^9, {
   3.815144303547491*^9, 3.815144317091097*^9}, {3.815144463795702*^9, 
   3.81514449749343*^9}, 3.815144631986568*^9, 3.815144778842226*^9, 
   3.815144828916205*^9, {3.8151448751415*^9, 3.815144896948094*^9}, {
   3.8151449359089003`*^9, 3.8151449607616158`*^9}, {3.815144990997836*^9, 
   3.815145005015421*^9}, 3.815145045105339*^9, 3.815145518501319*^9, {
   3.815145589269052*^9, 3.815145622182261*^9}, 3.81514644267583*^9, 
   3.815146501828081*^9, 3.8151465586602373`*^9, 3.8151472694936657`*^9, {
   3.815147303148163*^9, 3.815147325921442*^9}, {3.815147364379199*^9, 
   3.815147392314911*^9}, 3.815147496417108*^9, {3.815147529391395*^9, 
   3.8151475350347157`*^9}, 3.81514762364382*^9, {3.8151476576653423`*^9, 
   3.815147684808099*^9}, {3.815147803924119*^9, 3.81514781272684*^9}, 
   3.815147855884547*^9, 3.815147921133909*^9, {3.8151479549465017`*^9, 
   3.815147982518072*^9}, 3.81514801567794*^9, {3.8151480872686872`*^9, 
   3.815148142447315*^9}, {3.815148183940206*^9, 3.815148195227728*^9}, {
   3.815148276496462*^9, 3.81514828405276*^9}, {3.815148323395906*^9, 
   3.815148354120048*^9}, 3.815148384814487*^9, {3.815148417842338*^9, 
   3.8151484635299263`*^9}, 3.815148499742024*^9, {3.815148532118895*^9, 
   3.8151485472203836`*^9}, 3.81514863473446*^9, {3.815148669331872*^9, 
   3.815148726814948*^9}, 3.815148766077772*^9, {3.815148807275044*^9, 
   3.815148856436784*^9}, 3.815148889201847*^9, {3.815148927585947*^9, 
   3.8151489584417677`*^9}, {3.8151530529338503`*^9, 3.815153086255509*^9}, 
   3.815153152509252*^9, 3.8151532067936993`*^9, {3.815153311621603*^9, 
   3.8151533424532957`*^9}, {3.815153375553236*^9, 3.815153381859412*^9}, {
   3.815153435712126*^9, 3.815153449438135*^9}, {3.8151535039071703`*^9, 
   3.815153528466461*^9}, {3.8151535798686247`*^9, 3.8151535893716908`*^9}, 
   3.815153685338834*^9, {3.815153739526896*^9, 3.815153778430765*^9}, {
   3.8151538124649687`*^9, 3.815153848913224*^9}, 3.815155273463067*^9, 
   3.815155347854739*^9, 3.815155391697692*^9, {3.815155440823853*^9, 
   3.815155446355034*^9}, {3.815155485416222*^9, 3.815155520400983*^9}, {
   3.8151555540149593`*^9, 3.8151556636800213`*^9}, 3.815156049773693*^9, {
   3.8151561023414583`*^9, 3.8151561204082813`*^9}, {3.815156283058549*^9, 
   3.8151563211095257`*^9}, 3.815156975923935*^9, 3.815157024133821*^9, 
   3.8151573270074997`*^9, 3.81515738904039*^9, 3.815157506876438*^9, 
   3.815157751499164*^9, 3.8151577911865253`*^9, 3.8151578430904503`*^9, {
   3.815157958404099*^9, 3.815157982402103*^9}, 3.815158013354391*^9, 
   3.815158057661235*^9, {3.8151583735264597`*^9, 3.815158420289419*^9}, 
   3.8151586030770807`*^9, {3.815158637780816*^9, 3.815158666091482*^9}, 
   3.8151588379148493`*^9, 3.815158886235545*^9, {3.815159040340557*^9, 
   3.815159056962131*^9}, 3.81515919744051*^9, 3.8151598444704933`*^9, 
   3.815160273392412*^9, 3.815161621318592*^9, {3.815161697606893*^9, 
   3.815161727343157*^9}, 3.815162804610757*^9, 3.815162906253168*^9, 
   3.815163455341741*^9, 
   3.815163911838264*^9},ExpressionUUID->"63896a71-88af-4194-ba5d-\
6817cec5a1c3"],

Cell[BoxData[
 ProgressIndicatorBox[Dynamic[$CellContext`k], {10, 100}]], "Output",
 CellChangeTimes->{
  3.8151438983631144`*^9, 3.815144019183312*^9, 3.815144240137938*^9, {
   3.815144303547491*^9, 3.815144317091097*^9}, {3.815144463795702*^9, 
   3.81514449749343*^9}, 3.815144631986568*^9, 3.815144778842226*^9, 
   3.815144828916205*^9, {3.8151448751415*^9, 3.815144896948094*^9}, {
   3.8151449359089003`*^9, 3.8151449607616158`*^9}, {3.815144990997836*^9, 
   3.815145005015421*^9}, 3.815145045105339*^9, 3.815145518501319*^9, {
   3.815145589269052*^9, 3.815145622182261*^9}, 3.81514644267583*^9, 
   3.815146501828081*^9, 3.8151465586602373`*^9, 3.8151472694936657`*^9, {
   3.815147303148163*^9, 3.815147325921442*^9}, {3.815147364379199*^9, 
   3.815147392314911*^9}, 3.815147496417108*^9, {3.815147529391395*^9, 
   3.8151475350347157`*^9}, 3.81514762364382*^9, {3.8151476576653423`*^9, 
   3.815147684808099*^9}, {3.815147803924119*^9, 3.81514781272684*^9}, 
   3.815147855884547*^9, 3.815147921133909*^9, {3.8151479549465017`*^9, 
   3.815147982518072*^9}, 3.81514801567794*^9, {3.8151480872686872`*^9, 
   3.815148142447315*^9}, {3.815148183940206*^9, 3.815148195227728*^9}, {
   3.815148276496462*^9, 3.81514828405276*^9}, {3.815148323395906*^9, 
   3.815148354120048*^9}, 3.815148384814487*^9, {3.815148417842338*^9, 
   3.8151484635299263`*^9}, 3.815148499742024*^9, {3.815148532118895*^9, 
   3.8151485472203836`*^9}, 3.81514863473446*^9, {3.815148669331872*^9, 
   3.815148726814948*^9}, 3.815148766077772*^9, {3.815148807275044*^9, 
   3.815148856436784*^9}, 3.815148889201847*^9, {3.815148927585947*^9, 
   3.8151489584417677`*^9}, {3.8151530529338503`*^9, 3.815153086255509*^9}, 
   3.815153152509252*^9, 3.8151532067936993`*^9, {3.815153311621603*^9, 
   3.8151533424532957`*^9}, {3.815153375553236*^9, 3.815153381859412*^9}, {
   3.815153435712126*^9, 3.815153449438135*^9}, {3.8151535039071703`*^9, 
   3.815153528466461*^9}, {3.8151535798686247`*^9, 3.8151535893716908`*^9}, 
   3.815153685338834*^9, {3.815153739526896*^9, 3.815153778430765*^9}, {
   3.8151538124649687`*^9, 3.815153848913224*^9}, 3.815155273463067*^9, 
   3.815155347854739*^9, 3.815155391697692*^9, {3.815155440823853*^9, 
   3.815155446355034*^9}, {3.815155485416222*^9, 3.815155520400983*^9}, {
   3.8151555540149593`*^9, 3.8151556636800213`*^9}, 3.815156049773693*^9, {
   3.8151561023414583`*^9, 3.8151561204082813`*^9}, {3.815156283058549*^9, 
   3.8151563211095257`*^9}, 3.815156975923935*^9, 3.815157024133821*^9, 
   3.8151573270074997`*^9, 3.81515738904039*^9, 3.815157506876438*^9, 
   3.815157751499164*^9, 3.8151577911865253`*^9, 3.8151578430904503`*^9, {
   3.815157958404099*^9, 3.815157982402103*^9}, 3.815158013354391*^9, 
   3.815158057661235*^9, {3.8151583735264597`*^9, 3.815158420289419*^9}, 
   3.8151586030770807`*^9, {3.815158637780816*^9, 3.815158666091482*^9}, 
   3.8151588379148493`*^9, 3.815158886235545*^9, {3.815159040340557*^9, 
   3.815159056962131*^9}, 3.81515919744051*^9, 3.8151598444704933`*^9, 
   3.815160273392412*^9, 3.815161621318592*^9, {3.815161697606893*^9, 
   3.815161727343157*^9}, 3.815162804610757*^9, 3.815162906253168*^9, 
   3.815163455341741*^9, 
   3.815163911860394*^9},ExpressionUUID->"bc1e0bd9-5a39-4292-b301-\
b8ae7ba5413d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{2.302585092994046, -1.8389104133503864`}, {
      2.995732273553991, -2.196907927665425}, {
      3.4011973816621555`, -2.394065973832091}, {
      3.6888794541139363`, -2.546638343922231}, {
      3.912023005428146, -2.6451825351185216`}, {
      4.0943445622221, -2.7370435500463617`}, {
      4.248495242049359, -2.8198580018658235`}, {
      4.382026634673881, -2.887760930068461}, {
      4.499809670330265, -2.9547659443684298`}, {
      4.605170185988092, -2.9864745111824367`}}]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Nsamples\"", TraditionalForm], 
    FormBox["\"MSE\"", TraditionalForm]},
  AxesOrigin->{2.217887138727013, -3.0697654537670216`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}, {
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledFrameTicks[{Log, Exp}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  LabelStyle->Directive[
    RGBColor[1, 0.5, 0], Bold],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Exp[#]& )[
         Part[#, 1]], 
        (Exp[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{2.254614570223337, 
   4.605170185988092}, {-3.0502280721731063`, -1.8389104133503864`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->FrontEndValueCache[{
     Charting`ScaledTicks[{Log, Exp}], 
     Charting`ScaledTicks[{Log, Exp}]}, {{{2.302585092994046, 
       FormBox["10", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {2.995732273553991, 
       FormBox["20", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {3.912023005428146, 
       FormBox["50", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {4.605170185988092, 
       FormBox["100", TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {1.6094379124341003`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.791759469228055, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {1.9459101490553132`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.0794415416798357`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.1972245773362196`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {2.70805020110221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.4011973816621555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.0943445622221, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.248495242049359, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.382026634673881, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {4.499809670330265, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.0106352940962555`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.298317366548036, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.703782474656201, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {5.991464547107982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {6.214608098422191, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}, {{-2.995732273553991, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.050\"", 0.05, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5902671654458267`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.075\"", 0.075, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.3025850929940455`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.100\"", 0.1, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.0794415416798357`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.125\"", 0.125, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8971199848858813`, 
       FormBox[
        TagBox[
         InterpretationBox["\"0.150\"", 0.15, AutoDelete -> True], 
         NumberForm[#, {
           DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.6888794541139363`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.506557897319982, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.3524072174927233`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.2188758248682006`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-3.101092789211817, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.900422093749666, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.8134107167600364`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.7333680090865, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.659260036932778, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.5257286443082556`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4651040224918206`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.4079456086518722`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.353878387381596, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.2537949288246137`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.2072749131897207`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.162823150618887, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.120263536200091, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.0402208285265546`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-2.0024805005437076`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.9661128563728327`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.9310215365615626`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8643301620628905`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8325814637483102`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.8018098050815563`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.7719568419318752`, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}, {-1.742969305058623, 
       FormBox[
        TemplateBox[{0., 0.}, "Spacer2"], TraditionalForm], {0.005, 0.}, {
        AbsoluteThickness[0.1]}}}}]]], "Output",
 CellChangeTimes->{
  3.8151438983631144`*^9, 3.815144019183312*^9, 3.815144240137938*^9, {
   3.815144303547491*^9, 3.815144317091097*^9}, {3.815144463795702*^9, 
   3.81514449749343*^9}, 3.815144631986568*^9, 3.815144778842226*^9, 
   3.815144828916205*^9, {3.8151448751415*^9, 3.815144896948094*^9}, {
   3.8151449359089003`*^9, 3.8151449607616158`*^9}, {3.815144990997836*^9, 
   3.815145005015421*^9}, 3.815145045105339*^9, 3.815145518501319*^9, {
   3.815145589269052*^9, 3.815145622182261*^9}, 3.81514644267583*^9, 
   3.815146501828081*^9, 3.8151465586602373`*^9, 3.8151472694936657`*^9, {
   3.815147303148163*^9, 3.815147325921442*^9}, {3.815147364379199*^9, 
   3.815147392314911*^9}, 3.815147496417108*^9, {3.815147529391395*^9, 
   3.8151475350347157`*^9}, 3.81514762364382*^9, {3.8151476576653423`*^9, 
   3.815147684808099*^9}, {3.815147803924119*^9, 3.81514781272684*^9}, 
   3.815147855884547*^9, 3.815147921133909*^9, {3.8151479549465017`*^9, 
   3.815147982518072*^9}, 3.81514801567794*^9, {3.8151480872686872`*^9, 
   3.815148142447315*^9}, {3.815148183940206*^9, 3.815148195227728*^9}, {
   3.815148276496462*^9, 3.81514828405276*^9}, {3.815148323395906*^9, 
   3.815148354120048*^9}, 3.815148384814487*^9, {3.815148417842338*^9, 
   3.8151484635299263`*^9}, 3.815148499742024*^9, {3.815148532118895*^9, 
   3.8151485472203836`*^9}, 3.81514863473446*^9, {3.815148669331872*^9, 
   3.815148726814948*^9}, 3.815148766077772*^9, {3.815148807275044*^9, 
   3.815148856436784*^9}, 3.815148889201847*^9, {3.815148927585947*^9, 
   3.8151489584417677`*^9}, {3.8151530529338503`*^9, 3.815153086255509*^9}, 
   3.815153152509252*^9, 3.8151532067936993`*^9, {3.815153311621603*^9, 
   3.8151533424532957`*^9}, {3.815153375553236*^9, 3.815153381859412*^9}, {
   3.815153435712126*^9, 3.815153449438135*^9}, {3.8151535039071703`*^9, 
   3.815153528466461*^9}, {3.8151535798686247`*^9, 3.8151535893716908`*^9}, 
   3.815153685338834*^9, {3.815153739526896*^9, 3.815153778430765*^9}, {
   3.8151538124649687`*^9, 3.815153848913224*^9}, 3.815155273463067*^9, 
   3.815155347854739*^9, 3.815155391697692*^9, {3.815155440823853*^9, 
   3.815155446355034*^9}, {3.815155485416222*^9, 3.815155520400983*^9}, {
   3.8151555540149593`*^9, 3.8151556636800213`*^9}, 3.815156049773693*^9, {
   3.8151561023414583`*^9, 3.8151561204082813`*^9}, {3.815156283058549*^9, 
   3.8151563211095257`*^9}, 3.815156975923935*^9, 3.815157024133821*^9, 
   3.8151573270074997`*^9, 3.81515738904039*^9, 3.815157506876438*^9, 
   3.815157751499164*^9, 3.8151577911865253`*^9, 3.8151578430904503`*^9, {
   3.815157958404099*^9, 3.815157982402103*^9}, 3.815158013354391*^9, 
   3.815158057661235*^9, {3.8151583735264597`*^9, 3.815158420289419*^9}, 
   3.8151586030770807`*^9, {3.815158637780816*^9, 3.815158666091482*^9}, 
   3.8151588379148493`*^9, 3.815158886235545*^9, {3.815159040340557*^9, 
   3.815159056962131*^9}, 3.81515919744051*^9, 3.8151598444704933`*^9, 
   3.815160273392412*^9, 3.815161621318592*^9, {3.815161697606893*^9, 
   3.815161727343157*^9}, 3.815162804610757*^9, 3.815162906253168*^9, 
   3.815163455341741*^9, 
   3.815163922786311*^9},ExpressionUUID->"5b4e7d78-0feb-4ee6-91ba-\
9ca297a1fcbe"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Boole", "[", 
    RowBox[{"x", "<", "y"}], "]"}]}], " ", 
  RowBox[{"(*", " ", "triangle", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<True Value\>\"", ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8151435258694067`*^9, 3.8151435368904743`*^9}, 
   3.815144035139448*^9},ExpressionUUID->"67268a53-7204-4885-8be2-\
e76d40a43240"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True Value\"\>", ",", "0.4999999999999999`"}], "}"}]], "Output",\

 CellChangeTimes->{{3.8151435311019297`*^9, 3.815143538542885*^9}, 
   3.8151440363926363`*^9},ExpressionUUID->"706c0454-d2ee-48e6-a265-\
65a4becd5b44"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJx1mwl0V8X1x4Na0VIstRY3oCKbteBe2krhllplEatowNK//lGURY1Arago
aAVEjIospX8BERqrwj8UkCUEoQF+QAhrQkIgIfu+5xcRCypCYd77zDvvTsLx
nDl3ePPy7tzvcmeCnUdNeHD0BTExMWcvjIk5P87rOujcf2slxv/jxREb5yU9
e+6/fervM21s/jrviI2PeRM2PnP2/J8iG88160tt3OV8OK/cxhvM8kobDzA/
sMbGueb9dTZ+xnxgg429P00qDvIkP2LyC/99po3Jj5j8iMmPmPyIyY+Y/IjJ
j5j8iMkvXKcmFQd103mG84uo/CIqv4jKL6Lyi6j8Iiq/iMovovKLqPwiKr+I
ys/FYfN103lm2pj8iMmPmPyIyY+Y/IjJj5j8iMmPmPzCPGpSccCr5nEYcfIi
DtcvU9UvU9UvU9UvU9UvU9UvU9UvU9UvU9UvU9XP1YnmeRVx6qTzIiY/YvIj
Jj9i8iMmP2LyIyY/YvIL61yTigPda14nIg7udJ10XsTkR0x+xORHTH7E5EdM
fsTkF9btJmlJx5vXvYjDI407XSedFzH5EZMfMfkRkx8x+RGTX9iHmqQlX2pe
xyOOLmgeadzpOum8iMmPmPyIyY+Y/IjJL+yrTdKSz5Kf1m2tc1oXNI807nSd
dF7E5EdMfsTkR0x+4T6hSVrqG8hP+5DWba1zWhc0jzTudJ10XsTkR0x+xOQX
7nuapKU+iPy0r2of0rqtdU7rguaRxp2uk86LmPyIyS/cxzVJS30d+ek+Qfuq
9iGt21rntC5oHmnc6TrpvIjJL9yXNklLfSr56b5H9wnaV7UPad3WOqd1QfNI
407XSecV7rObpKW+m/ya7+N036P7BO2r2oe0bmud07qgeaRxp+uk8+L7Evzv
3mxH77NS7eg9n2FHs2zeYTsONC/KtWOceVGBHb35Ejt6eZfZ0Xuuwo7ePlTZ
cY75QbV2vN783Ho7et/ZaPOJUX+Yb/65Jmcd+6DX8ffE/HzeE65zo1rX5LxH
f0d4fp7CVVTC83xnMM/IPKPOExwz6vqDa0aNB3AexnuAD3DPqPECDxg1fuAF
o8YTPGHU+II34T4lwBs8YtT4g1dhXwzwCM8YNT7hHaPGKzwM616j3GPe1+DU
24sTbew9n+T/vEbneerM32v8NY8PF3dhnCUqHLk41LwJ4yxB8SlVzUcUvgIc
anyCs/B8gEONU43fMA5THZxqHGt8g9PwzwtwrHGu8Q+OiTXONQ80P8J4z3V4
oHmi+RPW3QKHJ5pHml/whFjzSPNM8w8eEWueaR5qfsIzYs1DzVPNX3hIrHmq
eaz5DY+INY81z4nDuA70N4zPJB8XOxU+Az0Gdzw33iw7oHgR6DM44zlvPsvO
a70GVzxntunsUTuv9Rsc8ZxX93yFtzyF5xL7nPcdxXZe6zs44TnvNQFetd6D
C57z3hvgR+s/OOA5770BXrQfUHee894b4E/7A/XnOe+9Ad60X4AjnkPHmQ/3
04mOT3g42GZjcMI8OCP28t5jY3DCPOuJTdj1kI3BCfOsJ/Z+XLaNwQnzrCf2
6njMxuCEedYTe3UptDE4YZ71xF4dSmwMTphnPbFXhzIbgxPmWU/s1avSxuCE
edYTeziotjE4YZ71xOvNz6u1MThhnvXE9BXE4Il51of9lT43SfUdqS34+Fql
W0mOT4d9NWJxwjrty8RhPctS+Mx1fBkdAyes075LjI6Bk7DelTi+i46BE9Zp
Xw37XZHFSRhfFY6vhn23QuGryvHRsM9WKXzVOr4Z9tUaha96xyfDPlpn12kf
JA77ZqPCV6LFh9YhxjAeAt1hpP5aZxipt9YVRuqrdYSRemrdYKR+WicYqZfW
BUbqo3WAkXpo3jOy/5rnjOw3Izxn1OcGYngd9pOorau331H/u4ORee/5xf76
aXYMzyc4OEAfwjqxzemDGDUOdH+ucQDfGTUOdH+tcaD7Z42D5vvjEqdPCfO2
zOlLwjytdPqQMC+rnb6DUeNAnz81DqhvuB6JVteJw/PcW6zx133i9BnovOY3
dfbqtN2v47+dvgPd1/wP+85ev467nT4EH9D6AE68n3fI/+4Mpy/BF7R+gCPv
/Zz73D4l/PuRQF/CffQxv465Tt8Svo8vVP0L/lLk19HtY8L9cInqX+hr8DO3
rwn3x2Wqn6HP4dzn9jnhfrlS9TcVPh7pkyqcvifcP1erfqfKxzl9k9sH4UNa
H+GJxwP44fZF9NlaP+FRjnk/fVW95U+YN5vtvLe/m/w6r7d8gSfgmnlv2S7/
PTvU+W2fwvEB2WgWHPTX77d8gAfglnlvPf1W0C+Be3DKvLc+x6/zUdX3BPcX
zHvruYcI+iV9X8G895pi/3uDc56+n2DeW8+5MOiX9H1E+FxHPxX0S/r+IXyu
o58Kznn6viF8rqOfCvolfb8QPtdxLgz6JX2fwLyXF/2UPv/p+4QkR4cZwZfW
WUbdV4EfRvCjdZJR91X6/K/7Kn3eBw9ax8K/hy51dIpR91X6/K77Kn1e132V
Pp/rvkrf54Z99RPb/zAyj++hC/gYvMeX4DU+A2/DvpFjfQDeoevwCp2GN+gu
vEBHwT26CK7ROXALHukDOTd6OJmm+sDgXpl+Mdw36vvraXae5/j78D42Ov0o
69hn+hT2m76D/fbeu9fuN30B+43Ps99Jvm+z3/gw+42vst/4JPuN77Hf+Bj7
jS+x3/gMvgFe8IUwXvZbvKDr4AXdBi/oMngJ626x0tUypZsVSherlO7VKF2r
t7oFbqgzuKHO4IQ6e88lyMnG+rj3l30u219tHJR95xbZceni1wqfT5Xlh65t
PN1/t7T7YGvaxIXp8vWtyxYPuD1Del15fFarkYelwyu3bZuz67Dc+9iMfw3+
Ikf679xZnvtwrkxc0T5z/vQCGdv24Uu71BbI/ZNjX2n8foncnXiife9+JVKw
ZEnbH8eWSXZ63xV/erNMno1ULv3lkgp5+sTMPq9lVEhM1c23PVJZJd9elXHg
o6urZW6byTv/enOtvNP36sfSRtVKt1siwz9+qV46jRp1vD6xXlbOTJzxo6/O
6UJsm5o92xtl2bE/bFgUaZRdMeOSf3uiUdK6lOSWxUalftA3+W/NjErhzLwd
M55YIPEznt0+69HZdmR+zSNpXS6e8pm8WL8n5q726+Qf2y75nwWl2+XNWW/t
Wbc6IjUP9vpnj9b7JOOaVZffc3ifLDy+/D/5P8mU2cNresVNyZTNffpc2335
EVm59JUHN1x2VEpmHJAJd+bJoeq2L55ZlietD458Mnl/kXxn8iuWBSa/Uplj
8iuVria/culo8iuXZJNXpawxeVbKYLOfNXKX2c8ayTf7WSdHzX7WyXiznw0y
1uxng63znkNDXukW/6HULZ7dZ+DQ953z6E/f7pIyqW9Ubvp278UfP7Xc+uB6
3/fi9/X8xwuPJsuNCat+cnJqinOe/OGpzxfe99AuebTs26x3n0hzzpMj4otK
i148KJl3zrms3U73PPnAZRe0//XBLDk5/frbRwx37xUmPfy3O6c9liMdDqx/
OKHaPU8uXNZ95L7j+dKv/YApdS8X+t8dnCeLns/vHx8pljWr4x5YNNM9T05c
2O3wqjZl8vvDG0pT0t3z5IUp48dkxVZI9qkzz5dd5d4r/K1046mTS6pkXMeB
rS8ZFfTVT/u+1611q7c7VNXIN/3nLuyZ6J4nk38+uGP/W+rlnTHHfj70RHCe
/No83+g/H/Qt9z4wf/XoyY0Wp+B21nPt1qT9eZWtX7/iujG97/vYuSegzuAa
nNetumHSRduDc+XaK7bu2hrd4twjgAN4AC9u739fyt8rgnPl0g4X9Xzug93+
9wf3DOAE3sCjrTXJ0694IzhXvmDq7t5DgCN4Bu/Kbrt3+aNXBufLRQYX7j0F
OIOX8LT1lIL9n6wIzpUp5nvcewxwCI/h9c92Tfgi2qfI4q/UfE9wvmQenMJ7
dKC7wUmATw937j0IOEYn0I1NBkfB+XKBwaV7TwLO0RV0xsNVgO8e5nsq/H0L
+j94gA6hSwWGZwH+ve8JzpfMwxN0Cx3zeBicLweb73HvYeAROofuxZj9Cs6V
3ve49zTwbIOvbwU/jN//5IgNVufQPfTtV4ueWv37QzuszjGPvk3vOfvUka/2
W53TvxccMzJ32R1tA51jHn2LX/7MrqlLA51jHn1b9cV3Nam3Bjqnf8/3lNnP
QOeYR99Om/0KdI559O1dsx/lVuf07+08fwh0jvlxvr6tMngMdA7dQ9/uMngL
dE7/Hu6IwVOga+H71ESra9SJuqFH6BZ10ucxdIk66fMYukOd9HkMXaFO+jyG
blAn6gPf0QXqpM9j8J466fMYvKZO+jwGb6mTPo/BS+pE3eATvKNO+jwGr6gT
9RlzwaKJK19/s0+f9On3zr7uJcn8ssPaSWXjnPvqm3/QJvmZEbNtHzrq1Liy
lPSo/KDsvvgOVVHn/JKR9dOhi871a6zjPczzXJsd7wycP3qBn+9iWRH/bs+h
J9zzS+XCzaOzYqP2PXwn7+E76I+HDevxy4bPl8kEsy9RH2+Nto+kr8RX8dkL
R3T44l91m/zvCe7f8dE9KWv7P3VNqvVDRnzyiqFH47/tl+7cv+ODHr4CP2PE
57KML+Y49+/42H+M7wX37oz41GyDL/f+HR/y8FXm3L/jM2sNvoJ7d3wDH/Hw
5d6/4xMevgK9Z8QHxhr+1Dv37+i8V4+1siX15KfX7l4jF1T3PlH5zUpZ/8Y/
IzOLV9j7mk8nXdfxulnbZdCQ2y4e8sQ2iRu7+Muxv94q+SaffdLU+u4xa1fu
lbmFw+8vfHOPnLn7+O/u2Z5m72s6Gv8/JOOT+w751fBD0jWuzT31xzP8eh7x
/f2IzGuVMfH16mwZtGHJ0794I9ve1zxpdCZPkgaPWrD35WMSd+bm91698pi9
r3nL6EyR5Mw/senHbYtkzoDIut0rCu19jbdPpfLq+LsmrEovkREDb4y75EPu
/cp9nSmXdvPfaZV1VbnUx/3lTM+q4N8Fef5ZKQkbs+effLxSps7dMmfoLZU+
32vkbYODaumd36l7h8RqaZf0vS4vTK629zWdDA7qJNWcs2olwZy7uLdr8PuT
Bvljt88Gj+7bIHec/b8BW9s0yLhpi6b02rdO/X8vmy1vBl782x3fS9gonbNf
+P/sK5JkatafW//s+zts3eALPBq/YOeNC77aKXmnR3b67qadkjb67w9svmm/
rSP8gVcbe9T8pcc1B6XrezPGvvfQAV+33X9XCc9aFcwsfGRpliTPic1p95ss
X8eP2jrDL3jXtfvVF35ya44cy608PeLgUbnf+L377y7h4YAJiT2iO/Llu+sn
d/7osXyfB+59Lrz06lEsl5t6FMsQwwv3Pheeppn6lPr1KfX7g3Lp5uMEnsLb
P5l6VUhvU68KGW/0r0rW+biBr/DY08MqXw+rpJXRCfc+F15PMXitkeEGrzUy
z+hGnX8fE9znwvMfGfzW+/itkxuMjjT4utJgz0Wckzw8N8qrBs+NVgfAGyM4
RAfAFyO4QwfAEyM4QwfADyO4QgfACyM4Qgf0fS64QQf0fS44QQf0fS64QAfQ
BeoODtABdIE6U3d0AF2grtQZHUAXqCN1RQfQBepGHZOHXZ4Ye+QjeebL1yaf
2LzMjsxPvD+z6g93bJFBnS5N7/Tp53J6U9t/b+q3W57uvGJN55dSpZvhW4Yk
rTvw9boP0mWg4dNhOWv4dO68Z/Q519fnHJlr9Pgc74weF/h4L/HxXuLjuczH
c5mvrxXyR4PXCl9Pq6XW4LHKx1utj7daucPws97Xy3o5vnXg/6bd8JL0qnn2
q/Kps2Tm4xlnWk2bZe9fXjfvj8oj5v1ReTnlonP7FvVxFrXreA/reA/reA/r
eM8NV8e0vXLWhzI7Nm/F8IfetyPzvO/xq27sdv5eyNuPqL8fwcg8fHtw0nNZ
5/uivquPmHsjfi4+i+/iq/gsPoqv4pv4KD6Jb+KL+CQ+iC/ie/ggPofv4Wv4
HD6Gr+Fb+Bg+hW/hQ/gSPoPv4CP4Cj6Bb+AD+AI6j+6j4+g6Oo1uo8PoMjqL
7qKj6Co6iW6ig+giffo4v2+nD6cvHzbss7nn7wnpa/8LwZh5ig==
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNmgf81+MWx7/f52uEVCSjEqVBGlRaihQtRQrtVLQlScjWUlKJCBmlbi6y
IluK7L33CN3LxbWzwv28O5/f63dfr//5n/Ps84zznM95vr/awyf0PiVlWTZl
qywrxDflWTZBtIfoqjzydhLtnIWsatnuyqdNFVFV520tqu165O0q2lZUQbSL
y7cR7ea87ejHfHvRHuY7iGqIKop2FH0r+kz0qai6yyl7SDr8KP66qGYeOu4l
quZxGPt35Z8m2lN0TR667S2qYx3Rax9z2tU1R/d65uhb3xx9G5ij777m6LWf
Obo/orF+Fn9DNFHykaLqor9Ek0W1Ra3cnnZ756FXE9FBHo9xDvCaou+B5ujb
zBx9m5ujbwtz2rd23w1FLd0f412XR59NXYa+NUVtRfuLGomOF3URdRUlbfRZ
alNPVDePdu1FayT/Iv6m6MY8dD2EMfLgPUSHWVd0PNTzYR4dnYe+ncyZ9+Hm
6Ns5izVqbT3aWMcjXE5ZN+cdLFqrcX8Tf0vUweMw9pnKP0ZUR7SN5nKO+H6i
m/LQqafoKOtHu6PN0b2XOfoeY46+vc3Rt485eh1rju79rF93UV/PgfTZGvdY
UX3RcLen3eNK/yH+tmiox2OcRnnoOFD0jzx0HSQabL3Rd4g5+p5gTvvTqS+q
JRrm/hhve63D+cprLHpQ6VtFt4keMl8pGmm9mcd5qtdX1FC0XvSn8t4RjXJ5
f1El9XmRyg4UPSX6W3nvik62ruh4QB66jxWNdx76nmLOvCeYo+9pohNFJ4km
mY8Qnepy1u9056HvGdZptOifeYw7TjTZ5ZRdqPwBoibcB9J5uvhBohZ51J3C
GuSh99miczwH9D3XHH3PM0ff883R60LRROs+zfox/lTPgfR056HvPNEFbjfD
eWeK5ng8xnlG+uSi9yTvKp0vltxG1DoPHWeJ7shD19miS6w37ee774tEl7o/
9J3G+oia5bGux2Vh95e57lSfg+tFN4iusN7ouNB8puhyz5OymeprqKilaJnr
XSlql4dei0TP4VNE70u+Ow9drxZdY72Z97Xml3r8eZ7HDeboeJ1orstudN4C
0VLrhL7VtVaXaIz2oiUup+wml6PfbJWdKGorekG0tegD5ddS27mSDxN1yEPH
FaJ789D1Zs6Y9UZfbGix9brNHN3vsH6Mf7vnQPpO56HvCK899naX89Dx/jzG
uE+0Kos1Xc66KH8k96zoJdG2og+VX0c6Xyb5CNHheei42vOe6n16QHSL9b3b
4yzznnNmOaMPe+/RF7vH1rGpNdYbHR8zp49HPU/K1joPfV9yPfJeUT/biT6S
vM7l94jqS+crlN9N1DWPua4XbbSuT4meyeKe4n561hwdn3Ydyp5z3iOiF6wT
+s5Xn2NEHUXPu5yyF12Ofi9bR/R6xfxxzgr3gKiz6DXRDqKPlf+m+OuiLyRX
Ed9RtEHyT3ngJvAR2Al8BE4C+4AxSlgJDhYBp1Rz2a954BSwDNhlV5d9ngXG
2TMrYyawSAkzkQYTVXcabFTD6U8tg6PAP+AjcNL7kh/OAz9VcH+MV1ivEt4D
J+ydxSRK/r+Ek/bJyjipblbGUnWyMmaql5VxSfOsjJP2zcpYqr51bOgycNL+
ni+4CQwFJtmcB24CK4Fhmli3DyU/mgfeQl8wRtOsjJMOzMpYrUFWxlIHZGX8
1Mx6HGRdqdfSadq1chr9WjuNjmAPcAn+ta31xN+CicAkH0t+LA+cxHhgDLAR
eKm99USXDi4Dp4Bfulunw1xG32CHrlkZM3XMypipk/U7wmn06+x0G7cDz1X1
/Fkn8FA369nc/TEe9yP3z5IsbIU7ANsGL/Ww/ugE3jgqK+Okoz0H8npmZczU
KyvjkiFZGSf1ycpY6hjrxx14nPXt6zQ69nMa3AQ+Am98JvmJPDATWKqf161C
ClwDbkIXMMCgrIzVGA8cNdB6lvDTYOsx1LpSb5jTtBvuNPrhL0+0fiOcRr+R
TqPLKKfBTKOsc8UU+AgctFH0ZB5YCqwy1npSFwww2TqBPca5X7DDpKyMmcZn
Zcx0ivU71Wn04z6fmJXxE2lwD/2Ptn6T3e8Q98d4G1RnXR54GqwEjgOTlHw/
vhOMNMW60Qa8ARapksp4qoSZzjHh32dbpwuzwD0lLHWu9bvIZeg71Wn0m+b0
GdYDvAF2mWHdJjuPeoONlcAnu6QyViphNcb7Uuln88BVYKdZ1h895lhX6l3q
NLqCNeZav/lOo99lTqPfAqfR43Knp3vNSA819gEXgZMWWs+v8E/GRluliFGI
pXZPgV/AUPQLdrjB+oE9rs7KmOka6wf2WGz9rne6hJ9I/1t9PZ0HRke/Je4X
PLbIe4S+YIOl3vNlToOTlln/mqmMj8BFK6zPN5JfzANLoRMY5uasjI1KWAkO
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
GIx4ijdGMBh4jDcy8A/fMe63Dtgg8n3Oe8DzZd+JM0vzuM/zYk2w2a7/d+5L
MSBvmG/YnlZaT7AZ74lgLdaOd0MwP3EQb49gtqtSfDcq3O42z7ed5zbb6/dR
Hmt2WYpv0qW5fpLHXOen+I7Oei9I8f3vN4//eR7x2d+2T87wwhTfkMjDLv+b
h10uSvHthzOIvv/KwzddkeJ7J/O4PMW32z+8rp/mMSdslpi/g2mV95F5EJdi
X6tcB7u+23WQ27tOO+fd7bb4I+6rFt7nO90POuEXscFL3BdrtdnnFexKjHWh
15y7sKd9a0/dzX+KFqeIp4mvuZ8fV/q4ItYRo8lTYJNn8NFFzBmM0Ms44Tl8
cRHr8kcePhXseW2K7yj4+qck9y9iP9ZL7lvE/v3mNtRnnMJjFfaByH2sB/7z
Q3x6Cp/P3XZEiviQ+4V7hliXeI74jrV/Cd9dxJ1YI4WPYo1fAM8UsffM+888
fBTvHLx77O68v50P/8vyWrXtU8S9z5htPO6DyjuoCIxCHz/nEQegHzF1O/M9
rENV4wL2FpzyaArfU018txT2Td0arr+jeOUU9+sOKXAVeJM3g+0s93cavElM
v5P7382+nT6JxatZHsc8UujK2wZvHfta91+sP3yT5V+9Z+xXT6drut3WKXD9
tsYmyMM9HnfU1RqrRhFYfDz7n6Iv2m3r+uhb1Tozpx08L7AY7Xi72CD+ibFb
bfF9UtxVnGliZ+4lMGVTn2v4AZapW8f1m6fA4JwvMHEzy49KtzZFYFliBeIL
3jKWKq92EecOf3eBbYq3gdruk7cB0tyZe4rvleI+aJgCB3G+iLkbpvLb2n6W
G6eIOVhX4uzGltG9ifWf7LIt72spsBj93yC99irCF7IG9VLc0/AGluH1LXNm
W/ncMr9DPcfF6mPPIvJYj+Zek3YpYq9B3od2ll/D/oq4K9+QPKoIvNgyRdxW
ejc7yDK8peV3xd/xHfGW+JgicOcrkk8swh9gx3t6jth6J9v7XNs/cscU8TRn
bbna7VMEtniMs1YEXn+StSki9gArHOb664jPisDEt4o3KOJ+ZD3ae00eJqYs
Ip65WbxeETEhfXR0P08o79Ai8DSxC7Eg55E14s2NWBnbrWT77aC664uIu3ql
wJH4UsYAw4HfeqfwZ/iyZqp7XxHf4o5N4f+2/BZLefcW8R3v+BQ+D393iPIe
LyJ+Y/74M3wZ998krwFzBt+Dm1gX7mvuanAosRGx1Am+R/A7G8U/T3EPgs3P
S/Fds18KX4gfxH8Sb+BDf8gjtgSPsy7EFWC9I3irEJ2t9Pu8fxTRF9icmBPc
3UR5q4r4Roodgg/ABi2U90ARseLMFOux2Tiin3UA7xzvdZiRYm3wy9NSxKyb
jFN6e22JOXp5/dnXI1P5ra+7ZfK6WZ6aIo4E7xCX8LbBd+LpKfQFh3SRjm8X
8Z0ZzAhuADO0VN5DRcSu+AnwB9gDHMyZxXeBB4/1/rZT3bVFxG/c37x3cCcd
ju8t4ht+a/FHiojPOV9gbvxhW+WtKSJ2xcb4psj3QLAqMS14dbjKX06BZYlR
iLeJU2Yrf6ci7pq7xRsXodPt4vsVsV4zxSsXcX/RN28JxG2XKq9qEffu/eLN
i1iDD7x2rNuVytujCP/JHUasgk1PAF+k8L3zJVcr4h66k/eYIvbsWPF17q9r
incv1u1Vn7ntbXM72tZY166uA06c7j0Cr83w2QBXTvPZ6K3+H0uxHuA+3ibA
WawR7yBgfrDkTJ894jzeI4j18C3ENuznat54CtuH+G5F3H9niv9o/Y6X/ESK
8SeCR1LgoCGSn08xfj/JT6bQfYrkX1L4yZGSX09hc0Mlv5hCl/Mk/50CO1wg
uSjiDj1J/NUU+3+O5D9S4ABiPWI6viFM5v5O4XsHSX42xVwncR+n8NWjOXu2
12mSdyjCz1wkvm0RvhA/w9sZNjRAeU+nWO+x2EWKfbqHM1KErf4P+2kaag==

        "]], PolygonBox[CompressedData["
1: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
        
        "]]}]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJzt2LEOATEcx/GGVzATT9KRlUeQMEnsdpMnsZjN3sED3EQiEWYDcrEaKu31
979+LxafyL+9X9trz3C2ms47zrlX17nPx22X5+fucfSDzXVy6J/8uFr39qPK
4/+5q6+7X9TX7fv9ItdPK/4rT3JuJk9ybiZPcm4mz9JyzpVnW3NWy9N6zmq5
Wc9ZLR/rOavlYD1ntfu1nrPafak5eebNWa2feJme+v86K/2P1a5aPjhegqde
16G/z/WcoT71qU/9XO1ShzrUYd1RhzoKdXAc1/HQdY3jCs//0HbV8sHLdLXn
P47jOI7j5bjauQhvt8d6j8Pjrl+1/uC4gjPPbeXMeOUdL/YL3KKrnetwHMdx
3KKr7e84rnAOzNX/1DmojSPeDlfb13Acx3HeL/ByPHQeqq0XNY+Vv1p/ctXB
cQWPNZ/fJ8pZXA==
    "]],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8151435311019297`*^9, 3.815143538542885*^9}, 
   3.815144036477779*^9},ExpressionUUID->"e6e3f7f7-16ad-474d-a43f-\
206d08048aa9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Boole", "[", 
    RowBox[{"x", "<", 
     RowBox[{"1", "/", "\[Pi]"}]}], "]"}]}], " ", 
  RowBox[{"(*", " ", "step", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<True Value\>\"", ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"DensityPlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.815143583716885*^9, 3.815143598608924*^9}, 
   3.8151440422715063`*^9},ExpressionUUID->"5b808470-df52-4779-8ae9-\
b01cdc8f410b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True Value\"\>", ",", "0.31830988618379064`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.815143599885215*^9, 
  3.815144043106143*^9},ExpressionUUID->"6a4c2f4a-417f-4dd8-81de-\
88900ad4510a"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
Gz+5LE84qXBhUmi0XfxzO9+Se39VoXBw2vbQ+/NLxb9Z8W3LvU1cYt9wdeLt
Nw33CPfuundvn7Ve8bc88usDz7h9wiOnP2B7M7ZauGLVskkbZpt65qZYf804
EtT+/fynY1K227WPjXoCPm/UE3CyUU/A+jrlC3cy6gkY9QSMeqLaXcKoJ6q/
Vxj1BIx6Au5o1BN1vkHttnfDOb+0s0s9UdkiXGzUE9VuFT5o1BPVv0QY9QSM
egJGPQEnG/UE/LBRT8CFRj0BTzPqSf5tiw9NT7wW/553eftO/EZ4bEx6/C7H
ceHth8o/GHg5R3h290aTfX+zagUGb3jt8xV3JzrEfvzbmP1v31MiXBGVZrdk
lgtfv337lSW93XL/6uzgJ7vmVIg9Jnhf57yjlVqewemt3k++2LRK/B+9L2dY
uxEBsZePvaVw4DpTz++dJmnt+yQLZ3Y57/8y3SLcIuVyXJwzV/ibrquOTFhk
Fc6e3sW969bzwhdTDjb5KalEnrfiva1rvrzdKfY7t9X0ODHJrZ01eE9W/8O+
vRUy36G1C55o/lul8LmWWWV3D6mS+yfe2/KNUcsDwpeef77xPFutPO+NhS9M
m+AJyX67ddChG47tmaE51nS48PJ2s94hvp8Y+0+NfzrlX6Yw9h+4s7H/wNh/
YOw/1e6ifPaQv5fy2yeM/QfuZOw/db5BbfW0of417e3aoG2/3pLXe4E2INp1
/FI7s//Z/9Pv3Qfdec3/1H/3tT0b0sDdf3DEbtoU0rrPTS4+2MGuLd+x/tKN
pV9o3QyeH72/xeSFh8S+eO07BacmnhK2xm7p8Nyys+LfrNwd97PDJvY+PeeM
Hjy1UPiZN5rOX3r5gvCg0jNP+zOdwnnXtXE3b+ERfilm3Oy4MV6ti8G/PLaz
yehEnzxv0cwfvpgXqBL/Np8PiN10T40WY/COQ4uPnHg3KHoXjb3OHb9yr/AL
6z/rF/tEinCvqm1DtpzOEL40rta9I+eE9o3Bc+ZnL+9Xky32B39s2XtA6IzY
nU1+rXrpowKxPzR0/YDKG21ibzx8WfSeDg6xT1lx17i+G84Lx6y9rd/Pe4qF
P7YfW/xWnwvCj7m/fnawVi5cHN3LPn68U/jb1p2OnvC75Hmv9pv1ypKv3No+
gx8ZMHW4P65C7FeeTf/tqx8r5P6S/xxwN59fKfzpO9evOBvvE56x+PLsuJN+
Ga/TlifvuPhBldiv7nio6eibAzJ+ciTfAuL/2ZmP184bXSv+w6rLhwxsa+Zv
m/Gfj2vddKNwx/ZZs49GJ2lDX9P56cf7VFctTxN7l7ivzywefkTsP3wbP7hp
9SmxF/99fl/7mdPCZUPHL10bnac9aPh7ip8emPxWvtj5erCHe/yVm84JpyTb
m5fvLhQ+//rsJcM2Fsnzl0dNjus5uFTsf6Q12fVJ3zLhPxOv7Lrf75Tnp733
hC8w3iX2hNPDBr0Y5xH7k9vWvN1il0fGv1z7Sd7787zmfHLKmvW/aHJqi8IJ
SSd8wg+Henw5ZqDf5P6df8ppXi3jN2r1xt0LllSLvWjMtA9Do2rEvvrew5bE
syY/tDC53a2bzHhFvdh41Om25vk7aad9UbjrNuGct5Jtt4/9TnjXU1cPdBp5
Wnj+6y0XjInPl/5pfdrWxMTv7cInG917OjCuSPwrHs8K3PNjqfCHj911gzbU
pa0zuPXMueteXmH2b7tWH+v9kd0rHCkPd/hl/DMXRowoeMXs38Zdt97z8z6z
v0E/o7KF+qlcslupP3KQfwn1W+XC6GfA6GfU8SqF8X4MxvsxGO/H0BfuXjGn
w6Wg1Ee8X4CLjfcLtX5GRan23WLX39dTyT9DuKvxfQ2M77tgfHcB47sfGO/5
YL1enhO+anwvA+v1sli4i/F9DKyvX5kwvoep47uEU43vX+rzPKTHS8+vpPX0
0Xz8wlNK9O9ZYHzfVZ8XEMb3XfV5Qar3YTl/40f+Ge1O20/9Qqqcv1W/JLSe
XJhs1qP4bcMXv3+c+umTYv/u5qDtVIsTwvu/z1rbOilH/BFP2K/f3OqO5/qf
Eb68b+4Pz3gLqB8y62NspP5Zxb/jpRvabHzTQf3RefHX66FZP4dF6q35voD4
wz4z9oF3lhaUUP013yeQD1JvI/XSKc/T65X5voH8+EapnyYXRupzBfWDXrHP
jNRTs/5OidTrSlofs/7+EamvPqrffvGfauQT7Ksj9bZKO2Dwykg9D9B6BmT8
rpF+0Kzfen2vpX40KHa936iV/MN5AsZ5ourZTf11Bq1PtjDOA/AMY/+r8ymm
/C6j/tpFej10fyXli5/GM/tv7D/0n76htaMWTFsqnNGl3/62/wwJj5pzssfJ
rjulP314XGxSk7FHhSuGDNjQemSW+Lebtu/HZ9LzhQckD2m78clz0s9OvGKL
rywvkvs/HPbK+L6zysQ++pF3hg5c5BL2v3rKPj7X7KffXhU9ecmtlWJvlvLs
pa9e9Mvz1hVtXnE2qVrscVer7rgYqtHW9XKsXHCNu8Zsfm9nty3CW+9rb32r
5LBw+z5xB55KyBSemDHqsjM1T/jZXoMS02Zcq+8Gvz0rL7NRVJG23uCN6RMC
jyeUin1Co9+XPtbKJfdfjHmww8yxHrF/8PjKPau3eYXbvH5u8KFan/COz+8s
uHBvtXB82uSXr1tYI5xXuv/n7tlBrcOO5b5W1/qZ58YGynqG5wlPe2jtDU+1
DAk3WRWzt9eO7cJrpr8wNe32I8Krsqx/BA+cNu//ev7WjFfzTfsvN2fdeNUu
fEjbXDNyVZFw8Uf/aLmhy7X8NfjqFPe6Wc+7xL7649i7/rfVI9ztwOxj6TVe
4YOOIyOc/f1y/6OXm1Rc/161sKPj8Lm9smq0/wOM7/tR
   "], {
    {GrayLevel[0.8], EdgeForm[None], 
     GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxVmnf8z9UXx9/3vjMrlJmRiBQNZWQk+clqWCGKpkqyJXtL/ZRQRppIZY+E
sjWkRDJTSMv+/bQ0UH7n2Xl9Hx+/P87jnvcd55577xmvez+fUvd1bd4lJklS
8KwkSa381ojv84zyJ15nTcm7IUl6GuUxutvobKPvrb6wUQ6jnEZFVOYyOl9y
GP+D+hQyukDtuY2KGZ1tdI7RfSbvoJUHjC4yyicdSqlE3kfWZ11wvYpr3LlG
RSUPWTWMyhtVMDqsOcsalZOu6HiZ9GDcJepTWOOKSq/LNUcJoytUXmh0qWQw
/iqjktK3okr0/cR0/NiotPFHNX9loyriL5E8dM9jVFV16FhNc6DjMpPxmFE+
o2vVTlt1taNvTa0VfR8wamnUymizjfnM6AbjN1r5qdHVxv9XutQ1uvEMvZZb
e1+j841qa22s6XqjK/VdT33Rt75K9LpJ+44uN6u8TnS59u9Wo1qS11DrZB0N
JIPvxmqvrTUV0xmsMJ0GGBUwWmk02KiQ0Y9aR3Otub7ktdYcjYzaqETH29Xe
UPtUT2NaaC/4vkN9WUdbo1uk+8+a516j+8TfJsray/v1jbytpt8WoybGt5MM
1tde7cw/2GiM0TNGD2oN6NhBa0D3R4zulC799d1J1FayV9k8w4yKGP0qHbsZ
PSwZrKn7Gbr3UIm+PVWiVy/ZELo8pvIhox0md7vRXcb3Vh069jPqKJ0elQzG
91E7848zGmo0zOhZlcONfpOOg9XeXXqttnkeNyoavG8P6ThCc6Dj4yrRcYjk
MH6k6tDxCZXo8m+jvtJ3t8n9Cnsyfo2VTxoVN9pl9IVRZ6v/Q3pxLmM1BzqO
koz+OrfBasO+sGV84DmtD33nG71qNMVoovRDrzeNJhk9L3pSOn5t8+81esr4
tZRGFxpN0JoZf0J6vWz0ivgxmmeM9J2qfWe/p6lEr8mah3W8prrxRq8nPsdE
6TpW46erfYLOHNtsrboR0uk90+8Zo4uM5p6h17f2/Y3RC8bPUx06LtAc6LhQ
JTqe0tg5Rm+pDh0XqUSXt1Wi71Lt4wyjH8hFRjP1/bzW+r7VjSMOG62QbHRc
YvSGxv+t+uVGK9WOvqtUcoarVaL7FtaMbNEi6bVOctHroM13wOgd4z80Wqy2
97Q2xqzV+vn+wPqONypjlATX5ROjTdKD+T9TuSbxeEycJJ5uVh3yPk18naxj
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
O+O3P95bf1f7Lo3dobHEzMnqj7532Vyjsu60xj+teymyvpL+A8SjC/J44z6u
ut3qc7eNfSr6W8we1Q9QTNoj/sbo59pBMnZp7az7hNY+Qm3U5zCZg6K/m2Dr
38v2Kdl3ctk/f2ZN/Y2zk/aUsZ2s7nndyS80fi5l9DP5WjrXj25z2FtD47Ol
/o7TwPg09Teabsaflfp7ahkrF4JTuRsaxdTfYpdKJ/R50epfiP72XC+63WPz
/FbI+3tW7t2vNe3XWuBHqw/nUsxkz+buEb3uW9Xfa/Wjo79Vdbby7+hvz3u1
Lvrcb33GRH97+kZjkU8O5TzIX6x1YPT1Npav4hP9rH6P1ddVbPpX9DzQ2+p3
gsEVp2gnn/e1+q+i9+tj/C4r6xj1MH6jlTWNXjfaEf0NabrRtuhv5P/8hyc6
5n3M+m83vjbY2/jPiAM6vyrR4/pLVn4Q/Q2G9lap95lmtDn6+xln3iT1ccRQ
dCF3IbtN6vK5l7Ov4NyqOivuwY9a++fG1wLPG7/Vyuuj3wvxXfAydjEgum0Q
l9kPciDxl77ct9608svob3UzjHZHf3NiX9ulvnfI4gzBGOzZnanr+obRF9Hf
0sCKnCEYCdxFPABrzbS2vdHft9j7tqnvP+dzR+o6gfnxY7AQ68QvwTDc5apq
vbTzhlFL7bxz1JBe3NW4b5En2LMm0oX9ri9dOFvuYdgHb1jgEN6/cuq8yNvk
bzADsZt95e77mpVbor9Zst+3p9421WhT9HdT7qzcq3j/4Pdi7rTkeu7eB8Rz
j+Qu1VS+d0C+yH30QPQ7KXdQ7nngd+7c3Flvkr7cxbkTcAflzgem5n78Q/Q7
MvdI7nzcXcCQ/NZI7N8oHuzHvflI9LszOYE28mBt5Qh48g85BWx5g3yNdu70
R6Pf67lr7o9+39wkOczFnfJg9Hsl985D0e+e3CkPR79XZjf+++i/L3EnLiPb
6R69jfpXjF8f/d2Rux0YlPtdo+hxlhiLvbdO3Y5fNfok+rs4b2DNU7cP3r1u
S91uXjZaF/0NnneCpqnbF29XF8oGiU/7osco4vQ30WN1FfkxdsKdnpiKjRMz
WqZuWydkr9gq7zG8SYCRp1j5afQ3eGLwt9HjMHH6u+ixGp8uGv1tizeeZqnH
Gt4hWqRu3/8D9kfekA==
        "]], PolygonBox[CompressedData["
1:eJwtlnWwEFUYxfd+F7ubhkd3dz4e3dICEqIIgvAEE1SwGztGATuwu7BjHHUc
x3Ecx3Ecx266BPN35uwfZ75zdu/evfvlVsypHr84iqJYB2qAQbkonuBCA9A3
FcVA9GPweqAXugr9CLwO6I7uh34YXhMcjx6Kfg7eFAxBD0E/A28MBqL/wM7U
fXg38Dt8hu7Du4Kf4VO1P7wj+E37ggp4F/ALfJrOA+8EroRfDubCV4Nf4dN1
fnhnMIr3v45uDyahf8IeB2rBO4Af4JPBUfB2YAp8OBgMPwacD98MqvBNFfrH
8Brdaw++hU8Ah8Bbg+/gE8Fh8DbgG/h4cCC8Ffhe5wBHwNuCMZzvbXRnnRs9
Gv0mvKPOiR6JfhXeVvugG6Pv1vvAAPR52E16nvP1T373ENAn+Qx619DwPb3z
XPhG0KTwGnElgM6uaw3Z/y70waAf1+qh74QfBHqjl2M3yF+s7Zn87YPDXD4Y
wfr12g+MRQ9HvwRvCUahB6BXw/cH3cAeMAu0SI6h9l4U9pXe0Yj1J6L/RVdg
a6PXyp+gR3LshoVjoxhuhS8Nx2Y2zzdl/Uno/5JzsDX6ZGwCzbUH+iHs0coD
1qwM76Fnh6Evge8Cj6KnJOfmSCE5R5VLI8JrlVMXw3eCNayfqBxg//vQh2sd
uiX6XuWH4oK+AvsPWAufDyq5vwZ9AOgKLgO7wQfsNyPZV+PCXD5Tbg0KP6sc
uxT+J1jP+mnJtXZsmKvmerP/OuWv6iy59saGv001uAK+Re8oXAMXwLeB6sLf
3J7n71f+gtGqSfQp8BpljnZEz8fmMgd6oRdi9y5zuhZ6Nvav5B7SAD1HPkju
Oe3Q87BR5kxd9AnYv5N7UF/0qdh9yprpjl6A3Stc483Q92APlV+Se8UoMCa5
Z1wI3w5WFL6m3jImHCv1mK48/6DyG0xAX4TdAVaxfpx8zv256CLc4zqhH8Ae
KT8n957R4bXqQYO5/1Q4dyuT331GuLfpDPL1knDvkc+fDte4artROPebZHPV
wOPhmlQt1g/7tg+6U+njt8IxVmx1Tb7pie5Q+uidcM9Wr+4S9mX/bC6fytf1
s/eWzxWbCnTDMkYfag16c3KPmJTd49Xbe6OfDPcQ9Q49MzHbB/r2XqqjcA2r
duuGc6FONldO3IGtia4d7hFjs2tCtbCvfJzdQ9Q7ailG2TNLs6on+uVwjio3
W4VzsTO6TZmTqv226BbhHvBKGUPFTmuGwV8I94bhXLsFu4xrVaqr5NzskL23
cvTFcI2rtrXns2UOKveahHtP82yuHjQ+e6ZqlvZQnmTPVM3S7ug3wj1JvUgx
U211Q7cra+z5cA9R72gG/wjMQW9JngmvhXNYuatnlKutstcqZ1XLp4dnn2r6
Y+UY97cm18ynega9PblnTc6e6ZrlfdBTs3u8ent/9IzsGabZNRA9LXtmaVZV
oqdnz2DN3gHo28Ci7NjtUf1lzzzNOvn4alCd7ZuN6q/ZM0Szo1+4Fy4L/zuo
J2o2nxaepVWFZ2F1ePZqJk7Jjqli2bes5TPD/w6qafX2s8P/Furx6p3nhP9F
1EPVy88K/0uop18FX5wdqw1cu101lJ2b+4EvlHPoXck95EvFMDt3NGM+B/PQ
O5N7xvXqB9ln28a1z5Sj6B3JPfY9MCvbF5p576tm0JuSZ/K7YGb2WTQzbtD3
ZftKMbxR58+Olfa8Sd+bHRud4WvswuxY6B/uK7AAvTt5Rlwj/2bXlt65Crsk
u5bVA67FLs2ufeXgJ8r57G/RjLtZ/syOvXxynfIvO5eUc7dil2fnjt75P7Sc
CWI=
        "]]}]}, {}, {}, {}, {}},
   VertexColors->CompressedData["
1:eJzt2T+KwkAUB+DBvYK1sieZUls9grBbCfbprTyJjbW1d/AAVgoLy1rbKOoB
FDTMvP1Cmnw8XsIvmcm/z8ls/NVJKTUfKV3W+/KXv6/Lb75tH/K7fTHdn5bH
Te7Pf0br3jYPd013NdiFdTnLOZLLWc6RXM5yjuRylnMkl7OcI7mc5RzJ5Szn
SF5Lbs/uV736NueTqOO0lvOovq76V12fvJ35RB999Cm/T2nHX9p9pPY+nPPy
vbT3Ps4555xzzjnnnD/upf3H4dz3IuOa/08vbRxxzjnn3HMs55zX4qXN55xz
zjnntfgZiq/fwg==
    "]],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> Automatic, 
    "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.815143599885215*^9, 
  3.8151440431890383`*^9},ExpressionUUID->"1e1a9f11-0f77-4505-9943-\
4f3a50c85b55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "2"]}], "-", 
     SuperscriptBox["y", "2"]}]]}], "   ", 
  RowBox[{"(*", " ", "gaussian", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<True Value\>\"", ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.815140644156281*^9, 3.815140764667178*^9}, {
   3.815141016582699*^9, 3.815141050710449*^9}, {3.815141185912286*^9, 
   3.815141199610608*^9}, {3.815141261086454*^9, 3.8151412778214083`*^9}, {
   3.815141353785447*^9, 3.8151413541216908`*^9}, {3.815141410664288*^9, 
   3.815141419079089*^9}, {3.815141573432507*^9, 3.8151415880760317`*^9}, 
   3.815141720375216*^9, 3.815142408042047*^9, {3.815142461680599*^9, 
   3.815142608358486*^9}, {3.815142659660234*^9, 3.815142736338275*^9}, {
   3.815144077371375*^9, 
   3.81514409327562*^9}},ExpressionUUID->"ea62d812-22b2-4fc7-897f-\
1d0aad436ffc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True Value\"\>", ",", "0.5577462951828923`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.815141607646627*^9, 3.815141726051696*^9, 3.8151424087269773`*^9, {
   3.8151424820741367`*^9, 3.815142490720644*^9}, {3.8151425380867367`*^9, 
   3.8151425544958687`*^9}, {3.815142591360187*^9, 3.8151426089854183`*^9}, {
   3.815142670623131*^9, 3.815142675211772*^9}, 3.815142737025581*^9, {
   3.815144078911975*^9, 
   3.815144094927772*^9}},ExpressionUUID->"d3100c8e-e145-4ab8-a0bc-\
af05d39a8661"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[
    GraphicsComplexBox[CompressedData["
1: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
y9UblUjxc4sPc067Qqsb9ltdIs1Iln6jzB1rXqSK+WN0neebyadv9Oj01pdp
7KSG4Rd+tVC5sYnez6f/TRNmOgzcNtFC62OH1dDZXaNhPVxKF7XmPWXvzKVQ
a74dNCK37vovzbSyw+LP0t7coLLGAVfqP86if5bdKjux4y2KW1fnW99NBrrQ
teittSvv09ePj4yNXptOB4cfDcit/4DW6zZV+6xzOkW2mOTm9zhMyAVyAl/g
8+XY+lHdCuXQ0lozgob5R9Crkz+2Sm6bSFEOJ8ru84ghv8r7Mnw6ptLrEUsm
bg6MIfemld4uOW3NF3OGdv9tRQy921f26yK1HtH7ptW/L94tRsgdeoDcIEfI
DXJEP+gXfIHPOIcrB4dY45zLXdefgw6kkJ1//tB9f1voflzHjMufGeiBZ4+K
XcdYqOmIAPNVD4PQM/QOPUPv0BP0Br7AZ47fw4uTIjLo9uzuuyt3TRV6gZ4g
Z8gdcobcD5c7WrrwKdn6/1U2yVjUmo93bVV/ScN0ITfIEf2g3zoZg/ZMzc+i
XbrihbueyhB2CTuFXcHOYCewG9gJ7AZygxzxXfST/WrCo7fDc2mM6/Wxe+5l
CTuAXUCv0DP4AF+wa9g57Bp2Dj1Bb9AT9IZ+QceD5rcHtL8h8x7kQRjXkTf7
vL20M/ff45T6IEZ3uYPcP4D8/Ob41EPNYy/QP4l1+3Z4KfOC1Mt/zvSOlutK
uwYFu871kPuHe1x53+eLbXKdoeO0Fy4bwuR+gq/rTvFpRNpzUYMLHz9baWgQ
jYrz/EH///YHtBs4rfpT+3BRTyAvxDiKuuHrQvXjys6/I/Osj3nZvNmVo7q9
kedrYxp803aVHV/nTKeI0a6ON/3uUkP7pkO3XJX7CfBd9IP3sitHlIgZES7y
POQ5qDPOfWmaVEMXRgerDenz7qbcH4C8BHlN4MKYL4/PlOv9a+teuWTaJdeV
oCfobXzf9okrasvzr8hbkZfw55DPIG/0L75qSMeqKax+SqQxl8d08yoWQ4U9
v0jtO5eva2ZQzhDdwXK1omnP6O4JO2fL87CoT8yxG5rnVogS8tlzrU741lfx
Qg783Cvy4lVPfzSsCEkQ99HiOvJA5I3Ih5C3Xf9xgi7ZIueBYHeoe1rub5x7
zU6u74Nu5Png0++72XuLWOVyutSmorpJ8lwp8mR+7tRncPc+/XomUf1hp33s
B2jX96s7OTnYJSdRvzqlnz37Tp6Hhb2vmVck649FyXT2bWSDr8NzRX+fl/jh
0sxWIZr1eHqbNdjZarcDyhxdWS4xTEMHcIVWJRpfnCLXkb85+yy02gTtOVO3
q+5lvToYNXn11fnNJ6dP0p6PjfFbZle8pKwblzx0ntavmtx3v/bIdx7NHqTS
xI6vD917rV0fn1J0+vQZVrtCv6Bj7P31rkdztOvf4IPXCRNnPp3o8pf8XQnI
2++i2THkYDrNsg/p0aqLXEdFXs7PNTotT/1574w0KhG/ttqZr/Zr1ssR53id
ijjBz7/2f/TZ8bGrM4Te+flX1Emgk5+HBV+wb9Qd04eHvKm+X3s+tsTk86+O
9ZbnX7dd+mdQ0kx5/hV1KvxWc875Y90HvfLzsbADXmeNCL65ev8x7XlZXIf/
JXTevq3PVjMtiXvcsE73IM351rx04zOX3GxyXbzdr91C7flW1IHgk593hVxQ
F/Fzn6GOVwYsmmim7U2KxC4P0q7Xfz6e7E5Z46z+UdfjWeWjNHbBz78+frgw
ai7l0K3Y1j29o+W5V9R5/FwsnoPfmxs5jXPolivqctR38HvEAdANPu47ljv2
xtlCfuaIm+2yz4oW1x841nLOOCbz+s/yo/1mW+02LHmtb4/f3ejLRi3jY29b
89ggmltr3i0q2nni0zZtjZRdYmWzBvVviut47o3j49jo9TmUeMKpfokZYTQh
r1+nS+MfijbV73uf8B5p5LFg5hc/Nn1IW55leg/vZaBHx6jdlFeJ9GhuyDxP
j1za/b7hDqe5SaIf9Ivn8N7UrPs75+anUkTwprc/nTKI76IfXMdzOeuG/fL1
q0d0PPeHeusepgo+wTfoBh94Du8NmnroZ/sLsgWdoDt2cEq/J0km6lK7YX3P
Jna09urpmAWb9TR3ZJka167rKOh08J7nSxNoQpnnRU+MCSaPAw83RA1LoFqe
pac1K32Dti1f1KvcWiOtXpw/6UHd65Tu12qtu8M90eZeDv+hzWFrvB1V+9du
9vdoa9KiUgMcs+jJfd27CkvuU3qVqK1FI3MoyM88ZIwxVPQLOo6XG3R65O/R
tC7kyqZyz/U0ZenbCoY1KTT2yx5XTD9F0LpMutGwVwrVWv7VwWfFIqndm8Qj
D6PT6JJTyuZOkXrxHr5Ts8afQYGDHlFAUNCq3yZEC77AJ/gCn7kXfCb49DPS
vli75fcXxot+QQf6BR1JX24oXqOJbJcNfXp3xJs0GlJ6kmfZWSmUVqGzZ5vo
LDpTrrTZsiBFyA1yRD/o98HyoxN8o2Tb6epIf6+UHJpcIjvu6UKj4BN8ox/0
O6dz83d5Nax+PeRZ32NF04WeoXfoBXqCXqAn0Am6ITfIEd9FP1H1M+u8icih
HkX+3BXtlC30Cj2DbvCB5/Ae/Fqdl80T80RLw372WnRIe74R153mT+29+Yj8
vb380V3PGg6Y6azT3Yn/Dj1JN+87rXJ1NlO0vmOX7V/4iOfwXliPjPYD8+Tv
AD3rOSDmuskal95cPv/rULmvAM+V9zkZ5HRUnmcsXHLRy7QjFnocN4zs4g6I
6yfvrphsb32ubv3BsbMLr6bptxskz7DGsVmFVvVa9n4T7a4weV5tK26o33Zy
ubs17k/Lti+2d7NocX3y/mrfXpidS0+vTD0V65clWlwHn+AbfIJvPm/44lyx
Lva+8rwj+ATfoBN0g07Qne88822YNQ5NHNn49chy8nc2kGeYBv7dqFGi3KeX
k9m4WL3QdDI86to+8WooVVmU9n6BVyq1Md16nzo8mm4EVzetesB/nyaVql5o
a3rcLIpihtx0X1k6k2ZVnPVuSn4UVRpetW75Grk0MZPmunVPod8dEk+u6yrP
M4KvxCpfN+g6yFoXtF7he2xFGm1aXTraXFr+7gjyslZndU17JcjzjZt03xZq
3c1I94fa9QmZJvNK5Jnva+i9EsPl+cbxKYVb9nVMpsP9/t689leZJyNv9oh5
V2xJmxS2TiL1APtHnTltx+lx5Y/L36Ps9aJLpebukXT88NXmQ8Pc6MXGKTUd
6ySJ+2ciTMEdqybRDtOtfvXnHKdy0TEjjmUmUom2QVll1p8jY7EIn3uH5PnF
Z9F+g0Y4myhhiluFWSH/0LDoyCORs+XvjtV0nhq9brqZHL7+ueixCVcoJLDO
mU715Dm2rX+9KJ31hYnaXDY292h3i35qMr18aoI1Hiw6Y7//4R3q/eutueHu
8ncLF9dzfbRgUSw12b3QPXlgGDWY+2rdgdHyd/mcY290cu1joF07umWV6iv3
gUAOG4q51rlrzeOQZ7fxG0DjpmeSy7mm7kUmPqTlL/2Xla2RSbpf5960PxxF
0wZOci4aL3+nbOu9IrtW3XxEz35e8vbsG7kfDXSiP8jV/uAPeR2ry3N5faJu
vCzxNJ3qh0duat3COt4vX5Ne7Y78nbU2Rfd+fuwPM108ONAhcow8Lwg+IVfo
AXKEXPEd9Au6wTfeh57wPOjA8+A7qld8v6N75Tm7qBcBl0P3WyhlxtLKrt1P
ijiFuCWe+/gensN767ZtaZh2PZLs/6q1cv29GTQpsHf8wB+TSH+kmu/cZmvp
wIUlW2p+LX8XsESvxa3LVE2l263HXj11eiMNbtt+0riiqXSsS99d5954U7dH
pqT2eyMEX9761Gqnvo+kue8Kn/N4fp5+S7u+Y2e+ni57DDkw8N9ASg+sWPuf
ThHUoMHRKpW7XKMdOo9rw+fL3520D7zq1LeYtb63jLxb2BRIHUZsez71rjxH
9DSz/9BnJiPd2j0o9Ic1/nTq1uPsa25Gar3nROOLxkBa45xUu9tFI/X5pvIE
96SrVL1PY9chV01k3+fOzmctzlM3n6Ujd3uYqHdo78xU/0u0YJjTxt83memI
1+C6/Zv40a57dyZPWCB/j3VXk8aV3Dda6GzTUMcV7/2IwheGlRhroSu+J15s
6xdIzTzLHCnfx0SHRhwd8nJXMD2/UCQ6o5g89zO4+8050XZmcjpl32DUrzpa
YAk8kxGXRQ5J/Xte97tNNHZ/fl4leU6n6fyT98+0sdCBZaW/mdUjmF5Pmeo5
rqmFVvSudXfKZzdoy/KhJ66k5dDUbs9ftPC/Q36HqrXpVtJCMQsXRpasdYtO
XPONS5wQR92PpybMcLxHs1w9a3e1j6MaQUt2VLhxj4otOvT5XncDhbcfYAia
ac3zcvYMfjJH/q5jw5Orbvs3T6fSVyL7xHcIF3YCu4FcoHfoGXqHnqF36Bl6
j7hy/vmAJ5m04kGjNt5eeiofePn6uX8y6aLH1cpbgiNowZ87dhq+yqEW4V1n
DOsbIfgAX+ADfFWc8zzMrYrcdxBpqN6i+CgjDbELPvxkQDyNrF34xrQQI0Vu
3/fXNzXihJ3D7sEP7BB2Bzt0PRjfYFCYib4dN/f5kw3xdG1o7K6HM0y07pRv
Ha/wBGof1GVZ7VHZVMXtpnvyvngyvRj84nSRbNo8ft3J68YEIWfIXX/pp4s9
jstzVR6Tc8rVHWihtVXGZMcFyPN18EP4HfwQfgc/BP3wE/gF/AR+AT+BX8BP
IDfIEXKDHCE3yBF+BL+CH8Gv4AfwC9gV7Ax2BTuDXCFnyBVyhp3AbmAnsBv4
LfwYfgQ/hN/BD+F38EPoDXqE3qBH2CHsUsSFj3ECcQFxAnEBcULMh330c/g1
/Bx+DT+HX8PP4dfwc9gN7Ah2AzuqMHDX5yHH5f9bg31VVVpdHrnmynU6PLTI
KLsdcp18xrw6ow90MdPTQb7nnn+vI9133mVKjNCef/vpzL2DL0fp6PyQDR6R
4fE042TxPqfcb9KM3S0ObjqmPd/mPLlhlwEJoRTWImxWeJw8p/DleecnNc7d
ILrp7vP2fDhdGDhsUtzZ62wfZzBtX7fncYvSemp5uVh354U3xX6aRfeabW6W
mUIZB8eVGRcm92379Rnfd2rJCCEf+xYtn+5IDaOx31h+96ogzwUZzaVbXvs3
jc1/p1M9zzNnkuaFU+C818GZI7Po8WXv52esdTnyNORts5YMan2ofAq9atVi
+7rz8rxa43kPLSm1Yuhl6I+r7JfLczqvR+xrMfC2PL92vFGle95LrfXrDxkl
2nlE0ZeT2r0/6qE9nzZ2QpG+4/PiRJ6FvKvSKjejywC5r2HMydWHmvXIoD3F
Zlao8G8sFR/dsietzmDz1xmUn7jScfO4WJq606H07pBsmtC9+Km+UbFiP9S5
5Enb3KJiRN6JPBR5J/LQstNy9ndM9KXQ7PHNDfGJYn/P5MOTe2acTaQf3vff
mG6tL01zGnQcYpdEaxY7dF7zeYzIcyCH/fbLqk++lijybOTd0AfybN/YMv/8
+Lc8f9Zk86ZyFZubqc315a9SQpPp5OB/W85aqj1f5vX5qTMxgdY6Onrnq8in
2vNm7sFlWztGGajDkjN/l/S6K/ZlRYUfmpLqF0IHVl96u47k70ZN3XppfOx0
o8hrkeceNL4ekBCQQPU9Zxc+HmqgxzcLHZm/Qv5/MfC/xJyxwxsnyHn62Tfm
fPX9ZAP9XnvIZ/0s8jwa6iULue48dMAg6hbUMahTULfcf1ndo6lJnuMyLUy/
k/Ayh+2zt1DAiIhX1YMNok5D3Qa75ecuYccHWyfqG0yMpKSrF1//vQL/n0wE
/bKj47PtfmmiX9CBugx1GuSOugx88fNiictdor2DZB2KuhR1J+pQ1DmoexDH
znz7XB9lHS/y754c7uQsz3ejrkGdg7oGdQ7qWNS1iGOIa/CzJRc7NutkpQd1
A+oIxJES3zdrXv+/fV8f6xjUNahjUNeg7kUdzOME6jTUbejfFBd9I2JytqhL
UKeg/5r+U58Ossuhunbzp/rFy/Nhbitipx91ekAR7b0dNxyQ55K+2jOk/7aL
OaKOQl3Va1bZqrW+T6WoHSO8e87LoR5Bs1f7+hnZvj8jFVvRva3zkRxyDL9T
03WvPP+FOh51PfwQfgl7gF++GrOv2T1nC/WcmXw2ubSPsAesyyLOIO5g3MA4
Aj+F325KqDm97bs7dLre+a1rnCXfkEPX4J+ODaZzVL7FYM/IQZFkPlS68ZxV
UTRyuW5/71aRIm4hjsHu4QcY9zAOPmywOezl6XDaum+i4/TNMTS96znzzfhY
ejn11apHdRPEOIFxA3ECcaO768Y9Ucm5lF8qcN+WpYliXMM4t/fauotrmiVT
hYXpdfUBKTQ+oWT7DkMzKb/Q4FCHw0aqFHS638T2JgprtrnwgwrpQm/QI8YF
jBOIk4irTrud7Y0pqTSt77vGBwZmUOG/zo5tt8pM9Z93Xbe2bIYYBzEuFmn9
uPwda9wr/KHNome/xHf5o0smdf6skFPTqVkij0BegXEG4w7iNuL4kIo9P/e8
n06Bea+XbdiULcZFjJNPyvUa13JdGuV/aB+Ri2dO65q9cqjvN7ezt9d6RBPW
ds9u8NhMdu3OhSQ7SDuCXUHP0DvsAnYCvUGPsAPYBfQIvUIP0AvkALlAjpAr
6AYf0BP0Br4hB+gVeoZcIWfoBXoC35AD5AI5wa5gZxivJ5a8+vjCGgv9H4Xk
apk=
     "], {{{
        EdgeForm[], 
        RGBColor[0.148, 0.33, 0.54], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJw1UjFOw0AQXJu7GJ6RnhIk4Aeh5AUIqlgikVJA4TwizhtCBRRI+QGigyJ+
AIQuFC4MchElRWbYoVjd3u7szu7cda+GF4PUzM5ge7A8mPVhn/ALJGLq/jXO
cfD7Cvdv2BJ2kpltErOHaDZBvoC/QLyFNbBaxpoKdon6FphR4lxj1dwhPoR9
AHMfHdPL3OjPEDvNnP85OudIXJX6//makVjGOBPj5MmVqzUb81PESu3Mfd80
R1/xpTSZCrNW7Zd5fiJMKQx3aaTP/0ycs9IsK+lGPbeJ45l/0R6cL5f+jXQk
11N0/HnmfUpxcd5Cb8T8ceqc+x3X8id4n7VmYs1WutXIzXG+BscRv8B5FP09
Ysf5iH+M3nuj2oDcLe6HiN+k7s+lZ67ZWM8+Bzj5yYjjnnzPgfz34D35j6hD
Ky34XtSIfbriIudvdJ5adfxPrNsBmYhvmA==
           "]], 
          
          PolygonBox[{{1324, 630, 621, 1530}, {1479, 565, 508, 1453}, {1221, 
           180, 630, 1569}, {1531, 622, 501, 1445}, {1451, 507, 565, 1479}, {
           1545, 631, 222, 1544}, {1452, 508, 611, 1521}, {1521, 611, 517, 
           1234}, {1518, 608, 507, 1229}, {1530, 621, 622, 1531}, {1444, 501, 
           608, 1518}, {1546, 635, 623, 1532}, {1532, 623, 631, 1332}, {1457, 
           517, 635, 1546}}]}]}, {
        EdgeForm[], 
        RGBColor[0.3250374168225799, 0.4179364723657629, 0.6279971734972694], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNlTlsF1cQxnf/u28XjBTCTQuShRXb+ADJrWWXUFFRAhJFEonY1d9JbTCU
YEEBNIAtcYNBlGAccYQoBhSFBsc1AhKbNJhLgu/HfEWK0cy+N2+Ob47dtO+n
XQcaWZbdEBWix6LPEp6IT6Ys+zHPso/in0S/SG6psuyo5HO6f1lmWb9osYjv
Ed3Piv8tOiOdafFF3S/p/p1oSt+D+u4sw8fP0i/lfF7nfY2QOcM3nFj+lO5T
8f9kb7/uu0WvdPdU5w3JFxTP6zzivCm91jrL7kgekn5LGTFj7w/J7yX36X5v
Hm/QnxQdF50QDeksK8MvcSJPO7bvHR82V9juR+PzIUV8xHk5hd2qDEzbxLeU
gc+C7n4Vn0gRB/FckDyqHPolb0zhM7ffAfF20Vth9UMeON71+ZLx/EvnO/PI
4VyKHLpS6PFuJouaEe9UCj9jymNM59tdU2o7W0ZsxEgdP7iWhxuhz7tbZWAL
xuS0W/KEdB7ozXbprNL5oOiZzg+lwAV8OlLUf8l55MaWWMlvTx5YUYu9tkmd
qRHfV/X+OT0g3TdF9BtvyI935Niju+VlyGABJtR0XRU5zFXRN9jDz0IRfqjV
6RRxtafI6Znx/Gy86Z/xFD5bU9h+lAeGV/Q9LPlhipx5+0L8uzpqc1DynGeD
ufg3Rd3px9tl6KC70/aIGSzfG/8R6TTppSJ89lvvvPJpSu6VvWXUV2+Wm9Ov
haitEfbJZV8jakocTc8OcZ1M0Uf/6Ow3ybnOr6cg5B11zCv4gAUYMwNggg3s
YnPGd+jQU/hHB19fc/BZn2ecfLgjBnph0DuhS7zbvUi96ANqtuiZ+L2MWIn5
Xhn9xRvqSB163AMt7gdmkpqABTjcLCIe/JPXVucGTrsaUQfe9fjtS8/uTBn1
GPJeAkvqxFmn4582Jk3nS48xJ/RZ8b/d1uG5nnKPdRo38qicy5h7iXlCt8Nz
stX7E1/YbvMctro/T6XYp7Pe5Q/dn5dSzA37esGzOODdssV7nDzxNeDYwKDX
OBBXl+vCm3bvN/qPXNfUsRdbrL/Zs3QsRf3IacKzOWmZWlAHZpt9zW65nQKn
ecdPf10vAu+LKfg3dcwqdTsr/m0dOivrwJ9+nDMG8/4fra3D32rxZYqxdi6V
ZXqmNv6cb/CuZDfv9gwRMz3yyDsXfWwNe6eyZ0aywPmN/4nPvduxt81YMbuv
RaPSeVVF/9MH5LtJ3+Oyc78Me0dsk9ouet/BFyx3uy7MATtjyHuD+r71/qqc
3w0Tb6kHs82MX0uRy7DnuN//LPR6PQvcMTdg2PSM0Mt3vavHva/BZ9S7akMV
8a8X/wI0JB2m
           "]], 
          PolygonBox[CompressedData["
1:eJwtkjtIXGEQhf977/7eDQFfiZp2rSwW42OD2qWRqOVWKWUhhQomVoq1YlLq
dmoTNxbmIS6pVzGaYAKBjWizNhaCkGXBaKOp/A6zxXDnzJmZf+bcSeVeZ6dD
51wvlsA2vHOTgXPdgJHYuQ/gb8R7wKPgNHgKvoolGpxbA4/jp+FfwH8Gl8nv
A4+BF8En8F08coD/CZsBJ+EH4VfAL8WDh2N7U2/v0eM93BZvhNTOktMPfgCe
B0eYx39GfkD+G/gC/BD4YcJmOOb7hNhzuJ/YIvn/iFXgAuqP4B7F1vtr5Nxj
/F7sNjIN1uGfeut9h9W8zazZpclvvq2x1arntjcNpEURvOptJ+1WAC+Du8FX
kWmW96aptJWmm+AzZnwb2syVBttRu86DM940lbbS8At4v95bPdX7V107aSJt
DuuzaCftVgP30O8VdkP9FZYLTeMyXBM5O5HFxDWC/wcWa8b/yzwL+Fn4C28m
X/+4RP01NhDaP0qSewl/Gtg/7sT/Az8RWo5ydRO6DeUs6X970zpD7Af+d3Ly
oc2s2XVzuj3FUvjt2LvQNGvDPydnzlmsA9wSWy/t8NHbDegWtEMVv0RsN7Aa
1Ra9aa0b0i3dA8CnYx8=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.5060324279129026, 0.48154494271699455`, 0.5215975503643001], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNl1uMV1cVxs9//meff7QDY9VSE1MpFTQ0hQG5RE0v4YG0wlNrUgJqUaR0
eAEjLVXji7UFHoqXTlvvlNJaLInDoDWxhbGatmYYLBGvhSZmaClQpxXKgDRR
wO/H9yX2YWfts886e++11re+tc6UFWtvWdNVVdXXW1XVljwvOUOTOyWH9eL2
uqr2aX1Q809rvlNyiuS1Gg9ovbdtnT2a31JbZ1FlPZ4Xa36kbf1XJU9rLNB8
XPLylnXQnyz5CY17NR/Tu2maP6r51ZLTNQYqf8N8p+Z19vhN5f2m55m7rte+
I5JztDZX46Dmh9vef7Tt96yj81L00OHMj2jc2vJ+nH3bO/baW/m7ee/Qv0Fj
a2X9BbnnG22vY8diff9hze+rfDbzByv78Cpsb9kvPPdr/U/y26Wan2v5/ZT4
+ZMdr/+yeJ/J2fPK2nP89oy+7dH86S6v8e4G7bNd35yVvER7rGhb5474jXhw
Z+41NXfDB9Ni117ttao2FvAvfh+q/N2ZfFtqrxML9P6j9d2JEe/W6uy+lr/h
2zUt6+BX5H+j/zeNu/Tu75L7tM/P2/Y5d9jeNsZeljyksVrzg5n3VZa8m99y
nCcn1mAI/26rHNcjWSM+xAkbiTFzcAVO0cHn/YnZg1mfEgwTM/DUH1y90rb/
r29kh+56UPLjGrs0f0HyCY2Z0tkuOUOx+KjmjzQ+883c4QT41ujR+JjWZmn8
obIth7M/ebYquTaive+ojd9V2ustnhvbAO4GY+O04PCoxrHgca3uMCT5kvSv
13cLtf6wnj+j9R2sS3Y6jsm/9P11et6o9eXSf7/Wn5L++yR34bO24wsPDOTO
PA8k1gPRYX12299WOvNd+n5Y05Paf03uMyr5xbYxCj6P5d4bEt+DiTvxeS0x
6o4OufDZ3P953XNZ8LFUclPtfa9pOTdWBDMvSm+l5itz7sroXNDzl6XX0vur
NL9V82OSf63Mi+C0W+++pPVzWj8VfO8JnsmBkcSrN5w0ObnIPW+U7cc1/1Ex
BsaCvdUt5xDzm6QzrudtxXkzHn9OaNvmu8MhYBEcHk1s2Z9z1leew9tw8dLk
+Gh8BVfgC/TeJg4af2becn6Sd8tbxhH5Ak7ACJz9teJzr5C8p/Fe1zXeD7/e
nVqALvx/p86cqPEseZazjmpcaDnf8WeR/JDkjNQOvlsWzscf+GVux77eWuwz
7jWY/U7n/j8ojsXVki+E9+A/8uusxmuVcw6/k/f4eHXshDu4OzbsDU8Rx0eK
5zMlt8rOdZrPKuY3sD4UrHFf8LmhNo6W5m749xh5LbtO57wTucsRjYfgXY37
a9+D99gMnvqyP3ghHvAYub5Z84ktn3UweIaHDoef+rW+OXWEmg5uwS+cMSe8
MR7eGYv/uCvx+aD8vEX6N8vG+R1j4mfFPA2+8UWv7vB67nSN5ocll7ScNydj
L7y5JPiclrpKzMhdcpjnF7vsB2K/v8vPcM3Dse/ayraCD7BxoMt3BD+jOZNz
7i3eb0oxN1JD4Jd56QHWp85yF3wIj96eukYen0gszsYnPeH20XxzZZfxC0YO
pc7gc2omeUXubSyWzxXb92owuiRx6w8XbazNQVuST4vCY+Ql+biwY9seKPYB
duOH2xr7oQ3Ga8cSW6enTwEz1JkLiTfc2xve+E6xzlTJL3Q5L+7K+ey9OH5Z
nhjxDv/hR/ga/8Fjc4Mf8mJnOJ8cmJP7kDdn0ueB3dkd4+R5vftusV3YdyR9
zR6wmB7wcTijsa9Ha9cLzuZc8uN8MPxK+p1fS36qMebg7Mdq+xT8/iM9zqDk
TY2xdWPj2FzkyWJbX0/uL+tyjuGD3tRfzp3Xcc6O1F6bnXWwMDE8/L3iPmhM
Oj8s3geOf6M4d/bRyxZzDbxO7acHeHfHPRmxeELv39OxTyd2nLvwwV+yL/s/
VzsnsfFpyb21+RBeJF5nEzP6prfD4QPFPnxvx7UKrJ+X3B9/bmv8fn5iTB7j
C/wwNZj5frEN7Dk/8fxcl/02s+Nvflc7b9gfPhmvnU+ni/sM6jt1fjBx+Ubj
OjWUWrU0vA+HXp78B5fg+EJqBP8W1BX07inGDziqGvPNWXrT2v3CkWJ96t+i
cOrp1Nc3ib3WeyUvaxzLSZJfKcYV+KKHoJegJxrTvIf8bJz3z6ZOfKu4dztO
f1FsF7g7Hn5cHj+NB2PYQe4RqzPFHHam9ntqA3f8fXE+PSnZ3bH+iWJOBedH
cx7n/jb8vjk4oVejZxuu7feL/k8t2pF6hA+wHT/8sXZfdjI9zmjr/5x9OLnA
O3R6dJex9Drgjn6c+Z7UL+6wLvwLD3+7mOc25XzicD6x2Jl+lb51tcYp+obG
XLc5fPfvOv4p7m260wciJ2TeVcyH8CJ1gX+nc8nLCclN+rpN4duNqTfUGvKP
fwzyBS5lTr4catyvvNz4e84Dn3OK+/InG9cr9sG/v2qbW9h7fWMbu4vxi13Y
xP8WPRL44P/gmfRdDHomzvl8Y9sX6NufNv4Hf7wxd/fm32dW+Jx4EM9d6et6
Yh974Q/ugo2zi2NCz0K94z+KfbB1JLazRg3cHa5nnd7gJ43X+A8gR3fnzvD+
cDgZfx8IJvHH/vikvxg/cMP96W3g7R8Xcwc1YbiYc97Su8eKcTkvfQe9JhxA
DhPnf+oujzaO7STpTCrmjq/Shza+x+LGfRD9ED65GO/aNXpDai44RG7IOvWq
LzULn/Slnh4IjsgpcN0fbF+RvvebqWP0PRf7j9o5gA7/UqfSK98X3viA9Bc2
9vWWxtjsCYapc9S7Iek8VcydlzTucbgHd9hR/K91accxH0zcz+fsdeGAh1Iz
flGMy8uk/z9LwIbU
           "]], 
          PolygonBox[CompressedData["
1:eJwtlUlszVEUxu/r+9//M1RrallWY6yWtkJFgpgpKwsLMatgQRtEsEOxMkvM
89CS6IAmqBpCpahxpbopQdGKeVhQfl/OW5y877vfued/7z3D67WgcPryBOfc
MizAGkLnqlmoiThX6J2rhVfCz8FnwZuxGfA9+G4Gl6APijq3Cv0kuEPMuX7w
OvT24LmsbUHzWAL+z73FysQ6g6eiPyPeW/x/coDF8C/wJPRF4Bp80uDD4EXg
I6zdg1fjfxjc5O2so7FUcDnWgDaUWFP5/gl82tBWYjlodYHt/cMZh6Bne9N2
sz4Nvl33g/eFj4/ZGXSWr3xzKXhJaHgC+y+C9+E/Bz0D/4n4r2dtMfGv4rMh
tDfSW/VGH4eeCG9Dq8Dy0L+z/hr9EXwyfJPehHjNxM/A/zJ6MforeP+YmXA+
Puvw7QNvhC/FpwrfTvDz8AfEm0i8ZHg9WjlrncEbve1Nx3csvB1WErU3nRDa
G+utFVOxdUfddRT6U285U+4KWHuIVuANL8Tq4T3gSaoH7AW8JzwZ3AkrDq1G
VCtZ8NPgjlgL5ysifiJ4MP5zwd9VT+CB2Gz4e/gh3RebCX+pnIE/YfPh/+CP
udOp0GIr54/g9dh1ZzE/4nsbXgb/gU8298tlLUcYK2VvN9YuRW1N2jX8d+H/
Bj4A7UdgtbqCeFPwT2XtL9/qwvoI8Afl3NmdW8BrvdVmGvoY9E/85rL3G2vH
0S5626seyMe/Ar4abRi8DnwT7RjxPhIvi/1fAtMcVuYtJ8rNEb0XWteYabpD
d3Ara4Ph79AP4Psenglvgu+E7/KG1dPp4AxsieodawGXYr8jVlOqrUHw5RFb
awUf9BZbOVFuTni7m3Km3B3zFks1plq7E1gudSad7VZgudSZdDblULnUTDmj
98VuRGwG9ADnEcPHc6rctnmrHfXQt3hNp8dztsHbm6fFe2iNOLY1YjOmPLSe
VG+q57Z4qwnVht5gP/wsVhixb+rbmhmaHXqDo2iR0GqhmfgOfMVbLvKhz+Mz
SLNIOVVuNSMy4jW4F54Cr4rajByp3olZr1Zi57zVpGozV/PKW4+p1zRjFnrr
cfW6Zm4WPOpt1uqO80KrWdWuZlox2qTQZo2+ecHbjNGsUc3WxGde33jNbdP9
Q/u2ZsiTwGpQtaiZt8NbT6u31fPq/c+Bzf5f6LXwM96wejQxZjNWs1Y9c5y9
9wPrdfWEekMzUbNR/znDwSNDm6X6TxoF7hKzt1FO7hK7MbRZoxpJAZ8K7O01
Y1fD/wPoY+E5
           "]]}]}, {
        EdgeForm[], 
        RGBColor[
        0.6870274390032253, 0.5451534130682261, 0.41519792723133087`], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFmGuwl1UVxt//+757v4oc7ItMF+mCDQInHanMRjuYVgRoAzYwoB4QD7eC
Y4YCadOMXNIZ09Jmwlt5DnJLEGwmEMFxJgUO2BWQTPtANtMMcKjpgJr1Iaj1
43kYPuyz13+9a9/Wftaz1j6f6Lrz698qi6LY0SqKKvoR8edEyPOjTY32drTe
0C8Ioxzt4pDHhu61aCtD7g1dT7T2kO8I3fvRdob8bMzzmVK/749+YV0Uo0Oe
FfrukG+LfnDoHwr5glK/sZkXY/fF7zkh7/W4bo/9QS37PYXG8HtQ9A/WktFP
zEXRFrqtqSg6YszL0RaH/pLQ9YW8IuSh0S8L+6tDPhr2e+P30rCfXWvdF0M/
viU99m9kzdOdzq33QqGzdfu8Ixv5ZEd8GxE2B0J+NPRfC3lfyEsKrbk82kX2
3QTPvz90+6IfiPnbS/kc38+IdjTalvg2L/qT0V4KeUP4akype5oTbYB1Q//T
2Oc/2XfMt76SzFl6ok3xPf4o1vhLyF+O/f640Drsc0rMd7Aluysarbs75rms
0X5eCfnmsDnieZ6JtUbFGjc2Go+/mG9yKb/x+9KQD7V0zvZK/mU/f+Buo1+X
dcez/Xtqqb0xD/jjfJtDXhNjl4bNajDVyA+vxe8ltfSd8ftYpd/Iqy0zFn+v
sM+RuYMJhdaZenatUlgEU5yHc10Rfro7fv8x2pBobY3w/WzoN8f3TZXu/rIk
/TifZWTo+2LOwWH/XMgb4vvoSnrOeLfnYz3mwIa7J1Y2e05sR3meW6O/Odrw
0E+3PJ14DfsXS2F7IPpXK+F5VyX5mkLftpfCHjq+gf2rsuYbHHv7diUb4m5I
rTnnFufWw1djw/7K+N0RfUd8X9WSP1cYz5MqxccO72dD1pnA9XhjHD8XWedv
Rf9w0l1dkoS5g8bhTfH9dcfHqEb4ebkWhg75vsAfsQGuLy+FVX5PrrQn9jPF
82H7Ttb8y2Ktj4Z8OOQfJtktNx56KumZ8/tJa7H+UuMMTP0j9DNjvcujHxFt
SchVFrY/5fvlfm7xHf0ybM4Pm69m8Qq8Bv7nldI3pbB3wHhAv9/fiGfmPcNF
Wfr3aq3TbsxwD20t3Tu42Vhp3KNJMUvsfjeJl+Cnr2TF1XkhT4y5bqjF58ey
4vZvSb6fYP//PvTjQv+B0F+YxMG/Cd1NlXAABg4mYW1rNjaNVfiPObl//ME8
Z3xiDO1PikXwiP/h5htLcTb7BQfs4a5KHAqGT2Zx664kTHV4n0ey+P2V0Pcl
xdKJWmPGmv9/m5V7fm2+x545trWEbfD/p6w9vJ3E2Z8sNf53od8K17KufXR9
o7zW7rFbiN9o00K+E+6Itf4c4+7xXNeF/SLf8Xm+e+55WKGcxv2Tv9rMQ8T+
rug7a/H/npBn1uL/3SHPqPX9kDHEuBcr9YyFi2aFzfZCOQsZPfMxFpwPNhex
Lucb5vM85HzKPi70focUwkz2nt8ktuFm8nOpNV5wPQCuqAm+Gec/AZ9kzTXI
eyNWO70HznRbtOeKc35hLRprtblvvG5fKXv8QU6c6bHv1vLv6fD34Voc9ota
dwieuMfepNxBDmlcz7DOEfMHXLE2K8Z+Hv2kpDNy1o2OO+KrK2n+w85nc5x/
n0ziIvIneMenYP78RvXQoEZ7Yux9WTmD3EFuWe91Wb+spaeuIM+zZ856qlL8
ktf6K+W8TnPAwy3VYO+E7mS0uS3d5Tbjk1hdZa6YkyVPSFqj2/sHF53G1Vzf
3fzot2TNf23Yf7pRXdET8lNZZx+ZxG+zXbOd8H7ZJ9i43XUa9RKxyXrkLPbC
no/G96ej/1WtvEwNRG6eneRD4o85x/jOuS94nzvjDieax45Hv4m4qcX3cAU5
gJgmP8EXr7sugeN6PBZcdWX5Mcea94a+y7iG91kTjIG7mcbe2lq8B/8tjbG9
YbPOfNZrTiPmbncMrnG8LA7b67Ni+LGs77Psny9l4fuJ6I+V2h97427mGg/Y
d3lOeIqzfTjsJ2TlkX/V4kH4rT8LO+QseON46G9Fn5TntztfL6pUB8CDfycv
h350Ul2JPWuDa/Rw0elKWEQmB3Y79uGK75kvunx2vpEb8NU3oh+cZXNBVo6l
5iOnk3upQaf4Thc49tkndQl73VdrTz/LqnHBIXhcaHswwFthod8XxB4xACd/
JCsn3RfnejdrrSPOk9S1xD78t81x83gSzsY14tT55uVbQj8t5t6ddUawwl2U
8XtxyP9lr5XqHPgV3T0+S1Urtl8y37abHxbYDpuflPIp/nwLPIW8MwlTw42r
IT4fPmG+ynxBPrmqEma4n9Pmi86kOrIvKw+Rj+5Nyl8POGe96tqQmPx3kk//
k7TH+22D/8a7rsLH6OEWcuGZmi0pj3e45mNubEabf1e6Jm2y/JazYokz7DT/
zzPXc74h5kpya1ut/Ao3wXvwxcdcy1HTXez75Z6Ph8211GTkgCz5uqRxjN98
Ng+2hOHVpfIWXESthx021DKsic/BAXh4Iim/TXSOa3O9iR1vKvjrkSQOhovh
I2TOyRnBLJxJ3uhIuq+LGuF6rnkYjoFzwAmcC/fOjnN80fIW++2k5wfH4Pnj
WXOgZy3O0W9ffSjrbj6Y1ZCXxLhLow0Pmyez7o37WWle5nz4kHfKRr9Nns76
H0FPFt+3u+4d43fOGt8JcUx+h2eJb/CAn9rMg/hrkt8Xbc5dYI/YesCYIf8M
eA+znFuoH6hNHjRnche9jv3P+13D+4a4IWbA9POlMASG9xmL1IbTvI/pPusx
r8U7ghr37BtnsuWprhHAP+dgTs7Cnaw2frDlXOipp6mBh8V+ZkQ7GnIrCYOn
jLGNfktSz5fxrR/s+02x0XreDev9FhiaVA//Nfors872OecT3jD4/AtZb7E3
qSka6YtG+WG7/+/Cm3qt6wfuk/8pkGO3O/aI69TI5rFY6+pG9eXQxj4zvxLH
6ypx4G7HJ3jjjQH3rI6xKemOybHMT67B/0uyfPjZ6Jcn5WzeauSju2zTnuXb
57O4eZDzFHMsss2KLP3y6L+TVN/zfx2wA4bIPdzrgO/ojqR64I18bi7O228M
wJ/v16qtb8jixgHP87+s81Gz8IbhLXOAt0xWrromq/Zf5H3y5sCfZ97Ule4S
X/GmokZ8K/pWozimflnl+Vnn8Sw936k9qA2oQ7g76hJkfD/c/mfuvZ5/lnmw
SuLXPa4B4JXVxh7c0+/z8v8G7rfPOZR9E4OjkvjqKdcmz3jdZf6fCjFL/B11
DFaNbMrG//MoxQ/49bjj65R5GO7lLUed9p7nZ5+bXIuewXShN/gaY/X/pCyG
cA==
           "]], 
          PolygonBox[CompressedData["
1:eJwllllsl1UQxb9+339uRUp40SYqREECQitKFDRC3Rdwia3REGhVwlYXhKAW
wZiwaHwRlwdWsS1rIVTUABE0Rg1YChK1ilF8EI0xrIZFoWii6O94HiY9Z87c
+59778x87TdxxgPT8yzLXsFK2LKUZR04NoKXgu/CesC/wkaDP4gsqwRXlmVZ
HfgMi7rgjdgZ+Hpiqoss62R9G3g/vjvRxuOrBzfiOwmvRp8KnoQtZK9eWKAf
gV+Ovgv+HHwtfFfmPdeBr8Y3GHwFthLeF15H/G7inwfvJp9T4GH4joO/J2Y7
+CN8T6Gfxfct/BkdGu2S8izbwV4joWvQpoVj70X/Dv1jrBZ9NPr90ojZhz4I
/VfwEvSd4Gb0xeD52PnEbyXmPfTV8CGFz/Al/FPsJ7Qq1hwGzwqftVac2Huw
feBe2N3gfugP5f7Nl8DbSz7rAHy/gGuIGV7m31yQnJNy+wbfgvAd665vQn9X
uWJjwUPQe6Nfxfl/h0+BL4JXwY/AG+AL4QfYry/7bYFPgv8Nfxb+BNYNvyW8
91H4BPY+XXKtTMVOh8+osx5g/Wt6T3hrmWtoP3g6vqdZPxPbz/pWrFtvhV2J
Ng/7Gvwg8X+gbQnfzTbibyDXn+H35d5De6kGVYu6w27lmvx2m+BNehvWbCj8
G/ot5ahcZ2p/4ufim0L8Nvg88AjsHfBYfO0l37nuvpP1s1l7DD4UfhC+FH6a
+IG5c54P/xd7v3CPjEFL2BzwNOwvtEfgh8FHsBz+WHItqkceB3fhqwHXsUdt
uIfUS+Owz9Anh99GPfYFvEW/j9aI7w5wBXr/Mt/5LNWi7pjYlVgV+Fru4xzx
m/jNPZzl8+TamIBvr/Tku9MdDE/uOfWeanoYe1/I+usKz4jN8IuTe6eDPS4C
bwi/ZcHeI4jtwFdfOKfrk2tItfQkdhZchh3KnaNyvQB7OXfNjkcbmfw26ulR
yid8Vp1BZ3k9XGvqGfXOnuSz6E0nws+F3/o87B/wo8l3rzPUhHNUrh8Sv5e/
LfiOs9869IRWwlaD29XvaAOwcbl7+g3lnzxb9OZ6+2Xh2lCMYl/FfoS3oFez
11DVQO6Z1QreUfLsVU+qN99ivxNok7HB4ZyUm9b8Fq6J/2uj8KxK4Vm6WGvg
L4ZngWakZuUnJc8q9bh6XXegu3gBq9DbwxvAh1izHDwnXOvqsUpwQUwTeBHW
P3nGata2sV85+/2g8xeeSTeCK8vdq5rZq9RLybWnmX9zuKfUW3pjvXVP4jcS
+za2Ptwj6hX95sCwT9o1qjHw7azpVC74BoVrWLWsMxwLz2DNYs0wzbLlybFr
sWb0nsln741tDc9AzcJ6+NHwN07fOn0j9K0YBZ+dewbmrP0zXLt9+M032X9n
yXenmaDZcLLkXDVzerD+RPjb2A6vgF+WPNtUE5fqe5b8LeiC90nOUblqZpTr
2xiezWvwBeuXhLFqUrWpN9BbaAY0q1fDtaMaXpE8YzVr9UYz0JrCvapv7sHk
Glet6051t0V4tmtGaVa1hXPXG+mtcmxV4f8ZbkvuCfWGfAXa3PBZNBNPoWfl
rn19M29V74XvWjXeWfId6i41Ax5OnnGadZoZDcSOCde2ZuJmtP8AI18eNw==

           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.868022450093548, 0.6087618834194577, 0.3087983040983616], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
Oi7c04PdiWzgvv8AQ+8F0A==
           "]], 
          PolygonBox[CompressedData["
1:eJwllVuIl1UUxc///33n/OtFMxGs1NHs4qT2EBZKo3nFJMhIosgUHH2ozPEh
LdRMR/NCOo6GqeOMGdNDKmgohZCaziiVBRlkDmgpOTpazoiXQDNvv8V62LDW
Wfvs75y999lfn8qZL1cVQwjzsBx7qhTCjSyELeDvWXg7hrCnEMILOJ0E17H2
Jngwdhi+LoXQG/8J+IwEJ9YuorVjlfANWB/0ieijwC3YTPggeAW4DmsHT8Ue
Z+8O+DD0HN4fPEj7wbeINxv8F3YIPh+fVvCsZG0Ta42cbTYxFqCtYK07WiE6
1lJsEvx08t7x6KfRTmDjwN+if83+AvffnPnM6/F9EFuJ/i75OIXv//CNaE2s
jQAfxMaAt7L/dfQVWAN6PXYLrQF7FLyV/T/k3qO9PVjrhW/n5FwuYn8n8I1k
rQ7//8DN2GL0fuhN4HHsGZ05x9Pgbbl998Ovw3/CpmQ+U+foHCgXusMD4H+x
NehjidesXMHvhe+Cf0Wsiboz8RrwfwP8HD5D0Suw7fBnku+qmjwNPoztLPib
P4OvR+f6DjGugXvpe8T6BCsDz0m+S4b/PPDcZDwZ+xH8OWcYzN5q/O+D7yfG
w+AP0c/Aj8FHwr8kxjZ872fto6Jz1AWco18AN2ID4PX4lAevTUmOqdijiPc8
vkewIcE53YV2HP9XgmN2hd/MfZclfK8Ir1V+lF94jXo/+W61+LQR64p8Mue4
Gr4z+Vtd8b8H/mxy7yvnC8GtrFWzdxH8PPwAvKLgHm5L7iH10kZ8PkZbjrWg
v8o3r6l20bHrsapkE36RPfuSz6SzrYZfhZ9NzqXekN5SP/RH4H31jeQ3r7ev
tfrkNWnq4XLNAvQjBedgFdoC1mqEOc9DySZcqx4HvxX9tsrge8F7k8+mGqqW
C6PPppwpdxnWgX8l9hjar3pPBddItXoS/Yuie0S98ln07NDM0uwKJc+if+AD
wN9Evy319G/4t7N/GVoN/AO0NclvZ4NyBK6J3queVe+q59X7mknD0f7We8xc
I9VKb0Zvpwf+f4LPqb8y+7yP/jt8RuaZN0Ox8RlY9IzRrNkT3cvqOfXeOvhZ
+Gv4xJLfhN6GZpRm1XzsF/QJ8EvJM1mz+SBru9nfgnUrOmfjo2eiZqPWpKmH
1EuaYTd1d9b+QH8C/Ry4Z3Lt1JPqzb7RZ5HPSvBavRHwS1hv+B34psz/gE/B
70X3snKgXJRF+2om3lb/5c61evhQ9AzWLFZPqbdScu31TyiBz0f3+jTsSvQ/
Rf+WDuVH9YierWdUc3BH8ttUjS8mzzjNOvXoZfjU5L2aaZptxZL/Tcp5VnKP
qlf1z5sObs3dK8p5U3SNVWvNvEr4O1hV5hqr1s25z6Iaq9aaQZpF6tmBun90
7ZTD79BnRddOM06zTjVQLZRT5Vb/HP179I1j8PLk2ayZdhTfu8QWB7Q=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9238047062594043, 0.6795117656485106, 0.3637945894041531], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1: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
jP/PWhwL4/8fECav0g==
           "]], 
          PolygonBox[CompressedData["
1:eJwtlElsj1EUxd/3/773SlBTiLE1hi5IWEjUQmshIlFiqBoSysJMhA1qioUO
ZkVDsC0RiRhqbLSxUe1Gq6mEULSxMC1Q2kb8jmtxknPuve+9++69741es23h
1pRzrhAk4HVwrlfsXBH8FXxsmnPN6OmRc+u9c2ngOwsqwRT8WeAiPMY/Ed4G
iojPRn+A7/TG32CbwF73OaQePRhdhn8cthb4Ws67he8ymObsjM34n4ON+Ldh
W8deP9Hl6LOgBH0SPRyex545wXJUrnNZ/xpewX6H0P3QjfCP2M6x1xnWdBC/
BfzA9xP08Lan9s5CP4FPxX8FPg/bfXH2WMT6OnQGuT8I5jvPGXfhed54Lmvu
oZehM9H1xGQSfyTY3WdhK4G34s9LWU1Um2JvuemOumtfsB9/L8586q2GquV2
dBXxS7EtQS8Gj4m9gK0ssp40JdYj9Up30F2OgyHE7mf9Mfg+1h9Bj8dfA+8j
W8rOTIf3xNaRshr9qxU4FVvNT8A3qEaR9VC97MRWAW/Bdgq+C0ToFEgn9iF6
trM9H6m33u6SQa45rF+tO7J2BHom+pW3XtZiu4MtE53BXiPBafXeWy3rQCm6
FuTjq0T3hxeAg/AUcMR+RZfGdmfdXTOj2TmH/hWsp+qtcijAf9vb7EzDNgPe
RQ7dzvZcQHxxsLNzwTD8u4PNsu68Bz7Um+8ZOIwegR4aWw+Oom8Em71y/HPw
tSeWi2r4G9/7xHrTgL8I/+Rgsb3BJL23xGZVPVFvNGOaNdX4amIzodnQzOaz
fib6Ucre+CBvPVFvVLMafC+8za5mSrOlN6233Y5tJbwM28vIevAH3QXmR2br
hjeCKZG92Sb4A903ZW9Ab2FAsN7INhD+FuyOLSfl9lk1ja1GqtVeUBZbz9S7
d8FmV3/Me/h2/DWRvaE3wWZOs6ecMvC1JvaXKaYa3aZ5d7bnN2Ib0DNUP/yX
iP0UrNbK4Qu8yptPf1Iz/h3eZlE5K3fNqGZV/+cqfIm33ugNFuK/BrJjO0Nn
aWY1u5lgFHppsNlsw78cviJYrfVnVfx/E3obemObiF8WLFZ7au/54EBkM9mZ
2IxqVvWG9ZZvJvZ36g/XXz4GNMXWo0Jir//PXTb5yoPlphpV4/sL/HPCLA==

           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9527176473281459, 0.7517941183203647, 0.4534247067172522], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFVl9MllUcfr/3fc/5wnlhgIMS3KjxedeHTUe2pRakjbQ/BGhtAbUBDoTW
WiIZeNWK6s4bcKsuJFZLdFNLMG1cdVPQ+iNlwUrzuvtqq55nz8O6ODu/95zn
/M7v73Pehhdfah9JkyT5AyPD+BEfUxgVkB/GwiMYFYUkOZnrm/Kn2L+EMQjM
pkzya5BXMO/A9x2Q749JUgnsdsx5pjPET2NtFnIL5CvGEMu1D73eBvzjGK2J
5gOWN8KGvZBngDsUgMfZ65gXojBPQD6U664h4G9g3on1WsifAPMgvr8CZhVr
D+DsMNZ3F6EPcgfW57F+C5gS1juBL2D9X+i7TCzm+zA/h/XfeT/mPVF6fsNc
xryUSSdHM76PUg/OXQS+J9G9FyCP2Bf6uyORP/RrJ+Sz0LUN87NR54jvdi6I
Ib4vkz3U3+LzrZ7bHCtiqjLF4W3o2gx5C3ysziQzX9yvtlxt/AnIbwJ/J+S7
gK+CzlPwZQPG5iB/6TfzTswY8D9jfT9wN4Jsfj6Tv/th43Sqevgyyo9fsFaZ
6TzvHXZ86cs7Ufdf8bkVnz0YJf+J9Z9S1WiFa5U5Zn4nC8oXc7crSP4nl+2s
McZ2ymeJH7U9tOupKD1/5zrDs8w/a4G5Zj6uujYoU1+b83XbGOpkrd22zEF8
jc9usG30s+zae6iofjgAe+sKkplP1sWMe+GzXPWyCsy9wC8AcxFrr0JnAzCL
BeVk0ToXo/qC/cE4Mp43g/qINtP2MwXd9zT25qP2Psd8MMgG2lXCfB6jF5ia
VGeIv56rBt/DXI+19vUaLAhHDO+vTbU/h9FYUD2cw7wllW7WAeN/FvN4rvgw
nuSZCff5Y8DO24Y9RZ3vhY1NBcWBcSl5n/eyjsquJcaD8WEffhEk38xlN+0f
hL9rQXqOYO7IpZc6l9ynjCfv35pqj7xCfiHfdQb5TP54P1ddLGFtX666Z91O
2Df6xVjMOl7U3eG8MjYzjm1rKh+JYR+RO4hlL1DnlHtrzvFk74yYlwYyyez7
rlx2DrnHuyzTbsrsu61F2fOx/aY91Mm50zLvoz/sNebnlHM07Teixj4yZ3wX
yFEnnbtx55HrR6POfoDvXea141F7k+6LySgOejfqLp7nOnVNOIaPBuWONXg4
yH768UJQrd5TVC6ZU/ZKV5T+3UE10uS4VQXFbDzqHOus1+8O+453kQP4HpQc
t03muoGgmvgOZy+YuyYg9wTljnXK+me+ycPb/cYVsT+XK3cNRb0Z7NtXrK/J
dUxOfcN3jWI+bk4ml1y1PWOZ9ppdN3WumWuZMOt8dc28szdVXxP3a5TOl4N0
0kfmkfOCZfbKmPUf810nfA97nXexJxZs91/m5SehOwniwMOQh6K4rBylm3cU
nNsK573RPtB3xoXx6XYsS/aL/HrLvHp30PvxFnSWME6Tk/leBf1nvB5lM+ue
PMD3nu/+10F13eGeqi+K057Bepf/JcidH+Va5/5yJi4gp7Cfutz7K7nexcv8
l4ji4rUozmk2D/P+Y44b65J1ds5vPt/+9Td/o/mIepnzQf8nrPkfpccxYnx4
f5XfTf6X0S/GsSUVhxA36nubXX/1zhl597xjSp4YNleQp2ddr6xlvuNl9wZ7
pDLIFtpEviKWPNVuvtvmf5YzrrM6cz5tajQv9fk/hHFf9T/SNzjTD3k5yqc+
54v4I5nuJt/2+yz5b5858LQ5kbX6bRS+P8imkuupxvxV63uZx25z+7Jl9v1Q
pv5jLMkVjOcPUevfx/97gLYxbgO27T/2/jLf
           "]], 
          PolygonBox[CompressedData["
1:eJwllMtLVVEUxvc99+x9KQjyxc2EyEE2ywYGegfRwzLIR/S0QHtAGd4wKkJ7
0CR6WM2CwgY1KKUo7SGl1yiaNQl7aNqNexOpf6Ia1O9jDRZ831prr332+tY6
1YeOb++JnHNtWIyNeefKcCxMONcEXh2cG4IPwFvgm7ENSefWY8+ILU85Nwmu
Jd5BLIOtgec5s434PEWrwafxFeC12GBkNVW7lPxVnD1K/DO8El4CXoxdhlfB
K8DlWD98jnrLODvOmS5i/+AJcD+2m3g9vjpyZ8hpgR+AjxBrhC8Cv8fXQXwU
3gA+jC/Lu4/g+wgfpV4uYXforltYmniOeJq3FuBVkdXcz9lTWD24SLwmZT1T
797AK+E74Pfhac5MgJ9wvtNZz9S7bu6sc9aTLDhPThN4jDMvyN2LbyXxn/j2
gSeDfetLeEbYW++6sE/wv7H1fhZrhf+OrRcD2Ap4J/nDCeuBetEKbwZvxcbh
0/BGZ76c7sbuRNYD9eJLsN5niU+Dr0pD8Fn1KLYeqBc98FfweeqdA/fhmyP3
JPxM0mbirWLYpaRpfoV4OXwLsafccRB8Ed+7hPW4Aj6FrYuspw+pv9ab9hl8
j8mdhW+M7I3DxEdiqyXNpF1fMO2lQS/4dbC3l5IzEUwzaaee341Nc2mvGWug
djHYLOub9G3nsRjeTf5z8gve3q4ZKoLbiH/jvgX4bse2M9odab7J20xqNofI
b/e2Q9olzcB3cDv5vyLbKe2WeqxeayeuEfvg7e3aSe3mnmCzojPOm+bSXhrW
BJsJzYa+6U9sO6Zdk4ZLvc2UZktvKoH/gPcmTTNpl+fMEuKD2jdvM6fZ0w5p
l6aCzYY0lJZfveVqpjRbj2J7q2qo1j3sZsL+OTOx7Yh25QG+XeALwXZB/4gy
+I1g/wLN1HXwTm+50lzap7xpqZrHiDd7+3dpZjQ7J7zNot6kt/0HcbOX/Q==

           "]]}]}, {
        EdgeForm[], 
        RGBColor[0.9816305883968875, 0.8240764709922189, 0.5430548240303514], 
        
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxFVUtvjVEUPff77jm3YdKLttoaEK9RQ9oERShKhL5UmSgDCQMSzwEDj6lR
6aC3BgY0kUhbCaKIH6AG4lZEhETLbzAhCGtlrcbg5Oyzv/2ts/faj7Pi+Nn+
M1kI4QlWjrUVh5uFEGqxxrCasHqgbyqG0IjVjHMVhr3QdWDdxbkRqxtyH75H
fBuEPGoM2ryCbgf2VqylsGnAKhe087zTNg2Wp3OdKROP9x8N//9pg/w6lx1t
xuHzEexdWBOwWVmQf9MphFWQj8UQXmAtgd3zpP+J3+p92v5xJ26zMXgn72bc
jL8P8g9gTGS6izyVM+GUIK8KwuY9o46d/N223OMzfTtiv8kV8caNeQvfF0Gu
KUjmvhr6c0k8L0QcCT6WzDN9pX/0n3lptJ895o55+ZuJF3JxGjjfcT6FfQZr
CrqTwGyH7kZBcfC+GsdDX4btB2025bJ7h30m1138xrhpP2QMctIJX3ZjJcfY
b38qmfQjmRbtStDfKer/pSXxRM56zRNra9AxUZ6vtwOWiU+Zts9w4V7YTWHf
nklmDmYz+VgXFHdLQZj3ispXE+69X1RNLyspzmAedkfl4xEwK7C5Dnkt5HdJ
uVgUxfNgLq5pR/s90H+Dvj0Xr8Qlfj85j8JpgO5ElE/MSdXcMvbHuOsZ9FeS
dFVzPp9vckQ988H8dkbV5VZg/sK3+iBuyU2f+TkKm0nYLMeHDzi35cpRxfkg
PxNJPm+D7bWCsIizxzy8wb4R6yrkLfiwwXJ/EtfsgQ7fy9wwR+ypSffVkOup
5P/5LzHIN2X68BXf5zLFcDiJx7+um5Jj607yb5O5/Gr71Uk+/3R9NHqOVV3z
5PsC5N+wv5iUY9YHcxR8P3W8/5v1Nbl6j/6zrm57Pl5Kyv3lJIw529cbk1j0
hf7VezZyzs7PWGIRJxqfNdmVlJsfRfFIW+ac/ffFvcq6IWbFfdZpbhZH+Xot
CS/aZ+aXmMz1gqhZdhaHj1E1NRCFU7FNd9TMXZ+UpxvuhfdRc7crav4Nud85
J8qeBaOZcOrcbyPOC3M7av1DzyreP5AU10Hs+6O4fZqEyXlV9jsz5jw+8FtB
X9o95znvy1F9vTmJs5v2jTmZtQ/M+Zjxel2XxFzjmmHtcAYxrp1R823YcbG/
mzxPZ9xzxOA+Yfmz+4t9Ru7o+zrsL6Pm9UH7yL7mO0C8Sb85h2xD2/NJs4Iz
ibPzrt9Z3sN/aM/ZM+U59qSoPH+K/9+kNr9fVb9xtGvxveSI8tukeUGudkXN
QdboPsh/iuqHA0nzgn5O+g3n29nmd7PZ9VlrvimzXphT/v8PRrbT7A==
           "]], 
          PolygonBox[CompressedData["
1:eJwtk7FL1VEUx6+/97v3hU7PHEpxEC2naJDoCaagCWIG9dKmamhoSMjKwQa1
/6ByyYaCclAxXSKfbW4SFYaBg0Wkf0OLUVmfL1+HL3y/55x77rnnnNtyc6xy
JwshlEEOxlII+xiG4PMYKuipGgT4i55GHymEcB3TG/QD9D/i2/B3imPbQ/8A
I+hx8Ad+HP9deBuYzZzzbAzhgPhd9EOdR2+CLvQs+hW+y8l3f8c2DL+SzMvU
sARvTz77m7CT8HPFEI5xroTtIrk+gE7iH6GfY98g5lrBNU/Au+UvuOar6BvR
b9nC1lL0HbpLOZTrE3iC/wT3fYyGuHK8JnYwuvYG4t/BV7EN4OtBf0FPoqv4
T4ES+gzowL+tnut96CZ877E1c/8Qujf4TXrbWnLuZ8RcwDcMLuFvxN+Nvx5d
5GwCU8S+TY5VDVX4OqioVnJ0wG+Dn/AZYl6Q43Ry72QbTa5Ztc9hWzi8Q3ep
xhF83+CNmXuq3m4mv20VfE7eAe2CZqxZ70TvzjL+r/Dl3Fw5lKsP2+Ma74B2
oZXzTzPvjHZHNagW7dT95JpVez16G17lTClzjvPwuujdewnuEd8bvQuKUazO
6Kxm2h89c81ePV3JPQPNQjNYRP/KvWvT2q/kHqqX+jO1nK9E36Ueq9e3onuh
mWwlz0Sz0R86im8/9+z1Rr31P+ZTbgA=
           "]]}]}, {
        EdgeForm[], 
        RGBColor[1., 0.9037392942900133, 0.663261176793775], 
        GraphicsGroupBox[{
          PolygonBox[CompressedData["
1:eJxNUz1PVFEQvfveu7eAgt1lIXTw3lLDEkOsgATIGpHGlV9AqMWP1p9iQ6MJ
tQKBhCUBGwsLS6GCzoLCgvARE8/hnE1M3mTmzp05c2buvHJzu/c6CyFsQXLI
FKQDmYXUIZeQBmQ6hXAP3Ya+gr723ROcJ2oh9KFv7McxHAHsENKG/SuTXcE+
zYW9CHkahUls5v025gv4nyNuH/4u9F0mTn+Mz/rEY42EYme5cIl5DN3PFX/t
nJrrMm7BNViLfX+oiQNKPt5/y9VPZawyCI/2XND9mWsR/8ZYfc+hB6ADyAjs
tSieyXjs6Vmuu67tJfhHIc0ihJb1qO3oM75HjvTTR7yxQpg/ozC+JnGknzx/
ROmVaDxj8n7cMQMeHfdKXXoO7IWz4uy75rmb9J6voFejeOxFCe1l6Le4e0DO
MOx3SXmfUe97VC4xZv0eM0Ez6HomfeuO6y56D+k/8d2J33fOGORInKbfkztc
+cy5nmfav5bPvC88y6bn2fZu3+L8F3KB+B58HwtxJnfOjLNjn0NR8+HuD7iS
5xviwH6f9B/V/e/wbtL/FveBfNp+i2P/F/Sd2z/pnBnPbsnvfOEY9sI6D55R
x9ilpeH+GUNuzF9P2vX5KN+9c6/8P9SdUxmjbkxy2flvpzLHNQa76nnmgz0O
4sd+eG55nznfvaT3/pJUMzMOYyvnc6473r1PheztpLjSnDaS5vAS+h/T1Hr3

           "]], 
          PolygonBox[CompressedData["
1:eJwtkDsOgUEUha/HjIRCg4hoxAo0FIQEiXg0flZgAX6P1lI0CjvwSjQaq2Ah
QiS+m6s4yT1nzpxzZ0qzMJhHRSQL4mDgRNIRkVtMpJAQacM9/ArPw0MvsoPn
QZKzBloubp4ufM/cJOdD6BJvnfMM2hut5ixTsyvwHXrgLOuOVuQs5ezuGyy4
PwYP5if44j/Ae3j7YIh37c3bIm/FXEXLiHVq9wStLJYxZX79d9nQOfLWqd26
s+4eeOvSDM06e+vSP7nAO8521zfr24/eunWnk7c/0r/Szi2eHzl4JUo=
           
           "]]}]}}, {{}, 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1190, 1647, 1290, 1587, 1727, 1362, 1820, 1189, 1649, 1291,
            1648, 1651, 1650, 1191, 1490, 1717, 1718, 1716, 1355, 1719, 1464, 
           1354, 1818, 1185, 1486, 1347, 1852, 1348, 1462, 1346, 1816, 1180, 
           1482, 1706, 1619, 1620, 1617, 1277, 1618, 1334, 1851, 1335, 1572, 
           1571, 1272, 1612, 1333}]}, "0.9`"], 
        Annotation[#, 0.9, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1201, 1660, 1297, 1594, 1742, 1743, 1381, 1744, 1382, 1745,
            1298, 1661, 1299, 1662, 1202, 1497, 1498, 1373, 1824, 1196, 1243, 
           1734, 1655, 1656, 1593, 1735, 1374, 1825, 1197, 1495, 1364, 1854, 
           1365, 1466, 1363, 1821, 1192, 1491, 1356, 1853, 1357, 1584, 1583, 
           1643, 1642, 1181, 1237, 1349, 1712, 1350, 1484, 1483, 1707, 1342, 
           1622, 1279, 1621, 1278, 1337, 1815, 1174, 1575, 1574, 1573, 1273, 
           1613, 1336}]}, "0.8`"], Annotation[#, 0.8, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzD0vA2AUhuEjUZ1sDK2kCRI7o6WjraRDWxYfC0PTBqNRor52G3OTxiJB
KxF/wIJKJK2Pv8Hieoc79/s857xneqtZboxERAUXoxHLYxG/XOI/XuHFTESN
g6u8hlV08Ky7tJfLRix53+FdvkLdPCvP8wJ6eMA9Svouv3E/3cWTXOEPf9so
uFmTx7GBorzOA7NrzMib8gRe0y28YFv+Mr/BrJ0deZj+4VY3p9v3/rZbxKT3
IQ8xwI+dR90ePuXddC/13DM78z7HCaZ0p9zVH3NePuIct/iA/wFnWTBh
           "]]}, 
         "0.7`"], Annotation[#, 0.7, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwVzrsrxWEcB+BXuQ7uqxxKofAPWNjMNrGwIecsFtfZJXcDWcw2RQYHHRmY
yUApDjK4pdwveX7D0+d7e3/nVHYlWuMZIYQEy5khHGWFUJgdQgH5NOo3ObZb
ot2sgxpqOTFboVOd6a5O1tPAqnmRbDFfl7myT+bJuNwhyal+zW0sJ4Q29TZn
+lK7EorZJxX9L7sBOcQgh5ybbbiv8r5bnaSXJn2PvGDLvlrfr97j2rsbLklz
FYl+2920eoYpyswe5CP3DOvTblJylCezEfkcfU/u2i2qK9QLMib/5KT8lRPy
R37TTLl+Xn7xya33H7KJOWZ5jb5tfuB2nDf9mHyXd/KFf1bEQ3k=
           "]]}, "0.6`"],
         Annotation[#, 0.6, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0bsvZFEcwPEzzKPUKFjrnWB3JJts0JAQNCqilGiG0qPZpRyrpjPjrdDK
rsQfgJAQFDSoZItNvDp2Y0kkfG7xzef8zj0z9+be6sx4/1gshDCttkQIBckQ
XuMhPFn/17OWzIP2Y9afmdYvdZh/sp1DTDDDJIfZwy2e8kx92jb38tJ/ruub
+bua1KwWbdgv5oBz+yziMU90pIz5yplNZc1TalWbLjXq+jlHeMHf/MBSlUT3
M19zl3ec5A0neMs/LOdHlSlrfuAe//EHH6P78i+vWcVKVWjW3JjyQtVpziun
N9145h2lXZtxrlYJ6zzjzLGQBepyfkHz0bs33/vdnr5Yzzl3Hz2/Du2tOPMp
+lZs4DIP7H91ds2cZLe9eutFrjIVfSu9WNdF97Wu0TveeUL6
           "]]}, "0.5`"], 
        Annotation[#, 0.5, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          LineBox[CompressedData["
1:eJwV0T9IlHEcx/HfmWl6F7h4izQcOKRwcVKYCAVKWmZLrolF2r/F20LdPJur
QbAG9epObUs6h4KGoATF/tB2LhHRECQmdJeT1esZ3s/7+/l+v7/neXie1PXs
0HgshDCL/VqXuhBi+Hc4hAGu6lXVf3hQvoiS3F0fQhJP5Euc0curO/gpf7Rf
5CUUsIJlfNL/ZSfhzDLHeYXXsWfWIDdi0W5ar5+Pys/UnbxlZ0d9Aos4qbeh
t4t69bz9BfThiJy3c4o3zX+q2/EYGb23UQ9z0XPkR9yKh0jLb8x+4L58Tn7A
KdxDm/za7Dtycq88w8cwhePyS7NvmJB75ElO4ivGUfaOWd7msziDHKax6twX
jJq/l8f4AzdF53AF7+Th6NtxF04jId/lorNlvJIvo8XzC/Jndcn8Nu7gBm7h
Jp6jx/waH+IRruGr0btxs3u84PPyBVTcryL/5r98EP1X/TjW1P8BCYxOgg==

           "]]}, "0.4`"], Annotation[#, 0.4, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1205, 1829, 1392, 1469, 1248, 1559, 1558, 1557, 1755, 1754,
            1303, 1668, 1304, 1669, 1771, 1770, 1508, 1213, 1834, 1413, 1475, 
           1415, 1859, 1414, 1511, 1314, 1426, 1861, 1425, 1257, 1217, 1838, 
           1427, 1317, 1435, 1863, 1434, 1260, 1220, 1841, 1436, 1323, 1442, 
           1864, 1441, 1263, 1226, 1845, 1443, 1327, 1517, 1228, 1847, 1449, 
           1478, 1809, 1450, 1806, 1808, 1807, 1520, 1232, 1705, 1331, 1704, 
           1330, 1811, 1812, 1810, 1454, 1265, 1480, 1456, 1867, 1455}]}, 
         "0.3`"], Annotation[#, 0.3, "Tooltip"]& ], 
       TagBox[
        TooltipBox[{
          Directive[
           GrayLevel[0], 
           Opacity[0.5], 
           CapForm["Butt"]], 
          
          LineBox[{1233, 1266, 1544, 1545, 1541, 1332, 1532, 1546, 1457, 1849,
            1234, 1521, 1452, 1866, 1453, 1479, 1451, 1848, 1229, 1518, 1444, 
           1865, 1445, 1531, 1530, 1324, 1540, 1569, 1221, 1261, 1523}]}, 
         "0.2`"], Annotation[#, 0.2, "Tooltip"]& ], {}, {}}}], {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0., 0.}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, AxesLabel -> {None, None}, 
     FrameLabel -> {{None, None}, {None, None}}, DisplayFunction -> Identity, 
     AspectRatio -> 1, AxesLabel -> {None, None}, DisplayFunction :> Identity,
      Frame -> True, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotRange -> {{0, 1}, {0, 1}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           GraphicsBox[{{}, {}, 
             
             RasterBox[{{{0.148, 0.33, 0.54}}, {{0.3250374168225799, 
              0.4179364723657629, 0.6279971734972694}}, {{0.5060324279129026, 
              0.48154494271699455`, 0.5215975503643001}}, {{
              0.6870274390032253, 0.5451534130682261, 
              0.41519792723133087`}}, {{0.868022450093548, 0.6087618834194577,
               0.3087983040983616}}, {{0.9238047062594043, 0.6795117656485106,
               0.3637945894041531}}, {{0.9527176473281459, 0.7517941183203647,
               0.4534247067172522}}, {{0.9816305883968875, 0.8240764709922189,
               0.5430548240303514}}, {{1., 0.9037392942900133, 
              0.663261176793775}}}, {{
                Rational[-15, 2], 
                Rational[-225, 2]}, {
                Rational[15, 2], 
                Rational[225, 2]}}], {Antialiasing -> False, 
              AbsoluteThickness[0.1], 
              Directive[
               Opacity[0.3], 
               GrayLevel[0]], 
              LineBox[
               NCache[{{
                  Rational[15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[-225, 2]}, {
                  Rational[-15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[225, 2]}, {
                  Rational[15, 2], 
                  Rational[-225, 2]}}, {{7.5, -112.5}, {-7.5, -112.5}, {-7.5, 
                112.5}, {7.5, 112.5}, {7.5, -112.5}}]]}, {
              CapForm[None], {{
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -87.50000000000001}, {
                    Rational[
                    15, 2], -87.50000000000001}}, {{-7.5, \
-87.50000000000001}, {7.5, -87.50000000000001}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -62.500000000000014`}, {
                    Rational[
                    15, 2], -62.500000000000014`}}, {{-7.5, \
-62.500000000000014`}, {7.5, -62.500000000000014`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -37.500000000000014`}, {
                    Rational[
                    15, 2], -37.500000000000014`}}, {{-7.5, \
-37.500000000000014`}, {7.5, -37.500000000000014`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], -12.500000000000028`}, {
                    Rational[
                    15, 2], -12.500000000000028`}}, {{-7.5, \
-12.500000000000028`}, {7.5, -12.500000000000028`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 12.499999999999972`}, {
                    Rational[15, 2], 12.499999999999972`}}, {{-7.5, 
                  12.499999999999972`}, {7.5, 12.499999999999972`}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 37.49999999999994}, {
                    Rational[15, 2], 37.49999999999994}}, {{-7.5, 
                  37.49999999999994}, {7.5, 37.49999999999994}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 62.49999999999997}, {
                    Rational[15, 2], 62.49999999999997}}, {{-7.5, 
                  62.49999999999997}, {7.5, 62.49999999999997}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 87.49999999999994}, {
                    Rational[15, 2], 87.49999999999994}}, {{-7.5, 
                  87.49999999999994}, {7.5, 87.49999999999994}}]]}, {
                Directive[
                 GrayLevel[0], 
                 Opacity[0.5], 
                 CapForm["Butt"]], 
                CapForm["Butt"], 
                LineBox[
                 NCache[{{
                    Rational[-15, 2], 112.5}, {
                    Rational[15, 2], 112.5}}, {{-7.5, 112.5}, {7.5, 
                  112.5}}]]}}}, {Antialiasing -> False, 
              StyleBox[
               
               LineBox[{{7.5, -112.50000000000001`}, {7.5, 
                112.50000000000001`}}], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False], 
              StyleBox[
               StyleBox[{{
                  StyleBox[
                   LineBox[{{{7.5, -87.50000000000001}, 
                    Offset[{4., 0}, {7.5, -87.50000000000001}]}, {{
                    7.5, -62.50000000000001}, 
                    Offset[{4., 0}, {7.5, -62.50000000000001}]}, {{
                    7.5, -37.5}, 
                    Offset[{4., 0}, {7.5, -37.5}]}, {{
                    7.5, -12.500000000000005`}, 
                    Offset[{4., 0}, {7.5, -12.500000000000005`}]}, {{7.5, 
                    12.499999999999972`}, 
                    Offset[{4., 0}, {7.5, 12.499999999999972`}]}, {{7.5, 
                    37.49999999999998}, 
                    Offset[{4., 0}, {7.5, 37.49999999999998}]}, {{7.5, 
                    62.49999999999999}, 
                    Offset[{4., 0}, {7.5, 62.49999999999999}]}, {{7.5, 87.5}, 
                    
                    Offset[{4., 0}, {7.5, 87.5}]}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                 StyleBox[
                  StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.2\"", 0.2, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -87.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.3\"", 0.3, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -62.50000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.4\"", 0.4, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -37.5}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -12.500000000000005`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.6\"", 0.6, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 12.499999999999972`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.7\"", 0.7, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 37.49999999999998}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.8\"", 0.8, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 62.49999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.9\"", 0.9, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 87.5}], {-1, 0.}, Automatic, {1, 
                    0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                  StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                False], 
               Directive[
                AbsoluteThickness[0.2], 
                Opacity[0.3], 
                GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
            Scaled[0.02], PlotRange -> All, Frame -> True, 
            FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
            Opacity[0], FrameTicksStyle -> Opacity[0], 
            ImageSize -> {Automatic, 225}, BaseStyle -> {}], Alignment -> 
           Left, AppearanceElements -> None, ImageMargins -> {{5, 5}, {5, 5}},
            ImageSizeAction -> "ResizeToFit"], LineIndent -> 0, StripOnInput -> 
          False], {FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.1353352832366127`", ",", "1.`"}], "}"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"0.2`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.3`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.4`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.5`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.6`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.7`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.8`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.9`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{"1.`", ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.815141607646627*^9, 3.815141726051696*^9, 3.8151424087269773`*^9, {
   3.8151424820741367`*^9, 3.815142490720644*^9}, {3.8151425380867367`*^9, 
   3.8151425544958687`*^9}, {3.815142591360187*^9, 3.8151426089854183`*^9}, {
   3.815142670623131*^9, 3.815142675211772*^9}, 3.815142737025581*^9, {
   3.815144078911975*^9, 
   3.8151440950600348`*^9}},ExpressionUUID->"d7df4830-e3c2-4e5b-9d21-\
0c801e961abb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"x", ",", "y", ",", "f"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"x", "*", "y"}]}], "         ", 
  RowBox[{"(*", " ", "bilinear", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"\"\<True Value\>\"", ",", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], 
  "}"}], "\[IndentingNewLine]", 
 RowBox[{"ContourPlot", "[", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{3.8151427318614683`*^9, 3.815143083131839*^9, 
  3.815144083151692*^9, 
  3.815144115647215*^9},ExpressionUUID->"95535e26-aeda-4221-9152-\
08a8c17200ed"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"True Value\"\>", ",", "0.24999999999999994`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8151427325233307`*^9, 3.815143083766616*^9, 
  3.815144083953087*^9, 
  3.815144117122628*^9},ExpressionUUID->"111472f1-a2ae-4b4f-9cf0-\
3bd838169f97"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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
76A/4hrEQchfXXV7Tvmh4FxoHjvFoUXyQQ/HT9GDzpE/PavoQ3/EUXw+6CuK
SxCnIK7g+5J3h+IV0Lf/2OacsT2zQnFPoepv+lcb8S+D/KvmO+Yx/SvPq+9L
Ak/T/2ZLeiiuQH/EQeb5D7usX1v25JC+YD7r/crLg7O+73l/jopj+d4ux5mA
IUfIFfESYMR5fO+S4yrAkPePdTr8UKdDnoo78F3wb3yWWPY38T3iXr5fCT0D
X/h+Jfhqxs92qXt72WPd78TvwfF8VN+KU3E01i30ylwPTrWOzH08HYdDD/He
zDd0HDqc4kC8N9eT3hfYPtZxU8KTLlovbnk/FOfzfUbE2WY+UKjiUN5vW0Xx
59Vpjf6Y1qhQyRP9ZnRsdqLv9BLLflrPquUfmH2HW+VBfL8ReQ3sBOsx76dB
78EHVcdLy21f/hm9b9X0nrKnyLKfhX6wq2yHAEMP+T4i6AZdvP+E97AvpwLr
Rt8vNOP1/aof7DbbIcDIe3g/CXoL/XltQdylFq/6lF7ge8iva2mZg/YpPPC+
9bsVNj58j0/+Ophw99Y+JyVl3TMzF/f3ydQ//nBkN86QlZJ45cdVPqlVZ/5L
9xfbpEeL5M88l+zy3OGPTnQ/fkGefLrsKZBOjj6tHX0uSP4Dh/3/iqRmWVi1
7oK0vvb7iSZdiiXuhQ2LKta8IB8/tK3jO7PyVNt8Y6mnbjWPPOebXnvw2jx5
+cev72gy1SMDDzyx7rlX89Q8mBfzYN4vr7jvHdzcJzFdP+6+Jdouu+6vP//L
yyWyb+fKnK6xhQoP4AU8gNfHO785HP1zkWrXuw8063/dH6+ua3FTzZFFCi/g
CbyAJ+bBvLf1s1WpvFa34Cv4DL6Cz+Ar+Aw6QBfwAF4XXT2/mOYokBNrH2pV
adlP0rfrgg/em+WQy5+53jp/608y7aftg5q2y5L7kz32qPKnpKVtUSvbomx5
PWbPgJg9ifLh+Ka31TjskVqNmo6fOSdR6s9ePPKrRg6Ztq5n0+NDUmXyjpce
b9DGIe9P+cdNX/dLlY43RXz99na3rO3ZeMSdnnNS+MzY/PeS3FLJvwpsp8+p
eTAv5sG8zUZ8d3uFnzzyQnqvByrPypSzEyLaLtmdL137/L1+1Ihcqbt04ezx
vd2SVP7dTvYHc9Xv6HeqxhdLpm0qlpmT3+rpm56v6AYfQDf4ADpAF+gAXft6
XMvfEO+RUfvOr6i5oUDRBTpBF+gEXsCzdECVI0tLi+W1J2IfHLPJrfACnvgd
/VaVHzr+zQSP3Hqhnr3zJ8WK75AD+AI+AS/gie8wjhm/6Lwfef03IbuAepoZ
/2m7BBj98B3sZftD7udHTbKrFr9fHRz1SOk4u+xMetc9sFeRnJo49Hzj96z3
wYJ27IDkpJd7qPtJn6SPHNf3jyP71fslIT+/9PeYp1/+0Ccvtrt1x6UZ+lzk
x1U8zXYvR73IJzeF6kezGt61snEnnyR9/8+CXW/kSr++7zZ3bHaLc+Ke6Cr/
1ve9GjyU3bTSNIdEV25+tUN/j6TXv/fLQl+BLG7WKnNyfY8sDbQO9R3GQT98
h374DnSALuANOoAn8AaewJvrRqb/1XwFn1GHgh1H3Q/yQ71zbUh+qLPh/f5b
Hur1xUmPVPiq74qGPi0nyM3Up/1qHIzbYZZj1ZWKThmcNPFo1y/1Oajbmg+u
3XxwvnSOvni52alsmbfvoeHvrdZxLuKOw9+9P6L/NrtU7rB8d3GyjsvM+3h2
mVwWDkwqkKTO/Z7c9XahXPrc+dqfVwpU/b3dm8/375vuX+8VHh3e5GqR/BFo
86XFynd3JTTX+2B/9620onWmT2y3jhvn6G4Xz46NezctyZMBcwY2/bSn3ve4
p+7lMYMbuaTRq1EvH6rhj7+8e9a+2FbvS6wYdWXZqCv+9smYHnUXFMnhT59/
7/Um+hxO1BP3LRmW65QXvnl/5fpaPnk+0LqUHzbPp/nk9LKidzefdsqUmolX
P38iWWbVm9Ptlc5a7tCDX2fffPfUdoXSoV6Lt2sN1HEan5OqUWfhmYdvckvu
KzFHUpKypc6lUTMemaTzBMQ/S15M/u5aXaeUD9g1fY4M8VTJ9UpRS/oXy9cj
8yPKP6bjJsRRT1zcNqxprr7P1PvXXa9sXeOT/Dv+cie53LI+8QFb/xr54lfW
EVMidVyPOH9JCMZ+G/IC6PP31TqNrNjQLXOObe1+cI6OIxFXrjTWR7FEtJ1X
XWoVyu4aT39c74SOS/kcWGFsSo/qD/rzjqYVf//pEb/dXJS7vU31Eml8tkvD
s130uR/ERXxOpt/qVmm2Ph55qswdP1AgaeuiOmaP88dj33qeHNFD3yd6pN1n
mx+7VCTVfZdmlLzhlaezOl6ZX9V6f6hOrbLnqLKjlwJx7hFlrz52N29TedtB
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
AKJ6XA4=
   "], {{
     {RGBColor[0.148, 0.33, 0.54], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
RXn2PxMae6I=
         "]], PolygonBox[CompressedData["
1:eJwtk7lPlUEUxee9N9+oDdEIaogaSVzAIC48oKDRgkISxaiVigUNDUvBIs/l
WWjAgITCBQutsPIPkKBBG220MHYW4JYYqWxsXID4Ox6Kk5w75858dzlfTVf/
6b58COEoiOBRFsJ0LoSL8IfwZxw2FkIogqEUwk1wDF4mpwU+nKwNEh+CD4Aj
xL94tEEcjKAF8Jm3xsF1+DKYh/eiH9Db5K/ne9XrQlgk3seVW+g9ydoC+d3o
DehbOd9N3Ey8E/07ehvxDvjB5G//5X5FMsTVwyC8DFoLrkm1dYBx9ErOTsH3
834F71ei1/D+R3gn710A88RbQIb2lfzt5J7hzjb4LGcz0TPRbP7nEG8gvzfv
HtVrRnwe7R3oJB4lZwD+G8zBv4H6vGdURe4mMJxzDVfJL4GV4LPL8DHyS/A/
4Dl8GjyAR/JfRc9Es1GNZ5NrVK0b0d/Ad2XetXpW7y8Uo5XBB/jS2izGQBv3
f6zNXt9oJw7kdMBfg3PEd4hrg3u6C5+KvrsKXsL7OSvlPZO38BPJs68CP9Ev
ES9zf4j8EfjmzN6RJ+QNvaG3RkF15h7VqzxbR/wYPM15pzPwJnAl2DPyjjwq
r+obC9EelBfl6Rtodcle045q4YeTa9HMF8ndm7w79bwH/iS6d3nwfbQn5I0i
+RPRHpaXV9GL5H+J5iugkfhkcu+qUbXeJm4v2APywkRyrzqbTN6Zdqcej2fe
uXYvT19L9qi8qh1+ivaUvKV/Uv9mc/K3taMm+L3MtcpD9+H/AE/Webc=
         "]]}]}, 
     {RGBColor[0.35225000000000006`, 0.42750000000000005`, 0.612], EdgeForm[
      None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
         "]], 
        PolygonBox[CompressedData["
1:eJwtlVuIV1UYxc//nL13k1DjqGnj2Dijps44jU41k015jQSVsmwMMk3zIV/M
gi6aZulYXscb2mVEwcqkgh5CIQ0REbKHQUR88X6pkIZARZ9KzH6L5cOCtfb3
ffucs/f3rVM7763pC/Msy5aBAA7FLFtUyrL/4BdZeD5l2S50I7iJrkUfhU8C
NfCToKbwWhu1regcHcCf5B8BJR6wmfgg4qvRzex9hnjlPVk2gLVyYt3ogei3
0fPRt9HD0evIn6h3QVeh57D/fvT36CvwCeR3oAeQN4p4E3gIXg0ehdcTn0nu
K2AH+T+y/jP5g9Cz0dXgCu/3HWsniK0CdfBTxB+k/rXoZ9WCWeT+BN6Bt1Lz
DbGl6CfRDdT0RNehb+Z+B71LJfoS+jLoD68kZyXfV1CzDt0XvRw9Ef2pNDhL
7jnQD95AvJN4E/pv9tyJHpX7m/Rtg6PPtpG1buKHwG30M8RXUb8d/TW6jPhR
+EFwCz0NvZfaL9Hb0RH9K3w3OICuQHfBe5OzBP00+33MflPQ7fAV4DB6D3p/
yXfwLbwPGF/4GYvh75PzD3vVE38PPhcMLnyHusuPwK3cPbEM3gHuo3YyORuS
v0HfUgKj4RvBVHgZmABfAZ6idiy6HV7OM1vgzWBx8jvr3U/wjIrkM9ZZn0T3
gr8Ofsv8TvPgI0FX7h5oTL5T3e1o4kvQHyTz4+T01F7J76Ie7pPcc+q9Btbm
U7tRd5S7p9Xb48mJhd95nN49eVZa0RuouxA8e62sfUhsQfJeb+gOqa+Ijqnn
1HuLkr/1GM8oVy8mn1UZ+b3hn4Cs8AythLeAO+SWiD8GvxzMdcePo1cn16pH
1+hbed5XilGzJ7kH1YtbWBsS3aPq1U3oWvRL6M7MM9UG/yX47nWm76KvBe+l
nnuE/H3ottxndDp4RjWrb1JTR/yH4NmsZm1m8gxpluRJLcRnaKYK96x6N4vO
vUbOEGLrk3vpBUL9ieXRszwQvJo8M5qdtdRXRc+IZkXf/ES0J8mbJlG/hdim
4L16sPYs9X8Fc82sZlceJa9SDz9A/Zjku9Wdj4X/ETz78kh55VZ5BrVLyV8b
PIOaRc38iOgZ1Cxqxqai79c3lFyzDd4LJHQ9+nP4Z9FcnrKe2qugvLAHyYvk
afI27aG95MHyYu2hvTYHn8UdcBi+Lfiu5eFH7nqsvHakPIv8mui7lyftgA/j
GTdye+Dw5DPWWesfUYq+E93NdfAwfHe0l8pT5C33Rvd6N+iSP0WffTu6E95E
zb+5Z1yz3hEck+fJ+zTTmm31/O/o5cneIE+SN2lGNCvypHPEn0v+t/VVj8Cn
JXN5vLz+i+Be1BlOQb8I+hX2VHlrVfJZaG168j9L/y55yt7gO9XdauaadRbJ
/0717MvJniRvkgdeCvZUeatmaHK0x8hr9M3ng+9EdyMPlBfG6H+ZzlxnPzT5
bPWP07/ufzHz1R0=
         "]]}]}, 
     {RGBColor[0.50875, 0.48250000000000004`, 0.52], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFl12wl1UVxt/z/t+9z4AXwoEMMz0JHGrCD8pmUs+JD6VOQTTAHPAiCAUt
rpDAYaAvTMAaAyZBBT0VNpPOpE0X2U3ZmGNT00xeqKGMM9EFHBEQa4iij6ue
n8/jeLHP2v/1rr322ms96+Ncvf7ulZvapmlW9DVNT3QZf8T4nn6f0v4Nrcu0
P6D1fq3V+nxfaZp52t8qelKypWuaE6IHatPsE/8q8cfE+6fO7pT8Iu0Xar0m
mSHRqVoX9O0/PdN7JTOscz/T2qf9zdIzSfuTkvu16IDOjYjukuwk8cYl87J+
f6C13Wda80+L3tWzPd9qbMuA1hLtP6c1OXveNrXPvD9F309El2ot0VosHdv1
hm9KZrroKn2fkrfjm705f6Sz7T+WzGzt39a59fp9VZ/3X23sP/w4lju4a1W1
T/m2obFf3ojM1ySzQ+uv+j67WNdbne0eiM0jrf2yX/ulxTp5BzZcqnVOuub1
25+Lit+DvZ9t7MdntX6g/cWeZbc0tvdvsf+2apknOsf557nrL8X746IboVp/
FH9cdFDrzsb6sIF3Pd/5Td/v7HN8hx0vdL7noc64altj65PFcfuD+L/X2qz9
YdHntEa13yu6UzIfluxNooN64wPaf7D4DGcfE729dezx2Yf6Ha8D4k+0xisY
ww78gj8n9Wwf/iUZ7tY6Jv7B4HlQ+rd09h1+A1/o4b4XqmPxhWJ/T0T/lMSC
d+KbafHJY7Fzhc7NbY2xS7QWiD9f62j7Xm6QO//NHpyt05nZ2t8u+jr5JN4v
O8eN+IEV7uTuy3LnuWBsXet7ljbWh15i+7B0rdT+EdGjxW9/sfjcxWB4vDNG
jog/Id7JnvOB/P5Xz3H6d+SRG0ruw+fOkcb38h054vdb0aGeMdQvuqfP+Ult
4B3cCyaoG+Tfa7JvVL9nid7R+j1L8y7i/U6s9e2s9leLHpbOR7WeboxZcgYM
v1rNX1Vs27qcPdTzGeQfqtZ5Snfv7nNNoB5RXw5FBrsWvWtb69/gH0whD66w
F3kwQ05v11or3rHWZzm3JHUH/Z/peY+OV1tjAjzMLMYRebOg2l8LRX+k9XF9
P9e5BoGRm4vxMyO1iThOS/wO9lkeO+FND39mv7893DkOc4OVtxKLa6Rzj/QM
t67TM9IPVgcT6Jgn+ojkbwPjxXl5bWucvKI1p+e3E3tsI76PFsscFp1bjBfy
nrgfTD0BDwOx40xwPas450ZSly5N7cNHn+h37bxB9H3VOf1gtR3gFpvxKXtq
yhp9e0nfvlRchw6mz82ofueh6jPwiPUY79TZP1ffiz3k1xXFe2xc02edv0pf
fSX78zr3j571fqy4Lny9+J2D0YNdE7ENWc7g04H0zc2x/3zecj762I8X17or
g4Gp8fOS1vl2PPEfj29/V50XF6mZxT31p8U5Tf7O0e+V1bXuiuq4XUhNuCF+
vib8y4M36tDs1J1bq2vr4uraBp7pQc8U14TfBN/zgxtmCGre/sR9KO+lPhEb
MHe2z+/ZmPozFJuu77l2Ub+p1cN979X5+bmXs5yjbu6v7k30qH25m3u/Ueyf
64rlkKcXzEz9+V/yeE1i+mXd+5X4ihynf9MT3+3r+HlVZzlkbqyO7f3VcxL9
hT7Dd+SYX7a11oN/n+ls90fk7936dk/nOejJ6ntvLJbbkdrydno6MXqiOGef
LMbhEe2fEn9rZz34iDmNe7ENHICHX1Tf9U7Oi3+ffi/Q/tuiE6lVzGgLk6u8
EYycSO9jLgPzKzJrjKZvboyt5Oj0zFf3Sk+f9su1/2L124klcQSvazJjMB/h
zw3pX/QusDJfZ6p+fyr9FDvRuyjxJc7UOeodOUY9R55eQy99KXfMSy3Zmf5O
HE7kHWsT63XJkTerz2xPrIkd8vR1egg1nzdfTK8jFsyop+P/bcEpZ4czz+zM
jLE1cbmzumZuqMbgpswkxPDx6OEedOLb64LbH1brQBd86h+zDf0I/+LntvgN
vIW8p45uSR6AM/C2WfzV1XYPVuNxW2xenDmQefDFzAyXFNuFfdzxZuc+/Xyx
n3bEV2BtLP5dGx/iW3J5LDi8K3tisTy4RYa6+3j0n8isj8zx2LNL9JbMYcy/
1xbr+7t0LUvPYF6bXBKDat0rEt+Xg1n6O37dld69KfUG+8mb3cmLz/fc5+gL
8JBnFodujf+PZhY5Bj6r3/zRav/i5/3FNXJZZlBqJL2fekXdon5RG5kZwD+Y
nlYtc1N61/LYT67zdmzj/yFiN56z2IqdZzv3C/rb/alFz6Xv0/OZhfZl7hmu
/t/r2fRaeJODJe6ndo9mxiPnRtKP4GMzsnui81D66ZziOYcZhzdemZ7FnP50
+iXYBsfg+fpiDIGl10WHins0Mwv5OpI6f09yB98zA55JjtCX6E/k2PrqmfMO
0VOZpZmpqTPwyWn8vTc+542fjp2Tovt0Zrbd8cN3q2W+Uz3T4etV6eP4YXX6
7/H0nunVMrdUY2dK8PNUMIcPmAHxEXV2VvoO/QfeaPjky4Xg/4Fq/uXyzYOd
9fK/0f8BFG7Zww==
         "]], PolygonBox[CompressedData["
1:eJwtlVtMz2EYx9//4X2b3LSEEhHKplpxoxTJoUwyWnRDJRZXZS7M5rCkhlYO
UUobbjJk2bjDZs2tC6dqbtzUMs202czYbD7fPV08+3+/7/N9D7/n9M9sbKlu
jjrnmrA49tk7d5iFSvBNFlYnOPcr5lx2xLk8fJeCczvgY2gWgK+i6cCXwFop
fBj+mL338c+iz2V/MmsnWMuBX0OzG+0E/hTwR6wPvpczIviH0L4EJ+N/C85i
/2/8J9k/CO/BuvA7/KPgV1gJ9Bxrp9l/B6t1phkE93F+Nft74OXgLvQV+KdY
W8bZH9FMwFs47xO4Gc0p8Bf0x+H9WB68E36DvYvhSRFbGwDnY4Pw9fC77H0K
3wWeYe05+tvwnKjFSLG6gqacu3dyZ6rO5g0prC/Hvw6ejn8S/RS2FDyNrwFc
j73GPwZfAn6Pvh6eiWYmajFX7PfDB8HfWDsQ7Ayd9QT9Vm8xVWxfwKvgaVhF
zN6kt9XB3+FbDZ+G78POO3tTNXgC68dXgWYc3Mt5N8FR/G/Ak9i8iJ3ZiX++
t9jmw1vg+XxvGpo1aIrxbQ1WCzXcUQa+jlWhnYdt0/u9xV41o9rJDZabQ1hO
sJgoNqrZr5x7g7VkfN1YD3i5N6wY3oJfhI/AC7A2bzWgWlBOldsLaEpjljPl
riFYLA7irwM/w0qidsZ2/MXw9oh98xT3bwnWC4nwkmA1p9pLxWbwr2LPInAS
OIe7M7Ef6DMUc3wZ8OmYadLh//SNMasp1Vb/XC+pJ9Wb27x9yx/1KDzqrZeU
w4PsbQ3WG/qmNnC2t7f8hK9Cfz1usdedunsj/lZnOVKubvHb6OyNemuBt15U
zap2twfLlWK+UPnx9i3qefV+IfwY/iZsSL0P7wC3Y6Pw2bjNFmkewIu81YZ6
Xr0vjbSq6UpvOVAuslhrDFZzqj31eC/8e9x6UTWZpVkWTKsYKpbKiXIT4JuD
xUyx0zffUx8G6x311ArNN2+9PK7ZiH9TsL3KeTd8BPsQsZ5Ub+7x1luqkTdo
H6hGovbN+va1wWo3G34UXOatN6UZAj/y1tvD3PcQfMbbbNCMOettpmq2ambW
gP/GrRc1M2uD5VS51Qzsw3ck2F1648hczSXN5XSln+vJmM28RG8zVbNVPahe
1Bv0lgHNfPh+b1gz4FOwnCq3mhEb8BUF+2/QjC0MNuM06/SfcRn+HwapuO4=

         "]]}]}, 
     {RGBColor[0.6652499999999999, 0.5375, 0.42800000000000005`], EdgeForm[
      None], GraphicsGroupBox[{PolygonBox[CompressedData["
1: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
//8Rrjk=
         "]], PolygonBox[CompressedData["
1:eJwllFdI11EUx3/6+98blUGDoO2IsoUVFk2ftCwaViIZFJVpw8CI6qENRhoU
DVMrzcocZSZG5EsURMuIerM9nzJKw6ABGdTny3k48P2edc8995wbn7NlWUF0
EAQ5SARpcEGQiuJqGARrwDOQmqgg6IluP/gpTgPAt9BlwM/CC+G9kFZwb3Sb
sHUgT8DlHh258shdBh6H/MT3FzIePMEbjiU2uYfFKHYXujZwNTIN3ITuPD7n
4VOjraZK+HriH5M7kTM2gKuRHHAuMgXfSaoxymIUexz5Bs9HjoG7yTEM3yNI
K7F53nKNQTz2u/BicBVnLIInIdvAnnx7nN1Zd68j32xnPVKvauGzwLud+aqG
yeA/+A8hXwe6BHK/RJrINxzdK3An9j7gGCQdXhexsxWzHL4OuRlYD3PBj+QP
bib/HPIvRNcf3x34VGH7gUzHvhndFfl7u+tt/D/h/wJeobvD28ALkL6h5fhO
7Cvdifij2O+Au9D1C81HvvO91bqR8+aB/0bsLkORbPhpJEu1q6fEl0VsFrrg
Cbz3XGe1q8Yb+H7SfMGXYi+Fd8Dj4Kvg5+ATneGVehP4ZSQ/tJpU2wl4hnpJ
voHgEfivCExXAr/k7a0U0+CtBtWiM0bhmwjvDu1NmnUXdIOxTSRfJfgXuhT4
IXzuEX/f2y4chj8Ej8anFJ4JPwU/46036kEF+CSyJLSaVNtYzvsX2gy3kHst
uswoq0G1bHU2q/KRr+6su2sGNYtT0MURl6Q3cLZD2iXpZNMOa5cbkXZiFzur
XTOt2VaNqvU99xsErvW2O/GcudfZm+vt9Sbt5Lzobba0YzXgVGe7GUN8IXgn
MgReph0GP/DWmxTsv1UXNX0NrafqbaW32VCMYj972702eA78Onx7aD1X70uQ
7MByKFeLt9zXsKfjX+CtF/qDejm7k+6mP+gLsR+c+WpnPoLTvM2KcqZ6m1nN
rv4E/Q3aUe1qJzLSWw/VS+3gamc62bRDz8Fv0R2MtprTwAec9aYIeQeucDZL
mpHyiPVYva5C9oFnOvs79Ofp70t2ZtOfcMHbzmp3S7G3g+sjhvUn629u9Lbr
9fi8xp7lbLf1pz/zppNNf/YbcLGzXmvmipzVqFp1B90l1tkuamY1u/8BmuLE
Jw==
         "]]}]}, 
     {RGBColor[0.82175, 0.5925, 0.336], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFVl1Ml1UYf//v+57DTfOqzYuu+phEOFyDvCrkwhJnW04RYRMoWAG5BbIF
0mbL9UH2abRlZYFYiBV+DiyLPuxL0Fi11hbYZmarrNis1bqotN9vvx/z4uw5
73Oe5znP+T1f75XNHWvuSZMkuYCVYS3Fx0AhSUqxxmKS9IB5S0iS+jxJurEv
B78cMs+BXo01hbUQ3ytBI+QaQe+E3jrwrsGaSaTXY13qULcd/CrQe8Hvx74D
tBPrYezX4q41WI34bk6ls9l2KP8M9gdwxybslwXpbbJul+0shs4IdK/Amkj0
ng7LfA2dWdDpIN+HsE7gfE8qHcpvxHdnKrnhVGcT9rkvlQ/V2Pdjv9/2n8T+
oURYkD+I/fkg+6N4z75MdohRTyr7JyFTh7MHUuFQUdD+wUR0q/dtuXQo/yVs
3gC5t4BBWS7/6BvtDluG/jCO3dgfAl2QyvbxXPZeAu2FP5XgHwb/NFZJJhuX
g/d+QW/twh3XE1/QBuhswNqG76P2gb7QL8rwPcSAdxNnxoo2iNV9kMtw1hvk
R1smrCqC/ByC/buxP4N9UqQ8bMl09npU7vyZK/dqM+dQJjt8TzHOnkrl04tR
Mi9E5S3xpS/v+W30aTpXfPbkwuBpn89AZyf234A+lumtlKMfRanwXIGzq/A9
lyvWlNmVCB/qLCPOUfnxTy7siTHfTT8X5cKJvpNH/1uj8L8L9CbgsBf8UeyH
cmG5G7yTUX6eiMpv5jP9uTYIj+ejMKBt6jAHn3UebrVN2uZ7+VbmWw3oZEE5
zHqdK6hmiRFzgO8aB/8Y7mrCdy38GSkodqvA/yBT7lyMkmkPqh3ymIczriXW
EeO/OnXtp+odtH9/ELZbgvA8YX+Y8625cuJb2B+A/VNR99I+7fL+EvvwG/sO
6DtBGB+yn7yLurzv5qB8nMyF/WHj0JUqTtQ5FVR3s8Y1s8/sSYOs3UQ5Sr8u
BvWYrwqqwf245wDWu4l84TffcltQHJh3NeZT5qegGP0I+muU7jnQllTx4l2M
Cd+80f2TPZH80SAbv0D+SKo48fs87rgOcnujeGPmL08V6xpjvM44/275VVGy
PKc8salML+XJmPvMOdy7g70yVz3tcL9gX3zUvZF0m/ebM32zLr4L4p8OwvsJ
1wb7CvWZD3/nkv0kKteWuqcMevbMY9BiHP7KVffsSR8GzYoB8Jbkej/zlm9n
XU86P/j2t4Pixzg+DrrPuP9hXfbWMedao/OZ9cy6rovukfaZdquN50LPE+by
9kwylP0+6L27cuXLcmPN/kFZ5sf6XH2N8bgxqDcct3yNc4y9jD2t3zOCe/ZH
zsf6/NJ5vfm0T3zpJ/tTg3t4VdC8PBg1N1hrfCNrfL1zos/9krrMU/aUavM3
OE5Tfut8r1hi3MqMY5PnUpn382cTrvF2zzb2rmL3Ri7WMOuX9zT4rlnX5htR
tbrIsX/ZfenWKEwqXNevRM2R3aCPuFb7QIuLhOkdQXnAfMiCbNT67f3+r2FM
t7hHvRpVuzXmHwvKxY9AmzL9u/C/5UjUfH0TdEVQDYxj/3lQr/kC9DLPzs6o
mmftz7HHB/Xi7UExaXNcmKetxpA5whhxhrRb5oznaq1xY72wZ3FWfRaVi9NR
vLXm01d+s456PaN3RvUjxnsyCuNi4/yp5+LHoK9F+TESNavYryqNYal7b6v/
T5p8F+dWt/tDn3sC/9c6fEYMiC/jMecezxnSHPT/9DPu+S+o310APRuUNz+A
rg6aa1Oc/0F5OUtcXT+M+WL70eP/ogr7yf+yYf+bHfUcPWt7Vc6l8Vw+lRSp
B3EmsNd0ujczRsxN5h/rbkGmGBBnxqrW8eJbS43DoHs6/WH+3J5Jnr2YOche
Xh1la6UxXmz5Ov9j/MvajtItdx42+t+AcW6yTfpN/zdB5n/P1YWr
         "]], 
        PolygonBox[CompressedData["
1:eJwllFtMzmEcx5/3ff/P0411ZXPhitkc5oboytIFytg0W40bUcNywVsXhQvT
zNmU2ZzirbDepJRD4cIh56IYN8iQ2eTQhmlcJD7f/S5+2/f7OzzP8zs9k0o2
Ld8Yd86tQCLkrneuBMVm8B3w6+BcT8y5VMK5N+BGJAUvhZ8B/8KnCf82eAl4
lEPysT9CVmLfj24QXIzsA99HN18Y/wfgl0gdeAFntHiLUax0r8DDSDu4EN03
cBk+3fBO/EfBF9Al4RVILvx0sLdlY2+AD/OeycSuRtegu9GVJyxGsVnebMVI
vfLBPwv/KvgV+Fvse1QPeB74HnIR+1xkBN9j+BwBF2E/AT4eDGcRk8K3GT4D
exm6c+CEt1x6VSPwULDarYIHeC+8Bp5D/B/O74HfjJnucbAaqpaqwT/4GHIb
vAT/Dmxf4Dec1ewreDu6mfg3I9WqD7LTWQ3asQ8E620u8X+57yw8I249noPv
R+Rg3GIasS/yVptK5DK+6WC57cA+D1s/ksR/lnqCrYmYemyH0X3CthuZCE4j
I+A+fGrxvcV9Q/ClOjNmNftBbLl6CJ6Cfw14bbBaTSdmveqt8+GZ8Hx4R7BZ
UM7KfQ3yImZ37gJfC9Y75XQ9WA7K5RBvXKj+BptNvXkZvIHzD+CbifSAW5FG
8ATkOTiJfxW4DJydYTOkWaokfra3HJWrdkS7op6r9zrju7eclftR+GfZI3vL
Xvh7+DtvWDOoWUxH5jse6QcPorsUszd+AF/l/i0J08nWGWx2tXO/I9sZ7U6X
+u1t57R7qlF7ZDOkWVLNO+F9+gOc9VS91U5pt9SjU5HlqFw1M9u8zZBmST19
EuyNeqtmuAD7umC908xqdjXjmnW9uQv+E14atz+oG//FwXqrHc4DT0VXgC2B
bAXXepuNQuXkrUfqVQXyFJ7jbfZ1ZhvxJyOb1Wr4gLcd1a5qhjRLY95qox1q
BT/zdpZ2Xrt/Plis/ogW/VXBZlt/3sNgM6HZ0J9Z5G0mNBv6AzfA64K9XX/G
NP1FwXZFMzQO/h9YqMxW
         "]]}]}, 
     {RGBColor[0.9125, 0.65125, 0.32875], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxNlk1sVlUQhu93v++cJlSXJi5MiDvEmLgokG7UlhiMbpQFti7AtBRsBRRh
ZUuC0WjSRsVAXRhNhA1CUEqI0PpT29oqtT9gjZiIaDEuFFQoxshC0PfJvKYu
bmbOnDlz5uedOff2tqfWbiuLojivr6rv60pRPCbBsPg9olskvEuyevFbxb9Y
BN1ivkd0Wa0oVlWC3mH+tTJ4bHSlorhbeivrimJKe7dK9pDooynW53NR9Eq2
XvpNWs+JHpXtI6J/pND/SvybstEmOqC9V8RvEP+yaKt0pnVuQXSpdOfFT0tn
s/i92h/Req32RkUvip7JIT8tOisb+6V7UPS5FHHuTuE38RDjIccPf1b8beLX
VSIH25wf7nzc9/Y7PvwkNmJskc3vxL8l/W9FJ2V7r/bfrkXcGxw7Z4nxQd9z
WN834n/U+T7xF0TvL8MP7M9qvV3rmRT5Ju/k/0/xHeLHJW8Wv0P88UqskZ8R
HRQ9SY0lX5ci5+QeGXvEskPyWfl8s2pXr29C8iU58o7fB6RzOkUsxIS/71fD
5zHRIdsi7nbXsEN0k76djrXd8d6XItfvyf7lSsSFb8uroY/NjbU4Dz6v+9y5
HPsd1lkwHq6mxTPUq7UMnrPgcdD2wcct4ptF67S/Wt++Imqy3hhbWQnfwECu
RS6REcOd2u8S3VWNflhle+ANmy22TY7Ix1Ln9pL8HpD+RdHRFDi6Sg3FbxW/
RPluLONe7tpUBu13b6L/UhG4o2+JCwwsqy3uH7ZOr32gXsQDPsE9vUWuWB+v
BubA1lSOHpvMUZ+2/9Vuo/P8T45YeuXvhzni/0T0aA6/D6TIU6P9BhfLjY3p
auCMONeUkQdieDdHT92T4p5W99rvOfxqp7Y56k79sUvOyQlx93gufSCdbvEP
pKhXs2v2TA5c0TfEBS6xRX9Q9xbfR6z0F/Jm4wFd5PTJk9l1z9Fz3a479++y
P91l3AWW6ZsVsjPunmuoRexgnfrem0K2wnLufbYaPlMHaka9qBM8dTyRY2Zc
8/xAj/VQjrODOe7DLngbzuHjCylwjx/nJP8rRd8OuCe7PP+Z1/TJ0zn8arD/
xMN5zjaVMd/wh3ej1WevyGan+FPUsQwcgseJFDj+XPRYNc5Q9wuebydz4JEZ
R/4v58DllRz9OuTeWcihU9O5IykwdCPFGvm89m/Uwr8vc/QIcc04h9Oen6fs
ZzXFDAGf5GCN/eLcsRTn5lLEj4z1vLHL+occd3HnNc/yLyT7NUecv+V4L/aU
izOEPICrz1Lg5VAt3jl68vsc+5utA37G7T8zasSz5UQtZPhIjSbcU+SSnm/y
/OEM+vtFX9X6J78L2dgmhnHnFozTA+D8oH37SP78LP51fMgxJ+hj9JhzxA4G
ev0G96Xopzr31IhnK3fxfuBnvWPM7mPeJXSZk//Na3zA30a/Xz2exeQQ/DJH
wOHHnj/MIWZVv/Gz22/6gOQPp+ihWe8TC2tmfK/9Z26/4dnNPnrMB/b77Bt3
zvjeZu8h/zsFJjpT1LLf+aOHxvzeTHnWcleD31pyft1nscE8ASfM7UdS5G5W
/v/i/FMHctPp/HQZg8PGdr/jupQilnd0zxM5sN2Z4z0nBnCy2v8G+xzLqH07
69qSw5s8L7bnmP873eNz7otJ0TH3+acpMIvP2ET2vPv/X6Hqagk=
         "]], 
        PolygonBox[CompressedData["
1:eJwllElI1VEYxe97z3uFtGXQIoi2RdAuWjS4aKBVuSht2ayppbZKWkhBC6EQ
qUVQpJsGXmhIljZaWKgvny50UVHSsFAbrKhoUfY7nMXRc77p3v/3ffet2Hu0
siEbQtgCSkCeP938r8E4H0MYBi/QtegR+LEUwppcCHWZEMrlA434WsAk/Dk4
CD9PzjP4Fep1wNuwvUOPkF9B7llqjMKbVANeAOWlIbzCth3/JfRr+Ef87eSe
oUYXtWax9eDbii0fnaPcMdCMzkXfvRoMwCdAM7wK9MOL5HcQewj9h3pj6McZ
28bhbcQsVyxYgJeC4/CV+A8n90C9WIU+gl7E+fXkD2ErgwfwJOce1So2OVY1
VGsfmCJ+M/pb8h111z3gXvSZOls1VEt31t0PgJ/ctwfcgC8DU9LUKINfp+Ym
YufRvTmf8QVeg206429aQFehR9EV6LfoiWQ+iK0S32f0LfIn0TPJPVKvNNMh
/N/Rq/E1EHMT/+JS9149aNcssV3IeoYF+L/oWekOf+GPsJ0kfi36IXxDdK06
kEevR9fn/E2t8A/gHLyX+PfRPVKvdMdPxF/mPqfQ+9UzfC+Td0c7vEv3BQVy
l+L/Ae8C67Ku2Unum2SferI7uqfqrXr4Fd+d5N3VzvbBx6NnoZ0uwjdG9141
u/EPJ+92J/4d+MqSd0NvqI/aRbAk653bGf1N+rYT5PQTew3/xaxjFDsbPRvZ
5uBPo79VMxiEXy3xWer5DPpuci3tvHa/Mfmt6o02JfdYvVaP1WvNWLPWm5rT
viTv+m3wC//p6Fm1oAfwTSfvrnpajW9btE9vVG9VOcrVjv6G30/+LdDMH8D/
A3NDp3Q=
         "]]}]}, 
     {RGBColor[0.9375, 0.7137499999999999, 0.4062499999999999], EdgeForm[
      None], GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJw1VTtPlEEU/Xa+b2YTEelI6LTQQhr4BSRKYQEFmAg+ChcfQTFr4iOh0kY7
G40xayzQheASMFECoohiADFqBDQGG+MDofGBsPgINnpOzqWYvfPduXMf5565
u6nleGPWRVHUgRVjjeNnIxQtqSh64qNoO+RqEkVzkBmsKdhk8L0f6yJsh2Hb
BP1j6GdCFF2CbgqyNcg+DR9noSuD3SC+61O61wX7Icg89M3QFSCrEsUtx34C
sharErqtWL3QbcFagS6LVeeUE/djKeXDXGssTq3tz8T6HjMd4z4M0o9AVsCm
ECsv1j2fUg7d0OWc9EXY3cX3QdTS57Rfy7nFMKGPbvPDuu7FwuR+rG/at8FP
G+48h5+dXjV+88KTuDH/n0F3D0F/HbID6w78VMPmgcWjJO70XzQMmMOI0xn1
G9I6O+2FN/PqhL7fejaK/W+c9WB/JEg/EKuXy0H7A17+GHvY+lNtPWI/mFsd
9p9g/xJyr1cdGeMGz2+YTR66AcgFL9x6LAfa0BdrfJuoBxe8dOw79cT1JlZ/
pPzyViP7c9WprpO4s4yz9Wlxps94dctpz7usod9qZC0Fy6HTySf1H4Jyboa/
U14YEkvmS3ty+k0i3swF+e41/wtBee4zHIgBc8tbLc3G/5zlzHvEhnfpp9J4
vmj9WAo6z5l/+hkyXpHvGeP8Wm9YC2PyjDxn7/ie2a89Xj1ir5hL3jCn7LR9
K+Q1p7dCm0rL+XIsnJnLZsgXzI19iHWXuFF2mZ8Vr33RK/du692PoBxnE90n
b9/h+5jXu4uD+FVlfGPMnMX9Y1wlZy965VGa1lwhr65EmlPEY9r4WG/vvdGr
hlfQb3M6o37Vix9/vXhD/pzwqp+zg/OCb5Vv9pkXPjxjDPKC8yhrdczZGzzv
xQ1yZNnwYo1LNrOypluy2vm9YnvOKdbDWoaD9ue84uyy2Tfp5If3iVm9U1zG
bzN+tjvtqWOtFTbHZo0jtyHHbR4yFucQcSEmnw2jf/bO560uflP/OohfY4Zh
g9O8pr9Jw+gp5HQijhcgm2yWvcfdw14z8VfQnXLDmbyrMXx3e3HrY9B8ZH7f
IR8F/ZeMQpakxcN1adVcMBwavOIy/qKX/5lEMSYs51TQrHSc64kwLQniH+tN
gjBuNwy/enHxC2RZWpiXYu+D5hXnFv/nmMfRoDPapMy2aBhy9pGrO7zyGTT8
/wP1JhHa
         "]], PolygonBox[CompressedData["
1:eJwlkr1L1lEcxe/veX73PqCEW9BWQ/0VgWBLgw4apL0NmYn1SA0VNNVS0NCi
uERDL0YqJaiYr5VBakRUaltQidlSZPpY9DKEn8MZDpzzPd977/fl7mo923Sm
EELYC3IQUgjTBB6DDH4shtBfDGEH+ip8JZm/zkI4jD4BRvFHwBpejm7OHNtA
v+fSPeRXiJ3HuwZa4GP4FfxB9DOenUD/RK8n3zVD7Ae8LTr3IXf8gS9w33Z4
IxhF/wOD8BHyH8CvgBr0Zc485fx39GzmM2vwZWJ3i65RtZ6MfnscbOKdAgPk
HsfvUD9gFb6TWEyuQbXozb/wbaUQdsM3yDmHLoPnRc9Qs1RNqq2P2Bf0G9AN
7yXWiHc6+a0y+WV4IXn2molmM06/BwueoWapGlXrJGjHHwb1ePNgDH8V/37R
O9PuLkTPvgG/hlqPRO+uDv2Z3Orks+vEquDXo3tVD+qlBdyB3wIf8H8lv60d
apdHo3vTm3p7EfTA6/H/54a47viE9zK614tgCf6W2L7MM1mA9+eezQ38b/gD
6JvwDvWI/kjObXKHyXmHN5O860fcMQ2vkHOP3F7tJDpHuYptRveoXl9xppp5
DOX+a9r5b/kle9ppFzoreXb6A53o/frvmf/YFHctJc9Sf+wA3ovoWtXTHPxr
dC+aSVN0TapNf/BQ9Aw0C+1Qu+wDtQX3rN7Vk3q7RP4T/Y1krhzlaifajWbS
jN4CDRqR1Q==
         "]]}]}, 
     {RGBColor[0.9625, 0.77625, 0.48374999999999996`], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJwtlD1PVkEQhfd97929Fho/onYU9tBIAv+AWFFoBWqjaAFGLNR/YKKJNiZ2
YKNUREyURBNEwRixgldthEQL0VILP/mw8DycKW52dvbsmZkzs/fImfHjF9sp
pav6Kn1d2nxopbQou1VSWpedtPbVKc3rbEXbOwJOyh7U2fec0l3Z37Jx4Mdk
vxbmbPD8lf+hMNvyb2bzb2TzPQ/OqhFWdhG2kT0izC1hpvUNyL+ldUw5dMQ7
3vL6Nmx43sv+JJ4h7Rfajgv3i+B/pLsvtc6I51XlM+7mYkxdnC95d4S7Jtyy
9qe17m0c60o2Zik437Rtg0cPdJiS3V/77JKwR2tzks/+xv7dxb6liHVMvtWW
udGPPTa5kvOm8HOVa3ucHJNz7n4t1gedDjWOeTs7n4no0UZoPpLN86wyLzrB
id2jPLv1zUR+5Lmn+N5A4C6Edq3GeHo63HLP6F1TrOt8aHuvMh85g8WepRfZ
uWfxjMZc0btfxbU/0Pn17Fn8Ld/T2vide+Jc0fdR+97a+lIHNjkwN6z4dvod
GhCXOMQjN+qjT2h5v3Ku5LlWm/tJbexY4OvG/dql9XI2Zi006And4Oed0APm
cT5m4GDj/YHGGoNHN7D9gZ/Nnp1O7bmnjnbjO9w93PhdMR83s+eS+fwifX4U
a4Vm9Gk55oSZ6oq3sFHc93/FGlIXOp7Ifs/viueGXPYp1o3sHP/Iv11s4yP/
udCKWHMxS4vRg4XQnr4Qt4Ru6EetfaE5Pt4AdaId+g/GzEyFvR5vgrfGTDAb
7eKziZgl5nMo/jPD2b38XFzfaNQIdjLeJhqQM/WsF8c6mZ0DtVEX874cvORI
LSOhNf5T2bzwM7fwdUdPl2IGyJl7vXF3K/SnDz+Le3Mu/ierkf/5bJvz/4gm
z44=
         "]], PolygonBox[CompressedData["
1:eJwlkrsvhFEQxed7zL2a9YhHpxD/i6gUdEsluyqxCv4EnVZJw9biUSiEEAkV
n0eCgoSNDoV4ZHcl/CZTTHLOnDPz3XvuNzRdG59LRWSYyqnuKDKfiJzR7AF/
BZFB8D29GRXppfeI7zoT6QMv0rsEF1QnvASvJd7rgufMHzJ/QGXglF4F/cg4
WKmCfaf4A/iN+TW0VepVvQyvoE+An9mxAd5h5oYDp/BR9AY7E3AMvvsYfRv9
KvjsGPofvMWOEfQ7eBO8rD57gf82d49568w0mJ1Ux+vUE7wZfPc+vAUu8NfF
z/yOtxQ8O7vTHlpF/VuW4QfaN1WGb8J/wAl3Psk8M8vOzmBnscw0eGaWnXlm
0dvqs7t4tvD+Bj+L7WyDO6JnaRnH6G9ib/OAf0E9M8vuHH1J/U52N8u0DJ9S
1yyjF7Sq+ttbxp/wgehvb/9IP/gfqaFUKA==
         "]]}]}, 
     {RGBColor[0.9875, 0.8387500000000001, 0.56125], EdgeForm[None], 
      GraphicsGroupBox[{PolygonBox[CompressedData["
1:eJxFUrtOw0AQPMe5u6RAAvHqkJwU0OQT+ACaFHwCEm2QG/gukJAiBBQgJFKC
eCkuqAx8ALGBUDDDrOTitLtzs7tzu5ftHeyOWs65bZwUJ2s7VybO7eOMvXNb
uCyAVYn8PBGnh3MH/hh2AnwhCPtKhHcZA38BNgO2Cf8V+CCIc47aT151j2Av
0XyDvRA/puIzj1p2WtLDeh+mbQJOhvgN/tAstdESp4aRF78bpYP5p8AOrS/7
v1u9aycsN/0n4F+BH4N0TY1DbmE+76mNGo/b4sy95tC3WXB2nNt6lK7S6n+a
7tzeVyRNbfZj/R/0vsA7v2HnQTP6DZoN8zlP5pLDPO5haHfsXVmvZ694YLn3
qTjsXVudpSh80XTepNK6gvgB/nLUO2rL4xv5DzjfGLWPTlRMnG/p2z8hthq1
17XY9Gbf0vj/f8byO0F76dne0yg9Ldgad2fwq9Dsm7kBd7fAfdT8yJnajImT
9wdn1WxZ
         "]], PolygonBox[CompressedData["
1:eJwlkbsuhFEUhfeZ///PGQkJ4tKIZCh4AQ+hUXgE/YyOZ1BoPIhCIiaCQiIx
rRAJtcsDMDOMwreyip2stdfZl7VPZ29/t9eKiBWiJrZKxDrgM0X0mohzYo0H
H/AueBl9Ez6EH8APG+Mx8QyeyRED9C/4NPiHuK4itsmdoo/hr8m5X3BDv3vw
DvpZ4xrVPpCbQxvCL8Gr6EfoLXJ38A78GF7D35N7ZHCbGFTOScvUvyXXVPAJ
NS/JPUdos8WzNuh3gjYP/0Z/JLdQnJP2BF8s9iAvt9q39s7aXZ77tXfUrje8
n9C/nX1L3XAKfIE+Sr5hH/yX/VY30W3kSd7koTDvqvFt9Sf6m5I9W57kbal4
N+2s3f8BP78/ZQ==
         "]]}]}, 
     {RGBColor[1., 0.9099999999999999, 0.6749999999999999], EdgeForm[None], 
      GraphicsGroupBox[{
        PolygonBox[{{241, 245, 225}, {603, 595, 232}, {1464, 599, 1463}, {970,
          707, 595}, {237, 595, 210}, {1545, 707, 1544}, {637, 759, 232}, {
         241, 249, 233}, {759, 603, 232}, {595, 707, 210}, {595, 237, 232}, {
         1398, 982, 1815}, {1389, 594, 1461}, {1390, 603, 1845}, {1845, 603, 
         1468}, {241, 233, 232}, {1495, 637, 1399}, {603, 970, 595}, {636, 
         233, 224}, {636, 637, 232}, {245, 241, 237}, {233, 636, 232}, {249, 
         241, 225}, {982, 636, 224}, {237, 241, 232}}], 
        PolygonBox[{{1243, 224, 599, 1464}, {1461, 594, 210, 1240}, {1240, 
         210, 707, 1545}, {1544, 707, 970, 1801}, {1468, 603, 759, 1581}, {
         1581, 759, 637, 1495}, {1399, 637, 636, 1494}, {1801, 970, 603, 
         1390}, {1815, 982, 224, 1243}, {1494, 636, 982, 1398}}]}]}}, {{}, 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1389, 1461, 1240, 1545, 1544, 1801, 1390, 1845, 1468, 1581, 
         1495, 1399, 1494, 1398, 1815, 1243, 1464, 1463}]},
       "0.9`"],
      Annotation[#, 0.9, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1201, 1531, 1783, 1782, 1417, 1787, 1788, 1784, 1786, 1785, 
         1454, 1202, 1543, 1542, 1795, 1794, 1421, 1799, 1800, 1796, 1798, 
         1797, 1458, 1208, 1549, 1548, 1809, 1808, 1426, 1813, 1814, 1810, 
         1812, 1811}]},
       "0.8`"],
      Annotation[#, 0.8, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1207, 1242, 1396, 1806, 1397, 1807, 1293, 1793, 1388, 1539, 
         1540, 1541, 1239, 1420, 1387, 1536, 1537, 1538, 1453, 1780, 1381, 
         1779, 1382, 1781, 1416, 1778, 1380, 1528, 1529, 1530, 1451, 1765, 
         1372, 1764, 1373, 1413, 1236, 1762, 1370, 1761, 1371, 1763, 1279, 
         1746, 1363, 1516, 1517, 1518, 1232, 1460}]},
       "0.7`"],
      Annotation[#, 0.7, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], 
        LineBox[{1186, 1509, 1352, 1722, 1412, 1726, 1727, 1723, 1725, 1724, 
         1447, 1193, 1478, 1479, 1477, 1273, 1743, 1744, 1742, 1361, 1231, 
         1192, 1515, 1514, 1362, 1745, 1278, 1759, 1368, 1757, 1367, 1758, 
         1235, 1523, 1522, 1521, 1369, 1760, 1284, 1777, 1379, 1774, 1776, 
         1775, 1238, 1200, 1527, 1526, 1641, 1640, 1287, 1642, 1643, 1482, 
         1481, 1490, 1457, 1206, 1547, 1546, 1803, 1802, 1425, 1805, 1395, 
         1804, 1394}]},
       "0.6`"],
      Annotation[#, 0.6, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzjlOQmEUBtBLVGzchJugc1iCUrgAOykcWIG0sgejNjTPoXKsBAsRBTWx
ERuHQhQTQmJiIeh5xcl373f/l7zJxZX8ciYi5tkcjaiORdQ4p2/fzUZMmxM5
JUusc2CflXtyRu7LHbntmzf5yonumLt05tvtQt7Som7f4sX8zJG3h/zormSD
OnNuTV2FjvmdG/01A11bPvHIgtu9LqFnvmSEU87oevNFh08+SPRDBvyyxJ9+
Q5bTmRiPKMicXHWbMK/JIs30f3jgH/MDPBU=
         "]]},
       "0.5`"],
      Annotation[#, 0.5, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzjsvg2EYgOFHQv0OU1kxWimpRGIiJk3URowkjIw6qmOV1GkgcfgFqMXu
kJQJi6SSikEjrm+4cj/v871v2o7c7OhMS0RMkG6LWGCejVREp67pOkW2nYut
EYPmITJ8Ope0x7cd7dYlFtl37tVd3aNMyXnLm2Hzl2a1rod6xAF97lTtNnk2
P3Fif0zD7kIH7M61X+/sXvWFGhkuffuxv9Fbrhmxv7er8G5+S97aV/m1G9Om
jusjD8lvunNql26PmDQvs8I3DXJ8uJfSKZ0mzx9nyf/wtsvbOfMqBa74B/YM
OnU=
         "]]},
       "0.4`"],
      Annotation[#, 0.4, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0DsvgwEUBuAjcUmYJRbXph3cSljo2MbGIBEjcUlM7Q8gkfAHaLUSghgk
LAZ/wKWrTREJK4mYDSbPNzx5zzl92+9L+1dK88WmiFin0hzx1hJxx5f5Vn7K
g9aIXnNF9siy3KeTAnn2uNct09cW0a13zBE1t5Rbxnyo18W324ysUaVurzKg
l9b7MZ+6Z80nclRusck4I3pj8ix5jm7aPmXeJkfWPi3Pk47PM/a8eYddPnin
wI3f/9Wpyzn7g5yVj24XLNr/kneTKV54pcGC3rO8lFcsJ/+dfSm5+841q/Y1
BhlimAnvM8mGXtHeLkuyI3kuDZ74B82UNMo=
         "]]},
       "0.3`"],
      Annotation[#, 0.3, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwV0Dsvg2EYh/Gn4vABSJCWKh0krcTmfGhXFg0W4tAPgNGIwSkUiUSZsRgM
NYogYTGazEQihn4Cid87XLnu//3c9/M+eVPF1cJKLISwhrvaED5QqpPR3RBC
Rb5V/9WHsIwiFrCERXxH2fk81/Acx/idp7mKG3ek5A4kMYsZXOq/YcLMkzzJ
17hCDr2+n+eEszgKmMKFnVf0RbNyf7THVb0eddpeWf2CjJyVs/wrpzkln6qf
0Sln5C7+kePcLh+rH6N/4d4c8mjCERJmkmZOnJfV52hGm96B3gO2o3dhAI3Y
wS5azO1xK+/zp9lB/uIhPuQRHsUwxjGGkv6ZnU31Fjai98jruHdW4X/OOzOl

         "]]},
       "0.2`"],
      Annotation[#, 0.2, "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       {GrayLevel[0], Opacity[0.5], CapForm["Butt"], LineBox[CompressedData["
1:eJwVzzkvplEYxvEjGYzGNjHGGhJmvIqX1/oJFCSWoJJoNNOYUdjGXhg7Udga
KiqJQolYChWVTmEZEolqmvkC83uKf/7nuu77PE9Oad9A58+kEMICBpJDuEUa
fqSE8JH7+TvXpIaQQEyuwDck63v56EMIX7kcZQj6Hj7U36HYuQjd6MK+7gbN
9q7kFj7APo7ldnSgFf/stXG9Wdz/GzhfzsNfsxbe4WvEzHblSt6LzihBpXul
nGv2Ge92m3idL5FvtiKvYRVvuhxdgXvLzueY1f9GI17lbJ6Lvmev0N6Kbst5
G9nI0y3ozjBlbxo1+CNn8Qw+RW+xt6irk1+4lhui92JJ3rCziXR8sTuvO8Gg
eRxVSMcQTvXDPIJqPMgZPIpfyPCNBD/qM3kM48jUT3AWT/JT9GbnZ77ge/wH
6eA6sg==
         "]]},
       "0.1`"],
      Annotation[#, 0.1, "Tooltip"]& ], {}, {}}}],
  AspectRatio->1,
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "GridLinesInFront" -> True},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8151427325233307`*^9, 3.815143083766616*^9, 
  3.815144083953087*^9, 
  3.8151441172315397`*^9},ExpressionUUID->"9ff417b7-908c-4330-a066-\
a01e18295b8b"]
}, Open  ]],

Cell["\<\


Theoretically for classical LDS their discrepancy upper bound is the QMC \
error bound and so naively we can just compare it with the MC errror bound: \
logN^dim /N < 1/N^0.5 . For 1mil samples already at dim=3 the deterministic \
bound begins to fall below the probabilistic one.\
\>", "Text",
 CellChangeTimes->{{3.8150695591107693`*^9, 3.815069655481825*^9}, {
   3.81506969069516*^9, 3.815069754927443*^9}, 3.815070252377335*^9, {
   3.8150741018123007`*^9, 3.815074115965021*^9}, {3.815074248668956*^9, 
   3.81507426192262*^9}, {3.815074323797586*^9, 3.815074463924531*^9}, {
   3.815074554129081*^9, 3.815074564795978*^9}, {3.815074654097144*^9, 
   3.815074659160699*^9}, {3.815074690703919*^9, 3.815074724701017*^9}, {
   3.815141735897538*^9, 
   3.815141736934856*^9}},ExpressionUUID->"9342cdcd-75e3-4600-8964-\
8909aaf5e72f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"n", ",", "k"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "k"], "/", "n"}], " ", "==", 
    RowBox[{"1", "/", 
     SqrtBox["n"]}]}], ",", " ", "k"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Simplify", "[", "%", "]"}]}], "Input",
 CellChangeTimes->{{3.815069110437325*^9, 3.815069178628852*^9}, {
  3.815069278940901*^9, 
  3.815069384849072*^9}},ExpressionUUID->"968d6e29-3666-42ae-9354-\
549c712a0ec6"],

Cell[BoxData[
 TemplateBox[{
  "Solve","ifun",
   "\"Inverse functions are being used by \
\\!\\(\\*RowBox[{\\\"Solve\\\"}]\\), so some solutions may not be found; use \
Reduce for complete solution information.\"",2,13,2,30342609180971163620,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.81506932361782*^9, 3.8150693854897013`*^9}, 
   3.815134413919804*^9, 3.815135182024086*^9, 3.815135518138775*^9, 
   3.815136664005121*^9, 3.8151367146820583`*^9, 3.815136830787758*^9, 
   3.8151371886017036`*^9, 3.815137404508739*^9, 3.815137539628964*^9, 
   3.815137629558751*^9, 3.81513872705457*^9, 
   3.8151411625988483`*^9},ExpressionUUID->"9047b764-905e-4533-9bfb-\
da9b4f6481af"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", 
    FractionBox[
     RowBox[{"Log", "[", 
      SqrtBox["n"], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"Log", "[", "n", "]"}], "]"}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.815069159616515*^9, 3.815069180985083*^9}, {
   3.815069279813765*^9, 3.81506938549839*^9}, 3.815134413934869*^9, 
   3.815135182038028*^9, 3.815135518147403*^9, 3.8151366640124702`*^9, 
   3.815136714689651*^9, 3.815136830798151*^9, 3.815137188618083*^9, 
   3.815137404527787*^9, 3.8151375396387167`*^9, 3.815137629564701*^9, 
   3.81513872721192*^9, 
   3.8151411626090107`*^9},ExpressionUUID->"f9541b1d-d6d9-4c4d-8af9-\
6c85774e1237"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", 
    FractionBox[
     RowBox[{"Log", "[", "n", "]"}], 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Log", "[", "n", "]"}], "]"}]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.815069159616515*^9, 3.815069180985083*^9}, {
   3.815069279813765*^9, 3.81506938549839*^9}, 3.815134413934869*^9, 
   3.815135182038028*^9, 3.815135518147403*^9, 3.8151366640124702`*^9, 
   3.815136714689651*^9, 3.815136830798151*^9, 3.815137188618083*^9, 
   3.815137404527787*^9, 3.8151375396387167`*^9, 3.815137629564701*^9, 
   3.81513872721192*^9, 
   3.815141162614625*^9},ExpressionUUID->"df79ddb0-bea8-4c0d-aabe-\
5c2512312912"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{
  "n", ",", "d", ",", "qmcErrorBound", ",", "mcErrorBound", ",", "kd", ",", 
   "kn"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   SuperscriptBox["10", "6"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"d", "=", "3"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"qmcErrorBound", "[", 
    RowBox[{"n_", ",", "d_"}], "]"}], ":=", "  ", 
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "d"], "/", "n"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mcErrorBound", "[", "n_", "]"}], "          ", ":=", "   ", 
   RowBox[{
    RowBox[{"1", "/", 
     SqrtBox["n"]}], "//", "N"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"mcErrorBoundX", "[", "n_", "]"}], "          ", ":=", "   ", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"n", "^", "0.5"}]}], "//", "N"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"qmcErrorBound", "[", 
  RowBox[{"n", ",", "d"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mcErrorBoundX", "[", "n", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"qmcErrorBound", "[", 
    RowBox[{"n", ",", "kd"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"kd", ",", "0", ",", "50"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "500"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.815069977694603*^9, 3.815070021997437*^9}, {
  3.815070063891358*^9, 3.815070090485683*^9}, {3.8150701680005627`*^9, 
  3.8150701760313177`*^9}, {3.8150702205617733`*^9, 3.815070241468886*^9}, {
  3.815070272743734*^9, 3.81507027891009*^9}, {3.815070406579804*^9, 
  3.8150705383456697`*^9}, {3.8150705903187943`*^9, 3.815070626252269*^9}, {
  3.815070764679373*^9, 3.815070772332034*^9}, {3.815071043862708*^9, 
  3.815071319772716*^9}, {3.815071465682989*^9, 3.815071504181983*^9}, {
  3.815071558227276*^9, 3.815071728955864*^9}, {3.815071768469508*^9, 
  3.815071885218216*^9}, {3.815072520494831*^9, 3.815072570754305*^9}, {
  3.81507360512574*^9, 3.815073636805656*^9}, {3.815073670172183*^9, 
  3.815073670200441*^9}, {3.815073740617187*^9, 
  3.815073767327354*^9}},ExpressionUUID->"4ded93c7-19aa-4b5c-8e71-\
ac774f578733"],

Cell[BoxData["0.0026369434556123444`"], "Output",
 CellChangeTimes->{
  3.815071243196835*^9, {3.815071295815776*^9, 3.8150713205995293`*^9}, {
   3.815071478628124*^9, 3.815071505071241*^9}, {3.81507155898391*^9, 
   3.815071593880138*^9}, 3.815071631712307*^9, {3.815071673353592*^9, 
   3.81507172948116*^9}, {3.815071770373942*^9, 3.815071886191399*^9}, {
   3.815072539731395*^9, 3.815072573182123*^9}, {3.8150736069612293`*^9, 
   3.815073638169194*^9}, 3.815073671581868*^9, {3.8150737415989923`*^9, 
   3.815073768213399*^9}, 3.815134413943396*^9, 3.81513518207241*^9, 
   3.8151355181677303`*^9, 3.81513666404246*^9, 3.815136714718298*^9, 
   3.8151368308130493`*^9, 3.815137188631135*^9, 3.815137404538107*^9, 
   3.8151375396725273`*^9, 3.815137629592061*^9, 3.815138727244835*^9, 
   3.815141164396594*^9},ExpressionUUID->"f5ad1b93-ca31-44d9-81a4-\
ede45699869e"],

Cell[BoxData["0.001`"], "Output",
 CellChangeTimes->{
  3.815071243196835*^9, {3.815071295815776*^9, 3.8150713205995293`*^9}, {
   3.815071478628124*^9, 3.815071505071241*^9}, {3.81507155898391*^9, 
   3.815071593880138*^9}, 3.815071631712307*^9, {3.815071673353592*^9, 
   3.81507172948116*^9}, {3.815071770373942*^9, 3.815071886191399*^9}, {
   3.815072539731395*^9, 3.815072573182123*^9}, {3.8150736069612293`*^9, 
   3.815073638169194*^9}, 3.815073671581868*^9, {3.8150737415989923`*^9, 
   3.815073768213399*^9}, 3.815134413943396*^9, 3.81513518207241*^9, 
   3.8151355181677303`*^9, 3.81513666404246*^9, 3.815136714718298*^9, 
   3.8151368308130493`*^9, 3.815137188631135*^9, 3.815137404538107*^9, 
   3.8151375396725273`*^9, 3.815137629592061*^9, 3.815138727244835*^9, 
   3.815141164401609*^9},ExpressionUUID->"af8361a8-e461-40ab-b7fd-\
4608fc7d66b3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVlmc81osbxu31IOvhMeMoIScle/zuu7JFITITKSMqjll2yBYJSahkJSUh
DTJSOkgIpeyVkZE9/+d/vbk+3zfft9cl5nDZ5DwNFRWVAjUV1f/7r8Sth1ki
pUR9x3DyeuMzopJJare7cyK0/9LV/ce3lKj1K8mVdM4GqfR78jKyz4nGgx5O
DM5PIXrwwVhyeRkRQN55uZNTBqFqu98Ohb8gUpO1iM34Sph86yJbaVNOfIxr
111yqoGxNy9WT++rJObCWcf9imrBRUqsbEjgJRFY/1RqJace0jPVd1+mVBGp
uFzyJ/4D9FdoOyoefk00qV6vmnb6DHoC/HZCizXEY3XuIIWnbaBo/9hZ8ME7
Yr7XMdur6AvsHjymy2FcSwQJMA0t5HTATOf41a6GOqKhypJWLrMTzFWUxY/G
1BMslo/3eKR9BSLgns2n0w1EWpqR02x8N5wzizSMZm0k+hRzog5E98COxZaJ
92IjsadrvtA9/BtoVpa1TYx+IJ7x3J6eutoLkr+sjmyMNRGfkno9Jpz6YYTv
690v7q1EVHpq061DA2DylXg/9OQzIeMMVoefDsCUP79OfGAb4cmYdM2zaBAa
/vYPSu3/QpC7VVi5JIcgPC2xKfVuO/Eybyiz9NEQyId9Tjpp10Fsa8lXz+UM
g0czzivvdBL3yT+NboqMQJ3CoCzPj6+E5mhEv2zmCFjfUAijqesiYsO7qS6n
jYLpQzbBjKIeglJ/9dhM/DgQyQ00Eus/iNfJ4p1xpAngv1hTNy/dR5xxaHaU
iZ6Ah8V7Qo859xO51CKRF8N/AU9Z5yNt+kFC50sjL4lmEvzZFnKMXg4SkzmX
84uCJ2HKxb+m1HOIOIS1H39dnYIwznfcddvDROcuV8vo1SnoHOd6wf1lhPDr
55qU9JkGlyqlJObiUaI6yJHk7DEDDa1PTY0Dxwn9t4xGY06z0PeaU1QxfYo4
tOOwxDs3C3/1JGe4dkwTcaJ2reLqc9DNapzyVOg34eXwyvtUwxwIGys7rbvP
Ec60zk1uTPNgP+dDyZOaJ2xyycIRx+fBImpvcOnMPKE5dqWhvHMe5uXNDF1v
/iGUb4hQWikLMBJhSz1yeZGQkWy+OGazAHbayU7mlksEt+s+br7RBXh733N9
3mCFGJr5ae+39AcUMPF+49sNoishtvymyiK8XSyWK1jfJD7JqjAXBi6C7xkH
5yda28Rzj5Rn3+iXQKQicud0OBXkcR2lW9BbAmbpe9K0R6gho2z2NEvCEtDA
GQ9+BhoIXdLfUeVdhme5LEdYH9OCV+qqianVMlz4eUemIpYOnJXy8i5mLQO9
krHtBR96OOlPbZQpsQI1SwalBRcZQXSrMnNLcRXcdra0YoZJwJN1fo58bRU6
nLsUBP9iAybg1jxQswqtlqXMw5fYYTbk0tQZnTW4kcvD0pnBAUNiQuAbuwYK
zp9YQiw4oauuKTnx8xqkskxmPhDhgmq6varvTq9D4hq9T/t7bnj+qD2+5+46
dHhoKJXk80CedsjgXP86GKpyD9+7RYaEqN4oMecNoFfZmxITywe2rMndYX6b
IFW0bhLKLAQnn8D+u2824Rnbh+l6PWHQNJoJKqPagspr8g0n00VA5qauxEjU
Fmi5nnp2qVQURA8t+282b4Gpk/6I0BUx4Gl/2MLDuQ2jCrSyhkp/wSb3jpfW
nW3I/3Rf+O2AOMy9KP5o+3MbYu52nWqu3wMjZlZCPmI7EJ9UdmDr2V74N628
Pq9wBxqD63+mPd4HLWyKzHS2VOj4IoS9WFYG2g240lsDqHD750zGD+u/oSf6
t8SdTCr8JNSvEZNyAEbo8zUP/KBC20mr/a9TD8LksesdqxtUmH35RLuTziGY
C7VzqBekRtWNUsqlnUOwucUXYmFNjbtIx0fqIw8Djfoiu/g1arT/9+VAlbk8
MF1tuzeTQY2zuS2l5rIKwL0c9TrsOzX2aXGrrG0ogvTvteViSxpUZTbynWNT
g4MyXRG+/jRoweBuwH1AHRRdn/McvUODc9keXXJWGnB0zFWuu4cG28L6WNx6
AHT36NTeX6XBnSeX0z/dRjByED/pRqHFnDAVDXftI2DZ1+tObUGLsSOpzqzV
R+GM0MvNf31pkX5WrbIg4hg4WqXEpqbRYj3P+6lkM0240nW8cH83LYbQPPSv
2KUNUa1vR8zM6fAuo5lg94oeJLBm/CPqQ4d9+7aEnVkNIEXfh2bqNh3G6Idm
X5U5DtmNB0RDvtJhu83GWe4kI8ilIz3VX6LDC8M/FLO6TkDR0XENMpkemQz2
cn9POQkV1dnWRafoUTDzk7jjljG82bw26eVFjzyMNhmbb0ygTtXCH1LoMSRY
MSM+3BRaKzjSOjvoMfVJqtGcjBmMloS2b5swYNmvXMeJaQuYnLa1b/JkQO1d
HNfPLFvCnLTq3K1kBhw9NPa9n8UaNvMW2KTaGTDMp+N2v7kt0Iy2Zv6Z/49V
lCgWiWeASfzx/mpORkxsogts67QDnuxzeqbGjHio64GGn6Y9CPyEHmEPRtz/
/TrYbdqDqKCQ08RNRsydi+ydfu0A+9M6wwPbGPGl1tZhLVNHOJqo9S7/BBOO
tcbFlE47QYj+i8L2S0w4VWD26PyYM1TTi9/aimfCUj2eWZ1JF1ANoLpg2syE
LR+jnDW53MBP6fKJoCkm/Bzgo41K7lCx8FO5kIUZhV6xsx5wvgSHXV6TdnSZ
sblTMHrK9wp47pFeknJmxnwjl8QWcQ941p/ed+oGM3bNVsaWdnmAjLlPadF7
ZvS1+jSXZ/IP7Dl26LT5URaU+w17WYp9wGE7G0PtWVBY4t+4x+m+kFPFLl0c
woKtLa6lCwl+IHRwepO6hgVnvyZxMGdcBaspqzGZPhaU7E2VLHl6DdLzmj6f
3mLBJwxCHI/aAoAsnP/giRoJt/+0lp5XDIZTPeS4HisSSumH/00mQiD5Vrg3
7VUS3tmvEnd3PATYWRx0LV+S8HG7sX/xiTBgWBH6TafAioXzqmdlAiJA83ls
t+wpVlxXMjNwtYmEMPf1d1b/sOIMv21es9YN2B7uvvWslBUzzKo0QhSiQT1b
O7C3jRVlHsjszVSPgatW5RcY5ljRcT5/r6dRLKy0JavYHGDDweiYbo6UeFCM
oxa/YciGxQ4tpz58TAAvnSusz93Y8LQu3QIz/U2Ye2vYz/iYDZv052iPWCXB
RBFTRNk+diTGXqop2aSAxAXfS33a7OhQ0/2i8uBtcBQbO818gR1pd6rIQ2yp
MJBWL22Xy457gnLn7g+ngYipHE9MPTtScQf5r/xIBxv2+1svhtixqPCYue/A
HfgWHtTGIrYLl73Z6h4wZgIFZ6oUcBcGVLQVysrcA/MN64dn7XZh9WHRP4U2
WdDuoeJTcW8Xakk0dZd45MB52XW2Q2wc6LgYF2xm8BCO9954RBHhwAdp5+sl
JHJB/gZZg0qWA0kLh/MKWR4BXf9Bt88nOXAyyWQiZCEPpmOqaSvtObByqmqj
ZjkfOhSP383y5MADVAdvRDIUwoMEp0/uKRwoknGs85X+Y4hRXbI3e8SBT6pr
qyCkGDzGwtbUKzgwqMR69Gr9E0AiS5K1hwPtOp4GNqg+g/6ZzsgiQU5Maveb
dTQsg8Y7DiLJMpz43oY2yVDyBZRozZX7a3DiReuw7xOs5RB0jzSqa8eJW5N+
8ouLFXBB707AwSuc2BDJx3VirRIMlyR4KKGcqJs6+0COuQqEDI8eG3/AiQ4r
1SO5hq+Bbu3z99YyTrTNPN+tf/0NTOXaelY0cKJvxHZkQeNbeLXpdz9ijBM5
5M0lQtTfgWXx0x1xaS6UW6pI8zpRD2ihkUZS48J3ezzveEk3gCTdvwf+GHAh
qV39uOSu97BqPWZb586FAjZ3651WGmGA0WupMIgLbcedL/VtfIAPZdTxSYlc
uKb9hrGf1ASpJOE3Z0u5MJ1vVDPx5L8QVFlkqlvHheI1arrmkc1w/pzylGwH
F7pIXw/uamoB+demAjuLXFiYa7OtRrRBh2uM3z1lbhy3M/QLN+6AV7wUjgg9
bjyv9PLHXZlOeFD3KN/NihvXRlw2nDi/gqdAbZdaADeeY6293bvWBVaNRpfE
47mxJqKc49J2Nxzx/EFPyuJGpf575bHs34Dj04r89xpuTA6oXvQ37YVV74jm
2jZuNGA2ZHWI/gH9YtyOhYPcaDOy0ErX8hNK/A/c8qPlQXX5j/SrMACGUufn
eXV4cJn3aFKK6TCsx3q//mnOgw9Z15O7do9Awe+IiNwLPMgSHnn6xuII0L3I
45eL5EGZElGzey/H4Dlv5fDqbR5MUhzeqikYBzv/D09qHvHgxwXN9OYHE/CK
mDhi+J4H9TYdOQ0qJsH5/iqJ5+t//lqmvLttU0CmY+76PsKDN1ldlm4tT8OV
JilXZzoyOm+xp7j/90slTl1Mvn6MjNw3zu15770AnRXXbPRNyRhUoDTYp/wH
QvnjJDjPkVH0Um06A90i/OgrfpUVRkaKns52d9kSxBx5G34+mYwJUa33FO8s
g3Jui5HMAzJ+qf5zgS1qBW65/B6qqiXjAtWXX5XX1wCbt4tDvpCROtTe9mzS
Ovw+sMtXZ5CMnYcdP0gXbYD+oizpKxUvJkewbVHtbAFVsMfhOeBFbyfXy+P3
qbFkMHSr4gQvbrvFUx21oUFrzeQPgXa8yLHFImgkQosVzGXWpGDe//aHMbL+
FR06utXvbU/gxUa7s4+/3aZHzs8ds+lZvDicIn98w58B3VIWr0tU8yLvhKjJ
8BkmFFihM5pp4cVDupnjXmeZ8YMlmfLiJy/qJgWWFLix4F+7FYuPbPEin1Ho
1ps8VvxW6Ntpo86HQBY0ju7mwEjWqCzx43woFxbFHx3NifKX050nrfmQa2ha
ZOgoF96Ur9r0vcaHJc9ka741cyOR1tRIxPJh+qTxZeEsHpxa+3aT/i4fthnu
bqbzI6N2zfqeW6/4sOB3XaysDh8uipFmLT/xoU3fBo2CBgXvhwtWiX7nw7/9
V3McNPhxU0/dsGSNDx+SKsUmbAXxeWegd5MyBWPsKY0avKJYEOHoMKRHwaA6
VenPraKYpWhwYsOKgiUcE+J5iWIYk06R+juQgtRfblXk7hfHEL0dsnYCBeuD
v3GmMe5Bn/VRGrtsCj5+TT3lOLMHz9mU/bhZS0FP+8wYmx4JtGLLaCpsp6A9
3+Kcb98+PFkdUlE3TMGPZUOxJnOSqC5qdHORnh/LHXrCLqjsR7kv8oFsfPzo
p5b8ucZDBiXDBF0lJPlxf+BWDeXl38gzMnHMQp8fr/0eTS1UPogstz8f9LDm
R3r1qrH3CweRSrtCOMaNH69zUYJVyg/hdP71ldcJ/Hi7N/Je4anDOGThOtKZ
zY+WfBVpnnLy2MNs/GXmGT8ephjtkxFQwPcXRR7v7uDH7ERpQ4JZCd8I0acr
j/CjUoZZVAynMj5vmQo3XuJH7/osgad7VTBLturMdT4BHFQ3Ws77Rw1TBrIN
MiUF8EheWHpmiTrGJEUql6sIYHacWfvTFQ30+WPKNW4tgKwDdux21ohuuao7
O24CuOE3nsrMdwQdzMSmKUECKKT0HYV7j6BR5e/3+jn/+TUN9BiCjqGm89fn
50oF0E3R/kuhrSaq8r/JDqgTwPuRNw6b6mjhvmvR/iUjAkjn5J0fpaqDIjJX
LnxYEsCVXb5OLFq6yPPT3HSAQRAdSGNdgdZ6SAV7/uaSEkTP7C02xxIDXJ5l
EdivKoguM+V3N6aO43TOPIOmgSBKDXMstSoZYQ9NzYC3uyBWZQt/OhN0ElvL
HrUkBAliw7Jbf4aaMTY4xr3KTxREWYoS2YTaBEsbLVO+lQoiV+ET79f5pljg
i6ELdYKYIcZ1XSP6FGZJ7rtE6hTED+HPfnz3MsOYmEUdjWVBjCfp+au7ncYQ
tV55c0Yh9NaV8Vv1s0Cf6VqxyxQhfC/AWF6TZIkORokbOapCOFaS3pn1yxot
drwnqgyEkIOjffanlC0aPbP52m4jhL0BJga+fmdQjUv6KV2wEG43MboU3j+L
rdRWTS2JQrj0IkR52sYez85HD6fmCKFipNa1i6IOGN72i0+qTgg/P088k1p7
Dnnf8csttAth9h3NQcYcRyx8qnf89bAQmiqFrR2JOo+tCYUhhvTCmFubfK7F
1wnPBn3L4OX9j+3l3jOHOOOCO3N5v4QwltzwMhi95YJ8hi6/PHSFMY6xcS5m
4CKeJUmZpMYKo29tSFNxwhVcWLdws8sUxiT6/V/49TwwfDIqUvKJMHJVkEer
SJ5Y2DTx6lWrMHr4ukQzPf4H1asoX6/3C6PuR36BgCgvbC3QnT0+J4zKqSTy
k8veuHCjQLyfUwQd0nc30tj6Yrhvj0bBXyI4UPUimNPRD3mdmCw8Dotg4UlP
/uc+/qim7RxHayaCxuyH3lS+u4adA6ybpDARpPp/MBj/B1NMw8M=
       "]]},
     Annotation[#, "Charting`Private`Tag$3365#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{700., Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 9}, {0, 500}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.815071243196835*^9, {3.815071295815776*^9, 3.8150713205995293`*^9}, {
   3.815071478628124*^9, 3.815071505071241*^9}, {3.81507155898391*^9, 
   3.815071593880138*^9}, 3.815071631712307*^9, {3.815071673353592*^9, 
   3.81507172948116*^9}, {3.815071770373942*^9, 3.815071886191399*^9}, {
   3.815072539731395*^9, 3.815072573182123*^9}, {3.8150736069612293`*^9, 
   3.815073638169194*^9}, 3.815073671581868*^9, {3.8150737415989923`*^9, 
   3.815073768213399*^9}, 3.815134413943396*^9, 3.81513518207241*^9, 
   3.8151355181677303`*^9, 3.81513666404246*^9, 3.815136714718298*^9, 
   3.8151368308130493`*^9, 3.815137188631135*^9, 3.815137404538107*^9, 
   3.8151375396725273`*^9, 3.815137629592061*^9, 3.815138727244835*^9, 
   3.815141164455986*^9},ExpressionUUID->"11226ab5-21fa-4249-9f68-\
bbbab6b6947d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Basic Calculus with Mathematica\
\>", "Title",
 CellChangeTimes->{{3.813924504576889*^9, 
  3.813924527840707*^9}},ExpressionUUID->"9949c8f5-aa9b-4581-b0b9-\
c9443bb2c0db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Integration", " ", "Basics"}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Use", " ", "'"}], "ESC", 
      StyleBox["\[ThinSpace]", "InlineCode"], 
      StyleBox["int", "InlineCode"], " ", 
      RowBox[{"ESC", "'"}], " ", "to", " ", "enter", "\[Integral]"}], " ", 
     ".."}], " ", 
    RowBox[{"and", " ", "'"}], "ESC", 
    StyleBox["\[ThinSpace]", "InlineCode"], 
    StyleBox["dd", "InlineCode"], 
    StyleBox[" ", "InlineCode"], 
    StyleBox[
     RowBox[{"ESC", " ", "'"}], "InlineCode"], "to", " ", "enter", " ", 
    "\[DifferentialD]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Use", " ", "CTRL_", " ", "to", " ", "enter", " ", "the", " ", "lower", 
     " ", "limit"}], ",", 
    RowBox[{
    "then", " ", "CTRL", "%", " ", "for", " ", "the", " ", "upper", " ", 
     "limit"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "or", " ", "use", " ", "the", " ", "Basic", " ", "Math", " ", "Assistant", 
    " ", "palette"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "x", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"1", "\[IndentingNewLine]"}]], 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"%", "//", "N"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "3"}], "+", "1"}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "//", "N"}]}]}]], "Input",
 CellChangeTimes->{{3.797257264887967*^9, 3.7972574953548727`*^9}, {
   3.797257525437728*^9, 3.797257535517048*^9}, {3.797346194882132*^9, 
   3.7973462183068523`*^9}, {3.797346253268834*^9, 3.797346256555151*^9}, 
   3.797346308803203*^9, {3.7973550546188498`*^9, 3.7973550871076307`*^9}, {
   3.797355138422392*^9, 
   3.797355165560734*^9}},ExpressionUUID->"4c0c436f-7298-4f57-a662-\
e8eb47dd52b7"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "18"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", "\[Pi]"}], "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.8149824508771544`*^9, 3.814986523642518*^9, 3.81498666448735*^9, 
   3.81498805019879*^9, 3.815045497533079*^9, 3.815048192302552*^9, 
   3.815049114894257*^9, 3.815053607316935*^9, 3.815056201811932*^9, 
   3.8151344142588673`*^9, 3.815135182434793*^9, 3.815135518498003*^9, 
   3.815136664379156*^9, 3.815136715044302*^9, 3.815136831119893*^9, 
   3.815137188941716*^9, 3.815137404849505*^9, 3.815137540007316*^9, 
   3.8151376299187202`*^9, 
   3.815138727571661*^9},ExpressionUUID->"fa4fc471-7832-4a6d-ad36-\
d51a617565cd"],

Cell[BoxData["0.8356488482647209`"], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.8149824508771544`*^9, 3.814986523642518*^9, 3.81498666448735*^9, 
   3.81498805019879*^9, 3.815045497533079*^9, 3.815048192302552*^9, 
   3.815049114894257*^9, 3.815053607316935*^9, 3.815056201811932*^9, 
   3.8151344142588673`*^9, 3.815135182434793*^9, 3.815135518498003*^9, 
   3.815136664379156*^9, 3.815136715044302*^9, 3.815136831119893*^9, 
   3.815137188941716*^9, 3.815137404849505*^9, 3.815137540007316*^9, 
   3.8151376299187202`*^9, 
   3.815138727585293*^9},ExpressionUUID->"b46ecb97-50ca-4896-a1a8-\
1ea3e9aabe8e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "18"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SqrtBox["3"], " ", "\[Pi]"}], "+", 
    RowBox[{"Log", "[", "64", "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.8149824508771544`*^9, 3.814986523642518*^9, 3.81498666448735*^9, 
   3.81498805019879*^9, 3.815045497533079*^9, 3.815048192302552*^9, 
   3.815049114894257*^9, 3.815053607316935*^9, 3.815056201811932*^9, 
   3.8151344142588673`*^9, 3.815135182434793*^9, 3.815135518498003*^9, 
   3.815136664379156*^9, 3.815136715044302*^9, 3.815136831119893*^9, 
   3.815137188941716*^9, 3.815137404849505*^9, 3.815137540007316*^9, 
   3.8151376299187202`*^9, 
   3.8151387276417847`*^9},ExpressionUUID->"d93d5e57-ca84-4dbc-9cde-\
2b4747687ffd"],

Cell[BoxData["0.8356488482647209`"], "Output",
 CellChangeTimes->{
  3.7973564144795113`*^9, 3.7973566369757233`*^9, 3.79735666941424*^9, 
   3.797357023326642*^9, 3.7974183371256742`*^9, 3.797420454630825*^9, 
   3.797420574866838*^9, 3.797432861088476*^9, 3.797503469394945*^9, 
   3.797530942850613*^9, 3.797533205082057*^9, 3.797533971727499*^9, 
   3.797535186676159*^9, 3.797700317348133*^9, 3.797703049319263*^9, 
   3.797704864670259*^9, 3.798370602034494*^9, 3.7984806144599867`*^9, 
   3.799316712995517*^9, 3.7993282306877413`*^9, 3.799416750963294*^9, 
   3.799944182933292*^9, 3.813924611140894*^9, 3.813924975551223*^9, 
   3.8139250590977573`*^9, 3.8139371287886887`*^9, 3.813939126538143*^9, 
   3.813955661057218*^9, 3.813957238515716*^9, 3.81395748134638*^9, 
   3.814004879308058*^9, 3.814020994151821*^9, 3.8140212251908484`*^9, 
   3.814103690368245*^9, 3.814103882576509*^9, 3.814103957134781*^9, 
   3.814104059251074*^9, {3.8141040975705423`*^9, 3.8141041212284517`*^9}, 
   3.814104153042687*^9, 3.814104262597413*^9, 3.814107776678046*^9, 
   3.814713455812336*^9, 3.814729444640339*^9, 3.81472984108324*^9, 
   3.814784178864827*^9, 3.814785266719982*^9, 3.8147868727482233`*^9, 
   3.814787182971204*^9, 3.814787250243155*^9, 3.8147905694086227`*^9, 
   3.8147991509781437`*^9, 3.8147992686737003`*^9, 3.814803546812702*^9, 
   3.814808786376031*^9, 3.814816057902128*^9, 3.8148170757441998`*^9, 
   3.814817202895226*^9, 3.814817938140855*^9, 3.814818381770602*^9, 
   3.814819921210693*^9, 3.814962877556875*^9, 3.814964274153679*^9, 
   3.814965663813342*^9, 3.8149688012682467`*^9, 3.81498233214818*^9, 
   3.8149824508771544`*^9, 3.814986523642518*^9, 3.81498666448735*^9, 
   3.81498805019879*^9, 3.815045497533079*^9, 3.815048192302552*^9, 
   3.815049114894257*^9, 3.815053607316935*^9, 3.815056201811932*^9, 
   3.8151344142588673`*^9, 3.815135182434793*^9, 3.815135518498003*^9, 
   3.815136664379156*^9, 3.815136715044302*^9, 3.815136831119893*^9, 
   3.815137188941716*^9, 3.815137404849505*^9, 3.815137540007316*^9, 
   3.8151376299187202`*^9, 
   3.8151387276462803`*^9},ExpressionUUID->"75d5e94e-e772-4b2c-a042-\
c8fd4f1c1e85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Calculate", " ", "Pi", 
    RowBox[{"(", "\[Pi]", ")"}], " ", "with", " ", "integration"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"see", " ", "LightTransport"}], "\[Rule]", 
    RowBox[{"theory", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{
       "2014", "MonteCarloIntegration", " ", "to", " ", "integrate", " ", 
        "it", " ", "with", " ", "rnd", " ", "samples"}], ".."}], " ", 
      RowBox[{"aka", " ", "'"}], "crude", " ", 
      RowBox[{"qMC", "'"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "x_", "]"}], "=", 
     RowBox[{"4", "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"x", "^", "2"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"%", "//", "N"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", 
     RowBox[{"1", "\[IndentingNewLine]"}]], 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{"%", ",", "20"}], "]"}], " ", 
   RowBox[{"(*", 
    RowBox[{"Pi", " ", "with", " ", "20", " ", "digits", " ", "precision"}], 
    "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"f", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797269739722774*^9, 3.797269787300434*^9}, {
  3.7972698425866947`*^9, 3.797269970970564*^9}, {3.7972700030131073`*^9, 
  3.797270014466847*^9}, {3.797270055281499*^9, 3.797270100953642*^9}, {
  3.7972702513696747`*^9, 3.797270264667993*^9}, {3.7972703865059357`*^9, 
  3.7972704691499777`*^9}, {3.797270530827697*^9, 3.797270577196252*^9}, {
  3.7972706201943903`*^9, 3.7972706289027147`*^9}, {3.797270970277197*^9, 
  3.79727100634536*^9}, {3.797271059172687*^9, 3.7972710740016947`*^9}, {
  3.797271260343335*^9, 3.797271260433234*^9}, {3.797271681047991*^9, 
  3.797271682803088*^9}, {3.797356862689966*^9, 
  3.797356878367152*^9}},ExpressionUUID->"fca270d9-9637-460b-89c1-\
7672688f1315"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451010571*^9, 3.814986523776433*^9, 3.814986664629961*^9, 
   3.814988050339902*^9, 3.815045497670205*^9, 3.815048192448903*^9, 
   3.8150491150349503`*^9, 3.8150536074546957`*^9, 3.815056201947891*^9, 
   3.815134414392899*^9, 3.815135182586192*^9, 3.815135518647909*^9, 
   3.815136664538911*^9, 3.815136715202278*^9, 3.815136831267343*^9, 
   3.815137189079236*^9, 3.8151374049870663`*^9, 3.8151375401485767`*^9, 
   3.81513763006601*^9, 
   3.8151387277155457`*^9},ExpressionUUID->"fccb5c4b-5afe-422f-aba4-\
bc9ce3a5a60c"],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451010571*^9, 3.814986523776433*^9, 3.814986664629961*^9, 
   3.814988050339902*^9, 3.815045497670205*^9, 3.815048192448903*^9, 
   3.8150491150349503`*^9, 3.8150536074546957`*^9, 3.815056201947891*^9, 
   3.815134414392899*^9, 3.815135182586192*^9, 3.815135518647909*^9, 
   3.815136664538911*^9, 3.815136715202278*^9, 3.815136831267343*^9, 
   3.815137189079236*^9, 3.8151374049870663`*^9, 3.8151375401485767`*^9, 
   3.81513763006601*^9, 
   3.815138727727219*^9},ExpressionUUID->"f8f3e4bd-c050-406a-ac9f-\
7452d5757b4f"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451010571*^9, 3.814986523776433*^9, 3.814986664629961*^9, 
   3.814988050339902*^9, 3.815045497670205*^9, 3.815048192448903*^9, 
   3.8150491150349503`*^9, 3.8150536074546957`*^9, 3.815056201947891*^9, 
   3.815134414392899*^9, 3.815135182586192*^9, 3.815135518647909*^9, 
   3.815136664538911*^9, 3.815136715202278*^9, 3.815136831267343*^9, 
   3.815137189079236*^9, 3.8151374049870663`*^9, 3.8151375401485767`*^9, 
   3.81513763006601*^9, 
   3.8151387277585487`*^9},ExpressionUUID->"33a38228-31be-4333-aaef-\
8a95f739139a"],

Cell[BoxData["3.1415926535897932384626433832795028842`20."], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451010571*^9, 3.814986523776433*^9, 3.814986664629961*^9, 
   3.814988050339902*^9, 3.815045497670205*^9, 3.815048192448903*^9, 
   3.8150491150349503`*^9, 3.8150536074546957`*^9, 3.815056201947891*^9, 
   3.815134414392899*^9, 3.815135182586192*^9, 3.815135518647909*^9, 
   3.815136664538911*^9, 3.815136715202278*^9, 3.815136831267343*^9, 
   3.815137189079236*^9, 3.8151374049870663`*^9, 3.8151375401485767`*^9, 
   3.81513763006601*^9, 
   3.8151387277629223`*^9},ExpressionUUID->"03eeb2d6-f8ba-4b99-b60e-\
c8323144ea65"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
D69z6P9cn46I
       "]]},
     Annotation[#, "Charting`Private`Tag$7530#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 2.0000000408163268`},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {2.0000000408163268`, 3.9999999999999982`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7973564146428347`*^9, 3.79735663714719*^9, 3.797356669583509*^9, 
   3.797357023499886*^9, 3.797418337367861*^9, 3.797420454789495*^9, 
   3.797420575126177*^9, 3.797432861245895*^9, 3.797503469649527*^9, 
   3.797530943010212*^9, 3.797533205249815*^9, 3.7975339719519*^9, 
   3.797535186866222*^9, 3.797700317601075*^9, 3.797703049573819*^9, 
   3.7977048648296432`*^9, 3.798370602278829*^9, 3.798480614699608*^9, 
   3.7993167132552347`*^9, 3.799328230939426*^9, 3.799416751236186*^9, 
   3.7999441831530113`*^9, 3.813924611301702*^9, 3.813924975723309*^9, 
   3.81392505926715*^9, 3.813937128929878*^9, 3.8139391266851063`*^9, 
   3.813955661321054*^9, 3.81395723875679*^9, 3.813957481576481*^9, 
   3.814004879472123*^9, 3.8140209942896442`*^9, 3.8140212253130817`*^9, 
   3.81410369051906*^9, 3.814103882711196*^9, 3.814103957309939*^9, 
   3.8141040593906*^9, {3.814104097727496*^9, 3.814104121396537*^9}, 
   3.814104153200913*^9, 3.8141042627415648`*^9, 3.814107776824358*^9, 
   3.814713455945158*^9, 3.814729444821724*^9, 3.8147298412597313`*^9, 
   3.814784179017128*^9, 3.8147852668862658`*^9, 3.81478687290534*^9, 
   3.8147871831377687`*^9, 3.814787250395496*^9, 3.814790569575283*^9, 
   3.8147991511462593`*^9, 3.814799268800352*^9, 3.814803546957755*^9, 
   3.8148087865218773`*^9, 3.814816058048554*^9, 3.814817075882018*^9, 
   3.8148172030332212`*^9, 3.8148179382981043`*^9, 3.814818381914138*^9, 
   3.814819921389062*^9, 3.8149628776896687`*^9, 3.814964274341497*^9, 
   3.814965663945744*^9, 3.8149688014382343`*^9, 3.814982332289197*^9, 
   3.814982451010571*^9, 3.814986523776433*^9, 3.814986664629961*^9, 
   3.814988050339902*^9, 3.815045497670205*^9, 3.815048192448903*^9, 
   3.8150491150349503`*^9, 3.8150536074546957`*^9, 3.815056201947891*^9, 
   3.815134414392899*^9, 3.815135182586192*^9, 3.815135518647909*^9, 
   3.815136664538911*^9, 3.815136715202278*^9, 3.815136831267343*^9, 
   3.815137189079236*^9, 3.8151374049870663`*^9, 3.8151375401485767`*^9, 
   3.81513763006601*^9, 
   3.815138727791111*^9},ExpressionUUID->"4728f65f-a8ed-487c-b139-\
10055f1fbea3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Integration", " ", "Strategies"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "tutorial"}], "/", 
     RowBox[{"NIntegrateIntegrationStrategies", ".", "html"}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<MonteCarlo\>\""}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<QuasiMonteCarlo\>\""}]}], "]"}], 
    "]"}], "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<RiemannRule\>\"", ",", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<Right\>\""}]}], "}"}]}], ",", 
      RowBox[{"PrecisionGoal", "\[Rule]", "2"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Timing", "[", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"E", "^", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"x", "^", "4"}], "+", 
          RowBox[{"y", "^", "4"}]}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<NewtonCotesRule\>\"", ",", 
         RowBox[{"\"\<Type\>\"", "\[Rule]", "\"\<Closed\>\""}]}], "}"}]}]}], 
     "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7972731864252243`*^9, 3.7972732539990473`*^9}, {
  3.79735528028811*^9, 3.797355295852742*^9}, {3.7973553494512243`*^9, 
  3.797355365149374*^9}, {3.797355925430747*^9, 3.797355941475882*^9}, {
  3.797355981098081*^9, 3.797356001889526*^9}, {3.797356036778438*^9, 
  3.797356083736657*^9}, {3.797356885098261*^9, 
  3.797356888699877*^9}},ExpressionUUID->"9e2072b0-cb51-42ff-8ac3-\
5c9434373ad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.018814`", ",", "3.255069225485037`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.8149824511383*^9, 3.8149865238807364`*^9, 3.8149866647622004`*^9, 
   3.81498805045121*^9, 3.81504549779631*^9, 3.8150481925534487`*^9, 
   3.815049115144833*^9, 3.81505360756164*^9, 3.815056202086327*^9, 
   3.815134414500244*^9, 3.8151351827128677`*^9, 3.8151355187628527`*^9, 
   3.815136664660399*^9, 3.815136715317162*^9, 3.815136831381083*^9, 
   3.815137189202642*^9, 3.8151374050951366`*^9, 3.815137540260941*^9, 
   3.815137630185453*^9, 
   3.815138727828459*^9},ExpressionUUID->"6aecbf42-eaf0-456b-8c00-\
5e2c314b5822"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.064648`", ",", "3.286321016176149`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.8149824511383*^9, 3.8149865238807364`*^9, 3.8149866647622004`*^9, 
   3.81498805045121*^9, 3.81504549779631*^9, 3.8150481925534487`*^9, 
   3.815049115144833*^9, 3.81505360756164*^9, 3.815056202086327*^9, 
   3.815134414500244*^9, 3.8151351827128677`*^9, 3.8151355187628527`*^9, 
   3.815136664660399*^9, 3.815136715317162*^9, 3.815136831381083*^9, 
   3.815137189202642*^9, 3.8151374050951366`*^9, 3.815137540260941*^9, 
   3.815137630185453*^9, 
   3.815138727895549*^9},ExpressionUUID->"1e72df3f-17fd-49ea-8dd7-\
d97706852013"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.051771`", ",", "3.2542281563791757`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.8149824511383*^9, 3.8149865238807364`*^9, 3.8149866647622004`*^9, 
   3.81498805045121*^9, 3.81504549779631*^9, 3.8150481925534487`*^9, 
   3.815049115144833*^9, 3.81505360756164*^9, 3.815056202086327*^9, 
   3.815134414500244*^9, 3.8151351827128677`*^9, 3.8151355187628527`*^9, 
   3.815136664660399*^9, 3.815136715317162*^9, 3.815136831381083*^9, 
   3.815137189202642*^9, 3.8151374050951366`*^9, 3.815137540260941*^9, 
   3.815137630185453*^9, 
   3.815138727948203*^9},ExpressionUUID->"dc824d07-2679-4a51-80a0-\
25fe955c382c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.129096`", ",", "3.286261779209878`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.7973564147468433`*^9, 3.7973566372803*^9, 3.797356669714713*^9, 
   3.797357023603815*^9, 3.797418337539215*^9, 3.797420454901854*^9, 
   3.79742057531075*^9, 3.797432861364422*^9, 3.797503469836787*^9, 
   3.797530943117654*^9, 3.79753320535793*^9, 3.797533972062558*^9, 
   3.797535186972774*^9, 3.7977003177758837`*^9, 3.797703049750292*^9, 
   3.797704864935556*^9, 3.79837060245114*^9, 3.798480614868433*^9, 
   3.799316713430161*^9, 3.799328231108293*^9, 3.799416751417932*^9, 
   3.7999441832878723`*^9, 3.813924611408249*^9, 3.8139249758307858`*^9, 
   3.813925059377191*^9, 3.813937129032645*^9, 3.813939126792481*^9, 
   3.813955661432218*^9, 3.8139572388665733`*^9, 3.813957481684617*^9, 
   3.8140048795751534`*^9, 3.8140209944495*^9, 3.8140212254164743`*^9, 
   3.814103690690839*^9, 3.814103882835286*^9, 3.814103957450157*^9, 
   3.8141040595237913`*^9, {3.814104097857789*^9, 3.814104121562895*^9}, 
   3.814104153347826*^9, 3.814104262869651*^9, 3.814107776998324*^9, 
   3.8147134561676893`*^9, 3.814729444961961*^9, 3.8147298413999*^9, 
   3.8147841791239977`*^9, 3.81478526699685*^9, 3.814786873009263*^9, 
   3.814787183248949*^9, 3.8147872504999638`*^9, 3.814790569683309*^9, 
   3.814799151257394*^9, 3.814799268926631*^9, 3.8148035470698*^9, 
   3.814808786631218*^9, 3.814816058163776*^9, 3.814817075988481*^9, 
   3.814817203156858*^9, 3.8148179384384613`*^9, 3.814818382051396*^9, 
   3.814819921576914*^9, 3.814962877824785*^9, 3.8149642744735403`*^9, 
   3.814965664075797*^9, 3.814968801545377*^9, 3.8149823323976192`*^9, 
   3.8149824511383*^9, 3.8149865238807364`*^9, 3.8149866647622004`*^9, 
   3.81498805045121*^9, 3.81504549779631*^9, 3.8150481925534487`*^9, 
   3.815049115144833*^9, 3.81505360756164*^9, 3.815056202086327*^9, 
   3.815134414500244*^9, 3.8151351827128677`*^9, 3.8151355187628527`*^9, 
   3.815136664660399*^9, 3.815136715317162*^9, 3.815136831381083*^9, 
   3.815137189202642*^9, 3.8151374050951366`*^9, 3.815137540260941*^9, 
   3.815137630185453*^9, 
   3.815138728077561*^9},ExpressionUUID->"1931f5d7-6d58-42d2-a34a-\
23141e1a57c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "f", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "x_", "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"1", "-", 
    RowBox[{"x", "^", "2"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"f", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "N"}]}], "Input",
 CellChangeTimes->{{3.797346240061912*^9, 3.7973462425588627`*^9}, {
   3.7973544048712053`*^9, 3.797354447188352*^9}, {3.797354524724935*^9, 
   3.797354678140542*^9}, {3.797354811594798*^9, 3.797354813958242*^9}, {
   3.797356902691381*^9, 3.797356915913137*^9}, 
   3.798203241592535*^9},ExpressionUUID->"376445e5-4685-4b68-af91-\
4163ff0537e4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$7662#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.798203248141898*^9, 3.798370602708959*^9, 3.7984806151211576`*^9, 
   3.799316713690572*^9, 3.799328231359671*^9, 3.799416751658656*^9, 
   3.799944183555297*^9, 3.813924611664537*^9, 3.813924976087632*^9, 
   3.813925059625227*^9, 3.813937129295833*^9, 3.8139391270533247`*^9, 
   3.8139556616915197`*^9, 3.813957239117146*^9, 3.813957481951008*^9, 
   3.814004879819951*^9, 3.8140209947264223`*^9, 3.814021225679098*^9, 
   3.8141036909642982`*^9, 3.814103883105946*^9, 3.8141039577298117`*^9, 
   3.814104059772245*^9, {3.814104098148693*^9, 3.814104121837831*^9}, 
   3.814104153624383*^9, 3.814104263143869*^9, 3.814107777268898*^9, 
   3.814713456446774*^9, 3.814729445202478*^9, 3.814729841649901*^9, 
   3.814784179364232*^9, 3.8147852672420387`*^9, 3.8147868732494097`*^9, 
   3.814787183579771*^9, 3.814787250738797*^9, 3.81479056993097*^9, 
   3.81479915150117*^9, 3.814799269212039*^9, 3.814803547353861*^9, 
   3.814808786909402*^9, 3.814816058452427*^9, 3.814817076266057*^9, 
   3.8148172034463253`*^9, 3.814817938691896*^9, 3.814818382300171*^9, 
   3.814819921858677*^9, 3.814962878086928*^9, 3.814964274732239*^9, 
   3.814965664328732*^9, 3.8149688017885103`*^9, 3.814982332641736*^9, 
   3.814982451387611*^9, 3.8149865241291656`*^9, 3.8149866650049686`*^9, 
   3.814988050696995*^9, 3.81504549805107*^9, 3.815048192797552*^9, 
   3.815049115404132*^9, 3.815053607802814*^9, 3.815056202341329*^9, 
   3.815134414743647*^9, 3.815135183005294*^9, 3.815135519011359*^9, 
   3.815136664969935*^9, 3.815136715576545*^9, 3.8151368316344624`*^9, 
   3.815137189457946*^9, 3.8151374053362217`*^9, 3.8151375405179567`*^9, 
   3.815137630436138*^9, 
   3.815138728167136*^9},ExpressionUUID->"9f593fc8-fbc2-4803-8cee-\
85f3cc6d27a1"],

Cell[BoxData[
 FractionBox["\[Pi]", "4"]], "Output",
 CellChangeTimes->{
  3.798203248141898*^9, 3.798370602708959*^9, 3.7984806151211576`*^9, 
   3.799316713690572*^9, 3.799328231359671*^9, 3.799416751658656*^9, 
   3.799944183555297*^9, 3.813924611664537*^9, 3.813924976087632*^9, 
   3.813925059625227*^9, 3.813937129295833*^9, 3.8139391270533247`*^9, 
   3.8139556616915197`*^9, 3.813957239117146*^9, 3.813957481951008*^9, 
   3.814004879819951*^9, 3.8140209947264223`*^9, 3.814021225679098*^9, 
   3.8141036909642982`*^9, 3.814103883105946*^9, 3.8141039577298117`*^9, 
   3.814104059772245*^9, {3.814104098148693*^9, 3.814104121837831*^9}, 
   3.814104153624383*^9, 3.814104263143869*^9, 3.814107777268898*^9, 
   3.814713456446774*^9, 3.814729445202478*^9, 3.814729841649901*^9, 
   3.814784179364232*^9, 3.8147852672420387`*^9, 3.8147868732494097`*^9, 
   3.814787183579771*^9, 3.814787250738797*^9, 3.81479056993097*^9, 
   3.81479915150117*^9, 3.814799269212039*^9, 3.814803547353861*^9, 
   3.814808786909402*^9, 3.814816058452427*^9, 3.814817076266057*^9, 
   3.8148172034463253`*^9, 3.814817938691896*^9, 3.814818382300171*^9, 
   3.814819921858677*^9, 3.814962878086928*^9, 3.814964274732239*^9, 
   3.814965664328732*^9, 3.8149688017885103`*^9, 3.814982332641736*^9, 
   3.814982451387611*^9, 3.8149865241291656`*^9, 3.8149866650049686`*^9, 
   3.814988050696995*^9, 3.81504549805107*^9, 3.815048192797552*^9, 
   3.815049115404132*^9, 3.815053607802814*^9, 3.815056202341329*^9, 
   3.815134414743647*^9, 3.815135183005294*^9, 3.815135519011359*^9, 
   3.815136664969935*^9, 3.815136715576545*^9, 3.8151368316344624`*^9, 
   3.815137189457946*^9, 3.8151374053362217`*^9, 3.8151375405179567`*^9, 
   3.815137630436138*^9, 
   3.8151387284313107`*^9},ExpressionUUID->"7ad96df5-7662-4737-9496-\
b11e58beeab4"],

Cell[BoxData["0.7853981633974483`"], "Output",
 CellChangeTimes->{
  3.798203248141898*^9, 3.798370602708959*^9, 3.7984806151211576`*^9, 
   3.799316713690572*^9, 3.799328231359671*^9, 3.799416751658656*^9, 
   3.799944183555297*^9, 3.813924611664537*^9, 3.813924976087632*^9, 
   3.813925059625227*^9, 3.813937129295833*^9, 3.8139391270533247`*^9, 
   3.8139556616915197`*^9, 3.813957239117146*^9, 3.813957481951008*^9, 
   3.814004879819951*^9, 3.8140209947264223`*^9, 3.814021225679098*^9, 
   3.8141036909642982`*^9, 3.814103883105946*^9, 3.8141039577298117`*^9, 
   3.814104059772245*^9, {3.814104098148693*^9, 3.814104121837831*^9}, 
   3.814104153624383*^9, 3.814104263143869*^9, 3.814107777268898*^9, 
   3.814713456446774*^9, 3.814729445202478*^9, 3.814729841649901*^9, 
   3.814784179364232*^9, 3.8147852672420387`*^9, 3.8147868732494097`*^9, 
   3.814787183579771*^9, 3.814787250738797*^9, 3.81479056993097*^9, 
   3.81479915150117*^9, 3.814799269212039*^9, 3.814803547353861*^9, 
   3.814808786909402*^9, 3.814816058452427*^9, 3.814817076266057*^9, 
   3.8148172034463253`*^9, 3.814817938691896*^9, 3.814818382300171*^9, 
   3.814819921858677*^9, 3.814962878086928*^9, 3.814964274732239*^9, 
   3.814965664328732*^9, 3.8149688017885103`*^9, 3.814982332641736*^9, 
   3.814982451387611*^9, 3.8149865241291656`*^9, 3.8149866650049686`*^9, 
   3.814988050696995*^9, 3.81504549805107*^9, 3.815048192797552*^9, 
   3.815049115404132*^9, 3.815053607802814*^9, 3.815056202341329*^9, 
   3.815134414743647*^9, 3.815135183005294*^9, 3.815135519011359*^9, 
   3.815136664969935*^9, 3.815136715576545*^9, 3.8151368316344624`*^9, 
   3.815137189457946*^9, 3.8151374053362217`*^9, 3.8151375405179567`*^9, 
   3.815137630436138*^9, 
   3.815138728437953*^9},ExpressionUUID->"16043ff8-1bbe-4854-b9f0-\
f3156ff21760"]
}, Open  ]],

Cell["\<\
see this: https://www.maplesoft.com/applications/view.aspx?sid=4009&view=html\
\
\>", "Text",
 CellChangeTimes->{{3.798203230892971*^9, 
  3.798203238757854*^9}},ExpressionUUID->"62166b37-f963-4c96-8e1a-\
e7922ca7bff4"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11047#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999999999998}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7973564149902782`*^9, 3.797356637542911*^9, 
  3.7973566699782543`*^9, 3.797357023840321*^9, 3.797418337797895*^9, 
  3.7974204551521482`*^9, 3.797420575557581*^9, 3.797432861639811*^9, 
  3.797503470109438*^9, 3.797530943360157*^9, 3.7975332056069393`*^9, 
  3.797533972312314*^9, 3.797535187233479*^9, 3.797700318027183*^9, 
  3.79770305001057*^9, 
  3.797704865186887*^9},ExpressionUUID->"8bb6959f-e345-4108-b8f3-\
531158254a89"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Hit", "-", "or", "-", 
    RowBox[{
    "Miss", " ", "Monte", " ", "Carlo", " ", "method", " ", "to", " ", 
     "calculate", " ", "\[Pi]"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "area", " ", "ratio", " ", "of", " ", "a", " ", "unit", " ", 
     "circle", " ", "Ac", " ", "over", " ", "a", " ", "unit", " ", "square", 
     " ", "As", " ", 
     RowBox[{"is", ":", " ", 
      RowBox[{"Ac", "/", "As"}]}]}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Pi]r", "^", "2"}], " ", "/", " ", "4"}], 
      RowBox[{"r", "^", "2"}]}], " ", "=", " ", 
     RowBox[{"\[Pi]", "/", "4"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"We", " ", "shoot", " ", 
    RowBox[{"(", "n", ")"}], " ", "rnd", " ", "pts", " ", "over", " ", "the", 
    " ", "square", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], ",", 
      RowBox[{"+", "1"}]}], ")"}], " ", "and", " ", "consider", " ", "a", " ",
     "hit", " ", "for", " ", "those", " ", "pts", " ", 
    RowBox[{"(", "m", ")"}], " ", "that", " ", 
    RowBox[{"satisfy", ":", " ", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "2"], "+", 
       SuperscriptBox["y", "2"]}], "\[LessEqual]", "1"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Hence", " ", "\[Pi]"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"4", 
       RowBox[{"m", "/", "n"}]}], " ", ".."}], 
     RowBox[{"ie", ".", " ", "ratio"}], " ", "of", " ", "hit", " ", "vs", " ",
      "shot", " ", "time", " ", "4"}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"see", " ", "2013"}], "-", 
     RowBox[{"Math", " ", "Numerics", " ", "and", " ", "Programming", " ", 
      RowBox[{"(", 
       RowBox[{"for", " ", "mechanical", " ", "engineers"}], ")"}]}]}], " ", 
    "..."}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "or", " ", "MonteCarlo", " ", "Integration", " ", "in", " ", "a", " ", 
    "Nutshell", " ", "for", " ", "better", " ", "area", " ", "estimation", 
    " ", "tecniques"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"data", ",", "inside", ",", "insidepts"}], "}"}], ",", 
      RowBox[{
       RowBox[{"SeedRandom", "[", "n", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"data", "=", 
        RowBox[{"RandomReal", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"m", ",", "2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"insidepts", "=", 
        RowBox[{"Cases", "[", 
         RowBox[{"data", ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x_", ",", "y_"}], "}"}], "/;", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], "<", "1"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"inside", "=", 
        RowBox[{"Length", "[", "insidepts", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Text", "@", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Graphics", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"PointSize", "[", "0.004", "]"}], ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{"0.86", ",", "0.5", ",", "0.74"}], "]"}], ",", 
                 RowBox[{"Disk", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0"}], "}"}], ",", "1"}], "]"}], ",", 
                 "Black", ",", 
                 RowBox[{"Point", "[", "data", "]"}]}], "}"}], ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"If", "[", 
                 RowBox[{"format", ",", "500", ",", "350"}], "]"}]}]}], "]"}],
              ",", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<inside: \>\"", ",", "inside", ",", "\"\<\\toutside: \>\"",
                 ",", 
                RowBox[{"m", "-", "inside"}], ",", "\"\<\\ttotal:  \>\"", ",",
                 "m"}], "}"}], "]"}], ",", 
             RowBox[{"Row", "[", 
              RowBox[{"{", 
               RowBox[{
               "\"\<\[Pi] \[TildeTilde] 4 \[Times] \>\"", ",", "inside", ",", 
                "\"\</\>\"", ",", "m", ",", "\"\< = \>\"", ",", 
                RowBox[{"4.", " ", 
                 RowBox[{"inside", "/", "m"}]}]}], "}"}], "]"}]}], "}"}], 
           "]"}], ",", "\"\<Label\>\""}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "1", ",", "\"\<random seed\>\""}], "}"}], ",", "1", 
      ",", "1000", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"m", ",", "64", ",", "\"\<sample size\>\""}], "}"}], ",", "64",
       ",", "8192", ",", "64", ",", 
      RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"format", ",", "False", ",", "\"\<large format\>\""}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"True", ",", "False"}], "}"}]}], "}"}], ",", 
    RowBox[{"AutorunSequencing", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.797356613388928*^9, 3.797356616696006*^9}, {
   3.797356712805265*^9, 3.797356809944097*^9}, {3.7973569718650312`*^9, 
   3.797356986015039*^9}, {3.813955056781818*^9, 3.8139550608322573`*^9}, 
   3.813955097167153*^9},ExpressionUUID->"948b9986-d6c3-4908-9152-\
819a13babc64"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`format$$ = False, $CellContext`m$$ = 
    64, $CellContext`n$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`n$$], 1, "random seed"}, 1, 1000, 1}, {{
       Hold[$CellContext`m$$], 64, "sample size"}, 64, 8192, 64}, {{
       Hold[$CellContext`format$$], False, "large format"}, {True, False}}}, 
    Typeset`size$$ = {350., {188., 191.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = True, $CellContext`n$8140$$ =
     0, $CellContext`m$8145$$ = 0, $CellContext`format$8146$$ = False}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`format$$ = False, $CellContext`m$$ = 
        64, $CellContext`n$$ = 1}, "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$8140$$, 0], 
        Hold[$CellContext`m$$, $CellContext`m$8145$$, 0], 
        Hold[$CellContext`format$$, $CellContext`format$8146$$, False]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`data$, $CellContext`inside$, \
$CellContext`insidepts$}, 
        SeedRandom[$CellContext`n$$]; $CellContext`data$ = 
         RandomReal[{-1, 1}, {$CellContext`m$$, 2}]; $CellContext`insidepts$ = 
         Cases[$CellContext`data$, 
           Condition[{
             Pattern[$CellContext`x, 
              Blank[]], 
             Pattern[$CellContext`y, 
              Blank[]]}, $CellContext`x^2 + $CellContext`y^2 < 
            1]]; $CellContext`inside$ = Length[$CellContext`insidepts$]; 
        Text[
          Style[
           Column[{
             Graphics[{
               PointSize[0.004], 
               RGBColor[0.86, 0.5, 0.74], 
               Disk[{0, 0}, 1], Black, 
               Point[$CellContext`data$]}, ImageSize -> 
              If[$CellContext`format$$, 500, 350]], 
             
             Row[{"inside: ", $CellContext`inside$, 
               "\toutside: ", $CellContext`m$$ - $CellContext`inside$, 
               "\ttotal:  ", $CellContext`m$$}], 
             
             Row[{"\[Pi] \[TildeTilde] 4 \[Times] ", $CellContext`inside$, 
               "/", $CellContext`m$$, " = ", 
               4. ($CellContext`inside$/$CellContext`m$$)}]}], "Label"]]], 
      "Specifications" :> {{{$CellContext`n$$, 1, "random seed"}, 1, 1000, 
         1}, {{$CellContext`m$$, 64, "sample size"}, 64, 8192, 64, Appearance -> 
         "Labeled"}, {{$CellContext`format$$, False, "large format"}, {
         True, False}}}, "Options" :> {AutorunSequencing -> {1, 2}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{395., {254., 258.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQBeLDyUvP/cp+43iTQ4LvL5DOKV1/hyXnjePfNhs+ViD9
o6dkmjyQzlpaJKcApI1C9J+D6Bdrf/MqAuljOxLEQHSfqutWJSBtvPXHUzUg
zbJn3RcQ3aBfzK0JpD9tT52lDaQlLoap6wPpZJ4Jy0B0TXbZNhDtWB8rZACk
D1Rf8gTRST+cuAyBtNnm09fLQPyrCW3lQPrjGiGTCiDNEOS0pxJId1yeHd4A
pEXWl6eB6DO1fclNQNqtRasURFutjVVqBrk7zEd/PpA2OKLYsABE85d+BtFB
nYyqi4H0vytBmUtA/v3wcOYpIJ0298VPEH1p12vl0yDz4jQ2g+juZVU7QfTr
oj/HQbQP464vIJqHcTP/GZB+oxkKIDoo55o2iDaQEdgKogFmOLWk
  
  "],ExpressionUUID->"2d54dfb4-4e3d-4416-ac49-3310a4e7f243"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"f", ",", "tf"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", ",", "t", ",", "r"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"u", "=", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], "+", 
       RowBox[{"RandomReal", "[", "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"t", "=", 
      RowBox[{
       RowBox[{"RandomReal", "[", "]"}], " ", "2", " ", "Pi"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"u", ">", "1"}], ",", 
        RowBox[{"2", "-", "u"}], ",", "u"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "t", "]"}]}], ",", 
       RowBox[{"r", " ", 
        RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tf", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"f", "[", "]"}], ",", 
      RowBox[{"{", "1000", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Mean", "[", "tf", "]"}], "\n", 
 RowBox[{
  RowBox[{"Histogram3D", "[", 
   RowBox[{"tf", ",", "Automatic", ",", "\"\<ProbabilityDensity\>\"", ",", 
    RowBox[{"ChartElementFunction", "\[Rule]", "\"\<FadingCube\>\""}]}], 
   "]"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{"tf", ",", "50", ",", "\"\<PDF\>\"", ",", 
      RowBox[{"PlotRange", "\[Rule]", "Automatic"}]}], "]"}], 
    "\[IndentingNewLine]", 
    RowBox[{"SmoothHistogram", "[", 
     RowBox[{"tf", ",", "50", ",", "\"\<CDF\>\""}], "]"}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"tf", ",", 
   RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"SmoothDensityHistogram", "[", 
    RowBox[{"tf", ",", "name", ",", 
     RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "name"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"name", ",", 
     RowBox[{"{", 
      RowBox[{"\"\<StandardDeviation\>\"", ",", "\"\<StandardGaussian\>\""}], 
      "}"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7973561311647177`*^9, 3.797356182328328*^9}, {
  3.797356653777383*^9, 3.797356662997353*^9}, {3.7973569312472897`*^9, 
  3.797356933004239*^9}},ExpressionUUID->"18461649-926a-4072-81cc-\
be0ec371c4a9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.0064789999912235365`"}], ",", "0.004864893434353037`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 3.8149824518168364`*^9, 
   3.8149865245269823`*^9, 3.8149866654021807`*^9, 3.814988050991954*^9, 
   3.8150454985294733`*^9, 3.8150481931331787`*^9, 3.815049115710342*^9, 
   3.815053608098349*^9, 3.8150562026494017`*^9, 3.8151344151478643`*^9, 
   3.8151351833236856`*^9, 3.8151355194328947`*^9, 3.8151366653263397`*^9, 
   3.81513671589086*^9, 3.8151368319495564`*^9, 3.815137189868903*^9, 
   3.815137405648752*^9, 3.815137540815958*^9, 3.8151376307540913`*^9, 
   3.81513872864889*^9},ExpressionUUID->"5aa10b64-297e-495a-aaa7-\
c1cf80a3d3ee"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
   RGBColor[0.880722, 0.611041, 0.142051]], 
   StyleBox[{{}, 
     {RGBColor[0.9045776, 0.6888327999999999, 0.31364080000000005`], EdgeForm[
      RGBColor[0.880722, 0.611041, 0.142051]], 
      StyleBox[{
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., -0.6, 0.}, {-1., -0.4, 
                 0.}, {-1., -0.4, 0.125}, {-1., -0.6, 0.125}, {-0.8, -0.6, 
                 0.}, {-0.8, -0.4, 0.}, {-0.8, -0.4, 0.125}, {-0.8, -0.6, 
                 0.125}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{49.98570818763403, 
              76.79624486971173}, {-12.882422397326366`, 
              14.541075647629341`}}]},
           StatusArea[#, 0.125]& ,
           TagBoxNote->"0.125"],
          StyleBox["0.125`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.125, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., -0.4, 0.}, {-1., -0.2, 
                 0.}, {-1., -0.2, 0.35}, {-1., -0.4, 0.35}, {-0.8, -0.4, 
                 0.}, {-0.8, -0.2, 0.}, {-0.8, -0.2, 0.35}, {-0.8, -0.4, 
                 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{57.51367569592937, 
              85.96126454711734}, {-41.799973541078344`, 4.897527825540365}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., -0.2, 0.}, {-1., 0., 0.}, {-1., 
                 0., 0.15}, {-1., -0.2, 0.15}, {-0.8, -0.2, 0.}, {-0.8, 0., 
                 0.}, {-0.8, 0., 0.15}, {-0.8, -0.2, 0.15}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{69.08862383985344, 
              94.79152564995886}, {-32.74534182073427, -4.387230338072513}}]},
           
           StatusArea[#, 0.15]& ,
           TagBoxNote->"0.15"],
          StyleBox["0.15`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., 0., 0.}, {-1., 0.2, 0.}, {-1., 
                 0.2, 0.35}, {-1., 0., 0.35}, {-0.8, 0., 0.}, {-0.8, 0.2, 
                 0.}, {-0.8, 0.2, 0.35}, {-0.8, 0., 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{76.67394973417356, 
              103.30504015516766`}, {-58.55852479265586, \
-13.33285639750828}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., 0.2, 0.}, {-1., 0.4, 0.}, {-1., 
                 0.4, 0.325}, {-1., 0.2, 0.325}, {-0.8, 0.2, 0.}, {-0.8, 0.4, 
                 0.}, {-0.8, 0.4, 0.325}, {-0.8, 0.2, 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{85.89643150838198, 
              111.51855060715519`}, {-64.27906635391834, \
-21.95759765127177}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-1., 0.4, 0.}, {-1., 0.6, 0.}, {-1., 
                 0.6, 0.1}, {-1., 0.4, 0.1}, {-0.8, 0.4, 0.}, {-0.8, 0.6, 
                 0.}, {-0.8, 0.6, 0.1}, {-0.8, 0.4, 0.1}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{95.87179271756756, 
              119.44764001397918`}, {-52.78279313173394, \
-30.27841538055769}}]},
           StatusArea[#, 0.1]& ,
           TagBoxNote->"0.1"],
          StyleBox["0.1`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.1, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.8, 0.}, {-0.8, -0.6, 
                 0.}, {-0.8, -0.6, 0.15}, {-0.8, -0.8, 0.15}, {-0.6, -0.8, 
                 0.}, {-0.6, -0.6, 0.}, {-0.6, -0.6, 0.15}, {-0.6, -0.8, 
                 0.15}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{53.71645209331061, 
              81.46202712161917}, {-0.4759715832102387, 30.16284648129693}}]},
           
           StatusArea[#, 0.15]& ,
           TagBoxNote->"0.15"],
          StyleBox["0.15`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.6, 0.}, {-0.8, -0.4, 
                 0.}, {-0.8, -0.4, 0.25}, {-0.8, -0.6, 0.25}, {-0.6, -0.6, 
                 0.}, {-0.6, -0.4, 0.}, {-0.6, -0.4, 0.25}, {-0.6, -0.6, 
                 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{62.813018737667136`, 
              90.80832874555915}, {-18.90203097231138, 19.923938334838994`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.4, 0.}, {-0.8, -0.2, 
                 0.}, {-0.8, -0.2, 0.275}, {-0.8, -0.4, 0.275}, {-0.6, -0.4, 
                 0.}, {-0.6, -0.2, 0.}, {-0.6, -0.2, 0.275}, {-0.6, -0.4, 
                 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{72.43335651627213, 
              99.80335892800626}, {-30.263958456702184`, 
              10.077219377463521`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, -0.2, 0.}, {-0.8, 0., 0.}, {-0.8,
                  0., 0.425}, {-0.8, -0.2, 0.425}, {-0.6, -0.2, 0.}, {-0.6, 
                 0., 0.}, {-0.6, 0., 0.425}, {-0.6, -0.2, 0.425}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{80.7665798238194, 
              108.4665556710931}, {-52.58247948400644, 0.600579548849808}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0., 0.}, {-0.8, 0.2, 0.}, {-0.8, 
                 0.2, 0.325}, {-0.8, 0., 0.325}, {-0.6, 0., 0.}, {-0.6, 0.2, 
                 0.}, {-0.6, 0.2, 0.325}, {-0.6, 0., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{90.74287482019561, 
              116.81594878647357`}, {-51.90851400673181, \
-8.526459897761427}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0.2, 0.}, {-0.8, 0.4, 0.}, {-0.8,
                  0.4, 0.2}, {-0.8, 0.2, 0.2}, {-0.6, 0.2, 0.}, {-0.6, 0.4, 
                 0.}, {-0.6, 0.4, 0.2}, {-0.6, 0.2, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{100.26875758798741`, 
              124.86828514768753`}, {-49.11783634552789, \
-17.32289412166989}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0.4, 0.}, {-0.8, 0.6, 0.}, {-0.8,
                  0.6, 0.325}, {-0.8, 0.4, 0.325}, {-0.6, 0.4, 0.}, {-0.6, 
                 0.6, 0.}, {-0.6, 0.6, 0.325}, {-0.6, 0.4, 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{108.13013753394779`, 
              132.63914080740994`}, {-67.82303409495462, \
-25.806366653311215`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.8, 0.6, 0.}, {-0.8, 0.8, 0.}, {-0.8,
                  0.8, 0.075}, {-0.8, 0.6, 0.075}, {-0.6, 0.6, 0.}, {-0.6, 
                 0.8, 0.}, {-0.6, 0.8, 0.075}, {-0.6, 0.6, 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{117.20236489924346`, 
              140.1430215590254}, {-54.20856474935057, -33.99328751445938}}]},
           
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -1., 0.}, {-0.6, -0.8, 
                 0.}, {-0.6, -0.8, 0.15}, {-0.6, -1., 0.15}, {-0.4, -1., 
                 0.}, {-0.4, -0.8, 0.}, {-0.4, -0.8, 0.15}, {-0.4, -1., 
                 0.15}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{57.98832028688389, 86.41746906946759}, {
              15.01948666869496, 46.77436905584227}}]},
           StatusArea[#, 0.15]& ,
           TagBoxNote->"0.15"],
          StyleBox["0.15`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.15, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.8, 0.}, {-0.6, -0.6, 
                 0.}, {-0.6, -0.6, 0.275}, {-0.6, -0.8, 0.275}, {-0.4, -0.8, 
                 0.}, {-0.4, -0.6, 0.}, {-0.4, -0.6, 0.275}, {-0.4, -0.8, 
                 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{67.08807195009716, 
              95.95036849495139}, {-6.3803998809008675`, 
              35.883213959612725`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.6, 0.}, {-0.6, -0.4, 
                 0.}, {-0.6, -0.4, 0.3}, {-0.6, -0.6, 0.3}, {-0.4, -0.6, 
                 0.}, {-0.4, -0.4, 0.}, {-0.4, -0.4, 0.3}, {-0.4, -0.6, 
                 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{76.96345416998844, 
              105.11429239120085`}, {-18.334469686222505`, 
              25.42192543980139}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.4, 0.}, {-0.6, -0.2, 
                 0.}, {-0.6, -0.2, 0.375}, {-0.6, -0.4, 0.375}, {-0.4, -0.4, 
                 0.}, {-0.4, -0.2, 0.}, {-0.4, -0.2, 0.375}, {-0.4, -0.4, 
                 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{86.13392255175506, 
              113.93025612044917`}, {-34.464990244281765`, 
              15.365546202653036`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, -0.2, 0.}, {-0.6, 0., 0.}, {-0.6,
                  0., 0.35}, {-0.6, -0.2, 0.35}, {-0.4, -0.2, 0.}, {-0.4, 0., 
                 0.}, {-0.4, 0., 0.35}, {-0.4, -0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{95.72680135686065, 
              122.41770884571228`}, {-41.0702697521032, 
              5.6910142438541556`}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0., 0.}, {-0.6, 0.2, 0.}, {-0.6, 
                 0.2, 0.4}, {-0.6, 0., 0.4}, {-0.4, 0., 0.}, {-0.4, 0.2, 
                 0.}, {-0.4, 0.2, 0.4}, {-0.4, 0., 0.4}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{104.52031569854444`, 
              130.59467676606627`}, {-54.157878173895625`, \
-3.6230137128323037`}}]},
           StatusArea[#, 0.4]& ,
           TagBoxNote->"0.4"],
          StyleBox["0.4`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.4, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.2, 0.}, {-0.6, 0.4, 0.}, {-0.6,
                  0.4, 0.35}, {-0.6, 0.2, 0.35}, {-0.4, 0.2, 0.}, {-0.4, 0.4, 
                 0.}, {-0.4, 0.4, 0.35}, {-0.4, 0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{113.47924679417483`, 
              138.47789091494252`}, {-57.88169081818323, \
-12.59631940022794}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.4, 0.}, {-0.6, 0.6, 0.}, {-0.6,
                  0.6, 0.25}, {-0.6, 0.4, 0.25}, {-0.4, 0.4, 0.}, {-0.4, 0.6, 
                 0.}, {-0.4, 0.6, 0.25}, {-0.4, 0.4, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{122.15845579287135`, 
              146.08290142817384`}, {-57.07948578746651, \
-21.247263252042274`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.6, 0.}, {-0.6, 0.8, 0.}, {-0.6,
                  0.8, 0.375}, {-0.6, 0.6, 0.375}, {-0.4, 0.6, 0.}, {-0.4, 
                 0.8, 0.}, {-0.4, 0.8, 0.375}, {-0.4, 0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{129.8923967234067, 
              153.51370581125246`}, {-75.69308692552583, \
-29.592909799244097`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.6, 0.8, 0.}, {-0.6, 1., 0.}, {-0.6, 
                 1., 0.125}, {-0.6, 0.8, 0.125}, {-0.4, 0.8, 0.}, {-0.4, 1., 
                 0.}, {-0.4, 1., 0.125}, {-0.4, 0.8, 0.125}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{138.0012193978979, 
              160.63414154057128`}, {-61.78321567979809, \
-37.64914002067704}}]},
           StatusArea[#, 0.125]& ,
           TagBoxNote->"0.125"],
          StyleBox["0.125`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.125, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -1., 0.}, {-0.4, -0.8, 
                 0.}, {-0.4, -0.8, 0.2}, {-0.4, -1., 0.2}, {-0.2, -1., 
                 0.}, {-0.2, -0.8, 0.}, {-0.2, -0.8, 0.2}, {-0.2, -1., 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{72.6350996212828, 101.41515563082582`}, {
              16.19552872345846, 52.86500840605868}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.8, 0.}, {-0.4, -0.6, 
                 0.}, {-0.4, -0.6, 0.3}, {-0.4, -0.8, 0.3}, {-0.2, -0.8, 
                 0.}, {-0.2, -0.6, 0.}, {-0.2, -0.6, 0.3}, {-0.2, -0.8, 
                 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{82.0217739102294, 
              110.75192446933653`}, {-3.2665439106359884`, 
              41.729763648004635`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.6, 0.}, {-0.4, -0.4, 
                 0.}, {-0.4, -0.4, 0.275}, {-0.4, -0.6, 0.275}, {-0.2, -0.6, 
                 0.}, {-0.2, -0.4, 0.}, {-0.2, -0.4, 0.275}, {-0.2, -0.6, 
                 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{92.12137736502079, 
              119.72347923492902`}, {-10.864247736624861`, 
              31.03877016920137}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.4, 0.}, {-0.4, -0.2, 
                 0.}, {-0.4, -0.2, 0.225}, {-0.4, -0.4, 0.225}, {-0.2, -0.4, 
                 0.}, {-0.2, -0.2, 0.}, {-0.2, -0.2, 0.225}, {-0.2, -0.4, 
                 0.225}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{101.89824493893573`, 
              128.35083726962387`}, {-15.88362695533246, 20.76596218256016}}]},
           StatusArea[#, 0.225]& ,
           TagBoxNote->"0.225"],
          StyleBox["0.225`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.225, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, -0.2, 0.}, {-0.4, 0., 0.}, {-0.4,
                  0., 0.35}, {-0.4, -0.2, 0.35}, {-0.2, -0.2, 0.}, {-0.2, 0., 
                 0.}, {-0.2, 0., 0.35}, {-0.2, -0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{110.40853427161043`, 
              136.65343359373446`}, {-36.29112292570106, 
              10.887273946455608`}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0., 0.}, {-0.4, 0.2, 0.}, {-0.4, 
                 0.2, 0.325}, {-0.4, 0., 0.325}, {-0.2, 0., 0.}, {-0.2, 0.2, 
                 0.}, {-0.2, 0.2, 0.325}, {-0.2, 0., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{119.3508172814552, 
              144.64926706422034`}, {-42.78082252967279, 
              1.3804515442464123`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.2, 0.}, {-0.4, 0.4, 0.}, {-0.4,
                  0.4, 0.25}, {-0.4, 0.2, 0.25}, {-0.2, 0.2, 0.}, {-0.2, 0.4, 
                 0.}, {-0.2, 0.4, 0.25}, {-0.2, 0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{128.02322040830302`, 
              152.387297897052}, {-44.58610135843382, -7.775114473193625}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.4, 0.}, {-0.4, 0.6, 0.}, {-0.4,
                  0.6, 0.55}, {-0.4, 0.4, 0.55}, {-0.2, 0.4, 0.}, {-0.2, 0.6, 
                 0.}, {-0.2, 0.6, 0.55}, {-0.2, 0.4, 0.55}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{135.6906553831036, 
              160.31473250113544`}, {-79.7240698624661, \
-16.598538230946062`}}]},
           StatusArea[#, 0.55]& ,
           TagBoxNote->"0.55"],
          StyleBox["0.55`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.55, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.6, 0.}, {-0.4, 0.8, 0.}, {-0.4,
                  0.8, 0.375}, {-0.4, 0.6, 0.375}, {-0.2, 0.6, 0.}, {-0.2, 
                 0.8, 0.}, {-0.2, 0.8, 0.375}, {-0.2, 0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{143.87549556818328`, 
              167.59349547585032`}, {-71.58421920979863, \
-25.107571730981334`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.4, 0.8, 0.}, {-0.4, 1., 0.}, {-0.4, 
                 1., 0.25}, {-0.4, 0.8, 0.25}, {-0.2, 0.8, 0.}, {-0.2, 1., 
                 0.}, {-0.2, 1., 0.25}, {-0.2, 0.8, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{151.42417992403247`, 
              174.47320055792215`}, {-68.27465206957213, -33.3187240639415}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -1., 0.}, {-0.2, -0.8, 
                 0.}, {-0.2, -0.8, 0.3}, {-0.2, -1., 0.3}, {0., -1., 0.}, {
                 0., -0.8, 0.}, {0., -0.8, 0.3}, {0., -1., 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{87.41656970083085, 116.7473567379609}, {
              12.782525959024731`, 59.094350512217815`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.8, 0.}, {-0.2, -0.6, 
                 0.}, {-0.2, -0.6, 0.325}, {-0.2, -0.8, 0.325}, {0., -0.8, 
                 0.}, {0., -0.6, 0.}, {0., -0.6, 0.325}, {0., -0.8, 0.325}}, {
                 
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{97.39169532417337, 
              125.87696282386689`}, {-0.06361760121998827, 
              47.70671717604027}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.6, 0.}, {-0.2, -0.4, 
                 0.}, {-0.2, -0.4, 0.425}, {-0.2, -0.6, 0.425}, {0., -0.6, 
                 0.}, {0., -0.4, 0.}, {0., -0.4, 0.425}, {0., -0.6, 0.425}}, {
                 
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{106.62076421754342`, 
              134.64563302632212`}, {-19.500927791925946`, 
              36.77836890535015}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.4, 0.}, {-0.2, -0.2, 
                 0.}, {-0.2, -0.2, 0.275}, {-0.2, -0.4, 0.275}, {0., -0.4, 
                 0.}, {0., -0.2, 0.}, {0., -0.2, 0.275}, {0., -0.4, 0.275}}, {
                 
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{116.69136569580658`, 
              143.07435665941415`}, {-15.266751525929834`, 
              26.282069180963482`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, -0.2, 0.}, {-0.2, 0., 0.}, {-0.2,
                  0., 0.35}, {-0.2, -0.2, 0.35}, {0., -0.2, 0.}, {0., 0., 
                 0.}, {0., 0., 0.35}, {0., -0.2, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{125.40808846673634`, 
              151.18252654323715`}, {-31.41054605661759, 16.19269331161184}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0., 0.}, {-0.2, 0.2, 0.}, {-0.2, 
                 0.2, 0.375}, {-0.2, 0., 0.375}, {0., 0., 0.}, {0., 0.2, 
                 0.}, {0., 0.2, 0.375}, {0., 0., 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{134.02141787039346`, 
              159.3246020755385}, {-42.614432286161275`, 6.4870276460219}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.2, 0.}, {-0.2, 0.4, 0.}, {-0.2,
                  0.4, 0.325}, {-0.2, 0.2, 0.325}, {0., 0.2, 0.}, {0., 0.4, 
                 0.}, {0., 0.4, 0.325}, {0., 0.2, 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{142.4090737174967, 
              167.06619481630807`}, {-46.68475575045166, \
-2.8564087339302944`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.4, 0.}, {-0.2, 0.6, 0.}, {-0.2,
                  0.6, 0.375}, {-0.2, 0.4, 0.375}, {0., 0.4, 0.}, {0., 0.6, 
                 0.}, {0., 0.6, 0.375}, {0., 0.4, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{150.3550306262032, 
              174.69346227440138`}, {-59.44072340593685, \
-11.857522721785443`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.6, 0.}, {-0.2, 0.8, 0.}, {-0.2,
                  0.8, 0.225}, {-0.2, 0.6, 0.225}, {0., 0.6, 0.}, {0., 0.8, 
                 0.}, {0., 0.8, 0.225}, {0., 0.6, 0.225}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{157.78622764138143`, 
              181.46058187674356`}, {-54.258500415900045`, \
-20.534788764706775`}}]},
           StatusArea[#, 0.225]& ,
           TagBoxNote->"0.225"],
          StyleBox["0.225`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.225, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{-0.2, 0.8, 0.}, {-0.2, 1., 0.}, {-0.2, 
                 1., 0.2}, {-0.2, 0.8, 0.2}, {0., 0.8, 0.}, {0., 1., 0.}, {0.,
                  1., 0.2}, {0., 0.8, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{164.95727599929597`, 
              188.260053980099}, {-59.907910488108385`, -28.90537543035029}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -1., 0.}, {0., -0.8, 0.}, {
                 0., -0.8, 0.325}, {0., -1., 0.325}, {0.2, -1., 0.}, {
                 0.2, -0.8, 0.}, {0.2, -0.8, 0.325}, {0.2, -1., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{103.38686003993077`, 132.4253903351305}, {
              16.328393319181735`, 65.46718798379}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.8, 0.}, {0., -0.6, 0.}, {
                 0., -0.6, 0.175}, {0., -0.8, 0.175}, {0.2, -0.8, 0.}, {
                 0.2, -0.6, 0.}, {0.2, -0.6, 0.175}, {0.2, -0.8, 0.175}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{113.99892301598092`, 141.33620509277694`}, {
              19.34107274210789, 53.81848661908886}}]},
           StatusArea[#, 0.175]& ,
           TagBoxNote->"0.175"],
          StyleBox["0.175`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.175, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.6, 0.}, {0., -0.4, 0.}, {
                 0., -0.4, 0.3}, {0., -0.6, 0.3}, {0.2, -0.6, 0.}, {0.2, -0.4,
                  0.}, {0.2, -0.4, 0.3}, {0.2, -0.6, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{122.93925680552181`, 
              149.8909195081991}, {-2.420960565730212, 42.644790220035745`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.4, 0.}, {0., -0.2, 0.}, {
                 0., -0.2, 0.425}, {0., -0.4, 0.425}, {0.2, -0.4, 0.}, {
                 0.2, -0.2, 0.}, {0.2, -0.2, 0.425}, {0.2, -0.4, 0.425}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{131.78225365792213`, 
              158.46874997013217`}, {-23.95088966213126, 
              31.917625055199927`}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., -0.2, 0.}, {0., 0., 0.}, {0., 0., 
                 0.25}, {0., -0.2, 0.25}, {0.2, -0.2, 0.}, {0.2, 0., 0.}, {
                 0.2, 0., 0.25}, {0.2, -0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{140.83544901952314`, 
              166.44720616295706`}, {-17.338042505286708`, 
              21.61074858606341}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0., 0.}, {0., 0.2, 0.}, {0., 0.2, 
                 0.325}, {0., 0., 0.325}, {0.2, 0., 0.}, {0.2, 0.2, 0.}, {0.2,
                  0.2, 0.325}, {0.2, 0., 0.325}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{149.18252654323715`, 
              174.46223657745855`}, {-33.27023113495568, 
              11.699935121537173`}}]},
           StatusArea[#, 0.325]& ,
           TagBoxNote->"0.325"],
          StyleBox["0.325`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.325, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.2, 0.}, {0., 0.4, 0.}, {0., 0.4, 
                 0.3}, {0., 0.2, 0.3}, {0.2, 0.2, 0.}, {0.2, 0.4, 0.}, {0.2, 
                 0.4, 0.3}, {0.2, 0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{156.9880879624744, 
              181.95287237848794`}, {-39.81771819913014, 2.162785716664189}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.4, 0.}, {0., 0.6, 0.}, {0., 0.6, 
                 0.35}, {0., 0.4, 0.35}, {0.2, 0.4, 0.}, {0.2, 0.6, 0.}, {0.2,
                  0.6, 0.35}, {0.2, 0.4, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{164.5076712524629, 
              189.43888302088726`}, {-52.75805548063171, \
-7.021440824543504}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.6, 0.}, {0., 0.8, 0.}, {0., 0.8, 
                 0.3}, {0., 0.6, 0.3}, {0.2, 0.6, 0.}, {0.2, 0.8, 0.}, {0.2, 
                 0.8, 0.3}, {0.2, 0.6, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{171.7567100744547, 
              196.23273036866468`}, {-56.46945139717381, \
-15.871978525837392`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0., 0.8, 0.}, {0., 1., 0.}, {0., 1., 
                 0.3}, {0., 0.8, 0.3}, {0.2, 0.8, 0.}, {0.2, 1., 0.}, {0.2, 
                 1., 0.3}, {0.2, 0.8, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{178.74954715032118`, 
              202.98514477658767`}, {-64.34782435007826, \
-24.406688695672827`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -1., 0.}, {0.2, -0.8, 0.}, {
                 0.2, -0.8, 0.25}, {0.2, -1., 0.25}, {0.4, -1., 0.}, {
                 0.4, -0.8, 0.}, {0.4, -0.8, 0.25}, {0.4, -1., 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{120.2270034462626, 148.46109076467837`}, {
              29.365561549853524`, 71.98853680229632}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.8, 0.}, {0.2, -0.6, 0.}, {
                 0.2, -0.6, 0.275}, {0.2, -0.8, 0.275}, {0.4, -0.8, 0.}, {
                 0.4, -0.6, 0.}, {0.4, -0.6, 0.275}, {0.4, -0.8, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{129.76912437853952`, 157.34728182493075`}, {
              16.007788457621864`, 60.06968536003844}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.6, 0.}, {0.2, -0.4, 0.}, {
                 0.2, -0.4, 0.375}, {0.2, -0.6, 0.375}, {0.4, -0.6, 0.}, {
                 0.4, -0.4, 0.}, {0.4, -0.4, 0.375}, {0.4, -0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{138.87054088066932`, 
              166.13910173852102`}, {-3.8874641171524047`, 
              48.64228449256043}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.4, 0.}, {0.2, -0.2, 0.}, {
                 0.2, -0.2, 0.275}, {0.2, -0.4, 0.275}, {0.4, -0.4, 0.}, {
                 0.4, -0.2, 0.}, {0.4, -0.2, 0.275}, {0.4, -0.4, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{147.84759585794023`, 
              174.20975654287952`}, {-4.720514180024068, 37.6765521935312}}]},
           
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, -0.2, 0.}, {0.2, 0., 0.}, {0.2, 
                 0., 0.3}, {0.2, -0.2, 0.3}, {0.4, -0.2, 0.}, {0.4, 0., 0.}, {
                 0.4, 0., 0.3}, {0.4, -0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{156.11046151707302`, 
              182.22580197624671`}, {-16.742546895543413`, 
              27.1450652040715}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0., 0.}, {0.2, 0.2, 0.}, {0.2, 
                 0.2, 0.275}, {0.2, 0., 0.275}, {0.4, 0., 0.}, {0.4, 0.2, 
                 0.}, {0.4, 0.2, 0.275}, {0.4, 0., 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{164.014150656816, 
              189.74657998814138`}, {-23.836423394614727`, 
              17.022530029408053`}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.2, 0.}, {0.2, 0.4, 0.}, {0.2, 
                 0.4, 0.3}, {0.2, 0.2, 0.3}, {0.4, 0.2, 0.}, {0.4, 0.4, 0.}, {
                 0.4, 0.4, 0.3}, {0.4, 0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{171.61984966882991`, 
              197.19674160619792`}, {-35.08681431706735, 7.285580122669572}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.4, 0.}, {0.2, 0.6, 0.}, {0.2, 
                 0.6, 0.35}, {0.2, 0.4, 0.35}, {0.4, 0.4, 0.}, {0.4, 0.6, 
                 0.}, {0.4, 0.6, 0.35}, {0.4, 0.4, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{178.94409927059078`, 
              204.5552529401355}, {-48.22243076369902, -2.08740418760749}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.6, 0.}, {0.2, 0.8, 0.}, {0.2, 
                 0.8, 0.25}, {0.2, 0.6, 0.25}, {0.4, 0.6, 0.}, {0.4, 0.8, 
                 0.}, {0.4, 0.8, 0.25}, {0.4, 0.6, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{186.00223823778873`, 
              210.72596631652672`}, {-47.68461343798316, \
-11.116455947217602`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.2, 0.8, 0.}, {0.2, 1., 0.}, {0.2, 1.,
                  0.3}, {0.2, 0.8, 0.3}, {0.4, 0.8, 0.}, {0.4, 1., 0.}, {0.4, 
                 1., 0.3}, {0.4, 0.8, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{192.8085106312332, 
              217.60169741446302`}, {-60.11416015846943, \
-19.82016450322142}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -1., 0.}, {0.4, -0.8, 0.}, {
                 0.4, -0.8, 0.075}, {0.4, -1., 0.075}, {0.6, -1., 0.}, {
                 0.6, -0.8, 0.}, {0.6, -0.8, 0.075}, {0.6, -1., 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{137.29481256056454`, 164.99714133526908`}, {
              51.4630253634807, 78.66364948827437}}]},
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.8, 0.}, {0.4, -0.6, 0.}, {
                 0.4, -0.6, 0.375}, {0.4, -0.8, 0.375}, {0.6, -0.8, 0.}, {
                 0.6, -0.6, 0.}, {0.6, -0.6, 0.375}, {0.6, -0.8, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{146.32800361386896`, 174.37352201993048`}, {
              12.511405697181985`, 66.46513970296331}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.6, 0.}, {0.4, -0.4, 0.}, {
                 0.4, -0.4, 0.425}, {0.4, -0.6, 0.425}, {0.6, -0.6, 0.}, {
                 0.6, -0.4, 0.}, {0.6, -0.4, 0.425}, {0.6, -0.6, 0.425}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{155.1408519109758, 
              183.02631040586644`}, {-3.0107905062706664`, 
              54.77529417974667}}]},
           StatusArea[#, 0.425]& ,
           TagBoxNote->"0.425"],
          StyleBox["0.425`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.425, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.4, 0.}, {0.4, -0.2, 0.}, {
                 0.4, -0.2, 0.275}, {0.4, -0.4, 0.275}, {0.6, -0.4, 0.}, {
                 0.6, -0.2, 0.}, {0.6, -0.2, 0.275}, {0.6, -0.4, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{163.46994951187395`, 190.43721019882662`}, {
              0.7279711019703825, 43.56294661940501}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, -0.2, 0.}, {0.4, 0., 0.}, {0.4, 
                 0., 0.475}, {0.4, -0.2, 0.475}, {0.6, -0.2, 0.}, {0.6, 0., 
                 0.}, {0.6, 0., 0.475}, {0.6, -0.2, 0.475}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{171.46921309279907`, 
              199.27079523569176`}, {-27.892545002031724`, 
              32.79942587742992}}]},
           StatusArea[#, 0.475]& ,
           TagBoxNote->"0.475"],
          StyleBox["0.475`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.475, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0., 0.}, {0.4, 0.2, 0.}, {0.4, 
                 0.2, 0.3}, {0.4, 0., 0.3}, {0.6, 0., 0.}, {0.6, 0.2, 0.}, {
                 0.6, 0.2, 0.3}, {0.6, 0., 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{179.15785450216129`, 
              205.6563329225925}, {-21.072292350004744`, 
              22.458311162993255`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.2, 0.}, {0.4, 0.4, 0.}, {0.4, 
                 0.4, 0.25}, {0.4, 0.2, 0.25}, {0.6, 0.2, 0.}, {0.6, 0.4, 
                 0.}, {0.6, 0.4, 0.25}, {0.6, 0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{186.55362196180104`, 
              212.41012156501088`}, {-25.771456956209036`, 
              12.51521550434903}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.4, 0.}, {0.4, 0.6, 0.}, {0.4, 
                 0.6, 0.225}, {0.4, 0.4, 0.225}, {0.6, 0.4, 0.}, {0.6, 0.6, 
                 0.}, {0.6, 0.6, 0.225}, {0.6, 0.4, 0.225}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{193.67293684229432`, 
              219.02220143646375`}, {-32.436553179742816`, 
              2.9475937447516998`}}]},
           StatusArea[#, 0.225]& ,
           TagBoxNote->"0.225"],
          StyleBox["0.225`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.225, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.6, 0.}, {0.4, 0.8, 0.}, {0.4, 
                 0.8, 0.375}, {0.4, 0.6, 0.375}, {0.6, 0.6, 0.}, {0.6, 0.8, 
                 0.}, {0.6, 0.8, 0.375}, {0.6, 0.6, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{200.53101538174684`, 
              226.8054239286929}, {-54.31314298627349, -6.265428113176526}}]},
           
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.4, 0.8, 0.}, {0.4, 1., 0.}, {0.4, 1.,
                  0.2}, {0.4, 0.8, 0.2}, {0.6, 0.8, 0.}, {0.6, 1., 0.}, {0.6, 
                 1., 0.2}, {0.6, 0.8, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{207.14197724693355`, 
              231.63373234214006`}, {-47.08764926921975, \
-15.143204933538286`}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.8, 0.}, {0.6, -0.6, 0.}, {
                 0.6, -0.6, 0.125}, {0.6, -0.8, 0.125}, {0.8, -0.8, 0.}, {
                 0.8, -0.6, 0.}, {0.8, -0.6, 0.125}, {0.8, -0.8, 0.125}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{162.86683855864715`, 190.44498009084813`}, {
              41.71938943567814, 73.00990130018387}}]},
           StatusArea[#, 0.125]& ,
           TagBoxNote->"0.125"],
          StyleBox["0.125`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.125, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.6, 0.}, {0.6, -0.4, 0.}, {
                 0.6, -0.4, 0.35}, {0.6, -0.6, 0.35}, {0.8, -0.6, 0.}, {
                 0.8, -0.4, 0.}, {0.8, -0.4, 0.35}, {0.8, -0.6, 0.35}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{171.30261007765222`, 199.74736970753008`}, {
              9.895061906297236, 61.04846479006077}}]},
           StatusArea[#, 0.35]& ,
           TagBoxNote->"0.35"],
          StyleBox["0.35`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.35, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.4, 0.}, {0.6, -0.2, 0.}, {
                 0.6, -0.2, 0.25}, {0.6, -0.4, 0.25}, {0.8, -0.4, 0.}, {
                 0.8, -0.2, 0.}, {0.8, -0.2, 0.25}, {0.8, -0.4, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{179.39380358597242`, 206.86060060469697`}, {
              8.59378583947965, 49.581087707018824`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, -0.2, 0.}, {0.6, 0., 0.}, {0.6, 
                 0., 0.3}, {0.6, -0.2, 0.3}, {0.8, -0.2, 0.}, {0.8, 0., 0.}, {
                 0.8, 0., 0.3}, {0.8, -0.2, 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{187.16110911101492`, 
              214.65215454341117`}, {-6.179213876596009, 
              38.577779217686825`}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0., 0.}, {0.6, 0.2, 0.}, {0.6, 
                 0.2, 0.525}, {0.6, 0., 0.525}, {0.8, 0., 0.}, {0.8, 0.2, 
                 0.}, {0.8, 0.2, 0.525}, {0.8, 0., 0.525}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{194.6235927520139, 
              223.7407479968222}, {-37.04521050232333, 28.010927720163437`}}]},
           StatusArea[#, 0.525]& ,
           TagBoxNote->"0.525"],
          StyleBox["0.525`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.525, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0.2, 0.}, {0.6, 0.4, 0.}, {0.6, 
                 0.4, 0.375}, {0.6, 0.2, 0.375}, {0.8, 0.2, 0.}, {0.8, 0.4, 
                 0.}, {0.8, 0.4, 0.375}, {0.8, 0.2, 0.375}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{201.79885293841662`, 
              229.34660134038}, {-32.179226200449946`, 17.855069495982654`}}]},
           StatusArea[#, 0.375]& ,
           TagBoxNote->"0.375"],
          StyleBox["0.375`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.375, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0.4, 0.}, {0.6, 0.6, 0.}, {0.6, 
                 0.6, 0.275}, {0.6, 0.4, 0.275}, {0.8, 0.4, 0.}, {0.8, 0.6, 
                 0.}, {0.8, 0.6, 0.275}, {0.8, 0.4, 0.275}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{208.70315898625356`, 
              235.02183383597307`}, {-32.106047244994585`, 
              8.086683841678223}}]},
           StatusArea[#, 0.275]& ,
           TagBoxNote->"0.275"],
          StyleBox["0.275`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.275, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.6, 0.6, 0.}, {0.6, 0.8, 0.}, {0.6, 
                 0.8, 0.1}, {0.6, 0.6, 0.1}, {0.8, 0.6, 0.}, {0.8, 0.8, 0.}, {
                 0.8, 0.8, 0.1}, {0.8, 0.6, 0.1}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{215.35157424877596`, 
              239.62506772380294`}, {-25.584713721940744`, \
-1.3159887897940337`}}]},
           StatusArea[#, 0.1]& ,
           TagBoxNote->"0.1"],
          StyleBox["0.1`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.1, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, -0.6, 0.}, {0.8, -0.4, 0.}, {
                 0.8, -0.4, 0.075}, {0.8, -0.6, 0.075}, {1., -0.6, 0.}, {
                 1., -0.4, 0.}, {1., -0.4, 0.075}, {1., -0.6, 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{187.8337214753765, 214.91242645653745`}, {
              41.003760748043526`, 67.46665661882554}}]},
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, -0.4, 0.}, {0.8, -0.2, 0.}, {
                 0.8, -0.2, 0.2}, {0.8, -0.4, 0.2}, {1., -0.4, 0.}, {1., -0.2,
                  0.}, {1., -0.2, 0.2}, {1., -0.4, 0.2}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{195.67405827894143`, 223.3322636566134}, {
              18.863964605909167`, 55.73544855661477}}]},
           StatusArea[#, 0.2]& ,
           TagBoxNote->"0.2"],
          StyleBox["0.2`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.2, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, -0.2, 0.}, {0.8, 0., 0.}, {0.8, 
                 0., 0.25}, {0.8, -0.2, 0.25}, {1., -0.2, 0.}, {1., 0., 0.}, {
                 1., 0., 0.25}, {1., -0.2, 0.25}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{203.1971076986264, 230.9236975608728}, {
              3.8686783512454497`, 44.484248931876515`}}]},
           StatusArea[#, 0.25]& ,
           TagBoxNote->"0.25"],
          StyleBox["0.25`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.25, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, 0., 0.}, {0.8, 0.2, 0.}, {0.8, 
                 0.2, 0.3}, {0.8, 0., 0.3}, {1., 0., 0.}, {1., 0.2, 0.}, {1., 
                 0.2, 0.3}, {1., 0., 0.3}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{210.4217480059861, 
              238.2972573966541}, {-10.700940335988264`, 33.68418747299951}}]},
           StatusArea[#, 0.3]& ,
           TagBoxNote->"0.3"],
          StyleBox["0.3`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.3, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, 0.2, 0.}, {0.8, 0.4, 0.}, {0.8, 
                 0.4, 0.175}, {0.8, 0.2, 0.175}, {1., 0.2, 0.}, {1., 0.4, 
                 0.}, {1., 0.4, 0.175}, {1., 0.2, 0.175}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             
             ImageSizeCache->{{217.36538894760844`, 
              243.54567836776857`}, {-9.07678724737184, 
              23.308663620643294`}}]},
           StatusArea[#, 0.175]& ,
           TagBoxNote->"0.175"],
          StyleBox["0.175`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.175, {"Graphics3DLabel"}], "Tooltip"]& ], 
        TagBox[
         TooltipBox[
          TagBox[{{}, 
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 RGBColor[
                 0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
                 
                 AbsoluteThickness[1.5]}], {}, {}], 
              StyleBox[{
                
                GraphicsComplex3DBox[{{0.8, 0.4, 0.}, {0.8, 0.6, 0.}, {0.8, 
                 0.6, 0.075}, {0.8, 0.4, 0.075}, {1., 0.4, 0.}, {1., 0.6, 
                 0.}, {1., 0.6, 0.075}, {1., 0.4, 0.075}}, {
                  Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`]}], 
                  
                  Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.4522888, 0.34441639999999996`, 0.15682040000000003`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`]}], 
                  Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}], 
                  Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[
                    0.9045776, 0.6888327999999999, 0.31364080000000005`], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001], 
                    RGBColor[0.98091552, 0.93776656, 0.8627281600000001]}]}]},
                Lighting -> {{"Ambient", 
                  GrayLevel[1]}}, StripOnInput -> False]},
             ImageSizeCache->{{224.04411181529161`, 
              248.72099044096663`}, {-9.698122083265261, 
              13.333127777893296`}}]},
           StatusArea[#, 0.075]& ,
           TagBoxNote->"0.075"],
          StyleBox["0.075`", {"Graphics3DLabel"}, StripOnInput -> False]],
         Annotation[#, 
          Style[0.075, {"Graphics3DLabel"}], "Tooltip"]& ]},
       FontColor->GrayLevel[0.4]]}, {}, {}},
    FontColor->GrayLevel[0.4]]},
  Axes->{True, True, True},
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{280., 223.},
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{-1., 1.}, {-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.271810960030505, -2.347081411018176, 2.0793522385587324`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 3.8149824518168364`*^9, 
   3.8149865245269823`*^9, 3.8149866654021807`*^9, 3.814988050991954*^9, 
   3.8150454985294733`*^9, 3.8150481931331787`*^9, 3.815049115710342*^9, 
   3.815053608098349*^9, 3.8150562026494017`*^9, 3.8151344151478643`*^9, 
   3.8151351833236856`*^9, 3.8151355194328947`*^9, 3.8151366653263397`*^9, 
   3.81513671589086*^9, 3.8151368319495564`*^9, 3.815137189868903*^9, 
   3.815137405648752*^9, 3.815137540815958*^9, 3.8151376307540913`*^9, 
   3.815138728833543*^9},ExpressionUUID->"e76804ca-b6e9-432d-a27d-\
161932b16b5a"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
IVdN483nnGw8cP4VKS2cCkFjhpE1pRT8H5+ZrfQ=
      "]]}, {}}, {}, {}, {}, {}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{236., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.989184959773049, 0.9733472638634241}, {-0.9758529159666184, 
   0.9875084279117752}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 3.8149824518168364`*^9, 
   3.8149865245269823`*^9, 3.8149866654021807`*^9, 3.814988050991954*^9, 
   3.8150454985294733`*^9, 3.8150481931331787`*^9, 3.815049115710342*^9, 
   3.815053608098349*^9, 3.8150562026494017`*^9, 3.8151344151478643`*^9, 
   3.8151351833236856`*^9, 3.8151355194328947`*^9, 3.8151366653263397`*^9, 
   3.81513671589086*^9, 3.8151368319495564`*^9, 3.815137189868903*^9, 
   3.815137405648752*^9, 3.815137540815958*^9, 3.8151376307540913`*^9, 
   3.815138728951255*^9},ExpressionUUID->"8928e894-9a2a-4f96-a187-\
335130cf9fb6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd3XuskHUdx/Ezac7IdLoUM1vqbCo575qiKKFOwSxvQ5v32wQNb2XOTa2F
eTtmmmXmXYl0ObXpMi+EGHhp5XVLQAtvqeFAIUIJQdLt8/qw8Rd77/D7nu9+
e/3x7Nmenc1OPPPQU9YYGBg4cs2BgU//vXfv+294YNrA9PPunzTknksHph9x
wMQ7Tn1q5WP60PV+sO749T5uH/TyRReMP2p5+4DJl84bP2VZe5/vXj1uwvtL
23vt8usZE3b/sL37x7dvf9qkJe2dn/rdzac9s7i93dUPDD192H/aw78z9bzT
T1jYPnDfK/4ya9yC9uiXbpw8+915q+aPv+fCORe93d5+2bQjXl7/zVX7b3T7
SQ8e9Gp7xJ4zhz107uz2lse/89eHb36hvdVaGwycN/hEe+ioibfPm3hf+8rb
zv/TWofeuXfvY9ONnrro4hntr88ff9/IG55vj316v4/2OGdW+5jfbL7/iLFz
27tN/+GYTa55o/2Nbc8480sr3lp1/qajf7nxhHntw4Ye+OgX/z6/ve3Um866
ctOF7Z0WXzvkypcWrZo/fPC6wSsXt0ee8OOtB0cvaY++/vypVyz9oL3/c2d9
+4p7l7a/ueb4Ny4/eVn7kJHHnXv5xsvb474/bq3Ln1/RPurug2687JKVq/Y7
e/Nh+94yMErzN/bNB9ba5OiVj/Gn+dP8af40f5o/zZ/mT/On+dP8af46P/40
f90//jR/mj/Nn+ZP89f7iD/Nn+ZP86f50/z1fPxp/jR/mr/Ojz/NX+8z/jR/
mj/Nn+ZP89f94k/z99sTjh86964V9af50/xp/jR/mj/Nn+ZP86f50/xp/jo/
/jR/3T/+NH+aP82f5k/z1/uIP82f5k/zp/nT/PV8/Gn+NH+av86PP81f7zP+
NH+aP82f5k/z1/3iT/O3xmtrr33bko/qT/On+dP8af40f5o/zZ/mT/On+dP8
dX78af66f/xp/jR/mj/Nn+av9xF/mj/Nn+ZP86f56/n40/xp/jR/nR9/mr/e
Z/xp/jR/mj/Nn+av+8Wf5u/YYx/+/Imjl9Wf5k/zp/nT/Gn+NH+aP82f5k/z
p/nr/PjT/HX/+NP8af40f5o/zV/vI/40f5o/zZ/mT/PX8/Gn+dP8af46P/40
f73P+NP8af40f5o/zV/3iz/N3yP/OGXdLX62tP40f5o/zZ/mT/On+dP8af40
f5o/zV/nx5/mr/vHn+ZP86f50/xp/nof8af50/xp/jR/mr+ejz/Nn+ZP89f5
8af5633Gn+ZP86f50/xp/rpf/Gn+Njxq/fXefuWD+tP8af40f5o/zZ/mT/On
+dP8af40f50ff5q/7h9/mj/Nn+ZP86f5633En+ZP86f50/xp/no+/jR/mj/N
X+fHn+av9xl/mj/Nn+ZP86f5637xp/k7Z8609e/aakn9af40f5o/zZ/mT/On
+dP8af40f5q/zo8/zV/3jz/Nn+ZP86f50/z1PuJP86f50/xp/jR/PR9/mj/N
n+av8+NP89f7jD/Nn+ZP86f50/x1v/jT/D17xOlfOO3cxfWn+dP8af40f5o/
zZ/mT/On+dP8af46P/40f90//jR/mj/Nn+ZP89f7iD/Nn+ZP86f50/z1fPxp
/jR/mr/Ojz/NX+8z/jR/mj/Nn+ZP89f94k/zN/ylYRtu8+dF9af50/xp/jR/
mj/Nn+ZP86f50/xp/jo//jR/3T/+NH+aP82f5k/z1/uIP82f5k/zp/nT/PV8
/Gn+NH+av86PP81f7zP+NH+aP82f5k/z1/3iT/N3yeEzh723zsL60/xp/jR/
mj/Nn+ZP86f50/xp/jR/nR9/mr/uH3+aP82f5k/zp/nrfcSf5k/zp/nT/Gn+
ej7+NH+aP81f58ef5q/3GX+aP82f5k/zp/nrfvGn+Zs55fUdj//j/PrT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+dH3+av+4ff5o/zZ/mT/On+et9xJ/mT/On+dP8
af56Pv40f5o/zV/nx5/mr/cZf5o/zZ/mT/On+et+8af5u+COEbv+6+B59af5
0/xp/jR/mj/Nn+ZP86f50/xp/jo//jR/3T/+NH+aP82f5k/z1/uIP82f5k/z
p/nT/PV8/Gn+NH+av86PP81f7zP+NH+aP82f5k/z1/3iT/O3863X7j7+3bfq
T/On+dP8af40f5o/zZ/mT/On+dP8dX78af66f/xp/jR/mj/Nn+av9xF/mj/N
n+ZP86f56/n40/xp/jR/nR9/mr/eZ/xp/jR/mj/Nn+av+8Wf5m/+jfP3nD/p
jfrT/Gn+NH+aP82f5k/zp/nT/Gn+NH+dH3+av+4ff5o/zZ/mT/On+et9xJ/m
T/On+dP8af56Pv40f5o/zV/nx5/mr/cZf5o/zZ/mT/On+et+8af5O2CHwR+9
NmJu/Wn+NH+aP82f5k/zp/nT/Gn+NH+av86PP81f948/zZ/mT/On+dP89T7i
T/On+dP8af40fz0ff5o/zZ/mr/PjT/PX+4w/zZ/mT/On+dP8db/40/w9NHzk
pf+eOKv+NH+aP82f5k/zp/nT/Gn+NH+aP81f58ef5q/7x5/mT/On+dP8af56
H/Gn+dP8af40f5q/no8/zZ/mT/PX+fGn+et9xp/mT/On+dP8af66X/xp/rba
4v2fLrzt+frT/Gn+NH+aP82f5k/zp/nT/Gn+NH+dH3+av+4ff5o/zZ/mT/On
+et9xJ/mT/On+dP8af56Pv40f5o/zV/nx5/mr/cZf5o/zZ/mT/On+et+8af5
22GP0VsvunNG/Wn+NH+aP82f5k/zp/nT/Gn+NH+av86PP81f948/zZ/mT/On
+dP89T7iT/On+dP8af40fz0ff5o/zZ/mr/PjT/PX+4w/zZ/mT/On+dP8db/4
033+e+j6lz+z212rnv/Sff5L9/kv3ee/dJ//0n3+S/f5L93nv3Sf/9J9/kv3
+S/d5z/zPf+l+/xnf89/6T7/pfv8l+7zX7rPf+k+/7kPz3/pPv+l+/yX7vNf
us9/6T7/Oe/5L93nv3Sf/9J9/jPf81+6z3/u0/Nfus9/6T7/pfv8l+7zX7rP
f/bz/Jfu+5cLZr3/yHb37t33L+m+f0n3/Uu671/Sff+S7vuXdN+/pPv+Jd33
L+m+f0n3/Uu671/M9/4l3fcv9vf+Jd33L+m+f0n3/Uu671/Sff/iPrx/Sff9
S7rvX9J9/5Lu+5d037847/1Luu9f0n3/ku77F/O9f0n3/Yv79P4l3fcv6b5/
Sff9S7rvX9J9/2I/71/S/G0z/5p75371ifrT/Gn+NH+aP82f5k/zp/nT/Gn+
NH+dH3+av+4ff5o/zZ/mT/On+et9xJ/mT/On+dP8af56Pv40f5o/zV/nx5/m
r/cZf5o/zZ/mT/On+et+8af7/cfy6w5+57gX6k/3+490v/9I9/uPdL//SPf7
j3S//0j3+490v/9I9/uPdL//SPf7D/N9/5Hu9x/29/1Hut9/pPv9R7rff6T7
/Ue633+4D99/pPv9R7rff6T7/Ue633+k+/2H877/SPf7j3S//0j3+w/zff+R
7vcf7tP3H+l+/5Hu9x/pfv+R7vcf6X7/YT/ff6T523XIW2Ne3WZ2/Wn+NH+a
P82f5k/zp/nT/Gn+NH+av86PP81f948/zZ/mT/On+dP89T7iT/On+dP8af40
fz0ff5o/zZ/mr/PjT/PX+4w/zZ/mT/On+dP8db/40/w9+dmd9pn1v7n1p/nT
/Gn+NH+aP82f5k/zp/nT/Gn+Oj/+NH/dP/40f5o/zZ/mT/PX+4g/zZ/mT/On
+dP89Xz8af40f5q/zo8/zV/vM/40f5o/zZ/mT/PX/eJP8/e1y0bdcuqbb9Sf
5k/zp/nT/Gn+NH+aP82f5k/zp/nr/PjT/HX/+NP8af40f5o/zV/vI/40f5o/
zZ/mT/PX8/Gn+dP8af46P/40f73P+NP8af40f5o/zV/3iz/N3/cG37nhzTFv
15/mT/On+dP8af40f5o/zZ/mT/On+ev8+NP8df/40/xp/jR/mj/NX+8j/jR/
mj/Nn+ZP89fz8af50/xp/jo//jR/vc/40/xp/jR/mj/NX/eLP83fo1dd9avj
fj+v/jR/mj/Nn+ZP86f50/xp/jR/mj/NX+fHn+av+8ef5k/zp/nT/Gn+eh/x
p/nT/Gn+NH+av56PP82f5k/z1/nxp/nrfcaf5k/zp/nT/Gn+ul/8af6G/HyX
X7yy4YL60/xp/jR/mj/Nn+ZP86f50/xp/jR/nR9/mr/uH3+aP82f5k/zp/nr
fcSf5k/zp/nT/Gn+ej7+NH+aP81f58ef5q/3GX+aP82f5k/zp/nrfvGn+Zsy
9oyn795rYf1p/jR/mj/Nn+ZP86f50/xp/jR/mr/Ojz/NX/ePP82f5k/zp/nT
/PU+4k/zp/nT/Gn+NH89H3+aP82f5q/z40/z1/uMP82f5k/zp/nT/HW/+NP8
jfnb40/OW7So/jR/mj/Nn+ZP86f50/xp/jR/mj/NX+fHn+av+8ef5k/zp/nT
/Gn+eh/xp/nT/Gn+NH+av56PP82f5k/z1/nxp/nrfcaf5k/zp/nT/Gn+ul/8
af4WHLTBE1tOWVx/mj/Nn+ZP86f50/xp/jR/mj/Nn+av8+NP89f940/zp/nT
/Gn+NH+9j/jT/Gn+NH+aP81fz8ef5k/zp/nr/PjT/PU+40/zp/nT/Gn+NH/d
L/40f9c8N37GKUcuqT/Nn+ZP86f50/xp/jR/mj/Nn+ZP89f58af56/7xp/nT
/Gn+NH+av95H/Gn+NH+aP82f5q/n40/zp/nT/HV+/Gn+ep/xp/nT/Gn+NH+a
v+4Xf5q/XQ6Z+vjkz31Yf5o/zZ/mT/On+dP8af40f5o/zZ/mr/PjT/PX/eNP
86f50/xp/jR/vY/40/xp/jR/mj/NX8/Hn+ZP86f56/z40/z1PuNP86f50/xp
/jR/3S/+NH9zXlx3+uvTltaf5k/zp/nT/Gn+NH+aP82f5k/zp/nr/PjT/HX/
+NP8af40f5o/zV/vI/40f5o/zZ/mT/PX8/Gn+dP8af46P/40f73P+NP8af40
f5o/zV/3iz/N34WHnzTtK+csqz/Nn+ZP86f50/xp/jR/mj/Nn+ZP89f58af5
6/7xp/nT/Gn+NH+av95H/Gn+NH+aP82f5q/n40/zp/nT/HV+/Gn+ep/xp/nT
/Gn+NH+av+4Xf5q/zV56cOoxX11ef5o/zZ/mT/On+dP8af40f5o/zZ/mr/Pj
T/PX/eNP86f50/xp/jR/vY/40/xp/jR/mj/NX8/Hn+ZP86f56/z40/z1PuNP
86f50/xp/jR/3S/+NH9PHDH00Rtnr6g/zZ/mT/On+dP8af40f5o/zZ/mT/PX
+fGn+ev+8af50/xp/jR/mr/eR/xp/jR/mj/Nn+av5+NP86f50/x1fvxp/nqf
8af50/xp/jR/mr/uF3+avwlzjnl4zuDK+tP8af40f5o/zZ/mT/On+dP8af40
f50ff5q/7h9/mj/Nn+ZP86f5633En+ZP86f50/xp/no+/jR/mj/NX+fHn+av
9xl/mj/Nn+ZP86f5637xp/n7yT2zXxm8dWAUf5o/zZ/mT/On+dP8af40f5o/
zZ/mr/PjT/PX/eNP86f50/xp/jR/vY/40/xp/jR/mj/NX8/Hn+ZP86f56/z4
0/z1PuNP86f50/xp/jR/3S/+9IKz//uHnQ4ZmL7Oi+9N+ufGq/4egz5j8sk7
ztx+YJR2Xjv/5Wf2OXrqjgOjnNfOr96r/35/D8LPtZ+vvr95zx552F2LP/27
FaMf3me/T/7ft66YscXFp35yj2k/P2TkOptsMWFglJ9r+65+3u93fvXf77yf
r/73Lcwzf/Xfb97/AflHXNM=
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
+jgdZInmyiEyOMz59voOllkHY/BBL6WLXDuZC56dZbC7cebbmeOgcqGnc4S1
RhelR7nQxzlalmiudPeuRzmvr6+b7zjaWD19XeXaw1zw7OUZ8OvtnO8b9Cs9
CLNjjfG95D8/j2r6OCfKEs2VPjLo67ymNXOefE40Bh/0Uk6Va39zwR59lZPl
d6pzGJ/kupqezgBrjS7K2eVCH+cseaKvcro1PdN5O32nWe+zjLXVN1CuZ5sL
noM9A37nOm/uW4+X7XnGuB/aJGPLhT7OMFmiuXKBDC503kXf+fIZZgw+6KWM
kOvF5oIn+irD5TfCeWdzDCkXejqXWmt0Ua4qF/o4V8oTfRW0V/gcvcJ5b32X
+bYrjfXSN1KuV5kLnmM8o5/vZt7M/cfJEh2Vcebi95xnlQt9nBtliebKdTK4
wXlNa+Ye+dxoDD7opdwq1wnmgif6KjfL71bnZ+qbUC70dG6z1uiiTC4X+jh3
yxN9lTus6V3Oz9U30XrfbWywvtvlOtlc8JzqGfCb5vxU33qtbO8xdoq+8eVC
H2emLNFcuU8G9zsfoe9e+cw0Bh/0UubIdZa54DlbBqONM7/EHNPLhZ7OQ9Ya
XZT55UIfZ54s0Vx51Ls+7hz+6LI87DvmGRujb65c55sLngs8A35POYfT087h
h4YK/z3G71Dxezf8Pg71Rv/k+XKhlfOCXNFfeVYezzuH32LXwQYNlSWyetk5
LF903d3GX7R+6JksLxf6Ne/IDH2VV6wfeiavlwutnDdk+5rralo8L8vvLdc9
YG60VKaab6ksl7lupvFlcnrdvPB7zztRIzRLvrbe6Kl8KCd0UD6WK/or78vj
Q+fw+9R1sEFDZYWsvnAOy89cN8/4Z9YLPRN0TuaY+z35oa+yUobfer+aVs63
cv7adTUtni9k9r3rFpkbLZUF5vtStj+47gXjzNE6QR8D3YyaHgpzGKOv8qs1
Rv/k93KhlfOHbFa5bqnxVdb6L9fBDA2Vf2Tzn3OY/O26N4z/bb3QM0HnpKZf
wxzm6Kugt0K90DNBU6WmlcOcPkNrhXU1LZ7/ZIaGCutgRm60VOgR8rEOtuiv
sA72xNFhqWkM/SzDdfy3V3zolqBnQo3RP0FXpaaVwxw26K+gwwID4sxhiIYK
62CGhgqaKLBBO4U57NFdYR3siTNfIpNf7LN1/XdgmKOvgt4KcXRCuF9NK4c5
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
B9BGDTo=
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1:eJxEmmk4ld/79okkCYWIUKFBRUWF5BRCRCIqIiERpVlSKBRNSipkTsPXUBLR
KPY2z8PeZvZkniUk9KyeF/9fbzq6jo51r3ut63Od53mzytHT4sQ8Li6uw3xc
XDzkb79hsTeU0Xw4Od66kCtLA7e+mkSmIRN2b6aussby8U2cJScsRwNXjLv2
JKkfFWj9r3Q8H8pY9eUpqUvNud1xM2IiM2ppUc9kPmjGvacvrqThrO5TF4W9
TKgpJF6snMnHUYPDqdWraPj8Jrl/rzETrwqV/27lpWAodPHxdnkaSs2neebv
Y2LxDhn+QSFSX/lSqWkNDQ5aOcO3zZhY1WnOZslQcCJimod7Aw1+M4PP+S2Y
0D7G9hnZQsHpG+95Hm+m4du83KDP1kzQfwgmUkwoaD/XdC53Bw0upsP2hUeZ
qLrVuDfDnYKtvm+VY3Vo+HBFy1DHmQn1JYt7Hj6iwH3Zt1XyJjRUFhQLyp5m
4v6AKPejrxR0b68YFjtEQ4b0p0MqXky8cJt13dxPgcREoSW/Mw1P5Qy+L7/J
hP3SV5t1pKkQHdBa5HiOhsiTDCeb+0xcuxhawWdMxX+t+pYOvjRIrjw6ZRrB
xNKeY5rXLlJx78z66A13aPib/q1MO5GJ22WeTyOfUfF5U8Drgcc06Lx6eN4r
mYnkT8pH3qdTwfQ04O+MoiGn7IjHoXQmVBYWReR/oyLI7bn+rVgang21JLp8
YGKf712JAFJffCcr/iKpP1GOoh4i9ZGIVcp/31FR0hVy5wNZJ+FNWNYmsk61
aF/sk6dUZFydPptEnnurQuiJJnmuo4WHv+UFsv6bWJWmEBpEnvy1+J3AhN6u
fIkeIypeJ86+FSHvla423iBA3qttYYuBhRQV+qYT43LkHM40q6SvJucQXCd7
624fBV9WhdxqdqIhZF6Y/M8bpP5Y8z8tcs4iDSI3Z63J+mLXI6TJOSvaPesO
IvfS6O8kupLcC+Y5eEuTe5G0/nOzg9wj2/f+92Ryj6ywvDZjco+PjgjUie6j
YKLwcA6N3HvifkvFJnLvvQxT6/1bKdCQqDqaRvokYGff52rSJ95bNp7WkaVg
3ZLnf6VIX6nymN6UJX2lcZzOBWEKPGS/Dg+TPtTaU7XyOelDkUV3Yy6Svh1O
1Hs+Qvq2ymHQQYz0bdQTbvm/pM/FL8psbSd9bkw9d8CK9HmehliIwFQ+eCa9
Kq8TLmpHek03Ei78NHqSGYQjpaC2hmjCUeEWvfdnCEfBL+fNGyHcbXxBZy4l
9e1i292mCXcTlYZBZYTTd8q5iXmE0167e0NZpL7kL7/+P07XBcSJ/ON099CD
Lf84XZq2yHqIrK+v2PQintSnrW5wzpH1Dah2Cc5kP3uEd9Cekv1IFLFO7Cb7
Wd7VYMw7l48HB5S/rVlNww1l1cthZP/SCgbyZXwUcNa3tD5VoOF2m/7NePK+
/c/WrfwlSsENF88p7XU01OiFBWTtZ+JM5vcXw2soyKdQHgRuIn1oPjx/7UHS
V+/jf2ntpqD/T+xArRoNyjIx3vttmKCN/w40cCacsue8HmjTcEci+3qAIxO7
Nx2QX0nuffmhl5U85N5bU2gveci9B3TcLdAtpiAmeCjkoA3hPTZdb8CbCZM0
e6+9C6lInmbGOnvQ4KbsmakYQvjtnFf3zYIKY4HUxeX+pP93zuw/HMVE6nlz
J+5EKoYr9kdWP6VBfPqCTHcqEzlpUmb2P6mwbv/heiqNBsGaeZ9/5jIxVbL8
q55uAb7tda88SKFBTfPUdY9aJtiWxpnJIQWoJ6gpNdBgVc0jocBmwuyTw5oI
agHY2xd/CO6mYW/W2N/hEXJfc7rnk4cKILWk/Lz6TxoWvuuOKZlmgsr1+UgM
byFM3prvPvCbhj3LXNYO/mXi24f9ew+S+s6hpF9apL45b7NgK6lfCttfzRgs
gIXm1bNcZJ0jE7muUWSdJVMtB65RCrCd+3GLBnlu/q9199LIc513sKR9gguw
2hWTNDoNaQJh89pYTBzIS5PA7gJo+recFCTvVe1w2kuFvJeXf5RR1hiZMxHn
L+0k5xC86OLacnIO138suVWRQOaY0uYt+eTcdhlxpprJuUXqGnj+Jed85fc+
w3ZyzpefnUs9Sc5Z1EL0Zz+5F6k67bxH5F5+BK3INSH3kvnYYUShhIKUzyNH
H5N73G5rv2PVVSbWjLo9kAmjIOD+DVVjcu88Ho3T2uTeGQbbdHGCAqlnMg/r
SJ8s+bvn8zfSJ/s1nSGlSwEtIdlZZBsNH1c1GwWQvkrXkd/yci0FBpVrZj+S
PjwxfPf2AdKHSRcyO/zEKFCr/H3zBOnbb7TXf2mkb7W+xgYrL6Cgeo7bO4P0
ufXij0XZpM8987cdMCRctNOcbTUIF5H5nmsTCRdq02tNQwlHRzsj3yUSjsoj
zjqZEI6c1G8v4P+Vj++7BgtfE+48U6/0eBHu7qss6v/H9a/OR6tFSb3RqCDu
H9fpse5zJYTTet6bd//pqedtA8d/erosfFr0H6c7GkbS/nHac6NY/x+nKUZH
j50j+9HPn124h+zHWUOcK5Xsp2BBlPc2fgpW9QoF/CH7/y3td+gX2X/i3cqg
IxIUhPjJbNm8ntR1dev9zZn4fBd3ejZR8PAvj91FFRrkyxP6iq2YeC7bjR1m
FDzZbld8Wp2Gd+ri5kfsyHxQ26KYcZUCq7dKVcX6NKw63GhMOcnEnYnrzx5m
UfDo/NFF8lY0pBQWpd+9xISHuF36OS4qql6uKxt2Izq+8dZ70dtMTEtKBQzZ
UpF+rP/xkQCyzjqmvF80E1bPp+1Vi6joDJCOUEygYbixzSs6iwmHu/QFWSiA
9mjaaGw+DV3cX9XqakhfCfB3iucRjiCnEtpFQ/Tq5PcypM/LOjMv7t1TCPlr
dhuNFtERd/WO4xJhFri2ro+ephbC7JGn7w9lOiz09pZPbGQhse1R+Cb1Ini0
SZ35YUZHrZ/ImWFDFgbPGH4ReFYE2ZbNZlJudKhPq+9StGfBJvDa5MfmIjTW
Vjzr8qHjVdPx/bOnWXD8VPxIaq4Itpbqa74E0WG9w8rV4DILN0JMvLpmi6B0
XzwtldSvU85s0yT1BUk3ozeTdV62JO3JI+sMSDxrbiPrvPW/qev+tAjr105z
D7nSwWoX6P5rx0LwNX673B1F0My8WJ1A9ulPWRRPI/vULPY5xVNQiIGfiSP5
5L0ar4m3TpH3mv2R6zRJzqF3dObaFXIObT1B0prkHMaLU59czC9AqaxY5Ag5
t8Sk8nJPcm6mp0x108gcEHLt595A5kD7Wg/dvWQO/Lh2qeBxCZmfaqsiKsm9
uH3e3av0kei+dIubtz0Vd8/schQKpOHtf4nBEjFMuIb+cuyfR8UCGanauFM0
8FcpCr8h915VuUitNJv4rqVL9+SRPvkQZrZ4yWXSJy8ZkqHXKLg69d3EdA8N
RlJpv7a6MiGTdOl82n4KQsMnPtFIH5qc2TiQTvoweupn1owyBU9Da0XzSN92
bT/0eCHRceFWu5LlkhQwxHdEniB9/l85qyGN9Hl5X/TvD4QL0+GYV7KKNPi+
8fq11JSJ/wa1FX8Qjjz3xPfbEI5cpi6d+044emSpGxxGuEuQsnnygnC3UHeZ
4j7C3YrVc2Nswun5EfW8GMJp2OzYJU/CaY9Ghl33P9/renvhP9/7IGZ6yT/f
++v1WPk8sn6A2XLLf3q6+0PJin96OtnQc1mN7CeQT3XnP07vcg9J/ePUpW1R
5F2y/ytJl7YHkf0/zLC6Xkz2n+BNk8si/tZD9dGtm8S3SD8ZiUsl7+uywkdu
1Jq8191w02ZNGt5HvrJwPkb8A99+ie67FHSq5J18uJeGLdd6n5e6M2E8dlvc
op6C0YNrVr61o2Fp3KlludeYmEscCA9UpYLvlnmW3BUybwdHGPyPmbDlqr9Q
kUJFfOlDo5BI4seqxCy2vmPiyZ2i1JpdhMe/2WmShMdzI2ICjoTHRPnETxPd
BfiTPd5iO0pyhN6j/h2/ybwSqpw3+7IQ+t7O2Qpr6HhuL3IwS5GFasPIgK6z
RdCpps2/aU+HyDm5jTusWHCWjsnZiWL0UULDa5/RESRTK3AriIVJ5+rM9/NL
wMsTa/Ozkg4x/bWSsx9YGJlnKCifU4LDJuExgVwNcJzFQWobC/EX49q+GZfi
qfiXhl3rGxD796SZBBcbCzbkdWp/KIV96N1dewwacHcqs/eBJBusUn4Vob5S
SD3qqvG1asD2NG5eZ0U2TO/lRquRupBVpG8Iqb/mGPKcJvVcwaorxWQdlxcx
F93JOsKSZ+XekXWalr5JYJmU4hV/glIoee53N0qTLXmu/MvaQcXPJYi9deiF
KHcDdra4M7TaWShfSHEt4C/BUTHB9ZVVdNjQzQOzMllYZHLqi4deMY51hL6Y
iaBDLuiI3o1bLDy1t7BbcrkIFRxVn9FjdDzQWc/2sGbh47jDirqUQvgL+X2n
rKVjVe4WedG1LDAiu4aEiN/Y80tcZzHxCWu+zqq9JD5BSEDT5rse8Q8Vh6a/
Ed4Fcz1XFxDef6+a5t7ynopmQQNf/uekz/0q918iuSBK+puWnDoV4ndrVpz0
JvN53JO2IpyJNzskU/kaKdjmahaXZU8j3F/dFHOdiasppt+yH1CwZ3fbk8PG
xJ8UCFtd8GDi8hHvDxOHiX82WC16aicNFte9/dtI38p8Du0RUyU+c52lNof0
Of+RVzNzpM+pyXlcZ5ZToMJ/XIpKuHC11Peb/cfFjMP174SjhS4Hw1YRrssy
37qLE66rPU76WBDu2lSsL2kR7kIGY6hJhLs2O7nupYRrfWGfVf6E08f3PPSU
CafJnccVyolvp76qX/Avn/qpcR//l0/VTtlHFhPfK//Oct0/3+tXI90XRzj9
9Pp3/CGip6FPziarkP3MKeY6/tPT+UGn3mcSTqv0O0/+4/TGrWW3/nHaceWT
MJ8NBZ557ReyyPuO0dr4ZRyY2L5izZz+EwrsarddV9pHw7qr1PkzxOdkrz92
eKyH5BQZxzZXko/q2uqsH5N8lGg8b0+oDRW6HSnzpm4SH/JffPdGopu3quZS
W4eoMCpjj69PJfdi7ZfQ+Z2JmjPr0sfeFGDraubX5g4aMm2ifl/uI7zXFfbv
DymEqfbBW5tk6UgLpIbPybKwM9ejQeB+EdrvP9SwdKFjq6RNV4UtC7KBv6cP
pBWDs/zgjMtHOqQ0+fbsi2Mh4FrhZoeOEnCtqR86tagBW8/ybhjvYmH0xEvD
32JliGsMKD11vAGyV5Sdz6qw8Z+7f7jHrnK8vrw1i/KhAQm8H541XmRjxLbD
m8ewAl+EbJfcmW3A/ZOPJRd8YIO6LpD2dmUlXD/tLuLSbISvtcjZ2U42Il+G
nvvypRJb5Ov8l55ohH3MlXvGAhwMZIffO7i4CvS7B/m/+TSib/SmzgkZDjqp
gT+thaqwQvNZFe+1RnxU3PkjgdTTFc9VVX2vxN+Dl3wHyTpjDu4reRZxIHD8
vOqoYiUyL3RTL+9sRJhdxBv1bjbm5I9uCzKrgKkBkxn3twHBHf58JZlsmImG
vpQwLIeVx7DGhY8NcCq/t3SFFxsbWV+cr60sw2MJAc8Y5wYkn2c6rd7Kxh2N
PbobB0ogop3+c0qoAav5ZVR+9rJw+qzQqeTPxZj2+jYn/ZmO3CCFNR6JLNR1
m9jKRxVhN+PF1QniQ5Z8cqluJz7kKn2X3pknhbiXaLz37io67AVNBupXseDH
u+jCnQ8FSA7U4i5n0SAZLtUxOsDE12qXO7GTVLjscs6IeEtDX4BgwNgPJhpL
HtLcjlMRMS/bqYPo+E936YwiouP1PA0rFgxRoDvhsrnWmYYBi70syk2Sa0bO
59MjKBjLVjZfZ0pDjmL+r5ozTIRpFZu5HKVgl9ioq70WDRpMvnMppM+Fcpt2
qBGuswzKRgYIF8Ml2gf4DjFhExwWpkX0zng9S9eTcLTiK20mi3AU9FmoZi/x
4cVSqxZ/JtytaBxX+k6467isOS0ym483GSVr2ITT5zJ5vkcIp3GV36Q3kzyu
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
zJNfglHTVOiPFWydIz7VXX5RMoy3BDp6T3gWh9BgnfaWa/cVJv6Es52lf5Xh
GG3TrRcWdFy+u8hsgMyhlJmf6wK5avjmqSox/Rtxt5L+w3kN4XeM/XxVQh10
MoftHs00Ic765GGrj2SP7X1h1a1Oh3PCb0rR/Racm18Xm2zPwnhe+LKQvlb4
xXBPLotpw+Us8y7jXAZcrkiH7SQcp86p6j+Z64B7+q2tgqc7UDfJE/Psaxfo
MuItf44xcMOi71ZAYzMCF4wPHiU+6Xqore9pKxNCyg9UOalUHKEuDeIWHYLK
drmwpYFsZCmanvbXaEBx103n0dIh6DJrdFmHulFFeRhVR3pajq1dS7bHMMQe
dNsWCPTi/fGSvhdTrVD0LU0tlCQe6uBkPfWoD5LNSVLlbp14Jym2fjJ9BKkD
ci++/+lHo6y17DX5fzm7gOuU8aYtg3jXlXzlYdc/fre7x3y4enAIg+++YO2P
f/xuWpsweoX/7/5QpjAP/ePRIPVQvwXho+ao2f390//OQ8aexNtYD+NL6h25
idF/57NqkRfLp4dwRcbNc9eWf+cPP1gdtdo5hKI/5dr61f++7qKj8YkTMoPY
w9UTnvmFhSvxt0fjkkfgv54qFj7WD/MV70+xxJkkP1/VWUiMYLOFSoVzdB9e
PZdfsNGpEzc3NS2KvzqM149F+kX5ehEVo8U/b6wVOUpbrywoH4J4xHRfxuFu
fBc+0vcurxHsz+UTH5cQrucNJzHD2Ah8bGZpY9iAyVSf9KvL+3G2dvWic2wm
4mpPMWffU/HxQsA3UXoXyl+L5Hc4MCB3d+S80udmvNj1XXv/CANakVIB/sS3
rlpO304264DkhfVFnDxtSM803PItsQ37rXs3ab5gwEdH+cWifXTsKvjicTG+
BV4nLUdY1iyc+O/Tk0epdXj6OLi6e64J5mvagt3es1GaqaLuvq4aP8XOx+aR
OReQOrdYl8w5X/e9rq1jZZg+81afcpSOnY8kdQzlWAhZEHNg21wxHiUJ63sG
0TDBU3Jm0SUmBDZwnuflKMK1hTvYglNUHB29sLj5NwN5k1d8b7wtwPt3QU6L
46nw2z68QOUVA73B8wJ9vxTg3U2H1ZyEX2r2c4Fqwm8G9fopPv4i3MiuEdpL
+L22Kq78HeG3Knm7YCp3CQ5eKb19M5jkfpLKi6rLTKxa4DUkN1lGcrnfsMWc
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
A/Nn7++/T+eP/nEric7/PwqS0wQ=
      "]],
    AspectRatio->1,
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    Method->{"GridLinesInFront" -> True},
    PlotLabel->FormBox["\"StandardDeviation\"", TraditionalForm],
    PlotRange->{{-2.0931160054824067`, 
     2.0772783095727823`}, {-2.0662479662481092`, 2.077903478193266}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}], ",", 
   GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJxd3WlslWUexuEiiihK0BBEiAh1wYVRhCg4JBaURasYBY1OrKNRZGxRKSCE
DIiQ1MEFgaq414AIaEgLSgKiIwcbwwlRqaJ0ItpaW7qgpZxqZuKCaCZ5rj9J
PzW/PHne99zJ9aWf3iH3zJxy33F5eXm398jL+//f5z6+bue1gzoz6/M31FTu
y2X+t7Cz16iCXPSmohGbCnd2RM/OLJk49LhD0Zfnf17XffwP0T+XDZ7b8NjB
6PdbZ57yQbY1elFhZu1LJ7VEj6vsPWbe9Qeij+/z971Tnm6Mzs6uLL60piG6
78ZfuvXPr49+ufTF4Z+v2x89+IpRdz154X+i1/+27+lrKr+IHvbhw/8+Mvyz
6GmnDq2dUbw7uvTFaSPrS6uP7Zk4fsia3NboIe8t2tbrjzXRRSP7bbh117MF
ese8wk2bG9+Jnrr5H782F++MnnTeRRVz7slGj3m5vaDbHXuiX1h626zsW3uj
T6t+9+re59dGP3XkzL63vv5V9AmjFjS/MqguOjP6oTtmTW6IPrJv0EfP9WqM
vnJOzbB3dzdFz+uzeNXXS5ujt1QOP3p0Qmt0rvC76fnHH4z+S1t5zYTq76NL
Hrt6dPHi9ugN+T+tXnZVR/SBzNqTNh85HL3ykou2F9flovkbWVpx8YGOw+FP
86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+Yv9iR/mj/Nn+ZP86f50/xp
/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/wNeKV92wMjOsKf5k/zp/nT
/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP81f7En+NH+aP82f5k/zp/nT/Gn+NH+a
P82f5k/zp/nT/Gn+NH+aP82f5k/zp/nrtmvM+P/ObQ9/mj/Nn+ZP86f50/xp
/jR/mj/Nn+ZP86f50/xp/jR/sSf50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/N
n+ZP86f50/xp/jR/mj/Nn+avLffkZ49s/z78af40f5o/zZ/mT/On+dP8af40
f5o/zZ/mT/On+dP8xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/m
T/On+dP8af40f5q/moH7i3r83hb+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/z
p/nT/Gn+Yk/yp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+
NH+aP83f1okXHlw+tjX8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8
xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5q/
ilnz555R1hz+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+Yk/yp/nT
/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP81f2avZbquz
TeFP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+Yv9iR/mj/Nn+ZP86f5
0/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/zNyPZbfkGvxvCn+dP8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/MXe5I/zZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af6m/HjfgLdvbAh/mj/Nn+ZP86f5
0/xp/jR/mj/Nn+ZP86f50/xp/jR/sSf50/xp/jR/mj/Nn+ZP86f50/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+Zv9l9LJs85ty78af40f5o/zZ/mT/On+dP8
af40f5o/zZ/mT/On+dP8xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5q/sSt7Ti/b+FX40/xp/jR/mj/Nn+ZP86f50/xp/jR/
mj/Nn+ZP86f5iz3Jn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/vVvWL1o1ojb8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On
+dP8xZ7kT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40
f5q/b8ZMeGH99r3hT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Yk
f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP83XJO
9q6ZS/aEP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+a
P82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zl9vTvbx8RTb8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8xZ7kT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5q/Zf8cW72lYmf40/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f5iz3Jn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/N93wa8vG27aEP82f5k/zp/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+aP82f5k/zN3j5nvM+rFkV/jR/mj/Nn+ZP86f50/xp/jR/
mj/Nn+ZP86f50/xp/mJP8qf50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/mj/N3+KTz3/z+W9XF/Cn+dP8af40f5o/zZ/mT/On+dP8af40
f5o/zZ/mT/MXe5I/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/m
T/On+dP8af56Vr3U+a+pW8Of5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+a
P81f7En+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/z
p/m7/+KVk9YMrA5/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/sSf5
0/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+bvk0en
9nv01N3hT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Ykf5o/zZ/m
T/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8Df+yX3PRHzXh
T/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Ykf5o/zZ/mT/On+dP8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8FfY99LeK+V+EP82f5k/z
p/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zt3DHjeOWddaGP82f5k/zp/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+aP82f5k/zV3X/5gsWlOwPf5o/zZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f7En+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On
+dP8af40f5o/zZ/mr+H00/uUNNWFP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+av9iT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+a
P82f5k/z90T99gXDqhrCn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/N
X+xJ/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f5
e31LyeG1JY3hT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mL/Ykf5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8vf/4wHsH
Dj0Q/jR/mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/mJP8qf50/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP86f50/xp/jR/mj/N35d3flL7TFNz+NP8
af40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+Ys9yZ/mT/On+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f4dGPFJ48urW8Kf50/xp/jR/
mj/Nn+ZP86f50/xp/jR/mj/Nn+ZP8xd7kj/Nn+ZP86f50/xp/jR/mj/Nn+ZP
86f50/xp/jR/mj/Nn+ZP86f50/xp/nr0vGTHkqKD4U/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+aP82f5i/2JH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+aP82f5k/zp/nT/J1dV3/ZL/1/CH+aP82f5k/zp/nT/Gn+NH+aP82f
5k/zp/nT/Gn+NH+xJ/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+aP82f5m/0OyvWle5rD3+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT
/Gn+NH+xJ/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+a
P82f5u/mpWPPbCvvCH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+x
J/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5u/y
qvm7Lh2aC3+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+xJ/nT/Gn+
NH+aP82f5k/zp/nT/Gn+NH+aP82f5k/zp/nT/Gn+NH+aP82f5q+6/82LZ5zQ
Gf40f5o/zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af5iT/Kn+dP8af40f5o/
zZ/mT/On+dP8af40f5o/zZ/mT/On+dP8af40f5o/PeGNs1oyVbnM3Yfe+3HF
9GPfY9DjTjxa3/BgrkC7r91f2DRt7eTnj3nW7nftru+P74Gkc+286+/3vPZt
I6eWteQy3Xte9t2g13KZtgF9b1i3LlegnZ99dH/5N5/mCpxrv7frfe93v+v7
3Xfe9fsWnhf/33V5v+f9CUDZ558=
     "], {
      {GrayLevel[0.8], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[CompressedData["
1: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
+jgdZInmyiEyOMz59voOllkHY/BBL6WLXDuZC56dZbC7cebbmeOgcqGnc4S1
RhelR7nQxzlalmiudPeuRzmvr6+b7zjaWD19XeXaw1zw7OUZ8OvtnO8b9Cs9
CLNjjfG95D8/j2r6OCfKEs2VPjLo67ymNXOefE40Bh/0Uk6Va39zwR59lZPl
d6pzGJ/kupqezgBrjS7K2eVCH+cseaKvcro1PdN5O32nWe+zjLXVN1CuZ5sL
noM9A37nOm/uW4+X7XnGuB/aJGPLhT7OMFmiuXKBDC503kXf+fIZZgw+6KWM
kOvF5oIn+irD5TfCeWdzDCkXejqXWmt0Ua4qF/o4V8oTfRW0V/gcvcJ5b32X
+bYrjfXSN1KuV5kLnmM8o5/vZt7M/cfJEh2Vcebi95xnlQt9nBtliebKdTK4
wXlNa+Ye+dxoDD7opdwq1wnmgif6KjfL71bnZ+qbUC70dG6z1uiiTC4X+jh3
yxN9lTus6V3Oz9U30XrfbWywvtvlOtlc8JzqGfCb5vxU33qtbO8xdoq+8eVC
H2emLNFcuU8G9zsfoe9e+cw0Bh/0UubIdZa54DlbBqONM7/EHNPLhZ7OQ9Ya
XZT55UIfZ54s0Vx51Ls+7hz+6LI87DvmGRujb65c55sLngs8A35POYfT087h
h4YK/z3G71Dxezf8Pg71Rv/k+XKhlfOCXNFfeVYezzuH32LXwQYNlSWyetk5
LF903d3GX7R+6JksLxf6Ne/IDH2VV6wfeiavlwutnDdk+5rralo8L8vvLdc9
YG60VKaab6ksl7lupvFlcnrdvPB7zztRIzRLvrbe6Kl8KCd0UD6WK/or78vj
Q+fw+9R1sEFDZYWsvnAOy89cN8/4Z9YLPRN0TuaY+z35oa+yUobfer+aVs63
cv7adTUtni9k9r3rFpkbLZUF5vtStj+47gXjzNE6QR8D3YyaHgpzGKOv8qs1
Rv/k93KhlfOHbFa5bqnxVdb6L9fBDA2Vf2Tzn3OY/O26N4z/bb3QM0HnpKZf
wxzm6Kugt0K90DNBU6WmlcOcPkNrhXU1LZ7/ZIaGCutgRm60VOgR8rEOtuiv
sA72xNFhqWkM/SzDdfy3V3zolqBnQo3RP0FXpaaVwxw26K+gwwID4sxhiIYK
62CGhgqaKLBBO4U57NFdYR3siTNfIpNf7LN1/XdgmKOvgt4KcXRCuF9NK4c5
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
B9BGDTo=
         "]]]}, {}, {}, {}, {}},
     VertexColors->CompressedData["
1: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
IdHShcC6rxvbUzuxxcmp4Esr6d2z2vdYjrcg6sAejpQuBQtmHzm8tYsOzYOy
20u16zGSHXWLotGGnB0lL1/dYeLvuLqbaEo1xv0OmNQ5tKDjygIjG2EmVl8Y
4LYnlcNWjHdd/k8TZlaYxr9pomPdid62zoO/ELtgb4bvmWYMuXdIPzFmQLLw
4Zr2wN/Qi1Lf82h2K5okvF48iGGiL9D9sY9MI9YVPPb0bmlDcYv3gTfk/bI5
N/756bXj841LthDsQJnVLydrHTpKrBMemhjS0Pr8SpLWrS5cj93WN0+Git+f
HtSq6nWjetY+HWd1Ghak6axp8m+HVspHD5eDLDxkzN24/hEdZrXGCz49IT27
KLFfidaPqdu8uW1zCH+v+xDuNK8en6j6H9f5cfGw8ZrQubPdmDFKPfbkThO6
BKOz/Pu4CEurv6TzoAfJEuL7l3i3otZ0/9835N7pDf9pG/kSzry2meUe2I7r
/zYOCPvy8OIhd1HcYC+aVrjPyvpOgYeYbMG+CB5oX1RTm9b3ITY5QnrDng4s
WG178Hs0D4LCVQtpBn1IDlNZMHa2A1MXJ9cN3+GhooG+xmNrH6QKOk6/v9oB
au7BeQkkB69PlziGHOjDliTpr2JZHXA90H5H8RUPtWNxL5uu9OGRL8vyhlwn
5ky6jU794KFfZlxFgOjRbevgoT0vOrHwUL3F+2Yerv0L/rdtqA+nPobON9Hr
gnZw7bomDtGR6+W0xytJb1hq2qTxqQuzVCPZ56YIt4eVimaas2DrRFkRLkFF
7mDv3joxPjSDtWfLebFQUS/vOKRNRVm6/N1iWT5+Veuo/7nNQt24mNlGZypk
wvbeD1jNR8TpzwWGn1mIVJC6RL9DhcIpx8BEXT6WZTlcDO9iwebqYE7LTyry
6Rkvdmzn41ObcqfODAvWq8xTlrOp2O9qWBtpyseLlPAyF1E2Nnl4N+4YoWJB
RMwlZT0+BC44+LV3s5A0ND8os4KKggPbb3VL85EznqhYFsHCwFerBzsPUfGs
MUakspb4kl7HnghGH5wnDvzMlemCyP0jsubkHk+8tBs1GepFnt2OlZ55FDir
HFpkP8JFycWKIe7XHlwzUNhX/bkVcHjpaOrExTlx6XX6Jt3gGrxcHCLfhPWb
2l4/MevHkeLaF/fSGPD+tTn+x7p6UGWXf+nu60XPOeeZhUp0nLv9imK8twUH
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
+VYS3YhOzFXesYwGoa77Mt/etCO9fzNXurgLxaHXf2gmd4L2bHrMnMyP7oMd
QucNmzE9+lnEJ7kdzbsb0zyPMjBLdfK6kgoFt0NKY2bt70DmmEkCb4CGJRdH
qx4V0BH81iTGey/J2Tv0fzaOnbiuXb2icKYXoh+2KCio0mG8/w7dQbsFE+oN
jwZp/SiSFd7TI8HE7GW5r88srIfxrm3uJ0nODtolFEUJ94AZq706ZLgZi+0M
fxsf4kEqTNRUNbMXw3GUZo4CBXsvdwVd6+LhoZ3Sv7rZLITWPOguc+/Cb7nB
pwU7yH0dNT/EE2Ij7ITnuzweFa15ltcrCC+NBuvcmkV46ZTCiF4b4Xs4irnu
J73s3O2wz3akl40PLPn0kfSyhnf1R7eV8OHRLqj13pSDTq/tGtrBhMeidt37
lEd47Fra57pNHMw6WfG4xo0O298bbM2f8JGd0Z1U0k/6zdd1jp+k6Lh57yBb
N4CPrBTT8LsRZD75T+b4x9HQNxrirUk4LfnGx33ChNPkd058f0c4zc1JxaWR
8LBdbEmW0jQLI3ab35cRHp45aipTTDihIVF5YIxwwoaE/1YliNLAOEVdxSH6
lcxertB0ho2ofbX2PwJoOLVW12c14eTjEhf2s/8QHlhqP1SoRIfIKi3mTQof
JwV44ycDObgLt+3mxf/T77yF5ibyNA5aC/qXS5v+T6eHDRSN3kr2w/RdYtb1
+/9bF/X3rzTv5UB9xknp7T4G2o/X+R+n83HpyXSf6C0ORryR79VMh5TTrb3T
H/gIXGA9S4T0Zdl5wkfiCO+lHbukNUF091fhucHFN2zYyMt92vyTBhfvZa0/
ffio3Kzv4OvNhsucNP35Z2k4b//G7jxZvyKmopzlxYa125IlKmdomNzI2hl+
jY/S1M2+lEfk3rOVYm0yaQi/dfhX2QM+XoX91hMgPrziYfyrxzM05OoYNNmS
89FIn3XQbYKNv1GfNzor03FP6tfTFzF8WO3pb1pXyIZ+8OgGxQ4anvEyRp5Y
8eH7R/nxY2U2NHabF8ZK07C+pzp+PZWHbYzRTf6ihKsndETbvbpQPW7uydzK
g/3tt7uKL/XiuECzVkRiO1g93e4jl7lYdlzD1Ot2N5oqxsdC65tw9tadjYoZ
HAQG/5FO8GUgXprXUkSvx/kNFt6FMj1wOYyeW+ReVUTmf3h6rg2pVNNz9a1U
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
Ju2Asz2YcfCCmrIPHy7s1Jyzk/3YIBur+qi7G3vli3Y+38fHrACj45uj+2Hj
Pf3rqpYu3Fzgs7FWgY8NbdK64hv7YXVpp5cKsxNJ0pPaU0mv7qNwG2b/7MMc
1e9JnWadULIJ8DgynfBD2JNWK3Yf4s6c/uCythM1JTNPnJ3Bh2nozQLlwT6E
vdk5z2lTJ4bT9i4tI+tvS9dMGybrT77+MjiymVzf2Gm9uigfJ4Z52df7yPVr
Z1k6K3ai+E3bFvVpfGhSxeuu0/qw/bLrxmmLO/FQJiiJJsKHAy3T6COrD1rq
ixk+Cp2gHDq+bjW5/tQzLhtcuX0Yj5geEq7eiWNT0i+0/+WhIjXS60lrH5bV
P5yc+bcDB692nN3cw8MS1zl284L6cMB+7v3DazowI8V8VeNdHlzzvyRIV7AQ
XxTcv9C6Da+uCqKXLiX9yK3yzeFEJhpiT9yXvtAM05Vl9O2k5/u8NbG7so6B
XKdZU1XLmiFpFOD85H4feuXTC39k0LDvssoX8bYO1A1+GxMl+tMr5lZNylNh
sWDB+ycCCupCjA+EvOnGw0Opy5yDSd/WW7CxqoKGI8OfUrC2FVvOvI9atrUL
Bn3NRvJvSO/dse5B4LavWKOXsOTnmQ4sOti2/jSHCVfVi5mDT2uQVlW0Lulr
Gxboj1QLRzBQJRofNze3CmofTTcv/dCK5d+vRkY/pmP3BWEvzfUVCKe0flAU
acXSPym3+8ToCC+W6A5LL0e1Z4f2/LgW+MUKSYy9pOFUQKO30pcydB+d0yZn
3YK6uMRVCf6kl28rSz6dWo628/aVF+61wO6UutN5st9koObw+KIKqDZGdOFv
C+KizizjTaPj5Yz6DYMXqpAw5qX36mkrHvtWhedH0fHqfcb3vPU1cLC3Gvzx
ug0mQl+bUzwZCH26drlwUwMCLl5UObapA/o5O7OmfWDia6KinPKxFqx4d/WO
+Egnwo2vznbhMeAgGaC350YXFFovux6Q7cEe9YibXbJ0UL2fO6tdosHr61yX
rQW9kBifWX+moxfMU2vn7U9lwSY65/r0IzRsXudFiLYTqierVfc1sOHwZJqM
bTUdzoqvrDfNa8XfaoH9Z84gTJYbZAnJMWGXWzeuv7cJpyvVFmw9ysPRWI4g
cScLFs3RjOlShMdm2r/ckMzDPjDOhAyysFBvRP1kXhvqp6ReuEzyvSstbLh2
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
/acI53/s5vG9
      "]],
    AspectRatio->1,
    AxesLabel->{None, None},
    AxesOrigin->{0., 0.},
    DisplayFunction->Identity,
    Frame->True,
    FrameLabel->{{None, None}, {None, None}},
    FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
    GridLines->{None, None},
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->400,
    Method->{"GridLinesInFront" -> True},
    PlotLabel->FormBox["\"StandardGaussian\"", TraditionalForm],
    PlotRange->{{-1.0698935996303804`, 
     1.054055903720755}, {-1.0521677123489694`, 1.0638232242941261`}},
    PlotRangeClipping->True,
    PlotRangePadding->{{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.02], 
       Scaled[0.02]}},
    Ticks->{Automatic, Automatic}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813924688367257*^9, 3.813924976415983*^9, 3.813925059929706*^9, 
   3.813937129586532*^9, 3.813939127354409*^9, 3.813955662013455*^9, 
   3.813957239390924*^9, 3.813957482273902*^9, 3.814004880109315*^9, 
   3.8140209951756*^9, 3.8140212260891933`*^9, 3.814103691348421*^9, 
   3.8141038834378233`*^9, 3.814103958064234*^9, 3.814104060096239*^9, {
   3.814104098473364*^9, 3.814104122163253*^9}, 3.814104153943108*^9, 
   3.8141042634618807`*^9, 3.814107777592278*^9, 3.8147134568521643`*^9, 
   3.814729445570073*^9, 3.8147298419369717`*^9, 3.814784179813488*^9, 
   3.814785267706357*^9, 3.81478687353284*^9, 3.8147871839792843`*^9, 
   3.814787251131344*^9, 3.814790570222889*^9, 3.8147991518328257`*^9, 
   3.814799269524067*^9, 3.814803547681579*^9, 3.814808787255995*^9, 
   3.814816058767*^9, 3.8148170765550222`*^9, 3.814817203753777*^9, 
   3.814817938978097*^9, 3.814818382694769*^9, 3.814819922145068*^9, 
   3.814962878458662*^9, 3.814964275099389*^9, 3.81496566465279*^9, 
   3.814968802214623*^9, 3.814982332938836*^9, 3.8149824518168364`*^9, 
   3.8149865245269823`*^9, 3.8149866654021807`*^9, 3.814988050991954*^9, 
   3.8150454985294733`*^9, 3.8150481931331787`*^9, 3.815049115710342*^9, 
   3.815053608098349*^9, 3.8150562026494017`*^9, 3.8151344151478643`*^9, 
   3.8151351833236856`*^9, 3.8151355194328947`*^9, 3.8151366653263397`*^9, 
   3.81513671589086*^9, 3.8151368319495564`*^9, 3.815137189868903*^9, 
   3.815137405648752*^9, 3.815137540815958*^9, 3.8151376307540913`*^9, 
   3.815138729194663*^9},ExpressionUUID->"469b358a-d91f-46e0-9f27-\
26bd213158c5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Generate", " ", "a", " ", "list", " ", "of", " ", "points", " ", "in", 
       " ", "a", " ", "unit", " ", "disk"}], ".."}], " ", "new", " ", "in", 
     " ", "M"}], "-", "11"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pts", "=", 
     RowBox[{"RandomPoint", "[", 
      RowBox[{
       RowBox[{"Disk", "[", "]"}], ",", "5000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "Tiny", "]"}], ",", "Red", ",", 
      RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797256102432488*^9, 3.797256110239242*^9}, {
   3.797256149424138*^9, 3.797256198474135*^9}, 3.797256939766809*^9, 
   3.797257053998226*^9, {3.797354937751997*^9, 
   3.797354940471698*^9}},ExpressionUUID->"13da31f6-caac-41db-91c1-\
c42adf52cd7b"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[1, 0, 0], PointSize[Tiny], PointBox[CompressedData["
1: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
bw2Kh+17YSbVD8F24jJcDsHx/qKXkdSMis5OO90fcmAsc75Rb0Yekqwk1z1I
qwKbLu+qLPd8JO1N5BTXv0da+1BmOonojUvT7cK/PgBzB/uESVMq8ux/Cifk
JgPNbI3Ew9dFyBvJoVFHklB/ofzfT3kCDEkVOrzy/iCypjwnboRwQWqgjnfm
0BCIGyqcWXKA8Ntn2rfq/dKwfo7JqZHEHqQGxZ5PHiT84lavQPFJCzBv5BTN
ERoG+uuDmiE1VZDw7Hzj8nUjyL4/b+RnWzOSzjMfxL7xAJZU9XzdyREkMxIP
kfdz8HDwZZdql0FizztU248VAb0oYzdPqgxmLv37wmHyoBCuqphV94HXSaMH
Of19kP2m+3yJCjF3Oxl+sfKlQH+VKPlOJRPUXlxZ+IbSDEKfzC00e3nIW+hV
pKiWAW0vjG9QgweBqu759OBMBfBGRBX2rW7EsZig9e8r88BD0XaLjQzRK5j6
KnYgEYdzPtaGxBDerN2+J9SuEHh7qhLthL9h+r/18zd+aQKKm9oqr0A2cOq3
/zC/WgGFXubX12wToNLryRXHgoZB3PZ8/PHKcqA4ztNkXM/DANUKz1tVo8C9
bPviQBSRw7L7bw2/J7guwHXT9fAMoJYZt1cDCxTLStu7tTpQKtk3Zu1QO1So
nftw2FOA5L1N77berYOE7a4y2xNakVE4etSsuRNoG26uueWSBlOV31+mnB8F
o7azh74EtWLAKk/ni8u7gEyzrzPVyECPbWHV524SnpDYfbfNL4vwuW2fXOf3
onj4P2lZIok8LLXHybs6gRT65uDjfiJnB84UZYe2oQcraMlOWjeYVOdHPcsY
AJuitw6GbU3ArPygN+2XROSSJZOcNoDpFhM+JbebIPuRy5Lfy74hSerW0klu
BjCSDQMmW6rQY9kPnz9H6sHL92ausFsPOn14NSi/sRdIz502f2Y9Qcfrf17/
WCFAWoTBiYktjRhyPyMScgWQvjRRIWK6HqzDfaZG5fpQKfZY90wzH1lfxQwN
NZtQ8fBo49Fjo0D7qzRv4dJiTLltf5cmQfRiJLRlyyehVCbX5fMSPtYLpjNb
TXpA79WmAXElARZSrOb+Cu5BzqanzgL1LuS9uaoY8yoTyM+7Ll5c1wyW5Xdv
HPfpA/ogr09EpQPV242Xn/kwCPa7f6W+mdePLN6B4DVeuWD990ae5YU+UJP7
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

    "]]}]], "Output",
 CellChangeTimes->{
  3.813924716829486*^9, 3.813924976933675*^9, 3.813925060438485*^9, 
   3.8139371300678377`*^9, 3.813939127850934*^9, 3.8139556626094522`*^9, 
   3.813957239935912*^9, 3.813957482822487*^9, 3.814004880569271*^9, 
   3.814020995727768*^9, 3.814021226632403*^9, 3.8141036918301*^9, 
   3.814103884003907*^9, 3.814103958600828*^9, 3.8141040605802937`*^9, {
   3.814104099041275*^9, 3.814104122671955*^9}, 3.814104154423415*^9, 
   3.814104263939962*^9, 3.8141077781582327`*^9, 3.814713457573904*^9, 
   3.814729446176352*^9, 3.814729842494958*^9, 3.814784180403018*^9, 
   3.814785268350216*^9, 3.814786874003742*^9, 3.814787184584508*^9, 
   3.814787251696267*^9, 3.81479057073158*^9, 3.814799152444046*^9, 
   3.81479927006236*^9, 3.814803548228697*^9, 3.8148087878014097`*^9, 
   3.814816059241652*^9, 3.814817077080401*^9, 3.81481720421663*^9, 
   3.814817939455494*^9, 3.814818383283105*^9, 3.814819922662372*^9, 
   3.814962879087501*^9, 3.814964275679068*^9, 3.81496566518944*^9, 
   3.814968802790246*^9, 3.814982333394876*^9, 3.814982452331101*^9, 
   3.814986525007701*^9, 3.8149866659276733`*^9, 3.814988051473814*^9, 
   3.8150454991019077`*^9, 3.81504819358344*^9, 3.815049116211873*^9, 
   3.815053608552279*^9, 3.8150562031264877`*^9, 3.8151344156106033`*^9, 
   3.815135183811928*^9, 3.815135519988777*^9, 3.815136665846365*^9, 
   3.8151367163791857`*^9, 3.815136832410413*^9, 3.8151371903735657`*^9, 
   3.815137406143005*^9, 3.8151375413082857`*^9, 3.815137631241338*^9, 
   3.815138729374411*^9},ExpressionUUID->"2a18c298-f7cc-4951-824a-\
1cd675e7a231"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Generate", " ", "multiple", " ", "lists", " ", "of", " ", "points", " ", 
    "for", " ", "a", " ", "unit", " ", "disk", " ", "region"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[ScriptCapitalR]", "=", 
     RowBox[{"Disk", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pl", "=", 
     RowBox[{"RandomPoint", "[", 
      RowBox[{"\[ScriptCapitalR]", ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "200"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"\[ScriptCapitalR]", ",", "Red", ",", 
        RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"pts", ",", "pl"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7972563037859898`*^9, 
  3.797256355459469*^9}},ExpressionUUID->"c66e0bbd-85a1-4c1f-9b84-\
2b923eb99f19"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   GraphicsBox[{DiskBox[{0, 0}], 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
6Q==
       "]]}}], ",", 
   GraphicsBox[{DiskBox[{0, 0}], 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
8LzCrQ==
       "]]}}], ",", 
   GraphicsBox[{DiskBox[{0, 0}], 
     {RGBColor[1, 0, 0], PointBox[CompressedData["
1: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
ASKuw6U=
       "]]}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.81392473010611*^9, 3.813924976944192*^9, 3.813925060455114*^9, 
   3.81393713011483*^9, 3.81393912790198*^9, 3.81395566262258*^9, 
   3.813957239962735*^9, 3.8139574828314323`*^9, 3.814004880605644*^9, 
   3.814020995740316*^9, 3.814021226653968*^9, 3.814103691894032*^9, 
   3.814103884054112*^9, 3.814103958663959*^9, 3.814104060656095*^9, {
   3.814104099089039*^9, 3.814104122721324*^9}, 3.814104154471355*^9, 
   3.814104263992437*^9, 3.814107778167541*^9, 3.814713457586546*^9, 
   3.814729446191124*^9, 3.814729842528775*^9, 3.814784180413022*^9, 
   3.814785268360519*^9, 3.814786874017468*^9, 3.814787184597278*^9, 
   3.8147872517049427`*^9, 3.814790570744595*^9, 3.814799152455599*^9, 
   3.814799270084489*^9, 3.814803548267044*^9, 3.814808787825737*^9, 
   3.8148160592800617`*^9, 3.814817077121463*^9, 3.8148172042478247`*^9, 
   3.814817939468184*^9, 3.8148183832936*^9, 3.81481992267281*^9, 
   3.814962879097591*^9, 3.814964275693927*^9, 3.814965665201836*^9, 
   3.81496880280088*^9, 3.814982333406028*^9, 3.814982452369488*^9, 
   3.8149865250221643`*^9, 3.814986665947571*^9, 3.814988051502903*^9, 
   3.8150454991130753`*^9, 3.815048193609395*^9, 3.8150491162310543`*^9, 
   3.815053608591522*^9, 3.815056203159376*^9, 3.815134415623555*^9, 
   3.8151351838268843`*^9, 3.815135520001367*^9, 3.815136665864243*^9, 
   3.815136716427861*^9, 3.8151368324559727`*^9, 3.8151371903952208`*^9, 
   3.81513740617864*^9, 3.8151375413288727`*^9, 3.815137631270673*^9, 
   3.815138729387451*^9},ExpressionUUID->"07d0d606-6bef-428f-ac3a-\
55a770a0428d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Gauss", " ", "Fit", " ", "to", " ", "List", " ", "of", " ", "2", "D", " ",
     "Points"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"data", ",", "fit", ",", "sigma", ",", "x", ",", "ampl"}], "]"}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"data", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.05", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.15", ",", "51"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.25", ",", "64"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.35", ",", "107"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.45", ",", "113"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.55", ",", "162"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.65", ",", "163"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.75", ",", "167"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.85", ",", "182"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.95", ",", "187"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.05", ",", "165"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.15", ",", "168"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.25", ",", "151"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.35", ",", "143"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.45", ",", "121"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.55", ",", "130"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.65", ",", "109"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.75", ",", "91"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.85", ",", "91"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1.95", ",", "63"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.05", ",", "48"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.15", ",", "34"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.25", ",", "29"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.35", ",", "24"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.45", ",", "14"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.55", ",", "11"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.65", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.75", ",", "6"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.85", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2.95", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.05", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.15", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.25", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.35", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.45", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.55", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.65", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.75", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.85", ",", "2"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3.95", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.05", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4.15", ",", "0"}], "}"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"model", "[", "x_", "]"}], "=", 
     RowBox[{"ampl", " ", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"PDF", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{"x0", ",", "sigma"}], "]"}], ",", "x"}], "]"}], "]"}]}]}], 
    ";"}], "\n", 
   RowBox[{"fit", "=", 
    RowBox[{"FindFit", "[", 
     RowBox[{"data", ",", 
      RowBox[{"model", "[", "x", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"ampl", ",", "x0", ",", "sigma"}], "}"}], ",", "x"}], "]"}]}], 
   "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ampl", "\[Rule]", "274.765"}], ",", 
      RowBox[{"x0", "\[Rule]", "1.02404"}], ",", 
      RowBox[{"sigma", "\[Rule]", "0.614853"}]}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", "data", "]"}], ",", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"model", "[", "x", "]"}], "/.", "fit"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0", ",", "4.2"}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.797253945913721*^9, 3.797253961701927*^9}, {
   3.797254016831555*^9, 3.7972540183131723`*^9}, 3.797254079013918*^9, {
   3.7972547442749166`*^9, 3.797254748030479*^9}, {3.799944171132131*^9, 
   3.799944178285556*^9}, 3.799944218937296*^9, {3.814021044758622*^9, 
   3.814021051096747*^9}, {3.814021095991585*^9, 3.814021097289757*^9}, {
   3.8140211727264442`*^9, 3.814021192413229*^9}, {3.814021280058638*^9, 
   3.814021281274919*^9}, {3.814103720473785*^9, 
   3.8141037206996393`*^9}},ExpressionUUID->"50666653-0e9d-4f92-b668-\
f30d32c72d5f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "15"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.15`", ",", "51"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.25`", ",", "64"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35`", ",", "107"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.45`", ",", "113"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.55`", ",", "162"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.65`", ",", "163"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.75`", ",", "167"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.85`", ",", "182"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.95`", ",", "187"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.05`", ",", "165"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.15`", ",", "168"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.25`", ",", "151"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.35`", ",", "143"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.45`", ",", "121"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.55`", ",", "130"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.65`", ",", "109"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.75`", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.85`", ",", "91"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1.95`", ",", "63"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.05`", ",", "48"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.15`", ",", "34"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.25`", ",", "29"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.35`", ",", "24"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.45`", ",", "14"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.55`", ",", "11"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.65`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.75`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.85`", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2.95`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.05`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.15`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.25`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.35`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.45`", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.55`", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.65`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.75`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.85`", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3.95`", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.05`", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4.15`", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813924762229682*^9, 3.81392497696387*^9, 3.8139250604784937`*^9, 
   3.813937130161346*^9, 3.813939127933939*^9, 3.8139556626497297`*^9, 
   3.813957239977409*^9, 3.8139574828530893`*^9, 3.814004880625415*^9, 
   3.8140209958596888`*^9, {3.81402103139797*^9, 3.814021051894793*^9}, 
   3.814021098780402*^9, {3.814021174814144*^9, 3.814021226671468*^9}, 
   3.814021387372998*^9, {3.814103691936695*^9, 3.814103721496586*^9}, 
   3.814103884121744*^9, 3.814103958728311*^9, 3.8141040607088346`*^9, {
   3.814104099142602*^9, 3.8141041227713823`*^9}, 3.8141041545047283`*^9, 
   3.814104264024589*^9, 3.814107778205971*^9, 3.814204636035263*^9, 
   3.814713457626442*^9, 3.814729446229393*^9, 3.8147298425799723`*^9, 
   3.8147841804367723`*^9, 3.814785268380187*^9, 3.814786874040328*^9, 
   3.814787184619763*^9, 3.81478725172274*^9, 3.8147905707708483`*^9, 
   3.8147991524774942`*^9, 3.814799270108471*^9, 3.814803548325951*^9, 
   3.81480878786924*^9, 3.814816059312838*^9, 3.814817077147615*^9, 
   3.814817204278137*^9, 3.814817939492839*^9, 3.814818383316166*^9, 
   3.8148199226948957`*^9, 3.814962879122772*^9, 3.814964275713431*^9, 
   3.814965665220889*^9, 3.8149688028245497`*^9, 3.814982333429552*^9, 
   3.814982452411289*^9, 3.8149865250494127`*^9, 3.814986665968478*^9, 
   3.814988051527561*^9, 3.815045499161378*^9, 3.815048193641533*^9, 
   3.8150491162537537`*^9, 3.81505360861368*^9, 3.815056203192363*^9, 
   3.815134415642511*^9, 3.815135183850312*^9, 3.815135520030532*^9, 
   3.815136665891941*^9, 3.8151367164650173`*^9, 3.815136832489091*^9, 
   3.81513719042278*^9, 3.815137406217515*^9, 3.815137541352783*^9, 
   3.815137631296283*^9, 
   3.815138729427268*^9},ExpressionUUID->"dae8e2d6-7637-4e96-b0af-\
3a2b35311f48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ampl", "\[Rule]", "274.7647620320732`"}], ",", 
   RowBox[{"x0", "\[Rule]", "1.0240389337064897`"}], ",", 
   RowBox[{"sigma", "\[Rule]", "0.6148525530609263`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.813924762229682*^9, 3.81392497696387*^9, 3.8139250604784937`*^9, 
   3.813937130161346*^9, 3.813939127933939*^9, 3.8139556626497297`*^9, 
   3.813957239977409*^9, 3.8139574828530893`*^9, 3.814004880625415*^9, 
   3.8140209958596888`*^9, {3.81402103139797*^9, 3.814021051894793*^9}, 
   3.814021098780402*^9, {3.814021174814144*^9, 3.814021226671468*^9}, 
   3.814021387372998*^9, {3.814103691936695*^9, 3.814103721496586*^9}, 
   3.814103884121744*^9, 3.814103958728311*^9, 3.8141040607088346`*^9, {
   3.814104099142602*^9, 3.8141041227713823`*^9}, 3.8141041545047283`*^9, 
   3.814104264024589*^9, 3.814107778205971*^9, 3.814204636035263*^9, 
   3.814713457626442*^9, 3.814729446229393*^9, 3.8147298425799723`*^9, 
   3.8147841804367723`*^9, 3.814785268380187*^9, 3.814786874040328*^9, 
   3.814787184619763*^9, 3.81478725172274*^9, 3.8147905707708483`*^9, 
   3.8147991524774942`*^9, 3.814799270108471*^9, 3.814803548325951*^9, 
   3.81480878786924*^9, 3.814816059312838*^9, 3.814817077147615*^9, 
   3.814817204278137*^9, 3.814817939492839*^9, 3.814818383316166*^9, 
   3.8148199226948957`*^9, 3.814962879122772*^9, 3.814964275713431*^9, 
   3.814965665220889*^9, 3.8149688028245497`*^9, 3.814982333429552*^9, 
   3.814982452411289*^9, 3.8149865250494127`*^9, 3.814986665968478*^9, 
   3.814988051527561*^9, 3.815045499161378*^9, 3.815048193641533*^9, 
   3.8150491162537537`*^9, 3.81505360861368*^9, 3.815056203192363*^9, 
   3.815134415642511*^9, 3.815135183850312*^9, 3.815135520030532*^9, 
   3.815136665891941*^9, 3.8151367164650173`*^9, 3.815136832489091*^9, 
   3.81513719042278*^9, 3.815137406217515*^9, 3.815137541352783*^9, 
   3.815137631296283*^9, 
   3.8151387294360332`*^9},ExpressionUUID->"04684532-3595-478a-84c7-\
8232b99d3599"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxdkD9LQmEUh9+0zP6pg4NrDg4iLS0u4dtWk9HgoBIqVxv7Cn6Nmlz9FkJr
QZOTQ0GDIIREUUSS3vt73jfwwOXw3N89zzncw87NZTdmjCmunrDf3YY1rJio
juxxVPfi/rnV+yfyC9uLaiwe1e3jQ1gTsW1a+V7ggPxV3ArwTcXPAftm+Hr4
3/j+mvm5eBCQv3NPF98Hvg77P+E2/i/uucL3Dbfw/cANfL/cU8O38CzfH/+n
yrxh7ox8Az6lx+gn7Hdcxh+HS/g24QK+LThHT3iWz3Ee3zacwZf0LN8O7O7e
dWzkczyvyLcHZ/Htw0l8B2u+lJ+XL+Vz+dI+13zG71f+z0vuUqJW
       
       "]]}, {}}, {}, {}, {}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
P/8QvGY=
        "]]},
      Annotation[#, "Charting`Private`Tag$8562#1"]& ]}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 4.15}, {0, 187.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813924762229682*^9, 3.81392497696387*^9, 3.8139250604784937`*^9, 
   3.813937130161346*^9, 3.813939127933939*^9, 3.8139556626497297`*^9, 
   3.813957239977409*^9, 3.8139574828530893`*^9, 3.814004880625415*^9, 
   3.8140209958596888`*^9, {3.81402103139797*^9, 3.814021051894793*^9}, 
   3.814021098780402*^9, {3.814021174814144*^9, 3.814021226671468*^9}, 
   3.814021387372998*^9, {3.814103691936695*^9, 3.814103721496586*^9}, 
   3.814103884121744*^9, 3.814103958728311*^9, 3.8141040607088346`*^9, {
   3.814104099142602*^9, 3.8141041227713823`*^9}, 3.8141041545047283`*^9, 
   3.814104264024589*^9, 3.814107778205971*^9, 3.814204636035263*^9, 
   3.814713457626442*^9, 3.814729446229393*^9, 3.8147298425799723`*^9, 
   3.8147841804367723`*^9, 3.814785268380187*^9, 3.814786874040328*^9, 
   3.814787184619763*^9, 3.81478725172274*^9, 3.8147905707708483`*^9, 
   3.8147991524774942`*^9, 3.814799270108471*^9, 3.814803548325951*^9, 
   3.81480878786924*^9, 3.814816059312838*^9, 3.814817077147615*^9, 
   3.814817204278137*^9, 3.814817939492839*^9, 3.814818383316166*^9, 
   3.8148199226948957`*^9, 3.814962879122772*^9, 3.814964275713431*^9, 
   3.814965665220889*^9, 3.8149688028245497`*^9, 3.814982333429552*^9, 
   3.814982452411289*^9, 3.8149865250494127`*^9, 3.814986665968478*^9, 
   3.814988051527561*^9, 3.815045499161378*^9, 3.815048193641533*^9, 
   3.8150491162537537`*^9, 3.81505360861368*^9, 3.815056203192363*^9, 
   3.815134415642511*^9, 3.815135183850312*^9, 3.815135520030532*^9, 
   3.815136665891941*^9, 3.8151367164650173`*^9, 3.815136832489091*^9, 
   3.81513719042278*^9, 3.815137406217515*^9, 3.815137541352783*^9, 
   3.815137631296283*^9, 
   3.815138729496414*^9},ExpressionUUID->"af2efb1f-f075-4ac0-9b95-\
5c4b799c5d6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"DiracComb", " ", "to", " ", "sample", " ", "a", " ", "function"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"x", ",", "a", ",", "b", ",", "c", ",", "e", ",", "f"}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"f", "[", "x", "]"}], "=", 
    RowBox[{"ae", "^", 
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "b"}], ")"}], "^", "2"}], "/", "2"}], 
        RowBox[{"c", "^", "2"}]}], ")"}]}]}]}], 
   RowBox[{"(*", 
    RowBox[{"gaussian", " ", "fnc"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"DiscretePlot", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"DiscreteDelta", "[", 
         RowBox[{"t", "-", "n"}], "]"}], " ", 
        RowBox[{"Sin", "[", "t", "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "Infinity"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.797255470988173*^9, 3.79725547098936*^9}, {
  3.79725562956135*^9, 3.797255633747191*^9}, {3.797255673188201*^9, 
  3.797255695466146*^9}},ExpressionUUID->"a9dcfb52-6260-43dd-ba26-\
78819309c69e"],

Cell[BoxData[
 SuperscriptBox["ae", 
  RowBox[{
   RowBox[{"-", 
    FractionBox["1", "2"]}], " ", 
   SuperscriptBox["c", "2"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "b"}], "+", "x"}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.8139248046455927`*^9, 3.813924977025189*^9, 3.813925060541829*^9, 
   3.8139371302470016`*^9, 3.813939128062064*^9, 3.813955662715385*^9, 
   3.813957240042429*^9, 3.813957482903195*^9, 3.814004880696825*^9, 
   3.814020996205942*^9, 3.814021226753038*^9, 3.8141036922034473`*^9, 
   3.8141038843742533`*^9, 3.814103959116777*^9, 3.8141040609874163`*^9, {
   3.814104099395235*^9, 3.814104123117055*^9}, 3.8141041547999163`*^9, 
   3.814104264310297*^9, 3.8141077784551353`*^9, 3.814713457758254*^9, 
   3.814729446323331*^9, 3.8147298426594563`*^9, 3.8147841805027533`*^9, 
   3.8147852684432173`*^9, 3.814786874109074*^9, 3.814787184683429*^9, 
   3.814787251785029*^9, 3.81479057085032*^9, 3.814799152553636*^9, 
   3.814799270202675*^9, 3.814803548436924*^9, 3.8148087880129538`*^9, 
   3.8148160593870068`*^9, 3.8148170772222357`*^9, 3.81481720434734*^9, 
   3.8148179395662613`*^9, 3.814818383384553*^9, 3.814819922780994*^9, 
   3.814962879194281*^9, 3.8149642757871647`*^9, 3.814965665285317*^9, 
   3.81496880289049*^9, 3.814982333491742*^9, 3.814982452491372*^9, 
   3.814986525121026*^9, 3.8149866660655537`*^9, 3.8149880516011868`*^9, 
   3.8150454992384033`*^9, 3.8150481937072287`*^9, 3.8150491163308153`*^9, 
   3.815053608688347*^9, 3.815056203273386*^9, 3.815134415716127*^9, 
   3.815135183936008*^9, 3.8151355201009493`*^9, 3.8151366660820932`*^9, 
   3.815136716540558*^9, 3.815136832563839*^9, 3.8151371904986563`*^9, 
   3.815137406300507*^9, 3.815137541445353*^9, 3.8151376313700047`*^9, 
   3.815138729516906*^9},ExpressionUUID->"1b55e44b-7dee-419a-95fe-\
6a392dbfc4a5"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{0., 0.}, {0., 0}}, {{4., -0.7568024953079282}, {4., 0}}, {{
         5., -0.9589242746631385}, {5., 0}}, {{6., -0.27941549819892586`}, {
         6., 0}}, {{10., -0.5440211108893698}, {10., 0}}},
       VertexColors->None]}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], Opacity[0.2], 
      LineBox[{{{1., 0.8414709848078965}, {1., 0}}, {{2., 
         0.9092974268256817}, {2., 0}}, {{3., 0.1411200080598672}, {
         3., 0}}, {{7., 0.6569865987187891}, {7., 0}}, {{8., 
         0.9893582466233818}, {8., 0}}, {{9., 0.4121184852417566}, {9., 0}}},
       VertexColors->None]}}}, 
   {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`], 
    AbsoluteThickness[1.6], {}, 
    PointBox[{{0., 0.}, {1., 0.8414709848078965}, {2., 0.9092974268256817}, {
     3., 0.1411200080598672}, {4., -0.7568024953079282}, {
     5., -0.9589242746631385}, {6., -0.27941549819892586`}, {7., 
     0.6569865987187891}, {8., 0.9893582466233818}, {9., 
     0.4121184852417566}, {10., -0.5440211108893698}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "MessagesHead" -> DiscretePlot, "AxisPadding" -> Scaled[0.02], 
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05]},
  PlotRange->{{0, 10}, {-0.9589242746631385, 0.9893582466233818}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8139248046455927`*^9, 3.813924977025189*^9, 3.813925060541829*^9, 
   3.8139371302470016`*^9, 3.813939128062064*^9, 3.813955662715385*^9, 
   3.813957240042429*^9, 3.813957482903195*^9, 3.814004880696825*^9, 
   3.814020996205942*^9, 3.814021226753038*^9, 3.8141036922034473`*^9, 
   3.8141038843742533`*^9, 3.814103959116777*^9, 3.8141040609874163`*^9, {
   3.814104099395235*^9, 3.814104123117055*^9}, 3.8141041547999163`*^9, 
   3.814104264310297*^9, 3.8141077784551353`*^9, 3.814713457758254*^9, 
   3.814729446323331*^9, 3.8147298426594563`*^9, 3.8147841805027533`*^9, 
   3.8147852684432173`*^9, 3.814786874109074*^9, 3.814787184683429*^9, 
   3.814787251785029*^9, 3.81479057085032*^9, 3.814799152553636*^9, 
   3.814799270202675*^9, 3.814803548436924*^9, 3.8148087880129538`*^9, 
   3.8148160593870068`*^9, 3.8148170772222357`*^9, 3.81481720434734*^9, 
   3.8148179395662613`*^9, 3.814818383384553*^9, 3.814819922780994*^9, 
   3.814962879194281*^9, 3.8149642757871647`*^9, 3.814965665285317*^9, 
   3.81496880289049*^9, 3.814982333491742*^9, 3.814982452491372*^9, 
   3.814986525121026*^9, 3.8149866660655537`*^9, 3.8149880516011868`*^9, 
   3.8150454992384033`*^9, 3.8150481937072287`*^9, 3.8150491163308153`*^9, 
   3.815053608688347*^9, 3.815056203273386*^9, 3.815134415716127*^9, 
   3.815135183936008*^9, 3.8151355201009493`*^9, 3.8151366660820932`*^9, 
   3.815136716540558*^9, 3.815136832563839*^9, 3.8151371904986563`*^9, 
   3.815137406300507*^9, 3.815137541445353*^9, 3.8151376313700047`*^9, 
   3.81513872980719*^9},ExpressionUUID->"be5a80d9-4f3e-4312-acb8-\
71347f007403"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
      "Integrate", " ", "a", " ", "fnc", " ", "over", " ", "a", " ", 
       "parametric", " ", "domain"}], " ", "..."}], " ", "new", " ", "in", 
     " ", "M"}], "-", "11"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"f", ",", "x", ",", "y", ",", " ", "region"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"region", "=", 
     RowBox[{"ParametricRegion", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{"s", " ", "t"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"s", "^", "2"}], "+", 
           RowBox[{"t", "^", "2"}]}], "\[LessEqual]", "1"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "t"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"RegionPlot", "[", 
    RowBox[{"region", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", "None"}]}], "]"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "]"}], ":=", 
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"x", "^", "2"}], " ", "y"}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"x", "^", "6"}]}], "-", 
      RowBox[{"y", "^", "5"}]}]}], ";"}], "\n", 
   RowBox[{"val", "=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "]"}], ",", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", "y"}], "}"}], "\[Element]", "region"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "visualize", " ", "the", " ", "convergence", " ", "of", " ", "the", " ", 
     "Monte", " ", "Carlo", " ", "statistic", " ", "as", " ", "the", " ", 
     "sample", " ", "size", " ", "increases"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "uncomment", " ", "it", " ", "as", " ", "it", " ", "takes", " ", "time", 
     " ", "to", " ", "get", " ", "resolved"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"ListLogLogPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "^", 
          RowBox[{"Range", "[", "20", "]"}]}], ",", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"RegionMeasure", "[", "region", "]"}], " ", 
            RowBox[{"Mean", "[", 
             RowBox[{"f", "/@", 
              RowBox[{"RandomPoint", "[", 
               RowBox[{"region", ",", 
                RowBox[{"2", "^", "n"}]}], "]"}]}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"n", ",", "1", ",", "20"}], "}"}]}], "]"}]}], "}"}], 
       "]"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
      RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Filling", "\[Rule]", "val"}]}], "]"}], "\[IndentingNewLine]", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.7972565134658337`*^9, 3.79725659934874*^9}, {
  3.797256635580101*^9, 3.797256662784531*^9}, {3.797256696832965*^9, 
  3.7972566987042007`*^9}, {3.7973550066369867`*^9, 3.797355010753405*^9}, {
  3.7999448651079283`*^9, 3.799944866503223*^9}, {3.81392500680132*^9, 
  3.813925038411024*^9}},ExpressionUUID->"38fb45f3-5ac6-4c1b-baf4-\
19e233542134"],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1: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

   "], {{
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      0.3], EdgeForm[None], GraphicsGroupBox[PolygonBox[CompressedData["
1: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

        "]]]}, {}, {}, {}, {}}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJwl02loiHEcwPFnzH3tMMwwY8bmNtfmmJfL0ZAjU8xamuSMlYTlxVpLq0Vb
aUWNORpJNNaQoyGba5HIkSNHKFeSI5+HF9/n0+958bz4P/9fUv66+WsjgiD4
rUdqr41ezOZTdVCReS5fqKM2m3P4XJ1023yU09iZxczlB3VRhXk1/6irPpqv
cSm7sZpF4bfYnQe4ndHswRpuYxSjeJA7GMNo7uOW8NuMYS2LGctYljKf39RT
X8wtzGMcD3Mn4ziSdSxhPHvxJHcxkRN5gmXsz8k8xXImcQqDNkHwEGvMWeE5
8CpzOZ3XWcOJTOdbXuYiTuVnNnM5R/Mdr3Axx/Acq5jGEWzlMc7gcNazgslM
41fe5Aqm8ifvsZDD+Iv3uYpDw//EB1zNFP5gK1dyCL/zDguYzEus5mgO5mte
5AIOYiXXsy2T2MA9HMqB4T1iI3OYyCc8w1kcwMes50z2D+8pTzOb/fiMDZzD
BL7kec5jX77iBc5nPD/xBpexD4+zlAkcxSbuZzp7s4WHmMkJvMs6ZnE8m1nL
DGaynIXhOYc7oUZzJVM5iXu5KdwtZrCMBeG5apxKzHnhPdVY3TIf4VSGu3rW
YzdTIv5dteA9m7iEbVnFDYxkJLdyId+oncKFzw7+7/tfMXl2Og==
      "]]}}],
  AspectRatio->1,
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{Automatic, Automatic},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->Automatic,
  GridLinesStyle->Directive[
    GrayLevel[0.4, 0.5], 
    AbsoluteThickness[1], 
    AbsoluteDashing[{1, 2}]],
  ImageSize->Medium,
  Method->{
   "ScalingFunctions" -> None, "TransparentPolygonMesh" -> True, 
    "AxesInFront" -> True},
  PlotRange->{{-0.9999999973910354, 0.9999978486683762}, {-0.4955383372756699,
    0.49526750656861235`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81392504617892*^9, 3.8139250608308077`*^9}, 
   3.813937130592559*^9, 3.8139391283649054`*^9, 3.813955663279498*^9, 
   3.8139572405887747`*^9, 3.8139574834841137`*^9, 3.8140048809606733`*^9, 
   3.814020996766412*^9, 3.814021227405321*^9, 3.814103692450696*^9, 
   3.814103884856062*^9, 3.814103959718869*^9, 3.814104061321059*^9, {
   3.81410409969587*^9, 3.8141041234594183`*^9}, 3.814104155084734*^9, 
   3.814104264652993*^9, 3.81410777878633*^9, 3.8147134583826113`*^9, 
   3.8147294469163647`*^9, 3.814729842961728*^9, 3.814784181094449*^9, 
   3.814785269037177*^9, 3.814786874380102*^9, 3.814787185285626*^9, 
   3.814787252344379*^9, 3.814790571120995*^9, 3.814799153191718*^9, 
   3.814799270480919*^9, 3.814803548734913*^9, 3.8148087886060057`*^9, 
   3.814816059753656*^9, 3.814817077599889*^9, 3.8148172046289873`*^9, 
   3.8148179398229933`*^9, 3.8148183839704933`*^9, 3.814819923107449*^9, 
   3.814962879817387*^9, 3.8149642763859386`*^9, 3.814965665881276*^9, 
   3.814968803475656*^9, 3.814982333749242*^9, 3.81498245321071*^9, 
   3.814986525756378*^9, 3.814986666787839*^9, 3.814988051890417*^9, 
   3.815045499954647*^9, 3.815048193995866*^9, 3.815049116639483*^9, 
   3.81505360896964*^9, 3.815056203574987*^9, 3.815134416386841*^9, 
   3.815135184593075*^9, 3.815135520772359*^9, 3.815136666815695*^9, 
   3.815136716832094*^9, 3.815136832858275*^9, 3.8151371912782516`*^9, 
   3.815137406600774*^9, 3.81513754174745*^9, 3.815137631683256*^9, 
   3.815138730153813*^9},ExpressionUUID->"16895a6b-312d-4040-a82d-\
b419edf89068"],

Cell[BoxData["0.8126984241758055`"], "Output",
 CellChangeTimes->{{3.81392504617892*^9, 3.8139250608308077`*^9}, 
   3.813937130592559*^9, 3.8139391283649054`*^9, 3.813955663279498*^9, 
   3.8139572405887747`*^9, 3.8139574834841137`*^9, 3.8140048809606733`*^9, 
   3.814020996766412*^9, 3.814021227405321*^9, 3.814103692450696*^9, 
   3.814103884856062*^9, 3.814103959718869*^9, 3.814104061321059*^9, {
   3.81410409969587*^9, 3.8141041234594183`*^9}, 3.814104155084734*^9, 
   3.814104264652993*^9, 3.81410777878633*^9, 3.8147134583826113`*^9, 
   3.8147294469163647`*^9, 3.814729842961728*^9, 3.814784181094449*^9, 
   3.814785269037177*^9, 3.814786874380102*^9, 3.814787185285626*^9, 
   3.814787252344379*^9, 3.814790571120995*^9, 3.814799153191718*^9, 
   3.814799270480919*^9, 3.814803548734913*^9, 3.8148087886060057`*^9, 
   3.814816059753656*^9, 3.814817077599889*^9, 3.8148172046289873`*^9, 
   3.8148179398229933`*^9, 3.8148183839704933`*^9, 3.814819923107449*^9, 
   3.814962879817387*^9, 3.8149642763859386`*^9, 3.814965665881276*^9, 
   3.814968803475656*^9, 3.814982333749242*^9, 3.81498245321071*^9, 
   3.814986525756378*^9, 3.814986666787839*^9, 3.814988051890417*^9, 
   3.815045499954647*^9, 3.815048193995866*^9, 3.815049116639483*^9, 
   3.81505360896964*^9, 3.815056203574987*^9, 3.815134416386841*^9, 
   3.815135184593075*^9, 3.815135520772359*^9, 3.815136666815695*^9, 
   3.815136716832094*^9, 3.815136832858275*^9, 3.8151371912782516`*^9, 
   3.815137406600774*^9, 3.81513754174745*^9, 3.815137631683256*^9, 
   3.815138730179599*^9},ExpressionUUID->"c35923b6-fcbf-4fd9-b1b5-\
5c1dc81f7282"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Use", " ", "Monte", " ", "Carlo", " ", "sampling", " ", "to", " ", 
    "calculate", " ", "the", " ", "area", " ", "of", " ", "the", " ", "white",
     " ", "area", " ", "in", " ", "the", " ", "figure", " ", "below"}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pannter", "=", 
     RowBox[{"ImageData", "[", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"ColorConvert", "[", 
         RowBox[{
          GraphicsBox[{RectangleBox[{0, -1}, {2, 1}], 
            {RGBColor[0.87, 0.94, 1], EdgeForm[GrayLevel[0.5]], 
             PolygonBox[{{0, 0}, {2, -1}, {1, 0}, {2, 1}}]}},
           ImageSize->{36.90625000000041, Automatic}], ",", "GrayLevel"}], 
         "]"}], ",", "\"\<Bit\>\""}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", "=", "100000"}], ";", 
    RowBox[{
     RowBox[{
      RowBox[{"Total", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"pannter", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", "pannter", "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"RandomInteger", "[", 
                RowBox[{"{", 
                 RowBox[{"1", ",", 
                  RowBox[{
                   RowBox[{"Dimensions", "[", "pannter", "]"}], "[", 
                   RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
             "]"}], "\[Equal]", "1"}], ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"{", "n", "}"}]}], "]"}], "]"}], "/", "n"}], " ", "//", 
     "N"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Compare", " ", "with", " ", "a", " ", "direct", " ", "count", " ", "of",
       " ", "bright", " ", "points"}], ",", 
     RowBox[{"1", "s"}], ",", 
     RowBox[{
      RowBox[{"with", " ", "dark", " ", "points", " ", 
       RowBox[{"(", 
        RowBox[{"0", "s"}], ")"}]}], ":"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Count", "[", 
     RowBox[{
      RowBox[{"Flatten", "[", "pannter", "]"}], ",", "0"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"Flatten", "[", "pannter", "]"}], ",", "1"}], "]"}], "/", 
     RowBox[{"Length", "[", 
      RowBox[{"Flatten", "[", "pannter", "]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.624648919665183*^9, 3.624649006936673*^9}, {
  3.6246504654194727`*^9, 3.624650497776582*^9}, {3.62465059782165*^9, 
  3.624650633113064*^9}, {3.687615604610732*^9, 3.687615611211031*^9}, {
  3.814020930998931*^9, 
  3.81402096980761*^9}},ExpressionUUID->"d08b281f-7d33-4797-b03c-\
35c295ec3043"],

Cell[BoxData["0.36432`"], "Output",
 CellChangeTimes->{
  3.814018301280291*^9, 3.814020876632453*^9, 3.814020937351972*^9, {
   3.8140209708977823`*^9, 3.8140209971618757`*^9}, 3.814021227811795*^9, 
   3.8141036928129473`*^9, 3.814103885393886*^9, 3.814103960274366*^9, 
   3.8141040616928263`*^9, {3.814104100071755*^9, 3.814104123848596*^9}, 
   3.8141041554717817`*^9, 3.8141042650322943`*^9, 3.8141077791727743`*^9, 
   3.814713458772029*^9, 3.8147294473362617`*^9, 3.8147298433413982`*^9, 
   3.8147841814570293`*^9, 3.814785269397785*^9, 3.814786874736751*^9, 
   3.8147871856442137`*^9, 3.814787252705584*^9, 3.814790571478076*^9, 
   3.814799153559369*^9, 3.814799270859765*^9, 3.8148035490998507`*^9, 
   3.814808788971114*^9, 3.8148160601130323`*^9, 3.8148170780123262`*^9, 
   3.814817205016941*^9, 3.814817940169756*^9, 3.814818384335478*^9, 
   3.8148199234606733`*^9, 3.814962880183117*^9, 3.814964276754119*^9, 
   3.814965666249412*^9, 3.8149688038353653`*^9, 3.81498233409529*^9, 
   3.814982453582966*^9, 3.8149865261315317`*^9, 3.814986667166119*^9, 
   3.81498805223943*^9, 3.815045500337451*^9, 3.815048194350953*^9, 
   3.8150491170185757`*^9, 3.815053609324431*^9, 3.815056203953841*^9, 
   3.8151344167539473`*^9, 3.815135184962255*^9, 3.815135521135139*^9, 
   3.8151366672000933`*^9, 3.815136717224427*^9, 3.8151368332302237`*^9, 
   3.815137191648198*^9, 3.815137407000038*^9, 3.815137542102215*^9, 
   3.815137632047295*^9, 
   3.8151387305406303`*^9},ExpressionUUID->"be0d41b2-d563-4d19-829e-\
53bf1576c8de"],

Cell[BoxData["0.366691015339664`"], "Output",
 CellChangeTimes->{
  3.814018301280291*^9, 3.814020876632453*^9, 3.814020937351972*^9, {
   3.8140209708977823`*^9, 3.8140209971618757`*^9}, 3.814021227811795*^9, 
   3.8141036928129473`*^9, 3.814103885393886*^9, 3.814103960274366*^9, 
   3.8141040616928263`*^9, {3.814104100071755*^9, 3.814104123848596*^9}, 
   3.8141041554717817`*^9, 3.8141042650322943`*^9, 3.8141077791727743`*^9, 
   3.814713458772029*^9, 3.8147294473362617`*^9, 3.8147298433413982`*^9, 
   3.8147841814570293`*^9, 3.814785269397785*^9, 3.814786874736751*^9, 
   3.8147871856442137`*^9, 3.814787252705584*^9, 3.814790571478076*^9, 
   3.814799153559369*^9, 3.814799270859765*^9, 3.8148035490998507`*^9, 
   3.814808788971114*^9, 3.8148160601130323`*^9, 3.8148170780123262`*^9, 
   3.814817205016941*^9, 3.814817940169756*^9, 3.814818384335478*^9, 
   3.8148199234606733`*^9, 3.814962880183117*^9, 3.814964276754119*^9, 
   3.814965666249412*^9, 3.8149688038353653`*^9, 3.81498233409529*^9, 
   3.814982453582966*^9, 3.8149865261315317`*^9, 3.814986667166119*^9, 
   3.81498805223943*^9, 3.815045500337451*^9, 3.815048194350953*^9, 
   3.8150491170185757`*^9, 3.815053609324431*^9, 3.815056203953841*^9, 
   3.8151344167539473`*^9, 3.815135184962255*^9, 3.815135521135139*^9, 
   3.8151366672000933`*^9, 3.815136717224427*^9, 3.8151368332302237`*^9, 
   3.815137191648198*^9, 3.815137407000038*^9, 3.815137542102215*^9, 
   3.815137632047295*^9, 
   3.815138730547943*^9},ExpressionUUID->"e1da7aab-b46a-43db-be97-\
b908af1c8404"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

Stochastic Processes\
\>", "Title",
 CellChangeTimes->{{3.8138462517291737`*^9, 3.813846259130912*^9}, {
  3.8140209796837807`*^9, 
  3.8140209807188463`*^9}},ExpressionUUID->"ef3d9b47-8133-456b-9e36-\
b6d0253b0d6a"],

Cell[TextData[{
 "\nTill now what we\[CloseCurlyQuote]ve seen it\[CloseCurlyQuote]s more \
about general statistical methods powered by probability theory. The average \
life expectancy of a population, what\[CloseCurlyQuote]s the probability of \
having a female baby after two males ;) etc. If you\[CloseCurlyQuote]re still \
interested in that, better go elsewhere to study them in detail.\nFrom now on \
we\[CloseCurlyQuote]ll focus on Computer Science and Computer Graphics \
probabilistic/stochastics approaches.\n\nLet\[CloseCurlyQuote]s start trying \
to understand what is a determinist approach vs a stochastic one.\n\nA \
deterministic model generally does not include elements of randomness. Every \
time one runs a model with the same initial conditions he will get the same \
results. Most simple mathematical models of everyday situations are \
deterministic, for example, the height (h) in metres of an apple dropped from \
a hot air balloon at 300m could be modelled by h = - 5t2 + 300, where t is \
the time in seconds since the apple was dropped.\n\nHowever let\
\[CloseCurlyQuote]s say that we can\[CloseCurlyQuote]t exactly measure the \
height from where the apple is dropped and neither exactly the time it take \
to fall on the ground, or better let\[CloseCurlyQuote]s say the those measure \
are slighty different every time we redo the simulation. How to deal with \
that ? With a probabilist approach. A probabilistic model includes elements \
of randomness. Every time one runs the model, he\[CloseCurlyQuote]s likely to \
get different results, even with the same initial conditions. A probabilistic \
model is one which incorporates some aspect of random variation.\n\nA \
deterministic model is a model where:\n1 - the material properties are well \
known, i.e. deterministic. none of them is random\n2 - The applied load are \
also deterministic\n\nA Stochastic model has on the other hand:\n1 - random \
properties; or normal distribution (of a given mean or standard deviation)\n2 \
- the applied load is random variable, e.g. wind Load, earthquake (vibration \
of random amplitude and displacement)\n\nA deterministic model is one that \
uses numbers as inputs, and produces numbers as outputs. \n\nA stochastic \
model includes a random component that uses a distribution as one of the \
inputs, and results in a distribution for the output. These distributions may \
reflect the uncertainty in what the input should be (e.g. a deterministic \
input plus noise), or may reflect a random process (i.e. a stochastic input).\
\n\nFor example we can use a deterministic approach if all we want is to \
shoot a couple of rays and analyse their hit. \nHowever it\[CloseCurlyQuote]s \
better we use a stochastic approach if you wanna run a simulation with \
milions of rays and evaluate their intersections. \n\n",
 StyleBox["The notion of a ",
  FontVariations->{"Underline"->True}],
 StyleBox["stochastic processes",
  FontWeight->"Bold",
  FontVariations->{"Underline"->True}],
 " is very important both in mathematical theory and its applications in \
science, engineering, economics, etc. \nIt is used to model a large number of \
various phenomena where the quantity of interest varies discretely or \
continuously through time in a non-predictable fashion. \nEvery stochastic \
process can be viewed as a function of two variables - t and \[Omega]. For \
each fixed t, \[Omega] \[RightArrow] Xt(\[Omega]) is a random variable, as \
postulated in the definition. However, if we change our point of view and \
keep \[Omega] fixed, we see that the stochastic process is a function mapping \
\[Omega] to the real-valued function t \[RightArrow] Xt(\[Omega]). These \
functions are called the ",
 StyleBox["trajectories",
  FontVariations->{"Underline"->True}],
 " of the stochastic process X.\n\nNow, let\[CloseCurlyQuote]s start to see a \
bit more in detail a stochastic process.\n\nA stochastic process {Xn}n \
\[Element] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalN]", "0"], TraditionalForm]],
  ExpressionUUID->"c1d25e19-c825-4728-8ffc-de5bb5e797a7"],
 " is called a ",
 StyleBox["simple random walk",
  FontColor->RGBColor[1, 0.5, 0]],
 " if :\n- X0 = 0,\n- the increment Xn+1 \[Minus] Xn is independent of (X0, \
X1, . . . , Xn) for each n \[Element] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[DoubleStruckCapitalN]", "0"], TraditionalForm]],
  ExpressionUUID->"11edc315-6d3b-4955-a26d-be0f6e1833ed"],
 ", and\n- the increment Xn+1 \[Minus] Xn has the coin-toss distribution\n\n\
On the other side, a random walk is called \[OpenCurlyQuote]simple\
\[CloseCurlyQuote] when the size of each step is fixed (equal to 1) and it is \
only the direction that is random.\n\nBelow are all applications of a simple \
random walk using different Mathematica approaches that have all a common \
thing ... \n",
 StyleBox["a random variate to generate the next direction",
  FontVariations->{"Underline"->True}],
 "  :\n"
}], "Text",
 CellChangeTimes->{{3.8138592644623137`*^9, 3.8138593316257687`*^9}, {
   3.813859393860957*^9, 3.813859483477968*^9}, {3.8138597001987133`*^9, 
   3.813859755392466*^9}, {3.81386081779856*^9, 3.813860820899151*^9}, {
   3.813860873823965*^9, 3.813860874429655*^9}, {3.813860929666375*^9, 
   3.8138610100155067`*^9}, 3.813861057318317*^9, {3.8138611179993973`*^9, 
   3.8138611399539757`*^9}, {3.813861233023218*^9, 3.813861269265029*^9}, {
   3.813861317058166*^9, 3.813861323449184*^9}, 3.813861460944309*^9, {
   3.813861497409163*^9, 3.8138616310387774`*^9}, {3.8138616713104553`*^9, 
   3.813861698763214*^9}, {3.813861943931481*^9, 3.813861981281354*^9}, {
   3.813862025034768*^9, 3.813862040358706*^9}, {3.813863045148032*^9, 
   3.813863236467307*^9}, {3.81386327417715*^9, 3.813863276881937*^9}, {
   3.813863311913457*^9, 3.813863341920793*^9}, {3.813863383592916*^9, 
   3.8138634080742083`*^9}, {3.813863465993485*^9, 3.8138634783132477`*^9}, {
   3.8138635429855003`*^9, 3.813863617006116*^9}, {3.8140069469625397`*^9, 
   3.814007104188313*^9}},ExpressionUUID->"c1cf8328-d9cb-476f-a543-\
3635f52b5fc6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"size", "=", "0.5"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", "=", 
     RowBox[{"Line", "[", "\[IndentingNewLine]", 
      RowBox[{"Accumulate", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", 
          RowBox[{"size", "*", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", "x", "]"}], ",", 
             RowBox[{"Im", "[", "x", "]"}]}], "}"}]}], ",", "Listable"}], 
         "]"}], "\[IndentingNewLine]", "[", 
        RowBox[{"Exp", "[", 
         RowBox[{"I", " ", "\[IndentingNewLine]", 
          RowBox[{"Accumulate", "[", "\[IndentingNewLine]", 
           RowBox[{"RandomVariate", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NormalDistribution", "[", 
              RowBox[{"0", ",", 
               RowBox[{"Pi", "/", "4"}]}], "]"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"10", "^", "4"}]}], "]"}], "]"}]}], "]"}], "]"}], "]"}], 
      "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Cyan", ",", "l"}], "}"}], "]"}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.813845901888069*^9, 3.8138459018895683`*^9}, {
  3.8138459756318483`*^9, 3.8138460464602613`*^9}, {3.813846096727118*^9, 
  3.813846131651429*^9}, {3.813846163620575*^9, 3.813846177749082*^9}, {
  3.813846227158746*^9, 3.81384623942699*^9}, {3.813847406339579*^9, 
  3.813847424431275*^9}, {3.813864660330968*^9, 
  3.813864664900196*^9}},ExpressionUUID->"7c8ad749-3856-4e2f-ac63-\
7d5724014ada"],

Cell[BoxData[
 GraphicsBox[
  {RGBColor[0, 1, 1], LineBox[CompressedData["
1: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
K3LfyMuTJR+u7D90lon5q7/+Y03Ik5Swot2PdG1x1afT1emwPCmLj1u2cJ0t
LisGX3HtkiU37ub79WXbIiqq9kLMiAzR2ZenI0W9/zR0YulXcWky0bP++MnF
tggT+Z0oYyZBFozsW54qYAt2bMb0wl8ihD/w5HBEFRN+z3fYzfwTJE+eae4t
DWFCfq3FHyseUSLznaHs/YeBxb/vcnL/iZElJ5ewxZ8w0P0o+JrnRilyPzhk
m+9dqn61SXmB62SIZx/P9bPVDNh8Wt45R+WnE/rapE6aiSd5adKlrXLkppNv
QpMeE22TGYOLHiqQjWH3VzxOYeKgpoyNnY0SeaPx30TzLBP7RRYxB+2USKZP
g0Z1si009huOSH9UJJJdRs+EJmxR2vfn+bS/IuHS02/N0rLDnme3Hf3slIn+
8rqdnFA7CDvcdZmZUiGZBz7cKaTWK2xdrbrVQo207JXU6M23RaPfphvHYtRJ
StKanoxKW1ga7ItbaaVJSpc4GQ9mUeuXuv1dbqZFDKYmju9JssWIT0RMpJE2
4dBKGbtKbPFkfa1GgaoOSQj3t7Sbb4s7x/mWXf2sQ4pXZvvTLW1xqvv3Jk6X
Lrnku/7oM+r+pkseX7rXqUcK/Qe2CvjYQi80KEXpqT5xSW1+t8bDFpf4vwlV
PjEgCdms0XcRtvC4Wra+6aEhCY7srLyqaIvEaC752SNGRKvlbHmmly12D+f0
xO02JvF7a66kvGHCKqjj7PUxY+LMfpMlsYwJg/GH+3LVTch8hzclvF8ZWCV5
2C7/njHxlf2WcHQXAyGhQU9PhZuQgz7NY7zSDIRdjvSV/mRCzv+0j5MossGl
UPfXzaamJOyr4uD6ozbwF1G7fN/UjPR+fuySX2qDkGcTiiWm5qRxU5fuB2pe
GaZSiscELUht9T6zfD8G2l36l+gfMycXMmwtzqxnwJSpXzVSYEHcn+QXSlUw
EDA3x1rBsiR3trtt2CvOBMl7EdKbbkmYlbw3SllMtJtVVqhNWRIji7ya9XVM
DDEu3Ac3jWyR68qcY9iiSP+JN92URp4uXmMqvsoWD34IVTdW0kgZV9WpK1K2
6HtePzAhQid0R70j8yVt0Xn1zuzYfjopcf3u5vqFiZa6W/FreazIamXh0YYp
av4UL198k2pFRM3PMT/eYoJu5OO9/I8VCcq65xm1kAnpja/vRllZky0M4rHp
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
LeA0iKUVnWtlITmQfFyWRTja2z7U8t1i4fUIxzGs9xtHMP+Ru/VrFv7UFTb9
uTPImRrKOdNpwob+xYczsYfHOS4bB5yqqP2+rLnf2rZ8jmOo+eZdvwsbwj11
/z5e5CWTDxnNRsvYuBGRHH2tVJB41XUEnS2mvk+Ye28nI0rOm81L1b7Chv1x
H56bvJLk4KaS1lYHNszany3lXidFmP05o6WEhc2i9Y/pw1JkQ92j3bruLDjx
l3c4b5AiHftXLAz87ASrS0uZzWelyYmxnid7opxgqrP+ZJGINFnHOB/ZO+eI
hW8bjp52lCGZ+5WaC/454setKxPLHWXJ0bGWArQ7oqNst2+nrjw5ct1vcHC1
Ix6p0087iyqQ9LiLI4K/HODOf0nCLUKe2Bxy/9VzyAHhrS+2VzcpkFfTnkJu
KxwgH9BqUlmmRC4G0J8F/rPH+fW2luJ9yuRIx/HnfR/scfHg/E3Bn1RJ6TEV
cdVsexzeYPKyMVGdMN9Kn5BQsMePph1XjOvVyFzLf6eTb9mBtyDdXy1Blew7
V7/+trMdwhMzFqw9oUJ2tTknRejZwW5hUorSJSWS/WT/yTlvOxQZXHC90aBA
BN/NFIsM24KueWXxPR95YspIOZl+zRZuqWa8PwtlybxFR89sPkHpgWX+8YLH
ZcjvfT16aXq2kJtxSj/AJUPM2VyZL64zsXJBYYCpmjSZ6zFLyT7IhOv8pf0G
0RLk+QPlklJ5JhpVdrGWdomRlSOnnG2rGTj0zrnhq4sI6Q9jCMctYWDB5eab
B+sFyaeuEuuN0pRelfB+8tCbjyx16RYjLTbIXBgaGzbFRQKe0q8UnbPBEM9B
+/P2U5xk4S7tM8U2kGZFux33HuIE5ZYmN5bb4BS99NmW0m6Or2ZI/DMNBkK2
tZlsP/+Vk2Ke2653iIF9nZVGZv9+cfITE98e5mLi736a+uLhAc7HatnepHgm
hh+ez2pvH+Fs4EtdkzDARMXHAw+N+kc4v+p4lsrFU372zcDV+wEjHKb7n5Lm
j7bw9r8c/nP5BId/8ctigwA78B8/I8xY84/TEPvopz+ljxL8fztc2jLH2Rlz
/lu0qj0it9emGJbwkECi/0e0kPKvlqsilDp5yekFR2S1Kf4eCP5ZmePITx6p
7+jLSnDA1yN8py9S9RnQjSzbMeCAzguPXkezBEl1S/vAsxWO+KQmN/aB4pt3
71++CGtxhOrq/r2xzoKkhRM57i7khJii1xfzH/ISo541W/pFnGDsm1BXfGCO
szI/4bYR0wke/vsja4UnOO9Ej31+fNAJs/dW1KUqDHFIQd2RFjGKv0uKHW8b
DXF0J/tFoz45QXju6OzJ05OcV0p9fc9+OGFvTqPKgWdcJIzo9h4XYGF/o9HO
tTf4yF2NTrlt2yn99DWfrypKgJxQkA6v/MtCdpxkepGsELFjzXtBWGz0rZG5
5GolSlKe+rkk32TjwKdHnqoPxcicbGXjSxHgt5ZYx3ZjERLeq2VVrg/EbJCh
6ecIEAlNz85dkYCe9vLOE/v5yXjnwYVuRYDYiK0lvwov6Rdb3XjiFbCSt3/e
jiZuYuq8rclgDFC6yB1/+vk0h3uz07r2CeBMluetuJcjnBjW4Bd6N5Aswbxz
PPUXR0Tl3V4RXmdwju3Ncxh9y2nmOX94TwvwuW5k9ab3Dzk1z4+dy7wDqGyL
mjSReM3OPLQ/Ivo+sCJvZHX23E92j1GQ1rmvgH5w1U/ntGF2mPQpFAo7Q+DF
6tzWzkn2J7OuUPoAUKLmzRt6lAvDWHOhk+LbS7mvco+H8CLwaap3QDqwX6Ks
6/4uHoi//xbncwB49+2sc7z0DNuu2DX+HqWHQmdVBYLoo2wzrnVLyyKA43NP
6B/DB9j6PLtPlukAN0pNNBJjB9iv7vJYibewsZNv/Ou7h4Ps9ae1Kw+HseHC
NxZ6NnKMfTbpZFZeKBvqI8aB6yJn2eOnU4ZKKD5I0ppv/PcuN+wj0gsa1YGa
HiNV63s8+CbdtMMhgMr/bJ104kkunAnRrRIqABYKOvF/WsyF5Mnt1TFtgLVT
yXd5hRn2+cL7w+wXQJ5nc7iC0ihb4994QBAHOMJ1v+xZ+y+2gQPb6e5pIGWZ
afyu3LdsVUbe9ZBtAFen75hOfg5b4E39m2wnIPVbetHB+42cO4cqNnPzAEJ7
lUQyMgvYj1979K57wIa8Oyvt9MR7dk3bVF3cL0pfGrR/8b7Tx87sejtnNc0G
l3NX3MvmMbb+rh9fK6n94s4edYptH2VrdWqWV+4Ebre1VX9qGWWPlal+Xn8G
WOojGpY18o9dIHoq/xqlj966yw9+X8CNb2KD10digMNji18rCPPjaUfHFdlM
oFjI5dOvciHo+UXaSjUBO77eUJw7IYxJP77mg2+o/jP0n47bKY5orx1p/j3A
V5e1i35ekcLxc5c3xFP9Kby4JGhjmQwUTug4BfUC9glnyGS2LAxMS9d76TpD
cvvn6mWmchg+2O1/McIZL171Cpd9l8W5Sz/Pthx2RpLf2rbJVfK4Mdez/Xel
M6XnNzSscFLEwS0VXtsfOePZvy3nAwaV0E3LUsw55Qx9gTI99aMq6PF3+9iY
4YzLdZa6zqFqaFEoSyhZ4Ywh8e+ffHvUsc1LjeNp6wy763cqfrtrwrgi5dWa
WeCmP/+w7g1NXNHVe0cIcLK1OM0/VhMbG1kvhdKo/K7TShbu1QQJkG9eQOmT
S3e/WZzR1EQIuWqUJAuI2vyQNebSAMlgGyU8ZGNJsVS/vZYmuLebsbnWslG7
zWa3YJsmDI++uPRskAV3+XidOWstqAfuqaVvYSF0890Hu39rYmRrV5rYARZ2
vV+/hPlBA1y5GwLPvGehzWjfcc5SdXRzn+hgU3pE61VjY2WdKn68PHEkSYCN
M8LCPS6vlZHWItMcU8BCiOSd6zPflMCke230TmRhu8zpr2fGFTAxcitZO4WF
AAEDxrtJOXTPqJ8vofzPy+MDdMcz8khfINuh+NYJb773Bj/ao4gbVb1Pr3Gz
kHnLu2t6nTIiH90uXvnYCbLDuTJVDFV47f2ZMU35z2Np9pM+UupQ8dTmOIuw
EFj4I8FPQBP/TC74i3x3wtllNQZu/zQRemOhU6EhCxcs6EY1r7XQmr3c8eCQ
E35xhpe21GqDfMPRdTVOyJIV/tlZroMPP6KH17k4YfOpZ6MSfLqoWSwxsq7B
EaeFbh8zpOL/tKX36vs4otTf/4VLnC6Sb9RUZWg64pS5x96EUD1Yneud/Hzf
AZIkv/kItz78aN1iZcQBIS7OzRncBvhSnTd2r8ABFStC1t8dMkDqePH4V25K
H11eJ3J2hyFE9s0/62rriAJmv8HaCCOovNHoKIx1xAqWeL/VAmOI3Dp09YGj
I8wNw+fxMk0wefpFX4uvI9JnJcxNrE3hKbRZYAt1vv2Bdy4ZWJtB2/l3RdKg
A0p57ZcIdJvhs/TqBvd9DnCq69wsEWCGBKWGPMH3DliScD/dtsAUnz223a1Q
dkTCjfKcv9Um8M2LPLo7zRH6sdYzx9RMoDLUfiSeqsf8Q6/KpmGMw/eXVd1l
OcFw9EZIK68x7I9onI456YSel761D8OM0E36SiO0WHixJ3YmLsoIm1xMVuQc
YeGogZe61hsjPHV5eD6V6ievR2mmT7yNcVU8qz99MxsBQ6f47R4bo3XLGzmv
ZApPc6XXfGgxQVf5RFJVAxt/V+RuPX/CFMZvKj9oL2VjpmMguEjJDLHSr2Rq
C9lomT6kcWfQDCdZnanLHrNhKMzIm+kyh9aRuXRPCt/5TmvPPVGyAN88x0X+
q4GN763tOe4WiCyZFIs+CQSfLlCdjLfA2tz5zKp7FL9dYYbt32eOl5Vjkcqv
gSvOE1I/jplh0eOHDyW+A2rl7jnip00RcXj9Gc8LwIUVg9mBwmboTDq46sNe
oGKzLC3voxm2GqwNKvYG4n0M865Zm6NalX3lP8pP7Dj4zoDeYg4jgf4ZHhlg
4t+idfnNFohnr95NqtmIv1hv4qVniUXqMiceXGDjjdEodi+wwLX3w3a2tmy8
NDcexTtzHKk/9kGU8hMJd0fiyrZa4Om7Bd/LD7FQw7fgK93AEiRp7HbwQhZo
P5wnFhVY4tip3Kjbv53wY3j5CqefljDrr/7nkeaEQ0V0qUBLGv6uaX1ZtMkJ
J1b0NN2somGh9nIBj34nVMa9ibA8QMP3J01ZynEsMEpTuJtzafggz+p9QeHL
tJWHtKwMDcLVZtvCI1hY/yp6b02+Jc7cKuWOX8CCy9moH1NylvhzNUrNbC0L
J6ylaKJ0C+SvcHjUHcuC+ur+9bvp5thoep0rkJrXQz/7Xm7faA4Z6bUrz0iz
4DoxP/HGGgsc7v51Yp8mC2I2XYf/0SxRp1q+kovqv5svA425qXxXfa0Q+qPt
hLoWP3dFJ0vMJetyfo05gh3GNepdbQm7tVbHvg04ImP+j6P6NjSc+txXd/my
IxgCvl/kKmjYX6olAkofxjofviCrQYfvXHPjZ7oTWA1Ke8PW0rFZ7oi9xmIn
iEards58o6Pf4ZLg1Q5H2NWUb1omaQWlXWmapsscIXLkwTImnxVqQ2NH4j46
QNHvpv/593T8mQz3FVrvAPWrf302nqWDVjXO1IxzQFD1F5d9BnTEB11TZ19w
gG/jl4G5ahpM1tR5plY6oHtkWZo8g4b0yS9O78UdURanVUffRYPE4/TorkOO
6H2r80MljYaeG/VCr8SdUGJpN8FIoUFvZnBBYJgTdlj0/ZD+TMOJ4uwbSyh/
d0Mh5QLjK/X+09VpDRoLe9wCrg5S61vcCtvdq1h49XvTdnY0DfuOOhYsNmfj
4OSX76XLaWA/VrvXvJUN5gArYfegJTYXnEz1HWVj5MCund2vLDFgnBFcSunR
VZo3/N/50iBC69We5aP02yXH88HPaEj4dOCZ6Hk2eFe8/zGgTceAROOZC75s
Kr/nWrkpdJwyaz+3c4yFAbv5WpGddCzuqq/23svCVafXsXMKVkj0FOCKEqf8
85osHgkXK9wpcxF/RQmeJS5dh2FkhbxMbHoj6QTbszYcRRMr8LlXMgZ/OcLl
9cWsfVfpGG9by52a7Yjbz1YsGg+kQ+cpSV73yhHP1yec2fKLhqs61RK6RY6w
dr8te2AbDcHjXn6VcY4YTooYapmzBLs4x4ZxgMLjsqx3j3dbYrXpjU8jgk6Y
atjWrRJliUty1pKJyU54uUpXRpLqT1nZ5f1rrjhB5O/Nxz/OUP0XeldpWoiF
FHFWdhA3DcZ1288pBbPQ8DLraUgkDfPTGDNTo06wYfjXqdykwdFG9+4B6vtw
t1e6S9XpWK8rpvy9ywktG9ov8BXSEXRA6JtZIAtPtSecOu7RET1P8OgvXxbG
+ltnqxyssENh3eef2izwV3JG029YgWfV8weHKL4MFKfteadjjeTr/t5jTU74
KlLQq1Nujbrxq+/etTvBZEHwVncNGxQrxLxdvJSFyYjEOD0nG3g+0X/Y08rC
6UenN2nL2eAEt/D8u5R++G/y/jNWoTV+/tCKO36PmvfFX9KPKVvjRbtsebgh
G3qZ4+WaHVaI1/nn66jFhkju9F2/ICswJT+vbvtCzf/l5ZN6P6j7cWYfKSIs
fOYLzH8QYQW3V6s+qF9jIcpwj9+rr9Q8jZ3hemBH1e/c5Z8S0tYIoulPzI05
4eqWqmq3FGuKH2T2hlD1Cr6UXHSu1xotC7p2reJjYSby8bwkDxvEe4g/T0ym
8JKH3GhJtMGjgb/f7k+wYPleKCw01waBGT9fnaf6O9aO3vW2wAZym8Yij31k
w8d7eavzNxuU+Ur9umAG8NN9WmbnbHB7fYxMxkYg399neOG4DSZVnluMUPo+
5u/bgT3BDPjFHvnrQOm7oY2mluWvGBhcMtXBdRho1XAJEV/CRI5kQHzPQ6CI
/6NJZDYT28jdpWL8ztj+1U83fzsTn75v5KTSnWE05t929TUTK1Y+edtO6VnF
rqQwO31b+J9e+ach2xl6yy41LE63xcjT7RXvW52hsFteeHGVLVQi2ndwfXbG
pV5l12eGdtAZr1doGnCGJpNfKvC0HQZ9dP+qjTvj1vyiOzd17PHAS1g7vMkZ
C/7lfb/wnz2+3D3XLz/njLa3vd9nr9lDVDbd9RHLBZbJfd4RlfbwTRgoF092
wUsrb4u4XfawGJsSnyx1Qa5v5Jdv8+xxyWCp0JJOF1xsjO5g/bRDzPXleW7y
rlhlPX+/mDz1v9Wzlf8tcgVN+8zbN4H24N5jlaWd5opj39rKV1bYQ6NiUtu0
whUqHvaGs5IO4Dlt+0/pkStCuUrfZG6lcNXgWWZCvytSdWeMerscUCAduH3D
d1fwj7gr+AU7IuLi2xETCTdUh76xF7zviA3ZbhsahdzQJrDLMs/RCTPOSOd7
7Aqvsby7nAAnpAeG8H+tcoXnykdqRZQO7REwsPt7xhVJiUdH/OdTPHrp3IbR
KFf43DmxL8udha0jBSJbvF3Bs3zusX4NC2k87jm+sa6oDL7ebqnNRpy4pzL3
SVc0hEbfXRrPhkbZ6IVzn1xhfM54HjOQDcc6NVobdZ5X27Z1mI5QOKzPffyD
uxuKP7/m26vMRtbJdlNephv0Jl/6CRaxsU/u8eVSZzdcjrxhf5LC2QqXTzt4
edwQz0g/nsYLbG1e++txqysy2a/70/SAsLlym7YjroiMi1rhTPmKhHpHacsQ
V/TnLC5W+78OKkpCgZ0r0s88X1RQDGS8uuilPeWCvAGztWPlgMjs/Ej9Jy6Y
Tsz8nLgJ8A5nTW446AIh3ae302MpXZUpbiUT4IIliaULI30oHSR1rcLRywXq
KqFq1ySBT2Uemho7XfB240Tigg42niRm1by+6YJOvfbL84vZkKpuu+gy7ILf
p7LFVCjdt1D06tHNdFeEKH9buCCHjRLWu6Pya1zxdEmrSDE1h0bqf9qbSlyx
ZS4za78UsCBX7IBelysOK39sT1Wi8l/APLNT2Q0xJg4hp7SB3bu5Mg6y3ZC2
6uKiF4GAvutDxY5oN/Rct0vupHSaiJt+Yvs2N/xQqT7zshGQM5HyFz7thj3f
Xjb1jwCuFnnBN1rc8MEzNoJWDzgMlqzleuOGHeNeH1ZTPre1vPy2J7WeY7NN
XCGY8nnXY5urStyw8Oa1mIvKwOPZZ3kJNVT8RXdumtKxe7nMEh/8ccN/gRHt
btvYOGcS89a30w1/GocZN2dZqI35vhnv3fDtc5j7A8pHrfrJG/2h3w2y9/d1
/6ZwzKFnW82+Niqecj1ztsgJOo7jp8a63HByy46iNGUnGKw7EhRIna+ppSmJ
q8QR9lH7xCZn3eCRFftTlfIZPCM8UBBwx+7BcOsfNQ64ZaJ/abmpO17E8Mwu
WOoAVzH6nIu3Oyy2uk5rf7FH5ZikvcdudzT0u/QxTtlTvtXvNFeDOyrmPaqf
u2IPp1Uxj2XfUfHRNXIR+g5It8s52PfBHcEfoqf5zjhAfJWY1E4+D1TXb083
E3NEUO9JF4abB2b+Bv/nzeUInZ4VUbu3ecDysdORjXccUOZsOz582QM8Mdq3
JOMp32JTdpG7xwMuhk+Oz6c7IEmt/Ej0uAfmxx8kqrftMR1S4Tuq4InkIlWB
Hi97bKKNLVaje8LCPThv3ms7WCoOvv+e4Entr/vhUIsdpOirdGcrPTGqGQKr
VDuo20Zyh37wRKRMVFYYxw7KbgnHf8p6wSP6wK/RWTs8V9a61iLuBSEeZSfj
FHt4CmvIi0t5wXvarE5u1h65TwMY87574tmZ5KG/Kxxw+e3a7ojrVKxgdlT+
ogM4esVPazI94Ru3xohF5b914aHG7cs8Qds771xwmCM0+fteWGh7wlFw9qDm
aUcEpx7beUXCEwdevTknrO6EEKerr+d+eIBv88uq1AxKB2x/WcI/QeVfM2nx
h/LNvarXHx8R8oTNk4xlOTtZsElm24SLe8I4TFrNeoaFxCle/dRhD+TRpV64
JbLR9fryqQiqPvR9Zgunsthok7FkfI/3hGJb4+MdsWwc+9Hd4XTRE9w2Wj+/
2LExL7xz1fFuTzTs/nigjPq+51pDXoGuF2SifpX4/MfGTc/VO+ucveC6reYp
+wc133K3IkzcvSAgoxIjZA1orFAwkQ3zwvlxqZdKFF6895A0CD/khRLn5KBu
ANYwYV2M84KSv2WTtRCw36XIrcbCC7LbOUP1FL69OLJ9rcqgJ7qqRPx5/rFh
JT7L5n7lCS3pJM4/G2Ayw3d+ZpcnAhiK56M3A5s394llyVP/e5obZ03xLFfd
r3wbTS/k5ppZbH0KbInKmhn0o+4vLuyP7jDwPTPJ5/puKm7dPvlO3Rkh/Op0
uRteiFtZ/+S+lzM45205L156QX1adOeSXc44KLlrRU6FF6oy7LtDLjhDK1b0
pccaL+jppEW11jpD2Lla+M1iL6hyv1uQMOmMroWeJs4+XjitHDoWYecCzdWf
t6/09MJaXq4Gvm0uuDByQFOBqs/Wr2rVYhQuVvSEydwO9AJPxexYCIWLUVE5
0TkbvOBT3Xkq3cIV5YY+GaKRXhjy8uwYpHhmjVNcKDH0gk6VR5HQPldMtm62
4vrpiV1rpusiKB49V1D8JvauJ6R+772SHEDxaIvPkQvbPbFj9M+BoWBXiB+I
pREHTzx5kQamryv+/L3pLSziiTDhQsef+hRvmA9WGL3wgOF67SoXN1ds/2M3
T/CWB76kWZrapbjikDxv0ZWnHhhffk/k2h1XWO32VzxU44FiXX9n5TFXyDu+
Xu5T5QFN23nRsTYUrm3TTJM/7IGHtenXtTe4obVMv+Ptbg90VT7l0r3ohtEM
3duiQR5gGic2Pn3nhmuP38cJm3kgJmDOTl7EHQICcyqXp9xRNr2i+QjNHaWd
eZ2p99yxtnTS/LmDO9QLB436LrijXMlLdG7GDcz+tbM57yn8ulx68Gi7G55J
Xfz1YMQd+2sqPi0/5gZ/2ZrSGEsPNCSs4jNNd4PFz+mDvms8IOgzXae9yg1C
jK7aLUc9sOOw+0NRezcU/vrvfmmuB1o1dTP3Tbni0vakhLW7PJCwkt/4W60r
dIhQHyPHA9wTA5MfqfrwtpaWXmvzwKoQ7nyuBFdwjaS++jTlgbusE5t9TlDr
n7zZaG7liYXX9PLu3ndF1MdRTWl/Txx+EGVTMeKKU6opNcKbPTG5u6862YTi
iU8snyNU7OD4RSM5xg15O08cM2R7IiZaZ5XxITeQ0/yFdyg8yGeJuLy6QvFW
t/NLfwo/9D4K5vD3uMHp8Ja6xBseeLRPM1uaqmfD7gKtw0keMLp3L7lR3B1q
Ah3GZxI8EHFW0fb+Indc/RLpt+GcB3aW7s7piHWHnOlTJa5vHjjMVIiSDHDH
pmr/ei8Kv1yqj5ukL3BHwA2ro+dXesKj8qRzZIQ7Ui48nv8/Cq47HuuvDbes
sqKhSPWLsveel/kM6xlIhJIdZYSKhhSlolBEi4SiVCQyIlSyK0RWVFZmW+g9
75+nc3zPfe5xDfUp5xoFMYeUDqi6E97ZxGGeTfBWV7tD9AjZv93rRM2YomDs
gMWSqzfNYPsgTfwumX+59RlvCnPJ+XF959E9VEj9N1bzLJrwUqD6tythVCjq
JK/topF4By7yzKRRYeU+ryy32gxDZbTtGz5Q8bjZsPYTeV/i5wNKljw07Hpb
L3651xT3/Rebew5QiX9KOl1N+i1j82HTwhoqPrPujK0MNsWhA0/3fKukoiqH
d6OCKumHqLB12+KpeGfgeHZ2uSnGTzzSfWNDRfv+fB+1VaZo1WI5FAhT8XRs
zaCkjClWfC+a0B2ggNM4qqSKZYpPjQYHQr9SMLjEbePkRVKPqx/PMecouGnl
6DDVbIrMyLubX8xTMDpSKPpVwAzDnj7CQwTfuvfybmLDDM90gyv++0LB0e/5
MnlHzPCwTEb5lCSV+M6y99EkH/MffujZE/wJs4+yz480w6RSpM7XJCrmJ7fZ
DNqboaA718CtlQqnjrNxX4zMYDJw7Zx0CxUfM07Ejiw2g83jx4eOd1Bx5Mjz
DLvnpngTnKBXUE9FyOD6tH1kHnzThexDiqhYIZnkJEAxxVrrb/ZG16noG+wV
b1lhitT8qhajavI9WdufyR0m6KetDl90moq5X9T1Ps9IP+u1eKlTqbjvIGJi
9tQEbp3eIesJv+ZsX/pI9BKZn5jUa4YCVCzUrxyiE3z6q9g+ZKlFxc3FM+HK
EiZokwvoCCH1ztTh2RujQPBpaujVuTtU3BPtW/yQk8zHLzZNjdR7e5vw/EqC
jx/LDg8O/6PC3vfhnkyiY81q8o/tlqKR/btbBOuM8YufkfafCg18tRvPN58x
Rt/WRU3JcjT0Kpiv46MbI+oCBy1mMw2Lqqsal64wRqPC4v1+2jToTZulZDYb
QV7Z5MVHebKfoa758IIRTnT4B4z+osLTdOSxSIERdHWW7o57Td7LkBY0JL6r
rEh8+E8+FS92nzQIW2+MVTGXRk+GUqEfxPkrW8MYKy6coVi6URF06UXurmBj
LNUOeN9iS0Vp7YYl0w+N8XdzxtjnQPK94KMV30ZJPBHXy6NJP27+Eulwf4sJ
0haFeV8uJfkfdrBcxzKB+pHRspJwKsITtox9Jr6q8f7GxhoW4SfVjBzhYyaQ
zTcTe074gqlv+9yJ+Bwfj9g7+3QJnxR8aUr4aoLHTras++S+a78qWmKIbzot
9Po0L+ErrjLOuyYGppgNKl99GFRMcwvzjR8h+DkoKTZmTMXhuR8bP5ab4k9e
8mATBxW/r/Me67lriiUzS+rrXlPgr2O/fEOCKSLCa3+vSqUgwCXxSHopwfs9
2TENDRTQwlVv3B0wBYdMaKHJYioMM1eeZnKZYdxWvOjcAgVz95peGVPMsK+p
4EC1KhVv2A36hVvMsKKsU1YomIrvk6djGOvNsP2kaUxbLhXdbSrHKudM0ZgQ
YiQ5QoXgjck9omS+nN8oNGwh/RB6cSmlaakZPnzeWyfiSMOpmC16zbJmaJta
FrfVm4YDznR7Q18z6Cnl6QsH0DD6Vduo6o4Z7nyNqI4wpyG6ZTjfs8sM+ats
r/LtpCFmaOnxnDXmYNaWP98RRQM9ZG2jxCfCSw4+BlwVNKguU3JKfm2Gqcuq
RovnafDMil2n/MwM50RTNk8o0ZFwsHMilZy36br2KnEfHc5OFjcbfphhfWhY
o1c2Hfvc1+ftfG+GGF5+Ze03dNhl/Wof5zJHRkKsyKLlFqgW6eRhbDPHZsPe
/jJjC/R3hdz/SnQ2Y+7Jku5jFvj3LWr6C+FV59bh46OPLWB3jPfjLXXCc56/
YoT6LSBEuexeT3hv/fFYgxBBS2Tt1nEe0jXHfmEKf4CZJfJcXZ7/W2uOCL8m
gTQXS/TGJb7eRnR+0a1szmJTSzQpru+7kUHyN7R4mzwsIb98rXKdmxmenshO
TDGxxKD99ZT+/8yQSzlol/6fJXq+n6ZyEB/0eU9gwYiGJawDVr1l5pti62+v
qxeNLfHv8c+2PQGm2Jk24NLrbwklDe4eY+J7X22LbFRmWKLhgbFXHPHNs+rR
d+/JWmK5x6tF/96aoP6iK4/fjAU21SjHeD4xwdnLghdzhizwLWT2s81BE6Ln
PG8+L7VA1UzLoXIa8eFLLl3gO2qBwuRa72otEzRLZinYGVhghj9Jto740BuZ
5o4BKywgtejCf39XEP0jUnfK8i0dajUUV4wbo9pFftkBUp+YCc/APlGif2L5
pWYu0yHhXrH68Q4TOAe0fhR+SEff41UbNxMf/pBDZ9+VBjq0IrJ6hhtNMH7/
14OgZjqy6spuvucj88E+3eyaTgfryF0nU6I3OjU017z1oaOEzb4RTnytCNdk
sWI4HYqRyUsGukm8wieFi0LpyHRav2H5NROIWSSrxdrQEdkt7eLvawLxLp4d
O0zp0Eu2fuUjawLuPYs9dnHQ8WDM48H8RhMosxjDTa9pyObsYCsRPF1/O3Rs
oZAGq6loDydjEzhW8n0SLqDB8fl+HtsTJhhy1s91iKChtPhp8PFbRP89iz87
YEhD4eVVnyOKTbCHM2LTykU0CM3rWN0tMME5+pWcC80E7/pO9eztMcGp3Irx
Q01UbH13Sm8fibfLLd20fY6K5H8VyjZEHy0PNOU+so6GEoeax6tIPXivi9nX
ETznGFWdDps3hry2q5vBSvJ9lw26n58Z4/GOsOf3RWnYOvQ5s/K4MZ6plTat
tqeBvf3rifFUYxT8sAi0T6Sha6XEsV2njeG+clBY4i0N1gon3uyMMobv7bDu
xcJ0BK3aEalzjNSz4BH1lREdb2O3c4zcNcbB4ECtFXtIvnhpFy9/JHxSuUSl
jELH8ZDnUgdJvY/1HTUKX0sHk8kpHGVmgrUse8HtAzTYD7JZ8j4mcHIpnIpt
InjyJrWCJ8sEU6VrL1a/pEGfXZZ077MJxkYWf1nUTsOJ7xJDQhKmMOt7Jp6Q
QkOWOlfjMg1TbCvhW8afToPf7fXqB0JMUSK25F1PJQ1ObJOPc3mm4JSblmiK
oYEpdeXk7zqi//qFOaypNLycXRU1X0X0TFSmi7sPDW0eF6bUzpri4P7EV3Xk
fJWHU/EA0SfvNAcFvB/RoKS5unzLFlPc9b/Q/qSThg/XIrszpkzQIrwaN4Zp
UDeWsPF4ZAKpaW3+yDEaoqZWT4QEmWC44WPkZfL+6oH4g4LEH0hvosVybafj
ovOa2pu65P1fk0UDT9HBKVmfGS9gglfXjPatqaUjgN9iMW0N8SPjA09FO+hY
fFBhuO+9MaY/np4XGKDDd/eue61XCB96XedYNE+H/vPdt6pdjfHm0na/qXUW
CBa6gvtbSX1KBjYfGaVjXdqx6tK/Rth1pyf/0AM6ZGQ8ZwoJ/+Z+kA0SCqLj
w8lvH0YmiH/TWPsqSY0Ox8bDurI9RuBo33D1v780BN2ffLib+LUzSI4cJfk1
szax/ylsDEf6y2qjUzSw1pdK188ZwbVE1SCU5Jfv3WXX+mEj6BVMXbFdRep7
beDsGJ8xNOpnu1qIHrC0uX1Ck2KM8/0KX1SrCB85j+dc8jbGRIN2SsJFKi5h
r4hdojE4vxw98Jnw813jAT7qTWNklx6KFlOgwpYp6pn9zhhiM5UclaJUHFg3
lflzpQl+7Jj/+aeXAteevKVcxJ91v+5TVnpAQf67t9MPmSaYlbnKKXqC+AGn
xVaixH9YXkh+GJRCga/fqshVRH+l80tTtrRS4Mxhc+gV0WvLNziePMRPRaRS
djzfKKnvuPe3g8SvnnFOrLlE1lHZLrGZZ8j9caWZf5aY4m8+b/fXbCr2HFoW
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
Z0kqfrktVwmdZiJuQNPddzcVY1sluLWJHlmZGfyg5SYVb7dXxnX+JvqjIOBg
EpmH8al8Dq9xJv6m3n5lu4aG7DC9kKtEz6cmZ0p5WdKw9Mm68adTTLSnKtVt
iaWhcF+1tAy5P3vxj6Jlr2jYNf2y3W4xC/umcmhH/tFwYn3qiCu5Xy8++pW0
JB1yz0WuR3aQ/jp5MmG9Gh1aN5V/7SlmYvfd/xSUGHSUlee1ZZB+7jfN7hXy
p6Nl5lzuqmNMdO/f0qy9k44iHuHr6qQ+Io26tDxDOrzSuIQSTJiAZyt/rjAd
6ttV3ZscmdB/+WH1004ajLfmx3l4M2Gks4TLoPD/+Fb2MMSaiV03Pnxo+EDD
xUe5Y1akfjOZGeKKxTQszGemP1nPhG/EUocKgm+CA38vl88y0NI3HZ+USsMn
jt08NT0MeKwbj9V5SfDuxKeWdqJvghby55cs0CD09+datw4GjtA8Ln1bS8cW
0PlufWdgTn7+bbcdHdfW7BmrmGPg11cusWOudKRdt07cLUbm98OeOa0EOkIS
j2R8UiTxRvBcKm+k4/WwiUMO6TdfuvXpzX/oGGTpSimwmXgcY5FTMENHY035
k2XBTNj7OZ8X6qODFp3+6dBFJg6opjWuqaIjWmSP6TMy7ywFlVXhXXQ4fd03
JV7PxNtdTbdrRSzgrbjJOIzMZ1JH0qTTdgtwZiwT29ZJ8q9EETweZ4G9e7bk
DZP+czWwmaQ1kvNZWVyizUy8NLt2fYDDElfzRcpW9BL9cv1g1G1YomY/q7pk
lMS35vTnSVdL9OvPfLlF8LN/wOy6yjVLuIYZ/vwiwMJJu6r9W3os8fKCaCxl
JfGvfqtb5FdbYevF+YU3pH/WFO66LW9nhaU2N3/+ImtX94QQrWgr9J6Lto1Z
w4K/uq+I4RMrLOR2Ka6TZeHdPV968hcrqLS07kwHC8Y3zsilVlnhfxRdeTiV
XxfNTJMGSRo0SCVknocV917TNd73vfciiV80kpmUJCGJhFLGSmlQhhJJVKQk
RKgkRWlOGZKp+M7353mOc96z915r7bXVU4Et185VOTviXfJH7dQ4G6xqlVLW
2Un8iG/5sIUzub9jJPBRhCOeb/Z3+xFig+3rMqVWkXn5uF7DzdwsG9SE+3n/
u0Xm018rPfWO2aClucamjvgd86NuUubRNsjOFP6S9pv0q5oXuoGWNnBUnFP0
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
kSkWrfOI/0rOe63uX695xBTrP1Bn/iaQ/GzdofaKb4q7H0qLD+XycX7ewRRp
O1N829k/uLKGD+HBm/qPIkzhn22k+eUlH/d7Pk+bec8UUfGrTsq08rGmJds1
fcwUj3UOuag84uPfFa9vnhpmaJiTn7rnNh9qz9S///I3g4VawgTjLh/m69Rs
O4vNUPvaWGRnKR8K49FCBV/NUOh6L3MOOS84/Op5ba8ZzlXFR4x+5GN/75sn
+qS/6NTYrjkv6AQzj77LX7QYuHxTT6dJygkvdOdyNxF+vQndKvVXxgnWr8r5
rqQ+vyfpP7aSTtB3bxCoqGTA87CUSssvPmTzslQ9qhjAJrOMlmd83L4X/fDE
RQZKYzg7HG/wMS4e+i6thYGM7lgvmQwS7wwjj5NzmTh+LC4jLp0PmZhCC2s9
JnS3242du8nHSJbGyB2i9/8e1E87eI8PjWMbs9WLmegz9Bb5+4QP7UjPrcyf
TEj2jf85RvKl1i3kDxUWXreEXqt5zkeMY2Xi250seKr71UTU8XHuc+KJU/Es
MCwsNaeu8QlPf96LesrC4taEO7EEbwPTdx9cK2oOcQn9IH4FHwclD9mdgjle
PbrF3UbOJ71PnTx9wBzLbwuIOTbzMVhdnuKcYA6tVUvtgkj8xSuMpMTJ+oVS
rGYQyY/olaoVc2lziDDc7SaWOWF/q6f1qRXmeJhQ7TGp5oQqd/ErQu9ZKDwy
b4+NihPC65d8ED7PgsRGncJiso7+/lO1NICFp4burnUMJzx4Mzer0IGF55RI
0Xs3J5wTWWAxasiCsBPj8roDTticOq50R4+Focb2lXLZTji59vXutsUs5HdK
0DvvOEFCWV3Ia5SJrbKuO+a0O6Frp+glPGPiTFdLXcJdJ5R4WTvon2Ri5s+M
sFmFTgj+sJnV7s5EUdVClly1E3g9Lzm/V5B+JLJAYc19J4x9NHnf8IeBdMGW
5OjLTthd7La1qZSBjlvBd36T9ePBI1ubgol/kF4WNEjW0Y0zauU5xA9lfVXY
kugE1Z/caXYaDIi+ro7O8nfClePz387+Y4aTOxaqcnc4YdcXfE3oMENVwKyo
QrYT1B8V3LKRYMCrIalti44THq257vxRl4ElL7h3J1aQ+9fNFHK1IP5rk3fK
T4LnNwOhZwoInr1jm2hOL9GXTdeeZTgxoLAzpu0lwY/SqeCV808wMD/Tp6W7
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
Q/jmvK/lfP8LC/yrqj3wmbzvv7T2PjbRn1/F3hpRtTSuX35689VWCwT2cjU1
Oog/1UhPVFQk+mWUozhG8LGpuGJh/S9zXP7k9Uua3B+VYju+TM4COxZL/jxL
9LM7vWiX0CYL0F1n9B9P0niy1OD8twALSBgZT5fpodHyeuYUCxa4dT6hRLWJ
xk/RgRtmZP0v8nSJKslf9N/s4VFhEk9pyXP58zS+M0ZTLr82h5tN+5OVR2kw
0x2yluWYo/vbqm5PMh8+bmhsOetmDkZO3mo3Ms8rGDa9mdIwh7NmXuawB/Hr
Ztv0o0RJ/Q7MdQ/dS+a5XXZiS6XIvtkj08rTNKap12VpEv5LD14ovkn0vHFb
vpsi4b+f1Bnzppc0lq5ua77Wx8K7gmVpv37TCNk3ef/RdRYMMsI33/1DI3xm
hOxQEAvXJ+dkS5P8Xub/Zy2qzYKwh8+03C80Zjw+UvdajoW5Vi/qL4ly8eBF
cn5sPxPKty9VqxP9tlAq53oTvsnJsqXyFLnQUdnX1RrDRKNSt00o6Wc7dslM
f8Vigr01QVsNRK+t6Nxry5nYHXesvduJC+PCtroL1oRPj6e+pflxIbzt4miS
NxPrE9Mj7xzjYtC1YnEamIhNFDh94P/zoFSPwVlhJkb2Npy3I/pzK9EsMq+d
Ab0tx8dSyLzZlzhmfOYfA4mFfk9TdnDR9aC548FnBn55n0qPsObim0zJ2p5W
BmTlaquklIm/Cpzm61bGgPGDAFOfOaSfc88+Uopg4LJwd+AyAS7k3G+u/Mdi
IFfnV89TMj8Vt3a/1Zdj4LVAzo7bBL9GHSd2KX42wwffd35rSL52h7s8Ky4y
wxsfptzvURr2/R/szSPMsHeeCz+b+OXbA4dWLIUZ4rZtDa/9SuOU77bnmYJm
mL3CUufsIJkP1i7W3//QFBuS5MQGCN9nImg++4wpplqNfDitNDTSfLcb+Jni
ZfWAgdsdGlyrav70E6YQn2i+mE7mmY7dEWk5t01RYXfCM4jMOzKznJy2/DZF
8/t33yYJfjzqDh9ZLWOGsIKQ37GpBC8dHQNf7c0wvypo2DaXzA8BPXdYx8j7
5rUdZZB5qFhcTmQsywzdAQ9/RiWR/n4xJcRjlxlKhe5Ofd1Pzt9Z3O9gagZN
o3jnoJM0xKNyjh9kkXwomr/6j8xLN/Jezc1fb4YbpT0CfsQfPJlNP3giYoZr
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
1IbdkQbDMw4U/B/HebRFaWPkZ+XBNncK15cmCtZ4aWNCpTJ08iCFqLcv5+r6
amOl9QOpL2cpzPliIjn+TwsVHeGPuSQ/7foOc8W/a0FSSynhbxNZL8tffpX4
MZuAwtZeomdeO6vOpJ/RhlmZSO2OcQqTcZ8yVWfqIN7uafo1cRpBh8oCF/nq
IOGqjO/1JTQ22mT7GXzSwX8n7/q4zKGx3H2/6m0HXXw8yuBMTFJQf15+4Uys
LhTfpIT8JvWjE45P3/leF3/oOZ7bnhK9bQ2o/WGph7ltvt6ptyls095jtGud
HjKLLP+dPUPq0Zy1JJvgVYB/2Vya+IWM8PT2zRp6WH36qXE30feLAWq7a8Z1
kbmvq1uJ5G/eOb/fatZ6eHFXUs+C8LFpJUN1kZcenqyP0Z4i9ZqSq3XIYetB
dsHSJbmfOdiaLibc3aOLqwLUmfF2DhQjNR2ueOridNiZF2jioDRn31TesA5K
XZOHaqo4eOr4L3RDqg4a0icbRK5y0Kf2UsJvji7io5dNcs8TPjfUSZ6O1sUE
2zbT/yQH5w4cfGz5UxfXZXcXdV7iQNa6/ESHpx7OrDrYYXGTg4wsQcWVxXow
mJG7XLGRAwuZb7f/zdVH5LnjVQvek/vF9csmk/TR6fajZu4nDiTFN53bN4fM
J18a6/q+cHBZdPrgWx/Ch08XIuyJns1i1GckFhiAoTwQlFjGQUCl6Ybd4oYw
dzj15eFZDu4I7Oel/DJAwC2Ru1siOThwy1nq5j4DOMZP5dcFcODalxzVMJfs
3+90eObOAVUU+UWTzDt3rx7UWG3GwY2dMQZa3vrwdd/2YBpZa8v9+PH6px6c
XHi1yyw4SG7aXWPkqwfnZ2bBu8n+99z4Jna/Ljjf60wDTTn4MHABYad1cerH
nhyl9RwsKWjsCNqgiy3b5ZRDjTiYF/ixIfarDoptE5OYfA5ebZV2vRmggzui
Anm1WznQ2nNy+Lm9DgZKG4qOR3GwyPa1/SVZHXg+6PqaQOILL6gWvcTUgZ3S
2OtiUq95XdY1qasIXu9utjvaxUHDnKVBV8m80csJfGr1gYPCZNwMXq+Nddfz
Nzf/IO8tXZLaNK6FjYH0rh1ETx0+qZxofKSF6BvWr/LWUChsaudrsrWw++Db
8A5V4mcE/kfRecdT/f1xvIwWZYui7L2uce+1XyIJ1733cy99S2kQKiWU0jQr
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
6RhK2O5Qs9wdf3t1LFoM6Nhdo63T6+OOGNV7luoOdDx/vvvM9mh3XNVUzhG6
R8ePejGFgwnuSPrNesswZsDF1lb5x1l3vPil+Sg6kgEr4cky4Uh3NDEFP828
z8ChlYE2cr7umDlzU+uKIQbiVWV7JZzcMfan3K5/IxOx3tJ9by3coaV4yVtf
iAk303X9UuruWOXvuOhRLAOKcV++7jBwB++7TX29PAMWStclhq3d8ca+/5JW
MR27bFcXO5B5a4m+yqwaOkrv6ouWLHDHVvOr5XhEh+YB3rybw3wEppYNJIfS
8aE+t3Z/Ox+dDqf2GfrQ4TDoV9xSwYdoktjc3mg6eO2dVO9pwoNj5ryOYTrG
frWrDEXzwfiervVjFQPjo7X/jNL4UIldJMQuZGAha46gfBkf328dcxJKY+DF
ccsvTc18LEg9tnFjJwOORU4ruYN87H5Bu1zmyoTHf7XTo2/42M696zVhzETE
jLihjBo+zoouXm9fxQBDnycVRfajc1IjVtycgV/W7f/J3uQjd3ncBambdHiZ
zIzLr+JDftFg7V5zEs/491latwnfFv17lXDLDAvU256y7vLB2q5w3eY/M9w7
IsRvLuYj9sHnM0cFzaDgacNsO8HHty3pNvMtzTCyqEjo324+Mllco////kxA
/G/olYN8vFl0iea/lA7X/tuFLsl8yOyxr3TUp+PE5bzti8l5Cwx6m9O20NF9
zrSP38iHp8KamNvjZpA94NXFe82Hj5ngzanzZpj3qcR5008+Nq5M2H/CzwxG
ibSR/8TckVJ+aoc2ywzQtrtSSOL36r6n42kNM0SlX27VZbnDjy3PXlFoinqX
JoYn5Q6+0L2+2TGm2DNw8NCSIHcsfNNpLbDDFGu+3/mYnkzGvv9Wbf9hglMz
94X9SHPHZiosbW2pCbq6mv6uLnfHEYaxXmSdCYxnWg+2tbnjZmvsWkeaKYrv
bDgV1u8O5UP+4UKRplD8eEjB7Z87ZrMLfx7jmkK0b+zW4CIPFPH2XbvfaoKz
9qX5TQoeONi28pOOpwk2XNpf1anlgarSG/KP+ozRHfHlzj9jD4iKb7nSGWOM
qfKpHctWesD/gOK34yrGWNvZYLlrnQdaFm/duKychi397Jxl2z1go2hZcNma
hqyutlfnN3iAvV1vwbHHRmD06J+LIvOK/rmxc3lG2HE7b33rhv//e2HTErmr
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
bNv2wzRX1FRr8o+RY768VJDaTlc4CIcI0klec2t/qND8wBVWc/18r8VTEf1j
jdr0H1eoPFxwNJC8PzWJG4Hu066QffPx6JEmsq9EWmdpdblCzEO7ZUKaBocH
Ncsb3ruiinWX5celQXdH8qQCOc7KWYk1mTTE6ebt2fDdFZ8k/RwDXtJw7EOq
0OcRV8woqhrdF6dDBdd7+pXcIFm8XlHfmQ7vl3b51aZu2KegnLY8gY5vwq2X
UkLdsDRa1vRXAB1W4qefJF5yQ2rS64lF5L18KrlhnfjNDYt7VJ+eIsdO5bg0
KO+OO5S9yxzI/tJ8OHTHheeOM4aKt0sOk/21oCfMa5U7nm1f4RxUT8e/+pA7
yxXd4Xb2XKd1D6nDJnm2WT1uSHSvd/9M5sjQIZ+a/Otu2D1rVrvrGB0G3Sf2
zYki99M1sUqog44vz3w8lcn96iWU/Mn9Rkf/M1+5zL+uWPPv/qMIkg+/PHks
qfTIFbR53d4vWkj+aVuYXSJwhY+yIe/NWZJ/claetyx2xbyAs5mU9XTsAGK1
b7pCvyazl6dGh1nmju/u98h8qL7E90wbDbX09yu/XnPF/dnyxqL5ZD0/H53/
Y6srzGsYFxx2kzlK19T++HpXGK/+WvedTkP3hv+sq/1c8ZHCnD1vLg3jduEv
vUjdLBvtk2kmdXnp6bK+BlI3h3uazjwmfVOqP7Mv5S2Zf7vff6vpoiLy8sLr
LrNdUTdcFJFA3rdmX0De+aXkfVaFv3AmdVtp42T9ARJvUyybPWlkXzo82379
rr4r9PQ8hjRJ/iltrJ67WobEh/ySpV5/aXi5ZtuFlF8uKL//ZeKKHsk7HzWP
rxt1Qa1aZWjFZlK/QhY9k1riCl5GGEvrHFnPNI9jHBFXhNdJ2F9opkM31do3
r94F6jKVxavJ+7gaeDiGOO6C7a9HmZmLSX1+mz4UFeOCA+cOMn6zyXVqlrCs
rV0QdWHTyw5Sr12/L052VnVB21vDRzO5LjDdfkP7MPncKYXVikZPXSB48MTA
JN0FyzJOMYs/uaBszd5twgIXiNaULX4+5YIQEYeyvx0uqBB9US6wcIXhfhOu
xBxXdKf+Pq0aStZ1TpCY3yJXxAzqM4RI/zJ6ZIiX/cUF/Q9+blxc54pZ6eai
/6PovMN6ft8o3kCSkiZSihShNLTH+ey9GjLSNBJCQ6m+GppKSXaojIjsIhEi
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
xNMZkwh/d8c/1VZ2wtripF62Xej3qmz5Un1cf7LiDKlfPSIk7jZ4va4Oy1yg
9v6lQ/aSq90DUk9td9DC92V+oYM7paGwPP1hdQdlsWJZIx3O0FIbg9+kVqdU
LNa5F9BhmwWhm1X60DY5eYNr70k6VC1+vdfr895WQKgsx+kKHaIP8ryQiTla
ve5F3ZLDJJ89T70kZ7Oqt3pWLzoitoQOMst2Xt1e/aO6b0R1V+lzOuhfFQlt
zJqsftOdcYBWS4fl1xq/zPJNV/94bDZR1EfOayh3sW/MV3+zLj62d4YO+zmR
Y5Qt3Jh9IFz5OjnuD1McLjnAg/veDIVvX84AzWf2s+6z3LjpRnG4oQXpT4lV
hWfLuVCOwzmXs5kB3iGCNVxxvHhrQWFpFRkfdoNStc8UHz7i3hSZRfKDsToX
RvE1Xrwid4TTdI4Ba1Om5z6H8+H6oYta0iQ/cD9hcuNnAD9KrHj7a5HMl5Cb
fOV20sK4ii9ZW5/Ee0sl19UjL8Rwn+jGo8ffMiByYviftLckLp/hd5V7xQBj
uegQuV4pHGJ1O1K/MODPTwnrE7kyKLW0+XTXOAOERs13p+6Txf7ji9P5Swi4
Xzvr6/9aFv9EDt7kVyf7dZDQeWuWLP7ewLQxBgLscv+tekiVxZ+7hH5IbiP5
7iLjqImZDH67HnqHzibgoVe5yQuWFCpyRqlcm8j+/9Y51f+dBG7PPfKfzn8E
PK9bcyv5vijmuGrwRVgT4Hcn9fskrxB2Zov7qa8nwKq/brTXSwidogJJcknA
r9tFAm9viuLip7fWy+QIODYqLRpqJYHNdNWZCWOyngvmZ0rDJFEiwsxgqRMB
nDvaRlWG0tjWsN3yBYMApZ6ZmuEly3CT3HXu7F0ETNTwM/sEl+EpoQreS2T/
Nx5LsntXLYMO9+OH114n4NVJt/92HZRFTZpn745SAnpLzyxu9F2O25hpy4Lb
CEizKxxYSpFDy7/m1xRGCZDJ2WOvIySPi63ME00iTKAP3dJ22SiHmfzuERn6
ZL8bVxq9mySH7SOz3oz1TDB5Rhj9/CqPhpHBRz75MGFQaSVvzCpFfBA/U/Aj
nMTj3yo+ifrK+KJ9e///+crkQIXAhWIVTHdf6LYk+UxtDleDzIQq3k2K4WkL
ZoLpRIfl8QpVvKP5Vyw3iwlW3TtjmvXU0MPuzB5KCROqDpfpTBFqeL49Viyr
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
wvDz/wBwptb/
    "]]}]], "Output",
 CellChangeTimes->{
  3.813845903901312*^9, 3.813846023599612*^9, {3.8138461171615973`*^9, 
   3.8138461366446247`*^9}, 3.8138461801550694`*^9, {3.813846230693232*^9, 
   3.8138462400378532`*^9}, {3.813847407088175*^9, 3.813847425338678*^9}, {
   3.813864661396385*^9, 3.813864681165333*^9}, 3.81392410119116*^9, 
   3.813924612115697*^9, 3.81392498351623*^9, 3.8139250609832973`*^9, 
   3.813925107345027*^9, 3.8139371307722673`*^9, 3.813939128551057*^9, {
   3.8139485863592587`*^9, 3.8139485955615664`*^9}, 3.813955663460692*^9, 
   3.813957240756968*^9, 3.813957483650622*^9, 3.81400488112953*^9, 
   3.814007111280677*^9, 3.814020997380834*^9, 3.814021227956998*^9, 
   3.81410369295679*^9, 3.814103885660779*^9, 3.814103960469306*^9, 
   3.814104061834895*^9, {3.814104100215289*^9, 3.8141041240289297`*^9}, 
   3.814104155622067*^9, 3.8141042651934958`*^9, 3.814107779369252*^9, 
   3.8147134589955063`*^9, 3.814729447573285*^9, 3.8147298434858093`*^9, 
   3.814784181697112*^9, 3.814785269622414*^9, 3.814786874877342*^9, 
   3.8147871858724318`*^9, 3.814787252923416*^9, 3.81479057163062*^9, 
   3.814799153792922*^9, 3.81479927103475*^9, 3.8148035492463818`*^9, 
   3.8148087891949053`*^9, 3.814816060275551*^9, 3.814817078198722*^9, 
   3.814817205162684*^9, 3.8148179403177443`*^9, 3.814818384568869*^9, 
   3.8148199236110353`*^9, 3.81496288042898*^9, 3.8149642769744673`*^9, 
   3.814965666467696*^9, 3.814968804076478*^9, 3.8149823342680483`*^9, 
   3.81498245372396*^9, 3.8149865263020897`*^9, 3.814986667309752*^9, 
   3.814988052428244*^9, 3.81504550050394*^9, 3.815048194531563*^9, 
   3.8150491171666307`*^9, 3.8150536094949636`*^9, 3.815056204100078*^9, 
   3.815134416908354*^9, 3.8151351851264963`*^9, 3.8151355212863283`*^9, 
   3.815136667447343*^9, 3.815136717375084*^9, 3.815136833383016*^9, 
   3.815137191792659*^9, 3.81513740715162*^9, 3.8151375422456083`*^9, 
   3.8151376322072153`*^9, 
   3.8151387308775797`*^9},ExpressionUUID->"754d3f16-8c3a-48b3-8ce0-\
d416f56b35a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"random", " ", "walk", " ", "for", " ", "\[Omega]"}], " ", 
     "\[Element]", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], ",", " ", 
    RowBox[{
     RowBox[{"ie", ".", " ", "at"}], " ", "any", " ", "new", " ", "segment", 
     " ", "we", " ", "can", " ", "turn", " ", "up", " ", "to", " ", "360", 
     "\[Degree]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"randomWalk2D", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Accumulate", "[", 
      RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"DiscretizeRegion", "[", 
           RowBox[{"Circle", "[", "]"}], "]"}], ",", "t"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], "//", 
     "ListLinePlot"}]}], "\[IndentingNewLine]", 
   RowBox[{"randomWalk2D", "[", "100", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
      "forward", " ", "biased", " ", "random", " ", "walk", " ", "for", " ", 
       "\[Omega]"}], " ", "\[Element]", " ", 
      RowBox[{"{", 
       RowBox[{"0", ",", "\[Pi]"}], "}"}]}], ",", " ", 
     RowBox[{
      RowBox[{"ie", ".", " ", "at"}], " ", "any", " ", "new", " ", "segment", 
      " ", "we", " ", "can", " ", "turn", " ", "up", " ", "to", " ", "180", 
      "\[Degree]"}], ",", " ", 
     RowBox[{"aka", " ", "never", " ", "look", " ", "back"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hemicircle", " ", "=", " ", 
     RowBox[{"Circle", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}], ",", "1", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "Pi"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randomWalk2Dforward", "[", "t_", "]"}], ":=", 
    RowBox[{
     RowBox[{"Accumulate", "[", 
      RowBox[{"Prepend", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"RandomPoint", "[", 
         RowBox[{
          RowBox[{"DiscretizeRegion", "[", "hemicircle", "]"}], ",", "t"}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}], "//", 
     "ListLinePlot"}]}], "\[IndentingNewLine]", 
   RowBox[{"randomWalk2Dforward", "[", "100", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"use", " ", "'"}], 
     RowBox[{"sphere", "'"}], " ", "instead", " ", 
     RowBox[{"of", " ", "'"}], 
     RowBox[{"circle", "'"}], " ", "and", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], " ", "instead", " ", "of", 
     " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}], " ", "for", " ", "3", "D", " ", 
     "walks"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.81384640321416*^9, 3.813846425406901*^9}, {
  3.813846462822544*^9, 3.813846524677104*^9}, {3.813846623465032*^9, 
  3.813846686585334*^9}, {3.813846738158218*^9, 3.813846823477771*^9}, {
  3.813846866364492*^9, 3.813846879842493*^9}, {3.813846916554977*^9, 
  3.8138470085657387`*^9}, {3.813847440722952*^9, 3.8138474442756557`*^9}, {
  3.8138504098264837`*^9, 3.813850453362646*^9}, {3.813864704792873*^9, 
  3.813864710346952*^9}},ExpressionUUID->"f171ce58-9374-4ae7-8550-\
ee8a5605daea"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
FwP+DTQsEFA=
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-7.483394336033326, 3.4784488443376316`}, {-2.180982104552055, 
   7.225714988791221}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813846409979599*^9, {3.8138464823237047`*^9, 3.813846485293374*^9}, 
   3.8138465252731123`*^9, {3.813846652557856*^9, 3.8138466875420227`*^9}, {
   3.813846736908052*^9, 3.81384677392624*^9}, 3.813847136389312*^9, 
   3.8138473693641148`*^9, 3.81392410121634*^9, 3.813924612140717*^9, 
   3.813924983540765*^9, 3.813925061008547*^9, 3.813937130833633*^9, 
   3.813939128587967*^9, 3.813955663498867*^9, 3.8139572407944593`*^9, 
   3.81395748369034*^9, 3.81400488117766*^9, 3.814020997419609*^9, 
   3.814021227996965*^9, 3.814103692982345*^9, 3.814103885844221*^9, 
   3.814103960496893*^9, 3.8141040618610697`*^9, {3.8141041002920303`*^9, 
   3.814104124183568*^9}, 3.814104155664893*^9, 3.8141042652224207`*^9, 
   3.814107779398736*^9, 3.8147134590369253`*^9, 3.814729447616439*^9, 
   3.814729843538484*^9, 3.81478418173547*^9, 3.814785269660503*^9, 
   3.8147868749028597`*^9, 3.814787185916464*^9, 3.8147872529603777`*^9, 
   3.814790571658317*^9, 3.814799153834021*^9, 3.814799271064149*^9, 
   3.8148035492814827`*^9, 3.814808789234322*^9, 3.814816060304182*^9, 
   3.814817078227365*^9, 3.81481720518918*^9, 3.814817940345583*^9, 
   3.8148183846086693`*^9, 3.814819923639429*^9, 3.814962880470725*^9, 
   3.814964277011722*^9, 3.814965666504669*^9, 3.814968804117981*^9, 
   3.814982334294745*^9, 3.814982453764904*^9, 3.814986526343007*^9, 
   3.8149866673497047`*^9, 3.8149880524549303`*^9, 3.815045500544916*^9, 
   3.8150481945598307`*^9, 3.8150491171953993`*^9, 3.815053609522003*^9, 
   3.815056204126441*^9, 3.815134416948669*^9, 3.815135185165399*^9, 
   3.815135521327386*^9, 3.815136667490974*^9, 3.815136717404415*^9, 
   3.8151368334136267`*^9, 3.815137191834482*^9, 3.815137407179607*^9, 
   3.8151375422735558`*^9, 3.815137632238401*^9, 
   3.8151387323485107`*^9},ExpressionUUID->"251ce2e7-5073-4f11-ba71-\
774ac6132db5"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.01388888888888889], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
      
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-12.990752232835272`, 0.39705174292155443`}, {
    0, 67.05278085756494}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.813846409979599*^9, {3.8138464823237047`*^9, 3.813846485293374*^9}, 
   3.8138465252731123`*^9, {3.813846652557856*^9, 3.8138466875420227`*^9}, {
   3.813846736908052*^9, 3.81384677392624*^9}, 3.813847136389312*^9, 
   3.8138473693641148`*^9, 3.81392410121634*^9, 3.813924612140717*^9, 
   3.813924983540765*^9, 3.813925061008547*^9, 3.813937130833633*^9, 
   3.813939128587967*^9, 3.813955663498867*^9, 3.8139572407944593`*^9, 
   3.81395748369034*^9, 3.81400488117766*^9, 3.814020997419609*^9, 
   3.814021227996965*^9, 3.814103692982345*^9, 3.814103885844221*^9, 
   3.814103960496893*^9, 3.8141040618610697`*^9, {3.8141041002920303`*^9, 
   3.814104124183568*^9}, 3.814104155664893*^9, 3.8141042652224207`*^9, 
   3.814107779398736*^9, 3.8147134590369253`*^9, 3.814729447616439*^9, 
   3.814729843538484*^9, 3.81478418173547*^9, 3.814785269660503*^9, 
   3.8147868749028597`*^9, 3.814787185916464*^9, 3.8147872529603777`*^9, 
   3.814790571658317*^9, 3.814799153834021*^9, 3.814799271064149*^9, 
   3.8148035492814827`*^9, 3.814808789234322*^9, 3.814816060304182*^9, 
   3.814817078227365*^9, 3.81481720518918*^9, 3.814817940345583*^9, 
   3.8148183846086693`*^9, 3.814819923639429*^9, 3.814962880470725*^9, 
   3.814964277011722*^9, 3.814965666504669*^9, 3.814968804117981*^9, 
   3.814982334294745*^9, 3.814982453764904*^9, 3.814986526343007*^9, 
   3.8149866673497047`*^9, 3.8149880524549303`*^9, 3.815045500544916*^9, 
   3.8150481945598307`*^9, 3.8150491171953993`*^9, 3.815053609522003*^9, 
   3.815056204126441*^9, 3.815134416948669*^9, 3.815135185165399*^9, 
   3.815135521327386*^9, 3.815136667490974*^9, 3.815136717404415*^9, 
   3.8151368334136267`*^9, 3.815137191834482*^9, 3.815137407179607*^9, 
   3.8151375422735558`*^9, 3.815137632238401*^9, 
   3.815138732385191*^9},ExpressionUUID->"9c5cb52f-ea5b-4ba0-8eb9-\
446edfb3f0e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"2", "D", " ", "simple", " ", "random", " ", "walk"}], " ", "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"step", "[", "position_", "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"t", "=", 
         RowBox[{"2", "Pi", " ", 
          RowBox[{"RandomReal", "[", "]"}]}]}], "}"}], ",", 
       RowBox[{"position", "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Cos", "[", "t", "]"}], ",", 
          RowBox[{"Sin", "[", "t", "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"walk", "[", 
      RowBox[{"n_", ",", 
       RowBox[{"origin_:", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
     RowBox[{"NestList", "[", 
      RowBox[{"step", ",", "origin", ",", "n"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distance", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"EuclideanDistance", "@@", 
      RowBox[{"aWalk", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "calc", " ", "dist", " ", "between", " ", "first", " ", "and", " ", 
     "last", " ", "pt", " ", "in", " ", "the", " ", "walk", " ", "list"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"draw", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"Graphics", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Yellow", ",", 
         RowBox[{"Line", "[", "aWalk", "]"}], ",", "Dashed", ",", "Green", 
         ",", 
         RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"aWalk", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "]"}], ",", "Black", 
         ",", 
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Point", "[", "aWalk", "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\n", 
   RowBox[{
    RowBox[{"step", "[", 
     RowBox[{"{", 
      RowBox[{"10", ",", "0"}], "}"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", "=", 
     RowBox[{"walk", "[", "50", "]"}]}], ";"}], "\n", 
   RowBox[{"draw", "[", "w", "]"}], "\[IndentingNewLine]", 
   RowBox[{"distance", "[", "w", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.813847540004753*^9, 3.813847674953102*^9}, {
  3.813847720552286*^9, 3.813847756804975*^9}, {3.8138478171967163`*^9, 
  3.8138478528764763`*^9}, {3.813847919523765*^9, 3.813847979981798*^9}, {
  3.813848022573563*^9, 3.813848070045754*^9}, {3.813849227544361*^9, 
  3.813849236637508*^9}, {3.813850278473023*^9, 3.81385028040508*^9}, {
  3.813850478922635*^9, 3.8138504846569767`*^9}, {3.813863428995867*^9, 
  3.813863430072359*^9}, {3.813864087304076*^9, 
  3.813864120531784*^9}},ExpressionUUID->"dee57b5a-658d-4194-8efa-\
998b785bdd01"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[1, 1, 0], 
    LineBox[{{0, 0}, {-0.49046829328373354`, 
      0.8714590370656222}, {-1.3695302696152674`, 
      0.394751535794562}, {-1.2514267507632857`, 
      1.387752824230171}, {-0.4588830737248054, 
      0.7779376719206167}, {-0.45837952989042396`, -0.2220622013011787}, \
{-0.9030940384892361, 0.6736101750964174}, {-1.7759217662168014`, 
      1.1616386145442994`}, {-2.7692778381478447`, 
      1.2767199525523698`}, {-2.5035317571014732`, 
      0.3126768931361965}, {-3.321154157776674, 
      0.888431710670641}, {-3.4675626025269666`, 
      1.8776559356600013`}, {-3.4200748343995016`, 
      2.876527755203566}, {-2.4457341353095967`, 
      3.1016059684917376`}, {-1.9915958719272397`, 
      3.9925371879088467`}, {-1.0477618926184231`, 
      3.662117122685676}, {-1.9970796799695711`, 
      3.976435016892673}, {-2.6721775438767312`, 
      3.2387068324317636`}, {-2.0088756115096267`, 
      2.490354945604407}, {-1.0142422248634033`, 
      2.3868927487948284`}, {-1.907700895765374, 
      1.9377473342684373`}, {-2.723996267688916, 
      2.5153820508291775`}, {-3.6991054613947507`, 
      2.7371072418886433`}, {-3.374282088983164, 
      1.7913325452852908`}, {-4.367534867327029, 
      1.9073020167516754`}, {-5.159375080073792, 
      1.2965736995130186`}, {-4.917517896581736, 
      2.2668855580375293`}, {-5.658427461178516, 
      1.5952807508115767`}, {-4.794895874510444, 
      2.0995755047269045`}, {-3.8753621382403365`, 
      1.7065644261793187`}, {-4.751940076022437, 
      1.2253044974571359`}, {-3.8777795924066463`, 
      0.7396673398130698}, {-3.5912995206761313`, -0.21841886116327192`}, \
{-4.53277245753291, -0.5555074387897947}, {-4.544860752713529, \
-1.5554343726802795`}, {-5.444456408597289, -1.9921581479834645`}, \
{-4.454079948571201, -2.1305578135401233`}, {-5.332891024501526, \
-1.6533879351716485`}, {-4.333979364368836, -1.6067457305608799`}, \
{-4.658506235283685, -0.6608692533958025}, {-5.52832699426914, \
-1.1542371153790967`}, {-6.475460340852861, -1.4750772995660535`}, \
{-6.92620423830105, -2.3677306135201417`}, {-7.347430746314391, \
-3.2746860859370006`}, {-6.391314962031749, -3.5676751762553742`}, \
{-5.952238754858, -4.4661249991692165`}, {-6.923862426247909, \
-4.702657113679685}, {-6.137584796398759, -5.32053047351874}, \
{-6.900779551600824, -5.966699000787022}, {-6.386956719314427, \
-5.10880268011582}, {-6.4863452303736935`, -4.113753975845812}}]}, 
   {RGBColor[0, 1, 0], Dashing[{Small, Small}], Arrowheads[Large], 
    ArrowBox[{{0, 0}, {-6.4863452303736935`, -4.113753975845812}}], 
    {GrayLevel[0], PointSize[Medium], 
     PointBox[{{0, 0}, {-0.49046829328373354`, 
       0.8714590370656222}, {-1.3695302696152674`, 
       0.394751535794562}, {-1.2514267507632857`, 
       1.387752824230171}, {-0.4588830737248054, 
       0.7779376719206167}, {-0.45837952989042396`, -0.2220622013011787}, \
{-0.9030940384892361, 0.6736101750964174}, {-1.7759217662168014`, 
       1.1616386145442994`}, {-2.7692778381478447`, 
       1.2767199525523698`}, {-2.5035317571014732`, 
       0.3126768931361965}, {-3.321154157776674, 
       0.888431710670641}, {-3.4675626025269666`, 
       1.8776559356600013`}, {-3.4200748343995016`, 
       2.876527755203566}, {-2.4457341353095967`, 
       3.1016059684917376`}, {-1.9915958719272397`, 
       3.9925371879088467`}, {-1.0477618926184231`, 
       3.662117122685676}, {-1.9970796799695711`, 
       3.976435016892673}, {-2.6721775438767312`, 
       3.2387068324317636`}, {-2.0088756115096267`, 
       2.490354945604407}, {-1.0142422248634033`, 
       2.3868927487948284`}, {-1.907700895765374, 
       1.9377473342684373`}, {-2.723996267688916, 
       2.5153820508291775`}, {-3.6991054613947507`, 
       2.7371072418886433`}, {-3.374282088983164, 
       1.7913325452852908`}, {-4.367534867327029, 
       1.9073020167516754`}, {-5.159375080073792, 
       1.2965736995130186`}, {-4.917517896581736, 
       2.2668855580375293`}, {-5.658427461178516, 
       1.5952807508115767`}, {-4.794895874510444, 
       2.0995755047269045`}, {-3.8753621382403365`, 
       1.7065644261793187`}, {-4.751940076022437, 
       1.2253044974571359`}, {-3.8777795924066463`, 
       0.7396673398130698}, {-3.5912995206761313`, -0.21841886116327192`}, \
{-4.53277245753291, -0.5555074387897947}, {-4.544860752713529, \
-1.5554343726802795`}, {-5.444456408597289, -1.9921581479834645`}, \
{-4.454079948571201, -2.1305578135401233`}, {-5.332891024501526, \
-1.6533879351716485`}, {-4.333979364368836, -1.6067457305608799`}, \
{-4.658506235283685, -0.6608692533958025}, {-5.52832699426914, \
-1.1542371153790967`}, {-6.475460340852861, -1.4750772995660535`}, \
{-6.92620423830105, -2.3677306135201417`}, {-7.347430746314391, \
-3.2746860859370006`}, {-6.391314962031749, -3.5676751762553742`}, \
{-5.952238754858, -4.4661249991692165`}, {-6.923862426247909, \
-4.702657113679685}, {-6.137584796398759, -5.32053047351874}, \
{-6.900779551600824, -5.966699000787022}, {-6.386956719314427, \
-5.10880268011582}, {-6.4863452303736935`, -4.113753975845812}}]}}},
  ImageSize->Medium]], "Output",
 CellChangeTimes->{{3.813847586489656*^9, 3.813847604786889*^9}, {
   3.813847738917753*^9, 3.813847758662787*^9}, 3.8138478829764357`*^9, 
   3.813847920889474*^9, {3.813847955107581*^9, 3.813847974373514*^9}, {
   3.8138480352342463`*^9, 3.8138480708728247`*^9}, 3.81384923759235*^9, {
   3.813849364828124*^9, 3.8138493708358393`*^9}, {3.813850281300033*^9, 
   3.813850284085143*^9}, {3.8138504918600807`*^9, 3.813850494671752*^9}, 
   3.813863432254814*^9, {3.813864088015332*^9, 3.813864124851383*^9}, 
   3.8139241012830257`*^9, 3.8139246121871347`*^9, 3.8139249835774603`*^9, 
   3.813925061049095*^9, 3.813937130912012*^9, 3.813939128679549*^9, 
   3.813955663627657*^9, 3.813957240843829*^9, 3.813957483732456*^9, 
   3.814004881239066*^9, 3.814020997494741*^9, 3.814021228145966*^9, 
   3.814103693031592*^9, 3.814103886030624*^9, 3.814103960662183*^9, 
   3.81410406191173*^9, {3.814104100351385*^9, 3.814104124408556*^9}, 
   3.8141041557365017`*^9, 3.8141042652743073`*^9, 3.814107779458461*^9, 
   3.814713459096472*^9, 3.814729447679356*^9, 3.81472984361369*^9, 
   3.814784181778372*^9, 3.814785269701621*^9, 3.814786874947734*^9, 
   3.8147871859774303`*^9, 3.8147872529987392`*^9, 3.814790571700819*^9, 
   3.814799153881568*^9, 3.81479927111541*^9, 3.814803549330564*^9, 
   3.8148087892793493`*^9, 3.814816060349474*^9, 3.814817078275215*^9, 
   3.814817205233309*^9, 3.814817940389545*^9, 3.814818384653631*^9, 
   3.81481992370992*^9, 3.814962880514277*^9, 3.814964277051064*^9, 
   3.8149656665438623`*^9, 3.814968804163651*^9, 3.8149823343552313`*^9, 
   3.814982453901075*^9, 3.814986526507236*^9, 3.8149866674519444`*^9, 
   3.814988052497459*^9, 3.815045500670951*^9, 3.8150481946020403`*^9, 
   3.815049117238735*^9, 3.815053609562942*^9, 3.8150562041763763`*^9, 
   3.815134416994274*^9, 3.815135185299128*^9, 3.815135521373228*^9, 
   3.815136667533004*^9, 3.815136717452839*^9, 3.815136833461967*^9, 
   3.8151371919864264`*^9, 3.815137407224023*^9, 3.815137542320448*^9, 
   3.815137632292369*^9, 
   3.815138732483879*^9},ExpressionUUID->"33a4bb39-d89a-4d08-b332-\
a4eccc2bd7a1"],

Cell[BoxData["7.680862335791391`"], "Output",
 CellChangeTimes->{{3.813847586489656*^9, 3.813847604786889*^9}, {
   3.813847738917753*^9, 3.813847758662787*^9}, 3.8138478829764357`*^9, 
   3.813847920889474*^9, {3.813847955107581*^9, 3.813847974373514*^9}, {
   3.8138480352342463`*^9, 3.8138480708728247`*^9}, 3.81384923759235*^9, {
   3.813849364828124*^9, 3.8138493708358393`*^9}, {3.813850281300033*^9, 
   3.813850284085143*^9}, {3.8138504918600807`*^9, 3.813850494671752*^9}, 
   3.813863432254814*^9, {3.813864088015332*^9, 3.813864124851383*^9}, 
   3.8139241012830257`*^9, 3.8139246121871347`*^9, 3.8139249835774603`*^9, 
   3.813925061049095*^9, 3.813937130912012*^9, 3.813939128679549*^9, 
   3.813955663627657*^9, 3.813957240843829*^9, 3.813957483732456*^9, 
   3.814004881239066*^9, 3.814020997494741*^9, 3.814021228145966*^9, 
   3.814103693031592*^9, 3.814103886030624*^9, 3.814103960662183*^9, 
   3.81410406191173*^9, {3.814104100351385*^9, 3.814104124408556*^9}, 
   3.8141041557365017`*^9, 3.8141042652743073`*^9, 3.814107779458461*^9, 
   3.814713459096472*^9, 3.814729447679356*^9, 3.81472984361369*^9, 
   3.814784181778372*^9, 3.814785269701621*^9, 3.814786874947734*^9, 
   3.8147871859774303`*^9, 3.8147872529987392`*^9, 3.814790571700819*^9, 
   3.814799153881568*^9, 3.81479927111541*^9, 3.814803549330564*^9, 
   3.8148087892793493`*^9, 3.814816060349474*^9, 3.814817078275215*^9, 
   3.814817205233309*^9, 3.814817940389545*^9, 3.814818384653631*^9, 
   3.81481992370992*^9, 3.814962880514277*^9, 3.814964277051064*^9, 
   3.8149656665438623`*^9, 3.814968804163651*^9, 3.8149823343552313`*^9, 
   3.814982453901075*^9, 3.814986526507236*^9, 3.8149866674519444`*^9, 
   3.814988052497459*^9, 3.815045500670951*^9, 3.8150481946020403`*^9, 
   3.815049117238735*^9, 3.815053609562942*^9, 3.8150562041763763`*^9, 
   3.815134416994274*^9, 3.815135185299128*^9, 3.815135521373228*^9, 
   3.815136667533004*^9, 3.815136717452839*^9, 3.815136833461967*^9, 
   3.8151371919864264`*^9, 3.815137407224023*^9, 3.815137542320448*^9, 
   3.815137632292369*^9, 
   3.815138732489387*^9},ExpressionUUID->"7b57a6cf-9f50-4c2f-b1a5-\
e798565bf752"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"3", "D", " ", "simple", " ", "random", " ", "walk"}], " ", "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", 
     RowBox[{"step", ",", "walk", ",", "distance", ",", "draw"}], "]"}], 
    ";"}], " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "comment", " ", "this", " ", "out", " ", "to", " ", "have", " ", 
     "everytime", " ", "a", " ", "different", " ", "random", " ", "walk", " ",
      "as", " ", "above"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "12345", "]"}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "change", " ", "t", " ", "to", " ", "Pi", " ", "for", " ", "forward", " ",
      "only", " ", "directions", " ", "for", " ", "example"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"step", "[", 
      RowBox[{"position_:", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "]"}], ":=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"t", "=", 
          RowBox[{"2", "Pi", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}], ",", 
         RowBox[{"p", "=", 
          RowBox[{"Pi", " ", 
           RowBox[{"RandomReal", "[", "]"}]}]}]}], "}"}], ",", 
       RowBox[{"position", "+", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "t", "]"}], 
           RowBox[{"Sin", "[", "p", "]"}]}], ",", 
          RowBox[{
           RowBox[{"Sin", "[", "t", "]"}], 
           RowBox[{"Sin", "[", "p", "]"}]}], ",", 
          RowBox[{"Cos", "[", "p", "]"}]}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"walk", "[", 
      RowBox[{"n_", ",", 
       RowBox[{"origin_:", " ", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}]}]}], "]"}], ":=", 
     RowBox[{"NestList", "[", 
      RowBox[{"step", ",", "origin", ",", "n"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"distance", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"EuclideanDistance", "@@", 
      RowBox[{"aWalk", "[", 
       RowBox[{"[", 
        RowBox[{"{", 
         RowBox[{"1", ",", 
          RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]}]}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "calc", " ", "dist", " ", "between", " ", "first", " ", "and", " ", 
     "last", " ", "pt", " ", "in", " ", "the", " ", "walk", " ", "list"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"draw", "[", "aWalk_", "]"}], ":=", 
     RowBox[{"Graphics3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Cyan", ",", 
         RowBox[{"Line", "[", "aWalk", "]"}], ",", "Dashed", ",", "Green", 
         ",", 
         RowBox[{"Arrowheads", "[", "Large", "]"}], ",", 
         RowBox[{"Arrow", "[", 
          RowBox[{"aWalk", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", 
              RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}], "]"}], ",", "Red", 
         ",", 
         RowBox[{"PointSize", "[", "Medium", "]"}], ",", 
         RowBox[{"Point", "[", "aWalk", "]"}]}], "}"}], ",", 
       RowBox[{"ImageSize", "->", "Large"}], ",", 
       RowBox[{"ViewProjection", "\[Rule]", "\"\<Orthographic\>\""}], ",", 
       RowBox[{"ViewPoint", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Pi", ",", 
          RowBox[{"Pi", "/", "2"}], ",", "2"}], "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"distance", "[", "w", "]"}], "\n", 
   RowBox[{"draw", "[", 
    RowBox[{"walk", "[", "100", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.81384872297688*^9, 3.8138488088780727`*^9}, {
   3.8138488450839252`*^9, 3.813848845802086*^9}, {3.8138489399491043`*^9, 
   3.8138489773392553`*^9}, {3.813849023469557*^9, 3.813849128495755*^9}, 
   3.8138491707476463`*^9, {3.81384925294363*^9, 3.813849349690893*^9}, {
   3.8138494070440063`*^9, 3.813849442166738*^9}, {3.813849494775017*^9, 
   3.8138495516539497`*^9}, {3.813849649820855*^9, 3.8138496510322113`*^9}, {
   3.8138497509362288`*^9, 3.8138498378071823`*^9}, 3.813849896647738*^9, {
   3.813850014659485*^9, 3.813850034885206*^9}, {3.8138500701226482`*^9, 
   3.8138502152043037`*^9}, {3.813850307882167*^9, 3.813850328175942*^9}, 
   3.8138504719248667`*^9, {3.813850504756618*^9, 3.813850505000374*^9}, {
   3.8138505352919207`*^9, 3.813850588179611*^9}, 3.81385063676729*^9, {
   3.81385890968373*^9, 3.813858915625421*^9}, {3.813863423029768*^9, 
   3.813863424019745*^9}, {3.8138642481790648`*^9, 3.813864317048265*^9}, {
   3.813948608564208*^9, 3.813948610271838*^9}, {3.814021409865103*^9, 
   3.814021415913371*^9}},ExpressionUUID->"7a1273cd-3f66-4022-8667-\
d22a98700929"],

Cell[BoxData["7.680862335791391`"], "Output",
 CellChangeTimes->{
  3.813925133558794*^9, 3.81393713097329*^9, 3.813939128730955*^9, {
   3.813948611219714*^9, 3.813948613861416*^9}, 3.813955663674077*^9, 
   3.813957240877688*^9, 3.813957483761889*^9, 3.8140048812836018`*^9, 
   3.814020997553772*^9, 3.814021228179023*^9, 3.814021416758788*^9, 
   3.814103693074842*^9, 3.814103886083829*^9, 3.814103960722322*^9, 
   3.814104061952668*^9, {3.8141041004000683`*^9, 3.814104124458255*^9}, 
   3.8141041558208323`*^9, 3.814104265332164*^9, 3.8141077795095987`*^9, 
   3.814713459158909*^9, 3.814729447734779*^9, 3.8147298436610622`*^9, 
   3.8147841818027573`*^9, 3.814785269726491*^9, 3.814786874974752*^9, 
   3.814787185999413*^9, 3.81478725302343*^9, 3.814790571761825*^9, 
   3.814799153916161*^9, 3.814799271138557*^9, 3.81480354937045*^9, 
   3.814808789315526*^9, 3.814816060376195*^9, 3.8148170783168*^9, 
   3.814817205263994*^9, 3.8148179404184513`*^9, 3.814818384679858*^9, 
   3.8148199237342777`*^9, 3.814962880550178*^9, 3.814964277081469*^9, 
   3.8149656665668173`*^9, 3.8149688041869287`*^9, 3.814982334376495*^9, 
   3.814982453928959*^9, 3.8149865265274982`*^9, 3.814986667476038*^9, 
   3.81498805252188*^9, 3.815045500697337*^9, 3.815048194630247*^9, 
   3.8150491172679462`*^9, 3.815053609593505*^9, 3.815056204206319*^9, 
   3.815134417019732*^9, 3.815135185325947*^9, 3.815135521397286*^9, 
   3.8151366675607224`*^9, 3.8151367174819107`*^9, 3.8151368334900923`*^9, 
   3.815137192018759*^9, 3.815137542347447*^9, 3.8151376323228073`*^9, 
   3.815138732516191*^9},ExpressionUUID->"f486b109-262c-485c-89ca-\
06becadbc2be"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[0, 1, 1], 
    Line3DBox[{{0, 0, 0}, {0.6227311982038221, 0.5940276124634627, 
      0.5092514608860639}, {0.8221750883310794, -0.36140978323235773`, 
      0.7268784757461102}, {0.9862690500444247, 0.618212817108599, 
      0.8426918283028919}, {0.9264914418447443, -0.17425531571339736`, 
      0.23571497864588542`}, {1.009380527505149, -0.4895808460740223, 
      1.1810716358822813`}, {0.35894275354818084`, 0.11784285368342107`, 
      1.6371057916018756`}, {-0.35913625548453754`, -0.09360772290660108, 
      0.9740438107536775}, {-0.578430733732698, -1.0582767611299346`, 
      0.8280178592822496}, {-0.4788342404144672, -0.10374202867925675`, 
      0.5470481401593086}, {0.07711952351573259, 0.6217520193258796, 
      0.1413711767007405}, {0.07075015156341216, 0.3290287095789983, 
      1.0975471516299187`}, {-0.42363068012058425`, 0.576507207311953, 
      1.9308190078828944`}, {-0.46361531459731764`, 0.35947836137554245`, 
      0.9554730646210834}, {0.23338496037429646`, 0.9038877211567103, 
      1.4221732528277662`}, {0.6178036500108526, 0.26192636225658583`, 
      0.7587669785604672}, {0.4138193136329379, 
      0.31591728181578194`, -0.2187172264871715}, {0.07082178909105269, 
      1.252680815406362, -0.1492421928921527}, {-0.8303534688408241, 
      1.0767216085285327`, 0.2468910069363149}, {-0.9998076530048788, 
      1.030335717457094, 1.2313368554108783`}, {-1.602790730254664, 
      1.3250257480624494`, 1.9726661981541656`}, {-1.010637831425024, 
      0.520331841870849, 
      2.015358840913289}, {-0.8029367616907502, -0.34915772564546477`, 
      2.4635197022248634`}, {-1.7129732832606281`, -0.6226790336085839, 
      2.1520399701408293`}, {-1.7347605539444346`, -0.7440918056488834, 
      3.14440293479723}, {-1.566261453691294, -0.22604637267160832`, 
      3.982995197213996}, {-2.3036037329531447`, -0.6021410843904207, 
      3.421854278165953}, {-2.193221325716764, -0.9845754856379749, 
      2.5044886733413954`}, {-2.0620506149448303`, -0.03073944072479684, 
      2.2343201258382277`}, {-1.2873570448473208`, 0.5588989148276712, 
      2.462741845713892}, {-1.4220259335153165`, -0.31405707094661794`, 
      1.9939005747854828`}, {-1.3238259948369078`, -0.1061626946945704, 
      2.967110059103391}, {-0.9368540354836776, -0.21809815803084598`, 
      3.8823822343179635`}, {-1.1699207976717345`, -1.0207244936895106`, 
      3.3333186226386604`}, {-1.9674520205689356`, -0.9287708148636676, 
      2.737090084698309}, {-2.230709498037316, 0.03490139499950484, 
      2.7821608345746416`}, {-2.2709686282815555`, -0.030624975668698207`, 
      1.7851224716321565`}, {-2.7985383818268215`, 0.7639690209234979, 
      2.0856063076763403`}, {-1.8929990618142214`, 1.0765990553187508`, 
      1.798794520078374}, {-2.5816508468588526`, 0.5359764381696464, 
      2.281998312263096}, {-2.230543796184852, 1.4314642740461254`, 
      2.00845603990969}, {-2.023676427155628, 0.4530997927592676, 
      2.0054839384268224`}, {-1.157514816835328, 0.22989487418076957`, 
      1.5583333719173844`}, {-1.7950644003661833`, -0.3553164691045424, 
      2.059390466697843}, {-2.6094337717853957`, -0.906053179493159, 
      1.8763833555666043`}, {-1.6576865677955337`, -0.6308858865648593, 
      1.7405149611549837`}, {-1.8895620971895781`, -0.6407433594799646, 
      2.7132104783112823`}, {-2.307835633897635, 0.26687791365711433`, 
      2.7488597845985248`}, {-2.2475336640410317`, 0.2775936036590589, 
      1.750737123589771}, {-2.9240596761164133`, -0.2790403207803222, 
      1.2685844204462604`}, {-2.258016364443887, 0.00327726942330292, 
      0.5781620242003739}, {-1.7996183908794072`, 0.8330861799265945, 
      0.8964205195800236}, {-2.192572866488212, 0.5573444491076889, 
      0.019178661262715835`}, {-3.103122950568308, 0.35537661801260845`, 
      0.37988288855216573`}, {-3.8602448087149708`, -0.11120316616994375`, \
-0.07735861974373232}, {-4.474139509324141, 
      0.2871317926799883, -0.7588735184231372}, {-4.549024873130336, \
-0.3983722640979543, -1.483080926855692}, {-3.573021644674984, \
-0.22425137291281916`, -1.6138464165600612`}, {-4.267412703069773, 
      0.2717049490823709, -1.0924555989439786`}, {-4.457348130508649, 
      0.8229644644196452, -1.9048825065201154`}, {-5.272581436463422, 
      1.303898597928002, -1.5822418145908141`}, {-4.830894649786972, 
      1.4100492639139024`, -2.473109267462554}, {-3.936863828254682, 
      1.552728844749815, -2.0484312395840356`}, {-3.0007253297524876`, 
      1.3677949582201758`, -2.3475034202279392`}, {-2.9510953890233926`, 
      1.3286151602575815`, -1.3495045162130919`}, {-3.4543723525206356`, 
      0.5336547612148735, -1.0107564358246512`}, {-3.209738526180269, 
      1.0561710217697744`, -0.19397552978815846`}, {-3.3832295996779034`, 
      1.4950625759003273`, -1.0756075681859847`}, {-3.30790430695208, 
      2.0052072772281417`, -1.9323913705439215`}, {-3.521907127711369, 
      2.5102420440432667`, -1.096243849459837}, {-3.949123919310423, 
      2.6123318642746094`, -1.9946109690612517`}, {-2.9620365334926153`, 
      2.525343556973411, -2.129115716755295}, {-2.840423046468032, 
      1.5522841292799847`, -2.3249868732604413`}, {-2.6812449382440007`, 
      1.1481192230784276`, -3.22571605478911}, {-3.5711147434020427`, 
      1.4762950872974043`, -2.908805449078104}, {-3.037952633135808, 
      0.9626469603480979, -3.581043328000383}, {-2.3948632183745153`, 
      1.4593930184127815`, -4.163863504743756}, {-1.8130086712018196`, 
      0.6661019048559548, -4.343124473965244}, {-1.524351819349986, 
      0.16359891260900272`, -5.158089482209063}, {-2.358853797137907, 
      0.580960983732829, -5.517832933372914}, {-2.384864167884058, \
-0.0974569288660172, -6.2520485668748655`}, {-1.7775205597599573`, 
      0.4478367474761995, -5.674304204538037}, {-0.8904097548028017, 
      0.07658296273076581, -5.400068818344974}, {-0.7484450703017352, 
      0.5553794044836111, -6.266440560566133}, {-1.355453106007213, 
      0.5375108365156439, -7.0609353427187616`}, {-0.6280201966982725, 
      0.167875032972708, -6.482825720593771}, {-1.6076043656701438`, 
      0.19850887427266733`, -6.284138973006276}, {-1.4762508494431907`, 
      0.23643203408143793`, -5.293529015593705}, {-1.4182836823481744`, 
      0.15904467887911566`, -6.288843541155233}, {-1.4893172121661904`, \
-0.24452532235445418`, -7.201030743294097}, {-2.48616247954964, \
-0.2729394240116258, -7.275139796197469}, {-3.386472077049451, \
-0.695283930290787, -7.380343154820377}, {-3.304114592762171, \
-0.9207704512196828, -6.409584135464258}, {-2.5593952697978697`, \
-1.1961727022993318`, -7.017487688755283}, {-2.9474189901290613`, \
-1.4620978677657923`, -6.135035764380943}, {-3.415181765249569, \
-0.6428654746922424, -5.803288462431785}, {-3.5510427740667883`, \
-1.0379944261429492`, -4.894764991073652}, {-4.290539491637808, \
-0.38278647609029637`, -5.049190205625836}, {-4.246586987608019, \
-0.4808531639579821, -4.054981423668961}, {-4.8372035839197185`, 
      0.23841603439723985`, -3.6891619921749252`}, {-4.870671023325116, \
-0.7329605806554349, -3.9243372507130077`}}]}, 
   {RGBColor[0, 1, 0], Dashing[{Small, Small}], Arrowheads[Large], 
    Arrow3DBox[{{0, 0, 
      0}, {-4.870671023325116, -0.7329605806554349, -3.9243372507130077`}}], 
    {RGBColor[1, 0, 0], PointSize[Medium], 
     Point3DBox[{{0, 0, 0}, {0.6227311982038221, 0.5940276124634627, 
       0.5092514608860639}, {0.8221750883310794, -0.36140978323235773`, 
       0.7268784757461102}, {0.9862690500444247, 0.618212817108599, 
       0.8426918283028919}, {0.9264914418447443, -0.17425531571339736`, 
       0.23571497864588542`}, {1.009380527505149, -0.4895808460740223, 
       1.1810716358822813`}, {0.35894275354818084`, 0.11784285368342107`, 
       1.6371057916018756`}, {-0.35913625548453754`, -0.09360772290660108, 
       0.9740438107536775}, {-0.578430733732698, -1.0582767611299346`, 
       0.8280178592822496}, {-0.4788342404144672, -0.10374202867925675`, 
       0.5470481401593086}, {0.07711952351573259, 0.6217520193258796, 
       0.1413711767007405}, {0.07075015156341216, 0.3290287095789983, 
       1.0975471516299187`}, {-0.42363068012058425`, 0.576507207311953, 
       1.9308190078828944`}, {-0.46361531459731764`, 0.35947836137554245`, 
       0.9554730646210834}, {0.23338496037429646`, 0.9038877211567103, 
       1.4221732528277662`}, {0.6178036500108526, 0.26192636225658583`, 
       0.7587669785604672}, {0.4138193136329379, 
       0.31591728181578194`, -0.2187172264871715}, {0.07082178909105269, 
       1.252680815406362, -0.1492421928921527}, {-0.8303534688408241, 
       1.0767216085285327`, 0.2468910069363149}, {-0.9998076530048788, 
       1.030335717457094, 1.2313368554108783`}, {-1.602790730254664, 
       1.3250257480624494`, 1.9726661981541656`}, {-1.010637831425024, 
       0.520331841870849, 
       2.015358840913289}, {-0.8029367616907502, -0.34915772564546477`, 
       2.4635197022248634`}, {-1.7129732832606281`, -0.6226790336085839, 
       2.1520399701408293`}, {-1.7347605539444346`, -0.7440918056488834, 
       3.14440293479723}, {-1.566261453691294, -0.22604637267160832`, 
       3.982995197213996}, {-2.3036037329531447`, -0.6021410843904207, 
       3.421854278165953}, {-2.193221325716764, -0.9845754856379749, 
       2.5044886733413954`}, {-2.0620506149448303`, -0.03073944072479684, 
       2.2343201258382277`}, {-1.2873570448473208`, 0.5588989148276712, 
       2.462741845713892}, {-1.4220259335153165`, -0.31405707094661794`, 
       1.9939005747854828`}, {-1.3238259948369078`, -0.1061626946945704, 
       2.967110059103391}, {-0.9368540354836776, -0.21809815803084598`, 
       3.8823822343179635`}, {-1.1699207976717345`, -1.0207244936895106`, 
       3.3333186226386604`}, {-1.9674520205689356`, -0.9287708148636676, 
       2.737090084698309}, {-2.230709498037316, 0.03490139499950484, 
       2.7821608345746416`}, {-2.2709686282815555`, -0.030624975668698207`, 
       1.7851224716321565`}, {-2.7985383818268215`, 0.7639690209234979, 
       2.0856063076763403`}, {-1.8929990618142214`, 1.0765990553187508`, 
       1.798794520078374}, {-2.5816508468588526`, 0.5359764381696464, 
       2.281998312263096}, {-2.230543796184852, 1.4314642740461254`, 
       2.00845603990969}, {-2.023676427155628, 0.4530997927592676, 
       2.0054839384268224`}, {-1.157514816835328, 0.22989487418076957`, 
       1.5583333719173844`}, {-1.7950644003661833`, -0.3553164691045424, 
       2.059390466697843}, {-2.6094337717853957`, -0.906053179493159, 
       1.8763833555666043`}, {-1.6576865677955337`, -0.6308858865648593, 
       1.7405149611549837`}, {-1.8895620971895781`, -0.6407433594799646, 
       2.7132104783112823`}, {-2.307835633897635, 0.26687791365711433`, 
       2.7488597845985248`}, {-2.2475336640410317`, 0.2775936036590589, 
       1.750737123589771}, {-2.9240596761164133`, -0.2790403207803222, 
       1.2685844204462604`}, {-2.258016364443887, 0.00327726942330292, 
       0.5781620242003739}, {-1.7996183908794072`, 0.8330861799265945, 
       0.8964205195800236}, {-2.192572866488212, 0.5573444491076889, 
       0.019178661262715835`}, {-3.103122950568308, 0.35537661801260845`, 
       0.37988288855216573`}, {-3.8602448087149708`, -0.11120316616994375`, \
-0.07735861974373232}, {-4.474139509324141, 
       0.2871317926799883, -0.7588735184231372}, {-4.549024873130336, \
-0.3983722640979543, -1.483080926855692}, {-3.573021644674984, \
-0.22425137291281916`, -1.6138464165600612`}, {-4.267412703069773, 
       0.2717049490823709, -1.0924555989439786`}, {-4.457348130508649, 
       0.8229644644196452, -1.9048825065201154`}, {-5.272581436463422, 
       1.303898597928002, -1.5822418145908141`}, {-4.830894649786972, 
       1.4100492639139024`, -2.473109267462554}, {-3.936863828254682, 
       1.552728844749815, -2.0484312395840356`}, {-3.0007253297524876`, 
       1.3677949582201758`, -2.3475034202279392`}, {-2.9510953890233926`, 
       1.3286151602575815`, -1.3495045162130919`}, {-3.4543723525206356`, 
       0.5336547612148735, -1.0107564358246512`}, {-3.209738526180269, 
       1.0561710217697744`, -0.19397552978815846`}, {-3.3832295996779034`, 
       1.4950625759003273`, -1.0756075681859847`}, {-3.30790430695208, 
       2.0052072772281417`, -1.9323913705439215`}, {-3.521907127711369, 
       2.5102420440432667`, -1.096243849459837}, {-3.949123919310423, 
       2.6123318642746094`, -1.9946109690612517`}, {-2.9620365334926153`, 
       2.525343556973411, -2.129115716755295}, {-2.840423046468032, 
       1.5522841292799847`, -2.3249868732604413`}, {-2.6812449382440007`, 
       1.1481192230784276`, -3.22571605478911}, {-3.5711147434020427`, 
       1.4762950872974043`, -2.908805449078104}, {-3.037952633135808, 
       0.9626469603480979, -3.581043328000383}, {-2.3948632183745153`, 
       1.4593930184127815`, -4.163863504743756}, {-1.8130086712018196`, 
       0.6661019048559548, -4.343124473965244}, {-1.524351819349986, 
       0.16359891260900272`, -5.158089482209063}, {-2.358853797137907, 
       0.580960983732829, -5.517832933372914}, {-2.384864167884058, \
-0.0974569288660172, -6.2520485668748655`}, {-1.7775205597599573`, 
       0.4478367474761995, -5.674304204538037}, {-0.8904097548028017, 
       0.07658296273076581, -5.400068818344974}, {-0.7484450703017352, 
       0.5553794044836111, -6.266440560566133}, {-1.355453106007213, 
       0.5375108365156439, -7.0609353427187616`}, {-0.6280201966982725, 
       0.167875032972708, -6.482825720593771}, {-1.6076043656701438`, 
       0.19850887427266733`, -6.284138973006276}, {-1.4762508494431907`, 
       0.23643203408143793`, -5.293529015593705}, {-1.4182836823481744`, 
       0.15904467887911566`, -6.288843541155233}, {-1.4893172121661904`, \
-0.24452532235445418`, -7.201030743294097}, {-2.48616247954964, \
-0.2729394240116258, -7.275139796197469}, {-3.386472077049451, \
-0.695283930290787, -7.380343154820377}, {-3.304114592762171, \
-0.9207704512196828, -6.409584135464258}, {-2.5593952697978697`, \
-1.1961727022993318`, -7.017487688755283}, {-2.9474189901290613`, \
-1.4620978677657923`, -6.135035764380943}, {-3.415181765249569, \
-0.6428654746922424, -5.803288462431785}, {-3.5510427740667883`, \
-1.0379944261429492`, -4.894764991073652}, {-4.290539491637808, \
-0.38278647609029637`, -5.049190205625836}, {-4.246586987608019, \
-0.4808531639579821, -4.054981423668961}, {-4.8372035839197185`, 
       0.23841603439723985`, -3.6891619921749252`}, {-4.870671023325116, \
-0.7329605806554349, -3.9243372507130077`}}]}}},
  ImageSize->Large,
  ViewPoint->
   NCache[{Pi, Rational[1, 2] Pi, 2}, {
    3.141592653589793, 1.5707963267948966`, 2}],
  ViewProjection->"Orthographic",
  ViewVertical->{-0.0007651849360223063, 0.0023611168622103313`, 
   0.9999995521630854}]], "Output",
 CellChangeTimes->{
  3.813925133558794*^9, 3.81393713097329*^9, 3.813939128730955*^9, {
   3.813948611219714*^9, 3.813948613861416*^9}, 3.813955663674077*^9, 
   3.813957240877688*^9, 3.813957483761889*^9, 3.8140048812836018`*^9, 
   3.814020997553772*^9, 3.814021228179023*^9, 3.814021416758788*^9, 
   3.814103693074842*^9, 3.814103886083829*^9, 3.814103960722322*^9, 
   3.814104061952668*^9, {3.8141041004000683`*^9, 3.814104124458255*^9}, 
   3.8141041558208323`*^9, 3.814104265332164*^9, 3.8141077795095987`*^9, 
   3.814713459158909*^9, 3.814729447734779*^9, 3.8147298436610622`*^9, 
   3.8147841818027573`*^9, 3.814785269726491*^9, 3.814786874974752*^9, 
   3.814787185999413*^9, 3.81478725302343*^9, 3.814790571761825*^9, 
   3.814799153916161*^9, 3.814799271138557*^9, 3.81480354937045*^9, 
   3.814808789315526*^9, 3.814816060376195*^9, 3.8148170783168*^9, 
   3.814817205263994*^9, 3.8148179404184513`*^9, 3.814818384679858*^9, 
   3.8148199237342777`*^9, 3.814962880550178*^9, 3.814964277081469*^9, 
   3.8149656665668173`*^9, 3.8149688041869287`*^9, 3.814982334376495*^9, 
   3.814982453928959*^9, 3.8149865265274982`*^9, 3.814986667476038*^9, 
   3.81498805252188*^9, 3.815045500697337*^9, 3.815048194630247*^9, 
   3.8150491172679462`*^9, 3.815053609593505*^9, 3.815056204206319*^9, 
   3.815134417019732*^9, 3.815135185325947*^9, 3.815135521397286*^9, 
   3.8151366675607224`*^9, 3.8151367174819107`*^9, 3.8151368334900923`*^9, 
   3.815137192018759*^9, 3.815137542347447*^9, 3.8151376323228073`*^9, 
   3.8151387325307913`*^9},ExpressionUUID->"6854225b-5fae-422c-852c-\
4eb71a52502d"]
}, Open  ]],

Cell["\<\

Simulate and plot multiple paths of the following stochastic difference \
equation, 
for any initial condition \[Pi]0\[Element](0,1): \[Pi]t+1=\[Gamma]\[Pi]t with \
probability 1/3\[Pi]t and \[Pi]t+1=(1\[Minus]\[Gamma])\[Pi]t with probability \
2/3\[Pi]t, where \[Gamma]\[Element](0,1) is a parameter.\
\>", "Text",
 CellChangeTimes->{{3.814033307582952*^9, 3.814033322725789*^9}, {
  3.814126771237859*^9, 3.814126786769628*^9}, {3.8141268189672003`*^9, 
  3.81412683849028*^9}, {3.814380628204583*^9, 
  3.814380632277377*^9}},ExpressionUUID->"33ab6bbc-7f4e-48a9-a807-\
2db4e2ddeb8e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"pi0", ",", "gamma"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SeedRandom", "[", "1234", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pi0", "=", 
  RowBox[{"RandomReal", "[", "]"}]}], "\n", 
 RowBox[{"gamma", "=", 
  RowBox[{"RandomReal", "[", "]"}]}], "\n", 
 RowBox[{
  RowBox[{"nextpi", "[", "pi_", "]"}], ":=", 
  RowBox[{"RandomChoice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"1", "/", "3"}], "*", "pi"}], ",", 
      RowBox[{
       RowBox[{"2", "/", "3"}], "*", "pi"}], ",", 
      RowBox[{"1", "-", "pi"}]}], "}"}], "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"gamma", "*", "pi"}], ",", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "gamma"}], ")"}], "*", "pi"}], ",", "pi"}], "}"}]}],
    "]"}]}], "\n", 
 RowBox[{
  RowBox[{"trajectory", "=", 
   RowBox[{"NestList", "[", 
    RowBox[{"nextpi", ",", "pi0", ",", "20"}], "]"}]}], ";"}], "\n", 
 RowBox[{"ListPlot", "[", "trajectory", "]"}]}], "Input",
 CellChangeTimes->{{3.8140340167618856`*^9, 
  3.8140340885615473`*^9}},ExpressionUUID->"ee17fe73-72d1-4703-9da7-\
b956bb731a18"],

Cell[BoxData["0.876608492574193`"], "Output",
 CellChangeTimes->{{3.81403328012189*^9, 3.814033284763454*^9}, {
   3.814034032981138*^9, 3.814034089228672*^9}, 3.814103693099783*^9, 
   3.814103886149399*^9, 3.8141039607818127`*^9, 3.814104061977598*^9, {
   3.814104100428569*^9, 3.814104124524105*^9}, 3.814104155856921*^9, 
   3.814104265346637*^9, 3.81410777953898*^9, 3.814713459182032*^9, 
   3.81472944776409*^9, 3.814729843712538*^9, 3.814784181816358*^9, 
   3.8147852697445602`*^9, 3.8147868750352707`*^9, 3.8147871860283546`*^9, 
   3.814787253044402*^9, 3.8147905717788258`*^9, 3.814799153942813*^9, 
   3.81479927115658*^9, 3.8148035494116*^9, 3.8148087893451*^9, 
   3.814816060398102*^9, 3.81481707833357*^9, 3.8148172052938232`*^9, 
   3.81481794046655*^9, 3.814818384699213*^9, 3.8148199237546673`*^9, 
   3.814962880574718*^9, 3.814964277106238*^9, 3.8149656665836887`*^9, 
   3.8149688042443333`*^9, 3.814982334391469*^9, 3.8149824539535093`*^9, 
   3.814986526540543*^9, 3.814986667499412*^9, 3.814988052538373*^9, 
   3.8150455007421913`*^9, 3.815048194650588*^9, 3.81504911729179*^9, 
   3.815053609618816*^9, 3.815056204220989*^9, 3.8151344171132936`*^9, 
   3.815135185346313*^9, 3.815135521507078*^9, 3.815136667597172*^9, 
   3.8151367175047903`*^9, 3.815136833508594*^9, 3.8151371920442038`*^9, 
   3.815137542386653*^9, 3.815137632362403*^9, 
   3.815138732546199*^9},ExpressionUUID->"4dc62806-bc1f-4aba-8960-\
097ccccf8a73"],

Cell[BoxData["0.5219642502018771`"], "Output",
 CellChangeTimes->{{3.81403328012189*^9, 3.814033284763454*^9}, {
   3.814034032981138*^9, 3.814034089228672*^9}, 3.814103693099783*^9, 
   3.814103886149399*^9, 3.8141039607818127`*^9, 3.814104061977598*^9, {
   3.814104100428569*^9, 3.814104124524105*^9}, 3.814104155856921*^9, 
   3.814104265346637*^9, 3.81410777953898*^9, 3.814713459182032*^9, 
   3.81472944776409*^9, 3.814729843712538*^9, 3.814784181816358*^9, 
   3.8147852697445602`*^9, 3.8147868750352707`*^9, 3.8147871860283546`*^9, 
   3.814787253044402*^9, 3.8147905717788258`*^9, 3.814799153942813*^9, 
   3.81479927115658*^9, 3.8148035494116*^9, 3.8148087893451*^9, 
   3.814816060398102*^9, 3.81481707833357*^9, 3.8148172052938232`*^9, 
   3.81481794046655*^9, 3.814818384699213*^9, 3.8148199237546673`*^9, 
   3.814962880574718*^9, 3.814964277106238*^9, 3.8149656665836887`*^9, 
   3.8149688042443333`*^9, 3.814982334391469*^9, 3.8149824539535093`*^9, 
   3.814986526540543*^9, 3.814986667499412*^9, 3.814988052538373*^9, 
   3.8150455007421913`*^9, 3.815048194650588*^9, 3.81504911729179*^9, 
   3.815053609618816*^9, 3.815056204220989*^9, 3.8151344171132936`*^9, 
   3.815135185346313*^9, 3.815135521507078*^9, 3.815136667597172*^9, 
   3.8151367175047903`*^9, 3.815136833508594*^9, 3.8151371920442038`*^9, 
   3.815137542386653*^9, 3.815137632362403*^9, 
   3.8151387325512238`*^9},ExpressionUUID->"215081b7-a598-458c-bf34-\
b42425ad3905"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQDQEf7DsEHjjo8r6xhwo4aPw4OnWRx10on8PhrEH5
lsD/p6F8AYcdWtuMtK32QvkiaHwJNL4MGl8Bja+ExldB46uh8TXQ+FpofB00
vh4a3wCNb4jGN0LjG6PxTRwMiicy1H5cDeWbwvkAWeNQoA==
      
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 21.}, {0, 0.876608492574193}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.81403328012189*^9, 3.814033284763454*^9}, {
   3.814034032981138*^9, 3.814034089228672*^9}, 3.814103693099783*^9, 
   3.814103886149399*^9, 3.8141039607818127`*^9, 3.814104061977598*^9, {
   3.814104100428569*^9, 3.814104124524105*^9}, 3.814104155856921*^9, 
   3.814104265346637*^9, 3.81410777953898*^9, 3.814713459182032*^9, 
   3.81472944776409*^9, 3.814729843712538*^9, 3.814784181816358*^9, 
   3.8147852697445602`*^9, 3.8147868750352707`*^9, 3.8147871860283546`*^9, 
   3.814787253044402*^9, 3.8147905717788258`*^9, 3.814799153942813*^9, 
   3.81479927115658*^9, 3.8148035494116*^9, 3.8148087893451*^9, 
   3.814816060398102*^9, 3.81481707833357*^9, 3.8148172052938232`*^9, 
   3.81481794046655*^9, 3.814818384699213*^9, 3.8148199237546673`*^9, 
   3.814962880574718*^9, 3.814964277106238*^9, 3.8149656665836887`*^9, 
   3.8149688042443333`*^9, 3.814982334391469*^9, 3.8149824539535093`*^9, 
   3.814986526540543*^9, 3.814986667499412*^9, 3.814988052538373*^9, 
   3.8150455007421913`*^9, 3.815048194650588*^9, 3.81504911729179*^9, 
   3.815053609618816*^9, 3.815056204220989*^9, 3.8151344171132936`*^9, 
   3.815135185346313*^9, 3.815135521507078*^9, 3.815136667597172*^9, 
   3.8151367175047903`*^9, 3.815136833508594*^9, 3.8151371920442038`*^9, 
   3.815137542386653*^9, 3.815137632362403*^9, 
   3.8151387325857887`*^9},ExpressionUUID->"55c6fd94-a3cd-43df-b27d-\
c5dc2c73fbcb"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1224, 1367},
WindowMargins->{{Automatic, 25}, {0, Automatic}},
FrontEndVersion->"11.2 for Linux x86 (64-bit) (September 10, 2017)",
StyleDefinitions->"DarkThemeCol.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 412, 8, 102, "Text",ExpressionUUID->"ddd2209c-4640-49d6-8c1e-c8bbb82adde6"],
Cell[CellGroupData[{
Cell[995, 32, 367, 6, 98, "Title",ExpressionUUID->"f6a27679-6c10-4557-b8a0-1d2ba267be51"],
Cell[1365, 40, 416, 10, 54, "Text",ExpressionUUID->"e61efb75-03d4-434f-ad14-189e24d86602"],
Cell[1784, 52, 399, 12, 56, "DisplayFormula",ExpressionUUID->"24366592-25e3-4586-8333-25d31c8e6608"],
Cell[2186, 66, 2213, 52, 223, "Text",ExpressionUUID->"58d9731d-0d3d-4779-8e7e-dd8fcc4f3d68"],
Cell[CellGroupData[{
Cell[4424, 122, 1039, 28, 95, "Input",ExpressionUUID->"171bbb12-0127-41db-bfbc-3c670d321208"],
Cell[5466, 152, 15067, 263, 258, "Output",ExpressionUUID->"44a309a0-212c-4322-ad81-34b633a4143c"]
}, Open  ]],
Cell[20548, 418, 642, 14, 159, "Text",ExpressionUUID->"e10d2eb5-e80d-4f23-b05a-e57fd698fed1"],
Cell[21193, 434, 1380, 37, 163, "Input",ExpressionUUID->"83cf6955-f0fb-4fa0-86b6-709a78aefb1b"],
Cell[22576, 473, 866, 18, 117, "Text",ExpressionUUID->"e05bd6e3-b390-43d6-b524-395bf75b03a1"],
Cell[CellGroupData[{
Cell[23467, 495, 1852, 45, 147, "Input",ExpressionUUID->"f4ef933e-2764-444e-b9c9-8ff6102398fa"],
Cell[25322, 542, 26939, 678, 174, "Output",ExpressionUUID->"8d2b33ed-6de3-4320-9a72-93fe4c66b230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52298, 1225, 1402, 41, 117, "Input",ExpressionUUID->"f38abcd7-c3c7-4f49-9ba8-e9e7a92e33d9"],
Cell[53703, 1268, 1857, 29, 50, "Output",ExpressionUUID->"0685f6fa-72c7-4a28-a80e-bc97e2a402f9"]
}, Open  ]],
Cell[55575, 1300, 683, 13, 75, "Text",ExpressionUUID->"c9f93fc5-88c4-4b69-a77f-37fc6cd3f55c"],
Cell[CellGroupData[{
Cell[56283, 1317, 546, 11, 47, "Input",ExpressionUUID->"81c82f7e-ec77-41d8-a7df-0888f842c71d"],
Cell[56832, 1330, 1822, 27, 50, "Output",ExpressionUUID->"5c8f8ff7-5521-41c7-a511-2aa18307c85c"]
}, Open  ]],
Cell[58669, 1360, 255, 6, 33, "Text",ExpressionUUID->"518b6630-cd81-4b3b-ad25-18b1f582a02a"],
Cell[CellGroupData[{
Cell[58949, 1370, 837, 20, 71, "Input",ExpressionUUID->"c4175dc0-418a-4098-b3e8-c5c8ef537c32"],
Cell[59789, 1392, 1143, 21, 41, "Message",ExpressionUUID->"185deb92-1b61-4a31-a1c7-54f90299c94c"],
Cell[60935, 1415, 1135, 21, 41, "Message",ExpressionUUID->"b0c1d71a-bfed-4fe2-a598-bee27914f20b"],
Cell[62073, 1438, 1359, 21, 50, "Output",ExpressionUUID->"9c118110-f9f3-4f11-8756-3164fb9abaf9"]
}, Open  ]],
Cell[63447, 1462, 838, 16, 96, "Text",ExpressionUUID->"c95b5967-6242-41bb-a727-e0f1a1324488"],
Cell[CellGroupData[{
Cell[64310, 1482, 444, 14, 63, "Input",ExpressionUUID->"872a2ab5-bda8-402c-995b-f3038e2706d1"],
Cell[64757, 1498, 1552, 23, 50, "Output",ExpressionUUID->"da2332bc-e8a6-4211-957d-0264832583c8"]
}, Open  ]],
Cell[66324, 1524, 1380, 32, 159, "Text",ExpressionUUID->"d77cc4b7-e60b-4440-af54-0c22cca304d8"],
Cell[67707, 1558, 620, 20, 70, "DisplayFormula",ExpressionUUID->"e944003f-a0d6-4af6-b736-4b594cdd9c83"],
Cell[68330, 1580, 1589, 44, 72, "Text",ExpressionUUID->"0092a223-5f26-4bdb-8379-10a5ea4351a8"],
Cell[69922, 1626, 447, 14, 32, "DisplayFormula",ExpressionUUID->"e57af973-5461-46d6-972e-2129f57dfda6"],
Cell[70372, 1642, 229, 4, 33, "Text",ExpressionUUID->"19247c26-c3a8-4372-b60d-338afe186874"],
Cell[70604, 1648, 743, 24, 70, "DisplayFormula",ExpressionUUID->"0201b2b7-a1ce-4d26-89bb-efc89dfef6a7"],
Cell[71350, 1674, 1263, 30, 40, "Text",ExpressionUUID->"38621163-7005-43f3-9d5b-84fd4085dd3c"],
Cell[CellGroupData[{
Cell[72638, 1708, 2109, 53, 174, "Input",ExpressionUUID->"d050fa1f-3566-4f69-8922-e750c989866f"],
Cell[74750, 1763, 1910, 27, 50, "Output",ExpressionUUID->"ab7ca4f6-bf16-4804-b576-a21b832e89bf"],
Cell[76663, 1792, 1908, 27, 50, "Output",ExpressionUUID->"3d28fc08-0bb9-429c-9704-c33a2fbe0e67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78608, 1824, 243, 7, 47, "Input",ExpressionUUID->"b1dd140f-8956-42d7-bf19-50ed627216b6"],
Cell[78854, 1833, 1466, 21, 50, "Output",ExpressionUUID->"c1678ab8-f010-4ac9-a647-5a8bcb2dad14"]
}, Open  ]],
Cell[80335, 1857, 1653, 31, 196, "Text",ExpressionUUID->"e0bd3e94-c21b-4eba-906b-d950772cf66e"],
Cell[81991, 1890, 516, 16, 56, "DisplayFormulaNumbered",ExpressionUUID->"159d8802-76fb-47e1-96e0-75d45c3e4846"],
Cell[82510, 1908, 163, 3, 33, "Text",ExpressionUUID->"42372d52-a2f9-42d1-bd82-55e453477733"],
Cell[82676, 1913, 1026, 33, 35, "DisplayFormulaNumbered",ExpressionUUID->"9a8aab9c-32f8-4357-81e3-5d1f602a8236"],
Cell[83705, 1948, 226, 5, 33, "Text",ExpressionUUID->"23e56697-34e5-43cc-a12d-c305af272077"],
Cell[83934, 1955, 604, 19, 56, "DisplayFormulaNumbered",ExpressionUUID->"3a0ea884-3577-481e-adb2-310d5d800509"],
Cell[84541, 1976, 392, 10, 33, "Text",ExpressionUUID->"f2d96c82-b23f-4ec3-854f-ba52e489b966"],
Cell[84936, 1988, 1160, 41, 58, "DisplayFormulaNumbered",ExpressionUUID->"9d10da2e-31ef-4f8a-8d01-d3b1a5e0b887"],
Cell[86099, 2031, 199, 3, 33, "Text",ExpressionUUID->"7f4d0690-3cfc-4e82-b10b-50335ef0fc48"],
Cell[86301, 2036, 1710, 58, 117, "DisplayFormulaNumbered",ExpressionUUID->"fe7bfd64-c27c-48c7-acf3-ab51115df657"],
Cell[88014, 2096, 900, 25, 89, "Text",ExpressionUUID->"3a38d5e8-0c4e-43fc-a071-e1d65ed7add5"],
Cell[88917, 2123, 3611, 123, 385, "DisplayFormula",ExpressionUUID->"e71733bb-8150-48f0-ace3-f1a338c75b47"],
Cell[92531, 2248, 673, 17, 61, "Text",ExpressionUUID->"f57a00cc-ad4d-49fd-bf3a-5b2c52209fc0"],
Cell[93207, 2267, 1747, 60, 91, "DisplayFormula",ExpressionUUID->"9df1a3ee-a988-4b0b-a881-cc6a507fc862"],
Cell[94957, 2329, 252, 7, 54, "Text",ExpressionUUID->"05cce0bb-6549-4c9b-a058-1a2c434b7911"],
Cell[CellGroupData[{
Cell[95234, 2340, 847, 27, 104, "Input",ExpressionUUID->"f149ad1b-afd7-454c-bf83-ee1c4b6074bf"],
Cell[96084, 2369, 1330, 20, 50, "Output",ExpressionUUID->"95403afe-39e7-4873-baa7-cc86f16a4740"]
}, Open  ]],
Cell[97429, 2392, 5822, 130, 550, "Text",ExpressionUUID->"27a56ffe-7920-4d57-8ea6-79cd1d832806"],
Cell[103254, 2524, 1194, 34, 70, "DisplayFormula",ExpressionUUID->"0653af52-3b3f-4fea-b453-f7e5c99cb461"],
Cell[104451, 2560, 188, 3, 33, "Text",ExpressionUUID->"034a8b73-6909-425d-b53f-76eed01bb7e6"],
Cell[104642, 2565, 439, 13, 54, "DisplayFormula",ExpressionUUID->"fa044ac4-375d-4efe-bbd8-4f75c27a2d50"],
Cell[105084, 2580, 194, 4, 33, "Text",ExpressionUUID->"22eef3e5-cfb1-41ba-b58a-2c05892456fc"],
Cell[105281, 2586, 744, 27, 27, "DisplayFormula",ExpressionUUID->"2cb99a40-cc16-4479-8d68-3ad5a5408791"],
Cell[106028, 2615, 266, 7, 54, "Text",ExpressionUUID->"70ca3db4-d6b4-43c9-8a62-0a4da6ed8536"],
Cell[106297, 2624, 1671, 52, 151, "DisplayFormula",ExpressionUUID->"a46c7281-2c4a-4a3b-82b9-21298957692e"],
Cell[107971, 2678, 622, 18, 51, "DisplayFormulaNumbered",ExpressionUUID->"d4a478ad-077f-41cf-ac05-45a284edd5e8"],
Cell[108596, 2698, 243, 4, 33, "Text",ExpressionUUID->"dc9b2615-1b37-4b39-a150-98a9da8e90ed"],
Cell[108842, 2704, 425, 14, 70, "DisplayFormula",ExpressionUUID->"cb3545fd-8777-42c2-838d-e3ac50b92dba"],
Cell[109270, 2720, 747, 18, 56, "Text",ExpressionUUID->"76a6a178-a58c-49b6-bd02-c18b12f680ec"],
Cell[110020, 2740, 689, 19, 35, "DisplayFormula",ExpressionUUID->"1c79ed8a-7794-4139-9011-b75665f55682"],
Cell[110712, 2761, 787, 19, 59, "Text",ExpressionUUID->"4f10aaa8-3aee-47df-9a5a-8c23898ae3a6"],
Cell[111502, 2782, 1683, 51, 123, "DisplayFormula",ExpressionUUID->"742ddbab-4106-4c72-b723-671beca58f68"],
Cell[113188, 2835, 1079, 29, 124, "Text",ExpressionUUID->"e24319e6-eaed-448e-af8c-8c301c74496d"],
Cell[114270, 2866, 512, 16, 70, "DisplayFormula",ExpressionUUID->"4601084f-5f58-4d57-833f-dcb95de905c6"],
Cell[114785, 2884, 198, 3, 33, "Text",ExpressionUUID->"412b5f70-4a09-44c3-b568-00139ad11eb2"],
Cell[114986, 2889, 593, 19, 53, "DisplayFormula",ExpressionUUID->"02b1982a-714b-40b6-b07e-24dccbabc700"],
Cell[115582, 2910, 161, 2, 33, "Text",ExpressionUUID->"43ab4e9e-2efb-462d-a412-89ff65b7410b"],
Cell[115746, 2914, 646, 20, 53, "DisplayFormula",ExpressionUUID->"eb80da83-1a7d-405a-b20d-495c92e9293f"],
Cell[116395, 2936, 286, 6, 54, "Text",ExpressionUUID->"80d7fe3d-237e-4087-b22b-cb27d34a2513"],
Cell[116684, 2944, 639, 21, 86, "DisplayFormulaNumbered",ExpressionUUID->"fe7c185c-27b8-417a-9358-06c2890e3c80"],
Cell[117326, 2967, 303, 7, 33, "Text",ExpressionUUID->"5c1a4235-3837-4fc8-aff6-aa4728d68502"],
Cell[117632, 2976, 690, 13, 54, "Text",ExpressionUUID->"877ede12-46a5-47ca-a3a6-97445396ad33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118359, 2994, 194, 3, 98, "Title",ExpressionUUID->"c6f9e605-24fc-435f-8731-1e2f7e1a7db9"],
Cell[118556, 2999, 866, 16, 135, "Text",ExpressionUUID->"a3815133-a716-411f-aced-163817abd42e"],
Cell[119425, 3017, 429, 11, 54, "DisplayFormula",ExpressionUUID->"b8daa8fc-f74d-45ea-97e8-045e56c679a7"],
Cell[119857, 3030, 34520, 573, 373, "Text",ExpressionUUID->"0c578683-82df-4d87-91a7-03c1eb5a2c14"],
Cell[154380, 3605, 490, 14, 57, "DisplayFormula",ExpressionUUID->"48b9e1d9-1310-4188-955d-394601600ea9"],
Cell[154873, 3621, 29994, 513, 548, "Text",ExpressionUUID->"d6f97f75-8b7f-4150-8a81-0f25323dea35"],
Cell[184870, 4136, 8470, 229, 530, "Text",ExpressionUUID->"44a96503-23f5-4c81-bb2c-a89559c1bb62"],
Cell[193343, 4367, 625, 20, 44, "DisplayFormula",ExpressionUUID->"10cb2dc8-596c-4dbb-a2da-f584cd944be6"],
Cell[193971, 4389, 569, 15, 39, "Text",ExpressionUUID->"072c55d0-27f1-49bb-bab2-50bb3f031b2f"],
Cell[194543, 4406, 428, 13, 35, "DisplayFormula",ExpressionUUID->"70b025ab-3598-4bfc-a41b-1b0b681de6a9"],
Cell[194974, 4421, 626, 15, 67, "Text",ExpressionUUID->"6b89f3e7-9d03-4dde-9a17-d11150b4185d"],
Cell[195603, 4438, 474, 15, 44, "DisplayFormula",ExpressionUUID->"16b7ace2-9f57-4f66-9b0b-4cfc0106653d"],
Cell[196080, 4455, 1778, 49, 105, "Text",ExpressionUUID->"51a178ad-3228-48c2-a28a-a637f24c0090"],
Cell[197861, 4506, 1673, 54, 70, "DisplayFormula",ExpressionUUID->"af86503c-da67-42a2-8405-b6d42236e4dd"],
Cell[199537, 4562, 2744, 46, 99, "Text",ExpressionUUID->"c7cd07a2-9e7d-4dd8-96d6-daf05b79437f"],
Cell[202284, 4610, 2259, 75, 70, "DisplayFormula",ExpressionUUID->"f2639d95-4267-4e40-bfb7-8530957e948e",
 InitializationCell->True],
Cell[204546, 4687, 1312, 34, 39, "Text",ExpressionUUID->"04d1c359-3700-43a6-8c71-e8307ff56370"],
Cell[205861, 4723, 563, 18, 51, "DisplayFormula",ExpressionUUID->"68bda62b-52cd-48af-8a15-0826fd67d33d"],
Cell[206427, 4743, 1781, 44, 130, "Text",ExpressionUUID->"3140814e-1c43-48db-9811-4615869b1e16"],
Cell[208211, 4789, 1302, 42, 115, "DisplayFormula",ExpressionUUID->"716d3ef9-ddad-4986-8ef2-10ee56fb079a"],
Cell[209516, 4833, 706, 18, 75, "Text",ExpressionUUID->"b8c5eed3-d76c-469f-876d-1839d0e93e84"],
Cell[210225, 4853, 2361, 79, 136, "DisplayFormula",ExpressionUUID->"f3734048-33ca-4039-895c-9c38c6d67426"],
Cell[212589, 4934, 1349, 34, 135, "Text",ExpressionUUID->"cf238d45-d57b-41a1-aff7-549c02105c72"],
Cell[213941, 4970, 577, 13, 32, "DisplayFormula",ExpressionUUID->"e5674680-8339-441f-b7d8-a1fe6178b9c6"],
Cell[214521, 4985, 3927, 101, 252, "Text",ExpressionUUID->"0cf988df-c900-420c-a03f-273eac332201"],
Cell[218451, 5088, 525, 14, 70, "DisplayFormula",ExpressionUUID->"637ac7b9-21d4-416c-9192-54bdea03fcca"],
Cell[218979, 5104, 817, 21, 51, "Text",ExpressionUUID->"80244e20-2091-40e5-b86f-acf7e0cd3ab9"],
Cell[219799, 5127, 639, 21, 70, "DisplayFormula",ExpressionUUID->"1d1dbed5-189c-45b8-8225-68bc5975f732"],
Cell[220441, 5150, 1110, 23, 60, "Text",ExpressionUUID->"b21abe3d-9148-40a6-82f7-5ce8c15cffa4"],
Cell[221554, 5175, 428, 13, 57, "DisplayFormula",ExpressionUUID->"7c323f50-2d6f-46c2-8437-4ca66fe31f4e"],
Cell[221985, 5190, 2081, 43, 215, "Text",ExpressionUUID->"c2c43ff2-2cf5-4f3c-85d3-b56d45674af3"],
Cell[CellGroupData[{
Cell[224091, 5237, 352, 10, 79, "Input",ExpressionUUID->"459ba7c4-814e-419c-bf6f-dba1c883d858"],
Cell[224446, 5249, 1269, 19, 50, "Output",ExpressionUUID->"f1e2f4c2-bfbf-4868-8d97-eab23abfe8c5"],
Cell[225718, 5270, 1288, 19, 50, "Output",ExpressionUUID->"1da2e4ac-41bb-4dfe-92d0-e28a976c4aea"]
}, Open  ]],
Cell[227021, 5292, 627, 12, 51, "Text",ExpressionUUID->"75063719-d76c-44f7-8a2f-fc790ffc3771"],
Cell[CellGroupData[{
Cell[227673, 5308, 1144, 33, 143, "Input",ExpressionUUID->"773f670a-193c-4cf8-bd71-e2ffb7cbf503"],
Cell[228820, 5343, 1524, 24, 53, "Output",ExpressionUUID->"5414ab4f-de66-4f51-9356-a9baf8426519"],
Cell[230347, 5369, 1447, 21, 50, "Output",ExpressionUUID->"804bdb08-75a3-4272-a811-4418948680ba"]
}, Open  ]],
Cell[231809, 5393, 4057, 100, 407, "Text",ExpressionUUID->"df42ce10-d99a-40c5-b8c1-f29d8482cc5c"],
Cell[235869, 5495, 472, 16, 68, "DisplayFormula",ExpressionUUID->"c8daccdd-b583-47e2-aa3f-5eb5a87d4b96"],
Cell[236344, 5513, 254, 6, 54, "Text",ExpressionUUID->"93ee72f9-ad52-4689-9a83-d2f25c26f338",
 InitializationCell->True],
Cell[236601, 5521, 1061, 35, 68, "DisplayFormula",ExpressionUUID->"dcb29aa3-7347-4289-a07e-7c5c439a072c"],
Cell[237665, 5558, 2060, 53, 182, "Text",ExpressionUUID->"b97de6a5-8e46-4bb8-aa75-7fe5fbf443e6"],
Cell[239728, 5613, 631, 20, 68, "DisplayFormula",ExpressionUUID->"29058122-11c6-4165-aae4-e7e749df4ac5"],
Cell[240362, 5635, 3303, 102, 239, "Text",ExpressionUUID->"296fadf0-b401-4901-8ed9-1ed730da5b2f"],
Cell[243668, 5739, 406, 14, 61, "DisplayFormula",ExpressionUUID->"9663c372-0868-4197-af29-6cd50537a3ae"],
Cell[244077, 5755, 248, 5, 54, "Text",ExpressionUUID->"6c87b10f-92a1-4e24-b12a-7471b48c7906"],
Cell[244328, 5762, 952, 31, 64, "DisplayFormula",ExpressionUUID->"0d5e6b36-2105-40d4-96f8-bb9178e1a484"],
Cell[245283, 5795, 2094, 57, 228, "Text",ExpressionUUID->"d2a099f7-0e64-460c-be56-87b468010510"],
Cell[247380, 5854, 1790, 59, 104, "DisplayFormula",ExpressionUUID->"9233a9eb-6d55-474a-b8e1-4a3adcba05a1"],
Cell[249173, 5915, 2030, 67, 94, "Text",ExpressionUUID->"ac0640b4-292e-4891-87cf-482acd7f01be"],
Cell[251206, 5984, 418, 14, 57, "DisplayFormula",ExpressionUUID->"bce3ea56-7054-43e9-80e9-398942fd1807"],
Cell[251627, 6000, 3581, 81, 359, "Text",ExpressionUUID->"a902fd77-1ebe-4d09-972a-e94441174014"],
Cell[255211, 6083, 485, 17, 64, "DisplayFormula",ExpressionUUID->"ee377539-9dfa-42f1-9a2f-38674b206798"],
Cell[255699, 6102, 554, 13, 80, "Text",ExpressionUUID->"4faf4b7d-925f-4c03-ab31-10f7f41d2789"],
Cell[256256, 6117, 526, 15, 43, "DisplayFormula",ExpressionUUID->"eb361531-92f6-4da2-ba0b-ac817a734696"],
Cell[256785, 6134, 704, 13, 75, "Text",ExpressionUUID->"a4eca03e-639b-40b2-af49-9eb2574ddbfb"],
Cell[257492, 6149, 795, 18, 117, "Text",ExpressionUUID->"11250c61-ae3d-45fa-aeac-55a54d8927ea"],
Cell[258290, 6169, 366, 12, 66, "DisplayFormula",ExpressionUUID->"7669e511-389f-4233-bf9d-4a6c6965f3ef"],
Cell[258659, 6183, 312, 7, 33, "Text",ExpressionUUID->"0e9940c5-3dd1-4b5f-a024-94d595959309"],
Cell[258974, 6192, 541, 17, 67, "DisplayFormula",ExpressionUUID->"0291c194-270e-48b9-97ba-df6577a7d845"],
Cell[259518, 6211, 604, 14, 81, "Text",ExpressionUUID->"7140e757-79c4-429f-8775-1a35eae8ed54"],
Cell[260125, 6227, 440, 16, 54, "DisplayFormula",ExpressionUUID->"035c96f5-dae9-40db-b770-96c0b923c80b"],
Cell[260568, 6245, 351, 11, 39, "Text",ExpressionUUID->"17774b23-1b55-4fb3-a978-6492a56b7f04"],
Cell[260922, 6258, 562, 20, 54, "DisplayFormula",ExpressionUUID->"549521e0-0f5e-487d-b1e5-0b58098ebfa3"],
Cell[261487, 6280, 279, 6, 33, "Text",ExpressionUUID->"79d3c8ed-82e7-4c0a-94a3-5a80cd88b32f"],
Cell[261769, 6288, 501, 17, 54, "DisplayFormula",ExpressionUUID->"c3f131bb-c7d3-4da5-8514-fe296c44ff65"],
Cell[262273, 6307, 150, 3, 33, "Text",ExpressionUUID->"ed778a08-b566-4da9-9081-57cae6a750ed"],
Cell[262426, 6312, 501, 17, 54, "DisplayFormula",ExpressionUUID->"8634f84c-b6cc-44c5-8899-6597c0745792"],
Cell[262930, 6331, 159, 3, 33, "Text",ExpressionUUID->"8aa73ae2-dcb9-4a93-80e5-5a2c9ee94436"],
Cell[263092, 6336, 518, 18, 54, "DisplayFormula",ExpressionUUID->"63212abb-eaae-4625-8bd0-d8337cb62e75"],
Cell[263613, 6356, 342, 7, 33, "Text",ExpressionUUID->"e10049bb-98a7-47f0-9cee-0b7b7649063d"],
Cell[263958, 6365, 9815, 169, 144, "Text",ExpressionUUID->"a3f9f5aa-4a53-4dae-8a07-806407be3c80"],
Cell[273776, 6536, 1565, 28, 222, "Text",ExpressionUUID->"e39a9cbc-2e69-4712-adc3-521c22f55c6e"],
Cell[275344, 6566, 498, 16, 57, "DisplayFormula",ExpressionUUID->"6f8df143-44f2-4adc-863f-c0d2939f9441"],
Cell[CellGroupData[{
Cell[275867, 6586, 2717, 82, 163, "Input",ExpressionUUID->"42ba3342-26a1-4447-8d50-4b89dec71c7c"],
Cell[278587, 6670, 66552, 1114, 259, "Output",ExpressionUUID->"8bd09e2a-7952-4d36-aaf9-1fe8d0a8533b"]
}, Open  ]],
Cell[345154, 7787, 498, 11, 75, "Text",ExpressionUUID->"b31dcbbd-7d13-4d0e-be0d-c1b029cbb4ee"],
Cell[345655, 7800, 382, 13, 57, "DisplayFormula",ExpressionUUID->"f70e780c-1af8-4de2-b3ba-d9e52d2f1964"],
Cell[346040, 7815, 184, 3, 33, "Text",ExpressionUUID->"53af828a-86ad-4e93-ab0b-2cf2d899457a"],
Cell[346227, 7820, 434, 15, 60, "DisplayFormula",ExpressionUUID->"9c54c67d-eb2d-45c3-94ce-6fe451552fbb"],
Cell[346664, 7837, 367, 9, 33, "Text",ExpressionUUID->"ce0359eb-37cd-4903-a6be-73cefb2aa970"],
Cell[347034, 7848, 450, 15, 61, "DisplayFormula",ExpressionUUID->"9edc37f3-dc48-490b-9485-fa7c47c823c7"],
Cell[347487, 7865, 615, 15, 102, "Text",ExpressionUUID->"3a591480-906d-4d3e-8831-dae7b1319593"],
Cell[348105, 7882, 398, 13, 53, "DisplayFormula",ExpressionUUID->"ed2f7faa-ab26-45e6-9b44-45ee8dd3dde6"],
Cell[348506, 7897, 467, 11, 117, "Text",ExpressionUUID->"0ef5ca90-cc5a-4475-9669-a6c7e1e95700"],
Cell[348976, 7910, 704, 12, 180, "Text",ExpressionUUID->"d86cd1d7-2475-45de-b0b9-0bc9851029d5"],
Cell[CellGroupData[{
Cell[349705, 7926, 1454, 41, 227, "Input",ExpressionUUID->"f0e7df27-a963-431f-bb7a-ecd4457cda5d"],
Cell[351162, 7969, 1467, 23, 53, "Output",ExpressionUUID->"289b22f7-d460-4a7c-899d-ef2a148d4109"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[352678, 7998, 335, 8, 160, "Title",ExpressionUUID->"05cc71e5-afc3-4fb6-bc97-30e431b1781e"],
Cell[353016, 8008, 399, 8, 54, "Text",ExpressionUUID->"1a485541-cb74-4765-ac56-570c61fde0ac"],
Cell[CellGroupData[{
Cell[353440, 8020, 2373, 65, 271, "Input",ExpressionUUID->"e70eb4f1-9b08-41c9-82de-a95e522fe42b"],
Cell[355816, 8087, 14947, 261, 248, "Output",ExpressionUUID->"6677ef83-d6cd-4a7b-9597-1eff5363e119"],
Cell[370766, 8350, 2098, 32, 53, "Output",ExpressionUUID->"bae21f4a-cf12-4d00-8596-74a41ce469e3"]
}, Open  ]],
Cell[372879, 8385, 359, 6, 33, "Text",ExpressionUUID->"61fa060a-8c8b-483d-8850-38e9a7275431"],
Cell[CellGroupData[{
Cell[373263, 8395, 2525, 66, 289, "Input",ExpressionUUID->"f9d1bfa4-dbad-4c7a-b449-a991f8b81373"],
Cell[375791, 8463, 2165, 31, 50, "Output",ExpressionUUID->"bb922da6-e19a-43f8-803b-41aaf1c6926d"],
Cell[377959, 8496, 2164, 31, 50, "Output",ExpressionUUID->"6b7e2586-3c5e-4c20-8ad4-91a0589a99c8"],
Cell[380126, 8529, 2165, 31, 50, "Output",ExpressionUUID->"b78f413b-57c4-4475-b20c-a14675b6e7ef"]
}, Open  ]],
Cell[382306, 8563, 1197, 23, 198, "Text",ExpressionUUID->"b4837a16-7303-4ac3-9adf-c780100d085a"],
Cell[CellGroupData[{
Cell[383528, 8590, 390, 7, 71, "Input",ExpressionUUID->"047d3fb9-71d2-4f49-abe5-10290b84add2"],
Cell[383921, 8599, 1732, 24, 50, "Output",ExpressionUUID->"d31259c3-6785-47ce-9d6c-b0757b4cbe6f"],
Cell[385656, 8625, 1735, 25, 50, "Output",ExpressionUUID->"0d408d86-a111-4ef4-98a9-d36b45c85a51"]
}, Open  ]],
Cell[387406, 8653, 1311, 36, 57, "Text",ExpressionUUID->"c18f279f-d9cb-4acf-938c-10e67650968b"],
Cell[388720, 8691, 725, 19, 53, "DisplayFormula",ExpressionUUID->"f0afe642-6fb0-4eb7-a94e-2be556ba4fe6"],
Cell[389448, 8712, 240, 6, 33, "Text",ExpressionUUID->"018318ee-3fb7-487d-8a12-31e36a0cb5d5"],
Cell[389691, 8720, 776, 25, 70, "DisplayFormula",ExpressionUUID->"c09ec73d-af82-4c76-922e-c298a767c94b"],
Cell[CellGroupData[{
Cell[390492, 8749, 2200, 56, 193, "Input",ExpressionUUID->"fe38d486-963e-4716-b8fc-ac3ded68c3a3"],
Cell[392695, 8807, 2138, 30, 50, "Output",ExpressionUUID->"a6882010-dc36-4f32-8f6e-2b85f5c57916"],
Cell[394836, 8839, 2137, 30, 50, "Output",ExpressionUUID->"bb63461d-9c4f-42a3-8330-e1d0ce4d5ec5"]
}, Open  ]],
Cell[396988, 8872, 412, 9, 54, "Text",ExpressionUUID->"0800c14e-f78c-4c89-bbdf-468951c45543"],
Cell[397403, 8883, 718, 19, 53, "DisplayFormula",ExpressionUUID->"c42c2e8d-3907-4d03-a3d3-43bef080c9ee"],
Cell[398124, 8904, 281, 5, 33, "Text",ExpressionUUID->"0a0117c6-ffde-4199-a4ab-921c2b626beb"],
Cell[398408, 8911, 545, 17, 71, "DisplayFormula",ExpressionUUID->"5cb5a728-ed9d-4fe3-9c67-270f783a39fc"],
Cell[398956, 8930, 242, 4, 33, "Text",ExpressionUUID->"57ad8f47-75be-4ab3-9746-73aa64d4a0a7"],
Cell[399201, 8936, 407, 12, 51, "DisplayFormula",ExpressionUUID->"022ddcd9-5c4d-4d45-9f81-6ab1bdda5608"],
Cell[CellGroupData[{
Cell[399633, 8952, 1386, 43, 173, "Input",ExpressionUUID->"d5c9df16-f09a-45ea-b62e-11f843277776"],
Cell[401022, 8997, 1906, 28, 50, "Output",ExpressionUUID->"8efb43b7-96dc-4841-a86f-9c1bb89688a6"],
Cell[402931, 9027, 1908, 28, 50, "Output",ExpressionUUID->"14d06516-9102-44e9-b9ab-d4585af79ba6"]
}, Open  ]],
Cell[404854, 9058, 637, 11, 33, "Text",ExpressionUUID->"5bc309b0-59aa-4921-811d-41fd1c5c3fe7"],
Cell[405494, 9071, 416, 13, 49, "DisplayFormula",ExpressionUUID->"e8cd36ab-a168-4aa3-8af8-753fc8c9d0b0"],
Cell[CellGroupData[{
Cell[405935, 9088, 706, 16, 56, "Input",ExpressionUUID->"f53ccb7b-a27c-43a0-b0a8-a39a3d41c792"],
Cell[406644, 9106, 1670, 25, 50, "Output",ExpressionUUID->"23176a9a-fb73-4209-9247-43fefd399572"]
}, Open  ]],
Cell[408329, 9134, 1316, 21, 177, "Text",ExpressionUUID->"b27f404e-1917-4f2c-8058-7b8128dcce6e"],
Cell[409648, 9157, 1040, 34, 74, "DisplayFormula",ExpressionUUID->"aa570dca-2b86-4cd9-a26d-b768a48facf6"],
Cell[CellGroupData[{
Cell[410713, 9195, 2074, 56, 154, "Input",ExpressionUUID->"20570aa4-9568-4646-92b1-e9aaf256e28e"],
Cell[412790, 9253, 1179, 17, 50, "Output",ExpressionUUID->"c64205e5-4612-4ac3-b5bd-1dd1a1b8ec78"]
}, Open  ]],
Cell[413984, 9273, 643, 14, 138, "Text",ExpressionUUID->"c3cd539c-4f36-4770-8243-f017e7040ddb"],
Cell[CellGroupData[{
Cell[414652, 9291, 14275, 348, 867, "Input",ExpressionUUID->"c9dcacee-fb73-4e1c-a67a-fd69e33d0ad4"],
Cell[428930, 9641, 3464, 52, 53, "Output",ExpressionUUID->"20ee57ba-3393-44d1-bae7-4ddfa4a050a3"],
Cell[432397, 9695, 3398, 49, 50, "Output",ExpressionUUID->"80072b33-dddc-471f-b54e-0cc9cf2726be"],
Cell[435798, 9746, 3399, 49, 50, "Output",ExpressionUUID->"cfc8ddbe-4634-4a5e-8a07-014aa3365368"],
Cell[439200, 9797, 78452, 1403, 250, "Output",ExpressionUUID->"29e1cacf-0cf5-466c-b6e9-a3cbf4a97477"]
}, Open  ]],
Cell[517667, 11203, 875, 19, 180, "Text",ExpressionUUID->"e5396741-248d-4e03-8a12-c1550f41f211"],
Cell[CellGroupData[{
Cell[518567, 11226, 590, 14, 47, "Input",ExpressionUUID->"a35864f0-5f70-49d5-870f-7dd827ce211a"],
Cell[519160, 11242, 1669, 26, 50, "Output",ExpressionUUID->"2824b36d-5509-4dda-9863-4df6a778015e"]
}, Open  ]],
Cell[520844, 11271, 338, 9, 75, "Text",ExpressionUUID->"ac882883-33df-42dc-9e21-2cb3ee05a1f7"],
Cell[CellGroupData[{
Cell[521207, 11284, 415, 7, 71, "Input",ExpressionUUID->"e5c3e432-24ea-4a05-b22c-af029556e535"],
Cell[521625, 11293, 1578, 23, 50, "Output",ExpressionUUID->"b37c98b6-59f9-4398-94c3-26b4e45a47f7"],
Cell[523206, 11318, 1576, 23, 50, "Output",ExpressionUUID->"46b72355-ce16-4e29-b48e-c17577446284"]
}, Open  ]],
Cell[524797, 11344, 292, 8, 54, "Text",ExpressionUUID->"064e2c99-6ce1-4310-9d53-ff6c8e58f95f"],
Cell[CellGroupData[{
Cell[525114, 11356, 2439, 68, 246, "Input",ExpressionUUID->"b914ebd7-5986-496e-9547-c32c075c2305"],
Cell[527556, 11426, 1667, 26, 53, "Output",ExpressionUUID->"3da26ded-beb5-43ee-a7ae-deeca2e25b9e"],
Cell[529226, 11454, 1662, 26, 53, "Output",ExpressionUUID->"8108efbc-78ea-463d-9f3d-4bdf624df95c"],
Cell[530891, 11482, 1666, 26, 50, "Output",ExpressionUUID->"92ab7ab9-0cb3-428b-827d-7b263710c22b"]
}, Open  ]],
Cell[532572, 11511, 379, 8, 54, "Text",ExpressionUUID->"f8d88617-9790-4647-ad1e-68776d67fae6"],
Cell[CellGroupData[{
Cell[532976, 11523, 2004, 59, 187, "Input",ExpressionUUID->"8078f9d9-c18b-4a77-be62-8d007b4dec35"],
Cell[534983, 11584, 948, 16, 53, "Output",ExpressionUUID->"284b9afa-bb51-4a08-862b-752172cc2ce8"],
Cell[535934, 11602, 941, 16, 53, "Output",ExpressionUUID->"7f23f342-3aef-4b4c-a581-c88ba9b22c77"],
Cell[536878, 11620, 945, 16, 50, "Output",ExpressionUUID->"a865a3ee-13b7-4b77-857f-be5ab2f41ed5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537860, 11641, 467, 13, 47, "Input",ExpressionUUID->"82e55449-c9a3-4838-b967-a1592550e009"],
Cell[538330, 11656, 1497, 23, 57, "Output",ExpressionUUID->"d7df3501-5234-49dc-a61c-c9a027efd37c"]
}, Open  ]],
Cell[539842, 11682, 377, 9, 54, "Text",ExpressionUUID->"5a308521-d230-47d0-b5f1-e33d36794717"],
Cell[CellGroupData[{
Cell[540244, 11695, 1636, 50, 176, "Input",ExpressionUUID->"f9ff74b2-37fd-434a-9f4c-438abd9a3b96"],
Cell[541883, 11747, 1894, 28, 53, "Output",ExpressionUUID->"bebec733-9e4b-4d22-a26e-0311550ea399"],
Cell[543780, 11777, 1889, 28, 53, "Output",ExpressionUUID->"c13428bc-88e5-44d2-8505-e373803ed6f4"]
}, Open  ]],
Cell[545684, 11808, 323, 7, 54, "Text",ExpressionUUID->"d759b942-a554-46dc-8617-6e13e5939cb1"],
Cell[CellGroupData[{
Cell[546032, 11819, 1192, 28, 71, "Input",ExpressionUUID->"0f409b9c-068b-4fde-9767-f63675d6118e"],
Cell[547227, 11849, 1878, 29, 57, "Output",ExpressionUUID->"96de6a22-850f-4b62-a008-17bb35441fb4"],
Cell[549108, 11880, 1874, 29, 57, "Output",ExpressionUUID->"2746e7ab-b494-44b4-b472-603fd48fdb07"]
}, Open  ]],
Cell[550997, 11912, 608, 14, 117, "Text",ExpressionUUID->"be776475-8693-40ad-85ce-45456beea311"],
Cell[CellGroupData[{
Cell[551630, 11930, 201, 3, 71, "Input",ExpressionUUID->"6350423e-8636-4fce-9d78-38679fa88d15"],
Cell[551834, 11935, 567, 10, 50, "Output",ExpressionUUID->"5610600d-90f8-4771-8bdc-7e2ce5f2f2e4"],
Cell[552404, 11947, 567, 10, 50, "Output",ExpressionUUID->"e4e03aed-2005-4b91-99a5-0d419978c492"]
}, Open  ]],
Cell[552986, 11960, 1484, 27, 222, "Text",ExpressionUUID->"a7c91594-92cd-4a6c-bbe8-04122ac2df98"],
Cell[CellGroupData[{
Cell[554495, 11991, 345, 8, 47, "Input",ExpressionUUID->"6d7cd40a-95b5-4447-aaa1-f5c37eefaf2c"],
Cell[554843, 12001, 456, 7, 50, "Output",ExpressionUUID->"3d759a4e-7eae-42a8-a13e-8c25952e783e"]
}, Open  ]],
Cell[555314, 12011, 393, 10, 54, "Text",ExpressionUUID->"c256859e-f171-44d3-a458-f7f17e779cd8"],
Cell[555710, 12023, 530, 16, 59, "DisplayFormula",ExpressionUUID->"9a25a0db-8800-4040-8f1c-3b16013d13ae"],
Cell[556243, 12041, 445, 10, 75, "Text",ExpressionUUID->"771bf713-72f9-426f-b9d6-fe1626299b75"],
Cell[CellGroupData[{
Cell[556713, 12055, 676, 17, 47, "Input",ExpressionUUID->"57a96140-44aa-4f4a-b1f2-b265dbcbedb0"],
Cell[557392, 12074, 1586, 25, 53, "Output",ExpressionUUID->"8e59269f-1c7b-420f-afcf-5d045b5e9030"]
}, Open  ]],
Cell[558993, 12102, 298, 8, 54, "Text",ExpressionUUID->"1835c600-2b95-4966-8321-3dcd88e7023a"],
Cell[559294, 12112, 501, 16, 70, "DisplayFormula",ExpressionUUID->"7918ff10-ceb2-4e0e-baf6-3f12ac673c7f"],
Cell[CellGroupData[{
Cell[559820, 12132, 616, 18, 73, "Input",ExpressionUUID->"788715a5-29f9-4744-a3e2-3a342f51133b"],
Cell[560439, 12152, 1074, 16, 50, "Output",ExpressionUUID->"2da12ffd-1941-4d32-8488-81af002f7e1e"]
}, Open  ]],
Cell[561528, 12171, 348, 7, 33, "Text",ExpressionUUID->"16b489ef-3f84-456d-84cf-7e9969d6566d"],
Cell[CellGroupData[{
Cell[561901, 12182, 204, 5, 49, "Input",ExpressionUUID->"66bceca6-0197-403e-bab1-b62780456afd"],
Cell[562108, 12189, 970, 14, 50, "Output",ExpressionUUID->"e7964b6c-bdca-44ff-8696-cb3d54bb62c7"]
}, Open  ]],
Cell[563093, 12206, 396, 8, 54, "Text",ExpressionUUID->"f295a908-afd7-4ab9-9d77-3655d8676527"],
Cell[563492, 12216, 283, 9, 27, "DisplayFormula",ExpressionUUID->"4add1605-7613-45c5-b4df-0a5a81ecbdf0"],
Cell[563778, 12227, 610, 10, 75, "Text",ExpressionUUID->"13233561-7764-4b60-8fe8-4eee94cd3436"],
Cell[564391, 12239, 506, 12, 54, "Text",ExpressionUUID->"154463fb-6633-48d6-9cb3-09169f5d2c74"],
Cell[564900, 12253, 450, 14, 70, "DisplayFormula",ExpressionUUID->"9260593c-3a80-41ca-b923-19f697d3d883"],
Cell[565353, 12269, 370, 8, 75, "Text",ExpressionUUID->"bdb9977f-67ab-42a4-a016-9d1b6d264f14"],
Cell[CellGroupData[{
Cell[565748, 12281, 1764, 40, 193, "Input",ExpressionUUID->"772957e9-9fe9-4a10-a819-4f76666c34af"],
Cell[567515, 12323, 1180, 18, 53, "Output",ExpressionUUID->"e200138d-e13e-4eec-8bc5-94709a7e9831"]
}, Open  ]],
Cell[568710, 12344, 1285, 27, 159, "Text",ExpressionUUID->"12388d10-5e11-463d-95ea-0650a6767439"],
Cell[569998, 12373, 640, 23, 62, "DisplayFormula",ExpressionUUID->"7ad91b24-3384-439d-9db6-ba24c4c68dfe"],
Cell[570641, 12398, 786, 14, 96, "Text",ExpressionUUID->"0f47e1f9-a405-457c-92fb-76870536da42"],
Cell[571430, 12414, 970, 34, 68, "DisplayFormula",ExpressionUUID->"54c7186f-b5e2-4c63-affe-7515a5a8cb02"],
Cell[CellGroupData[{
Cell[572425, 12452, 1985, 43, 122, "Input",ExpressionUUID->"4b87da94-34b4-477b-abc1-f4562d60cc1b"],
Cell[574413, 12497, 2302, 33, 50, "Output",ExpressionUUID->"69cfb736-4d10-48ff-9df0-660dfcde0997"]
}, Open  ]],
Cell[576730, 12533, 218, 5, 33, "Text",ExpressionUUID->"c65949a8-a7f1-4a70-94c0-de4ac34a9453"],
Cell[576951, 12540, 464, 15, 57, "DisplayFormula",ExpressionUUID->"6d58f5fd-4a19-4e90-8729-9db91a8927b9"],
Cell[577418, 12557, 355, 8, 54, "Text",ExpressionUUID->"e6ad7566-4988-45ed-b167-6ff6bcb5d4df"],
Cell[CellGroupData[{
Cell[577798, 12569, 2061, 54, 231, "Input",ExpressionUUID->"80734e0b-43e8-4c24-9a1f-e56410a76184"],
Cell[579862, 12625, 2399, 35, 50, "Output",ExpressionUUID->"e309a8f6-3aa9-4813-ab46-b0365a65a6c9"],
Cell[582264, 12662, 2398, 35, 50, "Output",ExpressionUUID->"16029b70-5114-4822-8729-40f6aa936d69"],
Cell[584665, 12699, 2401, 35, 50, "Output",ExpressionUUID->"cb4339fa-4373-4f21-932b-6fc004738847"]
}, Open  ]],
Cell[587081, 12737, 1048, 20, 78, "Text",ExpressionUUID->"e5767a12-c7a8-42d3-8e4f-c4c02867e166"],
Cell[CellGroupData[{
Cell[588154, 12761, 1378, 34, 163, "Input",ExpressionUUID->"627fc418-61f0-4f01-afa2-fe2c1afedfd6"],
Cell[589535, 12797, 2162, 33, 53, "Output",ExpressionUUID->"59f9ef7b-3f97-4063-bc3e-a46a458792f3"],
Cell[591700, 12832, 2170, 33, 53, "Output",ExpressionUUID->"bdacf2d5-220c-460e-ac32-accf1613cf0c"],
Cell[593873, 12867, 2158, 33, 53, "Output",ExpressionUUID->"8bfef811-ffe1-41a8-903e-65912895c2a2"],
Cell[596034, 12902, 2167, 33, 53, "Output",ExpressionUUID->"bfde4979-720d-491f-aca4-2c28d6d4fb53"],
Cell[598204, 12937, 2076, 30, 50, "Output",ExpressionUUID->"12c39590-1867-4fdd-b09a-e60803dc6dc5"]
}, Open  ]],
Cell[600295, 12970, 255, 6, 33, "Text",ExpressionUUID->"42f252aa-80f3-41bc-9fad-7f2117c45552"],
Cell[600553, 12978, 423, 11, 75, "Text",ExpressionUUID->"de9b1cb1-cbc3-4e7a-b815-115ff93b347f"],
Cell[600979, 12991, 668, 21, 59, "DisplayFormula",ExpressionUUID->"c5b840d9-7831-4d7e-be3b-7863ba578e43"],
Cell[601650, 13014, 368, 9, 75, "Text",ExpressionUUID->"302c9dcc-b385-4bdb-ba0b-56bd7a0f5ce7"],
Cell[602021, 13025, 415, 13, 56, "DisplayFormula",ExpressionUUID->"42db5177-3e1f-422e-b9d5-4b3c051f89dc"],
Cell[CellGroupData[{
Cell[602461, 13042, 2097, 52, 145, "Input",ExpressionUUID->"54456930-c7e4-480c-9771-455a030221fa"],
Cell[604561, 13096, 2316, 36, 57, "Output",ExpressionUUID->"23cf98f2-fc30-45cd-9151-22526a6fc719"],
Cell[606880, 13134, 2268, 35, 50, "Output",ExpressionUUID->"7dae8e29-4840-4b53-b63f-2a16bfbb39a5"]
}, Open  ]],
Cell[609163, 13172, 1662, 26, 180, "Text",ExpressionUUID->"b57cc2b3-6935-49cd-a4b5-680993b44bf5"],
Cell[CellGroupData[{
Cell[610850, 13202, 3954, 102, 353, "Input",ExpressionUUID->"2fee6fb7-a1ef-4771-9605-6211d950a1ab"],
Cell[614807, 13306, 2242, 34, 50, "Output",ExpressionUUID->"d238005c-ba20-44bf-8921-69f0cd0c04f3"],
Cell[617052, 13342, 2243, 34, 50, "Output",ExpressionUUID->"3d70bee2-79b4-4ca9-89b6-aa2df7e6dc20"],
Cell[619298, 13378, 2248, 34, 50, "Output",ExpressionUUID->"0018d3c0-948d-4f2d-b716-ba1957db0720"],
Cell[621549, 13414, 2308, 36, 57, "Output",ExpressionUUID->"83ac7035-81ea-45a6-9895-884fcbeab768"],
Cell[623860, 13452, 2257, 35, 50, "Output",ExpressionUUID->"eb5ac342-41d0-41a3-a18f-ca4462d48c1b"]
}, Open  ]],
Cell[626132, 13490, 709, 16, 78, "Text",ExpressionUUID->"26c730f8-c04d-4490-9a11-43f32044e105"],
Cell[CellGroupData[{
Cell[626866, 13510, 1167, 26, 110, "Input",ExpressionUUID->"8c567f76-3c2c-40f8-8623-9cff78fd677a"],
Cell[628036, 13538, 1030, 15, 52, "Output",ExpressionUUID->"e33632b6-1c58-4862-8d5a-3985b14748ec"],
Cell[629069, 13555, 1030, 15, 50, "Output",ExpressionUUID->"5d3c5220-4a17-4b7b-929d-708613f411eb"]
}, Open  ]],
Cell[630114, 13573, 1502, 27, 195, "Text",ExpressionUUID->"939102b3-ecdf-4913-a35d-9c501846a2dd"],
Cell[631619, 13602, 639, 20, 55, "DisplayFormula",ExpressionUUID->"ffeab87f-4843-437a-9654-262b6bd65b3e"],
Cell[632261, 13624, 1243, 29, 141, "Text",ExpressionUUID->"ad89ff4f-4fb8-4d3c-b6e9-268f93a9ad3b"],
Cell[633507, 13655, 2582, 48, 375, "Text",ExpressionUUID->"94afe4b5-03e3-4bbb-8a81-bc7aa6ea1779"],
Cell[CellGroupData[{
Cell[636114, 13707, 544, 14, 71, "Input",ExpressionUUID->"06cc8a49-b281-406c-bd37-b371460c7c02"],
Cell[636661, 13723, 857, 14, 53, "Output",ExpressionUUID->"9109ebf0-667b-4149-a166-be33fb940228"],
Cell[637521, 13739, 141983, 2342, 253, "Output",ExpressionUUID->"f282153e-527f-4ac6-ba98-15a119cd7fde"]
}, Open  ]],
Cell[779519, 16084, 2468, 59, 255, "Input",ExpressionUUID->"eedbf07e-2904-48df-8e14-5db988b08972"],
Cell[CellGroupData[{
Cell[782012, 16147, 819, 18, 71, "Input",ExpressionUUID->"6f256afd-c58e-49a1-966e-3ef74b678ac8"],
Cell[782834, 16167, 1417, 22, 53, "Output",ExpressionUUID->"79abdd8b-e59b-432c-8b75-775b1c3e183b"],
Cell[784254, 16191, 143276, 2362, 253, "Output",ExpressionUUID->"9a619095-17be-4da8-a1f4-45973bfb4271"]
}, Open  ]],
Cell[927545, 18556, 440, 10, 75, "Text",ExpressionUUID->"83c80b82-a50b-4fb6-8479-5cbdcd47f34f"],
Cell[CellGroupData[{
Cell[928010, 18570, 1785, 50, 274, "Input",ExpressionUUID->"b915d6be-98e9-4b30-9f62-16867521c9cb"],
Cell[929798, 18622, 1175, 18, 53, "Output",ExpressionUUID->"245c39d6-a21a-4689-b288-61f26a14e8cb"],
Cell[930976, 18642, 9712, 177, 252, "Output",ExpressionUUID->"f20bfd34-9cd8-4470-bd06-c6c20dbe89d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[940725, 18824, 1089, 24, 117, "Input",ExpressionUUID->"3eec1d6f-6b00-4e38-b640-589438fbf1d9"],
Cell[941817, 18850, 976, 15, 50, "Output",ExpressionUUID->"ec6ffcf1-ec37-4861-9458-b07ee37cc0ff"],
Cell[942796, 18867, 978, 15, 50, "Output",ExpressionUUID->"7f2c6249-aa85-44be-8a71-ef87906e97ad"],
Cell[943777, 18884, 977, 15, 50, "Output",ExpressionUUID->"14e662fb-6013-4cd0-95ae-d792476377fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[944791, 18904, 1193, 25, 117, "Input",ExpressionUUID->"c82b1cea-c11d-4eac-b971-eef2bfbe57cc"],
Cell[945987, 18931, 1186, 18, 50, "Output",ExpressionUUID->"bf12e511-d7e8-434e-aedd-d81148c580a5"],
Cell[947176, 18951, 1188, 18, 50, "Output",ExpressionUUID->"968f8632-0fa3-4528-9413-f5991ee4fba5"],
Cell[948367, 18971, 1185, 18, 50, "Output",ExpressionUUID->"9776fba5-b42b-4bc8-b530-d51aa6367541"]
}, Open  ]],
Cell[949567, 18992, 496, 9, 54, "Text",ExpressionUUID->"1363e0f5-27f8-49a2-9adb-914a674af7bd"],
Cell[CellGroupData[{
Cell[950088, 19005, 2136, 64, 228, "Input",ExpressionUUID->"fc97234c-0895-4b2e-bbb8-14a2f8ee54e6"],
Cell[952227, 19071, 1032, 16, 50, "Output",ExpressionUUID->"9c145fcc-0e66-4af5-9636-6c2bc9180af1"],
Cell[953262, 19089, 1039, 17, 50, "Output",ExpressionUUID->"6f03d63e-5ce1-4c04-82db-4f2e422ec706"],
Cell[954304, 19108, 1054, 17, 53, "Output",ExpressionUUID->"3f740610-26d8-4c12-a298-caf3e2717219"]
}, Open  ]],
Cell[CellGroupData[{
Cell[955395, 19130, 2132, 62, 251, "Input",ExpressionUUID->"42bc8ce6-fc0b-484a-a6c0-ace28c361b69"],
Cell[957530, 19194, 962, 15, 53, "Output",ExpressionUUID->"3325a82e-7ce4-4a89-965a-27f16950d583"],
Cell[958495, 19211, 970, 16, 53, "Output",ExpressionUUID->"d6e6161b-b2ea-4eae-93d0-c4aff8593665"],
Cell[959468, 19229, 970, 16, 53, "Output",ExpressionUUID->"29527016-d3ac-41f0-960f-de34545eb96c"]
}, Open  ]],
Cell[960453, 19248, 955, 17, 117, "Text",ExpressionUUID->"fd6ea253-f2d5-4f08-b266-0df71c0717ae"],
Cell[CellGroupData[{
Cell[961433, 19269, 824, 17, 108, "Input",ExpressionUUID->"b89f26ec-75ec-40f8-9380-11850cf081b5"],
Cell[962260, 19288, 1122, 16, 50, "Output",ExpressionUUID->"2ad32c26-f98d-4a79-81da-b2978479875e"],
Cell[963385, 19306, 1121, 16, 50, "Output",ExpressionUUID->"c5f1a324-56df-4345-8078-10a9c6535794"]
}, Open  ]],
Cell[964521, 19325, 340, 8, 33, "Text",ExpressionUUID->"b4624ad5-49c6-498c-b0a2-66daa23db091"],
Cell[964864, 19335, 615, 21, 100, "DisplayFormula",ExpressionUUID->"d06e1b58-4240-4ac7-8bf7-541047540ecf"],
Cell[CellGroupData[{
Cell[965504, 19360, 541, 14, 94, "Input",ExpressionUUID->"a14745ab-772b-4d71-82cd-1670bb1780dd"],
Cell[966048, 19376, 910, 13, 50, "Output",ExpressionUUID->"c7e1d8df-ea07-4a18-aeea-e8806eba2296"]
}, Open  ]],
Cell[966973, 19392, 175, 3, 33, "Text",ExpressionUUID->"38370620-a21b-4cb2-938d-89ef0bcca2b9"],
Cell[967151, 19397, 660, 22, 100, "DisplayFormula",ExpressionUUID->"88aca169-0a9a-46bb-979d-7431cb5410df"],
Cell[CellGroupData[{
Cell[967836, 19423, 443, 14, 96, "Input",ExpressionUUID->"e70cc6ab-8ac7-4ba2-85f5-05cf9b49c90a"],
Cell[968282, 19439, 784, 12, 50, "Output",ExpressionUUID->"cc0b39fa-623f-4c01-b473-fa8a5bcd9dcc"]
}, Open  ]],
Cell[969081, 19454, 851, 16, 138, "Text",ExpressionUUID->"26f5d126-c7da-4d36-af0d-56143517141d"],
Cell[CellGroupData[{
Cell[969957, 19474, 2416, 71, 301, "Input",ExpressionUUID->"98ebd454-9aef-4aa2-aca1-49004f2f104f"],
Cell[972376, 19547, 885, 13, 50, "Output",ExpressionUUID->"31a83539-456a-44bd-add6-9ef43128892c"],
Cell[973264, 19562, 886, 13, 50, "Output",ExpressionUUID->"707be0e5-6622-492b-8431-03c0749b99d9"],
Cell[974153, 19577, 886, 13, 50, "Output",ExpressionUUID->"f865353b-ee32-4bfe-9fe2-a98af0571573"],
Cell[975042, 19592, 888, 13, 50, "Output",ExpressionUUID->"21240159-ff31-4463-a27b-1a642aceb67d"],
Cell[975933, 19607, 888, 13, 50, "Output",ExpressionUUID->"63d8be46-c104-44b7-acd2-1f82f5126a87"]
}, Open  ]],
Cell[CellGroupData[{
Cell[976858, 19625, 5721, 150, 485, "Input",ExpressionUUID->"b8f1c06f-92f6-4a1b-a904-51df8c618bd4"],
Cell[982582, 19777, 983, 15, 53, "Output",ExpressionUUID->"04da7150-e3c1-4121-8990-da18a40744e8"],
Cell[983568, 19794, 982, 14, 50, "Output",ExpressionUUID->"4e19b5a3-57a1-4ed8-b660-a9a6f17dc6fa"],
Cell[984553, 19810, 982, 14, 50, "Output",ExpressionUUID->"20e2fb55-0341-4d01-9423-bd3c465fe2dc"],
Cell[985538, 19826, 982, 14, 50, "Output",ExpressionUUID->"03a26246-9a94-4336-bd6e-745880c5c393"],
Cell[986523, 19842, 981, 14, 50, "Output",ExpressionUUID->"bde7ba53-ab24-4e1e-910d-2e50acf02dd0"],
Cell[987507, 19858, 980, 14, 50, "Output",ExpressionUUID->"5e307244-7167-41a7-a1a9-6632b04b3780"]
}, Open  ]],
Cell[988502, 19875, 683, 11, 54, "Text",ExpressionUUID->"c6581a0b-1225-46b1-a397-e50d103cda1f"],
Cell[CellGroupData[{
Cell[989210, 19890, 1195, 28, 140, "Input",ExpressionUUID->"2c401e57-8b15-4146-b159-8ae7a4a88558"],
Cell[990408, 19920, 1153, 22, 58, "Output",ExpressionUUID->"e92b2f90-f875-4198-83ec-9bb464fae2ed"],
Cell[991564, 19944, 1147, 22, 58, "Output",ExpressionUUID->"ad9b80b1-6d47-41b0-9049-3aa9cfb08330"],
Cell[992714, 19968, 1153, 22, 58, "Output",ExpressionUUID->"28a9d5ab-2b1c-4d10-9f44-f63017a7e6d1"],
Cell[993870, 19992, 1147, 22, 58, "Output",ExpressionUUID->"62c06529-4f6c-49ed-a3d7-1fac8f9fc186"]
}, Open  ]],
Cell[995032, 20017, 473, 9, 54, "Text",ExpressionUUID->"8ad51b13-073f-4aa5-bb74-fc7d96ad964b"],
Cell[CellGroupData[{
Cell[995530, 20030, 1522, 40, 155, "Input",ExpressionUUID->"5ab10535-9fa6-4cad-b3df-d397400b4cd4"],
Cell[997055, 20072, 769, 14, 53, "Output",ExpressionUUID->"ca9f38e6-f344-4d7b-8997-674a7b5ccf23"],
Cell[997827, 20088, 770, 14, 53, "Output",ExpressionUUID->"f4be3d51-3a4b-4eaf-a6eb-b6ed130797c7"]
}, Open  ]],
Cell[998612, 20105, 783, 20, 75, "Text",ExpressionUUID->"a80c2453-57eb-4678-a584-b76ee76e0fe7"],
Cell[CellGroupData[{
Cell[999420, 20129, 1348, 36, 208, "Input",ExpressionUUID->"ac485948-b1de-43b3-b2ff-5fa758b69ec0"],
Cell[1000771, 20167, 781, 12, 50, "Output",ExpressionUUID->"b9a04881-2cc7-4427-a3ea-cf7ae2248571"]
}, Open  ]],
Cell[1001567, 20182, 406, 11, 96, "Text",ExpressionUUID->"fb24ffb2-6d91-4a40-955b-e24d562217f1"],
Cell[1001976, 20195, 4791, 125, 533, "Input",ExpressionUUID->"1d8ed042-2eb5-42b6-aaf2-d5df895804af"],
Cell[CellGroupData[{
Cell[1006792, 20324, 5754, 111, 287, "Input",ExpressionUUID->"f4a8e3a4-9eda-41fb-8b8f-47835359c4a2"],
Cell[1012549, 20437, 21760, 367, 153, "Output",ExpressionUUID->"63896a71-88af-4194-ba5d-6817cec5a1c3"],
Cell[1034312, 20806, 3280, 47, 53, "Output",ExpressionUUID->"bc1e0bd9-5a39-4292-b301-b8ae7ba5413d"],
Cell[1037595, 20855, 13294, 267, 360, "Output",ExpressionUUID->"5b4e7d78-0feb-4ee6-91ba-9ca297a1fcbe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050926, 21127, 1115, 32, 117, "Input",ExpressionUUID->"67268a53-7204-4885-8be2-e76d40a43240"],
Cell[1052044, 21161, 263, 6, 53, "Output",ExpressionUUID->"706c0454-d2ee-48e6-a265-65a4becd5b44"],
Cell[1052310, 21169, 18402, 319, 387, "Output",ExpressionUUID->"e6e3f7f7-16ad-474d-a43f-206d08048aa9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1070749, 21493, 1139, 33, 117, "Input",ExpressionUUID->"5b808470-df52-4779-8ae9-b01cdc8f410b"],
Cell[1071891, 21528, 236, 6, 53, "Output",ExpressionUUID->"6a4c2f4a-417f-4dd8-81de-88900ad4510a"],
Cell[1072130, 21536, 15831, 277, 387, "Output",ExpressionUUID->"1e1a9f11-0f77-4505-9943-4f3a50c85b55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1087998, 21818, 1722, 43, 124, "Input",ExpressionUUID->"ea62d812-22b2-4fc7-897f-1d0aad436ffc"],
Cell[1089723, 21863, 538, 11, 53, "Output",ExpressionUUID->"d3100c8e-e145-4ab8-a0bc-af05d39a8661"],
Cell[1090264, 21876, 80429, 1535, 389, "Output",ExpressionUUID->"d7df4830-e3c2-4e5b-9d21-0c801e961abb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1170730, 23416, 1109, 32, 117, "Input",ExpressionUUID->"95535e26-aeda-4221-9152-08a8c17200ed"],
Cell[1171842, 23450, 285, 7, 53, "Output",ExpressionUUID->"111472f1-a2ae-4b4f-9cf0-3bd838169f97"],
Cell[1172130, 23459, 44018, 781, 387, "Output",ExpressionUUID->"9ff417b7-908c-4330-a066-a01e18295b8b"]
}, Open  ]],
Cell[1216163, 24243, 849, 16, 96, "Text",ExpressionUUID->"9342cdcd-75e3-4600-8964-8909aaf5e72f"],
Cell[CellGroupData[{
Cell[1217037, 24263, 563, 15, 103, "Input",ExpressionUUID->"968d6e29-3666-42ae-9354-549c712a0ec6"],
Cell[1217603, 24280, 710, 14, 22, "Message",ExpressionUUID->"9047b764-905e-4533-9bfb-da9b4f6481af"],
Cell[1218316, 24296, 703, 16, 80, "Output",ExpressionUUID->"f9541b1d-d6d9-4c4d-8af9-6c85774e1237"],
Cell[1219022, 24314, 713, 16, 70, "Output",ExpressionUUID->"df79ddb0-bea8-4c0d-aabe-5c2512312912"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1219772, 24335, 2534, 65, 314, "Input",ExpressionUUID->"4ded93c7-19aa-4b5c-8e71-ac774f578733"],
Cell[1222309, 24402, 875, 13, 50, "Output",ExpressionUUID->"f5ad1b93-ca31-44d9-81a4-ede45699869e"],
Cell[1223187, 24417, 859, 13, 50, "Output",ExpressionUUID->"af8361a8-e461-40ab-b7fd-4608fc7d66b3"],
Cell[1224049, 24432, 8681, 157, 472, "Output",ExpressionUUID->"11226ab5-21fa-4249-9f68-bbbab6b6947d"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1232779, 24595, 183, 6, 160, "Title",ExpressionUUID->"9949c8f5-aa9b-4581-b0b9-c9443bb2c0db"],
Cell[CellGroupData[{
Cell[1232987, 24605, 2343, 62, 319, "Input",ExpressionUUID->"4c0c436f-7298-4f57-a662-e8eb47dd52b7"],
Cell[1235333, 24669, 2328, 39, 67, "Output",ExpressionUUID->"fa4fc471-7832-4a6d-ad36-d51a617565cd"],
Cell[1237664, 24710, 2168, 32, 50, "Output",ExpressionUUID->"b46ecb97-50ca-4896-a1a8-1ea3e9aabe8e"],
Cell[1239835, 24744, 2330, 39, 67, "Output",ExpressionUUID->"d93d5e57-ca84-4dbc-9cde-2b4747687ffd"],
Cell[1242168, 24785, 2170, 32, 50, "Output",ExpressionUUID->"75d5e94e-e772-4b2c-a042-c8fd4f1c1e85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1244375, 24822, 2550, 62, 362, "Input",ExpressionUUID->"fca270d9-9637-460b-89c1-7672688f1315"],
Cell[1246928, 24886, 2156, 32, 50, "Output",ExpressionUUID->"fccb5c4b-5afe-422f-aba4-bc9ce3a5a60c"],
Cell[1249087, 24920, 2167, 32, 50, "Output",ExpressionUUID->"f8f3e4bd-c050-406a-ac9f-7452d5757b4f"],
Cell[1251257, 24954, 2156, 32, 50, "Output",ExpressionUUID->"33a38228-31be-4333-aaef-8a95f739139a"],
Cell[1253416, 24988, 2194, 32, 50, "Output",ExpressionUUID->"03eeb2d6-f8ba-4b99-b60e-c8323144ea65"],
Cell[1255613, 25022, 6792, 126, 252, "Output",ExpressionUUID->"4728f65f-a8ed-487c-b139-10055f1fbea3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262442, 25153, 3414, 97, 186, "Input",ExpressionUUID->"9e2072b0-cb51-42ff-8ac3-5c9434373ad2"],
Cell[1265859, 25252, 2211, 34, 50, "Output",ExpressionUUID->"6aecbf42-eaf0-456b-8c00-5e2c314b5822"],
Cell[1268073, 25288, 2211, 34, 50, "Output",ExpressionUUID->"1e72df3f-17fd-49ea-8dd7-d97706852013"],
Cell[1270287, 25324, 2212, 34, 50, "Output",ExpressionUUID->"dc824d07-2679-4a51-80a0-25fe955c382c"],
Cell[1272502, 25360, 2211, 34, 50, "Output",ExpressionUUID->"1931f5d7-6d58-42d2-a34a-23141e1a57c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1274750, 25399, 1032, 27, 163, "Input",ExpressionUUID->"376445e5-4685-4b68-af91-4163ff0537e4"],
Cell[1275785, 25428, 7112, 132, 252, "Output",ExpressionUUID->"9f593fc8-fbc2-4803-8cee-85f3cc6d27a1"],
Cell[1282900, 25562, 1821, 28, 64, "Output",ExpressionUUID->"7ad96df5-7662-4737-9496-b11e58beeab4"],
Cell[1284724, 25592, 1813, 27, 50, "Output",ExpressionUUID->"16043ff8-1bbe-4854-b9f0-f3156ff21760"]
}, Open  ]],
Cell[1286552, 25622, 229, 6, 33, "Text",ExpressionUUID->"62166b37-f963-4c96-8e1a-e7922ca7bff4"],
Cell[1286784, 25630, 5800, 113, 252, "Output",ExpressionUUID->"8bb6959f-e345-4108-b8f3-531158254a89"],
Cell[CellGroupData[{
Cell[1292609, 25747, 6146, 157, 531, "Input",ExpressionUUID->"948b9986-d6c3-4908-9152-819a13babc64"],
Cell[1298758, 25906, 3952, 79, 547, "Output",ExpressionUUID->"2d54dfb4-4e3d-4416-ac49-3310a4e7f243"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1302747, 25990, 2709, 73, 416, "Input",ExpressionUUID->"18461649-926a-4072-81cc-be0ec371c4a9"],
Cell[1305459, 26065, 1741, 28, 50, "Output",ExpressionUUID->"5aa10b64-297e-495a-aaa7-c1cf80a3d3ee"],
Cell[1307203, 26095, 336701, 6524, 256, "Output",ExpressionUUID->"e76804ca-b6e9-432d-a27d-161932b16b5a"],
Cell[1643907, 32621, 23556, 399, 271, "Output",ExpressionUUID->"8928e894-9a2a-4f96-a187-335130cf9fb6"],
Cell[1667466, 33022, 150211, 2491, 449, "Output",ExpressionUUID->"469b358a-d91f-46e0-9f27-26bd213158c5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1817714, 35518, 972, 26, 94, "Input",ExpressionUUID->"13da31f6-caac-41db-91c1-c42adf52cd7b"],
Cell[1818689, 35546, 104737, 1717, 393, "Output",ExpressionUUID->"2a18c298-f7cc-4951-824a-1cd675e7a231"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1923463, 37268, 998, 28, 117, "Input",ExpressionUUID->"c66e0bbd-85a1-4c1f-9b84-2b923eb99f19"],
Cell[1924464, 37298, 14614, 245, 215, "Output",ExpressionUUID->"07d0d606-6bef-428f-ac3a-55a770a0428d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1939115, 37548, 5111, 141, 324, "Input",ExpressionUUID->"50666653-0e9d-4f92-b668-f30d32c72d5f"],
Cell[1944229, 37691, 4511, 113, 117, "Output",ExpressionUUID->"dae8e2d6-7637-4e96-b0af-3a2b35311f48"],
Cell[1948743, 37806, 2008, 32, 53, "Output",ExpressionUUID->"04684532-3595-478a-84c7-8232b99d3599"],
Cell[1950754, 37840, 14341, 251, 256, "Output",ExpressionUUID->"af2efb1f-f075-4ac0-9b95-5c4b799c5d6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1965132, 38096, 1343, 38, 117, "Input",ExpressionUUID->"a9dcfb52-6260-43dd-ba26-78819309c69e"],
Cell[1966478, 38136, 1869, 33, 59, "Output",ExpressionUUID->"1b55e44b-7dee-419a-95fe-6a392dbfc4a5"],
Cell[1968350, 38171, 5245, 110, 252, "Output",ExpressionUUID->"be5a80d9-4f3e-4312-acb8-71347f007403"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1973632, 38286, 3825, 100, 347, "Input",ExpressionUUID->"38fb45f3-5ac6-4c1b-baf4-19e233542134"],
Cell[1977460, 38388, 27688, 468, 381, "Output",ExpressionUUID->"16895a6b-312d-4040-a82d-b419edf89068"],
Cell[2005151, 38858, 1619, 23, 50, "Output",ExpressionUUID->"c35923b6-fcbf-4fd9-b1b5-5c1dc81f7282"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2006807, 38886, 3056, 78, 255, "Input",ExpressionUUID->"d08b281f-7d33-4797-b03c-35c295ec3043"],
Cell[2009866, 38966, 1539, 23, 50, "Output",ExpressionUUID->"be0d41b2-d563-4d19-829e-53bf1576c8de"],
Cell[2011408, 38991, 1547, 23, 50, "Output",ExpressionUUID->"e1da7aab-b46a-43db-be97-b908af1c8404"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2013004, 39020, 227, 7, 160, "Title",ExpressionUUID->"ef3d9b47-8133-456b-9e36-b6d0253b0d6a"],
Cell[2013234, 39029, 6106, 96, 1125, "Text",ExpressionUUID->"c1cf8328-d9cb-476f-a543-3635f52b5fc6"],
Cell[CellGroupData[{
Cell[2019365, 39129, 1691, 39, 278, "Input",ExpressionUUID->"7c8ad749-3856-4e2f-ac63-7d5724014ada"],
Cell[2021059, 39170, 206953, 3392, 465, "Output",ExpressionUUID->"754d3f16-8c3a-48b3-8ce0-d416f56b35a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2228049, 42567, 3527, 88, 347, "Input",ExpressionUUID->"f171ce58-9374-4ae7-8550-ee8a5605daea"],
Cell[2231579, 42657, 5274, 99, 256, "Output",ExpressionUUID->"251ce2e7-5073-4f11-ba71-774ac6132db5"],
Cell[2236856, 42758, 5245, 99, 268, "Output",ExpressionUUID->"9c5cb52f-ea5b-4ba0-8eb9-446edfb3f0e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2242138, 42862, 3189, 83, 301, "Input",ExpressionUUID->"dee57b5a-658d-4194-8efa-998b785bdd01"],
Cell[2245330, 42947, 7269, 123, 465, "Output",ExpressionUUID->"33a4bb39-d89a-4d08-b332-a4eccc2bd7a1"],
Cell[2252602, 43072, 2159, 31, 50, "Output",ExpressionUUID->"7b57a6cf-9f50-4c2f-b1a5-e798565bf752"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2254798, 43108, 4990, 118, 416, "Input",ExpressionUUID->"7a1273cd-3f66-4022-8667-d22a98700929"],
Cell[2259791, 43228, 1647, 24, 50, "Output",ExpressionUUID->"f486b109-262c-485c-89ca-06becadbc2be"],
Cell[2261441, 43254, 16458, 241, 753, "Output",ExpressionUUID->"6854225b-5fae-422c-852c-4eb71a52502d"]
}, Open  ]],
Cell[2277914, 43498, 597, 12, 75, "Text",ExpressionUUID->"33ab6bbc-7f4e-48a9-a807-2db4e2ddeb8e"],
Cell[CellGroupData[{
Cell[2278536, 43514, 1195, 35, 186, "Input",ExpressionUUID->"ee17fe73-72d1-4703-9da7-b956bb731a18"],
Cell[2279734, 43551, 1453, 21, 50, "Output",ExpressionUUID->"4dc62806-bc1f-4aba-8960-097ccccf8a73"],
Cell[2281190, 43574, 1456, 21, 50, "Output",ExpressionUUID->"215081b7-a598-458c-bf34-b42425ad3905"],
Cell[2282649, 43597, 2732, 58, 258, "Output",ExpressionUUID->"55c6fd94-a3cd-43df-b27d-c5dc2c73fbcb"]
}, Open  ]]
}, Open  ]]
}
]
*)

